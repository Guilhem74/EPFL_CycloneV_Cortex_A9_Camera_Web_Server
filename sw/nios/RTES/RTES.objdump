
RTES.elf:     file format elf32-littlenios2
RTES.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04020244

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00017734 memsz 0x00017734 flags r-x
    LOAD off    0x00018754 vaddr 0x04037754 paddr 0x04039240 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001ad2c vaddr 0x0403ad2c paddr 0x0403ad2c align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00016df4  04020244  04020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000071c  04037038  04037038  00018038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  04037754  04039240  00018754  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  0403ad2c  0403ad2c  0001ad2c  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM_Controller 00000000  00000000  00000000  0001a240  2**0
                  CONTENTS
  7 .OnChip_Memory 00000000  0403ae90  0403ae90  0001a240  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001a240  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000012c0  00000000  00000000  0001a268  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002f16b  00000000  00000000  0001b528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000be7e  00000000  00000000  0004a693  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000f869  00000000  00000000  00056511  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002e78  00000000  00000000  00065d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000042d2  00000000  00000000  00068bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001f1d5  00000000  00000000  0006cec6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0008c09c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002008  00000000  00000000  0008c100  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00091f6e  2**0
                  CONTENTS, READONLY
 19 .cpu          00000004  00000000  00000000  00091f71  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00091f75  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00091f76  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  00091f77  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  00091f80  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  00091f89  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000a  00000000  00000000  00091f92  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000031  00000000  00000000  00091f9c  2**0
                  CONTENTS, READONLY
 27 .jdi          00004db7  00000000  00000000  00091fcd  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     002b360f  00000000  00000000  00096d84  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
04020244 l    d  .text	00000000 .text
04037038 l    d  .rodata	00000000 .rodata
04037754 l    d  .rwdata	00000000 .rwdata
0403ad2c l    d  .bss	00000000 .bss
00000000 l    d  .SDRAM_Controller	00000000 .SDRAM_Controller
0403ae90 l    d  .OnChip_Memory	00000000 .OnChip_Memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/Guilhem/Desktop/EPFL_CycloneV/sw/nios/RTES/RTES_bsp//obj/HAL/src/crt0.o
0402028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 Accelerator_Grayscale.c
00000000 l    df *ABS*	00000000 C_Grayscale.c
00000000 l    df *ABS*	00000000 Camera_function.c
00000000 l    df *ABS*	00000000 Create_Image.c
00000000 l    df *ABS*	00000000 hello_world.c
04021220 l     F .text	00000154 TRDB_D5M_log2
04021374 l     F .text	0000004c TRDB_D5M_shift_amount
040213c0 l     F .text	00000060 TRDB_D5M_READ
04021420 l     F .text	0000007c TRDB_D5M_WRITE
00000000 l    df *ABS*	00000000 i2c.c
04022008 l     F .text	00000034 i2c_usleep
0402203c l     F .text	00000044 wait_end_of_transfer
04022080 l     F .text	00000070 set_data_control
040220f0 l     F .text	00000064 get_data_set_control
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
040243d0 l     F .text	00000008 __fp_unlock
040243e4 l     F .text	0000019c __sinit.part.1
04024580 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
04037754 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
040260f0 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04037466 l     O .rodata	00000010 zeroes.4389
04037476 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
04037486 l     O .rodata	00000010 zeroes.4404
0402a9b8 l     F .text	000000bc __sbprintf
04037496 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
0402ac7c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
04037fa0 l     O .rwdata	00000020 lc_ctype_charset
04037f80 l     O .rwdata	00000020 lc_message_charset
04037fc0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
040374c4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
040375f8 l     O .rodata	00000010 blanks.4332
040375e8 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
0402faa0 l     F .text	000000fc __sprint_r.part.0
04037618 l     O .rodata	00000010 blanks.4348
04037608 l     O .rodata	00000010 zeroes.4349
0403102c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
04033fb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
040340c0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
040340ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
040341d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
040342b8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
040343a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
04034578 l     F .text	0000003c alt_get_errno
040345b4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
04034a34 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04039230 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
04034cb0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
04034de4 l     F .text	00000034 alt_dev_reg
040381a0 l     O .rwdata	00001060 JTAG_UART
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
040350cc l     F .text	0000020c altera_avalon_jtag_uart_irq
040352d8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 perf_print_formatted_report.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
04035fe8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
04036698 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_exit.c
0403ad64 g     O .bss	00000004 alt_instruction_exception_handler
040209c0 g     F .text	00000074 Camera_Acquisition_Module_SETUP_Length_Frame
0402de08 g     F .text	00000074 _mprec_log10
0402def4 g     F .text	0000008c __any_on
0402ca6c g     F .text	00000054 _isatty_r
040374d0 g     O .rodata	00000028 __mprec_tinytens
040344b4 g     F .text	0000007c alt_main
0402601c g     F .text	000000c0 _puts_r
0403ad90 g     O .bss	00000100 alt_irq
0402cb9c g     F .text	00000060 _lseek_r
04039240 g       *ABS*	00000000 __flash_rwdata_start
0402c504 g     F .text	000000ac __sflags
04033338 g     F .text	00000088 .hidden __eqdf2
0403ae90 g       *ABS*	00000000 __alt_heap_start
04025fe0 g     F .text	0000003c printf
0403150c g     F .text	0000009c _wcrtomb_r
040264d0 g     F .text	0000005c __sseek
04024720 g     F .text	00000010 __sinit
04035a78 g     F .text	00000024 alt_get_cpu_freq
040313b4 g     F .text	00000140 __swbuf_r
0402cac0 g     F .text	0000007c _setlocale_r
04024588 g     F .text	00000068 __sfmoreglue
04034554 g     F .text	00000024 __malloc_unlock
0402ce28 g     F .text	0000015c memmove
04035a9c g     F .text	00000280 perf_print_formatted_report
04020c24 g     F .text	000001cc Capture_Image_Computer
04024708 g     F .text	00000018 _cleanup
0402cf84 g     F .text	000000a8 _Balloc
04023490 g     F .text	00000070 .hidden __fixsfsi
040333c0 g     F .text	000000dc .hidden __gtdf2
0403697c g     F .text	00000024 altera_nios2_gen2_irq_init
04022264 g     F .text	0000012c i2c_write
04020000 g     F .entry	0000001c __reset
04020020 g       *ABS*	00000000 __flash_exceptions_start
0402517c g     F .text	0000005c _fstat_r
0403ad30 g     O .bss	00000004 errno
0402644c g     F .text	00000008 __seofread
04021dd8 g     F .text	00000048 init_I2C
0402e864 g     F .text	0000123c ___svfiprintf_internal_r
04020ea8 g     F .text	00000118 Extract_Colors
0403ad50 g     O .bss	00000004 alt_argv
04041200 g       *ABS*	00000000 _gp
04034c80 g     F .text	00000030 usleep
04022fac g     F .text	000004e4 .hidden __subsf3
04020000 g       *ABS*	00000000 __alt_mem_OnChip_Memory
04038020 g     O .rwdata	00000180 alt_fd_list
04036188 g     F .text	00000090 alt_find_dev
0402cce0 g     F .text	00000148 memcpy
040243d8 g     F .text	0000000c _cleanup_r
040224d8 g     F .text	00000194 i2c_write_array
04023d3c g     F .text	000000dc .hidden __floatsidf
0403675c g     F .text	0000007c alt_io_redirect
0403349c g     F .text	000000f4 .hidden __ltdf2
04037038 g       *ABS*	00000000 __DTOR_END__
040260dc g     F .text	00000014 puts
04036a30 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0402e544 g     F .text	00000074 __fpclassifyd
0402dd64 g     F .text	000000a4 __ratio
04031010 g     F .text	0000001c __vfiprintf_internal
04020290 g     F .text	00000104 Test_Accelerator_Grayscale_Table
040354d0 g     F .text	0000021c altera_avalon_jtag_uart_read
04025fb0 g     F .text	00000030 _printf_r
0402149c g     F .text	000001f4 Table_Grayscale
0402296c g     F .text	00000064 .hidden __udivsi3
04034214 g     F .text	000000a4 isatty
04037520 g     O .rodata	000000c8 __mprec_tens
04020ae4 g     F .text	000000d0 Camera_Acquisition_Module_Display_Registers
0402cb3c g     F .text	0000000c __locale_charset
04020394 g     F .text	0000008c Accelerator_Grayscale_Table
040369a0 g     F .text	00000090 alt_icache_flush
0403ad3c g     O .bss	00000004 __malloc_top_pad
040217b8 g     F .text	0000015c Fill_Memory_RGBG
04035a18 g     F .text	00000040 perf_get_num_starts
04039210 g     O .rwdata	00000004 __mb_cur_max
04021b84 g     F .text	000001f4 Camera_Configuration
0402cb6c g     F .text	0000000c _localeconv_r
0402d390 g     F .text	0000003c __i2b
0402c5b0 g     F .text	000004bc __sfvwrite_r
040262e0 g     F .text	00000054 _sbrk_r
0402df80 g     F .text	00000060 _read_r
04039228 g     O .rwdata	00000004 alt_max_fd
04020420 g     F .text	0000008c Accelerator_Grayscale_Image
04024024 g     F .text	000000f0 _fclose_r
040243a0 g     F .text	00000030 fflush
0403ad38 g     O .bss	00000004 __malloc_max_sbrked_mem
04021914 g     F .text	000000d4 Fill_Memory_0_1
04021690 g     F .text	00000090 Image_Grayscale
040321a4 g     F .text	000008ac .hidden __adddf3
0402db0c g     F .text	0000010c __b2d
04031c6c g     F .text	00000538 .hidden __umoddi3
040343e0 g     F .text	000000d4 lseek
04039200 g     O .rwdata	00000004 _global_impure_ptr
0402dfe0 g     F .text	00000564 _realloc_r
0403ae90 g       *ABS*	00000000 __bss_end
040365a8 g     F .text	000000f0 alt_iic_isr_register
04036874 g     F .text	00000108 alt_tick
040316f4 g     F .text	00000578 .hidden __udivdi3
04031310 g     F .text	00000024 _fputwc_r
040374f8 g     O .rodata	00000028 __mprec_bigtens
0402d174 g     F .text	00000104 __s2b
04033f0c g     F .text	000000a8 .hidden __floatunsidf
0402d84c g     F .text	00000060 __mcmp
04024740 g     F .text	00000018 __fp_lock_all
0403655c g     F .text	0000004c alt_ic_irq_enabled
040367d8 g     F .text	0000009c alt_alarm_stop
0403ad58 g     O .bss	00000004 alt_irq_active
04024d1c g     F .text	00000444 _fseeko_r
040200fc g     F .exceptions	000000d4 alt_irq_handler
04037ff8 g     O .rwdata	00000028 alt_dev_null
04020964 g     F .text	0000005c Camera_Acquisition_Module_SETUP_Address_Memory
04035fa0 g     F .text	00000048 alt_dcache_flush_all
0402d278 g     F .text	00000068 __hi0bits
04033e8c g     F .text	00000080 .hidden __fixdfsi
04039240 g       *ABS*	00000000 __ram_rwdata_end
04039220 g     O .rwdata	00000008 alt_dev_list
04034cec g     F .text	000000f8 write
04036b94 g     F .text	000000a0 _putc_r
04022ef0 g     F .text	000000bc .hidden __gtsf2
04037754 g       *ABS*	00000000 __ram_rodata_end
04034128 g     F .text	000000b0 fstat
040248a4 g     F .text	00000024 fprintf
04022154 g     F .text	0000002c i2c_inst
0403349c g     F .text	000000f4 .hidden __ledf2
0402d5c4 g     F .text	00000140 __pow5mult
0402fbb4 g     F .text	0000145c ___vfiprintf_internal_r
0403ad48 g     O .bss	00000004 __nlocale_changed
040229d0 g     F .text	00000058 .hidden __umodsi3
040219e8 g     F .text	000000e8 Fill_Test_0
0403ae90 g       *ABS*	00000000 end
04025160 g     F .text	0000001c fseeko
04024d00 g     F .text	0000001c fseek
0403500c g     F .text	000000c0 altera_avalon_jtag_uart_init
040201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
04037038 g       *ABS*	00000000 __CTOR_LIST__
04040000 g       *ABS*	00000000 __alt_stack_pointer
04023fc0 g     F .text	00000064 .hidden __clzsi2
040356ec g     F .text	00000224 altera_avalon_jtag_uart_write
04024730 g     F .text	00000004 __sfp_lock_acquire
0402cbfc g     F .text	000000e4 memchr
04020fc0 g     F .text	0000009c Partial_Image
040287a4 g     F .text	000021f8 ___vfprintf_internal_r
04026334 g     F .text	00000058 _sprintf_r
040249ec g     F .text	00000310 _free_r
040347cc g     F .text	0000022c alt_printf
0402cb48 g     F .text	00000010 __locale_mb_cur_max
04036e14 g     F .text	00000180 __call_exitprocs
0403ad44 g     O .bss	00000004 __mlocale_changed
04021720 g     F .text	00000098 Fill_Memory
04039208 g     O .rwdata	00000004 __malloc_sbrk_base
04020244 g     F .text	0000004c _start
0403ad5c g     O .bss	00000004 _alt_tick_rate
04036f94 g     F .text	00000070 .hidden __floatundidf
04020e34 g     F .text	00000074 Convert_Pixels
0402d704 g     F .text	00000148 __lshift
0403ad60 g     O .bss	00000004 _alt_nticks
04034a70 g     F .text	000000fc read
04034e50 g     F .text	00000058 alt_sys_init
04023500 g     F .text	00000124 .hidden __floatsisf
0402e694 g     F .text	000001d0 __ssprint_r
04025f50 g     F .text	00000060 _open_r
040221e4 g     F .text	00000080 i2c_configure
04036cfc g     F .text	00000118 __register_exitproc
0402d3cc g     F .text	000001f8 __multiply
04035378 g     F .text	00000068 altera_avalon_jtag_uart_close
04037754 g       *ABS*	00000000 __ram_rwdata_start
04037038 g       *ABS*	00000000 __ram_rodata_start
0403ad68 g     O .bss	00000028 __malloc_current_mallinfo
0402dc18 g     F .text	0000014c __d2b
04021e20 g     F .text	000000c0 Write_and_Read_I2C
04034ea8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04036320 g     F .text	000000a4 alt_get_fd
04035e48 g     F .text	00000158 alt_busy_sleep
0403ad2c g     O .bss	00000004 i2c
0402ac28 g     F .text	00000054 _close_r
04035910 g     F .text	000000bc perf_get_section_time
04020a8c g     F .text	00000058 Camera_Acquisition_Module_Stop
04036b18 g     F .text	0000007c memcmp
04034f68 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0403ae90 g       *ABS*	00000000 __alt_stack_base
04034fb8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04025360 g     F .text	000000cc _fwrite_r
0402aad4 g     F .text	00000154 __swsetup_r
04032a50 g     F .text	000008e8 .hidden __divdf3
040245f0 g     F .text	00000118 __sfp
0402de7c g     F .text	00000078 __copybits
040359cc g     F .text	0000004c perf_get_total_time
04037b78 g     O .rwdata	00000408 __malloc_av_
0402473c g     F .text	00000004 __sinit_lock_release
04023624 g     F .text	00000718 .hidden __muldf3
040263f8 g     F .text	00000054 __sread
04036218 g     F .text	00000108 alt_find_file
04036024 g     F .text	000000a4 alt_dev_llist_insert
04021ee0 g     F .text	00000088 trdb_d5m_write
04034530 g     F .text	00000024 __malloc_lock
0402487c g     F .text	00000028 _fprintf_r
04034bd0 g     F .text	000000b0 sbrk
040265cc g     F .text	000021d8 ___svfprintf_internal_r
04024344 g     F .text	0000005c _fflush_r
040310e8 g     F .text	000000c4 _calloc_r
04020bb4 g     F .text	00000070 Test_Camera_Memory
04024864 g     F .text	00000018 fopen
0403ad2c g       *ABS*	00000000 __bss_start
04025e28 g     F .text	00000128 memset
04021d78 g     F .text	00000060 main
0403ad54 g     O .bss	00000004 alt_envp
0403ad34 g     O .bss	00000004 __malloc_max_total_mem
04034f08 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04022390 g     F .text	00000148 i2c_read
040314f4 g     F .text	00000018 __swbuf
0402652c g     F .text	00000008 __sclose
04040000 g       *ABS*	00000000 __alt_heap_limit
04024114 g     F .text	00000014 fclose
04023e18 g     F .text	000001a8 .hidden __truncdfsf2
0402ae7c g     F .text	00001688 _dtoa_r
0402561c g     F .text	0000080c _malloc_r
04031668 g     F .text	00000030 __ascii_wctomb
0403922c g     O .rwdata	00000004 alt_errno
040251d8 g     F .text	000000c4 _fwalk
04020700 g     F .text	00000264 C_Grayscale_Image
04036c34 g     F .text	000000c8 putc
04022874 g     F .text	00000084 .hidden __divsi3
040248c8 g     F .text	00000124 _malloc_trim_r
04037038 g       *ABS*	00000000 __CTOR_END__
0402e5b8 g     F .text	000000dc strcmp
04037038 g       *ABS*	00000000 __flash_rodata_start
04037038 g       *ABS*	00000000 __DTOR_LIST__
04020df0 g     F .text	00000044 delay
04033338 g     F .text	00000088 .hidden __nedf2
04034e18 g     F .text	00000038 alt_irq_init
04034b6c g     F .text	00000064 alt_release_fd
0402638c g     F .text	0000006c sprintf
0403731a g     O .rodata	00000100 .hidden __clz_tab
0403ad40 g     O .bss	00000004 _PathLocale
04021ad0 g     F .text	000000b4 Fill_Test_1
04036acc g     F .text	00000014 atexit
04022ef0 g     F .text	000000bc .hidden __gesf2
0402aa74 g     F .text	00000060 _write_r
0402cb78 g     F .text	00000018 setlocale
04039204 g     O .rwdata	00000004 _impure_ptr
0403ad4c g     O .bss	00000004 alt_argc
04024128 g     F .text	0000021c __sflush_r
04036128 g     F .text	00000060 _do_dtors
0402cb64 g     F .text	00000008 __locale_cjk_lang
00000000 g       *ABS*	00000000 __alt_mem_SDRAM_Controller
04024cfc g     F .text	00000004 _fseek_r
04022180 g     F .text	00000064 i2c_init
0402610c g     F .text	000001d4 __srefill_r
04020020 g       .exceptions	00000000 alt_irq_entry
0402daa8 g     F .text	00000064 __ulp
04024758 g     F .text	00000018 __fp_unlock_all
04039218 g     O .rwdata	00000008 alt_fs_list
04020020 g       *ABS*	00000000 __ram_exceptions_start
0402cb90 g     F .text	0000000c localeconv
040363f8 g     F .text	00000050 alt_ic_isr_register
0402542c g     F .text	00000034 fwrite
04039240 g       *ABS*	00000000 _edata
0403ae90 g       *ABS*	00000000 _end
040311ac g     F .text	00000164 __fputwc
04020244 g       *ABS*	00000000 __ram_exceptions_end
040353e0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0402105c g     F .text	000001c4 RGB_Flag
04021f68 g     F .text	000000a0 trdb_d5m_read
040364d0 g     F .text	0000008c alt_ic_irq_disable
04026454 g     F .text	0000007c __swrite
0403920c g     O .rwdata	00000004 __malloc_trim_threshold
04035a58 g     F .text	00000020 alt_get_performance_counter_base
0402cb58 g     F .text	0000000c __locale_msgcharset
04036ae0 g     F .text	00000038 exit
0402529c g     F .text	000000c4 _fwalk_reent
0402d8ac g     F .text	000001fc __mdiff
040228f8 g     F .text	00000074 .hidden __modsi3
04040000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
04024734 g     F .text	00000004 __sfp_lock_release
04022814 g     F .text	00000060 .hidden __fixunssfsi
04024770 g     F .text	000000f4 _fopen_r
04037004 g     F .text	00000034 _exit
04035d1c g     F .text	0000012c alt_alarm_start
04025460 g     F .text	000001bc __smakebuf_r
0402266c g     F .text	000001a8 i2c_read_array
04026534 g     F .text	00000098 strlen
04034678 g     F .text	00000154 open
040333c0 g     F .text	000000dc .hidden __gedf2
040349f8 g     F .text	0000003c alt_putchar
04039214 g     O .rwdata	00000004 __wctomb
0402fb9c g     F .text	00000018 __sprint_r
040363c4 g     F .text	00000034 alt_icache_flush_all
04039234 g     O .rwdata	00000004 alt_priority_mask
04036448 g     F .text	00000088 alt_ic_irq_enable
0402a99c g     F .text	0000001c __vfprintf_internal
04031698 g     F .text	0000005c _wctomb_r
04033590 g     F .text	000008fc .hidden __subdf3
0402d2e0 g     F .text	000000b0 __lo0bits
04039238 g     O .rwdata	00000008 alt_alarm_list
040360c8 g     F .text	00000060 _do_ctors
040315a8 g     F .text	000000c0 wcrtomb
040204ac g     F .text	00000254 C_Grayscale_Table
04020a34 g     F .text	00000058 Camera_Acquisition_Module_Start
04033ff0 g     F .text	000000d0 close
04022a28 g     F .text	000004c8 .hidden __addsf3
04034320 g     F .text	00000084 alt_load
04031334 g     F .text	00000080 fputwc
04024738 g     F .text	00000004 __sinit_lock_acquire
0402d054 g     F .text	00000120 __multadd
0402d02c g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 4020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 402000c:	00bffd16 	blt	zero,r2,4020004 <_gp+0xfffdee04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020010:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020014:	08409114 	ori	at,at,580
    jmp r1
 4020018:	0800683a 	jmp	at
 402001c:	00000000 	call	0 <__alt_mem_SDRAM_Controller>

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201d00 	call	40201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0fffb17 	ldw	r3,-20(fp)
 4020130:	e0bffc17 	ldw	r2,-16(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001426 	beq	r2,zero,402018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402013c:	00810134 	movhi	r2,1028
 4020140:	10ab6404 	addi	r2,r2,-21104
 4020144:	e0fffd17 	ldw	r3,-12(fp)
 4020148:	180690fa 	slli	r3,r3,3
 402014c:	10c5883a 	add	r2,r2,r3
 4020150:	10c00017 	ldw	r3,0(r2)
 4020154:	00810134 	movhi	r2,1028
 4020158:	10ab6404 	addi	r2,r2,-21104
 402015c:	e13ffd17 	ldw	r4,-12(fp)
 4020160:	200890fa 	slli	r4,r4,3
 4020164:	1105883a 	add	r2,r2,r4
 4020168:	10800104 	addi	r2,r2,4
 402016c:	10800017 	ldw	r2,0(r2)
 4020170:	1009883a 	mov	r4,r2
 4020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402017c:	0005313a 	rdctl	r2,ipending
 4020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020184:	e0bfff17 	ldw	r2,-4(fp)
 4020188:	00000706 	br	40201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402018c:	e0bffc17 	ldw	r2,-16(fp)
 4020190:	1085883a 	add	r2,r2,r2
 4020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020198:	e0bffd17 	ldw	r2,-12(fp)
 402019c:	10800044 	addi	r2,r2,1
 40201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40201a4:	003fe106 	br	402012c <_gp+0xfffdef2c>

    active = alt_irq_pending ();
 40201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40201ac:	e0bffb17 	ldw	r2,-20(fp)
 40201b0:	103fdb1e 	bne	r2,zero,4020120 <_gp+0xfffdef20>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201b4:	0001883a 	nop
}
 40201b8:	0001883a 	nop
 40201bc:	e037883a 	mov	sp,fp
 40201c0:	dfc00117 	ldw	ra,4(sp)
 40201c4:	df000017 	ldw	fp,0(sp)
 40201c8:	dec00204 	addi	sp,sp,8
 40201cc:	f800283a 	ret

040201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201d0:	defffb04 	addi	sp,sp,-20
 40201d4:	dfc00415 	stw	ra,16(sp)
 40201d8:	df000315 	stw	fp,12(sp)
 40201dc:	df000304 	addi	fp,sp,12
 40201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 40201e4:	000531fa 	rdctl	r2,exception
 40201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 40201ec:	e0bffd17 	ldw	r2,-12(fp)
 40201f0:	10801f0c 	andi	r2,r2,124
 40201f4:	1004d0ba 	srli	r2,r2,2
 40201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 40201fc:	0005333a 	rdctl	r2,badaddr
 4020200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 4020204:	d0a6d917 	ldw	r2,-25756(gp)
 4020208:	10000726 	beq	r2,zero,4020228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 402020c:	d0a6d917 	ldw	r2,-25756(gp)
 4020210:	e0fffd17 	ldw	r3,-12(fp)
 4020214:	e1bffe17 	ldw	r6,-8(fp)
 4020218:	e17fff17 	ldw	r5,-4(fp)
 402021c:	1809883a 	mov	r4,r3
 4020220:	103ee83a 	callr	r2
 4020224:	00000206 	br	4020230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 402022c:	0005883a 	mov	r2,zero
}
 4020230:	e037883a 	mov	sp,fp
 4020234:	dfc00117 	ldw	ra,4(sp)
 4020238:	df000017 	ldw	fp,0(sp)
 402023c:	dec00204 	addi	sp,sp,8
 4020240:	f800283a 	ret

Disassembly of section .text:

04020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 4020244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4020248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 402024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 4020250:	00bffd16 	blt	zero,r2,4020248 <_gp+0xfffdf048>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4020254:	06c10134 	movhi	sp,1028
    ori sp, sp, %lo(__alt_stack_pointer)
 4020258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 402025c:	06810134 	movhi	gp,1028
    ori gp, gp, %lo(_gp)
 4020260:	d6848014 	ori	gp,gp,4608
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4020264:	008100f4 	movhi	r2,1027
    ori r2, r2, %lo(__bss_start)
 4020268:	10ab4b14 	ori	r2,r2,44332

    movhi r3, %hi(__bss_end)
 402026c:	00c100f4 	movhi	r3,1027
    ori r3, r3, %lo(__bss_end)
 4020270:	18eba414 	ori	r3,r3,44688

    beq r2, r3, 1f
 4020274:	10c00326 	beq	r2,r3,4020284 <_start+0x40>

0:
    stw zero, (r2)
 4020278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 402027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4020280:	10fffd36 	bltu	r2,r3,4020278 <_gp+0xfffdf078>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4020284:	40343200 	call	4034320 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020288:	40344b40 	call	40344b4 <alt_main>

0402028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 402028c:	003fff06 	br	402028c <_gp+0xfffdf08c>

04020290 <Test_Accelerator_Grayscale_Table>:
#include "Function_Header.h"

//------------------------------------------------------------------------------------------------

void Test_Accelerator_Grayscale_Table(uint16_t *Address, uint32_t Length_Address)
{
 4020290:	defffb04 	addi	sp,sp,-20
 4020294:	dfc00415 	stw	ra,16(sp)
 4020298:	df000315 	stw	fp,12(sp)
 402029c:	df000304 	addi	fp,sp,12
 40202a0:	e13ffe15 	stw	r4,-8(fp)
 40202a4:	e17fff15 	stw	r5,-4(fp)
	 * uint16_t *Address       : The address of the first pixel data in the memory.
	 * uint32_t Length_Address : The length of the addresses (or (n_pixels-1)*2) in byte.
	 */

	// Initialize the address:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGADDRESS, Address);
 40202a8:	e0fffe17 	ldw	r3,-8(fp)
 40202ac:	00810134 	movhi	r2,1028
 40202b0:	10841104 	addi	r2,r2,4164
 40202b4:	10c00035 	stwio	r3,0(r2)
	alt_printf("RegAddress = 0x%x\n", IORD_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGADDRESS));
 40202b8:	00810134 	movhi	r2,1028
 40202bc:	10841104 	addi	r2,r2,4164
 40202c0:	10800037 	ldwio	r2,0(r2)
 40202c4:	100b883a 	mov	r5,r2
 40202c8:	010100f4 	movhi	r4,1027
 40202cc:	211c0e04 	addi	r4,r4,28728
 40202d0:	40347cc0 	call	40347cc <alt_printf>

	// Initialize the length:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGLENGTHADDRESS, Length_Address);
 40202d4:	e0ffff17 	ldw	r3,-4(fp)
 40202d8:	00810134 	movhi	r2,1028
 40202dc:	10841204 	addi	r2,r2,4168
 40202e0:	10c00035 	stwio	r3,0(r2)
	alt_printf("RegLength_Address = 0x%x\n", IORD_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGLENGTHADDRESS));
 40202e4:	00810134 	movhi	r2,1028
 40202e8:	10841204 	addi	r2,r2,4168
 40202ec:	10800037 	ldwio	r2,0(r2)
 40202f0:	100b883a 	mov	r5,r2
 40202f4:	010100f4 	movhi	r4,1027
 40202f8:	211c1304 	addi	r4,r4,28748
 40202fc:	40347cc0 	call	40347cc <alt_printf>

	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);
 4020300:	00c00044 	movi	r3,1
 4020304:	00810134 	movhi	r2,1028
 4020308:	10841004 	addi	r2,r2,4160
 402030c:	10c00025 	stbio	r3,0(r2)

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 4020310:	00810134 	movhi	r2,1028
 4020314:	10841004 	addi	r2,r2,4160
 4020318:	10800023 	ldbuio	r2,0(r2)
 402031c:	10803fcc 	andi	r2,r2,255
 4020320:	e0bffd05 	stb	r2,-12(fp)
	while(Check != 0)
 4020324:	00000506 	br	402033c <Test_Accelerator_Grayscale_Table+0xac>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 4020328:	00810134 	movhi	r2,1028
 402032c:	10841004 	addi	r2,r2,4160
 4020330:	10800023 	ldbuio	r2,0(r2)
 4020334:	10803fcc 	andi	r2,r2,255
 4020338:	e0bffd05 	stb	r2,-12(fp)
	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	while(Check != 0)
 402033c:	e0bffd03 	ldbu	r2,-12(fp)
 4020340:	103ff91e 	bne	r2,zero,4020328 <_gp+0xfffdf128>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	}

	// Check DataRead and DataWrite:
	alt_printf("RegData_Read = 0x%x\n", IORD_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGDATAREAD));
 4020344:	00810134 	movhi	r2,1028
 4020348:	10841304 	addi	r2,r2,4172
 402034c:	10800037 	ldwio	r2,0(r2)
 4020350:	100b883a 	mov	r5,r2
 4020354:	010100f4 	movhi	r4,1027
 4020358:	211c1a04 	addi	r4,r4,28776
 402035c:	40347cc0 	call	40347cc <alt_printf>
	alt_printf("RegData_Write = 0x%x\n", IORD_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGDATAWRITE));
 4020360:	00810134 	movhi	r2,1028
 4020364:	10841404 	addi	r2,r2,4176
 4020368:	10800037 	ldwio	r2,0(r2)
 402036c:	100b883a 	mov	r5,r2
 4020370:	010100f4 	movhi	r4,1027
 4020374:	211c2004 	addi	r4,r4,28800
 4020378:	40347cc0 	call	40347cc <alt_printf>
}
 402037c:	0001883a 	nop
 4020380:	e037883a 	mov	sp,fp
 4020384:	dfc00117 	ldw	ra,4(sp)
 4020388:	df000017 	ldw	fp,0(sp)
 402038c:	dec00204 	addi	sp,sp,8
 4020390:	f800283a 	ret

04020394 <Accelerator_Grayscale_Table>:

//------------------------------------------------------------------------------------------------

void Accelerator_Grayscale_Table(uint16_t *Address, uint32_t Length_Address)
{
 4020394:	defffc04 	addi	sp,sp,-16
 4020398:	df000315 	stw	fp,12(sp)
 402039c:	df000304 	addi	fp,sp,12
 40203a0:	e13ffe15 	stw	r4,-8(fp)
 40203a4:	e17fff15 	stw	r5,-4(fp)
	 * uint32_t *Address       : The address of the first variable in the memory.
	 * uint32_t Length_Address : The length of the addresses (or (n_pixels-1)*2) in byte.
	 */

	// Initialize the address:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGADDRESS, Address);
 40203a8:	e0fffe17 	ldw	r3,-8(fp)
 40203ac:	00810134 	movhi	r2,1028
 40203b0:	10841104 	addi	r2,r2,4164
 40203b4:	10c00035 	stwio	r3,0(r2)

	// Initialize the length:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGLENGTHADDRESS, Length_Address);
 40203b8:	e0ffff17 	ldw	r3,-4(fp)
 40203bc:	00810134 	movhi	r2,1028
 40203c0:	10841204 	addi	r2,r2,4168
 40203c4:	10c00035 	stwio	r3,0(r2)

	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);
 40203c8:	00c00044 	movi	r3,1
 40203cc:	00810134 	movhi	r2,1028
 40203d0:	10841004 	addi	r2,r2,4160
 40203d4:	10c00025 	stbio	r3,0(r2)

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 40203d8:	00810134 	movhi	r2,1028
 40203dc:	10841004 	addi	r2,r2,4160
 40203e0:	10800023 	ldbuio	r2,0(r2)
 40203e4:	10803fcc 	andi	r2,r2,255
 40203e8:	e0bffd05 	stb	r2,-12(fp)
	while(Check != 0)
 40203ec:	00000506 	br	4020404 <Accelerator_Grayscale_Table+0x70>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 40203f0:	00810134 	movhi	r2,1028
 40203f4:	10841004 	addi	r2,r2,4160
 40203f8:	10800023 	ldbuio	r2,0(r2)
 40203fc:	10803fcc 	andi	r2,r2,255
 4020400:	e0bffd05 	stb	r2,-12(fp)
	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	while(Check != 0)
 4020404:	e0bffd03 	ldbu	r2,-12(fp)
 4020408:	103ff91e 	bne	r2,zero,40203f0 <_gp+0xfffdf1f0>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	}
}
 402040c:	0001883a 	nop
 4020410:	e037883a 	mov	sp,fp
 4020414:	df000017 	ldw	fp,0(sp)
 4020418:	dec00104 	addi	sp,sp,4
 402041c:	f800283a 	ret

04020420 <Accelerator_Grayscale_Image>:

//------------------------------------------------------------------------------------------------

void Accelerator_Grayscale_Image(int Address, int Length_Address)
{
 4020420:	defffc04 	addi	sp,sp,-16
 4020424:	df000315 	stw	fp,12(sp)
 4020428:	df000304 	addi	fp,sp,12
 402042c:	e13ffe15 	stw	r4,-8(fp)
 4020430:	e17fff15 	stw	r5,-4(fp)
	 * uint32_t *Address       : The address of the first variable in the memory.
	 * uint32_t Length_Address : The length of the addresses (or (n_pixels-1)*2) in byte.
	 */

	// Initialize the address:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGADDRESS, Address);
 4020434:	00810134 	movhi	r2,1028
 4020438:	10841104 	addi	r2,r2,4164
 402043c:	e0fffe17 	ldw	r3,-8(fp)
 4020440:	10c00035 	stwio	r3,0(r2)

	// Initialize the length:
	IOWR_32DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGLENGTHADDRESS, Length_Address);
 4020444:	00810134 	movhi	r2,1028
 4020448:	10841204 	addi	r2,r2,4168
 402044c:	e0ffff17 	ldw	r3,-4(fp)
 4020450:	10c00035 	stwio	r3,0(r2)

	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);
 4020454:	00c00044 	movi	r3,1
 4020458:	00810134 	movhi	r2,1028
 402045c:	10841004 	addi	r2,r2,4160
 4020460:	10c00025 	stbio	r3,0(r2)

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 4020464:	00810134 	movhi	r2,1028
 4020468:	10841004 	addi	r2,r2,4160
 402046c:	10800023 	ldbuio	r2,0(r2)
 4020470:	10803fcc 	andi	r2,r2,255
 4020474:	e0bffd05 	stb	r2,-12(fp)
	while(Check != 0)
 4020478:	00000506 	br	4020490 <Accelerator_Grayscale_Image+0x70>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
 402047c:	00810134 	movhi	r2,1028
 4020480:	10841004 	addi	r2,r2,4160
 4020484:	10800023 	ldbuio	r2,0(r2)
 4020488:	10803fcc 	andi	r2,r2,255
 402048c:	e0bffd05 	stb	r2,-12(fp)
	// Enable:
	IOWR_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND, ENABLE);

	// Wait that the task is done:
	uint8_t Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	while(Check != 0)
 4020490:	e0bffd03 	ldbu	r2,-12(fp)
 4020494:	103ff91e 	bne	r2,zero,402047c <_gp+0xfffdf27c>
	{
		Check = IORD_8DIRECT(ACCELERATOR_GRAYSCALE_0_BASE, REGCOMMAND);
	}
}
 4020498:	0001883a 	nop
 402049c:	e037883a 	mov	sp,fp
 40204a0:	df000017 	ldw	fp,0(sp)
 40204a4:	dec00104 	addi	sp,sp,4
 40204a8:	f800283a 	ret

040204ac <C_Grayscale_Table>:
#include "Function_Header.h"

//------------------------------------------------------------------------------------------------

void C_Grayscale_Table(uint16_t *Address, uint32_t Length_Address)
{
 40204ac:	defff404 	addi	sp,sp,-48
 40204b0:	dfc00b15 	stw	ra,44(sp)
 40204b4:	df000a15 	stw	fp,40(sp)
 40204b8:	df000a04 	addi	fp,sp,40
 40204bc:	e13ffe15 	stw	r4,-8(fp)
 40204c0:	e17fff15 	stw	r5,-4(fp)
	/* Parameters:
	 * uint16_t *Address       : The address of the first pixel data in the memory.
	 * uint32_t Length_Address : The length of the addresses (or (n_pixels-1)*2) in byte.
	 */

	uint16_t Data_Read  = 0x0000;
 40204c4:	e03ff70d 	sth	zero,-36(fp)
	uint16_t Data_Write = 0x0000;
 40204c8:	e03ff78d 	sth	zero,-34(fp)

	uint16_t R_Mask = 0b1111100000000000;
 40204cc:	00be0004 	movi	r2,-2048
 40204d0:	e0bff80d 	sth	r2,-32(fp)
	float R_Color = 0;
 40204d4:	e03ff915 	stw	zero,-28(fp)

	uint16_t G_Mask = 0b0000011111100000;
 40204d8:	0081f804 	movi	r2,2016
 40204dc:	e0bffa0d 	sth	r2,-24(fp)
	float G_Color = 0;
 40204e0:	e03ffb15 	stw	zero,-20(fp)

	uint16_t B_Mask = 0b0000000000011111;
 40204e4:	008007c4 	movi	r2,31
 40204e8:	e0bffc0d 	sth	r2,-16(fp)
	float B_Color = 0;
 40204ec:	e03ffd15 	stw	zero,-12(fp)

	for (int i = 0; i <= (Length_Address/2); i ++) {
 40204f0:	e03ff615 	stw	zero,-40(fp)
 40204f4:	00007806 	br	40206d8 <C_Grayscale_Table+0x22c>
		Data_Read  = IORD_16DIRECT(Address, i*2);
 40204f8:	e0bff617 	ldw	r2,-40(fp)
 40204fc:	1085883a 	add	r2,r2,r2
 4020500:	1007883a 	mov	r3,r2
 4020504:	e0bffe17 	ldw	r2,-8(fp)
 4020508:	10c5883a 	add	r2,r2,r3
 402050c:	1080002b 	ldhuio	r2,0(r2)
 4020510:	10bfffcc 	andi	r2,r2,65535
 4020514:	e0bff70d 	sth	r2,-36(fp)

		// To avoid that the value gets rounded to 0, the order of calculus must be correctly set.
		R_Color = (float) (((255 * (Data_Read & R_Mask)) / 31) * 0.2126);
 4020518:	e0fff70b 	ldhu	r3,-36(fp)
 402051c:	e0bff80b 	ldhu	r2,-32(fp)
 4020520:	1884703a 	and	r2,r3,r2
 4020524:	10bfffcc 	andi	r2,r2,65535
 4020528:	10803fe4 	muli	r2,r2,255
 402052c:	014007c4 	movi	r5,31
 4020530:	1009883a 	mov	r4,r2
 4020534:	40228740 	call	4022874 <__divsi3>
 4020538:	1009883a 	mov	r4,r2
 402053c:	4023d3c0 	call	4023d3c <__floatsidf>
 4020540:	1011883a 	mov	r8,r2
 4020544:	1813883a 	mov	r9,r3
 4020548:	0183e474 	movhi	r6,3985
 402054c:	31a5af04 	addi	r6,r6,-26948
 4020550:	01cff2f4 	movhi	r7,16331
 4020554:	39cd9e84 	addi	r7,r7,13946
 4020558:	4009883a 	mov	r4,r8
 402055c:	480b883a 	mov	r5,r9
 4020560:	40236240 	call	4023624 <__muldf3>
 4020564:	1009883a 	mov	r4,r2
 4020568:	180b883a 	mov	r5,r3
 402056c:	2005883a 	mov	r2,r4
 4020570:	2807883a 	mov	r3,r5
 4020574:	1009883a 	mov	r4,r2
 4020578:	180b883a 	mov	r5,r3
 402057c:	4023e180 	call	4023e18 <__truncdfsf2>
 4020580:	1007883a 	mov	r3,r2
 4020584:	e0fff915 	stw	r3,-28(fp)
		G_Color = (float) (((255 * (Data_Read & G_Mask)) / 63) * 0.7152);
 4020588:	e0fff70b 	ldhu	r3,-36(fp)
 402058c:	e0bffa0b 	ldhu	r2,-24(fp)
 4020590:	1884703a 	and	r2,r3,r2
 4020594:	10bfffcc 	andi	r2,r2,65535
 4020598:	10803fe4 	muli	r2,r2,255
 402059c:	01400fc4 	movi	r5,63
 40205a0:	1009883a 	mov	r4,r2
 40205a4:	40228740 	call	4022874 <__divsi3>
 40205a8:	1009883a 	mov	r4,r2
 40205ac:	4023d3c0 	call	4023d3c <__floatsidf>
 40205b0:	1011883a 	mov	r8,r2
 40205b4:	1813883a 	mov	r9,r3
 40205b8:	018710f4 	movhi	r6,7235
 40205bc:	318b2944 	addi	r6,r6,11429
 40205c0:	01cff9f4 	movhi	r7,16359
 40205c4:	39f8bac4 	addi	r7,r7,-7445
 40205c8:	4009883a 	mov	r4,r8
 40205cc:	480b883a 	mov	r5,r9
 40205d0:	40236240 	call	4023624 <__muldf3>
 40205d4:	1009883a 	mov	r4,r2
 40205d8:	180b883a 	mov	r5,r3
 40205dc:	2005883a 	mov	r2,r4
 40205e0:	2807883a 	mov	r3,r5
 40205e4:	1009883a 	mov	r4,r2
 40205e8:	180b883a 	mov	r5,r3
 40205ec:	4023e180 	call	4023e18 <__truncdfsf2>
 40205f0:	1007883a 	mov	r3,r2
 40205f4:	e0fffb15 	stw	r3,-20(fp)
		B_Color = (float) (((255 * (Data_Read & B_Mask)) / 31) * 0.0722);
 40205f8:	e0fff70b 	ldhu	r3,-36(fp)
 40205fc:	e0bffc0b 	ldhu	r2,-16(fp)
 4020600:	1884703a 	and	r2,r3,r2
 4020604:	10bfffcc 	andi	r2,r2,65535
 4020608:	10803fe4 	muli	r2,r2,255
 402060c:	014007c4 	movi	r5,31
 4020610:	1009883a 	mov	r4,r2
 4020614:	40228740 	call	4022874 <__divsi3>
 4020618:	1009883a 	mov	r4,r2
 402061c:	4023d3c0 	call	4023d3c <__floatsidf>
 4020620:	1011883a 	mov	r8,r2
 4020624:	1813883a 	mov	r9,r3
 4020628:	01bfb174 	movhi	r6,65221
 402062c:	319b5744 	addi	r6,r6,27997
 4020630:	01cfecb4 	movhi	r7,16306
 4020634:	39deec84 	addi	r7,r7,31666
 4020638:	4009883a 	mov	r4,r8
 402063c:	480b883a 	mov	r5,r9
 4020640:	40236240 	call	4023624 <__muldf3>
 4020644:	1009883a 	mov	r4,r2
 4020648:	180b883a 	mov	r5,r3
 402064c:	2005883a 	mov	r2,r4
 4020650:	2807883a 	mov	r3,r5
 4020654:	1009883a 	mov	r4,r2
 4020658:	180b883a 	mov	r5,r3
 402065c:	4023e180 	call	4023e18 <__truncdfsf2>
 4020660:	1007883a 	mov	r3,r2
 4020664:	e0fffd15 	stw	r3,-12(fp)

		Data_Write = (int) R_Color + G_Color + B_Color;
 4020668:	e13ff917 	ldw	r4,-28(fp)
 402066c:	40234900 	call	4023490 <__fixsfsi>
 4020670:	1009883a 	mov	r4,r2
 4020674:	40235000 	call	4023500 <__floatsisf>
 4020678:	1007883a 	mov	r3,r2
 402067c:	e17ffb17 	ldw	r5,-20(fp)
 4020680:	1809883a 	mov	r4,r3
 4020684:	4022a280 	call	4022a28 <__addsf3>
 4020688:	1007883a 	mov	r3,r2
 402068c:	1805883a 	mov	r2,r3
 4020690:	e17ffd17 	ldw	r5,-12(fp)
 4020694:	1009883a 	mov	r4,r2
 4020698:	4022a280 	call	4022a28 <__addsf3>
 402069c:	1007883a 	mov	r3,r2
 40206a0:	1805883a 	mov	r2,r3
 40206a4:	1009883a 	mov	r4,r2
 40206a8:	40228140 	call	4022814 <__fixunssfsi>
 40206ac:	e0bff78d 	sth	r2,-34(fp)

		IOWR_16DIRECT(Address, i*2, Data_Write);
 40206b0:	e0bff617 	ldw	r2,-40(fp)
 40206b4:	1085883a 	add	r2,r2,r2
 40206b8:	1007883a 	mov	r3,r2
 40206bc:	e0bffe17 	ldw	r2,-8(fp)
 40206c0:	10c5883a 	add	r2,r2,r3
 40206c4:	e0fff78b 	ldhu	r3,-34(fp)
 40206c8:	10c0002d 	sthio	r3,0(r2)
	float G_Color = 0;

	uint16_t B_Mask = 0b0000000000011111;
	float B_Color = 0;

	for (int i = 0; i <= (Length_Address/2); i ++) {
 40206cc:	e0bff617 	ldw	r2,-40(fp)
 40206d0:	10800044 	addi	r2,r2,1
 40206d4:	e0bff615 	stw	r2,-40(fp)
 40206d8:	e0bfff17 	ldw	r2,-4(fp)
 40206dc:	1006d07a 	srli	r3,r2,1
 40206e0:	e0bff617 	ldw	r2,-40(fp)
 40206e4:	18bf842e 	bgeu	r3,r2,40204f8 <_gp+0xfffdf2f8>

		Data_Write = (int) R_Color + G_Color + B_Color;

		IOWR_16DIRECT(Address, i*2, Data_Write);
	}
}
 40206e8:	0001883a 	nop
 40206ec:	e037883a 	mov	sp,fp
 40206f0:	dfc00117 	ldw	ra,4(sp)
 40206f4:	df000017 	ldw	fp,0(sp)
 40206f8:	dec00204 	addi	sp,sp,8
 40206fc:	f800283a 	ret

04020700 <C_Grayscale_Image>:

//------------------------------------------------------------------------------------------------

void C_Grayscale_Image(int Address, int Length_Address)
{
 4020700:	defff404 	addi	sp,sp,-48
 4020704:	dfc00b15 	stw	ra,44(sp)
 4020708:	df000a15 	stw	fp,40(sp)
 402070c:	df000a04 	addi	fp,sp,40
 4020710:	e13ffe15 	stw	r4,-8(fp)
 4020714:	e17fff15 	stw	r5,-4(fp)
	/* Parameters:
	 * uint16_t *Address       : The address of the first pixel data in the memory.
	 * uint32_t Length_Address : The length of the addresses (or (n_pixels-1)*2) in byte.
	 */

	uint16_t Data_Read  = 0x0000;
 4020718:	e03ff70d 	sth	zero,-36(fp)
	uint16_t Data_Write = 0x0000;
 402071c:	e03ff78d 	sth	zero,-34(fp)

	uint16_t R_Mask = 0b1111100000000000;
 4020720:	00be0004 	movi	r2,-2048
 4020724:	e0bff80d 	sth	r2,-32(fp)
	float R_Color = 0;
 4020728:	e03ff915 	stw	zero,-28(fp)

	uint16_t G_Mask = 0b0000011111100000;
 402072c:	0081f804 	movi	r2,2016
 4020730:	e0bffa0d 	sth	r2,-24(fp)
	float G_Color = 0;
 4020734:	e03ffb15 	stw	zero,-20(fp)

	uint16_t B_Mask = 0b0000000000011111;
 4020738:	008007c4 	movi	r2,31
 402073c:	e0bffc0d 	sth	r2,-16(fp)
	float B_Color = 0;
 4020740:	e03ffd15 	stw	zero,-12(fp)

	for (int i = 0; i <= (Length_Address/2); i ++) {
 4020744:	e03ff615 	stw	zero,-40(fp)
 4020748:	00007906 	br	4020930 <C_Grayscale_Image+0x230>
		Data_Read  = IORD_16DIRECT(Address, i*2);
 402074c:	e0bff617 	ldw	r2,-40(fp)
 4020750:	1085883a 	add	r2,r2,r2
 4020754:	1007883a 	mov	r3,r2
 4020758:	e0bffe17 	ldw	r2,-8(fp)
 402075c:	1885883a 	add	r2,r3,r2
 4020760:	1080002b 	ldhuio	r2,0(r2)
 4020764:	10bfffcc 	andi	r2,r2,65535
 4020768:	e0bff70d 	sth	r2,-36(fp)

		// To avoid that the value gets rounded to 0, the order of calculus must be correctly set.
		R_Color = (float) (((255 * (Data_Read & R_Mask)) / 31) * 0.2126);
 402076c:	e0fff70b 	ldhu	r3,-36(fp)
 4020770:	e0bff80b 	ldhu	r2,-32(fp)
 4020774:	1884703a 	and	r2,r3,r2
 4020778:	10bfffcc 	andi	r2,r2,65535
 402077c:	10803fe4 	muli	r2,r2,255
 4020780:	014007c4 	movi	r5,31
 4020784:	1009883a 	mov	r4,r2
 4020788:	40228740 	call	4022874 <__divsi3>
 402078c:	1009883a 	mov	r4,r2
 4020790:	4023d3c0 	call	4023d3c <__floatsidf>
 4020794:	1011883a 	mov	r8,r2
 4020798:	1813883a 	mov	r9,r3
 402079c:	0183e474 	movhi	r6,3985
 40207a0:	31a5af04 	addi	r6,r6,-26948
 40207a4:	01cff2f4 	movhi	r7,16331
 40207a8:	39cd9e84 	addi	r7,r7,13946
 40207ac:	4009883a 	mov	r4,r8
 40207b0:	480b883a 	mov	r5,r9
 40207b4:	40236240 	call	4023624 <__muldf3>
 40207b8:	1009883a 	mov	r4,r2
 40207bc:	180b883a 	mov	r5,r3
 40207c0:	2005883a 	mov	r2,r4
 40207c4:	2807883a 	mov	r3,r5
 40207c8:	1009883a 	mov	r4,r2
 40207cc:	180b883a 	mov	r5,r3
 40207d0:	4023e180 	call	4023e18 <__truncdfsf2>
 40207d4:	1007883a 	mov	r3,r2
 40207d8:	e0fff915 	stw	r3,-28(fp)
		G_Color = (float) (((255 * (Data_Read & G_Mask)) / 63) * 0.7152);
 40207dc:	e0fff70b 	ldhu	r3,-36(fp)
 40207e0:	e0bffa0b 	ldhu	r2,-24(fp)
 40207e4:	1884703a 	and	r2,r3,r2
 40207e8:	10bfffcc 	andi	r2,r2,65535
 40207ec:	10803fe4 	muli	r2,r2,255
 40207f0:	01400fc4 	movi	r5,63
 40207f4:	1009883a 	mov	r4,r2
 40207f8:	40228740 	call	4022874 <__divsi3>
 40207fc:	1009883a 	mov	r4,r2
 4020800:	4023d3c0 	call	4023d3c <__floatsidf>
 4020804:	1011883a 	mov	r8,r2
 4020808:	1813883a 	mov	r9,r3
 402080c:	018710f4 	movhi	r6,7235
 4020810:	318b2944 	addi	r6,r6,11429
 4020814:	01cff9f4 	movhi	r7,16359
 4020818:	39f8bac4 	addi	r7,r7,-7445
 402081c:	4009883a 	mov	r4,r8
 4020820:	480b883a 	mov	r5,r9
 4020824:	40236240 	call	4023624 <__muldf3>
 4020828:	1009883a 	mov	r4,r2
 402082c:	180b883a 	mov	r5,r3
 4020830:	2005883a 	mov	r2,r4
 4020834:	2807883a 	mov	r3,r5
 4020838:	1009883a 	mov	r4,r2
 402083c:	180b883a 	mov	r5,r3
 4020840:	4023e180 	call	4023e18 <__truncdfsf2>
 4020844:	1007883a 	mov	r3,r2
 4020848:	e0fffb15 	stw	r3,-20(fp)
		B_Color = (float) (((255 * (Data_Read & B_Mask)) / 31) * 0.0722);
 402084c:	e0fff70b 	ldhu	r3,-36(fp)
 4020850:	e0bffc0b 	ldhu	r2,-16(fp)
 4020854:	1884703a 	and	r2,r3,r2
 4020858:	10bfffcc 	andi	r2,r2,65535
 402085c:	10803fe4 	muli	r2,r2,255
 4020860:	014007c4 	movi	r5,31
 4020864:	1009883a 	mov	r4,r2
 4020868:	40228740 	call	4022874 <__divsi3>
 402086c:	1009883a 	mov	r4,r2
 4020870:	4023d3c0 	call	4023d3c <__floatsidf>
 4020874:	1011883a 	mov	r8,r2
 4020878:	1813883a 	mov	r9,r3
 402087c:	01bfb174 	movhi	r6,65221
 4020880:	319b5744 	addi	r6,r6,27997
 4020884:	01cfecb4 	movhi	r7,16306
 4020888:	39deec84 	addi	r7,r7,31666
 402088c:	4009883a 	mov	r4,r8
 4020890:	480b883a 	mov	r5,r9
 4020894:	40236240 	call	4023624 <__muldf3>
 4020898:	1009883a 	mov	r4,r2
 402089c:	180b883a 	mov	r5,r3
 40208a0:	2005883a 	mov	r2,r4
 40208a4:	2807883a 	mov	r3,r5
 40208a8:	1009883a 	mov	r4,r2
 40208ac:	180b883a 	mov	r5,r3
 40208b0:	4023e180 	call	4023e18 <__truncdfsf2>
 40208b4:	1007883a 	mov	r3,r2
 40208b8:	e0fffd15 	stw	r3,-12(fp)

		Data_Write = (int) R_Color + G_Color + B_Color;
 40208bc:	e13ff917 	ldw	r4,-28(fp)
 40208c0:	40234900 	call	4023490 <__fixsfsi>
 40208c4:	1009883a 	mov	r4,r2
 40208c8:	40235000 	call	4023500 <__floatsisf>
 40208cc:	1007883a 	mov	r3,r2
 40208d0:	e17ffb17 	ldw	r5,-20(fp)
 40208d4:	1809883a 	mov	r4,r3
 40208d8:	4022a280 	call	4022a28 <__addsf3>
 40208dc:	1007883a 	mov	r3,r2
 40208e0:	1805883a 	mov	r2,r3
 40208e4:	e17ffd17 	ldw	r5,-12(fp)
 40208e8:	1009883a 	mov	r4,r2
 40208ec:	4022a280 	call	4022a28 <__addsf3>
 40208f0:	1007883a 	mov	r3,r2
 40208f4:	1805883a 	mov	r2,r3
 40208f8:	1009883a 	mov	r4,r2
 40208fc:	40228140 	call	4022814 <__fixunssfsi>
 4020900:	e0bff78d 	sth	r2,-34(fp)

		IOWR_16DIRECT(Address, i*2, Data_Write);
 4020904:	e0bff617 	ldw	r2,-40(fp)
 4020908:	1085883a 	add	r2,r2,r2
 402090c:	1007883a 	mov	r3,r2
 4020910:	e0bffe17 	ldw	r2,-8(fp)
 4020914:	1885883a 	add	r2,r3,r2
 4020918:	1007883a 	mov	r3,r2
 402091c:	e0bff78b 	ldhu	r2,-34(fp)
 4020920:	1880002d 	sthio	r2,0(r3)
	float G_Color = 0;

	uint16_t B_Mask = 0b0000000000011111;
	float B_Color = 0;

	for (int i = 0; i <= (Length_Address/2); i ++) {
 4020924:	e0bff617 	ldw	r2,-40(fp)
 4020928:	10800044 	addi	r2,r2,1
 402092c:	e0bff615 	stw	r2,-40(fp)
 4020930:	e0bfff17 	ldw	r2,-4(fp)
 4020934:	1006d7fa 	srli	r3,r2,31
 4020938:	1885883a 	add	r2,r3,r2
 402093c:	1005d07a 	srai	r2,r2,1
 4020940:	1007883a 	mov	r3,r2
 4020944:	e0bff617 	ldw	r2,-40(fp)
 4020948:	18bf800e 	bge	r3,r2,402074c <_gp+0xfffdf54c>

		Data_Write = (int) R_Color + G_Color + B_Color;

		IOWR_16DIRECT(Address, i*2, Data_Write);
	}
}
 402094c:	0001883a 	nop
 4020950:	e037883a 	mov	sp,fp
 4020954:	dfc00117 	ldw	ra,4(sp)
 4020958:	df000017 	ldw	fp,0(sp)
 402095c:	dec00204 	addi	sp,sp,8
 4020960:	f800283a 	ret

04020964 <Camera_Acquisition_Module_SETUP_Address_Memory>:
#define CAMERA_MODULE_REGISTER_START          (2 * 4) /* RW */
#define CAMERA_MODULE_REGISTER_STOP            (3 * 4) /* RW */
#define CAMERA_MODULE_REGISTER_SNAPSHOT             (4 * 4) /* RW */
#define CAMERA_MODULE_REGISTER_FLAG            (5 * 4) /* RW */
int Camera_Acquisition_Module_SETUP_Address_Memory(int Address)
{
 4020964:	defffd04 	addi	sp,sp,-12
 4020968:	df000215 	stw	fp,8(sp)
 402096c:	df000204 	addi	fp,sp,8
 4020970:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(CAMERA_MODULE_0_BASE, CAMERA_MODULE_REGISTER_ADDRESS, Address);
 4020974:	00810134 	movhi	r2,1028
 4020978:	10841804 	addi	r2,r2,4192
 402097c:	e0ffff17 	ldw	r3,-4(fp)
 4020980:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
 4020984:	e03ffe15 	stw	zero,-8(fp)
 4020988:	00000306 	br	4020998 <Camera_Acquisition_Module_SETUP_Address_Memory+0x34>
 402098c:	e0bffe17 	ldw	r2,-8(fp)
 4020990:	10800044 	addi	r2,r2,1
 4020994:	e0bffe15 	stw	r2,-8(fp)
 4020998:	e0bffe17 	ldw	r2,-8(fp)
 402099c:	10800290 	cmplti	r2,r2,10
 40209a0:	103ffa1e 	bne	r2,zero,402098c <_gp+0xfffdf78c>
	return IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_ADDRESS);
 40209a4:	00810134 	movhi	r2,1028
 40209a8:	10841804 	addi	r2,r2,4192
 40209ac:	10800037 	ldwio	r2,0(r2)
}
 40209b0:	e037883a 	mov	sp,fp
 40209b4:	df000017 	ldw	fp,0(sp)
 40209b8:	dec00104 	addi	sp,sp,4
 40209bc:	f800283a 	ret

040209c0 <Camera_Acquisition_Module_SETUP_Length_Frame>:
// Length : Number of pixel to store. reminder : 1 Memory slot =2 pixels and 1 memory slot = 4 bytes
int Camera_Acquisition_Module_SETUP_Length_Frame(int Pixel_Number)
{
 40209c0:	defffd04 	addi	sp,sp,-12
 40209c4:	df000215 	stw	fp,8(sp)
 40209c8:	df000204 	addi	fp,sp,8
 40209cc:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(CAMERA_MODULE_0_BASE, CAMERA_MODULE_REGISTER_LENGTH, Pixel_Number/2*4);//*4 because 32bits;
 40209d0:	e0bfff17 	ldw	r2,-4(fp)
 40209d4:	1006d7fa 	srli	r3,r2,31
 40209d8:	1885883a 	add	r2,r3,r2
 40209dc:	1005d07a 	srai	r2,r2,1
 40209e0:	1085883a 	add	r2,r2,r2
 40209e4:	1085883a 	add	r2,r2,r2
 40209e8:	1007883a 	mov	r3,r2
 40209ec:	00810134 	movhi	r2,1028
 40209f0:	10841904 	addi	r2,r2,4196
 40209f4:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
 40209f8:	e03ffe15 	stw	zero,-8(fp)
 40209fc:	00000306 	br	4020a0c <Camera_Acquisition_Module_SETUP_Length_Frame+0x4c>
 4020a00:	e0bffe17 	ldw	r2,-8(fp)
 4020a04:	10800044 	addi	r2,r2,1
 4020a08:	e0bffe15 	stw	r2,-8(fp)
 4020a0c:	e0bffe17 	ldw	r2,-8(fp)
 4020a10:	10800290 	cmplti	r2,r2,10
 4020a14:	103ffa1e 	bne	r2,zero,4020a00 <_gp+0xfffdf800>
	return IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_LENGTH);
 4020a18:	00810134 	movhi	r2,1028
 4020a1c:	10841904 	addi	r2,r2,4196
 4020a20:	10800037 	ldwio	r2,0(r2)
}
 4020a24:	e037883a 	mov	sp,fp
 4020a28:	df000017 	ldw	fp,0(sp)
 4020a2c:	dec00104 	addi	sp,sp,4
 4020a30:	f800283a 	ret

04020a34 <Camera_Acquisition_Module_Start>:
int Camera_Acquisition_Module_Start()
{
 4020a34:	defffe04 	addi	sp,sp,-8
 4020a38:	df000115 	stw	fp,4(sp)
 4020a3c:	df000104 	addi	fp,sp,4
	IOWR_32DIRECT(CAMERA_MODULE_0_BASE, CAMERA_MODULE_REGISTER_START, 1);//*4 because 32bits;
 4020a40:	00c00044 	movi	r3,1
 4020a44:	00810134 	movhi	r2,1028
 4020a48:	10841a04 	addi	r2,r2,4200
 4020a4c:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
 4020a50:	e03fff15 	stw	zero,-4(fp)
 4020a54:	00000306 	br	4020a64 <Camera_Acquisition_Module_Start+0x30>
 4020a58:	e0bfff17 	ldw	r2,-4(fp)
 4020a5c:	10800044 	addi	r2,r2,1
 4020a60:	e0bfff15 	stw	r2,-4(fp)
 4020a64:	e0bfff17 	ldw	r2,-4(fp)
 4020a68:	10800290 	cmplti	r2,r2,10
 4020a6c:	103ffa1e 	bne	r2,zero,4020a58 <_gp+0xfffdf858>
	return IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_START);
 4020a70:	00810134 	movhi	r2,1028
 4020a74:	10841a04 	addi	r2,r2,4200
 4020a78:	10800037 	ldwio	r2,0(r2)
}
 4020a7c:	e037883a 	mov	sp,fp
 4020a80:	df000017 	ldw	fp,0(sp)
 4020a84:	dec00104 	addi	sp,sp,4
 4020a88:	f800283a 	ret

04020a8c <Camera_Acquisition_Module_Stop>:
int Camera_Acquisition_Module_Stop()
{
 4020a8c:	defffe04 	addi	sp,sp,-8
 4020a90:	df000115 	stw	fp,4(sp)
 4020a94:	df000104 	addi	fp,sp,4
	IOWR_32DIRECT(CAMERA_MODULE_0_BASE, CAMERA_MODULE_REGISTER_STOP, 1);//*4 because 32bits;
 4020a98:	00c00044 	movi	r3,1
 4020a9c:	00810134 	movhi	r2,1028
 4020aa0:	10841b04 	addi	r2,r2,4204
 4020aa4:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
 4020aa8:	e03fff15 	stw	zero,-4(fp)
 4020aac:	00000306 	br	4020abc <Camera_Acquisition_Module_Stop+0x30>
 4020ab0:	e0bfff17 	ldw	r2,-4(fp)
 4020ab4:	10800044 	addi	r2,r2,1
 4020ab8:	e0bfff15 	stw	r2,-4(fp)
 4020abc:	e0bfff17 	ldw	r2,-4(fp)
 4020ac0:	10800290 	cmplti	r2,r2,10
 4020ac4:	103ffa1e 	bne	r2,zero,4020ab0 <_gp+0xfffdf8b0>
	return IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_STOP);
 4020ac8:	00810134 	movhi	r2,1028
 4020acc:	10841b04 	addi	r2,r2,4204
 4020ad0:	10800037 	ldwio	r2,0(r2)
}
 4020ad4:	e037883a 	mov	sp,fp
 4020ad8:	df000017 	ldw	fp,0(sp)
 4020adc:	dec00104 	addi	sp,sp,4
 4020ae0:	f800283a 	ret

04020ae4 <Camera_Acquisition_Module_Display_Registers>:
void Camera_Acquisition_Module_Display_Registers()
{
 4020ae4:	defffe04 	addi	sp,sp,-8
 4020ae8:	dfc00115 	stw	ra,4(sp)
 4020aec:	df000015 	stw	fp,0(sp)
 4020af0:	d839883a 	mov	fp,sp
	printf("CAMERA_MODULE_REGISTER_ADDRESS=0x%x\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_ADDRESS));
 4020af4:	00810134 	movhi	r2,1028
 4020af8:	10841804 	addi	r2,r2,4192
 4020afc:	10800037 	ldwio	r2,0(r2)
 4020b00:	100b883a 	mov	r5,r2
 4020b04:	010100f4 	movhi	r4,1027
 4020b08:	211c2604 	addi	r4,r4,28824
 4020b0c:	4025fe00 	call	4025fe0 <printf>
	printf("CAMERA_MODULE_REGISTER_LENGTH=%d\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_LENGTH));
 4020b10:	00810134 	movhi	r2,1028
 4020b14:	10841904 	addi	r2,r2,4196
 4020b18:	10800037 	ldwio	r2,0(r2)
 4020b1c:	100b883a 	mov	r5,r2
 4020b20:	010100f4 	movhi	r4,1027
 4020b24:	211c3004 	addi	r4,r4,28864
 4020b28:	4025fe00 	call	4025fe0 <printf>
	printf("CAMERA_MODULE_REGISTER_START=%d\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_START));
 4020b2c:	00810134 	movhi	r2,1028
 4020b30:	10841a04 	addi	r2,r2,4200
 4020b34:	10800037 	ldwio	r2,0(r2)
 4020b38:	100b883a 	mov	r5,r2
 4020b3c:	010100f4 	movhi	r4,1027
 4020b40:	211c3904 	addi	r4,r4,28900
 4020b44:	4025fe00 	call	4025fe0 <printf>
	printf("CAMERA_MODULE_REGISTER_STOP=%d\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_STOP));
 4020b48:	00810134 	movhi	r2,1028
 4020b4c:	10841b04 	addi	r2,r2,4204
 4020b50:	10800037 	ldwio	r2,0(r2)
 4020b54:	100b883a 	mov	r5,r2
 4020b58:	010100f4 	movhi	r4,1027
 4020b5c:	211c4204 	addi	r4,r4,28936
 4020b60:	4025fe00 	call	4025fe0 <printf>
	printf("CAMERA_MODULE_REGISTER_SNAPSHOT=%d\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_SNAPSHOT));
 4020b64:	00810134 	movhi	r2,1028
 4020b68:	10841c04 	addi	r2,r2,4208
 4020b6c:	10800037 	ldwio	r2,0(r2)
 4020b70:	100b883a 	mov	r5,r2
 4020b74:	010100f4 	movhi	r4,1027
 4020b78:	211c4b04 	addi	r4,r4,28972
 4020b7c:	4025fe00 	call	4025fe0 <printf>
	printf("CAMERA_MODULE_REGISTER_FLAG=%d\r\n",IORD_32DIRECT(CAMERA_MODULE_0_BASE,CAMERA_MODULE_REGISTER_FLAG));
 4020b80:	00810134 	movhi	r2,1028
 4020b84:	10841d04 	addi	r2,r2,4212
 4020b88:	10800037 	ldwio	r2,0(r2)
 4020b8c:	100b883a 	mov	r5,r2
 4020b90:	010100f4 	movhi	r4,1027
 4020b94:	211c5504 	addi	r4,r4,29012
 4020b98:	4025fe00 	call	4025fe0 <printf>
}
 4020b9c:	0001883a 	nop
 4020ba0:	e037883a 	mov	sp,fp
 4020ba4:	dfc00117 	ldw	ra,4(sp)
 4020ba8:	df000017 	ldw	fp,0(sp)
 4020bac:	dec00204 	addi	sp,sp,8
 4020bb0:	f800283a 	ret

04020bb4 <Test_Camera_Memory>:
/* Pixels Generator Part */

 void Test_Camera_Memory()
 {
 4020bb4:	defffe04 	addi	sp,sp,-8
 4020bb8:	dfc00115 	stw	ra,4(sp)
 4020bbc:	df000015 	stw	fp,0(sp)
 4020bc0:	d839883a 	mov	fp,sp
 	Camera_Acquisition_Module_Stop();
 4020bc4:	4020a8c0 	call	4020a8c <Camera_Acquisition_Module_Stop>
 	delay(5000);
 4020bc8:	0104e204 	movi	r4,5000
 4020bcc:	4020df00 	call	4020df0 <delay>
 	Camera_Acquisition_Module_SETUP_Address_Memory(SDRAM_CONTROLLER_BASE);//Address of the HPC, 256 MB Available from it
 4020bd0:	0009883a 	mov	r4,zero
 4020bd4:	40209640 	call	4020964 <Camera_Acquisition_Module_SETUP_Address_Memory>
 	Camera_Acquisition_Module_SETUP_Length_Frame(76800);//320*240
 4020bd8:	01000074 	movhi	r4,1
 4020bdc:	210b0004 	addi	r4,r4,11264
 4020be0:	40209c00 	call	40209c0 <Camera_Acquisition_Module_SETUP_Length_Frame>
 	Camera_Acquisition_Module_Start();//Set a one in the start register
 4020be4:	4020a340 	call	4020a34 <Camera_Acquisition_Module_Start>


 			Capture_Image_Computer(SDRAM_CONTROLLER_BASE,2);
 4020be8:	01400084 	movi	r5,2
 4020bec:	0009883a 	mov	r4,zero
 4020bf0:	4020c240 	call	4020c24 <Capture_Image_Computer>
 			Capture_Image_Computer(SDRAM_CONTROLLER_BASE,1);
 4020bf4:	01400044 	movi	r5,1
 4020bf8:	0009883a 	mov	r4,zero
 4020bfc:	4020c240 	call	4020c24 <Capture_Image_Computer>
 			Capture_Image_Computer(SDRAM_CONTROLLER_BASE,0);
 4020c00:	000b883a 	mov	r5,zero
 4020c04:	0009883a 	mov	r4,zero
 4020c08:	4020c240 	call	4020c24 <Capture_Image_Computer>


 }
 4020c0c:	0001883a 	nop
 4020c10:	e037883a 	mov	sp,fp
 4020c14:	dfc00117 	ldw	ra,4(sp)
 4020c18:	df000017 	ldw	fp,0(sp)
 4020c1c:	dec00204 	addi	sp,sp,8
 4020c20:	f800283a 	ret

04020c24 <Capture_Image_Computer>:
 void Capture_Image_Computer(int Address, int Frame)
 {
 4020c24:	deffda04 	addi	sp,sp,-152
 4020c28:	dfc02515 	stw	ra,148(sp)
 4020c2c:	df002415 	stw	fp,144(sp)
 4020c30:	df002404 	addi	fp,sp,144
 4020c34:	e13ffe15 	stw	r4,-8(fp)
 4020c38:	e17fff15 	stw	r5,-4(fp)
 	char filename[80];
 	sprintf(filename, "/mnt/host/image%d.ppm",Frame);
 4020c3c:	e0bfe404 	addi	r2,fp,-112
 4020c40:	e1bfff17 	ldw	r6,-4(fp)
 4020c44:	014100f4 	movhi	r5,1027
 4020c48:	295c5e04 	addi	r5,r5,29048
 4020c4c:	1009883a 	mov	r4,r2
 4020c50:	402638c0 	call	402638c <sprintf>
 		FILE *foutput = fopen(filename, "w");
 4020c54:	e0bfe404 	addi	r2,fp,-112
 4020c58:	014100f4 	movhi	r5,1027
 4020c5c:	295c6404 	addi	r5,r5,29072
 4020c60:	1009883a 	mov	r4,r2
 4020c64:	40248640 	call	4024864 <fopen>
 4020c68:	e0bfe215 	stw	r2,-120(fp)
 		if (foutput) {
 4020c6c:	e0bfe217 	ldw	r2,-120(fp)
 4020c70:	10005426 	beq	r2,zero,4020dc4 <Capture_Image_Computer+0x1a0>
 			/* Use fprintf function to write to file through file pointer */
 			fprintf(foutput, "P3\n320 240\n32\n");
 4020c74:	e1ffe217 	ldw	r7,-120(fp)
 4020c78:	01800384 	movi	r6,14
 4020c7c:	01400044 	movi	r5,1
 4020c80:	010100f4 	movhi	r4,1027
 4020c84:	211c6504 	addi	r4,r4,29076
 4020c88:	402542c0 	call	402542c <fwrite>
 			printf("Good: open \"%s\" for writing\n", filename);
 4020c8c:	e0bfe404 	addi	r2,fp,-112
 4020c90:	100b883a 	mov	r5,r2
 4020c94:	010100f4 	movhi	r4,1027
 4020c98:	211c6904 	addi	r4,r4,29092
 4020c9c:	4025fe00 	call	4025fe0 <printf>
 			//
 			delay(5000000);
 4020ca0:	01001334 	movhi	r4,76
 4020ca4:	2112d004 	addi	r4,r4,19264
 4020ca8:	4020df00 	call	4020df0 <delay>
 			int Pixels[6];

 			for (int i=0;i<240;i++)
 4020cac:	e03fe015 	stw	zero,-128(fp)
 4020cb0:	00003e06 	br	4020dac <Capture_Image_Computer+0x188>
 			{
 				for(int j=0;j<160;j++)
 4020cb4:	e03fe115 	stw	zero,-124(fp)
 4020cb8:	00002406 	br	4020d4c <Capture_Image_Computer+0x128>
 				{
 					int32_t Data_Memory_Case=IORD_32DIRECT(Address, i*160*4+j*4+160*240*4*Frame);
 4020cbc:	e0bfe017 	ldw	r2,-128(fp)
 4020cc0:	10c02824 	muli	r3,r2,160
 4020cc4:	e0bfe117 	ldw	r2,-124(fp)
 4020cc8:	1887883a 	add	r3,r3,r2
 4020ccc:	e13fff17 	ldw	r4,-4(fp)
 4020cd0:	00a58014 	movui	r2,38400
 4020cd4:	2085383a 	mul	r2,r4,r2
 4020cd8:	1885883a 	add	r2,r3,r2
 4020cdc:	1085883a 	add	r2,r2,r2
 4020ce0:	1085883a 	add	r2,r2,r2
 4020ce4:	1007883a 	mov	r3,r2
 4020ce8:	e0bffe17 	ldw	r2,-8(fp)
 4020cec:	1885883a 	add	r2,r3,r2
 4020cf0:	10800037 	ldwio	r2,0(r2)
 4020cf4:	e0bfe315 	stw	r2,-116(fp)
 					Convert_Pixels(Data_Memory_Case,Pixels);
 4020cf8:	e0bff804 	addi	r2,fp,-32
 4020cfc:	100b883a 	mov	r5,r2
 4020d00:	e13fe317 	ldw	r4,-116(fp)
 4020d04:	4020e340 	call	4020e34 <Convert_Pixels>
 					//printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0,Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 					fprintf(foutput, "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);
 4020d08:	e1bff817 	ldw	r6,-32(fp)
 4020d0c:	e1fff917 	ldw	r7,-28(fp)
 4020d10:	e0bffa17 	ldw	r2,-24(fp)
 4020d14:	e0fffb17 	ldw	r3,-20(fp)
 4020d18:	e13ffc17 	ldw	r4,-16(fp)
 4020d1c:	e17ffd17 	ldw	r5,-12(fp)
 4020d20:	d9400315 	stw	r5,12(sp)
 4020d24:	d9000215 	stw	r4,8(sp)
 4020d28:	d8c00115 	stw	r3,4(sp)
 4020d2c:	d8800015 	stw	r2,0(sp)
 4020d30:	014100f4 	movhi	r5,1027
 4020d34:	295c7104 	addi	r5,r5,29124
 4020d38:	e13fe217 	ldw	r4,-120(fp)
 4020d3c:	40248a40 	call	40248a4 <fprintf>
 			delay(5000000);
 			int Pixels[6];

 			for (int i=0;i<240;i++)
 			{
 				for(int j=0;j<160;j++)
 4020d40:	e0bfe117 	ldw	r2,-124(fp)
 4020d44:	10800044 	addi	r2,r2,1
 4020d48:	e0bfe115 	stw	r2,-124(fp)
 4020d4c:	e0bfe117 	ldw	r2,-124(fp)
 4020d50:	10802810 	cmplti	r2,r2,160
 4020d54:	103fd91e 	bne	r2,zero,4020cbc <_gp+0xfffdfabc>

 					fprintf(foutput, "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 				}
 				//printf( "\n");
 				printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);
 4020d58:	e17ff817 	ldw	r5,-32(fp)
 4020d5c:	e1bff917 	ldw	r6,-28(fp)
 4020d60:	e1fffa17 	ldw	r7,-24(fp)
 4020d64:	e0bffb17 	ldw	r2,-20(fp)
 4020d68:	e0fffc17 	ldw	r3,-16(fp)
 4020d6c:	e13ffd17 	ldw	r4,-12(fp)
 4020d70:	d9000215 	stw	r4,8(sp)
 4020d74:	d8c00115 	stw	r3,4(sp)
 4020d78:	d8800015 	stw	r2,0(sp)
 4020d7c:	010100f4 	movhi	r4,1027
 4020d80:	211c7104 	addi	r4,r4,29124
 4020d84:	4025fe00 	call	4025fe0 <printf>

 				fprintf(foutput, "\r\n");
 4020d88:	e1ffe217 	ldw	r7,-120(fp)
 4020d8c:	01800084 	movi	r6,2
 4020d90:	01400044 	movi	r5,1
 4020d94:	010100f4 	movhi	r4,1027
 4020d98:	211c7804 	addi	r4,r4,29152
 4020d9c:	402542c0 	call	402542c <fwrite>
 			printf("Good: open \"%s\" for writing\n", filename);
 			//
 			delay(5000000);
 			int Pixels[6];

 			for (int i=0;i<240;i++)
 4020da0:	e0bfe017 	ldw	r2,-128(fp)
 4020da4:	10800044 	addi	r2,r2,1
 4020da8:	e0bfe015 	stw	r2,-128(fp)
 4020dac:	e0bfe017 	ldw	r2,-128(fp)
 4020db0:	10803c10 	cmplti	r2,r2,240
 4020db4:	103fbf1e 	bne	r2,zero,4020cb4 <_gp+0xfffdfab4>
 				printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 				fprintf(foutput, "\r\n");

 			}
 			fclose(foutput);
 4020db8:	e13fe217 	ldw	r4,-120(fp)
 4020dbc:	40241140 	call	4024114 <fclose>
 		else
 		{
 			printf("Error: could not open \"%s\" for writing\n", filename);

 		}
 }
 4020dc0:	00000506 	br	4020dd8 <Capture_Image_Computer+0x1b4>
 			}
 			fclose(foutput);
 		}
 		else
 		{
 			printf("Error: could not open \"%s\" for writing\n", filename);
 4020dc4:	e0bfe404 	addi	r2,fp,-112
 4020dc8:	100b883a 	mov	r5,r2
 4020dcc:	010100f4 	movhi	r4,1027
 4020dd0:	211c7904 	addi	r4,r4,29156
 4020dd4:	4025fe00 	call	4025fe0 <printf>

 		}
 }
 4020dd8:	0001883a 	nop
 4020ddc:	e037883a 	mov	sp,fp
 4020de0:	dfc00117 	ldw	ra,4(sp)
 4020de4:	df000017 	ldw	fp,0(sp)
 4020de8:	dec00204 	addi	sp,sp,8
 4020dec:	f800283a 	ret

04020df0 <delay>:

 void delay(int duration )
 {
 4020df0:	defffd04 	addi	sp,sp,-12
 4020df4:	df000215 	stw	fp,8(sp)
 4020df8:	df000204 	addi	fp,sp,8
 4020dfc:	e13fff15 	stw	r4,-4(fp)
 	int i;
 	for (i=0;i<duration;i++);
 4020e00:	e03ffe15 	stw	zero,-8(fp)
 4020e04:	00000306 	br	4020e14 <delay+0x24>
 4020e08:	e0bffe17 	ldw	r2,-8(fp)
 4020e0c:	10800044 	addi	r2,r2,1
 4020e10:	e0bffe15 	stw	r2,-8(fp)
 4020e14:	e0fffe17 	ldw	r3,-8(fp)
 4020e18:	e0bfff17 	ldw	r2,-4(fp)
 4020e1c:	18bffa16 	blt	r3,r2,4020e08 <_gp+0xfffdfc08>
 }
 4020e20:	0001883a 	nop
 4020e24:	e037883a 	mov	sp,fp
 4020e28:	df000017 	ldw	fp,0(sp)
 4020e2c:	dec00104 	addi	sp,sp,4
 4020e30:	f800283a 	ret

04020e34 <Convert_Pixels>:
 void Convert_Pixels(int32_t Data,int* Storage)
 {
 4020e34:	defffc04 	addi	sp,sp,-16
 4020e38:	dfc00315 	stw	ra,12(sp)
 4020e3c:	df000215 	stw	fp,8(sp)
 4020e40:	df000204 	addi	fp,sp,8
 4020e44:	e13ffe15 	stw	r4,-8(fp)
 4020e48:	e17fff15 	stw	r5,-4(fp)
 	Extract_Colors(Data&0xFFFF,Storage);
 4020e4c:	e0bffe17 	ldw	r2,-8(fp)
 4020e50:	10bfffcc 	andi	r2,r2,65535
 4020e54:	10a0001c 	xori	r2,r2,32768
 4020e58:	10a00004 	addi	r2,r2,-32768
 4020e5c:	e17fff17 	ldw	r5,-4(fp)
 4020e60:	1009883a 	mov	r4,r2
 4020e64:	4020ea80 	call	4020ea8 <Extract_Colors>
 	Extract_Colors((Data&0xFFFF0000)>>16,Storage+3);
 4020e68:	e0bffe17 	ldw	r2,-8(fp)
 4020e6c:	1004d43a 	srli	r2,r2,16
 4020e70:	10ffffcc 	andi	r3,r2,65535
 4020e74:	18e0001c 	xori	r3,r3,32768
 4020e78:	18e00004 	addi	r3,r3,-32768
 4020e7c:	e0bfff17 	ldw	r2,-4(fp)
 4020e80:	10800304 	addi	r2,r2,12
 4020e84:	100b883a 	mov	r5,r2
 4020e88:	1809883a 	mov	r4,r3
 4020e8c:	4020ea80 	call	4020ea8 <Extract_Colors>

 }
 4020e90:	0001883a 	nop
 4020e94:	e037883a 	mov	sp,fp
 4020e98:	dfc00117 	ldw	ra,4(sp)
 4020e9c:	df000017 	ldw	fp,0(sp)
 4020ea0:	dec00204 	addi	sp,sp,8
 4020ea4:	f800283a 	ret

04020ea8 <Extract_Colors>:
 void Extract_Colors(int16_t Data,int* Storage)
 {
 4020ea8:	defff904 	addi	sp,sp,-28
 4020eac:	df000615 	stw	fp,24(sp)
 4020eb0:	df000604 	addi	fp,sp,24
 4020eb4:	2005883a 	mov	r2,r4
 4020eb8:	e17fff15 	stw	r5,-4(fp)
 4020ebc:	e0bffe0d 	sth	r2,-8(fp)
 	int Red=0, Blue=0, Green=0;
 4020ec0:	e03ffa15 	stw	zero,-24(fp)
 4020ec4:	e03ffb15 	stw	zero,-20(fp)
 4020ec8:	e03ffc15 	stw	zero,-16(fp)
 	Red=(Data & 0xF800)>>11;
 4020ecc:	e0bffe0f 	ldh	r2,-8(fp)
 4020ed0:	10be000c 	andi	r2,r2,63488
 4020ed4:	1005d2fa 	srai	r2,r2,11
 4020ed8:	e0bffa15 	stw	r2,-24(fp)
 	Blue=(Data & 0x001F);
 4020edc:	e0bffe0b 	ldhu	r2,-8(fp)
 4020ee0:	10bfffcc 	andi	r2,r2,65535
 4020ee4:	108007cc 	andi	r2,r2,31
 4020ee8:	e0bffb15 	stw	r2,-20(fp)
 	Green=(Data & 0x07E0)>>5;
 4020eec:	e0bffe0b 	ldhu	r2,-8(fp)
 4020ef0:	10bfffcc 	andi	r2,r2,65535
 4020ef4:	1081f80c 	andi	r2,r2,2016
 4020ef8:	1005d17a 	srai	r2,r2,5
 4020efc:	e0bffc15 	stw	r2,-16(fp)
 	int Color=Red;
 4020f00:	e0bffa17 	ldw	r2,-24(fp)
 4020f04:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
 4020f08:	e0bffd17 	ldw	r2,-12(fp)
 4020f0c:	10800850 	cmplti	r2,r2,33
 4020f10:	1000041e 	bne	r2,zero,4020f24 <Extract_Colors+0x7c>
 		Storage[0]=32;
 4020f14:	e0bfff17 	ldw	r2,-4(fp)
 4020f18:	00c00804 	movi	r3,32
 4020f1c:	10c00015 	stw	r3,0(r2)
 4020f20:	00000306 	br	4020f30 <Extract_Colors+0x88>
 	else
 		Storage[0]=Color;
 4020f24:	e0bfff17 	ldw	r2,-4(fp)
 4020f28:	e0fffd17 	ldw	r3,-12(fp)
 4020f2c:	10c00015 	stw	r3,0(r2)
 	Color=Green/2;
 4020f30:	e0bffc17 	ldw	r2,-16(fp)
 4020f34:	1006d7fa 	srli	r3,r2,31
 4020f38:	1885883a 	add	r2,r3,r2
 4020f3c:	1005d07a 	srai	r2,r2,1
 4020f40:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
 4020f44:	e0bffd17 	ldw	r2,-12(fp)
 4020f48:	10800850 	cmplti	r2,r2,33
 4020f4c:	1000051e 	bne	r2,zero,4020f64 <Extract_Colors+0xbc>
 		Storage[1]=32;
 4020f50:	e0bfff17 	ldw	r2,-4(fp)
 4020f54:	10800104 	addi	r2,r2,4
 4020f58:	00c00804 	movi	r3,32
 4020f5c:	10c00015 	stw	r3,0(r2)
 4020f60:	00000406 	br	4020f74 <Extract_Colors+0xcc>
 	else
 		Storage[1]=Color;
 4020f64:	e0bfff17 	ldw	r2,-4(fp)
 4020f68:	10800104 	addi	r2,r2,4
 4020f6c:	e0fffd17 	ldw	r3,-12(fp)
 4020f70:	10c00015 	stw	r3,0(r2)
 	Color=Blue;
 4020f74:	e0bffb17 	ldw	r2,-20(fp)
 4020f78:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
 4020f7c:	e0bffd17 	ldw	r2,-12(fp)
 4020f80:	10800850 	cmplti	r2,r2,33
 4020f84:	1000051e 	bne	r2,zero,4020f9c <Extract_Colors+0xf4>
 		Storage[2]=32;
 4020f88:	e0bfff17 	ldw	r2,-4(fp)
 4020f8c:	10800204 	addi	r2,r2,8
 4020f90:	00c00804 	movi	r3,32
 4020f94:	10c00015 	stw	r3,0(r2)
 	else
 		Storage[2]=Color;
 	return ;
 4020f98:	00000506 	br	4020fb0 <Extract_Colors+0x108>
 		Storage[1]=Color;
 	Color=Blue;
 	if(Color>32)
 		Storage[2]=32;
 	else
 		Storage[2]=Color;
 4020f9c:	e0bfff17 	ldw	r2,-4(fp)
 4020fa0:	10800204 	addi	r2,r2,8
 4020fa4:	e0fffd17 	ldw	r3,-12(fp)
 4020fa8:	10c00015 	stw	r3,0(r2)
 	return ;
 4020fac:	0001883a 	nop
 }
 4020fb0:	e037883a 	mov	sp,fp
 4020fb4:	df000017 	ldw	fp,0(sp)
 4020fb8:	dec00104 	addi	sp,sp,4
 4020fbc:	f800283a 	ret

04020fc0 <Partial_Image>:
#include "Function_Header.h"

//------------------------------------------------------------------------------------------------

void Partial_Image(int Start_Address, int Length, int Color) // Function to display in the desired area the desired color.
{
 4020fc0:	defff904 	addi	sp,sp,-28
 4020fc4:	dfc00615 	stw	ra,24(sp)
 4020fc8:	df000515 	stw	fp,20(sp)
 4020fcc:	df000504 	addi	fp,sp,20
 4020fd0:	e13ffd15 	stw	r4,-12(fp)
 4020fd4:	e17ffe15 	stw	r5,-8(fp)
 4020fd8:	e1bfff15 	stw	r6,-4(fp)
	volatile int i;
	volatile int Verif;

	for (i = Start_Address; i < Length; i += 2) {
 4020fdc:	e0bffd17 	ldw	r2,-12(fp)
 4020fe0:	e0bffb15 	stw	r2,-20(fp)
 4020fe4:	00001106 	br	402102c <Partial_Image+0x6c>
		IOWR_16DIRECT(SDRAM_CONTROLLER_BASE, i, Color);
 4020fe8:	e0bffb17 	ldw	r2,-20(fp)
 4020fec:	1007883a 	mov	r3,r2
 4020ff0:	e0bfff0b 	ldhu	r2,-4(fp)
 4020ff4:	1880002d 	sthio	r2,0(r3)
		Verif = IORD_16DIRECT(SDRAM_CONTROLLER_BASE, i);
 4020ff8:	e0bffb17 	ldw	r2,-20(fp)
 4020ffc:	1080002b 	ldhuio	r2,0(r2)
 4021000:	10bfffcc 	andi	r2,r2,65535
 4021004:	e0bffc15 	stw	r2,-16(fp)
		if (Verif != Color) {
 4021008:	e0fffc17 	ldw	r3,-16(fp)
 402100c:	e0bfff17 	ldw	r2,-4(fp)
 4021010:	18800326 	beq	r3,r2,4021020 <Partial_Image+0x60>
			printf("Error: Data read does not corresponds to data written !\n");
 4021014:	010100f4 	movhi	r4,1027
 4021018:	211c8304 	addi	r4,r4,29196
 402101c:	40260dc0 	call	40260dc <puts>
void Partial_Image(int Start_Address, int Length, int Color) // Function to display in the desired area the desired color.
{
	volatile int i;
	volatile int Verif;

	for (i = Start_Address; i < Length; i += 2) {
 4021020:	e0bffb17 	ldw	r2,-20(fp)
 4021024:	10800084 	addi	r2,r2,2
 4021028:	e0bffb15 	stw	r2,-20(fp)
 402102c:	e0fffb17 	ldw	r3,-20(fp)
 4021030:	e0bffe17 	ldw	r2,-8(fp)
 4021034:	18bfec16 	blt	r3,r2,4020fe8 <_gp+0xfffdfde8>
		if (Verif != Color) {
			printf("Error: Data read does not corresponds to data written !\n");
		}
	}

	printf("Memory filled !\n");
 4021038:	010100f4 	movhi	r4,1027
 402103c:	211c9104 	addi	r4,r4,29252
 4021040:	40260dc0 	call	40260dc <puts>
}
 4021044:	0001883a 	nop
 4021048:	e037883a 	mov	sp,fp
 402104c:	dfc00117 	ldw	ra,4(sp)
 4021050:	df000017 	ldw	fp,0(sp)
 4021054:	dec00204 	addi	sp,sp,8
 4021058:	f800283a 	ret

0402105c <RGB_Flag>:

//------------------------------------------------------------------------------------------------

void RGB_Flag(int Start_Address, int Length) // Function to display RGB colors.
{
 402105c:	defff904 	addi	sp,sp,-28
 4021060:	dfc00615 	stw	ra,24(sp)
 4021064:	df000515 	stw	fp,20(sp)
 4021068:	dc000415 	stw	r16,16(sp)
 402106c:	df000504 	addi	fp,sp,20
 4021070:	e13ffd15 	stw	r4,-12(fp)
 4021074:	e17ffe15 	stw	r5,-8(fp)
	volatile int i;

	volatile int Verif;

	for (i = 0; i < Length; i += 2) {
 4021078:	e03ffb15 	stw	zero,-20(fp)
 402107c:	00005b06 	br	40211ec <RGB_Flag+0x190>
		if ( i <= Length/3) {
 4021080:	e0bffe17 	ldw	r2,-8(fp)
 4021084:	014000c4 	movi	r5,3
 4021088:	1009883a 	mov	r4,r2
 402108c:	40228740 	call	4022874 <__divsi3>
 4021090:	1007883a 	mov	r3,r2
 4021094:	e0bffb17 	ldw	r2,-20(fp)
 4021098:	18801516 	blt	r3,r2,40210f0 <RGB_Flag+0x94>
			IOWR_16DIRECT(Start_Address, i, RED);
 402109c:	e0bffb17 	ldw	r2,-20(fp)
 40210a0:	1007883a 	mov	r3,r2
 40210a4:	e0bffd17 	ldw	r2,-12(fp)
 40210a8:	1885883a 	add	r2,r3,r2
 40210ac:	1007883a 	mov	r3,r2
 40210b0:	00be0004 	movi	r2,-2048
 40210b4:	1880002d 	sthio	r2,0(r3)
			Verif = IORD_16DIRECT(Start_Address, i);
 40210b8:	e0bffb17 	ldw	r2,-20(fp)
 40210bc:	1007883a 	mov	r3,r2
 40210c0:	e0bffd17 	ldw	r2,-12(fp)
 40210c4:	1885883a 	add	r2,r3,r2
 40210c8:	1080002b 	ldhuio	r2,0(r2)
 40210cc:	10bfffcc 	andi	r2,r2,65535
 40210d0:	e0bffc15 	stw	r2,-16(fp)
			if (Verif != RED) {
 40210d4:	e0fffc17 	ldw	r3,-16(fp)
 40210d8:	00be0014 	movui	r2,63488
 40210dc:	18804026 	beq	r3,r2,40211e0 <RGB_Flag+0x184>
				printf("Error: Data read does not corresponds to data written !\n");
 40210e0:	010100f4 	movhi	r4,1027
 40210e4:	211c8304 	addi	r4,r4,29196
 40210e8:	40260dc0 	call	40260dc <puts>
 40210ec:	00003c06 	br	40211e0 <RGB_Flag+0x184>
			}
		}
		else if ( (i > Length/3) & (i < (2*Length)/3)) {
 40210f0:	e0bffe17 	ldw	r2,-8(fp)
 40210f4:	014000c4 	movi	r5,3
 40210f8:	1009883a 	mov	r4,r2
 40210fc:	40228740 	call	4022874 <__divsi3>
 4021100:	1007883a 	mov	r3,r2
 4021104:	e0bffb17 	ldw	r2,-20(fp)
 4021108:	1884803a 	cmplt	r2,r3,r2
 402110c:	1021883a 	mov	r16,r2
 4021110:	e0bffe17 	ldw	r2,-8(fp)
 4021114:	1085883a 	add	r2,r2,r2
 4021118:	014000c4 	movi	r5,3
 402111c:	1009883a 	mov	r4,r2
 4021120:	40228740 	call	4022874 <__divsi3>
 4021124:	1007883a 	mov	r3,r2
 4021128:	e0bffb17 	ldw	r2,-20(fp)
 402112c:	10c4803a 	cmplt	r2,r2,r3
 4021130:	8084703a 	and	r2,r16,r2
 4021134:	10803fcc 	andi	r2,r2,255
 4021138:	10001526 	beq	r2,zero,4021190 <RGB_Flag+0x134>
			IOWR_16DIRECT(Start_Address,i,GREEN);
 402113c:	e0bffb17 	ldw	r2,-20(fp)
 4021140:	1007883a 	mov	r3,r2
 4021144:	e0bffd17 	ldw	r2,-12(fp)
 4021148:	1885883a 	add	r2,r3,r2
 402114c:	1007883a 	mov	r3,r2
 4021150:	0081f804 	movi	r2,2016
 4021154:	1880002d 	sthio	r2,0(r3)
			Verif = IORD_16DIRECT(Start_Address,i);
 4021158:	e0bffb17 	ldw	r2,-20(fp)
 402115c:	1007883a 	mov	r3,r2
 4021160:	e0bffd17 	ldw	r2,-12(fp)
 4021164:	1885883a 	add	r2,r3,r2
 4021168:	1080002b 	ldhuio	r2,0(r2)
 402116c:	10bfffcc 	andi	r2,r2,65535
 4021170:	e0bffc15 	stw	r2,-16(fp)
			if (Verif != GREEN) {
 4021174:	e0bffc17 	ldw	r2,-16(fp)
 4021178:	1081f820 	cmpeqi	r2,r2,2016
 402117c:	1000181e 	bne	r2,zero,40211e0 <RGB_Flag+0x184>
				printf("Error !\n");
 4021180:	010100f4 	movhi	r4,1027
 4021184:	211c9504 	addi	r4,r4,29268
 4021188:	40260dc0 	call	40260dc <puts>
 402118c:	00001406 	br	40211e0 <RGB_Flag+0x184>
			}
		}
		else {
			IOWR_16DIRECT(Start_Address,i,BLUE);
 4021190:	e0bffb17 	ldw	r2,-20(fp)
 4021194:	1007883a 	mov	r3,r2
 4021198:	e0bffd17 	ldw	r2,-12(fp)
 402119c:	1885883a 	add	r2,r3,r2
 40211a0:	1007883a 	mov	r3,r2
 40211a4:	008007c4 	movi	r2,31
 40211a8:	1880002d 	sthio	r2,0(r3)
			Verif = IORD_16DIRECT(Start_Address,i);
 40211ac:	e0bffb17 	ldw	r2,-20(fp)
 40211b0:	1007883a 	mov	r3,r2
 40211b4:	e0bffd17 	ldw	r2,-12(fp)
 40211b8:	1885883a 	add	r2,r3,r2
 40211bc:	1080002b 	ldhuio	r2,0(r2)
 40211c0:	10bfffcc 	andi	r2,r2,65535
 40211c4:	e0bffc15 	stw	r2,-16(fp)
			if (Verif != BLUE) {
 40211c8:	e0bffc17 	ldw	r2,-16(fp)
 40211cc:	108007e0 	cmpeqi	r2,r2,31
 40211d0:	1000031e 	bne	r2,zero,40211e0 <RGB_Flag+0x184>
				printf("Error !\n");
 40211d4:	010100f4 	movhi	r4,1027
 40211d8:	211c9504 	addi	r4,r4,29268
 40211dc:	40260dc0 	call	40260dc <puts>
{
	volatile int i;

	volatile int Verif;

	for (i = 0; i < Length; i += 2) {
 40211e0:	e0bffb17 	ldw	r2,-20(fp)
 40211e4:	10800084 	addi	r2,r2,2
 40211e8:	e0bffb15 	stw	r2,-20(fp)
 40211ec:	e0fffb17 	ldw	r3,-20(fp)
 40211f0:	e0bffe17 	ldw	r2,-8(fp)
 40211f4:	18bfa216 	blt	r3,r2,4021080 <_gp+0xfffdfe80>
				printf("Error !\n");
			}
		}
	}

	printf("Memory filled !\n");
 40211f8:	010100f4 	movhi	r4,1027
 40211fc:	211c9104 	addi	r4,r4,29252
 4021200:	40260dc0 	call	40260dc <puts>
}
 4021204:	0001883a 	nop
 4021208:	e6ffff04 	addi	sp,fp,-4
 402120c:	dfc00217 	ldw	ra,8(sp)
 4021210:	df000117 	ldw	fp,4(sp)
 4021214:	dc000017 	ldw	r16,0(sp)
 4021218:	dec00304 	addi	sp,sp,12
 402121c:	f800283a 	ret

04021220 <TRDB_D5M_log2>:
///////////////////////
// GENERAL FUNCTIONS //
///////////////////////

// Calculates log2 of a number. Attention: the number must be a power of 2
static uint16_t TRDB_D5M_log2(uint16_t power_of_2) {
 4021220:	defffe04 	addi	sp,sp,-8
 4021224:	df000115 	stw	fp,4(sp)
 4021228:	df000104 	addi	fp,sp,4
 402122c:	2005883a 	mov	r2,r4
 4021230:	e0bfff0d 	sth	r2,-4(fp)
    if      (power_of_2 == 0x0001) return 0;
 4021234:	e0bfff0b 	ldhu	r2,-4(fp)
 4021238:	10800058 	cmpnei	r2,r2,1
 402123c:	1000021e 	bne	r2,zero,4021248 <TRDB_D5M_log2+0x28>
 4021240:	0005883a 	mov	r2,zero
 4021244:	00004706 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0002) return 1;
 4021248:	e0bfff0b 	ldhu	r2,-4(fp)
 402124c:	10800098 	cmpnei	r2,r2,2
 4021250:	1000021e 	bne	r2,zero,402125c <TRDB_D5M_log2+0x3c>
 4021254:	00800044 	movi	r2,1
 4021258:	00004206 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0004) return 2;
 402125c:	e0bfff0b 	ldhu	r2,-4(fp)
 4021260:	10800118 	cmpnei	r2,r2,4
 4021264:	1000021e 	bne	r2,zero,4021270 <TRDB_D5M_log2+0x50>
 4021268:	00800084 	movi	r2,2
 402126c:	00003d06 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0008) return 3;
 4021270:	e0bfff0b 	ldhu	r2,-4(fp)
 4021274:	10800218 	cmpnei	r2,r2,8
 4021278:	1000021e 	bne	r2,zero,4021284 <TRDB_D5M_log2+0x64>
 402127c:	008000c4 	movi	r2,3
 4021280:	00003806 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0010) return 4;
 4021284:	e0bfff0b 	ldhu	r2,-4(fp)
 4021288:	10800418 	cmpnei	r2,r2,16
 402128c:	1000021e 	bne	r2,zero,4021298 <TRDB_D5M_log2+0x78>
 4021290:	00800104 	movi	r2,4
 4021294:	00003306 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0020) return 5;
 4021298:	e0bfff0b 	ldhu	r2,-4(fp)
 402129c:	10800818 	cmpnei	r2,r2,32
 40212a0:	1000021e 	bne	r2,zero,40212ac <TRDB_D5M_log2+0x8c>
 40212a4:	00800144 	movi	r2,5
 40212a8:	00002e06 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0040) return 6;
 40212ac:	e0bfff0b 	ldhu	r2,-4(fp)
 40212b0:	10801018 	cmpnei	r2,r2,64
 40212b4:	1000021e 	bne	r2,zero,40212c0 <TRDB_D5M_log2+0xa0>
 40212b8:	00800184 	movi	r2,6
 40212bc:	00002906 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0080) return 7;
 40212c0:	e0bfff0b 	ldhu	r2,-4(fp)
 40212c4:	10802018 	cmpnei	r2,r2,128
 40212c8:	1000021e 	bne	r2,zero,40212d4 <TRDB_D5M_log2+0xb4>
 40212cc:	008001c4 	movi	r2,7
 40212d0:	00002406 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0100) return 8;
 40212d4:	e0bfff0b 	ldhu	r2,-4(fp)
 40212d8:	10804018 	cmpnei	r2,r2,256
 40212dc:	1000021e 	bne	r2,zero,40212e8 <TRDB_D5M_log2+0xc8>
 40212e0:	00800204 	movi	r2,8
 40212e4:	00001f06 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0200) return 9;
 40212e8:	e0bfff0b 	ldhu	r2,-4(fp)
 40212ec:	10808018 	cmpnei	r2,r2,512
 40212f0:	1000021e 	bne	r2,zero,40212fc <TRDB_D5M_log2+0xdc>
 40212f4:	00800244 	movi	r2,9
 40212f8:	00001a06 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0400) return 10;
 40212fc:	e0bfff0b 	ldhu	r2,-4(fp)
 4021300:	10810018 	cmpnei	r2,r2,1024
 4021304:	1000021e 	bne	r2,zero,4021310 <TRDB_D5M_log2+0xf0>
 4021308:	00800284 	movi	r2,10
 402130c:	00001506 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0800) return 11;
 4021310:	e0bfff0b 	ldhu	r2,-4(fp)
 4021314:	10820018 	cmpnei	r2,r2,2048
 4021318:	1000021e 	bne	r2,zero,4021324 <TRDB_D5M_log2+0x104>
 402131c:	008002c4 	movi	r2,11
 4021320:	00001006 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x1000) return 12;
 4021324:	e0bfff0b 	ldhu	r2,-4(fp)
 4021328:	10840018 	cmpnei	r2,r2,4096
 402132c:	1000021e 	bne	r2,zero,4021338 <TRDB_D5M_log2+0x118>
 4021330:	00800304 	movi	r2,12
 4021334:	00000b06 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x2000) return 13;
 4021338:	e0bfff0b 	ldhu	r2,-4(fp)
 402133c:	10880018 	cmpnei	r2,r2,8192
 4021340:	1000021e 	bne	r2,zero,402134c <TRDB_D5M_log2+0x12c>
 4021344:	00800344 	movi	r2,13
 4021348:	00000606 	br	4021364 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x4000) return 14;
 402134c:	e0bfff0b 	ldhu	r2,-4(fp)
 4021350:	10900018 	cmpnei	r2,r2,16384
 4021354:	1000021e 	bne	r2,zero,4021360 <TRDB_D5M_log2+0x140>
 4021358:	00800384 	movi	r2,14
 402135c:	00000106 	br	4021364 <TRDB_D5M_log2+0x144>
    else                           return 15;
 4021360:	008003c4 	movi	r2,15
}
 4021364:	e037883a 	mov	sp,fp
 4021368:	df000017 	ldw	fp,0(sp)
 402136c:	dec00104 	addi	sp,sp,4
 4021370:	f800283a 	ret

04021374 <TRDB_D5M_shift_amount>:

static uint16_t TRDB_D5M_shift_amount(uint16_t mask) {
 4021374:	defffd04 	addi	sp,sp,-12
 4021378:	dfc00215 	stw	ra,8(sp)
 402137c:	df000115 	stw	fp,4(sp)
 4021380:	df000104 	addi	fp,sp,4
 4021384:	2005883a 	mov	r2,r4
 4021388:	e0bfff0d 	sth	r2,-4(fp)
    // (mask & -mask) clears all but the lowest bit of x
    return TRDB_D5M_log2(mask & (~mask + 1));
 402138c:	e0bfff0b 	ldhu	r2,-4(fp)
 4021390:	0085c83a 	sub	r2,zero,r2
 4021394:	1007883a 	mov	r3,r2
 4021398:	e0bfff0b 	ldhu	r2,-4(fp)
 402139c:	1884703a 	and	r2,r3,r2
 40213a0:	10bfffcc 	andi	r2,r2,65535
 40213a4:	1009883a 	mov	r4,r2
 40213a8:	40212200 	call	4021220 <TRDB_D5M_log2>
}
 40213ac:	e037883a 	mov	sp,fp
 40213b0:	dfc00117 	ldw	ra,4(sp)
 40213b4:	df000017 	ldw	fp,0(sp)
 40213b8:	dec00204 	addi	sp,sp,8
 40213bc:	f800283a 	ret

040213c0 <TRDB_D5M_READ>:

static uint16_t TRDB_D5M_READ(uint16_t full_reg_value, uint16_t mask) {
 40213c0:	defffb04 	addi	sp,sp,-20
 40213c4:	dfc00415 	stw	ra,16(sp)
 40213c8:	df000315 	stw	fp,12(sp)
 40213cc:	dc000215 	stw	r16,8(sp)
 40213d0:	df000304 	addi	fp,sp,12
 40213d4:	2007883a 	mov	r3,r4
 40213d8:	2805883a 	mov	r2,r5
 40213dc:	e0fffd0d 	sth	r3,-12(fp)
 40213e0:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & mask) >> TRDB_D5M_shift_amount(mask);
 40213e4:	e0fffd0b 	ldhu	r3,-12(fp)
 40213e8:	e0bffe0b 	ldhu	r2,-8(fp)
 40213ec:	1884703a 	and	r2,r3,r2
 40213f0:	143fffcc 	andi	r16,r2,65535
 40213f4:	e0bffe0b 	ldhu	r2,-8(fp)
 40213f8:	1009883a 	mov	r4,r2
 40213fc:	40213740 	call	4021374 <TRDB_D5M_shift_amount>
 4021400:	10bfffcc 	andi	r2,r2,65535
 4021404:	8085d83a 	sra	r2,r16,r2
}
 4021408:	e6ffff04 	addi	sp,fp,-4
 402140c:	dfc00217 	ldw	ra,8(sp)
 4021410:	df000117 	ldw	fp,4(sp)
 4021414:	dc000017 	ldw	r16,0(sp)
 4021418:	dec00304 	addi	sp,sp,12
 402141c:	f800283a 	ret

04021420 <TRDB_D5M_WRITE>:

static uint16_t TRDB_D5M_WRITE(uint16_t full_reg_value, uint16_t mask, uint16_t write_value) {
 4021420:	defffa04 	addi	sp,sp,-24
 4021424:	dfc00515 	stw	ra,20(sp)
 4021428:	df000415 	stw	fp,16(sp)
 402142c:	dc000315 	stw	r16,12(sp)
 4021430:	df000404 	addi	fp,sp,16
 4021434:	2807883a 	mov	r3,r5
 4021438:	3005883a 	mov	r2,r6
 402143c:	e13ffc0d 	sth	r4,-16(fp)
 4021440:	e0fffd0d 	sth	r3,-12(fp)
 4021444:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & (~mask)) | ((write_value << TRDB_D5M_shift_amount(mask)) & mask);
 4021448:	e43ffe0b 	ldhu	r16,-8(fp)
 402144c:	e0bffd0b 	ldhu	r2,-12(fp)
 4021450:	1009883a 	mov	r4,r2
 4021454:	40213740 	call	4021374 <TRDB_D5M_shift_amount>
 4021458:	10bfffcc 	andi	r2,r2,65535
 402145c:	8084983a 	sll	r2,r16,r2
 4021460:	1007883a 	mov	r3,r2
 4021464:	e0bffc0b 	ldhu	r2,-16(fp)
 4021468:	1884f03a 	xor	r2,r3,r2
 402146c:	1007883a 	mov	r3,r2
 4021470:	e0bffd0b 	ldhu	r2,-12(fp)
 4021474:	1884703a 	and	r2,r3,r2
 4021478:	1007883a 	mov	r3,r2
 402147c:	e0bffc0b 	ldhu	r2,-16(fp)
 4021480:	1884f03a 	xor	r2,r3,r2
}
 4021484:	e6ffff04 	addi	sp,fp,-4
 4021488:	dfc00217 	ldw	ra,8(sp)
 402148c:	df000117 	ldw	fp,4(sp)
 4021490:	dc000017 	ldw	r16,0(sp)
 4021494:	dec00304 	addi	sp,sp,12
 4021498:	f800283a 	ret

0402149c <Table_Grayscale>:
#include "Function_Header.h"

//------------------------------------------------------------------------------------------------

void Table_Grayscale()
{
 402149c:	defff604 	addi	sp,sp,-40
 40214a0:	dfc00915 	stw	ra,36(sp)
 40214a4:	df000815 	stw	fp,32(sp)
 40214a8:	dc000715 	stw	r16,28(sp)
 40214ac:	df000804 	addi	fp,sp,32
 40214b0:	d815883a 	mov	r10,sp
 40214b4:	5021883a 	mov	r16,r10
	// If the code is to be used on a manually set table:
	const int size           = 1;
 40214b8:	02800044 	movi	r10,1
 40214bc:	e2bffb15 	stw	r10,-20(fp)
	uint16_t  Table[size];
 40214c0:	e2bffb17 	ldw	r10,-20(fp)
 40214c4:	52bfffc4 	addi	r10,r10,-1
 40214c8:	e2bffc15 	stw	r10,-16(fp)
 40214cc:	e2bffb17 	ldw	r10,-20(fp)
 40214d0:	5011883a 	mov	r8,r10
 40214d4:	0013883a 	mov	r9,zero
 40214d8:	4014d73a 	srli	r10,r8,28
 40214dc:	480a913a 	slli	r5,r9,4
 40214e0:	514ab03a 	or	r5,r10,r5
 40214e4:	4008913a 	slli	r4,r8,4
 40214e8:	e13ffb17 	ldw	r4,-20(fp)
 40214ec:	200d883a 	mov	r6,r4
 40214f0:	000f883a 	mov	r7,zero
 40214f4:	3008d73a 	srli	r4,r6,28
 40214f8:	3806913a 	slli	r3,r7,4
 40214fc:	20c6b03a 	or	r3,r4,r3
 4021500:	3004913a 	slli	r2,r6,4
 4021504:	e0bffb17 	ldw	r2,-20(fp)
 4021508:	1085883a 	add	r2,r2,r2
 402150c:	10800044 	addi	r2,r2,1
 4021510:	108000c4 	addi	r2,r2,3
 4021514:	1004d0ba 	srli	r2,r2,2
 4021518:	1085883a 	add	r2,r2,r2
 402151c:	1085883a 	add	r2,r2,r2
 4021520:	d8b7c83a 	sub	sp,sp,r2
 4021524:	d8800104 	addi	r2,sp,4
 4021528:	10800044 	addi	r2,r2,1
 402152c:	1004d07a 	srli	r2,r2,1
 4021530:	1085883a 	add	r2,r2,r2
 4021534:	e0bffd15 	stw	r2,-12(fp)
	uint32_t  Length_Address = (size-1) * 2;
 4021538:	e0bffb17 	ldw	r2,-20(fp)
 402153c:	10bfffc4 	addi	r2,r2,-1
 4021540:	1085883a 	add	r2,r2,r2
 4021544:	e0bffe15 	stw	r2,-8(fp)

	// Performance counter initialization:
	PERF_RESET(PERFORMANCE_COUNTER_BASE);
 4021548:	00c00044 	movi	r3,1
 402154c:	00810134 	movhi	r2,1028
 4021550:	10840004 	addi	r2,r2,4096
 4021554:	10c00035 	stwio	r3,0(r2)
	PERF_START_MEASURING(PERFORMANCE_COUNTER_BASE);
 4021558:	0007883a 	mov	r3,zero
 402155c:	00810134 	movhi	r2,1028
 4021560:	10840104 	addi	r2,r2,4100
 4021564:	10c00035 	stwio	r3,0(r2)

	// Section 1: C_Grayscale
	for (int j = 0; j < size; j ++) { Table[j] = j; }
 4021568:	e03ff915 	stw	zero,-28(fp)
 402156c:	00000a06 	br	4021598 <Table_Grayscale+0xfc>
 4021570:	e0bff917 	ldw	r2,-28(fp)
 4021574:	1009883a 	mov	r4,r2
 4021578:	e0fffd17 	ldw	r3,-12(fp)
 402157c:	e0bff917 	ldw	r2,-28(fp)
 4021580:	1085883a 	add	r2,r2,r2
 4021584:	1885883a 	add	r2,r3,r2
 4021588:	1100000d 	sth	r4,0(r2)
 402158c:	e0bff917 	ldw	r2,-28(fp)
 4021590:	10800044 	addi	r2,r2,1
 4021594:	e0bff915 	stw	r2,-28(fp)
 4021598:	e0fff917 	ldw	r3,-28(fp)
 402159c:	e0bffb17 	ldw	r2,-20(fp)
 40215a0:	18bff316 	blt	r3,r2,4021570 <_gp+0xfffe0370>
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 1);
 40215a4:	0007883a 	mov	r3,zero
 40215a8:	00810134 	movhi	r2,1028
 40215ac:	10840504 	addi	r2,r2,4116
 40215b0:	10c00035 	stwio	r3,0(r2)
	C_Grayscale_Table(Table, Length_Address);
 40215b4:	e0bffd17 	ldw	r2,-12(fp)
 40215b8:	e17ffe17 	ldw	r5,-8(fp)
 40215bc:	1009883a 	mov	r4,r2
 40215c0:	40204ac0 	call	40204ac <C_Grayscale_Table>
	PERF_END(PERFORMANCE_COUNTER_BASE, 1);
 40215c4:	0007883a 	mov	r3,zero
 40215c8:	00810134 	movhi	r2,1028
 40215cc:	10840404 	addi	r2,r2,4112
 40215d0:	10c00035 	stwio	r3,0(r2)

	// Section 2: Accelerator_Grayscale
	for (int j = 0; j < size; j ++) { Table[j] = j; }
 40215d4:	e03ffa15 	stw	zero,-24(fp)
 40215d8:	00000a06 	br	4021604 <Table_Grayscale+0x168>
 40215dc:	e0bffa17 	ldw	r2,-24(fp)
 40215e0:	1009883a 	mov	r4,r2
 40215e4:	e0fffd17 	ldw	r3,-12(fp)
 40215e8:	e0bffa17 	ldw	r2,-24(fp)
 40215ec:	1085883a 	add	r2,r2,r2
 40215f0:	1885883a 	add	r2,r3,r2
 40215f4:	1100000d 	sth	r4,0(r2)
 40215f8:	e0bffa17 	ldw	r2,-24(fp)
 40215fc:	10800044 	addi	r2,r2,1
 4021600:	e0bffa15 	stw	r2,-24(fp)
 4021604:	e0fffa17 	ldw	r3,-24(fp)
 4021608:	e0bffb17 	ldw	r2,-20(fp)
 402160c:	18bff316 	blt	r3,r2,40215dc <_gp+0xfffe03dc>
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 2);
 4021610:	0007883a 	mov	r3,zero
 4021614:	00810134 	movhi	r2,1028
 4021618:	10840904 	addi	r2,r2,4132
 402161c:	10c00035 	stwio	r3,0(r2)
	Accelerator_Grayscale_Table(Table, Length_Address);
 4021620:	e0bffd17 	ldw	r2,-12(fp)
 4021624:	e17ffe17 	ldw	r5,-8(fp)
 4021628:	1009883a 	mov	r4,r2
 402162c:	40203940 	call	4020394 <Accelerator_Grayscale_Table>
	PERF_END(PERFORMANCE_COUNTER_BASE, 2);
 4021630:	0007883a 	mov	r3,zero
 4021634:	00810134 	movhi	r2,1028
 4021638:	10840804 	addi	r2,r2,4128
 402163c:	10c00035 	stwio	r3,0(r2)

	// Report of the two section:
	perf_print_formatted_report((void *)PERFORMANCE_COUNTER_BASE,
 4021640:	4035a780 	call	4035a78 <alt_get_cpu_freq>
 4021644:	1007883a 	mov	r3,r2
 4021648:	008100f4 	movhi	r2,1027
 402164c:	109c9b04 	addi	r2,r2,29292
 4021650:	d8800015 	stw	r2,0(sp)
 4021654:	01c100f4 	movhi	r7,1027
 4021658:	39dc9704 	addi	r7,r7,29276
 402165c:	01800084 	movi	r6,2
 4021660:	180b883a 	mov	r5,r3
 4021664:	01010134 	movhi	r4,1028
 4021668:	21040004 	addi	r4,r4,4096
 402166c:	4035a9c0 	call	4035a9c <perf_print_formatted_report>
 4021670:	8037883a 	mov	sp,r16
								alt_get_cpu_freq(),
								2,
								"C   - Size 1",
								"DMA - Size 1");
}
 4021674:	0001883a 	nop
 4021678:	e6ffff04 	addi	sp,fp,-4
 402167c:	dfc00217 	ldw	ra,8(sp)
 4021680:	df000117 	ldw	fp,4(sp)
 4021684:	dc000017 	ldw	r16,0(sp)
 4021688:	dec00304 	addi	sp,sp,12
 402168c:	f800283a 	ret

04021690 <Image_Grayscale>:

//------------------------------------------------------------------------------------------------

void Image_Grayscale()
{
 4021690:	defffc04 	addi	sp,sp,-16
 4021694:	dfc00315 	stw	ra,12(sp)
 4021698:	df000215 	stw	fp,8(sp)
 402169c:	df000204 	addi	fp,sp,8
	// If the code is to be used on an image:
	uint32_t Address        = SDRAM_CONTROLLER_BASE;
 40216a0:	e03ffe15 	stw	zero,-8(fp)
	uint32_t Length_Address = 153600;
 40216a4:	008000b4 	movhi	r2,2
 40216a8:	10960004 	addi	r2,r2,22528
 40216ac:	e0bfff15 	stw	r2,-4(fp)

	// Section 1: C_Grayscale
	Partial_Image(Address, Length_Address, RED);
 40216b0:	e0bffe17 	ldw	r2,-8(fp)
 40216b4:	e0ffff17 	ldw	r3,-4(fp)
 40216b8:	01be0014 	movui	r6,63488
 40216bc:	180b883a 	mov	r5,r3
 40216c0:	1009883a 	mov	r4,r2
 40216c4:	4020fc00 	call	4020fc0 <Partial_Image>
	C_Grayscale_Image(Address, Length_Address);
 40216c8:	e0bffe17 	ldw	r2,-8(fp)
 40216cc:	e0ffff17 	ldw	r3,-4(fp)
 40216d0:	180b883a 	mov	r5,r3
 40216d4:	1009883a 	mov	r4,r2
 40216d8:	40207000 	call	4020700 <C_Grayscale_Image>

	// Section 2: Accelerator_Grayscale
	Partial_Image(Address, Length_Address, RED);
 40216dc:	e0bffe17 	ldw	r2,-8(fp)
 40216e0:	e0ffff17 	ldw	r3,-4(fp)
 40216e4:	01be0014 	movui	r6,63488
 40216e8:	180b883a 	mov	r5,r3
 40216ec:	1009883a 	mov	r4,r2
 40216f0:	4020fc00 	call	4020fc0 <Partial_Image>
	Accelerator_Grayscale_Image(Address, Length_Address);
 40216f4:	e0bffe17 	ldw	r2,-8(fp)
 40216f8:	e0ffff17 	ldw	r3,-4(fp)
 40216fc:	180b883a 	mov	r5,r3
 4021700:	1009883a 	mov	r4,r2
 4021704:	40204200 	call	4020420 <Accelerator_Grayscale_Image>
}
 4021708:	0001883a 	nop
 402170c:	e037883a 	mov	sp,fp
 4021710:	dfc00117 	ldw	ra,4(sp)
 4021714:	df000017 	ldw	fp,0(sp)
 4021718:	dec00204 	addi	sp,sp,8
 402171c:	f800283a 	ret

04021720 <Fill_Memory>:
#define RED_BLUE_Color 	0xF800001F
#define BLUE_GREEN_Color	0x001F07E0
#define WHITE_Color       0xFFFFFFFF
#define BLACK_Color		0x00000000
void Fill_Memory(int Start, int End, int Color) // Function to display in the desired area the desired color.
{
 4021720:	defff904 	addi	sp,sp,-28
 4021724:	dfc00615 	stw	ra,24(sp)
 4021728:	df000515 	stw	fp,20(sp)
 402172c:	df000504 	addi	fp,sp,20
 4021730:	e13ffd15 	stw	r4,-12(fp)
 4021734:	e17ffe15 	stw	r5,-8(fp)
 4021738:	e1bfff15 	stw	r6,-4(fp)
	volatile int i;

	for (i = Start; i < End; i += 4)
 402173c:	e0bffd17 	ldw	r2,-12(fp)
 4021740:	e0bffb15 	stw	r2,-20(fp)
 4021744:	00001006 	br	4021788 <Fill_Memory+0x68>
	{
		volatile int Verif;

		IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,Color);
 4021748:	e0bffb17 	ldw	r2,-20(fp)
 402174c:	1007883a 	mov	r3,r2
 4021750:	e0bfff17 	ldw	r2,-4(fp)
 4021754:	18800035 	stwio	r2,0(r3)
		Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 4021758:	e0bffb17 	ldw	r2,-20(fp)
 402175c:	10800037 	ldwio	r2,0(r2)
 4021760:	e0bffc15 	stw	r2,-16(fp)
		if (Verif != Color)
 4021764:	e0fffc17 	ldw	r3,-16(fp)
 4021768:	e0bfff17 	ldw	r2,-4(fp)
 402176c:	18800326 	beq	r3,r2,402177c <Fill_Memory+0x5c>
		{
			printf("Error !\n");
 4021770:	010100f4 	movhi	r4,1027
 4021774:	211c9f04 	addi	r4,r4,29308
 4021778:	40260dc0 	call	40260dc <puts>
#define BLACK_Color		0x00000000
void Fill_Memory(int Start, int End, int Color) // Function to display in the desired area the desired color.
{
	volatile int i;

	for (i = Start; i < End; i += 4)
 402177c:	e0bffb17 	ldw	r2,-20(fp)
 4021780:	10800104 	addi	r2,r2,4
 4021784:	e0bffb15 	stw	r2,-20(fp)
 4021788:	e0fffb17 	ldw	r3,-20(fp)
 402178c:	e0bffe17 	ldw	r2,-8(fp)
 4021790:	18bfed16 	blt	r3,r2,4021748 <_gp+0xfffe0548>
		{
			printf("Error !\n");
		}
	}

	printf("Memory filled !\n");
 4021794:	010100f4 	movhi	r4,1027
 4021798:	211ca104 	addi	r4,r4,29316
 402179c:	40260dc0 	call	40260dc <puts>
}
 40217a0:	0001883a 	nop
 40217a4:	e037883a 	mov	sp,fp
 40217a8:	dfc00117 	ldw	ra,4(sp)
 40217ac:	df000017 	ldw	fp,0(sp)
 40217b0:	dec00204 	addi	sp,sp,8
 40217b4:	f800283a 	ret

040217b8 <Fill_Memory_RGBG>:

void Fill_Memory_RGBG(void) // Function to display stripes of different colors.
{
 40217b8:	defffc04 	addi	sp,sp,-16
 40217bc:	dfc00315 	stw	ra,12(sp)
 40217c0:	df000215 	stw	fp,8(sp)
 40217c4:	df000204 	addi	fp,sp,8
	volatile int i;

	volatile int Verif;

		for (i = 0; i < LENGTHBUFFER; i += 4)
 40217c8:	e03ffe15 	stw	zero,-8(fp)
 40217cc:	00004406 	br	40218e0 <Fill_Memory_RGBG+0x128>
		{
			if ( i< LENGTHBUFFER/4)
 40217d0:	e0bffe17 	ldw	r2,-8(fp)
 40217d4:	00e57fd4 	movui	r3,38399
 40217d8:	18800a16 	blt	r3,r2,4021804 <Fill_Memory_RGBG+0x4c>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,RED_Color);
 40217dc:	e0bffe17 	ldw	r2,-8(fp)
 40217e0:	1007883a 	mov	r3,r2
 40217e4:	00be0074 	movhi	r2,63489
 40217e8:	10be0004 	addi	r2,r2,-2048
 40217ec:	18800035 	stwio	r2,0(r3)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 40217f0:	e0bffe17 	ldw	r2,-8(fp)
 40217f4:	10800037 	ldwio	r2,0(r2)
 40217f8:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != RED)
 40217fc:	e0bfff17 	ldw	r2,-4(fp)
 4021800:	00003406 	br	40218d4 <Fill_Memory_RGBG+0x11c>
				{
				}
			}
			else if ( i> LENGTHBUFFER/4 & i<LENGTHBUFFER/2)
 4021804:	e0bffe17 	ldw	r2,-8(fp)
 4021808:	00e58014 	movui	r3,38400
 402180c:	1884803a 	cmplt	r2,r3,r2
 4021810:	1009883a 	mov	r4,r2
 4021814:	e0fffe17 	ldw	r3,-8(fp)
 4021818:	00800074 	movhi	r2,1
 402181c:	108affc4 	addi	r2,r2,11263
 4021820:	10c4403a 	cmpge	r2,r2,r3
 4021824:	2084703a 	and	r2,r4,r2
 4021828:	10803fcc 	andi	r2,r2,255
 402182c:	10000a26 	beq	r2,zero,4021858 <Fill_Memory_RGBG+0xa0>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,GREEN_Color);
 4021830:	e0bffe17 	ldw	r2,-8(fp)
 4021834:	1007883a 	mov	r3,r2
 4021838:	0081f834 	movhi	r2,2016
 402183c:	1081f804 	addi	r2,r2,2016
 4021840:	18800035 	stwio	r2,0(r3)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 4021844:	e0bffe17 	ldw	r2,-8(fp)
 4021848:	10800037 	ldwio	r2,0(r2)
 402184c:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != GREEN)
 4021850:	e0bfff17 	ldw	r2,-4(fp)
 4021854:	00001f06 	br	40218d4 <Fill_Memory_RGBG+0x11c>
				{
				}
			}
			else if ( i> LENGTHBUFFER/2 & i<3*LENGTHBUFFER/4)
 4021858:	e0fffe17 	ldw	r3,-8(fp)
 402185c:	00800074 	movhi	r2,1
 4021860:	108b0004 	addi	r2,r2,11264
 4021864:	10c4803a 	cmplt	r2,r2,r3
 4021868:	1009883a 	mov	r4,r2
 402186c:	e0fffe17 	ldw	r3,-8(fp)
 4021870:	008000b4 	movhi	r2,2
 4021874:	10b07fc4 	addi	r2,r2,-15873
 4021878:	10c4403a 	cmpge	r2,r2,r3
 402187c:	2084703a 	and	r2,r4,r2
 4021880:	10803fcc 	andi	r2,r2,255
 4021884:	10000a26 	beq	r2,zero,40218b0 <Fill_Memory_RGBG+0xf8>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,BLUE_Color);
 4021888:	e0bffe17 	ldw	r2,-8(fp)
 402188c:	1007883a 	mov	r3,r2
 4021890:	008007f4 	movhi	r2,31
 4021894:	108007c4 	addi	r2,r2,31
 4021898:	18800035 	stwio	r2,0(r3)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 402189c:	e0bffe17 	ldw	r2,-8(fp)
 40218a0:	10800037 	ldwio	r2,0(r2)
 40218a4:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != BLUE)
 40218a8:	e0bfff17 	ldw	r2,-4(fp)
 40218ac:	00000906 	br	40218d4 <Fill_Memory_RGBG+0x11c>
				{
				}
			}
			else
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,GREEN_Color);
 40218b0:	e0bffe17 	ldw	r2,-8(fp)
 40218b4:	1007883a 	mov	r3,r2
 40218b8:	0081f834 	movhi	r2,2016
 40218bc:	1081f804 	addi	r2,r2,2016
 40218c0:	18800035 	stwio	r2,0(r3)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 40218c4:	e0bffe17 	ldw	r2,-8(fp)
 40218c8:	10800037 	ldwio	r2,0(r2)
 40218cc:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != GREEN)
 40218d0:	e0bfff17 	ldw	r2,-4(fp)
{
	volatile int i;

	volatile int Verif;

		for (i = 0; i < LENGTHBUFFER; i += 4)
 40218d4:	e0bffe17 	ldw	r2,-8(fp)
 40218d8:	10800104 	addi	r2,r2,4
 40218dc:	e0bffe15 	stw	r2,-8(fp)
 40218e0:	e0fffe17 	ldw	r3,-8(fp)
 40218e4:	008000b4 	movhi	r2,2
 40218e8:	1095ffc4 	addi	r2,r2,22527
 40218ec:	10ffb80e 	bge	r2,r3,40217d0 <_gp+0xfffe05d0>
				}
			}

		}

		printf("Memory filled !\n");
 40218f0:	010100f4 	movhi	r4,1027
 40218f4:	211ca104 	addi	r4,r4,29316
 40218f8:	40260dc0 	call	40260dc <puts>
}
 40218fc:	0001883a 	nop
 4021900:	e037883a 	mov	sp,fp
 4021904:	dfc00117 	ldw	ra,4(sp)
 4021908:	df000017 	ldw	fp,0(sp)
 402190c:	dec00204 	addi	sp,sp,8
 4021910:	f800283a 	ret

04021914 <Fill_Memory_0_1>:

void Fill_Memory_0_1(void) // Function to display 2 white pixels and then 2 black pixels.
{
 4021914:	defffb04 	addi	sp,sp,-20
 4021918:	dfc00415 	stw	ra,16(sp)
 402191c:	df000315 	stw	fp,12(sp)
 4021920:	df000304 	addi	fp,sp,12
	volatile int i;
	volatile int j;

	volatile int Verif;

	j = 0;
 4021924:	e03ffe15 	stw	zero,-8(fp)

	for (i = 0; i < LENGTHBUFFER; i += 4)
 4021928:	e03ffd15 	stw	zero,-12(fp)
 402192c:	00002106 	br	40219b4 <Fill_Memory_0_1+0xa0>
		{
			if (j == 0)
 4021930:	e0bffe17 	ldw	r2,-8(fp)
 4021934:	10000e1e 	bne	r2,zero,4021970 <Fill_Memory_0_1+0x5c>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,0);
 4021938:	e0bffd17 	ldw	r2,-12(fp)
 402193c:	0007883a 	mov	r3,zero
 4021940:	10c00035 	stwio	r3,0(r2)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 4021944:	e0bffd17 	ldw	r2,-12(fp)
 4021948:	10800037 	ldwio	r2,0(r2)
 402194c:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != 0)
 4021950:	e0bfff17 	ldw	r2,-4(fp)
 4021954:	10000326 	beq	r2,zero,4021964 <Fill_Memory_0_1+0x50>
				{
					printf("Error !\n");
 4021958:	010100f4 	movhi	r4,1027
 402195c:	211c9f04 	addi	r4,r4,29308
 4021960:	40260dc0 	call	40260dc <puts>
				}
				j = 1;
 4021964:	00800044 	movi	r2,1
 4021968:	e0bffe15 	stw	r2,-8(fp)
 402196c:	00000e06 	br	40219a8 <Fill_Memory_0_1+0x94>
			}
			else
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,0xFFFFFFFF);
 4021970:	e0bffd17 	ldw	r2,-12(fp)
 4021974:	1007883a 	mov	r3,r2
 4021978:	00bfffc4 	movi	r2,-1
 402197c:	18800035 	stwio	r2,0(r3)
				Verif = IORD_32DIRECT(SDRAM_CONTROLLER_BASE,i);
 4021980:	e0bffd17 	ldw	r2,-12(fp)
 4021984:	10800037 	ldwio	r2,0(r2)
 4021988:	e0bfff15 	stw	r2,-4(fp)
				if (Verif != 0xFFFFFFFF)
 402198c:	e0bfff17 	ldw	r2,-4(fp)
 4021990:	10bfffe0 	cmpeqi	r2,r2,-1
 4021994:	1000031e 	bne	r2,zero,40219a4 <Fill_Memory_0_1+0x90>
				{
					printf("Error !\n");
 4021998:	010100f4 	movhi	r4,1027
 402199c:	211c9f04 	addi	r4,r4,29308
 40219a0:	40260dc0 	call	40260dc <puts>
				}
				j = 0;
 40219a4:	e03ffe15 	stw	zero,-8(fp)

	volatile int Verif;

	j = 0;

	for (i = 0; i < LENGTHBUFFER; i += 4)
 40219a8:	e0bffd17 	ldw	r2,-12(fp)
 40219ac:	10800104 	addi	r2,r2,4
 40219b0:	e0bffd15 	stw	r2,-12(fp)
 40219b4:	e0fffd17 	ldw	r3,-12(fp)
 40219b8:	008000b4 	movhi	r2,2
 40219bc:	1095ffc4 	addi	r2,r2,22527
 40219c0:	10ffdb0e 	bge	r2,r3,4021930 <_gp+0xfffe0730>
				}
				j = 0;
			}
		}

		printf("Memory filled !\n");
 40219c4:	010100f4 	movhi	r4,1027
 40219c8:	211ca104 	addi	r4,r4,29316
 40219cc:	40260dc0 	call	40260dc <puts>
}
 40219d0:	0001883a 	nop
 40219d4:	e037883a 	mov	sp,fp
 40219d8:	dfc00117 	ldw	ra,4(sp)
 40219dc:	df000017 	ldw	fp,0(sp)
 40219e0:	dec00204 	addi	sp,sp,8
 40219e4:	f800283a 	ret

040219e8 <Fill_Test_0>:


void Fill_Test_0(void)
{
 40219e8:	defffd04 	addi	sp,sp,-12
 40219ec:	df000215 	stw	fp,8(sp)
 40219f0:	df000204 	addi	fp,sp,8
	volatile int i;
	volatile int j;

	j = 0;
 40219f4:	e03fff15 	stw	zero,-4(fp)

	for (i = STARTADD; i < LENGTHBUFFER; i+=4)
 40219f8:	e03ffe15 	stw	zero,-8(fp)
 40219fc:	00002b06 	br	4021aac <Fill_Test_0+0xc4>
	{
		if (i < 160*4*8)
 4021a00:	e0bffe17 	ldw	r2,-8(fp)
 4021a04:	10850008 	cmpgei	r2,r2,5120
 4021a08:	10000e1e 	bne	r2,zero,4021a44 <Fill_Test_0+0x5c>
		{
			if(j == 0)
 4021a0c:	e0bfff17 	ldw	r2,-4(fp)
 4021a10:	1000061e 	bne	r2,zero,4021a2c <Fill_Test_0+0x44>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,BLACK_Color);
 4021a14:	e0bffe17 	ldw	r2,-8(fp)
 4021a18:	0007883a 	mov	r3,zero
 4021a1c:	10c00035 	stwio	r3,0(r2)
				j = 1;
 4021a20:	00800044 	movi	r2,1
 4021a24:	e0bfff15 	stw	r2,-4(fp)
 4021a28:	00001d06 	br	4021aa0 <Fill_Test_0+0xb8>
			}
			else
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,WHITE_Color);
 4021a2c:	e0bffe17 	ldw	r2,-8(fp)
 4021a30:	1007883a 	mov	r3,r2
 4021a34:	00bfffc4 	movi	r2,-1
 4021a38:	18800035 	stwio	r2,0(r3)
				j = 0;
 4021a3c:	e03fff15 	stw	zero,-4(fp)
 4021a40:	00001706 	br	4021aa0 <Fill_Test_0+0xb8>
			}
		}
		else if (i >= LENGTHBUFFER-160*4*8)
 4021a44:	e0fffe17 	ldw	r3,-8(fp)
 4021a48:	008000b4 	movhi	r2,2
 4021a4c:	1090ffc4 	addi	r2,r2,17407
 4021a50:	10c00e0e 	bge	r2,r3,4021a8c <Fill_Test_0+0xa4>
		{
			if(j == 0)
 4021a54:	e0bfff17 	ldw	r2,-4(fp)
 4021a58:	1000061e 	bne	r2,zero,4021a74 <Fill_Test_0+0x8c>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,BLACK_Color);
 4021a5c:	e0bffe17 	ldw	r2,-8(fp)
 4021a60:	0007883a 	mov	r3,zero
 4021a64:	10c00035 	stwio	r3,0(r2)
				j = 1;
 4021a68:	00800044 	movi	r2,1
 4021a6c:	e0bfff15 	stw	r2,-4(fp)
 4021a70:	00000b06 	br	4021aa0 <Fill_Test_0+0xb8>
			}
			else
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,WHITE_Color);
 4021a74:	e0bffe17 	ldw	r2,-8(fp)
 4021a78:	1007883a 	mov	r3,r2
 4021a7c:	00bfffc4 	movi	r2,-1
 4021a80:	18800035 	stwio	r2,0(r3)
				j = 0;
 4021a84:	e03fff15 	stw	zero,-4(fp)
 4021a88:	00000506 	br	4021aa0 <Fill_Test_0+0xb8>
			}
		}
		else
		{
			IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,RED_Color);
 4021a8c:	e0bffe17 	ldw	r2,-8(fp)
 4021a90:	1007883a 	mov	r3,r2
 4021a94:	00be0074 	movhi	r2,63489
 4021a98:	10be0004 	addi	r2,r2,-2048
 4021a9c:	18800035 	stwio	r2,0(r3)
	volatile int i;
	volatile int j;

	j = 0;

	for (i = STARTADD; i < LENGTHBUFFER; i+=4)
 4021aa0:	e0bffe17 	ldw	r2,-8(fp)
 4021aa4:	10800104 	addi	r2,r2,4
 4021aa8:	e0bffe15 	stw	r2,-8(fp)
 4021aac:	e0fffe17 	ldw	r3,-8(fp)
 4021ab0:	008000b4 	movhi	r2,2
 4021ab4:	1095ffc4 	addi	r2,r2,22527
 4021ab8:	10ffd10e 	bge	r2,r3,4021a00 <_gp+0xfffe0800>
		else
		{
			IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i,RED_Color);
		}
	}
}
 4021abc:	0001883a 	nop
 4021ac0:	e037883a 	mov	sp,fp
 4021ac4:	df000017 	ldw	fp,0(sp)
 4021ac8:	dec00104 	addi	sp,sp,4
 4021acc:	f800283a 	ret

04021ad0 <Fill_Test_1>:

void Fill_Test_1(void)
{
 4021ad0:	defffd04 	addi	sp,sp,-12
 4021ad4:	df000215 	stw	fp,8(sp)
 4021ad8:	df000204 	addi	fp,sp,8
	volatile int i;
	volatile int j;

	for (i = 0; i < 240; i += 1)
 4021adc:	e03ffe15 	stw	zero,-8(fp)
 4021ae0:	00002006 	br	4021b64 <Fill_Test_1+0x94>
	{
		for (j = 0; j < 160; j+=1)
 4021ae4:	e03fff15 	stw	zero,-4(fp)
 4021ae8:	00001806 	br	4021b4c <Fill_Test_1+0x7c>
		{
			if ( i == j)
 4021aec:	e0fffe17 	ldw	r3,-8(fp)
 4021af0:	e0bfff17 	ldw	r2,-4(fp)
 4021af4:	18800a1e 	bne	r3,r2,4021b20 <Fill_Test_1+0x50>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i*160*4 + j*4, WHITE_Color);
 4021af8:	e0bffe17 	ldw	r2,-8(fp)
 4021afc:	10c02824 	muli	r3,r2,160
 4021b00:	e0bfff17 	ldw	r2,-4(fp)
 4021b04:	1885883a 	add	r2,r3,r2
 4021b08:	1085883a 	add	r2,r2,r2
 4021b0c:	1085883a 	add	r2,r2,r2
 4021b10:	1007883a 	mov	r3,r2
 4021b14:	00bfffc4 	movi	r2,-1
 4021b18:	18800035 	stwio	r2,0(r3)
 4021b1c:	00000806 	br	4021b40 <Fill_Test_1+0x70>
			}
			else
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i*160*4 + j*4, BLACK_Color);
 4021b20:	e0bffe17 	ldw	r2,-8(fp)
 4021b24:	10c02824 	muli	r3,r2,160
 4021b28:	e0bfff17 	ldw	r2,-4(fp)
 4021b2c:	1885883a 	add	r2,r3,r2
 4021b30:	1085883a 	add	r2,r2,r2
 4021b34:	1085883a 	add	r2,r2,r2
 4021b38:	0007883a 	mov	r3,zero
 4021b3c:	10c00035 	stwio	r3,0(r2)
	volatile int i;
	volatile int j;

	for (i = 0; i < 240; i += 1)
	{
		for (j = 0; j < 160; j+=1)
 4021b40:	e0bfff17 	ldw	r2,-4(fp)
 4021b44:	10800044 	addi	r2,r2,1
 4021b48:	e0bfff15 	stw	r2,-4(fp)
 4021b4c:	e0bfff17 	ldw	r2,-4(fp)
 4021b50:	10802810 	cmplti	r2,r2,160
 4021b54:	103fe51e 	bne	r2,zero,4021aec <_gp+0xfffe08ec>
void Fill_Test_1(void)
{
	volatile int i;
	volatile int j;

	for (i = 0; i < 240; i += 1)
 4021b58:	e0bffe17 	ldw	r2,-8(fp)
 4021b5c:	10800044 	addi	r2,r2,1
 4021b60:	e0bffe15 	stw	r2,-8(fp)
 4021b64:	e0bffe17 	ldw	r2,-8(fp)
 4021b68:	10803c10 	cmplti	r2,r2,240
 4021b6c:	103fdd1e 	bne	r2,zero,4021ae4 <_gp+0xfffe08e4>
			{
				IOWR_32DIRECT(SDRAM_CONTROLLER_BASE,i*160*4 + j*4, BLACK_Color);
			}
		}
	}
}
 4021b70:	0001883a 	nop
 4021b74:	e037883a 	mov	sp,fp
 4021b78:	df000017 	ldw	fp,0(sp)
 4021b7c:	dec00104 	addi	sp,sp,4
 4021b80:	f800283a 	ret

04021b84 <Camera_Configuration>:




bool Camera_Configuration()
{
 4021b84:	defffd04 	addi	sp,sp,-12
 4021b88:	dfc00215 	stw	ra,8(sp)
 4021b8c:	df000115 	stw	fp,4(sp)
 4021b90:	df000104 	addi	fp,sp,4
	init_I2C();
 4021b94:	4021dd80 	call	4021dd8 <init_I2C>
    bool success = true;
 4021b98:	00800044 	movi	r2,1
 4021b9c:	e0bfff05 	stb	r2,-4(fp)
    uint16_t data=0;
 4021ba0:	e03fff8d 	sth	zero,-2(fp)
    trdb_d5m_read(&i2c, 0, &data);
 4021ba4:	e0bfff84 	addi	r2,fp,-2
 4021ba8:	100d883a 	mov	r6,r2
 4021bac:	000b883a 	mov	r5,zero
 4021bb0:	d126cb04 	addi	r4,gp,-25812
 4021bb4:	4021f680 	call	4021f68 <trdb_d5m_read>
    printf("Camera version :  %d\r\n",data);
 4021bb8:	e0bfff8b 	ldhu	r2,-2(fp)
 4021bbc:	10bfffcc 	andi	r2,r2,65535
 4021bc0:	100b883a 	mov	r5,r2
 4021bc4:	010100f4 	movhi	r4,1027
 4021bc8:	211ca504 	addi	r4,r4,29332
 4021bcc:	4025fe00 	call	4025fe0 <printf>
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_COLUMN_SIZE_REG,2559);//Resolution for lt24 with binning
 4021bd0:	01827fc4 	movi	r6,2559
 4021bd4:	01400104 	movi	r5,4
 4021bd8:	d126cb04 	addi	r4,gp,-25812
 4021bdc:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021be0:	e0ffff03 	ldbu	r3,-4(fp)
 4021be4:	10803fcc 	andi	r2,r2,255
 4021be8:	1884703a 	and	r2,r3,r2
 4021bec:	1004c03a 	cmpne	r2,r2,zero
 4021bf0:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_ROW_SIZE_REG,1919);// Resolution for lt24 with binning
 4021bf4:	0181dfc4 	movi	r6,1919
 4021bf8:	014000c4 	movi	r5,3
 4021bfc:	d126cb04 	addi	r4,gp,-25812
 4021c00:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021c04:	e0ffff03 	ldbu	r3,-4(fp)
 4021c08:	10803fcc 	andi	r2,r2,255
 4021c0c:	1884703a 	and	r2,r3,r2
 4021c10:	1004c03a 	cmpne	r2,r2,zero
 4021c14:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_SHUTTER_WIDTH_UPPER_REG,0000);//Control light
 4021c18:	000d883a 	mov	r6,zero
 4021c1c:	01400204 	movi	r5,8
 4021c20:	d126cb04 	addi	r4,gp,-25812
 4021c24:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021c28:	e0ffff03 	ldbu	r3,-4(fp)
 4021c2c:	10803fcc 	andi	r2,r2,255
 4021c30:	1884703a 	and	r2,r3,r2
 4021c34:	1004c03a 	cmpne	r2,r2,zero
 4021c38:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_SHUTTER_WIDTH_LOWER_REG,3500);//Control light
 4021c3c:	01836b04 	movi	r6,3500
 4021c40:	01400244 	movi	r5,9
 4021c44:	d126cb04 	addi	r4,gp,-25812
 4021c48:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021c4c:	e0ffff03 	ldbu	r3,-4(fp)
 4021c50:	10803fcc 	andi	r2,r2,255
 4021c54:	1884703a 	and	r2,r3,r2
 4021c58:	1004c03a 	cmpne	r2,r2,zero
 4021c5c:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_ROW_ADDRESS_MODE_REG,0x0033);//Binning x4
 4021c60:	01800cc4 	movi	r6,51
 4021c64:	01400884 	movi	r5,34
 4021c68:	d126cb04 	addi	r4,gp,-25812
 4021c6c:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021c70:	e0ffff03 	ldbu	r3,-4(fp)
 4021c74:	10803fcc 	andi	r2,r2,255
 4021c78:	1884703a 	and	r2,r3,r2
 4021c7c:	1004c03a 	cmpne	r2,r2,zero
 4021c80:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_COLUMN_ADDRESS_MODE_REG,0x0033);//Binning x4
 4021c84:	01800cc4 	movi	r6,51
 4021c88:	014008c4 	movi	r5,35
 4021c8c:	d126cb04 	addi	r4,gp,-25812
 4021c90:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021c94:	e0ffff03 	ldbu	r3,-4(fp)
 4021c98:	10803fcc 	andi	r2,r2,255
 4021c9c:	1884703a 	and	r2,r3,r2
 4021ca0:	1004c03a 	cmpne	r2,r2,zero
 4021ca4:	e0bfff05 	stb	r2,-4(fp)
	success &= Write_and_Read_I2C(&i2c,TRDB_D5M_RED_GAIN_REG,8);//Color
 4021ca8:	01800204 	movi	r6,8
 4021cac:	01400b44 	movi	r5,45
 4021cb0:	d126cb04 	addi	r4,gp,-25812
 4021cb4:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021cb8:	e0ffff03 	ldbu	r3,-4(fp)
 4021cbc:	10803fcc 	andi	r2,r2,255
 4021cc0:	1884703a 	and	r2,r3,r2
 4021cc4:	1004c03a 	cmpne	r2,r2,zero
 4021cc8:	e0bfff05 	stb	r2,-4(fp)
	success &= Write_and_Read_I2C(&i2c,TRDB_D5M_GREEN_1_GAIN_REG,12);//
 4021ccc:	01800304 	movi	r6,12
 4021cd0:	01400ac4 	movi	r5,43
 4021cd4:	d126cb04 	addi	r4,gp,-25812
 4021cd8:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021cdc:	e0ffff03 	ldbu	r3,-4(fp)
 4021ce0:	10803fcc 	andi	r2,r2,255
 4021ce4:	1884703a 	and	r2,r3,r2
 4021ce8:	1004c03a 	cmpne	r2,r2,zero
 4021cec:	e0bfff05 	stb	r2,-4(fp)
	success &= Write_and_Read_I2C(&i2c,TRDB_D5M_GREEN_2_GAIN_REG,12);//
 4021cf0:	01800304 	movi	r6,12
 4021cf4:	01400b84 	movi	r5,46
 4021cf8:	d126cb04 	addi	r4,gp,-25812
 4021cfc:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021d00:	e0ffff03 	ldbu	r3,-4(fp)
 4021d04:	10803fcc 	andi	r2,r2,255
 4021d08:	1884703a 	and	r2,r3,r2
 4021d0c:	1004c03a 	cmpne	r2,r2,zero
 4021d10:	e0bfff05 	stb	r2,-4(fp)
	success &= Write_and_Read_I2C(&i2c,TRDB_D5M_BLUE_GAIN_REG,10);//
 4021d14:	01800284 	movi	r6,10
 4021d18:	01400b04 	movi	r5,44
 4021d1c:	d126cb04 	addi	r4,gp,-25812
 4021d20:	4021e200 	call	4021e20 <Write_and_Read_I2C>
 4021d24:	e0ffff03 	ldbu	r3,-4(fp)
 4021d28:	10803fcc 	andi	r2,r2,255
 4021d2c:	1884703a 	and	r2,r3,r2
 4021d30:	1004c03a 	cmpne	r2,r2,zero
 4021d34:	e0bfff05 	stb	r2,-4(fp)
    /*If Using the pll , clock input 25 Mhz, output 95Mhz
     *success &= Write_and_Read_I2C(&i2c,TRDB_D5M_PLL_CONTROL_REG,0x0003);//Power up and use pll
     *success &= Write_and_Read_I2C(&i2c,TRDB_D5M_PLL_CONFIG_1_REG,0x4C14);//N=10, 0x14, M=76, 0x4C
     *success &= Write_and_Read_I2C(&i2c,TRDB_D5M_PLL_CONFIG_2_REG,0x0002);//P1=2 , 0x02
     */
    if (success  ) {
 4021d38:	e0bfff03 	ldbu	r2,-4(fp)
 4021d3c:	10000526 	beq	r2,zero,4021d54 <Camera_Configuration+0x1d0>
    	printf("I2C Configuration PASS\r\n");
 4021d40:	010100f4 	movhi	r4,1027
 4021d44:	211cab04 	addi	r4,r4,29356
 4021d48:	40260dc0 	call	40260dc <puts>
        return true;
 4021d4c:	00800044 	movi	r2,1
 4021d50:	00000406 	br	4021d64 <Camera_Configuration+0x1e0>
    } else {
    	printf("I2C Configuration FAIL\r\n");
 4021d54:	010100f4 	movhi	r4,1027
 4021d58:	211cb104 	addi	r4,r4,29380
 4021d5c:	40260dc0 	call	40260dc <puts>
        return false;
 4021d60:	0005883a 	mov	r2,zero
    }
}
 4021d64:	e037883a 	mov	sp,fp
 4021d68:	dfc00117 	ldw	ra,4(sp)
 4021d6c:	df000017 	ldw	fp,0(sp)
 4021d70:	dec00204 	addi	sp,sp,8
 4021d74:	f800283a 	ret

04021d78 <main>:
int main()
{
 4021d78:	defffe04 	addi	sp,sp,-8
 4021d7c:	dfc00115 	stw	ra,4(sp)
 4021d80:	df000015 	stw	fp,0(sp)
 4021d84:	d839883a 	mov	fp,sp
	delay(5000);
 4021d88:	0104e204 	movi	r4,5000
 4021d8c:	4020df00 	call	4020df0 <delay>
  printf("Hello from Nios II!\n");
 4021d90:	010100f4 	movhi	r4,1027
 4021d94:	211cb704 	addi	r4,r4,29404
 4021d98:	40260dc0 	call	40260dc <puts>
 printf("Beginning of the main !\n");
 4021d9c:	010100f4 	movhi	r4,1027
 4021da0:	211cbc04 	addi	r4,r4,29424
 4021da4:	40260dc0 	call	40260dc <puts>
  Camera_Acquisition_Module_Stop();
 4021da8:	4020a8c0 	call	4020a8c <Camera_Acquisition_Module_Stop>
	delay(5000);
 4021dac:	0104e204 	movi	r4,5000
 4021db0:	4020df00 	call	4020df0 <delay>
  Fill_Memory_RGBG();
 4021db4:	40217b80 	call	40217b8 <Fill_Memory_RGBG>

  C_Grayscale_Table(SDRAM_CONTROLLER_BASE, 8);
 4021db8:	01400204 	movi	r5,8
 4021dbc:	0009883a 	mov	r4,zero
 4021dc0:	40204ac0 	call	40204ac <C_Grayscale_Table>
  //Image_Grayscale();
  Camera_Configuration();
 4021dc4:	4021b840 	call	4021b84 <Camera_Configuration>
//   	Camera_Acquisition_Module_Display_Registers();
//   	t=Camera_Acquisition_Module_Start();//Set a one in the start register
//   	printf("Start : %d\r\n",t);
//   	Camera_Acquisition_Module_Display_Registers();
//   	Capture_Image_Computer(SDRAM_CONTROLLER_0_BASE,0);
  printf("End of the main !\n");
 4021dc8:	010100f4 	movhi	r4,1027
 4021dcc:	211cc204 	addi	r4,r4,29448
 4021dd0:	40260dc0 	call	40260dc <puts>
  while(1)
	  {

	  }
 4021dd4:	003fff06 	br	4021dd4 <_gp+0xfffe0bd4>

04021dd8 <init_I2C>:
#define TRDB_D5M_I2C_ADDRESS  (0xba)
#define I2C_0_BASE 0x4041088
i2c_dev i2c;

void init_I2C()
{
 4021dd8:	defffe04 	addi	sp,sp,-8
 4021ddc:	dfc00115 	stw	ra,4(sp)
 4021de0:	df000015 	stw	fp,0(sp)
 4021de4:	d839883a 	mov	fp,sp
	i2c = i2c_inst((void *) I2C_0_BASE);
 4021de8:	01010134 	movhi	r4,1028
 4021dec:	21042204 	addi	r4,r4,4232
 4021df0:	40221540 	call	4022154 <i2c_inst>
 4021df4:	d0a6cb15 	stw	r2,-25812(gp)
	i2c_init(&i2c, I2C_FREQ);
 4021df8:	0140bef4 	movhi	r5,763
 4021dfc:	297c2004 	addi	r5,r5,-3968
 4021e00:	d126cb04 	addi	r4,gp,-25812
 4021e04:	40221800 	call	4022180 <i2c_init>
}
 4021e08:	0001883a 	nop
 4021e0c:	e037883a 	mov	sp,fp
 4021e10:	dfc00117 	ldw	ra,4(sp)
 4021e14:	df000017 	ldw	fp,0(sp)
 4021e18:	dec00204 	addi	sp,sp,8
 4021e1c:	f800283a 	ret

04021e20 <Write_and_Read_I2C>:
bool Write_and_Read_I2C(i2c_dev *i2c,uint8_t register_offset, uint16_t data)
{
 4021e20:	defffa04 	addi	sp,sp,-24
 4021e24:	dfc00515 	stw	ra,20(sp)
 4021e28:	df000415 	stw	fp,16(sp)
 4021e2c:	df000404 	addi	fp,sp,16
 4021e30:	e13ffd15 	stw	r4,-12(fp)
 4021e34:	2807883a 	mov	r3,r5
 4021e38:	3005883a 	mov	r2,r6
 4021e3c:	e0fffe05 	stb	r3,-8(fp)
 4021e40:	e0bfff0d 	sth	r2,-4(fp)
	 	bool success = true;
 4021e44:	00800044 	movi	r2,1
 4021e48:	e0bffc05 	stb	r2,-16(fp)
	 	 /* write the 16-bit value 23 to register 10 */
	    success &= trdb_d5m_write(i2c, register_offset, data);
 4021e4c:	e0bffe03 	ldbu	r2,-8(fp)
 4021e50:	e0ffff0b 	ldhu	r3,-4(fp)
 4021e54:	180d883a 	mov	r6,r3
 4021e58:	100b883a 	mov	r5,r2
 4021e5c:	e13ffd17 	ldw	r4,-12(fp)
 4021e60:	4021ee00 	call	4021ee0 <trdb_d5m_write>
 4021e64:	e0fffc03 	ldbu	r3,-16(fp)
 4021e68:	10803fcc 	andi	r2,r2,255
 4021e6c:	1884703a 	and	r2,r3,r2
 4021e70:	1004c03a 	cmpne	r2,r2,zero
 4021e74:	e0bffc05 	stb	r2,-16(fp)

	    /* read from register 10, put data in readdata */
	    uint16_t readdata = 0;
 4021e78:	e03ffc8d 	sth	zero,-14(fp)
	    success &= trdb_d5m_read(i2c, register_offset, &readdata);
 4021e7c:	e0bffe03 	ldbu	r2,-8(fp)
 4021e80:	e0fffc84 	addi	r3,fp,-14
 4021e84:	180d883a 	mov	r6,r3
 4021e88:	100b883a 	mov	r5,r2
 4021e8c:	e13ffd17 	ldw	r4,-12(fp)
 4021e90:	4021f680 	call	4021f68 <trdb_d5m_read>
 4021e94:	e0fffc03 	ldbu	r3,-16(fp)
 4021e98:	10803fcc 	andi	r2,r2,255
 4021e9c:	1884703a 	and	r2,r3,r2
 4021ea0:	1004c03a 	cmpne	r2,r2,zero
 4021ea4:	e0bffc05 	stb	r2,-16(fp)

	    if (success && readdata==data ) {
 4021ea8:	e0bffc03 	ldbu	r2,-16(fp)
 4021eac:	10000626 	beq	r2,zero,4021ec8 <Write_and_Read_I2C+0xa8>
 4021eb0:	e0bffc8b 	ldhu	r2,-14(fp)
 4021eb4:	10ffffcc 	andi	r3,r2,65535
 4021eb8:	e0bfff0b 	ldhu	r2,-4(fp)
 4021ebc:	1880021e 	bne	r3,r2,4021ec8 <Write_and_Read_I2C+0xa8>
	        return true;
 4021ec0:	00800044 	movi	r2,1
 4021ec4:	00000106 	br	4021ecc <Write_and_Read_I2C+0xac>
	    } else {
	        return false;
 4021ec8:	0005883a 	mov	r2,zero
	    }
}
 4021ecc:	e037883a 	mov	sp,fp
 4021ed0:	dfc00117 	ldw	ra,4(sp)
 4021ed4:	df000017 	ldw	fp,0(sp)
 4021ed8:	dec00204 	addi	sp,sp,8
 4021edc:	f800283a 	ret

04021ee0 <trdb_d5m_write>:
uint8_t trdb_d5m_write(i2c_dev *i2c, uint8_t register_offset, uint16_t data) {
 4021ee0:	defff804 	addi	sp,sp,-32
 4021ee4:	dfc00715 	stw	ra,28(sp)
 4021ee8:	df000615 	stw	fp,24(sp)
 4021eec:	df000604 	addi	fp,sp,24
 4021ef0:	e13ffd15 	stw	r4,-12(fp)
 4021ef4:	2807883a 	mov	r3,r5
 4021ef8:	3005883a 	mov	r2,r6
 4021efc:	e0fffe05 	stb	r3,-8(fp)
 4021f00:	e0bfff0d 	sth	r2,-4(fp)
    uint8_t byte_data[2] = {(data >> 8) & 0xff, data & 0xff};
 4021f04:	e0bfff0b 	ldhu	r2,-4(fp)
 4021f08:	1004d23a 	srli	r2,r2,8
 4021f0c:	e0bffc05 	stb	r2,-16(fp)
 4021f10:	e0bfff0b 	ldhu	r2,-4(fp)
 4021f14:	e0bffc45 	stb	r2,-15(fp)

    int success = i2c_write_array(i2c, TRDB_D5M_I2C_ADDRESS, register_offset, byte_data, sizeof(byte_data));
 4021f18:	e0fffe03 	ldbu	r3,-8(fp)
 4021f1c:	e13ffc04 	addi	r4,fp,-16
 4021f20:	00800084 	movi	r2,2
 4021f24:	d8800015 	stw	r2,0(sp)
 4021f28:	200f883a 	mov	r7,r4
 4021f2c:	180d883a 	mov	r6,r3
 4021f30:	01402e84 	movi	r5,186
 4021f34:	e13ffd17 	ldw	r4,-12(fp)
 4021f38:	40224d80 	call	40224d8 <i2c_write_array>
 4021f3c:	e0bffb15 	stw	r2,-20(fp)

    if (success != I2C_SUCCESS) {
 4021f40:	e0bffb17 	ldw	r2,-20(fp)
 4021f44:	10000226 	beq	r2,zero,4021f50 <trdb_d5m_write+0x70>
        return 0;
 4021f48:	0005883a 	mov	r2,zero
 4021f4c:	00000106 	br	4021f54 <trdb_d5m_write+0x74>
    } else {
        return 1;
 4021f50:	00800044 	movi	r2,1
    }
}
 4021f54:	e037883a 	mov	sp,fp
 4021f58:	dfc00117 	ldw	ra,4(sp)
 4021f5c:	df000017 	ldw	fp,0(sp)
 4021f60:	dec00204 	addi	sp,sp,8
 4021f64:	f800283a 	ret

04021f68 <trdb_d5m_read>:

uint8_t trdb_d5m_read(i2c_dev *i2c, uint8_t register_offset, uint16_t *data) {
 4021f68:	defff804 	addi	sp,sp,-32
 4021f6c:	dfc00715 	stw	ra,28(sp)
 4021f70:	df000615 	stw	fp,24(sp)
 4021f74:	df000604 	addi	fp,sp,24
 4021f78:	e13ffd15 	stw	r4,-12(fp)
 4021f7c:	2805883a 	mov	r2,r5
 4021f80:	e1bfff15 	stw	r6,-4(fp)
 4021f84:	e0bffe05 	stb	r2,-8(fp)
    uint8_t byte_data[2] = {0, 0};
 4021f88:	e03ffc05 	stb	zero,-16(fp)
 4021f8c:	e03ffc45 	stb	zero,-15(fp)

    int success = i2c_read_array(i2c, TRDB_D5M_I2C_ADDRESS, register_offset, byte_data, sizeof(byte_data));
 4021f90:	e0fffe03 	ldbu	r3,-8(fp)
 4021f94:	e13ffc04 	addi	r4,fp,-16
 4021f98:	00800084 	movi	r2,2
 4021f9c:	d8800015 	stw	r2,0(sp)
 4021fa0:	200f883a 	mov	r7,r4
 4021fa4:	180d883a 	mov	r6,r3
 4021fa8:	01402e84 	movi	r5,186
 4021fac:	e13ffd17 	ldw	r4,-12(fp)
 4021fb0:	402266c0 	call	402266c <i2c_read_array>
 4021fb4:	e0bffb15 	stw	r2,-20(fp)

    if (success != I2C_SUCCESS) {
 4021fb8:	e0bffb17 	ldw	r2,-20(fp)
 4021fbc:	10000226 	beq	r2,zero,4021fc8 <trdb_d5m_read+0x60>
        return 0;
 4021fc0:	0005883a 	mov	r2,zero
 4021fc4:	00000b06 	br	4021ff4 <trdb_d5m_read+0x8c>
    } else {
        *data = ((uint16_t) byte_data[0] << 8) + byte_data[1];
 4021fc8:	e0bffc03 	ldbu	r2,-16(fp)
 4021fcc:	10803fcc 	andi	r2,r2,255
 4021fd0:	1004923a 	slli	r2,r2,8
 4021fd4:	1007883a 	mov	r3,r2
 4021fd8:	e0bffc43 	ldbu	r2,-15(fp)
 4021fdc:	10803fcc 	andi	r2,r2,255
 4021fe0:	1885883a 	add	r2,r3,r2
 4021fe4:	1007883a 	mov	r3,r2
 4021fe8:	e0bfff17 	ldw	r2,-4(fp)
 4021fec:	10c0000d 	sth	r3,0(r2)
        return 1;
 4021ff0:	00800044 	movi	r2,1
    }
}
 4021ff4:	e037883a 	mov	sp,fp
 4021ff8:	dfc00117 	ldw	ra,4(sp)
 4021ffc:	df000017 	ldw	fp,0(sp)
 4022000:	dec00204 	addi	sp,sp,8
 4022004:	f800283a 	ret

04022008 <i2c_usleep>:
static void wait_end_of_transfer(i2c_dev *dev);
static void set_data_control(i2c_dev *dev, uint8_t data, uint8_t control);
static uint8_t get_data_set_control(i2c_dev *dev, uint8_t control);

/* Function to put the host processor to sleep for microseconds */
static void i2c_usleep(unsigned int useconds) {
 4022008:	defffd04 	addi	sp,sp,-12
 402200c:	dfc00215 	stw	ra,8(sp)
 4022010:	df000115 	stw	fp,4(sp)
 4022014:	df000104 	addi	fp,sp,4
 4022018:	e13fff15 	stw	r4,-4(fp)
#if defined(__KERNEL__) || defined(MODULE)
    udelay(useconds);
#else
    usleep(useconds);
 402201c:	e13fff17 	ldw	r4,-4(fp)
 4022020:	4034c800 	call	4034c80 <usleep>
#endif
}
 4022024:	0001883a 	nop
 4022028:	e037883a 	mov	sp,fp
 402202c:	dfc00117 	ldw	ra,4(sp)
 4022030:	df000017 	ldw	fp,0(sp)
 4022034:	dec00204 	addi	sp,sp,8
 4022038:	f800283a 	ret

0402203c <wait_end_of_transfer>:
/*
 * wait_end_of_transfer
 *
 * Waits until the current i2c transfer is finished.
 */
static void wait_end_of_transfer(i2c_dev *dev) {
 402203c:	defffe04 	addi	sp,sp,-8
 4022040:	df000115 	stw	fp,4(sp)
 4022044:	df000104 	addi	fp,sp,4
 4022048:	e13fff15 	stw	r4,-4(fp)
    while (I2C_RD_STATUS(dev->base) & I2C_STATUS_TRANSFER_IN_PROGRESS_MSK);
 402204c:	0001883a 	nop
 4022050:	e0bfff17 	ldw	r2,-4(fp)
 4022054:	10800017 	ldw	r2,0(r2)
 4022058:	10800084 	addi	r2,r2,2
 402205c:	10800023 	ldbuio	r2,0(r2)
 4022060:	10803fcc 	andi	r2,r2,255
 4022064:	1080020c 	andi	r2,r2,8
 4022068:	103ff91e 	bne	r2,zero,4022050 <_gp+0xfffe0e50>
}
 402206c:	0001883a 	nop
 4022070:	e037883a 	mov	sp,fp
 4022074:	df000017 	ldw	fp,0(sp)
 4022078:	dec00104 	addi	sp,sp,4
 402207c:	f800283a 	ret

04022080 <set_data_control>:
 * set_data_control
 *
 * Writes the supplied "data" argument to SDA while using the control sequences
 * provided in argument "control".
 */
static void set_data_control(i2c_dev *dev, uint8_t data, uint8_t control) {
 4022080:	defffb04 	addi	sp,sp,-20
 4022084:	dfc00415 	stw	ra,16(sp)
 4022088:	df000315 	stw	fp,12(sp)
 402208c:	df000304 	addi	fp,sp,12
 4022090:	e13ffd15 	stw	r4,-12(fp)
 4022094:	2807883a 	mov	r3,r5
 4022098:	3005883a 	mov	r2,r6
 402209c:	e0fffe05 	stb	r3,-8(fp)
 40220a0:	e0bfff05 	stb	r2,-4(fp)
    wait_end_of_transfer(dev);
 40220a4:	e13ffd17 	ldw	r4,-12(fp)
 40220a8:	402203c0 	call	402203c <wait_end_of_transfer>
    I2C_WR_DATA(dev->base, data);
 40220ac:	e0bffd17 	ldw	r2,-12(fp)
 40220b0:	10800017 	ldw	r2,0(r2)
 40220b4:	e0fffe03 	ldbu	r3,-8(fp)
 40220b8:	10c00025 	stbio	r3,0(r2)
    I2C_WR_CONTROL(dev->base, control);
 40220bc:	e0bffd17 	ldw	r2,-12(fp)
 40220c0:	10800017 	ldw	r2,0(r2)
 40220c4:	10800044 	addi	r2,r2,1
 40220c8:	e0ffff03 	ldbu	r3,-4(fp)
 40220cc:	10c00025 	stbio	r3,0(r2)
    wait_end_of_transfer(dev);
 40220d0:	e13ffd17 	ldw	r4,-12(fp)
 40220d4:	402203c0 	call	402203c <wait_end_of_transfer>
}
 40220d8:	0001883a 	nop
 40220dc:	e037883a 	mov	sp,fp
 40220e0:	dfc00117 	ldw	ra,4(sp)
 40220e4:	df000017 	ldw	fp,0(sp)
 40220e8:	dec00204 	addi	sp,sp,8
 40220ec:	f800283a 	ret

040220f0 <get_data_set_control>:
 * get_data_set_control
 *
 * Reads data from SDA while using the control sequences provided in argument
 * "control".
 */
static uint8_t get_data_set_control(i2c_dev *dev, uint8_t control) {
 40220f0:	defffc04 	addi	sp,sp,-16
 40220f4:	dfc00315 	stw	ra,12(sp)
 40220f8:	df000215 	stw	fp,8(sp)
 40220fc:	df000204 	addi	fp,sp,8
 4022100:	e13ffe15 	stw	r4,-8(fp)
 4022104:	2805883a 	mov	r2,r5
 4022108:	e0bfff05 	stb	r2,-4(fp)
    wait_end_of_transfer(dev);
 402210c:	e13ffe17 	ldw	r4,-8(fp)
 4022110:	402203c0 	call	402203c <wait_end_of_transfer>
    I2C_WR_CONTROL(dev->base, control);
 4022114:	e0bffe17 	ldw	r2,-8(fp)
 4022118:	10800017 	ldw	r2,0(r2)
 402211c:	10800044 	addi	r2,r2,1
 4022120:	e0ffff03 	ldbu	r3,-4(fp)
 4022124:	10c00025 	stbio	r3,0(r2)
    wait_end_of_transfer(dev);
 4022128:	e13ffe17 	ldw	r4,-8(fp)
 402212c:	402203c0 	call	402203c <wait_end_of_transfer>
    return I2C_RD_DATA(dev->base);
 4022130:	e0bffe17 	ldw	r2,-8(fp)
 4022134:	10800017 	ldw	r2,0(r2)
 4022138:	10800023 	ldbuio	r2,0(r2)
 402213c:	10803fcc 	andi	r2,r2,255
}
 4022140:	e037883a 	mov	sp,fp
 4022144:	dfc00117 	ldw	ra,4(sp)
 4022148:	df000017 	ldw	fp,0(sp)
 402214c:	dec00204 	addi	sp,sp,8
 4022150:	f800283a 	ret

04022154 <i2c_inst>:
/*
 * i2c_inst
 *
 * Constructs a device structure.
 */
i2c_dev i2c_inst(void *base) {
 4022154:	defffd04 	addi	sp,sp,-12
 4022158:	df000215 	stw	fp,8(sp)
 402215c:	df000204 	addi	fp,sp,8
 4022160:	e13fff15 	stw	r4,-4(fp)
    i2c_dev dev;

    dev.base = base;
 4022164:	e0bfff17 	ldw	r2,-4(fp)
 4022168:	e0bffe15 	stw	r2,-8(fp)

    return dev;
 402216c:	e0bffe17 	ldw	r2,-8(fp)
}
 4022170:	e037883a 	mov	sp,fp
 4022174:	df000017 	ldw	fp,0(sp)
 4022178:	dec00104 	addi	sp,sp,4
 402217c:	f800283a 	ret

04022180 <i2c_init>:
 * standard data rate for an I2C transfer is 100 kbits/s. However, in order to
 * meet the timing constraints of the protocol, the I2C controller needs to
 * operate 4 times faster. Therefore, one must set the clock divisor register to
 * i2c_frequency / (4 * 100 KHz).
 */
void i2c_init(i2c_dev *dev, uint32_t i2c_frequency) {
 4022180:	defffb04 	addi	sp,sp,-20
 4022184:	dfc00415 	stw	ra,16(sp)
 4022188:	df000315 	stw	fp,12(sp)
 402218c:	dc000215 	stw	r16,8(sp)
 4022190:	df000304 	addi	fp,sp,12
 4022194:	e13ffd15 	stw	r4,-12(fp)
 4022198:	e17ffe15 	stw	r5,-8(fp)
    I2C_WR_CLOCK_DIVISOR(dev->base, i2c_frequency / (4 * 100000));
 402219c:	e0bffd17 	ldw	r2,-12(fp)
 40221a0:	10800017 	ldw	r2,0(r2)
 40221a4:	140000c4 	addi	r16,r2,3
 40221a8:	e0bffe17 	ldw	r2,-8(fp)
 40221ac:	014001b4 	movhi	r5,6
 40221b0:	2946a004 	addi	r5,r5,6784
 40221b4:	1009883a 	mov	r4,r2
 40221b8:	402296c0 	call	402296c <__udivsi3>
 40221bc:	80800025 	stbio	r2,0(r16)
    i2c_usleep(I2C_SLEEP_US);
 40221c0:	0104e204 	movi	r4,5000
 40221c4:	40220080 	call	4022008 <i2c_usleep>
}
 40221c8:	0001883a 	nop
 40221cc:	e6ffff04 	addi	sp,fp,-4
 40221d0:	dfc00217 	ldw	ra,8(sp)
 40221d4:	df000117 	ldw	fp,4(sp)
 40221d8:	dc000017 	ldw	r16,0(sp)
 40221dc:	dec00304 	addi	sp,sp,12
 40221e0:	f800283a 	ret

040221e4 <i2c_configure>:
 * Configure the controller.
 *
 * Setting the irq paramater to true enables interrupt generation at the end of
 * a read/write transfer, and false disables interrupt generation.
 */
void i2c_configure(i2c_dev *dev, bool irq) {
 40221e4:	defffc04 	addi	sp,sp,-16
 40221e8:	df000315 	stw	fp,12(sp)
 40221ec:	df000304 	addi	fp,sp,12
 40221f0:	e13ffe15 	stw	r4,-8(fp)
 40221f4:	2805883a 	mov	r2,r5
 40221f8:	e0bfff05 	stb	r2,-4(fp)
    uint32_t config = 0;
 40221fc:	e03ffd15 	stw	zero,-12(fp)

    if (irq) {
 4022200:	e0bfff03 	ldbu	r2,-4(fp)
 4022204:	10000426 	beq	r2,zero,4022218 <i2c_configure+0x34>
        config |= I2C_CONTROL_INTERRUPT_ENABLE_MSK;
 4022208:	e0bffd17 	ldw	r2,-12(fp)
 402220c:	10800814 	ori	r2,r2,32
 4022210:	e0bffd15 	stw	r2,-12(fp)
 4022214:	00000406 	br	4022228 <i2c_configure+0x44>
    } else {
        config &= ~I2C_CONTROL_INTERRUPT_ENABLE_MSK;
 4022218:	e0fffd17 	ldw	r3,-12(fp)
 402221c:	00bff7c4 	movi	r2,-33
 4022220:	1884703a 	and	r2,r3,r2
 4022224:	e0bffd15 	stw	r2,-12(fp)
    }

    I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022228:	e0bffe17 	ldw	r2,-8(fp)
 402222c:	10800017 	ldw	r2,0(r2)
 4022230:	10800044 	addi	r2,r2,1
 4022234:	00c00084 	movi	r3,2
 4022238:	10c00025 	stbio	r3,0(r2)
    I2C_WR_CONTROL(dev->base, config);
 402223c:	e0bffe17 	ldw	r2,-8(fp)
 4022240:	10800017 	ldw	r2,0(r2)
 4022244:	10800044 	addi	r2,r2,1
 4022248:	e0fffd17 	ldw	r3,-12(fp)
 402224c:	10c00025 	stbio	r3,0(r2)
}
 4022250:	0001883a 	nop
 4022254:	e037883a 	mov	sp,fp
 4022258:	df000017 	ldw	fp,0(sp)
 402225c:	dec00104 	addi	sp,sp,4
 4022260:	f800283a 	ret

04022264 <i2c_write>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_write(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t value) {
 4022264:	defffa04 	addi	sp,sp,-24
 4022268:	dfc00515 	stw	ra,20(sp)
 402226c:	df000415 	stw	fp,16(sp)
 4022270:	df000404 	addi	fp,sp,16
 4022274:	e13ffc15 	stw	r4,-16(fp)
 4022278:	2809883a 	mov	r4,r5
 402227c:	3007883a 	mov	r3,r6
 4022280:	3805883a 	mov	r2,r7
 4022284:	e13ffd05 	stb	r4,-12(fp)
 4022288:	e0fffe05 	stb	r3,-8(fp)
 402228c:	e0bfff05 	stb	r2,-4(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 4022290:	e0bffd03 	ldbu	r2,-12(fp)
 4022294:	10803f8c 	andi	r2,r2,254
 4022298:	01800504 	movi	r6,20
 402229c:	100b883a 	mov	r5,r2
 40222a0:	e13ffc17 	ldw	r4,-16(fp)
 40222a4:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 40222a8:	e0bffc17 	ldw	r2,-16(fp)
 40222ac:	10800017 	ldw	r2,0(r2)
 40222b0:	10800084 	addi	r2,r2,2
 40222b4:	10800023 	ldbuio	r2,0(r2)
 40222b8:	10803fcc 	andi	r2,r2,255
 40222bc:	1080004c 	andi	r2,r2,1
 40222c0:	10000726 	beq	r2,zero,40222e0 <i2c_write+0x7c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 40222c4:	e0bffc17 	ldw	r2,-16(fp)
 40222c8:	10800017 	ldw	r2,0(r2)
 40222cc:	10800044 	addi	r2,r2,1
 40222d0:	00c00084 	movi	r3,2
 40222d4:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 40222d8:	00800044 	movi	r2,1
 40222dc:	00002706 	br	402237c <i2c_write+0x118>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
 40222e0:	e0bffe03 	ldbu	r2,-8(fp)
 40222e4:	01800404 	movi	r6,16
 40222e8:	100b883a 	mov	r5,r2
 40222ec:	e13ffc17 	ldw	r4,-16(fp)
 40222f0:	40220800 	call	4022080 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 40222f4:	e0bffc17 	ldw	r2,-16(fp)
 40222f8:	10800017 	ldw	r2,0(r2)
 40222fc:	10800084 	addi	r2,r2,2
 4022300:	10800023 	ldbuio	r2,0(r2)
 4022304:	10803fcc 	andi	r2,r2,255
 4022308:	1080004c 	andi	r2,r2,1
 402230c:	10000726 	beq	r2,zero,402232c <i2c_write+0xc8>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022310:	e0bffc17 	ldw	r2,-16(fp)
 4022314:	10800017 	ldw	r2,0(r2)
 4022318:	10800044 	addi	r2,r2,1
 402231c:	00c00084 	movi	r3,2
 4022320:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
 4022324:	00800084 	movi	r2,2
 4022328:	00001406 	br	402237c <i2c_write+0x118>
    }

    /* write register data to device */
    set_data_control(dev, value, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 402232c:	e0bfff03 	ldbu	r2,-4(fp)
 4022330:	01800484 	movi	r6,18
 4022334:	100b883a 	mov	r5,r2
 4022338:	e13ffc17 	ldw	r4,-16(fp)
 402233c:	40220800 	call	4022080 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022340:	e0bffc17 	ldw	r2,-16(fp)
 4022344:	10800017 	ldw	r2,0(r2)
 4022348:	10800084 	addi	r2,r2,2
 402234c:	10800023 	ldbuio	r2,0(r2)
 4022350:	10803fcc 	andi	r2,r2,255
 4022354:	1080004c 	andi	r2,r2,1
 4022358:	10000726 	beq	r2,zero,4022378 <i2c_write+0x114>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 402235c:	e0bffc17 	ldw	r2,-16(fp)
 4022360:	10800017 	ldw	r2,0(r2)
 4022364:	10800044 	addi	r2,r2,1
 4022368:	00c00084 	movi	r3,2
 402236c:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
 4022370:	00800084 	movi	r2,2
 4022374:	00000106 	br	402237c <i2c_write+0x118>
    }

    return I2C_SUCCESS;
 4022378:	0005883a 	mov	r2,zero
}
 402237c:	e037883a 	mov	sp,fp
 4022380:	dfc00117 	ldw	ra,4(sp)
 4022384:	df000017 	ldw	fp,0(sp)
 4022388:	dec00204 	addi	sp,sp,8
 402238c:	f800283a 	ret

04022390 <i2c_read>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_read(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value) {
 4022390:	defffa04 	addi	sp,sp,-24
 4022394:	dfc00515 	stw	ra,20(sp)
 4022398:	df000415 	stw	fp,16(sp)
 402239c:	df000404 	addi	fp,sp,16
 40223a0:	e13ffc15 	stw	r4,-16(fp)
 40223a4:	2807883a 	mov	r3,r5
 40223a8:	3005883a 	mov	r2,r6
 40223ac:	e1ffff15 	stw	r7,-4(fp)
 40223b0:	e0fffd05 	stb	r3,-12(fp)
 40223b4:	e0bffe05 	stb	r2,-8(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 40223b8:	e0bffd03 	ldbu	r2,-12(fp)
 40223bc:	10803f8c 	andi	r2,r2,254
 40223c0:	01800504 	movi	r6,20
 40223c4:	100b883a 	mov	r5,r2
 40223c8:	e13ffc17 	ldw	r4,-16(fp)
 40223cc:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 40223d0:	e0bffc17 	ldw	r2,-16(fp)
 40223d4:	10800017 	ldw	r2,0(r2)
 40223d8:	10800084 	addi	r2,r2,2
 40223dc:	10800023 	ldbuio	r2,0(r2)
 40223e0:	10803fcc 	andi	r2,r2,255
 40223e4:	1080004c 	andi	r2,r2,1
 40223e8:	10000726 	beq	r2,zero,4022408 <i2c_read+0x78>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 40223ec:	e0bffc17 	ldw	r2,-16(fp)
 40223f0:	10800017 	ldw	r2,0(r2)
 40223f4:	10800044 	addi	r2,r2,1
 40223f8:	00c00084 	movi	r3,2
 40223fc:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 4022400:	00800044 	movi	r2,1
 4022404:	00002f06 	br	40224c4 <i2c_read+0x134>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
 4022408:	e0bffe03 	ldbu	r2,-8(fp)
 402240c:	01800404 	movi	r6,16
 4022410:	100b883a 	mov	r5,r2
 4022414:	e13ffc17 	ldw	r4,-16(fp)
 4022418:	40220800 	call	4022080 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 402241c:	e0bffc17 	ldw	r2,-16(fp)
 4022420:	10800017 	ldw	r2,0(r2)
 4022424:	10800084 	addi	r2,r2,2
 4022428:	10800023 	ldbuio	r2,0(r2)
 402242c:	10803fcc 	andi	r2,r2,255
 4022430:	1080004c 	andi	r2,r2,1
 4022434:	10000726 	beq	r2,zero,4022454 <i2c_read+0xc4>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022438:	e0bffc17 	ldw	r2,-16(fp)
 402243c:	10800017 	ldw	r2,0(r2)
 4022440:	10800044 	addi	r2,r2,1
 4022444:	00c00084 	movi	r3,2
 4022448:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
 402244c:	00800084 	movi	r2,2
 4022450:	00001c06 	br	40224c4 <i2c_read+0x134>
    }

    /* write to the device with the R/W bit set to 1 (read mode) */
    set_data_control(dev, device | 0x01, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 4022454:	e0bffd03 	ldbu	r2,-12(fp)
 4022458:	10800054 	ori	r2,r2,1
 402245c:	10803fcc 	andi	r2,r2,255
 4022460:	01800504 	movi	r6,20
 4022464:	100b883a 	mov	r5,r2
 4022468:	e13ffc17 	ldw	r4,-16(fp)
 402246c:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022470:	e0bffc17 	ldw	r2,-16(fp)
 4022474:	10800017 	ldw	r2,0(r2)
 4022478:	10800084 	addi	r2,r2,2
 402247c:	10800023 	ldbuio	r2,0(r2)
 4022480:	10803fcc 	andi	r2,r2,255
 4022484:	1080004c 	andi	r2,r2,1
 4022488:	10000726 	beq	r2,zero,40224a8 <i2c_read+0x118>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 402248c:	e0bffc17 	ldw	r2,-16(fp)
 4022490:	10800017 	ldw	r2,0(r2)
 4022494:	10800044 	addi	r2,r2,1
 4022498:	00c00084 	movi	r3,2
 402249c:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 40224a0:	00800044 	movi	r2,1
 40224a4:	00000706 	br	40224c4 <i2c_read+0x134>
    }

    /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
    *value = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
 40224a8:	014002c4 	movi	r5,11
 40224ac:	e13ffc17 	ldw	r4,-16(fp)
 40224b0:	40220f00 	call	40220f0 <get_data_set_control>
 40224b4:	1007883a 	mov	r3,r2
 40224b8:	e0bfff17 	ldw	r2,-4(fp)
 40224bc:	10c00005 	stb	r3,0(r2)

    return I2C_SUCCESS;
 40224c0:	0005883a 	mov	r2,zero
}
 40224c4:	e037883a 	mov	sp,fp
 40224c8:	dfc00117 	ldw	ra,4(sp)
 40224cc:	df000017 	ldw	fp,0(sp)
 40224d0:	dec00204 	addi	sp,sp,8
 40224d4:	f800283a 	ret

040224d8 <i2c_write_array>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_write_array(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value, unsigned int size) {
 40224d8:	defff904 	addi	sp,sp,-28
 40224dc:	dfc00615 	stw	ra,24(sp)
 40224e0:	df000515 	stw	fp,20(sp)
 40224e4:	df000504 	addi	fp,sp,20
 40224e8:	e13ffc15 	stw	r4,-16(fp)
 40224ec:	2807883a 	mov	r3,r5
 40224f0:	3005883a 	mov	r2,r6
 40224f4:	e1ffff15 	stw	r7,-4(fp)
 40224f8:	e0fffd05 	stb	r3,-12(fp)
 40224fc:	e0bffe05 	stb	r2,-8(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 4022500:	e0bffd03 	ldbu	r2,-12(fp)
 4022504:	10803f8c 	andi	r2,r2,254
 4022508:	01800504 	movi	r6,20
 402250c:	100b883a 	mov	r5,r2
 4022510:	e13ffc17 	ldw	r4,-16(fp)
 4022514:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022518:	e0bffc17 	ldw	r2,-16(fp)
 402251c:	10800017 	ldw	r2,0(r2)
 4022520:	10800084 	addi	r2,r2,2
 4022524:	10800023 	ldbuio	r2,0(r2)
 4022528:	10803fcc 	andi	r2,r2,255
 402252c:	1080004c 	andi	r2,r2,1
 4022530:	10000726 	beq	r2,zero,4022550 <i2c_write_array+0x78>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022534:	e0bffc17 	ldw	r2,-16(fp)
 4022538:	10800017 	ldw	r2,0(r2)
 402253c:	10800044 	addi	r2,r2,1
 4022540:	00c00084 	movi	r3,2
 4022544:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 4022548:	00800044 	movi	r2,1
 402254c:	00004206 	br	4022658 <i2c_write_array+0x180>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
 4022550:	e0bffe03 	ldbu	r2,-8(fp)
 4022554:	01800404 	movi	r6,16
 4022558:	100b883a 	mov	r5,r2
 402255c:	e13ffc17 	ldw	r4,-16(fp)
 4022560:	40220800 	call	4022080 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022564:	e0bffc17 	ldw	r2,-16(fp)
 4022568:	10800017 	ldw	r2,0(r2)
 402256c:	10800084 	addi	r2,r2,2
 4022570:	10800023 	ldbuio	r2,0(r2)
 4022574:	10803fcc 	andi	r2,r2,255
 4022578:	1080004c 	andi	r2,r2,1
 402257c:	10000726 	beq	r2,zero,402259c <i2c_write_array+0xc4>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022580:	e0bffc17 	ldw	r2,-16(fp)
 4022584:	10800017 	ldw	r2,0(r2)
 4022588:	10800044 	addi	r2,r2,1
 402258c:	00c00084 	movi	r3,2
 4022590:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
 4022594:	00800084 	movi	r2,2
 4022598:	00002f06 	br	4022658 <i2c_write_array+0x180>
    }

    unsigned int i = 0;
 402259c:	e03ffb15 	stw	zero,-20(fp)
    for (i = 0; i < size; i++) {
 40225a0:	e03ffb15 	stw	zero,-20(fp)
 40225a4:	00002806 	br	4022648 <i2c_write_array+0x170>
        /* write register data to device */
        if (i < size - 1) {
 40225a8:	e0800217 	ldw	r2,8(fp)
 40225ac:	10bfffc4 	addi	r2,r2,-1
 40225b0:	e0fffb17 	ldw	r3,-20(fp)
 40225b4:	18800a2e 	bgeu	r3,r2,40225e0 <i2c_write_array+0x108>
            set_data_control(dev, value[i], I2C_CONTROL_WRITE_COMMAND_MSK);
 40225b8:	e0ffff17 	ldw	r3,-4(fp)
 40225bc:	e0bffb17 	ldw	r2,-20(fp)
 40225c0:	1885883a 	add	r2,r3,r2
 40225c4:	10800003 	ldbu	r2,0(r2)
 40225c8:	10803fcc 	andi	r2,r2,255
 40225cc:	01800404 	movi	r6,16
 40225d0:	100b883a 	mov	r5,r2
 40225d4:	e13ffc17 	ldw	r4,-16(fp)
 40225d8:	40220800 	call	4022080 <set_data_control>
 40225dc:	00000906 	br	4022604 <i2c_write_array+0x12c>
        } else {
            set_data_control(dev, value[i], I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 40225e0:	e0ffff17 	ldw	r3,-4(fp)
 40225e4:	e0bffb17 	ldw	r2,-20(fp)
 40225e8:	1885883a 	add	r2,r3,r2
 40225ec:	10800003 	ldbu	r2,0(r2)
 40225f0:	10803fcc 	andi	r2,r2,255
 40225f4:	01800484 	movi	r6,18
 40225f8:	100b883a 	mov	r5,r2
 40225fc:	e13ffc17 	ldw	r4,-16(fp)
 4022600:	40220800 	call	4022080 <set_data_control>

        }

        /* error: bad acknowledge */
        if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022604:	e0bffc17 	ldw	r2,-16(fp)
 4022608:	10800017 	ldw	r2,0(r2)
 402260c:	10800084 	addi	r2,r2,2
 4022610:	10800023 	ldbuio	r2,0(r2)
 4022614:	10803fcc 	andi	r2,r2,255
 4022618:	1080004c 	andi	r2,r2,1
 402261c:	10000726 	beq	r2,zero,402263c <i2c_write_array+0x164>
            I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022620:	e0bffc17 	ldw	r2,-16(fp)
 4022624:	10800017 	ldw	r2,0(r2)
 4022628:	10800044 	addi	r2,r2,1
 402262c:	00c00084 	movi	r3,2
 4022630:	10c00025 	stbio	r3,0(r2)
            return I2C_EBADACK;
 4022634:	00800084 	movi	r2,2
 4022638:	00000706 	br	4022658 <i2c_write_array+0x180>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
        return I2C_EBADACK;
    }

    unsigned int i = 0;
    for (i = 0; i < size; i++) {
 402263c:	e0bffb17 	ldw	r2,-20(fp)
 4022640:	10800044 	addi	r2,r2,1
 4022644:	e0bffb15 	stw	r2,-20(fp)
 4022648:	e0fffb17 	ldw	r3,-20(fp)
 402264c:	e0800217 	ldw	r2,8(fp)
 4022650:	18bfd536 	bltu	r3,r2,40225a8 <_gp+0xfffe13a8>
            I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
            return I2C_EBADACK;
        }
    }

    return I2C_SUCCESS;
 4022654:	0005883a 	mov	r2,zero
}
 4022658:	e037883a 	mov	sp,fp
 402265c:	dfc00117 	ldw	ra,4(sp)
 4022660:	df000017 	ldw	fp,0(sp)
 4022664:	dec00204 	addi	sp,sp,8
 4022668:	f800283a 	ret

0402266c <i2c_read_array>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_read_array(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value, unsigned int size) {
 402266c:	defff804 	addi	sp,sp,-32
 4022670:	dfc00715 	stw	ra,28(sp)
 4022674:	df000615 	stw	fp,24(sp)
 4022678:	dc000515 	stw	r16,20(sp)
 402267c:	df000604 	addi	fp,sp,24
 4022680:	e13ffb15 	stw	r4,-20(fp)
 4022684:	2807883a 	mov	r3,r5
 4022688:	3005883a 	mov	r2,r6
 402268c:	e1fffe15 	stw	r7,-8(fp)
 4022690:	e0fffc05 	stb	r3,-16(fp)
 4022694:	e0bffd05 	stb	r2,-12(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 4022698:	e0bffc03 	ldbu	r2,-16(fp)
 402269c:	10803f8c 	andi	r2,r2,254
 40226a0:	01800504 	movi	r6,20
 40226a4:	100b883a 	mov	r5,r2
 40226a8:	e13ffb17 	ldw	r4,-20(fp)
 40226ac:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 40226b0:	e0bffb17 	ldw	r2,-20(fp)
 40226b4:	10800017 	ldw	r2,0(r2)
 40226b8:	10800084 	addi	r2,r2,2
 40226bc:	10800023 	ldbuio	r2,0(r2)
 40226c0:	10803fcc 	andi	r2,r2,255
 40226c4:	1080004c 	andi	r2,r2,1
 40226c8:	10000726 	beq	r2,zero,40226e8 <i2c_read_array+0x7c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 40226cc:	e0bffb17 	ldw	r2,-20(fp)
 40226d0:	10800017 	ldw	r2,0(r2)
 40226d4:	10800044 	addi	r2,r2,1
 40226d8:	00c00084 	movi	r3,2
 40226dc:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 40226e0:	00800044 	movi	r2,1
 40226e4:	00004506 	br	40227fc <i2c_read_array+0x190>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
 40226e8:	e0bffd03 	ldbu	r2,-12(fp)
 40226ec:	01800404 	movi	r6,16
 40226f0:	100b883a 	mov	r5,r2
 40226f4:	e13ffb17 	ldw	r4,-20(fp)
 40226f8:	40220800 	call	4022080 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 40226fc:	e0bffb17 	ldw	r2,-20(fp)
 4022700:	10800017 	ldw	r2,0(r2)
 4022704:	10800084 	addi	r2,r2,2
 4022708:	10800023 	ldbuio	r2,0(r2)
 402270c:	10803fcc 	andi	r2,r2,255
 4022710:	1080004c 	andi	r2,r2,1
 4022714:	10000726 	beq	r2,zero,4022734 <i2c_read_array+0xc8>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 4022718:	e0bffb17 	ldw	r2,-20(fp)
 402271c:	10800017 	ldw	r2,0(r2)
 4022720:	10800044 	addi	r2,r2,1
 4022724:	00c00084 	movi	r3,2
 4022728:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
 402272c:	00800084 	movi	r2,2
 4022730:	00003206 	br	40227fc <i2c_read_array+0x190>
    }

    /* write to the device with the R/W bit set to 1 (read mode) */
    set_data_control(dev, device | 0x01, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
 4022734:	e0bffc03 	ldbu	r2,-16(fp)
 4022738:	10800054 	ori	r2,r2,1
 402273c:	10803fcc 	andi	r2,r2,255
 4022740:	01800504 	movi	r6,20
 4022744:	100b883a 	mov	r5,r2
 4022748:	e13ffb17 	ldw	r4,-20(fp)
 402274c:	40220800 	call	4022080 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
 4022750:	e0bffb17 	ldw	r2,-20(fp)
 4022754:	10800017 	ldw	r2,0(r2)
 4022758:	10800084 	addi	r2,r2,2
 402275c:	10800023 	ldbuio	r2,0(r2)
 4022760:	10803fcc 	andi	r2,r2,255
 4022764:	1080004c 	andi	r2,r2,1
 4022768:	10000726 	beq	r2,zero,4022788 <i2c_read_array+0x11c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
 402276c:	e0bffb17 	ldw	r2,-20(fp)
 4022770:	10800017 	ldw	r2,0(r2)
 4022774:	10800044 	addi	r2,r2,1
 4022778:	00c00084 	movi	r3,2
 402277c:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
 4022780:	00800044 	movi	r2,1
 4022784:	00001d06 	br	40227fc <i2c_read_array+0x190>
    }

    unsigned int i = 0;
 4022788:	e03ffa15 	stw	zero,-24(fp)
    for (i = 0; i < size; i++) {
 402278c:	e03ffa15 	stw	zero,-24(fp)
 4022790:	00001606 	br	40227ec <i2c_read_array+0x180>
        if (i < size - 1) {
 4022794:	e0800217 	ldw	r2,8(fp)
 4022798:	10bfffc4 	addi	r2,r2,-1
 402279c:	e0fffa17 	ldw	r3,-24(fp)
 40227a0:	1880082e 	bgeu	r3,r2,40227c4 <i2c_read_array+0x158>
            value[i] = get_data_set_control(dev, I2C_CONTROL_READ_COMMAND_MSK);
 40227a4:	e0fffe17 	ldw	r3,-8(fp)
 40227a8:	e0bffa17 	ldw	r2,-24(fp)
 40227ac:	18a1883a 	add	r16,r3,r2
 40227b0:	01400204 	movi	r5,8
 40227b4:	e13ffb17 	ldw	r4,-20(fp)
 40227b8:	40220f00 	call	40220f0 <get_data_set_control>
 40227bc:	80800005 	stb	r2,0(r16)
 40227c0:	00000706 	br	40227e0 <i2c_read_array+0x174>
        } else {
            /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
            value[i] = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
 40227c4:	e0fffe17 	ldw	r3,-8(fp)
 40227c8:	e0bffa17 	ldw	r2,-24(fp)
 40227cc:	18a1883a 	add	r16,r3,r2
 40227d0:	014002c4 	movi	r5,11
 40227d4:	e13ffb17 	ldw	r4,-20(fp)
 40227d8:	40220f00 	call	40220f0 <get_data_set_control>
 40227dc:	80800005 	stb	r2,0(r16)
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
        return I2C_ENODEV;
    }

    unsigned int i = 0;
    for (i = 0; i < size; i++) {
 40227e0:	e0bffa17 	ldw	r2,-24(fp)
 40227e4:	10800044 	addi	r2,r2,1
 40227e8:	e0bffa15 	stw	r2,-24(fp)
 40227ec:	e0fffa17 	ldw	r3,-24(fp)
 40227f0:	e0800217 	ldw	r2,8(fp)
 40227f4:	18bfe736 	bltu	r3,r2,4022794 <_gp+0xfffe1594>
            /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
            value[i] = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
        }
    }

    return I2C_SUCCESS;
 40227f8:	0005883a 	mov	r2,zero
}
 40227fc:	e6ffff04 	addi	sp,fp,-4
 4022800:	dfc00217 	ldw	ra,8(sp)
 4022804:	df000117 	ldw	fp,4(sp)
 4022808:	dc000017 	ldw	r16,0(sp)
 402280c:	dec00304 	addi	sp,sp,12
 4022810:	f800283a 	ret

04022814 <__fixunssfsi>:
 4022814:	defffd04 	addi	sp,sp,-12
 4022818:	dc000015 	stw	r16,0(sp)
 402281c:	0413c034 	movhi	r16,20224
 4022820:	800b883a 	mov	r5,r16
 4022824:	dc400115 	stw	r17,4(sp)
 4022828:	dfc00215 	stw	ra,8(sp)
 402282c:	2023883a 	mov	r17,r4
 4022830:	4022ef00 	call	4022ef0 <__gesf2>
 4022834:	1000070e 	bge	r2,zero,4022854 <__fixunssfsi+0x40>
 4022838:	8809883a 	mov	r4,r17
 402283c:	40234900 	call	4023490 <__fixsfsi>
 4022840:	dfc00217 	ldw	ra,8(sp)
 4022844:	dc400117 	ldw	r17,4(sp)
 4022848:	dc000017 	ldw	r16,0(sp)
 402284c:	dec00304 	addi	sp,sp,12
 4022850:	f800283a 	ret
 4022854:	800b883a 	mov	r5,r16
 4022858:	8809883a 	mov	r4,r17
 402285c:	4022fac0 	call	4022fac <__subsf3>
 4022860:	1009883a 	mov	r4,r2
 4022864:	40234900 	call	4023490 <__fixsfsi>
 4022868:	00e00034 	movhi	r3,32768
 402286c:	10c5883a 	add	r2,r2,r3
 4022870:	003ff306 	br	4022840 <_gp+0xfffe1640>

04022874 <__divsi3>:
 4022874:	20001b16 	blt	r4,zero,40228e4 <__divsi3+0x70>
 4022878:	000f883a 	mov	r7,zero
 402287c:	28001616 	blt	r5,zero,40228d8 <__divsi3+0x64>
 4022880:	200d883a 	mov	r6,r4
 4022884:	29001a2e 	bgeu	r5,r4,40228f0 <__divsi3+0x7c>
 4022888:	00800804 	movi	r2,32
 402288c:	00c00044 	movi	r3,1
 4022890:	00000106 	br	4022898 <__divsi3+0x24>
 4022894:	10000d26 	beq	r2,zero,40228cc <__divsi3+0x58>
 4022898:	294b883a 	add	r5,r5,r5
 402289c:	10bfffc4 	addi	r2,r2,-1
 40228a0:	18c7883a 	add	r3,r3,r3
 40228a4:	293ffb36 	bltu	r5,r4,4022894 <_gp+0xfffe1694>
 40228a8:	0005883a 	mov	r2,zero
 40228ac:	18000726 	beq	r3,zero,40228cc <__divsi3+0x58>
 40228b0:	0005883a 	mov	r2,zero
 40228b4:	31400236 	bltu	r6,r5,40228c0 <__divsi3+0x4c>
 40228b8:	314dc83a 	sub	r6,r6,r5
 40228bc:	10c4b03a 	or	r2,r2,r3
 40228c0:	1806d07a 	srli	r3,r3,1
 40228c4:	280ad07a 	srli	r5,r5,1
 40228c8:	183ffa1e 	bne	r3,zero,40228b4 <_gp+0xfffe16b4>
 40228cc:	38000126 	beq	r7,zero,40228d4 <__divsi3+0x60>
 40228d0:	0085c83a 	sub	r2,zero,r2
 40228d4:	f800283a 	ret
 40228d8:	014bc83a 	sub	r5,zero,r5
 40228dc:	39c0005c 	xori	r7,r7,1
 40228e0:	003fe706 	br	4022880 <_gp+0xfffe1680>
 40228e4:	0109c83a 	sub	r4,zero,r4
 40228e8:	01c00044 	movi	r7,1
 40228ec:	003fe306 	br	402287c <_gp+0xfffe167c>
 40228f0:	00c00044 	movi	r3,1
 40228f4:	003fee06 	br	40228b0 <_gp+0xfffe16b0>

040228f8 <__modsi3>:
 40228f8:	20001716 	blt	r4,zero,4022958 <__modsi3+0x60>
 40228fc:	000f883a 	mov	r7,zero
 4022900:	2005883a 	mov	r2,r4
 4022904:	28001216 	blt	r5,zero,4022950 <__modsi3+0x58>
 4022908:	2900162e 	bgeu	r5,r4,4022964 <__modsi3+0x6c>
 402290c:	01800804 	movi	r6,32
 4022910:	00c00044 	movi	r3,1
 4022914:	00000106 	br	402291c <__modsi3+0x24>
 4022918:	30000a26 	beq	r6,zero,4022944 <__modsi3+0x4c>
 402291c:	294b883a 	add	r5,r5,r5
 4022920:	31bfffc4 	addi	r6,r6,-1
 4022924:	18c7883a 	add	r3,r3,r3
 4022928:	293ffb36 	bltu	r5,r4,4022918 <_gp+0xfffe1718>
 402292c:	18000526 	beq	r3,zero,4022944 <__modsi3+0x4c>
 4022930:	1806d07a 	srli	r3,r3,1
 4022934:	11400136 	bltu	r2,r5,402293c <__modsi3+0x44>
 4022938:	1145c83a 	sub	r2,r2,r5
 402293c:	280ad07a 	srli	r5,r5,1
 4022940:	183ffb1e 	bne	r3,zero,4022930 <_gp+0xfffe1730>
 4022944:	38000126 	beq	r7,zero,402294c <__modsi3+0x54>
 4022948:	0085c83a 	sub	r2,zero,r2
 402294c:	f800283a 	ret
 4022950:	014bc83a 	sub	r5,zero,r5
 4022954:	003fec06 	br	4022908 <_gp+0xfffe1708>
 4022958:	0109c83a 	sub	r4,zero,r4
 402295c:	01c00044 	movi	r7,1
 4022960:	003fe706 	br	4022900 <_gp+0xfffe1700>
 4022964:	00c00044 	movi	r3,1
 4022968:	003ff106 	br	4022930 <_gp+0xfffe1730>

0402296c <__udivsi3>:
 402296c:	200d883a 	mov	r6,r4
 4022970:	2900152e 	bgeu	r5,r4,40229c8 <__udivsi3+0x5c>
 4022974:	28001416 	blt	r5,zero,40229c8 <__udivsi3+0x5c>
 4022978:	00800804 	movi	r2,32
 402297c:	00c00044 	movi	r3,1
 4022980:	00000206 	br	402298c <__udivsi3+0x20>
 4022984:	10000e26 	beq	r2,zero,40229c0 <__udivsi3+0x54>
 4022988:	28000516 	blt	r5,zero,40229a0 <__udivsi3+0x34>
 402298c:	294b883a 	add	r5,r5,r5
 4022990:	10bfffc4 	addi	r2,r2,-1
 4022994:	18c7883a 	add	r3,r3,r3
 4022998:	293ffa36 	bltu	r5,r4,4022984 <_gp+0xfffe1784>
 402299c:	18000826 	beq	r3,zero,40229c0 <__udivsi3+0x54>
 40229a0:	0005883a 	mov	r2,zero
 40229a4:	31400236 	bltu	r6,r5,40229b0 <__udivsi3+0x44>
 40229a8:	314dc83a 	sub	r6,r6,r5
 40229ac:	10c4b03a 	or	r2,r2,r3
 40229b0:	1806d07a 	srli	r3,r3,1
 40229b4:	280ad07a 	srli	r5,r5,1
 40229b8:	183ffa1e 	bne	r3,zero,40229a4 <_gp+0xfffe17a4>
 40229bc:	f800283a 	ret
 40229c0:	0005883a 	mov	r2,zero
 40229c4:	f800283a 	ret
 40229c8:	00c00044 	movi	r3,1
 40229cc:	003ff406 	br	40229a0 <_gp+0xfffe17a0>

040229d0 <__umodsi3>:
 40229d0:	2005883a 	mov	r2,r4
 40229d4:	2900122e 	bgeu	r5,r4,4022a20 <__umodsi3+0x50>
 40229d8:	28001116 	blt	r5,zero,4022a20 <__umodsi3+0x50>
 40229dc:	01800804 	movi	r6,32
 40229e0:	00c00044 	movi	r3,1
 40229e4:	00000206 	br	40229f0 <__umodsi3+0x20>
 40229e8:	30000c26 	beq	r6,zero,4022a1c <__umodsi3+0x4c>
 40229ec:	28000516 	blt	r5,zero,4022a04 <__umodsi3+0x34>
 40229f0:	294b883a 	add	r5,r5,r5
 40229f4:	31bfffc4 	addi	r6,r6,-1
 40229f8:	18c7883a 	add	r3,r3,r3
 40229fc:	293ffa36 	bltu	r5,r4,40229e8 <_gp+0xfffe17e8>
 4022a00:	18000626 	beq	r3,zero,4022a1c <__umodsi3+0x4c>
 4022a04:	1806d07a 	srli	r3,r3,1
 4022a08:	11400136 	bltu	r2,r5,4022a10 <__umodsi3+0x40>
 4022a0c:	1145c83a 	sub	r2,r2,r5
 4022a10:	280ad07a 	srli	r5,r5,1
 4022a14:	183ffb1e 	bne	r3,zero,4022a04 <_gp+0xfffe1804>
 4022a18:	f800283a 	ret
 4022a1c:	f800283a 	ret
 4022a20:	00c00044 	movi	r3,1
 4022a24:	003ff706 	br	4022a04 <_gp+0xfffe1804>

04022a28 <__addsf3>:
 4022a28:	defffc04 	addi	sp,sp,-16
 4022a2c:	2004d7fa 	srli	r2,r4,31
 4022a30:	280cd5fa 	srli	r6,r5,23
 4022a34:	dc000015 	stw	r16,0(sp)
 4022a38:	00c02034 	movhi	r3,128
 4022a3c:	2020d5fa 	srli	r16,r4,23
 4022a40:	280ed7fa 	srli	r7,r5,31
 4022a44:	18ffffc4 	addi	r3,r3,-1
 4022a48:	dc400115 	stw	r17,4(sp)
 4022a4c:	1908703a 	and	r4,r3,r4
 4022a50:	194a703a 	and	r5,r3,r5
 4022a54:	dfc00315 	stw	ra,12(sp)
 4022a58:	dc800215 	stw	r18,8(sp)
 4022a5c:	14403fcc 	andi	r17,r2,255
 4022a60:	84003fcc 	andi	r16,r16,255
 4022a64:	200890fa 	slli	r4,r4,3
 4022a68:	31803fcc 	andi	r6,r6,255
 4022a6c:	280a90fa 	slli	r5,r5,3
 4022a70:	89c05026 	beq	r17,r7,4022bb4 <__addsf3+0x18c>
 4022a74:	8185c83a 	sub	r2,r16,r6
 4022a78:	00807a0e 	bge	zero,r2,4022c64 <__addsf3+0x23c>
 4022a7c:	30001e1e 	bne	r6,zero,4022af8 <__addsf3+0xd0>
 4022a80:	28006d1e 	bne	r5,zero,4022c38 <__addsf3+0x210>
 4022a84:	208001cc 	andi	r2,r4,7
 4022a88:	10000426 	beq	r2,zero,4022a9c <__addsf3+0x74>
 4022a8c:	208003cc 	andi	r2,r4,15
 4022a90:	00c00104 	movi	r3,4
 4022a94:	10c00126 	beq	r2,r3,4022a9c <__addsf3+0x74>
 4022a98:	20c9883a 	add	r4,r4,r3
 4022a9c:	2081002c 	andhi	r2,r4,1024
 4022aa0:	10003926 	beq	r2,zero,4022b88 <__addsf3+0x160>
 4022aa4:	84000044 	addi	r16,r16,1
 4022aa8:	00803fc4 	movi	r2,255
 4022aac:	80807826 	beq	r16,r2,4022c90 <__addsf3+0x268>
 4022ab0:	200891ba 	slli	r4,r4,6
 4022ab4:	8805883a 	mov	r2,r17
 4022ab8:	2008d27a 	srli	r4,r4,9
 4022abc:	84003fcc 	andi	r16,r16,255
 4022ac0:	800695fa 	slli	r3,r16,23
 4022ac4:	10803fcc 	andi	r2,r2,255
 4022ac8:	04002034 	movhi	r16,128
 4022acc:	843fffc4 	addi	r16,r16,-1
 4022ad0:	100497fa 	slli	r2,r2,31
 4022ad4:	2408703a 	and	r4,r4,r16
 4022ad8:	20e0b03a 	or	r16,r4,r3
 4022adc:	8084b03a 	or	r2,r16,r2
 4022ae0:	dfc00317 	ldw	ra,12(sp)
 4022ae4:	dc800217 	ldw	r18,8(sp)
 4022ae8:	dc400117 	ldw	r17,4(sp)
 4022aec:	dc000017 	ldw	r16,0(sp)
 4022af0:	dec00404 	addi	sp,sp,16
 4022af4:	f800283a 	ret
 4022af8:	00c03fc4 	movi	r3,255
 4022afc:	80ffe126 	beq	r16,r3,4022a84 <_gp+0xfffe1884>
 4022b00:	29410034 	orhi	r5,r5,1024
 4022b04:	00c006c4 	movi	r3,27
 4022b08:	18807516 	blt	r3,r2,4022ce0 <__addsf3+0x2b8>
 4022b0c:	00c00804 	movi	r3,32
 4022b10:	1887c83a 	sub	r3,r3,r2
 4022b14:	28c6983a 	sll	r3,r5,r3
 4022b18:	288ad83a 	srl	r5,r5,r2
 4022b1c:	1804c03a 	cmpne	r2,r3,zero
 4022b20:	288ab03a 	or	r5,r5,r2
 4022b24:	2149c83a 	sub	r4,r4,r5
 4022b28:	2081002c 	andhi	r2,r4,1024
 4022b2c:	10001426 	beq	r2,zero,4022b80 <__addsf3+0x158>
 4022b30:	04810034 	movhi	r18,1024
 4022b34:	94bfffc4 	addi	r18,r18,-1
 4022b38:	24a4703a 	and	r18,r4,r18
 4022b3c:	9009883a 	mov	r4,r18
 4022b40:	4023fc00 	call	4023fc0 <__clzsi2>
 4022b44:	10bffec4 	addi	r2,r2,-5
 4022b48:	90a4983a 	sll	r18,r18,r2
 4022b4c:	14005416 	blt	r2,r16,4022ca0 <__addsf3+0x278>
 4022b50:	1405c83a 	sub	r2,r2,r16
 4022b54:	11000044 	addi	r4,r2,1
 4022b58:	00800804 	movi	r2,32
 4022b5c:	1105c83a 	sub	r2,r2,r4
 4022b60:	9084983a 	sll	r2,r18,r2
 4022b64:	9124d83a 	srl	r18,r18,r4
 4022b68:	0021883a 	mov	r16,zero
 4022b6c:	1008c03a 	cmpne	r4,r2,zero
 4022b70:	9108b03a 	or	r4,r18,r4
 4022b74:	003fc306 	br	4022a84 <_gp+0xfffe1884>
 4022b78:	1000db26 	beq	r2,zero,4022ee8 <__addsf3+0x4c0>
 4022b7c:	1009883a 	mov	r4,r2
 4022b80:	208001cc 	andi	r2,r4,7
 4022b84:	103fc11e 	bne	r2,zero,4022a8c <_gp+0xfffe188c>
 4022b88:	2006d0fa 	srli	r3,r4,3
 4022b8c:	01003fc4 	movi	r4,255
 4022b90:	8805883a 	mov	r2,r17
 4022b94:	8100241e 	bne	r16,r4,4022c28 <__addsf3+0x200>
 4022b98:	18006e26 	beq	r3,zero,4022d54 <__addsf3+0x32c>
 4022b9c:	19001034 	orhi	r4,r3,64
 4022ba0:	00c02034 	movhi	r3,128
 4022ba4:	18ffffc4 	addi	r3,r3,-1
 4022ba8:	043fffc4 	movi	r16,-1
 4022bac:	20c8703a 	and	r4,r4,r3
 4022bb0:	003fc206 	br	4022abc <_gp+0xfffe18bc>
 4022bb4:	8187c83a 	sub	r3,r16,r6
 4022bb8:	00c03e0e 	bge	zero,r3,4022cb4 <__addsf3+0x28c>
 4022bbc:	30002326 	beq	r6,zero,4022c4c <__addsf3+0x224>
 4022bc0:	01803fc4 	movi	r6,255
 4022bc4:	81bfaf26 	beq	r16,r6,4022a84 <_gp+0xfffe1884>
 4022bc8:	29410034 	orhi	r5,r5,1024
 4022bcc:	018006c4 	movi	r6,27
 4022bd0:	30c07416 	blt	r6,r3,4022da4 <__addsf3+0x37c>
 4022bd4:	01800804 	movi	r6,32
 4022bd8:	30cdc83a 	sub	r6,r6,r3
 4022bdc:	298c983a 	sll	r6,r5,r6
 4022be0:	28cad83a 	srl	r5,r5,r3
 4022be4:	3006c03a 	cmpne	r3,r6,zero
 4022be8:	28cab03a 	or	r5,r5,r3
 4022bec:	2149883a 	add	r4,r4,r5
 4022bf0:	20c1002c 	andhi	r3,r4,1024
 4022bf4:	183fe226 	beq	r3,zero,4022b80 <_gp+0xfffe1980>
 4022bf8:	84000044 	addi	r16,r16,1
 4022bfc:	00c03fc4 	movi	r3,255
 4022c00:	80c05426 	beq	r16,r3,4022d54 <__addsf3+0x32c>
 4022c04:	00bf0034 	movhi	r2,64512
 4022c08:	10bfffc4 	addi	r2,r2,-1
 4022c0c:	20c0004c 	andi	r3,r4,1
 4022c10:	2088703a 	and	r4,r4,r2
 4022c14:	2008d07a 	srli	r4,r4,1
 4022c18:	20c8b03a 	or	r4,r4,r3
 4022c1c:	003f9906 	br	4022a84 <_gp+0xfffe1884>
 4022c20:	0007883a 	mov	r3,zero
 4022c24:	0005883a 	mov	r2,zero
 4022c28:	01002034 	movhi	r4,128
 4022c2c:	213fffc4 	addi	r4,r4,-1
 4022c30:	1908703a 	and	r4,r3,r4
 4022c34:	003fa106 	br	4022abc <_gp+0xfffe18bc>
 4022c38:	10bfffc4 	addi	r2,r2,-1
 4022c3c:	103fb926 	beq	r2,zero,4022b24 <_gp+0xfffe1924>
 4022c40:	00c03fc4 	movi	r3,255
 4022c44:	80ffaf1e 	bne	r16,r3,4022b04 <_gp+0xfffe1904>
 4022c48:	003f8e06 	br	4022a84 <_gp+0xfffe1884>
 4022c4c:	283f8d26 	beq	r5,zero,4022a84 <_gp+0xfffe1884>
 4022c50:	18ffffc4 	addi	r3,r3,-1
 4022c54:	183fe526 	beq	r3,zero,4022bec <_gp+0xfffe19ec>
 4022c58:	01803fc4 	movi	r6,255
 4022c5c:	81bfdb1e 	bne	r16,r6,4022bcc <_gp+0xfffe19cc>
 4022c60:	003f8806 	br	4022a84 <_gp+0xfffe1884>
 4022c64:	1000201e 	bne	r2,zero,4022ce8 <__addsf3+0x2c0>
 4022c68:	80800044 	addi	r2,r16,1
 4022c6c:	10803fcc 	andi	r2,r2,255
 4022c70:	01800044 	movi	r6,1
 4022c74:	3080450e 	bge	r6,r2,4022d8c <__addsf3+0x364>
 4022c78:	2165c83a 	sub	r18,r4,r5
 4022c7c:	90c1002c 	andhi	r3,r18,1024
 4022c80:	18002b26 	beq	r3,zero,4022d30 <__addsf3+0x308>
 4022c84:	2925c83a 	sub	r18,r5,r4
 4022c88:	3823883a 	mov	r17,r7
 4022c8c:	003fab06 	br	4022b3c <_gp+0xfffe193c>
 4022c90:	8805883a 	mov	r2,r17
 4022c94:	043fffc4 	movi	r16,-1
 4022c98:	0009883a 	mov	r4,zero
 4022c9c:	003f8706 	br	4022abc <_gp+0xfffe18bc>
 4022ca0:	013f0034 	movhi	r4,64512
 4022ca4:	213fffc4 	addi	r4,r4,-1
 4022ca8:	80a1c83a 	sub	r16,r16,r2
 4022cac:	9108703a 	and	r4,r18,r4
 4022cb0:	003f7406 	br	4022a84 <_gp+0xfffe1884>
 4022cb4:	1800411e 	bne	r3,zero,4022dbc <__addsf3+0x394>
 4022cb8:	80c00044 	addi	r3,r16,1
 4022cbc:	19c03fcc 	andi	r7,r3,255
 4022cc0:	01800044 	movi	r6,1
 4022cc4:	31c0260e 	bge	r6,r7,4022d60 <__addsf3+0x338>
 4022cc8:	01803fc4 	movi	r6,255
 4022ccc:	19802126 	beq	r3,r6,4022d54 <__addsf3+0x32c>
 4022cd0:	2149883a 	add	r4,r4,r5
 4022cd4:	2008d07a 	srli	r4,r4,1
 4022cd8:	1821883a 	mov	r16,r3
 4022cdc:	003f6906 	br	4022a84 <_gp+0xfffe1884>
 4022ce0:	01400044 	movi	r5,1
 4022ce4:	003f8f06 	br	4022b24 <_gp+0xfffe1924>
 4022ce8:	8000151e 	bne	r16,zero,4022d40 <__addsf3+0x318>
 4022cec:	20002f26 	beq	r4,zero,4022dac <__addsf3+0x384>
 4022cf0:	0084303a 	nor	r2,zero,r2
 4022cf4:	10000a26 	beq	r2,zero,4022d20 <__addsf3+0x2f8>
 4022cf8:	00c03fc4 	movi	r3,255
 4022cfc:	30c02b26 	beq	r6,r3,4022dac <__addsf3+0x384>
 4022d00:	00c006c4 	movi	r3,27
 4022d04:	18806d16 	blt	r3,r2,4022ebc <__addsf3+0x494>
 4022d08:	00c00804 	movi	r3,32
 4022d0c:	1887c83a 	sub	r3,r3,r2
 4022d10:	20c6983a 	sll	r3,r4,r3
 4022d14:	2084d83a 	srl	r2,r4,r2
 4022d18:	1808c03a 	cmpne	r4,r3,zero
 4022d1c:	1108b03a 	or	r4,r2,r4
 4022d20:	2909c83a 	sub	r4,r5,r4
 4022d24:	3021883a 	mov	r16,r6
 4022d28:	3823883a 	mov	r17,r7
 4022d2c:	003f7e06 	br	4022b28 <_gp+0xfffe1928>
 4022d30:	903f821e 	bne	r18,zero,4022b3c <_gp+0xfffe193c>
 4022d34:	0005883a 	mov	r2,zero
 4022d38:	0021883a 	mov	r16,zero
 4022d3c:	003fba06 	br	4022c28 <_gp+0xfffe1a28>
 4022d40:	00c03fc4 	movi	r3,255
 4022d44:	30c01926 	beq	r6,r3,4022dac <__addsf3+0x384>
 4022d48:	0085c83a 	sub	r2,zero,r2
 4022d4c:	21010034 	orhi	r4,r4,1024
 4022d50:	003feb06 	br	4022d00 <_gp+0xfffe1b00>
 4022d54:	043fffc4 	movi	r16,-1
 4022d58:	0009883a 	mov	r4,zero
 4022d5c:	003f5706 	br	4022abc <_gp+0xfffe18bc>
 4022d60:	80004a1e 	bne	r16,zero,4022e8c <__addsf3+0x464>
 4022d64:	20005926 	beq	r4,zero,4022ecc <__addsf3+0x4a4>
 4022d68:	283f4626 	beq	r5,zero,4022a84 <_gp+0xfffe1884>
 4022d6c:	2149883a 	add	r4,r4,r5
 4022d70:	2081002c 	andhi	r2,r4,1024
 4022d74:	103f8226 	beq	r2,zero,4022b80 <_gp+0xfffe1980>
 4022d78:	00bf0034 	movhi	r2,64512
 4022d7c:	10bfffc4 	addi	r2,r2,-1
 4022d80:	3021883a 	mov	r16,r6
 4022d84:	2088703a 	and	r4,r4,r2
 4022d88:	003f3e06 	br	4022a84 <_gp+0xfffe1884>
 4022d8c:	8000121e 	bne	r16,zero,4022dd8 <__addsf3+0x3b0>
 4022d90:	2000261e 	bne	r4,zero,4022e2c <__addsf3+0x404>
 4022d94:	283fa226 	beq	r5,zero,4022c20 <_gp+0xfffe1a20>
 4022d98:	2809883a 	mov	r4,r5
 4022d9c:	3823883a 	mov	r17,r7
 4022da0:	003f3806 	br	4022a84 <_gp+0xfffe1884>
 4022da4:	01400044 	movi	r5,1
 4022da8:	003f9006 	br	4022bec <_gp+0xfffe19ec>
 4022dac:	2809883a 	mov	r4,r5
 4022db0:	3021883a 	mov	r16,r6
 4022db4:	3823883a 	mov	r17,r7
 4022db8:	003f3206 	br	4022a84 <_gp+0xfffe1884>
 4022dbc:	80000c1e 	bne	r16,zero,4022df0 <__addsf3+0x3c8>
 4022dc0:	20002f26 	beq	r4,zero,4022e80 <__addsf3+0x458>
 4022dc4:	00c6303a 	nor	r3,zero,r3
 4022dc8:	18002b1e 	bne	r3,zero,4022e78 <__addsf3+0x450>
 4022dcc:	2149883a 	add	r4,r4,r5
 4022dd0:	3021883a 	mov	r16,r6
 4022dd4:	003f8606 	br	4022bf0 <_gp+0xfffe19f0>
 4022dd8:	20001b1e 	bne	r4,zero,4022e48 <__addsf3+0x420>
 4022ddc:	28003926 	beq	r5,zero,4022ec4 <__addsf3+0x49c>
 4022de0:	2809883a 	mov	r4,r5
 4022de4:	3823883a 	mov	r17,r7
 4022de8:	04003fc4 	movi	r16,255
 4022dec:	003f2506 	br	4022a84 <_gp+0xfffe1884>
 4022df0:	01c03fc4 	movi	r7,255
 4022df4:	31c02226 	beq	r6,r7,4022e80 <__addsf3+0x458>
 4022df8:	00c7c83a 	sub	r3,zero,r3
 4022dfc:	21010034 	orhi	r4,r4,1024
 4022e00:	01c006c4 	movi	r7,27
 4022e04:	38c03616 	blt	r7,r3,4022ee0 <__addsf3+0x4b8>
 4022e08:	01c00804 	movi	r7,32
 4022e0c:	38cfc83a 	sub	r7,r7,r3
 4022e10:	21ce983a 	sll	r7,r4,r7
 4022e14:	20c6d83a 	srl	r3,r4,r3
 4022e18:	3808c03a 	cmpne	r4,r7,zero
 4022e1c:	1906b03a 	or	r3,r3,r4
 4022e20:	1949883a 	add	r4,r3,r5
 4022e24:	3021883a 	mov	r16,r6
 4022e28:	003f7106 	br	4022bf0 <_gp+0xfffe19f0>
 4022e2c:	283f1526 	beq	r5,zero,4022a84 <_gp+0xfffe1884>
 4022e30:	2145c83a 	sub	r2,r4,r5
 4022e34:	10c1002c 	andhi	r3,r2,1024
 4022e38:	183f4f26 	beq	r3,zero,4022b78 <_gp+0xfffe1978>
 4022e3c:	2909c83a 	sub	r4,r5,r4
 4022e40:	3823883a 	mov	r17,r7
 4022e44:	003f0f06 	br	4022a84 <_gp+0xfffe1884>
 4022e48:	28001a26 	beq	r5,zero,4022eb4 <__addsf3+0x48c>
 4022e4c:	2008d0fa 	srli	r4,r4,3
 4022e50:	2080102c 	andhi	r2,r4,64
 4022e54:	10000526 	beq	r2,zero,4022e6c <__addsf3+0x444>
 4022e58:	280ad0fa 	srli	r5,r5,3
 4022e5c:	2880102c 	andhi	r2,r5,64
 4022e60:	1000021e 	bne	r2,zero,4022e6c <__addsf3+0x444>
 4022e64:	2809883a 	mov	r4,r5
 4022e68:	3823883a 	mov	r17,r7
 4022e6c:	200890fa 	slli	r4,r4,3
 4022e70:	04003fc4 	movi	r16,255
 4022e74:	003f0306 	br	4022a84 <_gp+0xfffe1884>
 4022e78:	01c03fc4 	movi	r7,255
 4022e7c:	31ffe01e 	bne	r6,r7,4022e00 <_gp+0xfffe1c00>
 4022e80:	2809883a 	mov	r4,r5
 4022e84:	3021883a 	mov	r16,r6
 4022e88:	003efe06 	br	4022a84 <_gp+0xfffe1884>
 4022e8c:	20001126 	beq	r4,zero,4022ed4 <__addsf3+0x4ac>
 4022e90:	28000826 	beq	r5,zero,4022eb4 <__addsf3+0x48c>
 4022e94:	2008d0fa 	srli	r4,r4,3
 4022e98:	2080102c 	andhi	r2,r4,64
 4022e9c:	103ff326 	beq	r2,zero,4022e6c <_gp+0xfffe1c6c>
 4022ea0:	280ad0fa 	srli	r5,r5,3
 4022ea4:	2880102c 	andhi	r2,r5,64
 4022ea8:	103ff01e 	bne	r2,zero,4022e6c <_gp+0xfffe1c6c>
 4022eac:	2809883a 	mov	r4,r5
 4022eb0:	003fee06 	br	4022e6c <_gp+0xfffe1c6c>
 4022eb4:	04003fc4 	movi	r16,255
 4022eb8:	003ef206 	br	4022a84 <_gp+0xfffe1884>
 4022ebc:	01000044 	movi	r4,1
 4022ec0:	003f9706 	br	4022d20 <_gp+0xfffe1b20>
 4022ec4:	0005883a 	mov	r2,zero
 4022ec8:	003f3406 	br	4022b9c <_gp+0xfffe199c>
 4022ecc:	2809883a 	mov	r4,r5
 4022ed0:	003eec06 	br	4022a84 <_gp+0xfffe1884>
 4022ed4:	2809883a 	mov	r4,r5
 4022ed8:	04003fc4 	movi	r16,255
 4022edc:	003ee906 	br	4022a84 <_gp+0xfffe1884>
 4022ee0:	00c00044 	movi	r3,1
 4022ee4:	003fce06 	br	4022e20 <_gp+0xfffe1c20>
 4022ee8:	0005883a 	mov	r2,zero
 4022eec:	003f4e06 	br	4022c28 <_gp+0xfffe1a28>

04022ef0 <__gesf2>:
 4022ef0:	2004d5fa 	srli	r2,r4,23
 4022ef4:	2806d5fa 	srli	r3,r5,23
 4022ef8:	01802034 	movhi	r6,128
 4022efc:	31bfffc4 	addi	r6,r6,-1
 4022f00:	10803fcc 	andi	r2,r2,255
 4022f04:	01c03fc4 	movi	r7,255
 4022f08:	3110703a 	and	r8,r6,r4
 4022f0c:	18c03fcc 	andi	r3,r3,255
 4022f10:	314c703a 	and	r6,r6,r5
 4022f14:	2008d7fa 	srli	r4,r4,31
 4022f18:	280ad7fa 	srli	r5,r5,31
 4022f1c:	11c01926 	beq	r2,r7,4022f84 <__gesf2+0x94>
 4022f20:	01c03fc4 	movi	r7,255
 4022f24:	19c00f26 	beq	r3,r7,4022f64 <__gesf2+0x74>
 4022f28:	1000061e 	bne	r2,zero,4022f44 <__gesf2+0x54>
 4022f2c:	400f003a 	cmpeq	r7,r8,zero
 4022f30:	1800071e 	bne	r3,zero,4022f50 <__gesf2+0x60>
 4022f34:	3000061e 	bne	r6,zero,4022f50 <__gesf2+0x60>
 4022f38:	0005883a 	mov	r2,zero
 4022f3c:	40000e1e 	bne	r8,zero,4022f78 <__gesf2+0x88>
 4022f40:	f800283a 	ret
 4022f44:	18000a1e 	bne	r3,zero,4022f70 <__gesf2+0x80>
 4022f48:	30000b26 	beq	r6,zero,4022f78 <__gesf2+0x88>
 4022f4c:	000f883a 	mov	r7,zero
 4022f50:	29403fcc 	andi	r5,r5,255
 4022f54:	38000726 	beq	r7,zero,4022f74 <__gesf2+0x84>
 4022f58:	28000826 	beq	r5,zero,4022f7c <__gesf2+0x8c>
 4022f5c:	00800044 	movi	r2,1
 4022f60:	f800283a 	ret
 4022f64:	303ff026 	beq	r6,zero,4022f28 <_gp+0xfffe1d28>
 4022f68:	00bfff84 	movi	r2,-2
 4022f6c:	f800283a 	ret
 4022f70:	29403fcc 	andi	r5,r5,255
 4022f74:	21400526 	beq	r4,r5,4022f8c <__gesf2+0x9c>
 4022f78:	203ff826 	beq	r4,zero,4022f5c <_gp+0xfffe1d5c>
 4022f7c:	00bfffc4 	movi	r2,-1
 4022f80:	f800283a 	ret
 4022f84:	403fe626 	beq	r8,zero,4022f20 <_gp+0xfffe1d20>
 4022f88:	003ff706 	br	4022f68 <_gp+0xfffe1d68>
 4022f8c:	18bffa16 	blt	r3,r2,4022f78 <_gp+0xfffe1d78>
 4022f90:	10c00216 	blt	r2,r3,4022f9c <__gesf2+0xac>
 4022f94:	323ff836 	bltu	r6,r8,4022f78 <_gp+0xfffe1d78>
 4022f98:	4180022e 	bgeu	r8,r6,4022fa4 <__gesf2+0xb4>
 4022f9c:	203fef1e 	bne	r4,zero,4022f5c <_gp+0xfffe1d5c>
 4022fa0:	003ff606 	br	4022f7c <_gp+0xfffe1d7c>
 4022fa4:	0005883a 	mov	r2,zero
 4022fa8:	f800283a 	ret

04022fac <__subsf3>:
 4022fac:	defffc04 	addi	sp,sp,-16
 4022fb0:	280cd5fa 	srli	r6,r5,23
 4022fb4:	dc000015 	stw	r16,0(sp)
 4022fb8:	01c02034 	movhi	r7,128
 4022fbc:	2020d5fa 	srli	r16,r4,23
 4022fc0:	39ffffc4 	addi	r7,r7,-1
 4022fc4:	3906703a 	and	r3,r7,r4
 4022fc8:	dc400115 	stw	r17,4(sp)
 4022fcc:	394e703a 	and	r7,r7,r5
 4022fd0:	2022d7fa 	srli	r17,r4,31
 4022fd4:	dfc00315 	stw	ra,12(sp)
 4022fd8:	dc800215 	stw	r18,8(sp)
 4022fdc:	31803fcc 	andi	r6,r6,255
 4022fe0:	01003fc4 	movi	r4,255
 4022fe4:	84003fcc 	andi	r16,r16,255
 4022fe8:	180690fa 	slli	r3,r3,3
 4022fec:	2804d7fa 	srli	r2,r5,31
 4022ff0:	380e90fa 	slli	r7,r7,3
 4022ff4:	31006d26 	beq	r6,r4,40231ac <__subsf3+0x200>
 4022ff8:	1080005c 	xori	r2,r2,1
 4022ffc:	8189c83a 	sub	r4,r16,r6
 4023000:	14404f26 	beq	r2,r17,4023140 <__subsf3+0x194>
 4023004:	0100770e 	bge	zero,r4,40231e4 <__subsf3+0x238>
 4023008:	30001e1e 	bne	r6,zero,4023084 <__subsf3+0xd8>
 402300c:	38006a1e 	bne	r7,zero,40231b8 <__subsf3+0x20c>
 4023010:	188001cc 	andi	r2,r3,7
 4023014:	10000426 	beq	r2,zero,4023028 <__subsf3+0x7c>
 4023018:	188003cc 	andi	r2,r3,15
 402301c:	01000104 	movi	r4,4
 4023020:	11000126 	beq	r2,r4,4023028 <__subsf3+0x7c>
 4023024:	1907883a 	add	r3,r3,r4
 4023028:	1881002c 	andhi	r2,r3,1024
 402302c:	10003926 	beq	r2,zero,4023114 <__subsf3+0x168>
 4023030:	84000044 	addi	r16,r16,1
 4023034:	00803fc4 	movi	r2,255
 4023038:	80807526 	beq	r16,r2,4023210 <__subsf3+0x264>
 402303c:	180691ba 	slli	r3,r3,6
 4023040:	8880004c 	andi	r2,r17,1
 4023044:	180ad27a 	srli	r5,r3,9
 4023048:	84003fcc 	andi	r16,r16,255
 402304c:	800695fa 	slli	r3,r16,23
 4023050:	10803fcc 	andi	r2,r2,255
 4023054:	01002034 	movhi	r4,128
 4023058:	213fffc4 	addi	r4,r4,-1
 402305c:	100497fa 	slli	r2,r2,31
 4023060:	2920703a 	and	r16,r5,r4
 4023064:	80e0b03a 	or	r16,r16,r3
 4023068:	8084b03a 	or	r2,r16,r2
 402306c:	dfc00317 	ldw	ra,12(sp)
 4023070:	dc800217 	ldw	r18,8(sp)
 4023074:	dc400117 	ldw	r17,4(sp)
 4023078:	dc000017 	ldw	r16,0(sp)
 402307c:	dec00404 	addi	sp,sp,16
 4023080:	f800283a 	ret
 4023084:	00803fc4 	movi	r2,255
 4023088:	80bfe126 	beq	r16,r2,4023010 <_gp+0xfffe1e10>
 402308c:	39c10034 	orhi	r7,r7,1024
 4023090:	008006c4 	movi	r2,27
 4023094:	11007416 	blt	r2,r4,4023268 <__subsf3+0x2bc>
 4023098:	00800804 	movi	r2,32
 402309c:	1105c83a 	sub	r2,r2,r4
 40230a0:	3884983a 	sll	r2,r7,r2
 40230a4:	390ed83a 	srl	r7,r7,r4
 40230a8:	1008c03a 	cmpne	r4,r2,zero
 40230ac:	390eb03a 	or	r7,r7,r4
 40230b0:	19c7c83a 	sub	r3,r3,r7
 40230b4:	1881002c 	andhi	r2,r3,1024
 40230b8:	10001426 	beq	r2,zero,402310c <__subsf3+0x160>
 40230bc:	04810034 	movhi	r18,1024
 40230c0:	94bfffc4 	addi	r18,r18,-1
 40230c4:	1ca4703a 	and	r18,r3,r18
 40230c8:	9009883a 	mov	r4,r18
 40230cc:	4023fc00 	call	4023fc0 <__clzsi2>
 40230d0:	10bffec4 	addi	r2,r2,-5
 40230d4:	90a4983a 	sll	r18,r18,r2
 40230d8:	14005116 	blt	r2,r16,4023220 <__subsf3+0x274>
 40230dc:	1405c83a 	sub	r2,r2,r16
 40230e0:	10c00044 	addi	r3,r2,1
 40230e4:	00800804 	movi	r2,32
 40230e8:	10c5c83a 	sub	r2,r2,r3
 40230ec:	9084983a 	sll	r2,r18,r2
 40230f0:	90e4d83a 	srl	r18,r18,r3
 40230f4:	0021883a 	mov	r16,zero
 40230f8:	1006c03a 	cmpne	r3,r2,zero
 40230fc:	90c6b03a 	or	r3,r18,r3
 4023100:	003fc306 	br	4023010 <_gp+0xfffe1e10>
 4023104:	2000e026 	beq	r4,zero,4023488 <__subsf3+0x4dc>
 4023108:	2007883a 	mov	r3,r4
 402310c:	188001cc 	andi	r2,r3,7
 4023110:	103fc11e 	bne	r2,zero,4023018 <_gp+0xfffe1e18>
 4023114:	180ad0fa 	srli	r5,r3,3
 4023118:	00c03fc4 	movi	r3,255
 402311c:	8880004c 	andi	r2,r17,1
 4023120:	80c0031e 	bne	r16,r3,4023130 <__subsf3+0x184>
 4023124:	28006d26 	beq	r5,zero,40232dc <__subsf3+0x330>
 4023128:	29401034 	orhi	r5,r5,64
 402312c:	043fffc4 	movi	r16,-1
 4023130:	00c02034 	movhi	r3,128
 4023134:	18ffffc4 	addi	r3,r3,-1
 4023138:	28ca703a 	and	r5,r5,r3
 402313c:	003fc206 	br	4023048 <_gp+0xfffe1e48>
 4023140:	01003c0e 	bge	zero,r4,4023234 <__subsf3+0x288>
 4023144:	30002126 	beq	r6,zero,40231cc <__subsf3+0x220>
 4023148:	01403fc4 	movi	r5,255
 402314c:	817fb026 	beq	r16,r5,4023010 <_gp+0xfffe1e10>
 4023150:	39c10034 	orhi	r7,r7,1024
 4023154:	014006c4 	movi	r5,27
 4023158:	29007416 	blt	r5,r4,402332c <__subsf3+0x380>
 402315c:	01400804 	movi	r5,32
 4023160:	290bc83a 	sub	r5,r5,r4
 4023164:	394a983a 	sll	r5,r7,r5
 4023168:	390ed83a 	srl	r7,r7,r4
 402316c:	2808c03a 	cmpne	r4,r5,zero
 4023170:	390eb03a 	or	r7,r7,r4
 4023174:	19c7883a 	add	r3,r3,r7
 4023178:	1901002c 	andhi	r4,r3,1024
 402317c:	20003826 	beq	r4,zero,4023260 <__subsf3+0x2b4>
 4023180:	84000044 	addi	r16,r16,1
 4023184:	01003fc4 	movi	r4,255
 4023188:	81005426 	beq	r16,r4,40232dc <__subsf3+0x330>
 402318c:	1023883a 	mov	r17,r2
 4023190:	00bf0034 	movhi	r2,64512
 4023194:	10bfffc4 	addi	r2,r2,-1
 4023198:	1900004c 	andi	r4,r3,1
 402319c:	1886703a 	and	r3,r3,r2
 40231a0:	1806d07a 	srli	r3,r3,1
 40231a4:	1906b03a 	or	r3,r3,r4
 40231a8:	003f9906 	br	4023010 <_gp+0xfffe1e10>
 40231ac:	383f9226 	beq	r7,zero,4022ff8 <_gp+0xfffe1df8>
 40231b0:	10803fcc 	andi	r2,r2,255
 40231b4:	003f9106 	br	4022ffc <_gp+0xfffe1dfc>
 40231b8:	213fffc4 	addi	r4,r4,-1
 40231bc:	203fbc26 	beq	r4,zero,40230b0 <_gp+0xfffe1eb0>
 40231c0:	00803fc4 	movi	r2,255
 40231c4:	80bfb21e 	bne	r16,r2,4023090 <_gp+0xfffe1e90>
 40231c8:	003f9106 	br	4023010 <_gp+0xfffe1e10>
 40231cc:	383f9026 	beq	r7,zero,4023010 <_gp+0xfffe1e10>
 40231d0:	213fffc4 	addi	r4,r4,-1
 40231d4:	203fe726 	beq	r4,zero,4023174 <_gp+0xfffe1f74>
 40231d8:	01403fc4 	movi	r5,255
 40231dc:	817fdd1e 	bne	r16,r5,4023154 <_gp+0xfffe1f54>
 40231e0:	003f8b06 	br	4023010 <_gp+0xfffe1e10>
 40231e4:	2000221e 	bne	r4,zero,4023270 <__subsf3+0x2c4>
 40231e8:	81000044 	addi	r4,r16,1
 40231ec:	21003fcc 	andi	r4,r4,255
 40231f0:	01400044 	movi	r5,1
 40231f4:	2900470e 	bge	r5,r4,4023314 <__subsf3+0x368>
 40231f8:	19e5c83a 	sub	r18,r3,r7
 40231fc:	9141002c 	andhi	r5,r18,1024
 4023200:	28002d26 	beq	r5,zero,40232b8 <__subsf3+0x30c>
 4023204:	38e5c83a 	sub	r18,r7,r3
 4023208:	1023883a 	mov	r17,r2
 402320c:	003fae06 	br	40230c8 <_gp+0xfffe1ec8>
 4023210:	8880004c 	andi	r2,r17,1
 4023214:	043fffc4 	movi	r16,-1
 4023218:	000b883a 	mov	r5,zero
 402321c:	003f8a06 	br	4023048 <_gp+0xfffe1e48>
 4023220:	00ff0034 	movhi	r3,64512
 4023224:	18ffffc4 	addi	r3,r3,-1
 4023228:	80a1c83a 	sub	r16,r16,r2
 402322c:	90c6703a 	and	r3,r18,r3
 4023230:	003f7706 	br	4023010 <_gp+0xfffe1e10>
 4023234:	2000431e 	bne	r4,zero,4023344 <__subsf3+0x398>
 4023238:	81000044 	addi	r4,r16,1
 402323c:	21803fcc 	andi	r6,r4,255
 4023240:	01400044 	movi	r5,1
 4023244:	2980280e 	bge	r5,r6,40232e8 <__subsf3+0x33c>
 4023248:	01403fc4 	movi	r5,255
 402324c:	21402326 	beq	r4,r5,40232dc <__subsf3+0x330>
 4023250:	19c7883a 	add	r3,r3,r7
 4023254:	1806d07a 	srli	r3,r3,1
 4023258:	2021883a 	mov	r16,r4
 402325c:	003f6c06 	br	4023010 <_gp+0xfffe1e10>
 4023260:	1023883a 	mov	r17,r2
 4023264:	003fa906 	br	402310c <_gp+0xfffe1f0c>
 4023268:	01c00044 	movi	r7,1
 402326c:	003f9006 	br	40230b0 <_gp+0xfffe1eb0>
 4023270:	8000151e 	bne	r16,zero,40232c8 <__subsf3+0x31c>
 4023274:	18002f26 	beq	r3,zero,4023334 <__subsf3+0x388>
 4023278:	0108303a 	nor	r4,zero,r4
 402327c:	20000a26 	beq	r4,zero,40232a8 <__subsf3+0x2fc>
 4023280:	01403fc4 	movi	r5,255
 4023284:	31402b26 	beq	r6,r5,4023334 <__subsf3+0x388>
 4023288:	014006c4 	movi	r5,27
 402328c:	29006e16 	blt	r5,r4,4023448 <__subsf3+0x49c>
 4023290:	01400804 	movi	r5,32
 4023294:	290bc83a 	sub	r5,r5,r4
 4023298:	194a983a 	sll	r5,r3,r5
 402329c:	1908d83a 	srl	r4,r3,r4
 40232a0:	2806c03a 	cmpne	r3,r5,zero
 40232a4:	20c6b03a 	or	r3,r4,r3
 40232a8:	38c7c83a 	sub	r3,r7,r3
 40232ac:	3021883a 	mov	r16,r6
 40232b0:	1023883a 	mov	r17,r2
 40232b4:	003f7f06 	br	40230b4 <_gp+0xfffe1eb4>
 40232b8:	903f831e 	bne	r18,zero,40230c8 <_gp+0xfffe1ec8>
 40232bc:	0005883a 	mov	r2,zero
 40232c0:	0021883a 	mov	r16,zero
 40232c4:	003f9a06 	br	4023130 <_gp+0xfffe1f30>
 40232c8:	01403fc4 	movi	r5,255
 40232cc:	31401926 	beq	r6,r5,4023334 <__subsf3+0x388>
 40232d0:	0109c83a 	sub	r4,zero,r4
 40232d4:	18c10034 	orhi	r3,r3,1024
 40232d8:	003feb06 	br	4023288 <_gp+0xfffe2088>
 40232dc:	043fffc4 	movi	r16,-1
 40232e0:	000b883a 	mov	r5,zero
 40232e4:	003f5806 	br	4023048 <_gp+0xfffe1e48>
 40232e8:	8000481e 	bne	r16,zero,402340c <__subsf3+0x460>
 40232ec:	18006226 	beq	r3,zero,4023478 <__subsf3+0x4cc>
 40232f0:	383f4726 	beq	r7,zero,4023010 <_gp+0xfffe1e10>
 40232f4:	19c7883a 	add	r3,r3,r7
 40232f8:	1881002c 	andhi	r2,r3,1024
 40232fc:	103f8326 	beq	r2,zero,402310c <_gp+0xfffe1f0c>
 4023300:	00bf0034 	movhi	r2,64512
 4023304:	10bfffc4 	addi	r2,r2,-1
 4023308:	2821883a 	mov	r16,r5
 402330c:	1886703a 	and	r3,r3,r2
 4023310:	003f3f06 	br	4023010 <_gp+0xfffe1e10>
 4023314:	80001c1e 	bne	r16,zero,4023388 <__subsf3+0x3dc>
 4023318:	1800261e 	bne	r3,zero,40233b4 <__subsf3+0x408>
 402331c:	38004c26 	beq	r7,zero,4023450 <__subsf3+0x4a4>
 4023320:	3807883a 	mov	r3,r7
 4023324:	1023883a 	mov	r17,r2
 4023328:	003f3906 	br	4023010 <_gp+0xfffe1e10>
 402332c:	01c00044 	movi	r7,1
 4023330:	003f9006 	br	4023174 <_gp+0xfffe1f74>
 4023334:	3807883a 	mov	r3,r7
 4023338:	3021883a 	mov	r16,r6
 402333c:	1023883a 	mov	r17,r2
 4023340:	003f3306 	br	4023010 <_gp+0xfffe1e10>
 4023344:	8000161e 	bne	r16,zero,40233a0 <__subsf3+0x3f4>
 4023348:	18002d26 	beq	r3,zero,4023400 <__subsf3+0x454>
 402334c:	0108303a 	nor	r4,zero,r4
 4023350:	20000a26 	beq	r4,zero,402337c <__subsf3+0x3d0>
 4023354:	01403fc4 	movi	r5,255
 4023358:	31402926 	beq	r6,r5,4023400 <__subsf3+0x454>
 402335c:	014006c4 	movi	r5,27
 4023360:	29004716 	blt	r5,r4,4023480 <__subsf3+0x4d4>
 4023364:	01400804 	movi	r5,32
 4023368:	290bc83a 	sub	r5,r5,r4
 402336c:	194a983a 	sll	r5,r3,r5
 4023370:	1908d83a 	srl	r4,r3,r4
 4023374:	2806c03a 	cmpne	r3,r5,zero
 4023378:	20c6b03a 	or	r3,r4,r3
 402337c:	19c7883a 	add	r3,r3,r7
 4023380:	3021883a 	mov	r16,r6
 4023384:	003f7c06 	br	4023178 <_gp+0xfffe1f78>
 4023388:	1800111e 	bne	r3,zero,40233d0 <__subsf3+0x424>
 402338c:	38003326 	beq	r7,zero,402345c <__subsf3+0x4b0>
 4023390:	3807883a 	mov	r3,r7
 4023394:	1023883a 	mov	r17,r2
 4023398:	04003fc4 	movi	r16,255
 402339c:	003f1c06 	br	4023010 <_gp+0xfffe1e10>
 40233a0:	01403fc4 	movi	r5,255
 40233a4:	31401626 	beq	r6,r5,4023400 <__subsf3+0x454>
 40233a8:	0109c83a 	sub	r4,zero,r4
 40233ac:	18c10034 	orhi	r3,r3,1024
 40233b0:	003fea06 	br	402335c <_gp+0xfffe215c>
 40233b4:	383f1626 	beq	r7,zero,4023010 <_gp+0xfffe1e10>
 40233b8:	19c9c83a 	sub	r4,r3,r7
 40233bc:	2141002c 	andhi	r5,r4,1024
 40233c0:	283f5026 	beq	r5,zero,4023104 <_gp+0xfffe1f04>
 40233c4:	38c7c83a 	sub	r3,r7,r3
 40233c8:	1023883a 	mov	r17,r2
 40233cc:	003f1006 	br	4023010 <_gp+0xfffe1e10>
 40233d0:	38001b26 	beq	r7,zero,4023440 <__subsf3+0x494>
 40233d4:	1806d0fa 	srli	r3,r3,3
 40233d8:	1900102c 	andhi	r4,r3,64
 40233dc:	20000526 	beq	r4,zero,40233f4 <__subsf3+0x448>
 40233e0:	380ed0fa 	srli	r7,r7,3
 40233e4:	3900102c 	andhi	r4,r7,64
 40233e8:	2000021e 	bne	r4,zero,40233f4 <__subsf3+0x448>
 40233ec:	3807883a 	mov	r3,r7
 40233f0:	1023883a 	mov	r17,r2
 40233f4:	180690fa 	slli	r3,r3,3
 40233f8:	04003fc4 	movi	r16,255
 40233fc:	003f0406 	br	4023010 <_gp+0xfffe1e10>
 4023400:	3807883a 	mov	r3,r7
 4023404:	3021883a 	mov	r16,r6
 4023408:	003f0106 	br	4023010 <_gp+0xfffe1e10>
 402340c:	18001726 	beq	r3,zero,402346c <__subsf3+0x4c0>
 4023410:	38000b26 	beq	r7,zero,4023440 <__subsf3+0x494>
 4023414:	1806d0fa 	srli	r3,r3,3
 4023418:	1900102c 	andhi	r4,r3,64
 402341c:	20000426 	beq	r4,zero,4023430 <__subsf3+0x484>
 4023420:	380ed0fa 	srli	r7,r7,3
 4023424:	3900102c 	andhi	r4,r7,64
 4023428:	2000011e 	bne	r4,zero,4023430 <__subsf3+0x484>
 402342c:	3807883a 	mov	r3,r7
 4023430:	180690fa 	slli	r3,r3,3
 4023434:	1023883a 	mov	r17,r2
 4023438:	04003fc4 	movi	r16,255
 402343c:	003ef406 	br	4023010 <_gp+0xfffe1e10>
 4023440:	04003fc4 	movi	r16,255
 4023444:	003ef206 	br	4023010 <_gp+0xfffe1e10>
 4023448:	00c00044 	movi	r3,1
 402344c:	003f9606 	br	40232a8 <_gp+0xfffe20a8>
 4023450:	000b883a 	mov	r5,zero
 4023454:	0005883a 	mov	r2,zero
 4023458:	003f3506 	br	4023130 <_gp+0xfffe1f30>
 402345c:	01402034 	movhi	r5,128
 4023460:	297fffc4 	addi	r5,r5,-1
 4023464:	0005883a 	mov	r2,zero
 4023468:	003f2f06 	br	4023128 <_gp+0xfffe1f28>
 402346c:	3807883a 	mov	r3,r7
 4023470:	04003fc4 	movi	r16,255
 4023474:	003ee606 	br	4023010 <_gp+0xfffe1e10>
 4023478:	3807883a 	mov	r3,r7
 402347c:	003ee406 	br	4023010 <_gp+0xfffe1e10>
 4023480:	00c00044 	movi	r3,1
 4023484:	003fbd06 	br	402337c <_gp+0xfffe217c>
 4023488:	0005883a 	mov	r2,zero
 402348c:	003f2806 	br	4023130 <_gp+0xfffe1f30>

04023490 <__fixsfsi>:
 4023490:	200ad5fa 	srli	r5,r4,23
 4023494:	00c02034 	movhi	r3,128
 4023498:	18ffffc4 	addi	r3,r3,-1
 402349c:	29403fcc 	andi	r5,r5,255
 40234a0:	00801f84 	movi	r2,126
 40234a4:	1906703a 	and	r3,r3,r4
 40234a8:	2008d7fa 	srli	r4,r4,31
 40234ac:	11400e0e 	bge	r2,r5,40234e8 <__fixsfsi+0x58>
 40234b0:	00802744 	movi	r2,157
 40234b4:	11400816 	blt	r2,r5,40234d8 <__fixsfsi+0x48>
 40234b8:	00802544 	movi	r2,149
 40234bc:	18c02034 	orhi	r3,r3,128
 40234c0:	11400b0e 	bge	r2,r5,40234f0 <__fixsfsi+0x60>
 40234c4:	28bfda84 	addi	r2,r5,-150
 40234c8:	1884983a 	sll	r2,r3,r2
 40234cc:	20000726 	beq	r4,zero,40234ec <__fixsfsi+0x5c>
 40234d0:	0085c83a 	sub	r2,zero,r2
 40234d4:	f800283a 	ret
 40234d8:	00a00034 	movhi	r2,32768
 40234dc:	10bfffc4 	addi	r2,r2,-1
 40234e0:	2085883a 	add	r2,r4,r2
 40234e4:	f800283a 	ret
 40234e8:	0005883a 	mov	r2,zero
 40234ec:	f800283a 	ret
 40234f0:	00802584 	movi	r2,150
 40234f4:	1145c83a 	sub	r2,r2,r5
 40234f8:	1884d83a 	srl	r2,r3,r2
 40234fc:	003ff306 	br	40234cc <_gp+0xfffe22cc>

04023500 <__floatsisf>:
 4023500:	defffd04 	addi	sp,sp,-12
 4023504:	dfc00215 	stw	ra,8(sp)
 4023508:	dc400115 	stw	r17,4(sp)
 402350c:	dc000015 	stw	r16,0(sp)
 4023510:	20003526 	beq	r4,zero,40235e8 <__floatsisf+0xe8>
 4023514:	2021883a 	mov	r16,r4
 4023518:	2022d7fa 	srli	r17,r4,31
 402351c:	20003616 	blt	r4,zero,40235f8 <__floatsisf+0xf8>
 4023520:	8009883a 	mov	r4,r16
 4023524:	4023fc00 	call	4023fc0 <__clzsi2>
 4023528:	00c02784 	movi	r3,158
 402352c:	1887c83a 	sub	r3,r3,r2
 4023530:	01002584 	movi	r4,150
 4023534:	20c01416 	blt	r4,r3,4023588 <__floatsisf+0x88>
 4023538:	20c9c83a 	sub	r4,r4,r3
 402353c:	8120983a 	sll	r16,r16,r4
 4023540:	00802034 	movhi	r2,128
 4023544:	10bfffc4 	addi	r2,r2,-1
 4023548:	8809883a 	mov	r4,r17
 402354c:	80a0703a 	and	r16,r16,r2
 4023550:	18803fcc 	andi	r2,r3,255
 4023554:	100695fa 	slli	r3,r2,23
 4023558:	20803fcc 	andi	r2,r4,255
 402355c:	100897fa 	slli	r4,r2,31
 4023560:	00802034 	movhi	r2,128
 4023564:	10bfffc4 	addi	r2,r2,-1
 4023568:	8084703a 	and	r2,r16,r2
 402356c:	10c4b03a 	or	r2,r2,r3
 4023570:	1104b03a 	or	r2,r2,r4
 4023574:	dfc00217 	ldw	ra,8(sp)
 4023578:	dc400117 	ldw	r17,4(sp)
 402357c:	dc000017 	ldw	r16,0(sp)
 4023580:	dec00304 	addi	sp,sp,12
 4023584:	f800283a 	ret
 4023588:	01002644 	movi	r4,153
 402358c:	20c01c16 	blt	r4,r3,4023600 <__floatsisf+0x100>
 4023590:	20c9c83a 	sub	r4,r4,r3
 4023594:	8120983a 	sll	r16,r16,r4
 4023598:	013f0034 	movhi	r4,64512
 402359c:	213fffc4 	addi	r4,r4,-1
 40235a0:	814001cc 	andi	r5,r16,7
 40235a4:	8108703a 	and	r4,r16,r4
 40235a8:	28000426 	beq	r5,zero,40235bc <__floatsisf+0xbc>
 40235ac:	840003cc 	andi	r16,r16,15
 40235b0:	01400104 	movi	r5,4
 40235b4:	81400126 	beq	r16,r5,40235bc <__floatsisf+0xbc>
 40235b8:	2149883a 	add	r4,r4,r5
 40235bc:	2141002c 	andhi	r5,r4,1024
 40235c0:	28000526 	beq	r5,zero,40235d8 <__floatsisf+0xd8>
 40235c4:	00c027c4 	movi	r3,159
 40235c8:	1887c83a 	sub	r3,r3,r2
 40235cc:	00bf0034 	movhi	r2,64512
 40235d0:	10bfffc4 	addi	r2,r2,-1
 40235d4:	2088703a 	and	r4,r4,r2
 40235d8:	202091ba 	slli	r16,r4,6
 40235dc:	8809883a 	mov	r4,r17
 40235e0:	8020d27a 	srli	r16,r16,9
 40235e4:	003fda06 	br	4023550 <_gp+0xfffe2350>
 40235e8:	0009883a 	mov	r4,zero
 40235ec:	0007883a 	mov	r3,zero
 40235f0:	0021883a 	mov	r16,zero
 40235f4:	003fd606 	br	4023550 <_gp+0xfffe2350>
 40235f8:	0121c83a 	sub	r16,zero,r4
 40235fc:	003fc806 	br	4023520 <_gp+0xfffe2320>
 4023600:	01002e44 	movi	r4,185
 4023604:	20c9c83a 	sub	r4,r4,r3
 4023608:	01400144 	movi	r5,5
 402360c:	8108983a 	sll	r4,r16,r4
 4023610:	288bc83a 	sub	r5,r5,r2
 4023614:	8160d83a 	srl	r16,r16,r5
 4023618:	2008c03a 	cmpne	r4,r4,zero
 402361c:	8120b03a 	or	r16,r16,r4
 4023620:	003fdd06 	br	4023598 <_gp+0xfffe2398>

04023624 <__muldf3>:
 4023624:	defff304 	addi	sp,sp,-52
 4023628:	2804d53a 	srli	r2,r5,20
 402362c:	dd800915 	stw	r22,36(sp)
 4023630:	282cd7fa 	srli	r22,r5,31
 4023634:	dc000315 	stw	r16,12(sp)
 4023638:	04000434 	movhi	r16,16
 402363c:	dd400815 	stw	r21,32(sp)
 4023640:	dc800515 	stw	r18,20(sp)
 4023644:	843fffc4 	addi	r16,r16,-1
 4023648:	dfc00c15 	stw	ra,48(sp)
 402364c:	df000b15 	stw	fp,44(sp)
 4023650:	ddc00a15 	stw	r23,40(sp)
 4023654:	dd000715 	stw	r20,28(sp)
 4023658:	dcc00615 	stw	r19,24(sp)
 402365c:	dc400415 	stw	r17,16(sp)
 4023660:	1481ffcc 	andi	r18,r2,2047
 4023664:	2c20703a 	and	r16,r5,r16
 4023668:	b02b883a 	mov	r21,r22
 402366c:	b2403fcc 	andi	r9,r22,255
 4023670:	90006026 	beq	r18,zero,40237f4 <__muldf3+0x1d0>
 4023674:	0081ffc4 	movi	r2,2047
 4023678:	2029883a 	mov	r20,r4
 402367c:	90803626 	beq	r18,r2,4023758 <__muldf3+0x134>
 4023680:	80800434 	orhi	r2,r16,16
 4023684:	100490fa 	slli	r2,r2,3
 4023688:	2020d77a 	srli	r16,r4,29
 402368c:	202890fa 	slli	r20,r4,3
 4023690:	94bf0044 	addi	r18,r18,-1023
 4023694:	80a0b03a 	or	r16,r16,r2
 4023698:	0027883a 	mov	r19,zero
 402369c:	0039883a 	mov	fp,zero
 40236a0:	3804d53a 	srli	r2,r7,20
 40236a4:	382ed7fa 	srli	r23,r7,31
 40236a8:	04400434 	movhi	r17,16
 40236ac:	8c7fffc4 	addi	r17,r17,-1
 40236b0:	1081ffcc 	andi	r2,r2,2047
 40236b4:	3011883a 	mov	r8,r6
 40236b8:	3c62703a 	and	r17,r7,r17
 40236bc:	ba803fcc 	andi	r10,r23,255
 40236c0:	10006d26 	beq	r2,zero,4023878 <__muldf3+0x254>
 40236c4:	00c1ffc4 	movi	r3,2047
 40236c8:	10c06526 	beq	r2,r3,4023860 <__muldf3+0x23c>
 40236cc:	88c00434 	orhi	r3,r17,16
 40236d0:	180690fa 	slli	r3,r3,3
 40236d4:	3022d77a 	srli	r17,r6,29
 40236d8:	301090fa 	slli	r8,r6,3
 40236dc:	10bf0044 	addi	r2,r2,-1023
 40236e0:	88e2b03a 	or	r17,r17,r3
 40236e4:	000b883a 	mov	r5,zero
 40236e8:	9085883a 	add	r2,r18,r2
 40236ec:	2cc8b03a 	or	r4,r5,r19
 40236f0:	00c003c4 	movi	r3,15
 40236f4:	bdacf03a 	xor	r22,r23,r22
 40236f8:	12c00044 	addi	r11,r2,1
 40236fc:	19009936 	bltu	r3,r4,4023964 <__muldf3+0x340>
 4023700:	200890ba 	slli	r4,r4,2
 4023704:	00c100b4 	movhi	r3,1026
 4023708:	18cdc604 	addi	r3,r3,14104
 402370c:	20c9883a 	add	r4,r4,r3
 4023710:	20c00017 	ldw	r3,0(r4)
 4023714:	1800683a 	jmp	r3
 4023718:	04023964 	muli	r16,zero,2277
 402371c:	04023778 	rdprs	r16,zero,2269
 4023720:	04023778 	rdprs	r16,zero,2269
 4023724:	04023774 	movhi	r16,2269
 4023728:	04023940 	call	402394 <__alt_mem_SDRAM_Controller+0x402394>
 402372c:	04023940 	call	402394 <__alt_mem_SDRAM_Controller+0x402394>
 4023730:	04023928 	cmpgeui	r16,zero,2276
 4023734:	04023774 	movhi	r16,2269
 4023738:	04023940 	call	402394 <__alt_mem_SDRAM_Controller+0x402394>
 402373c:	04023928 	cmpgeui	r16,zero,2276
 4023740:	04023940 	call	402394 <__alt_mem_SDRAM_Controller+0x402394>
 4023744:	04023774 	movhi	r16,2269
 4023748:	04023950 	cmplti	r16,zero,2277
 402374c:	04023950 	cmplti	r16,zero,2277
 4023750:	04023950 	cmplti	r16,zero,2277
 4023754:	04023b6c 	andhi	r16,zero,2285
 4023758:	2404b03a 	or	r2,r4,r16
 402375c:	10006f1e 	bne	r2,zero,402391c <__muldf3+0x2f8>
 4023760:	04c00204 	movi	r19,8
 4023764:	0021883a 	mov	r16,zero
 4023768:	0029883a 	mov	r20,zero
 402376c:	07000084 	movi	fp,2
 4023770:	003fcb06 	br	40236a0 <_gp+0xfffe24a0>
 4023774:	502d883a 	mov	r22,r10
 4023778:	00800084 	movi	r2,2
 402377c:	28805726 	beq	r5,r2,40238dc <__muldf3+0x2b8>
 4023780:	008000c4 	movi	r2,3
 4023784:	28816626 	beq	r5,r2,4023d20 <__muldf3+0x6fc>
 4023788:	00800044 	movi	r2,1
 402378c:	2881411e 	bne	r5,r2,4023c94 <__muldf3+0x670>
 4023790:	b02b883a 	mov	r21,r22
 4023794:	0005883a 	mov	r2,zero
 4023798:	000b883a 	mov	r5,zero
 402379c:	0029883a 	mov	r20,zero
 40237a0:	1004953a 	slli	r2,r2,20
 40237a4:	a8c03fcc 	andi	r3,r21,255
 40237a8:	04400434 	movhi	r17,16
 40237ac:	8c7fffc4 	addi	r17,r17,-1
 40237b0:	180697fa 	slli	r3,r3,31
 40237b4:	2c4a703a 	and	r5,r5,r17
 40237b8:	288ab03a 	or	r5,r5,r2
 40237bc:	28c6b03a 	or	r3,r5,r3
 40237c0:	a005883a 	mov	r2,r20
 40237c4:	dfc00c17 	ldw	ra,48(sp)
 40237c8:	df000b17 	ldw	fp,44(sp)
 40237cc:	ddc00a17 	ldw	r23,40(sp)
 40237d0:	dd800917 	ldw	r22,36(sp)
 40237d4:	dd400817 	ldw	r21,32(sp)
 40237d8:	dd000717 	ldw	r20,28(sp)
 40237dc:	dcc00617 	ldw	r19,24(sp)
 40237e0:	dc800517 	ldw	r18,20(sp)
 40237e4:	dc400417 	ldw	r17,16(sp)
 40237e8:	dc000317 	ldw	r16,12(sp)
 40237ec:	dec00d04 	addi	sp,sp,52
 40237f0:	f800283a 	ret
 40237f4:	2404b03a 	or	r2,r4,r16
 40237f8:	2027883a 	mov	r19,r4
 40237fc:	10004226 	beq	r2,zero,4023908 <__muldf3+0x2e4>
 4023800:	8000fc26 	beq	r16,zero,4023bf4 <__muldf3+0x5d0>
 4023804:	8009883a 	mov	r4,r16
 4023808:	d9800215 	stw	r6,8(sp)
 402380c:	d9c00015 	stw	r7,0(sp)
 4023810:	da400115 	stw	r9,4(sp)
 4023814:	4023fc00 	call	4023fc0 <__clzsi2>
 4023818:	d9800217 	ldw	r6,8(sp)
 402381c:	d9c00017 	ldw	r7,0(sp)
 4023820:	da400117 	ldw	r9,4(sp)
 4023824:	113ffd44 	addi	r4,r2,-11
 4023828:	00c00704 	movi	r3,28
 402382c:	1900ed16 	blt	r3,r4,4023be4 <__muldf3+0x5c0>
 4023830:	00c00744 	movi	r3,29
 4023834:	147ffe04 	addi	r17,r2,-8
 4023838:	1907c83a 	sub	r3,r3,r4
 402383c:	8460983a 	sll	r16,r16,r17
 4023840:	98c6d83a 	srl	r3,r19,r3
 4023844:	9c68983a 	sll	r20,r19,r17
 4023848:	1c20b03a 	or	r16,r3,r16
 402384c:	1080fcc4 	addi	r2,r2,1011
 4023850:	00a5c83a 	sub	r18,zero,r2
 4023854:	0027883a 	mov	r19,zero
 4023858:	0039883a 	mov	fp,zero
 402385c:	003f9006 	br	40236a0 <_gp+0xfffe24a0>
 4023860:	3446b03a 	or	r3,r6,r17
 4023864:	1800261e 	bne	r3,zero,4023900 <__muldf3+0x2dc>
 4023868:	0023883a 	mov	r17,zero
 402386c:	0011883a 	mov	r8,zero
 4023870:	01400084 	movi	r5,2
 4023874:	003f9c06 	br	40236e8 <_gp+0xfffe24e8>
 4023878:	3446b03a 	or	r3,r6,r17
 402387c:	18001c26 	beq	r3,zero,40238f0 <__muldf3+0x2cc>
 4023880:	8800ce26 	beq	r17,zero,4023bbc <__muldf3+0x598>
 4023884:	8809883a 	mov	r4,r17
 4023888:	d9800215 	stw	r6,8(sp)
 402388c:	da400115 	stw	r9,4(sp)
 4023890:	da800015 	stw	r10,0(sp)
 4023894:	4023fc00 	call	4023fc0 <__clzsi2>
 4023898:	d9800217 	ldw	r6,8(sp)
 402389c:	da400117 	ldw	r9,4(sp)
 40238a0:	da800017 	ldw	r10,0(sp)
 40238a4:	113ffd44 	addi	r4,r2,-11
 40238a8:	00c00704 	movi	r3,28
 40238ac:	1900bf16 	blt	r3,r4,4023bac <__muldf3+0x588>
 40238b0:	00c00744 	movi	r3,29
 40238b4:	123ffe04 	addi	r8,r2,-8
 40238b8:	1907c83a 	sub	r3,r3,r4
 40238bc:	8a22983a 	sll	r17,r17,r8
 40238c0:	30c6d83a 	srl	r3,r6,r3
 40238c4:	3210983a 	sll	r8,r6,r8
 40238c8:	1c62b03a 	or	r17,r3,r17
 40238cc:	1080fcc4 	addi	r2,r2,1011
 40238d0:	0085c83a 	sub	r2,zero,r2
 40238d4:	000b883a 	mov	r5,zero
 40238d8:	003f8306 	br	40236e8 <_gp+0xfffe24e8>
 40238dc:	b02b883a 	mov	r21,r22
 40238e0:	0081ffc4 	movi	r2,2047
 40238e4:	000b883a 	mov	r5,zero
 40238e8:	0029883a 	mov	r20,zero
 40238ec:	003fac06 	br	40237a0 <_gp+0xfffe25a0>
 40238f0:	0023883a 	mov	r17,zero
 40238f4:	0011883a 	mov	r8,zero
 40238f8:	01400044 	movi	r5,1
 40238fc:	003f7a06 	br	40236e8 <_gp+0xfffe24e8>
 4023900:	014000c4 	movi	r5,3
 4023904:	003f7806 	br	40236e8 <_gp+0xfffe24e8>
 4023908:	04c00104 	movi	r19,4
 402390c:	0021883a 	mov	r16,zero
 4023910:	0029883a 	mov	r20,zero
 4023914:	07000044 	movi	fp,1
 4023918:	003f6106 	br	40236a0 <_gp+0xfffe24a0>
 402391c:	04c00304 	movi	r19,12
 4023920:	070000c4 	movi	fp,3
 4023924:	003f5e06 	br	40236a0 <_gp+0xfffe24a0>
 4023928:	01400434 	movhi	r5,16
 402392c:	002b883a 	mov	r21,zero
 4023930:	297fffc4 	addi	r5,r5,-1
 4023934:	053fffc4 	movi	r20,-1
 4023938:	0081ffc4 	movi	r2,2047
 402393c:	003f9806 	br	40237a0 <_gp+0xfffe25a0>
 4023940:	8023883a 	mov	r17,r16
 4023944:	a011883a 	mov	r8,r20
 4023948:	e00b883a 	mov	r5,fp
 402394c:	003f8a06 	br	4023778 <_gp+0xfffe2578>
 4023950:	8023883a 	mov	r17,r16
 4023954:	a011883a 	mov	r8,r20
 4023958:	482d883a 	mov	r22,r9
 402395c:	e00b883a 	mov	r5,fp
 4023960:	003f8506 	br	4023778 <_gp+0xfffe2578>
 4023964:	a00ad43a 	srli	r5,r20,16
 4023968:	401ad43a 	srli	r13,r8,16
 402396c:	a53fffcc 	andi	r20,r20,65535
 4023970:	423fffcc 	andi	r8,r8,65535
 4023974:	4519383a 	mul	r12,r8,r20
 4023978:	4147383a 	mul	r3,r8,r5
 402397c:	6d09383a 	mul	r4,r13,r20
 4023980:	600cd43a 	srli	r6,r12,16
 4023984:	2b5d383a 	mul	r14,r5,r13
 4023988:	20c9883a 	add	r4,r4,r3
 402398c:	310d883a 	add	r6,r6,r4
 4023990:	30c0022e 	bgeu	r6,r3,402399c <__muldf3+0x378>
 4023994:	00c00074 	movhi	r3,1
 4023998:	70dd883a 	add	r14,r14,r3
 402399c:	8826d43a 	srli	r19,r17,16
 40239a0:	8bffffcc 	andi	r15,r17,65535
 40239a4:	7d23383a 	mul	r17,r15,r20
 40239a8:	7949383a 	mul	r4,r15,r5
 40239ac:	9d29383a 	mul	r20,r19,r20
 40239b0:	8814d43a 	srli	r10,r17,16
 40239b4:	3012943a 	slli	r9,r6,16
 40239b8:	a129883a 	add	r20,r20,r4
 40239bc:	633fffcc 	andi	r12,r12,65535
 40239c0:	5515883a 	add	r10,r10,r20
 40239c4:	3006d43a 	srli	r3,r6,16
 40239c8:	4b13883a 	add	r9,r9,r12
 40239cc:	2ccb383a 	mul	r5,r5,r19
 40239d0:	5100022e 	bgeu	r10,r4,40239dc <__muldf3+0x3b8>
 40239d4:	01000074 	movhi	r4,1
 40239d8:	290b883a 	add	r5,r5,r4
 40239dc:	802ad43a 	srli	r21,r16,16
 40239e0:	843fffcc 	andi	r16,r16,65535
 40239e4:	440d383a 	mul	r6,r8,r16
 40239e8:	4565383a 	mul	r18,r8,r21
 40239ec:	8349383a 	mul	r4,r16,r13
 40239f0:	500e943a 	slli	r7,r10,16
 40239f4:	3010d43a 	srli	r8,r6,16
 40239f8:	5028d43a 	srli	r20,r10,16
 40239fc:	2489883a 	add	r4,r4,r18
 4023a00:	8abfffcc 	andi	r10,r17,65535
 4023a04:	3a95883a 	add	r10,r7,r10
 4023a08:	4119883a 	add	r12,r8,r4
 4023a0c:	a169883a 	add	r20,r20,r5
 4023a10:	1a87883a 	add	r3,r3,r10
 4023a14:	6d5b383a 	mul	r13,r13,r21
 4023a18:	6480022e 	bgeu	r12,r18,4023a24 <__muldf3+0x400>
 4023a1c:	01000074 	movhi	r4,1
 4023a20:	691b883a 	add	r13,r13,r4
 4023a24:	7c25383a 	mul	r18,r15,r16
 4023a28:	7d4b383a 	mul	r5,r15,r21
 4023a2c:	84cf383a 	mul	r7,r16,r19
 4023a30:	901ed43a 	srli	r15,r18,16
 4023a34:	6008d43a 	srli	r4,r12,16
 4023a38:	6010943a 	slli	r8,r12,16
 4023a3c:	394f883a 	add	r7,r7,r5
 4023a40:	333fffcc 	andi	r12,r6,65535
 4023a44:	79df883a 	add	r15,r15,r7
 4023a48:	235b883a 	add	r13,r4,r13
 4023a4c:	9d63383a 	mul	r17,r19,r21
 4023a50:	4309883a 	add	r4,r8,r12
 4023a54:	7940022e 	bgeu	r15,r5,4023a60 <__muldf3+0x43c>
 4023a58:	01400074 	movhi	r5,1
 4023a5c:	8963883a 	add	r17,r17,r5
 4023a60:	780a943a 	slli	r5,r15,16
 4023a64:	91bfffcc 	andi	r6,r18,65535
 4023a68:	70c7883a 	add	r3,r14,r3
 4023a6c:	298d883a 	add	r6,r5,r6
 4023a70:	1a8f803a 	cmpltu	r7,r3,r10
 4023a74:	350b883a 	add	r5,r6,r20
 4023a78:	20c7883a 	add	r3,r4,r3
 4023a7c:	3955883a 	add	r10,r7,r5
 4023a80:	1909803a 	cmpltu	r4,r3,r4
 4023a84:	6a91883a 	add	r8,r13,r10
 4023a88:	780cd43a 	srli	r6,r15,16
 4023a8c:	2219883a 	add	r12,r4,r8
 4023a90:	2d0b803a 	cmpltu	r5,r5,r20
 4023a94:	51cf803a 	cmpltu	r7,r10,r7
 4023a98:	29ceb03a 	or	r7,r5,r7
 4023a9c:	4351803a 	cmpltu	r8,r8,r13
 4023aa0:	610b803a 	cmpltu	r5,r12,r4
 4023aa4:	4148b03a 	or	r4,r8,r5
 4023aa8:	398f883a 	add	r7,r7,r6
 4023aac:	3909883a 	add	r4,r7,r4
 4023ab0:	1810927a 	slli	r8,r3,9
 4023ab4:	2449883a 	add	r4,r4,r17
 4023ab8:	2008927a 	slli	r4,r4,9
 4023abc:	6022d5fa 	srli	r17,r12,23
 4023ac0:	1806d5fa 	srli	r3,r3,23
 4023ac4:	4252b03a 	or	r9,r8,r9
 4023ac8:	600a927a 	slli	r5,r12,9
 4023acc:	4810c03a 	cmpne	r8,r9,zero
 4023ad0:	2462b03a 	or	r17,r4,r17
 4023ad4:	40c6b03a 	or	r3,r8,r3
 4023ad8:	8900402c 	andhi	r4,r17,256
 4023adc:	1950b03a 	or	r8,r3,r5
 4023ae0:	20000726 	beq	r4,zero,4023b00 <__muldf3+0x4dc>
 4023ae4:	4006d07a 	srli	r3,r8,1
 4023ae8:	880497fa 	slli	r2,r17,31
 4023aec:	4200004c 	andi	r8,r8,1
 4023af0:	8822d07a 	srli	r17,r17,1
 4023af4:	1a10b03a 	or	r8,r3,r8
 4023af8:	1210b03a 	or	r8,r2,r8
 4023afc:	5805883a 	mov	r2,r11
 4023b00:	1140ffc4 	addi	r5,r2,1023
 4023b04:	0140440e 	bge	zero,r5,4023c18 <__muldf3+0x5f4>
 4023b08:	40c001cc 	andi	r3,r8,7
 4023b0c:	18000726 	beq	r3,zero,4023b2c <__muldf3+0x508>
 4023b10:	40c003cc 	andi	r3,r8,15
 4023b14:	01000104 	movi	r4,4
 4023b18:	19000426 	beq	r3,r4,4023b2c <__muldf3+0x508>
 4023b1c:	4107883a 	add	r3,r8,r4
 4023b20:	1a11803a 	cmpltu	r8,r3,r8
 4023b24:	8a23883a 	add	r17,r17,r8
 4023b28:	1811883a 	mov	r8,r3
 4023b2c:	88c0402c 	andhi	r3,r17,256
 4023b30:	18000426 	beq	r3,zero,4023b44 <__muldf3+0x520>
 4023b34:	11410004 	addi	r5,r2,1024
 4023b38:	00bfc034 	movhi	r2,65280
 4023b3c:	10bfffc4 	addi	r2,r2,-1
 4023b40:	88a2703a 	and	r17,r17,r2
 4023b44:	0081ff84 	movi	r2,2046
 4023b48:	117f6416 	blt	r2,r5,40238dc <_gp+0xfffe26dc>
 4023b4c:	8828977a 	slli	r20,r17,29
 4023b50:	4010d0fa 	srli	r8,r8,3
 4023b54:	8822927a 	slli	r17,r17,9
 4023b58:	2881ffcc 	andi	r2,r5,2047
 4023b5c:	a228b03a 	or	r20,r20,r8
 4023b60:	880ad33a 	srli	r5,r17,12
 4023b64:	b02b883a 	mov	r21,r22
 4023b68:	003f0d06 	br	40237a0 <_gp+0xfffe25a0>
 4023b6c:	8080022c 	andhi	r2,r16,8
 4023b70:	10000926 	beq	r2,zero,4023b98 <__muldf3+0x574>
 4023b74:	8880022c 	andhi	r2,r17,8
 4023b78:	1000071e 	bne	r2,zero,4023b98 <__muldf3+0x574>
 4023b7c:	00800434 	movhi	r2,16
 4023b80:	89400234 	orhi	r5,r17,8
 4023b84:	10bfffc4 	addi	r2,r2,-1
 4023b88:	b82b883a 	mov	r21,r23
 4023b8c:	288a703a 	and	r5,r5,r2
 4023b90:	4029883a 	mov	r20,r8
 4023b94:	003f6806 	br	4023938 <_gp+0xfffe2738>
 4023b98:	00800434 	movhi	r2,16
 4023b9c:	81400234 	orhi	r5,r16,8
 4023ba0:	10bfffc4 	addi	r2,r2,-1
 4023ba4:	288a703a 	and	r5,r5,r2
 4023ba8:	003f6306 	br	4023938 <_gp+0xfffe2738>
 4023bac:	147ff604 	addi	r17,r2,-40
 4023bb0:	3462983a 	sll	r17,r6,r17
 4023bb4:	0011883a 	mov	r8,zero
 4023bb8:	003f4406 	br	40238cc <_gp+0xfffe26cc>
 4023bbc:	3009883a 	mov	r4,r6
 4023bc0:	d9800215 	stw	r6,8(sp)
 4023bc4:	da400115 	stw	r9,4(sp)
 4023bc8:	da800015 	stw	r10,0(sp)
 4023bcc:	4023fc00 	call	4023fc0 <__clzsi2>
 4023bd0:	10800804 	addi	r2,r2,32
 4023bd4:	da800017 	ldw	r10,0(sp)
 4023bd8:	da400117 	ldw	r9,4(sp)
 4023bdc:	d9800217 	ldw	r6,8(sp)
 4023be0:	003f3006 	br	40238a4 <_gp+0xfffe26a4>
 4023be4:	143ff604 	addi	r16,r2,-40
 4023be8:	9c20983a 	sll	r16,r19,r16
 4023bec:	0029883a 	mov	r20,zero
 4023bf0:	003f1606 	br	402384c <_gp+0xfffe264c>
 4023bf4:	d9800215 	stw	r6,8(sp)
 4023bf8:	d9c00015 	stw	r7,0(sp)
 4023bfc:	da400115 	stw	r9,4(sp)
 4023c00:	4023fc00 	call	4023fc0 <__clzsi2>
 4023c04:	10800804 	addi	r2,r2,32
 4023c08:	da400117 	ldw	r9,4(sp)
 4023c0c:	d9c00017 	ldw	r7,0(sp)
 4023c10:	d9800217 	ldw	r6,8(sp)
 4023c14:	003f0306 	br	4023824 <_gp+0xfffe2624>
 4023c18:	00c00044 	movi	r3,1
 4023c1c:	1947c83a 	sub	r3,r3,r5
 4023c20:	00800e04 	movi	r2,56
 4023c24:	10feda16 	blt	r2,r3,4023790 <_gp+0xfffe2590>
 4023c28:	008007c4 	movi	r2,31
 4023c2c:	10c01b16 	blt	r2,r3,4023c9c <__muldf3+0x678>
 4023c30:	00800804 	movi	r2,32
 4023c34:	10c5c83a 	sub	r2,r2,r3
 4023c38:	888a983a 	sll	r5,r17,r2
 4023c3c:	40c8d83a 	srl	r4,r8,r3
 4023c40:	4084983a 	sll	r2,r8,r2
 4023c44:	88e2d83a 	srl	r17,r17,r3
 4023c48:	2906b03a 	or	r3,r5,r4
 4023c4c:	1004c03a 	cmpne	r2,r2,zero
 4023c50:	1886b03a 	or	r3,r3,r2
 4023c54:	188001cc 	andi	r2,r3,7
 4023c58:	10000726 	beq	r2,zero,4023c78 <__muldf3+0x654>
 4023c5c:	188003cc 	andi	r2,r3,15
 4023c60:	01000104 	movi	r4,4
 4023c64:	11000426 	beq	r2,r4,4023c78 <__muldf3+0x654>
 4023c68:	1805883a 	mov	r2,r3
 4023c6c:	10c00104 	addi	r3,r2,4
 4023c70:	1885803a 	cmpltu	r2,r3,r2
 4023c74:	88a3883a 	add	r17,r17,r2
 4023c78:	8880202c 	andhi	r2,r17,128
 4023c7c:	10001c26 	beq	r2,zero,4023cf0 <__muldf3+0x6cc>
 4023c80:	b02b883a 	mov	r21,r22
 4023c84:	00800044 	movi	r2,1
 4023c88:	000b883a 	mov	r5,zero
 4023c8c:	0029883a 	mov	r20,zero
 4023c90:	003ec306 	br	40237a0 <_gp+0xfffe25a0>
 4023c94:	5805883a 	mov	r2,r11
 4023c98:	003f9906 	br	4023b00 <_gp+0xfffe2900>
 4023c9c:	00bff844 	movi	r2,-31
 4023ca0:	1145c83a 	sub	r2,r2,r5
 4023ca4:	8888d83a 	srl	r4,r17,r2
 4023ca8:	00800804 	movi	r2,32
 4023cac:	18801a26 	beq	r3,r2,4023d18 <__muldf3+0x6f4>
 4023cb0:	00801004 	movi	r2,64
 4023cb4:	10c5c83a 	sub	r2,r2,r3
 4023cb8:	8884983a 	sll	r2,r17,r2
 4023cbc:	1204b03a 	or	r2,r2,r8
 4023cc0:	1004c03a 	cmpne	r2,r2,zero
 4023cc4:	2084b03a 	or	r2,r4,r2
 4023cc8:	144001cc 	andi	r17,r2,7
 4023ccc:	88000d1e 	bne	r17,zero,4023d04 <__muldf3+0x6e0>
 4023cd0:	000b883a 	mov	r5,zero
 4023cd4:	1028d0fa 	srli	r20,r2,3
 4023cd8:	b02b883a 	mov	r21,r22
 4023cdc:	0005883a 	mov	r2,zero
 4023ce0:	a468b03a 	or	r20,r20,r17
 4023ce4:	003eae06 	br	40237a0 <_gp+0xfffe25a0>
 4023ce8:	1007883a 	mov	r3,r2
 4023cec:	0023883a 	mov	r17,zero
 4023cf0:	880a927a 	slli	r5,r17,9
 4023cf4:	1805883a 	mov	r2,r3
 4023cf8:	8822977a 	slli	r17,r17,29
 4023cfc:	280ad33a 	srli	r5,r5,12
 4023d00:	003ff406 	br	4023cd4 <_gp+0xfffe2ad4>
 4023d04:	10c003cc 	andi	r3,r2,15
 4023d08:	01000104 	movi	r4,4
 4023d0c:	193ff626 	beq	r3,r4,4023ce8 <_gp+0xfffe2ae8>
 4023d10:	0023883a 	mov	r17,zero
 4023d14:	003fd506 	br	4023c6c <_gp+0xfffe2a6c>
 4023d18:	0005883a 	mov	r2,zero
 4023d1c:	003fe706 	br	4023cbc <_gp+0xfffe2abc>
 4023d20:	00800434 	movhi	r2,16
 4023d24:	89400234 	orhi	r5,r17,8
 4023d28:	10bfffc4 	addi	r2,r2,-1
 4023d2c:	b02b883a 	mov	r21,r22
 4023d30:	288a703a 	and	r5,r5,r2
 4023d34:	4029883a 	mov	r20,r8
 4023d38:	003eff06 	br	4023938 <_gp+0xfffe2738>

04023d3c <__floatsidf>:
 4023d3c:	defffd04 	addi	sp,sp,-12
 4023d40:	dfc00215 	stw	ra,8(sp)
 4023d44:	dc400115 	stw	r17,4(sp)
 4023d48:	dc000015 	stw	r16,0(sp)
 4023d4c:	20002b26 	beq	r4,zero,4023dfc <__floatsidf+0xc0>
 4023d50:	2023883a 	mov	r17,r4
 4023d54:	2020d7fa 	srli	r16,r4,31
 4023d58:	20002d16 	blt	r4,zero,4023e10 <__floatsidf+0xd4>
 4023d5c:	8809883a 	mov	r4,r17
 4023d60:	4023fc00 	call	4023fc0 <__clzsi2>
 4023d64:	01410784 	movi	r5,1054
 4023d68:	288bc83a 	sub	r5,r5,r2
 4023d6c:	01010cc4 	movi	r4,1075
 4023d70:	2149c83a 	sub	r4,r4,r5
 4023d74:	00c007c4 	movi	r3,31
 4023d78:	1900160e 	bge	r3,r4,4023dd4 <__floatsidf+0x98>
 4023d7c:	00c104c4 	movi	r3,1043
 4023d80:	1947c83a 	sub	r3,r3,r5
 4023d84:	88c6983a 	sll	r3,r17,r3
 4023d88:	00800434 	movhi	r2,16
 4023d8c:	10bfffc4 	addi	r2,r2,-1
 4023d90:	1886703a 	and	r3,r3,r2
 4023d94:	2941ffcc 	andi	r5,r5,2047
 4023d98:	800d883a 	mov	r6,r16
 4023d9c:	0005883a 	mov	r2,zero
 4023da0:	280a953a 	slli	r5,r5,20
 4023da4:	31803fcc 	andi	r6,r6,255
 4023da8:	01000434 	movhi	r4,16
 4023dac:	300c97fa 	slli	r6,r6,31
 4023db0:	213fffc4 	addi	r4,r4,-1
 4023db4:	1906703a 	and	r3,r3,r4
 4023db8:	1946b03a 	or	r3,r3,r5
 4023dbc:	1986b03a 	or	r3,r3,r6
 4023dc0:	dfc00217 	ldw	ra,8(sp)
 4023dc4:	dc400117 	ldw	r17,4(sp)
 4023dc8:	dc000017 	ldw	r16,0(sp)
 4023dcc:	dec00304 	addi	sp,sp,12
 4023dd0:	f800283a 	ret
 4023dd4:	00c002c4 	movi	r3,11
 4023dd8:	1887c83a 	sub	r3,r3,r2
 4023ddc:	88c6d83a 	srl	r3,r17,r3
 4023de0:	8904983a 	sll	r2,r17,r4
 4023de4:	01000434 	movhi	r4,16
 4023de8:	213fffc4 	addi	r4,r4,-1
 4023dec:	2941ffcc 	andi	r5,r5,2047
 4023df0:	1906703a 	and	r3,r3,r4
 4023df4:	800d883a 	mov	r6,r16
 4023df8:	003fe906 	br	4023da0 <_gp+0xfffe2ba0>
 4023dfc:	000d883a 	mov	r6,zero
 4023e00:	000b883a 	mov	r5,zero
 4023e04:	0007883a 	mov	r3,zero
 4023e08:	0005883a 	mov	r2,zero
 4023e0c:	003fe406 	br	4023da0 <_gp+0xfffe2ba0>
 4023e10:	0123c83a 	sub	r17,zero,r4
 4023e14:	003fd106 	br	4023d5c <_gp+0xfffe2b5c>

04023e18 <__truncdfsf2>:
 4023e18:	2810d53a 	srli	r8,r5,20
 4023e1c:	01c00434 	movhi	r7,16
 4023e20:	39ffffc4 	addi	r7,r7,-1
 4023e24:	29ce703a 	and	r7,r5,r7
 4023e28:	4201ffcc 	andi	r8,r8,2047
 4023e2c:	380e90fa 	slli	r7,r7,3
 4023e30:	200cd77a 	srli	r6,r4,29
 4023e34:	42400044 	addi	r9,r8,1
 4023e38:	4a41ffcc 	andi	r9,r9,2047
 4023e3c:	00c00044 	movi	r3,1
 4023e40:	280ad7fa 	srli	r5,r5,31
 4023e44:	31ceb03a 	or	r7,r6,r7
 4023e48:	200490fa 	slli	r2,r4,3
 4023e4c:	1a40230e 	bge	r3,r9,4023edc <__truncdfsf2+0xc4>
 4023e50:	40ff2004 	addi	r3,r8,-896
 4023e54:	01803f84 	movi	r6,254
 4023e58:	30c01516 	blt	r6,r3,4023eb0 <__truncdfsf2+0x98>
 4023e5c:	00c0380e 	bge	zero,r3,4023f40 <__truncdfsf2+0x128>
 4023e60:	200c91ba 	slli	r6,r4,6
 4023e64:	380e90fa 	slli	r7,r7,3
 4023e68:	1004d77a 	srli	r2,r2,29
 4023e6c:	300cc03a 	cmpne	r6,r6,zero
 4023e70:	31ccb03a 	or	r6,r6,r7
 4023e74:	308cb03a 	or	r6,r6,r2
 4023e78:	308001cc 	andi	r2,r6,7
 4023e7c:	10000426 	beq	r2,zero,4023e90 <__truncdfsf2+0x78>
 4023e80:	308003cc 	andi	r2,r6,15
 4023e84:	01000104 	movi	r4,4
 4023e88:	11000126 	beq	r2,r4,4023e90 <__truncdfsf2+0x78>
 4023e8c:	31800104 	addi	r6,r6,4
 4023e90:	3081002c 	andhi	r2,r6,1024
 4023e94:	10001626 	beq	r2,zero,4023ef0 <__truncdfsf2+0xd8>
 4023e98:	18c00044 	addi	r3,r3,1
 4023e9c:	00803fc4 	movi	r2,255
 4023ea0:	18800326 	beq	r3,r2,4023eb0 <__truncdfsf2+0x98>
 4023ea4:	300c91ba 	slli	r6,r6,6
 4023ea8:	300cd27a 	srli	r6,r6,9
 4023eac:	00000206 	br	4023eb8 <__truncdfsf2+0xa0>
 4023eb0:	00ffffc4 	movi	r3,-1
 4023eb4:	000d883a 	mov	r6,zero
 4023eb8:	18c03fcc 	andi	r3,r3,255
 4023ebc:	180895fa 	slli	r4,r3,23
 4023ec0:	00c02034 	movhi	r3,128
 4023ec4:	280a97fa 	slli	r5,r5,31
 4023ec8:	18ffffc4 	addi	r3,r3,-1
 4023ecc:	30c6703a 	and	r3,r6,r3
 4023ed0:	1906b03a 	or	r3,r3,r4
 4023ed4:	1944b03a 	or	r2,r3,r5
 4023ed8:	f800283a 	ret
 4023edc:	40000b1e 	bne	r8,zero,4023f0c <__truncdfsf2+0xf4>
 4023ee0:	388cb03a 	or	r6,r7,r2
 4023ee4:	0007883a 	mov	r3,zero
 4023ee8:	30000426 	beq	r6,zero,4023efc <__truncdfsf2+0xe4>
 4023eec:	01800144 	movi	r6,5
 4023ef0:	00803fc4 	movi	r2,255
 4023ef4:	300cd0fa 	srli	r6,r6,3
 4023ef8:	18800a26 	beq	r3,r2,4023f24 <__truncdfsf2+0x10c>
 4023efc:	00802034 	movhi	r2,128
 4023f00:	10bfffc4 	addi	r2,r2,-1
 4023f04:	308c703a 	and	r6,r6,r2
 4023f08:	003feb06 	br	4023eb8 <_gp+0xfffe2cb8>
 4023f0c:	3888b03a 	or	r4,r7,r2
 4023f10:	203fe726 	beq	r4,zero,4023eb0 <_gp+0xfffe2cb0>
 4023f14:	380c90fa 	slli	r6,r7,3
 4023f18:	00c03fc4 	movi	r3,255
 4023f1c:	31808034 	orhi	r6,r6,512
 4023f20:	003fd506 	br	4023e78 <_gp+0xfffe2c78>
 4023f24:	303fe226 	beq	r6,zero,4023eb0 <_gp+0xfffe2cb0>
 4023f28:	00802034 	movhi	r2,128
 4023f2c:	31801034 	orhi	r6,r6,64
 4023f30:	10bfffc4 	addi	r2,r2,-1
 4023f34:	00ffffc4 	movi	r3,-1
 4023f38:	308c703a 	and	r6,r6,r2
 4023f3c:	003fde06 	br	4023eb8 <_gp+0xfffe2cb8>
 4023f40:	013ffa44 	movi	r4,-23
 4023f44:	19000e16 	blt	r3,r4,4023f80 <__truncdfsf2+0x168>
 4023f48:	01000784 	movi	r4,30
 4023f4c:	20c9c83a 	sub	r4,r4,r3
 4023f50:	018007c4 	movi	r6,31
 4023f54:	39c02034 	orhi	r7,r7,128
 4023f58:	31000b16 	blt	r6,r4,4023f88 <__truncdfsf2+0x170>
 4023f5c:	423f2084 	addi	r8,r8,-894
 4023f60:	120c983a 	sll	r6,r2,r8
 4023f64:	3a0e983a 	sll	r7,r7,r8
 4023f68:	1104d83a 	srl	r2,r2,r4
 4023f6c:	300cc03a 	cmpne	r6,r6,zero
 4023f70:	31ceb03a 	or	r7,r6,r7
 4023f74:	388cb03a 	or	r6,r7,r2
 4023f78:	0007883a 	mov	r3,zero
 4023f7c:	003fbe06 	br	4023e78 <_gp+0xfffe2c78>
 4023f80:	0007883a 	mov	r3,zero
 4023f84:	003fd906 	br	4023eec <_gp+0xfffe2cec>
 4023f88:	01bfff84 	movi	r6,-2
 4023f8c:	30cdc83a 	sub	r6,r6,r3
 4023f90:	00c00804 	movi	r3,32
 4023f94:	398cd83a 	srl	r6,r7,r6
 4023f98:	20c00726 	beq	r4,r3,4023fb8 <__truncdfsf2+0x1a0>
 4023f9c:	423f2884 	addi	r8,r8,-862
 4023fa0:	3a0e983a 	sll	r7,r7,r8
 4023fa4:	3884b03a 	or	r2,r7,r2
 4023fa8:	1004c03a 	cmpne	r2,r2,zero
 4023fac:	118cb03a 	or	r6,r2,r6
 4023fb0:	0007883a 	mov	r3,zero
 4023fb4:	003fb006 	br	4023e78 <_gp+0xfffe2c78>
 4023fb8:	000f883a 	mov	r7,zero
 4023fbc:	003ff906 	br	4023fa4 <_gp+0xfffe2da4>

04023fc0 <__clzsi2>:
 4023fc0:	00bfffd4 	movui	r2,65535
 4023fc4:	11000536 	bltu	r2,r4,4023fdc <__clzsi2+0x1c>
 4023fc8:	00803fc4 	movi	r2,255
 4023fcc:	11000f36 	bltu	r2,r4,402400c <__clzsi2+0x4c>
 4023fd0:	00800804 	movi	r2,32
 4023fd4:	0007883a 	mov	r3,zero
 4023fd8:	00000506 	br	4023ff0 <__clzsi2+0x30>
 4023fdc:	00804034 	movhi	r2,256
 4023fe0:	10bfffc4 	addi	r2,r2,-1
 4023fe4:	11000c2e 	bgeu	r2,r4,4024018 <__clzsi2+0x58>
 4023fe8:	00800204 	movi	r2,8
 4023fec:	00c00604 	movi	r3,24
 4023ff0:	20c8d83a 	srl	r4,r4,r3
 4023ff4:	00c100f4 	movhi	r3,1027
 4023ff8:	18dcc684 	addi	r3,r3,29466
 4023ffc:	1909883a 	add	r4,r3,r4
 4024000:	20c00003 	ldbu	r3,0(r4)
 4024004:	10c5c83a 	sub	r2,r2,r3
 4024008:	f800283a 	ret
 402400c:	00800604 	movi	r2,24
 4024010:	00c00204 	movi	r3,8
 4024014:	003ff606 	br	4023ff0 <_gp+0xfffe2df0>
 4024018:	00800404 	movi	r2,16
 402401c:	1007883a 	mov	r3,r2
 4024020:	003ff306 	br	4023ff0 <_gp+0xfffe2df0>

04024024 <_fclose_r>:
 4024024:	28003926 	beq	r5,zero,402410c <_fclose_r+0xe8>
 4024028:	defffc04 	addi	sp,sp,-16
 402402c:	dc400115 	stw	r17,4(sp)
 4024030:	dc000015 	stw	r16,0(sp)
 4024034:	dfc00315 	stw	ra,12(sp)
 4024038:	dc800215 	stw	r18,8(sp)
 402403c:	2023883a 	mov	r17,r4
 4024040:	2821883a 	mov	r16,r5
 4024044:	20000226 	beq	r4,zero,4024050 <_fclose_r+0x2c>
 4024048:	20800e17 	ldw	r2,56(r4)
 402404c:	10002726 	beq	r2,zero,40240ec <_fclose_r+0xc8>
 4024050:	8080030f 	ldh	r2,12(r16)
 4024054:	1000071e 	bne	r2,zero,4024074 <_fclose_r+0x50>
 4024058:	0005883a 	mov	r2,zero
 402405c:	dfc00317 	ldw	ra,12(sp)
 4024060:	dc800217 	ldw	r18,8(sp)
 4024064:	dc400117 	ldw	r17,4(sp)
 4024068:	dc000017 	ldw	r16,0(sp)
 402406c:	dec00404 	addi	sp,sp,16
 4024070:	f800283a 	ret
 4024074:	800b883a 	mov	r5,r16
 4024078:	8809883a 	mov	r4,r17
 402407c:	40241280 	call	4024128 <__sflush_r>
 4024080:	1025883a 	mov	r18,r2
 4024084:	80800b17 	ldw	r2,44(r16)
 4024088:	10000426 	beq	r2,zero,402409c <_fclose_r+0x78>
 402408c:	81400717 	ldw	r5,28(r16)
 4024090:	8809883a 	mov	r4,r17
 4024094:	103ee83a 	callr	r2
 4024098:	10001616 	blt	r2,zero,40240f4 <_fclose_r+0xd0>
 402409c:	8080030b 	ldhu	r2,12(r16)
 40240a0:	1080200c 	andi	r2,r2,128
 40240a4:	1000151e 	bne	r2,zero,40240fc <_fclose_r+0xd8>
 40240a8:	81400c17 	ldw	r5,48(r16)
 40240ac:	28000526 	beq	r5,zero,40240c4 <_fclose_r+0xa0>
 40240b0:	80801004 	addi	r2,r16,64
 40240b4:	28800226 	beq	r5,r2,40240c0 <_fclose_r+0x9c>
 40240b8:	8809883a 	mov	r4,r17
 40240bc:	40249ec0 	call	40249ec <_free_r>
 40240c0:	80000c15 	stw	zero,48(r16)
 40240c4:	81401117 	ldw	r5,68(r16)
 40240c8:	28000326 	beq	r5,zero,40240d8 <_fclose_r+0xb4>
 40240cc:	8809883a 	mov	r4,r17
 40240d0:	40249ec0 	call	40249ec <_free_r>
 40240d4:	80001115 	stw	zero,68(r16)
 40240d8:	40247300 	call	4024730 <__sfp_lock_acquire>
 40240dc:	8000030d 	sth	zero,12(r16)
 40240e0:	40247340 	call	4024734 <__sfp_lock_release>
 40240e4:	9005883a 	mov	r2,r18
 40240e8:	003fdc06 	br	402405c <_gp+0xfffe2e5c>
 40240ec:	40247200 	call	4024720 <__sinit>
 40240f0:	003fd706 	br	4024050 <_gp+0xfffe2e50>
 40240f4:	04bfffc4 	movi	r18,-1
 40240f8:	003fe806 	br	402409c <_gp+0xfffe2e9c>
 40240fc:	81400417 	ldw	r5,16(r16)
 4024100:	8809883a 	mov	r4,r17
 4024104:	40249ec0 	call	40249ec <_free_r>
 4024108:	003fe706 	br	40240a8 <_gp+0xfffe2ea8>
 402410c:	0005883a 	mov	r2,zero
 4024110:	f800283a 	ret

04024114 <fclose>:
 4024114:	00810134 	movhi	r2,1028
 4024118:	10a48104 	addi	r2,r2,-28156
 402411c:	200b883a 	mov	r5,r4
 4024120:	11000017 	ldw	r4,0(r2)
 4024124:	40240241 	jmpi	4024024 <_fclose_r>

04024128 <__sflush_r>:
 4024128:	2880030b 	ldhu	r2,12(r5)
 402412c:	defffb04 	addi	sp,sp,-20
 4024130:	dcc00315 	stw	r19,12(sp)
 4024134:	dc400115 	stw	r17,4(sp)
 4024138:	dfc00415 	stw	ra,16(sp)
 402413c:	dc800215 	stw	r18,8(sp)
 4024140:	dc000015 	stw	r16,0(sp)
 4024144:	10c0020c 	andi	r3,r2,8
 4024148:	2823883a 	mov	r17,r5
 402414c:	2027883a 	mov	r19,r4
 4024150:	1800311e 	bne	r3,zero,4024218 <__sflush_r+0xf0>
 4024154:	28c00117 	ldw	r3,4(r5)
 4024158:	10820014 	ori	r2,r2,2048
 402415c:	2880030d 	sth	r2,12(r5)
 4024160:	00c04b0e 	bge	zero,r3,4024290 <__sflush_r+0x168>
 4024164:	8a000a17 	ldw	r8,40(r17)
 4024168:	40002326 	beq	r8,zero,40241f8 <__sflush_r+0xd0>
 402416c:	9c000017 	ldw	r16,0(r19)
 4024170:	10c4000c 	andi	r3,r2,4096
 4024174:	98000015 	stw	zero,0(r19)
 4024178:	18004826 	beq	r3,zero,402429c <__sflush_r+0x174>
 402417c:	89801417 	ldw	r6,80(r17)
 4024180:	10c0010c 	andi	r3,r2,4
 4024184:	18000626 	beq	r3,zero,40241a0 <__sflush_r+0x78>
 4024188:	88c00117 	ldw	r3,4(r17)
 402418c:	88800c17 	ldw	r2,48(r17)
 4024190:	30cdc83a 	sub	r6,r6,r3
 4024194:	10000226 	beq	r2,zero,40241a0 <__sflush_r+0x78>
 4024198:	88800f17 	ldw	r2,60(r17)
 402419c:	308dc83a 	sub	r6,r6,r2
 40241a0:	89400717 	ldw	r5,28(r17)
 40241a4:	000f883a 	mov	r7,zero
 40241a8:	9809883a 	mov	r4,r19
 40241ac:	403ee83a 	callr	r8
 40241b0:	00ffffc4 	movi	r3,-1
 40241b4:	10c04426 	beq	r2,r3,40242c8 <__sflush_r+0x1a0>
 40241b8:	88c0030b 	ldhu	r3,12(r17)
 40241bc:	89000417 	ldw	r4,16(r17)
 40241c0:	88000115 	stw	zero,4(r17)
 40241c4:	197dffcc 	andi	r5,r3,63487
 40241c8:	8940030d 	sth	r5,12(r17)
 40241cc:	89000015 	stw	r4,0(r17)
 40241d0:	18c4000c 	andi	r3,r3,4096
 40241d4:	18002c1e 	bne	r3,zero,4024288 <__sflush_r+0x160>
 40241d8:	89400c17 	ldw	r5,48(r17)
 40241dc:	9c000015 	stw	r16,0(r19)
 40241e0:	28000526 	beq	r5,zero,40241f8 <__sflush_r+0xd0>
 40241e4:	88801004 	addi	r2,r17,64
 40241e8:	28800226 	beq	r5,r2,40241f4 <__sflush_r+0xcc>
 40241ec:	9809883a 	mov	r4,r19
 40241f0:	40249ec0 	call	40249ec <_free_r>
 40241f4:	88000c15 	stw	zero,48(r17)
 40241f8:	0005883a 	mov	r2,zero
 40241fc:	dfc00417 	ldw	ra,16(sp)
 4024200:	dcc00317 	ldw	r19,12(sp)
 4024204:	dc800217 	ldw	r18,8(sp)
 4024208:	dc400117 	ldw	r17,4(sp)
 402420c:	dc000017 	ldw	r16,0(sp)
 4024210:	dec00504 	addi	sp,sp,20
 4024214:	f800283a 	ret
 4024218:	2c800417 	ldw	r18,16(r5)
 402421c:	903ff626 	beq	r18,zero,40241f8 <_gp+0xfffe2ff8>
 4024220:	2c000017 	ldw	r16,0(r5)
 4024224:	108000cc 	andi	r2,r2,3
 4024228:	2c800015 	stw	r18,0(r5)
 402422c:	84a1c83a 	sub	r16,r16,r18
 4024230:	1000131e 	bne	r2,zero,4024280 <__sflush_r+0x158>
 4024234:	28800517 	ldw	r2,20(r5)
 4024238:	88800215 	stw	r2,8(r17)
 402423c:	04000316 	blt	zero,r16,402424c <__sflush_r+0x124>
 4024240:	003fed06 	br	40241f8 <_gp+0xfffe2ff8>
 4024244:	90a5883a 	add	r18,r18,r2
 4024248:	043feb0e 	bge	zero,r16,40241f8 <_gp+0xfffe2ff8>
 402424c:	88800917 	ldw	r2,36(r17)
 4024250:	89400717 	ldw	r5,28(r17)
 4024254:	800f883a 	mov	r7,r16
 4024258:	900d883a 	mov	r6,r18
 402425c:	9809883a 	mov	r4,r19
 4024260:	103ee83a 	callr	r2
 4024264:	80a1c83a 	sub	r16,r16,r2
 4024268:	00bff616 	blt	zero,r2,4024244 <_gp+0xfffe3044>
 402426c:	88c0030b 	ldhu	r3,12(r17)
 4024270:	00bfffc4 	movi	r2,-1
 4024274:	18c01014 	ori	r3,r3,64
 4024278:	88c0030d 	sth	r3,12(r17)
 402427c:	003fdf06 	br	40241fc <_gp+0xfffe2ffc>
 4024280:	0005883a 	mov	r2,zero
 4024284:	003fec06 	br	4024238 <_gp+0xfffe3038>
 4024288:	88801415 	stw	r2,80(r17)
 402428c:	003fd206 	br	40241d8 <_gp+0xfffe2fd8>
 4024290:	28c00f17 	ldw	r3,60(r5)
 4024294:	00ffb316 	blt	zero,r3,4024164 <_gp+0xfffe2f64>
 4024298:	003fd706 	br	40241f8 <_gp+0xfffe2ff8>
 402429c:	89400717 	ldw	r5,28(r17)
 40242a0:	000d883a 	mov	r6,zero
 40242a4:	01c00044 	movi	r7,1
 40242a8:	9809883a 	mov	r4,r19
 40242ac:	403ee83a 	callr	r8
 40242b0:	100d883a 	mov	r6,r2
 40242b4:	00bfffc4 	movi	r2,-1
 40242b8:	30801426 	beq	r6,r2,402430c <__sflush_r+0x1e4>
 40242bc:	8880030b 	ldhu	r2,12(r17)
 40242c0:	8a000a17 	ldw	r8,40(r17)
 40242c4:	003fae06 	br	4024180 <_gp+0xfffe2f80>
 40242c8:	98c00017 	ldw	r3,0(r19)
 40242cc:	183fba26 	beq	r3,zero,40241b8 <_gp+0xfffe2fb8>
 40242d0:	01000744 	movi	r4,29
 40242d4:	19000626 	beq	r3,r4,40242f0 <__sflush_r+0x1c8>
 40242d8:	01000584 	movi	r4,22
 40242dc:	19000426 	beq	r3,r4,40242f0 <__sflush_r+0x1c8>
 40242e0:	88c0030b 	ldhu	r3,12(r17)
 40242e4:	18c01014 	ori	r3,r3,64
 40242e8:	88c0030d 	sth	r3,12(r17)
 40242ec:	003fc306 	br	40241fc <_gp+0xfffe2ffc>
 40242f0:	8880030b 	ldhu	r2,12(r17)
 40242f4:	88c00417 	ldw	r3,16(r17)
 40242f8:	88000115 	stw	zero,4(r17)
 40242fc:	10bdffcc 	andi	r2,r2,63487
 4024300:	8880030d 	sth	r2,12(r17)
 4024304:	88c00015 	stw	r3,0(r17)
 4024308:	003fb306 	br	40241d8 <_gp+0xfffe2fd8>
 402430c:	98800017 	ldw	r2,0(r19)
 4024310:	103fea26 	beq	r2,zero,40242bc <_gp+0xfffe30bc>
 4024314:	00c00744 	movi	r3,29
 4024318:	10c00226 	beq	r2,r3,4024324 <__sflush_r+0x1fc>
 402431c:	00c00584 	movi	r3,22
 4024320:	10c0031e 	bne	r2,r3,4024330 <__sflush_r+0x208>
 4024324:	9c000015 	stw	r16,0(r19)
 4024328:	0005883a 	mov	r2,zero
 402432c:	003fb306 	br	40241fc <_gp+0xfffe2ffc>
 4024330:	88c0030b 	ldhu	r3,12(r17)
 4024334:	3005883a 	mov	r2,r6
 4024338:	18c01014 	ori	r3,r3,64
 402433c:	88c0030d 	sth	r3,12(r17)
 4024340:	003fae06 	br	40241fc <_gp+0xfffe2ffc>

04024344 <_fflush_r>:
 4024344:	defffd04 	addi	sp,sp,-12
 4024348:	dc000115 	stw	r16,4(sp)
 402434c:	dfc00215 	stw	ra,8(sp)
 4024350:	2021883a 	mov	r16,r4
 4024354:	20000226 	beq	r4,zero,4024360 <_fflush_r+0x1c>
 4024358:	20800e17 	ldw	r2,56(r4)
 402435c:	10000c26 	beq	r2,zero,4024390 <_fflush_r+0x4c>
 4024360:	2880030f 	ldh	r2,12(r5)
 4024364:	1000051e 	bne	r2,zero,402437c <_fflush_r+0x38>
 4024368:	0005883a 	mov	r2,zero
 402436c:	dfc00217 	ldw	ra,8(sp)
 4024370:	dc000117 	ldw	r16,4(sp)
 4024374:	dec00304 	addi	sp,sp,12
 4024378:	f800283a 	ret
 402437c:	8009883a 	mov	r4,r16
 4024380:	dfc00217 	ldw	ra,8(sp)
 4024384:	dc000117 	ldw	r16,4(sp)
 4024388:	dec00304 	addi	sp,sp,12
 402438c:	40241281 	jmpi	4024128 <__sflush_r>
 4024390:	d9400015 	stw	r5,0(sp)
 4024394:	40247200 	call	4024720 <__sinit>
 4024398:	d9400017 	ldw	r5,0(sp)
 402439c:	003ff006 	br	4024360 <_gp+0xfffe3160>

040243a0 <fflush>:
 40243a0:	20000526 	beq	r4,zero,40243b8 <fflush+0x18>
 40243a4:	00810134 	movhi	r2,1028
 40243a8:	10a48104 	addi	r2,r2,-28156
 40243ac:	200b883a 	mov	r5,r4
 40243b0:	11000017 	ldw	r4,0(r2)
 40243b4:	40243441 	jmpi	4024344 <_fflush_r>
 40243b8:	00810134 	movhi	r2,1028
 40243bc:	10a48004 	addi	r2,r2,-28160
 40243c0:	11000017 	ldw	r4,0(r2)
 40243c4:	014100b4 	movhi	r5,1026
 40243c8:	2950d104 	addi	r5,r5,17220
 40243cc:	402529c1 	jmpi	402529c <_fwalk_reent>

040243d0 <__fp_unlock>:
 40243d0:	0005883a 	mov	r2,zero
 40243d4:	f800283a 	ret

040243d8 <_cleanup_r>:
 40243d8:	014100b4 	movhi	r5,1026
 40243dc:	29500904 	addi	r5,r5,16420
 40243e0:	402529c1 	jmpi	402529c <_fwalk_reent>

040243e4 <__sinit.part.1>:
 40243e4:	defff704 	addi	sp,sp,-36
 40243e8:	00c100b4 	movhi	r3,1026
 40243ec:	dfc00815 	stw	ra,32(sp)
 40243f0:	ddc00715 	stw	r23,28(sp)
 40243f4:	dd800615 	stw	r22,24(sp)
 40243f8:	dd400515 	stw	r21,20(sp)
 40243fc:	dd000415 	stw	r20,16(sp)
 4024400:	dcc00315 	stw	r19,12(sp)
 4024404:	dc800215 	stw	r18,8(sp)
 4024408:	dc400115 	stw	r17,4(sp)
 402440c:	dc000015 	stw	r16,0(sp)
 4024410:	18d0f604 	addi	r3,r3,17368
 4024414:	24000117 	ldw	r16,4(r4)
 4024418:	20c00f15 	stw	r3,60(r4)
 402441c:	2080bb04 	addi	r2,r4,748
 4024420:	00c000c4 	movi	r3,3
 4024424:	20c0b915 	stw	r3,740(r4)
 4024428:	2080ba15 	stw	r2,744(r4)
 402442c:	2000b815 	stw	zero,736(r4)
 4024430:	05c00204 	movi	r23,8
 4024434:	00800104 	movi	r2,4
 4024438:	2025883a 	mov	r18,r4
 402443c:	b80d883a 	mov	r6,r23
 4024440:	81001704 	addi	r4,r16,92
 4024444:	000b883a 	mov	r5,zero
 4024448:	80000015 	stw	zero,0(r16)
 402444c:	80000115 	stw	zero,4(r16)
 4024450:	80000215 	stw	zero,8(r16)
 4024454:	8080030d 	sth	r2,12(r16)
 4024458:	80001915 	stw	zero,100(r16)
 402445c:	8000038d 	sth	zero,14(r16)
 4024460:	80000415 	stw	zero,16(r16)
 4024464:	80000515 	stw	zero,20(r16)
 4024468:	80000615 	stw	zero,24(r16)
 402446c:	4025e280 	call	4025e28 <memset>
 4024470:	058100b4 	movhi	r22,1026
 4024474:	94400217 	ldw	r17,8(r18)
 4024478:	054100b4 	movhi	r21,1026
 402447c:	050100b4 	movhi	r20,1026
 4024480:	04c100b4 	movhi	r19,1026
 4024484:	b598fe04 	addi	r22,r22,25592
 4024488:	ad591504 	addi	r21,r21,25684
 402448c:	a5193404 	addi	r20,r20,25808
 4024490:	9cd94b04 	addi	r19,r19,25900
 4024494:	85800815 	stw	r22,32(r16)
 4024498:	85400915 	stw	r21,36(r16)
 402449c:	85000a15 	stw	r20,40(r16)
 40244a0:	84c00b15 	stw	r19,44(r16)
 40244a4:	84000715 	stw	r16,28(r16)
 40244a8:	00800284 	movi	r2,10
 40244ac:	8880030d 	sth	r2,12(r17)
 40244b0:	00800044 	movi	r2,1
 40244b4:	b80d883a 	mov	r6,r23
 40244b8:	89001704 	addi	r4,r17,92
 40244bc:	000b883a 	mov	r5,zero
 40244c0:	88000015 	stw	zero,0(r17)
 40244c4:	88000115 	stw	zero,4(r17)
 40244c8:	88000215 	stw	zero,8(r17)
 40244cc:	88001915 	stw	zero,100(r17)
 40244d0:	8880038d 	sth	r2,14(r17)
 40244d4:	88000415 	stw	zero,16(r17)
 40244d8:	88000515 	stw	zero,20(r17)
 40244dc:	88000615 	stw	zero,24(r17)
 40244e0:	4025e280 	call	4025e28 <memset>
 40244e4:	94000317 	ldw	r16,12(r18)
 40244e8:	00800484 	movi	r2,18
 40244ec:	8c400715 	stw	r17,28(r17)
 40244f0:	8d800815 	stw	r22,32(r17)
 40244f4:	8d400915 	stw	r21,36(r17)
 40244f8:	8d000a15 	stw	r20,40(r17)
 40244fc:	8cc00b15 	stw	r19,44(r17)
 4024500:	8080030d 	sth	r2,12(r16)
 4024504:	00800084 	movi	r2,2
 4024508:	80000015 	stw	zero,0(r16)
 402450c:	80000115 	stw	zero,4(r16)
 4024510:	80000215 	stw	zero,8(r16)
 4024514:	80001915 	stw	zero,100(r16)
 4024518:	8080038d 	sth	r2,14(r16)
 402451c:	80000415 	stw	zero,16(r16)
 4024520:	80000515 	stw	zero,20(r16)
 4024524:	80000615 	stw	zero,24(r16)
 4024528:	b80d883a 	mov	r6,r23
 402452c:	000b883a 	mov	r5,zero
 4024530:	81001704 	addi	r4,r16,92
 4024534:	4025e280 	call	4025e28 <memset>
 4024538:	00800044 	movi	r2,1
 402453c:	84000715 	stw	r16,28(r16)
 4024540:	85800815 	stw	r22,32(r16)
 4024544:	85400915 	stw	r21,36(r16)
 4024548:	85000a15 	stw	r20,40(r16)
 402454c:	84c00b15 	stw	r19,44(r16)
 4024550:	90800e15 	stw	r2,56(r18)
 4024554:	dfc00817 	ldw	ra,32(sp)
 4024558:	ddc00717 	ldw	r23,28(sp)
 402455c:	dd800617 	ldw	r22,24(sp)
 4024560:	dd400517 	ldw	r21,20(sp)
 4024564:	dd000417 	ldw	r20,16(sp)
 4024568:	dcc00317 	ldw	r19,12(sp)
 402456c:	dc800217 	ldw	r18,8(sp)
 4024570:	dc400117 	ldw	r17,4(sp)
 4024574:	dc000017 	ldw	r16,0(sp)
 4024578:	dec00904 	addi	sp,sp,36
 402457c:	f800283a 	ret

04024580 <__fp_lock>:
 4024580:	0005883a 	mov	r2,zero
 4024584:	f800283a 	ret

04024588 <__sfmoreglue>:
 4024588:	defffc04 	addi	sp,sp,-16
 402458c:	dc400115 	stw	r17,4(sp)
 4024590:	2c7fffc4 	addi	r17,r5,-1
 4024594:	8c401a24 	muli	r17,r17,104
 4024598:	dc800215 	stw	r18,8(sp)
 402459c:	2825883a 	mov	r18,r5
 40245a0:	89401d04 	addi	r5,r17,116
 40245a4:	dc000015 	stw	r16,0(sp)
 40245a8:	dfc00315 	stw	ra,12(sp)
 40245ac:	402561c0 	call	402561c <_malloc_r>
 40245b0:	1021883a 	mov	r16,r2
 40245b4:	10000726 	beq	r2,zero,40245d4 <__sfmoreglue+0x4c>
 40245b8:	11000304 	addi	r4,r2,12
 40245bc:	10000015 	stw	zero,0(r2)
 40245c0:	14800115 	stw	r18,4(r2)
 40245c4:	11000215 	stw	r4,8(r2)
 40245c8:	89801a04 	addi	r6,r17,104
 40245cc:	000b883a 	mov	r5,zero
 40245d0:	4025e280 	call	4025e28 <memset>
 40245d4:	8005883a 	mov	r2,r16
 40245d8:	dfc00317 	ldw	ra,12(sp)
 40245dc:	dc800217 	ldw	r18,8(sp)
 40245e0:	dc400117 	ldw	r17,4(sp)
 40245e4:	dc000017 	ldw	r16,0(sp)
 40245e8:	dec00404 	addi	sp,sp,16
 40245ec:	f800283a 	ret

040245f0 <__sfp>:
 40245f0:	defffb04 	addi	sp,sp,-20
 40245f4:	dc000015 	stw	r16,0(sp)
 40245f8:	04010134 	movhi	r16,1028
 40245fc:	84248004 	addi	r16,r16,-28160
 4024600:	dcc00315 	stw	r19,12(sp)
 4024604:	2027883a 	mov	r19,r4
 4024608:	81000017 	ldw	r4,0(r16)
 402460c:	dfc00415 	stw	ra,16(sp)
 4024610:	dc800215 	stw	r18,8(sp)
 4024614:	20800e17 	ldw	r2,56(r4)
 4024618:	dc400115 	stw	r17,4(sp)
 402461c:	1000021e 	bne	r2,zero,4024628 <__sfp+0x38>
 4024620:	40243e40 	call	40243e4 <__sinit.part.1>
 4024624:	81000017 	ldw	r4,0(r16)
 4024628:	2480b804 	addi	r18,r4,736
 402462c:	047fffc4 	movi	r17,-1
 4024630:	91000117 	ldw	r4,4(r18)
 4024634:	94000217 	ldw	r16,8(r18)
 4024638:	213fffc4 	addi	r4,r4,-1
 402463c:	20000a16 	blt	r4,zero,4024668 <__sfp+0x78>
 4024640:	8080030f 	ldh	r2,12(r16)
 4024644:	10000c26 	beq	r2,zero,4024678 <__sfp+0x88>
 4024648:	80c01d04 	addi	r3,r16,116
 402464c:	00000206 	br	4024658 <__sfp+0x68>
 4024650:	18bfe60f 	ldh	r2,-104(r3)
 4024654:	10000826 	beq	r2,zero,4024678 <__sfp+0x88>
 4024658:	213fffc4 	addi	r4,r4,-1
 402465c:	1c3ffd04 	addi	r16,r3,-12
 4024660:	18c01a04 	addi	r3,r3,104
 4024664:	247ffa1e 	bne	r4,r17,4024650 <_gp+0xfffe3450>
 4024668:	90800017 	ldw	r2,0(r18)
 402466c:	10001d26 	beq	r2,zero,40246e4 <__sfp+0xf4>
 4024670:	1025883a 	mov	r18,r2
 4024674:	003fee06 	br	4024630 <_gp+0xfffe3430>
 4024678:	00bfffc4 	movi	r2,-1
 402467c:	8080038d 	sth	r2,14(r16)
 4024680:	00800044 	movi	r2,1
 4024684:	8080030d 	sth	r2,12(r16)
 4024688:	80001915 	stw	zero,100(r16)
 402468c:	80000015 	stw	zero,0(r16)
 4024690:	80000215 	stw	zero,8(r16)
 4024694:	80000115 	stw	zero,4(r16)
 4024698:	80000415 	stw	zero,16(r16)
 402469c:	80000515 	stw	zero,20(r16)
 40246a0:	80000615 	stw	zero,24(r16)
 40246a4:	01800204 	movi	r6,8
 40246a8:	000b883a 	mov	r5,zero
 40246ac:	81001704 	addi	r4,r16,92
 40246b0:	4025e280 	call	4025e28 <memset>
 40246b4:	8005883a 	mov	r2,r16
 40246b8:	80000c15 	stw	zero,48(r16)
 40246bc:	80000d15 	stw	zero,52(r16)
 40246c0:	80001115 	stw	zero,68(r16)
 40246c4:	80001215 	stw	zero,72(r16)
 40246c8:	dfc00417 	ldw	ra,16(sp)
 40246cc:	dcc00317 	ldw	r19,12(sp)
 40246d0:	dc800217 	ldw	r18,8(sp)
 40246d4:	dc400117 	ldw	r17,4(sp)
 40246d8:	dc000017 	ldw	r16,0(sp)
 40246dc:	dec00504 	addi	sp,sp,20
 40246e0:	f800283a 	ret
 40246e4:	01400104 	movi	r5,4
 40246e8:	9809883a 	mov	r4,r19
 40246ec:	40245880 	call	4024588 <__sfmoreglue>
 40246f0:	90800015 	stw	r2,0(r18)
 40246f4:	103fde1e 	bne	r2,zero,4024670 <_gp+0xfffe3470>
 40246f8:	00800304 	movi	r2,12
 40246fc:	98800015 	stw	r2,0(r19)
 4024700:	0005883a 	mov	r2,zero
 4024704:	003ff006 	br	40246c8 <_gp+0xfffe34c8>

04024708 <_cleanup>:
 4024708:	00810134 	movhi	r2,1028
 402470c:	10a48004 	addi	r2,r2,-28160
 4024710:	11000017 	ldw	r4,0(r2)
 4024714:	014100b4 	movhi	r5,1026
 4024718:	29500904 	addi	r5,r5,16420
 402471c:	402529c1 	jmpi	402529c <_fwalk_reent>

04024720 <__sinit>:
 4024720:	20800e17 	ldw	r2,56(r4)
 4024724:	10000126 	beq	r2,zero,402472c <__sinit+0xc>
 4024728:	f800283a 	ret
 402472c:	40243e41 	jmpi	40243e4 <__sinit.part.1>

04024730 <__sfp_lock_acquire>:
 4024730:	f800283a 	ret

04024734 <__sfp_lock_release>:
 4024734:	f800283a 	ret

04024738 <__sinit_lock_acquire>:
 4024738:	f800283a 	ret

0402473c <__sinit_lock_release>:
 402473c:	f800283a 	ret

04024740 <__fp_lock_all>:
 4024740:	00810134 	movhi	r2,1028
 4024744:	10a48104 	addi	r2,r2,-28156
 4024748:	11000017 	ldw	r4,0(r2)
 402474c:	014100b4 	movhi	r5,1026
 4024750:	29516004 	addi	r5,r5,17792
 4024754:	40251d81 	jmpi	40251d8 <_fwalk>

04024758 <__fp_unlock_all>:
 4024758:	00810134 	movhi	r2,1028
 402475c:	10a48104 	addi	r2,r2,-28156
 4024760:	11000017 	ldw	r4,0(r2)
 4024764:	014100b4 	movhi	r5,1026
 4024768:	2950f404 	addi	r5,r5,17360
 402476c:	40251d81 	jmpi	40251d8 <_fwalk>

04024770 <_fopen_r>:
 4024770:	defffa04 	addi	sp,sp,-24
 4024774:	3005883a 	mov	r2,r6
 4024778:	dcc00415 	stw	r19,16(sp)
 402477c:	d80d883a 	mov	r6,sp
 4024780:	2827883a 	mov	r19,r5
 4024784:	100b883a 	mov	r5,r2
 4024788:	dc800315 	stw	r18,12(sp)
 402478c:	dfc00515 	stw	ra,20(sp)
 4024790:	dc400215 	stw	r17,8(sp)
 4024794:	dc000115 	stw	r16,4(sp)
 4024798:	2025883a 	mov	r18,r4
 402479c:	402c5040 	call	402c504 <__sflags>
 40247a0:	10002726 	beq	r2,zero,4024840 <_fopen_r+0xd0>
 40247a4:	9009883a 	mov	r4,r18
 40247a8:	1023883a 	mov	r17,r2
 40247ac:	40245f00 	call	40245f0 <__sfp>
 40247b0:	1021883a 	mov	r16,r2
 40247b4:	10002226 	beq	r2,zero,4024840 <_fopen_r+0xd0>
 40247b8:	d9800017 	ldw	r6,0(sp)
 40247bc:	01c06d84 	movi	r7,438
 40247c0:	980b883a 	mov	r5,r19
 40247c4:	9009883a 	mov	r4,r18
 40247c8:	4025f500 	call	4025f50 <_open_r>
 40247cc:	10001916 	blt	r2,zero,4024834 <_fopen_r+0xc4>
 40247d0:	8080038d 	sth	r2,14(r16)
 40247d4:	008100b4 	movhi	r2,1026
 40247d8:	1098fe04 	addi	r2,r2,25592
 40247dc:	80800815 	stw	r2,32(r16)
 40247e0:	008100b4 	movhi	r2,1026
 40247e4:	10991504 	addi	r2,r2,25684
 40247e8:	80800915 	stw	r2,36(r16)
 40247ec:	008100b4 	movhi	r2,1026
 40247f0:	10993404 	addi	r2,r2,25808
 40247f4:	80800a15 	stw	r2,40(r16)
 40247f8:	008100b4 	movhi	r2,1026
 40247fc:	10994b04 	addi	r2,r2,25900
 4024800:	8440030d 	sth	r17,12(r16)
 4024804:	84000715 	stw	r16,28(r16)
 4024808:	80800b15 	stw	r2,44(r16)
 402480c:	8c40400c 	andi	r17,r17,256
 4024810:	88000d1e 	bne	r17,zero,4024848 <_fopen_r+0xd8>
 4024814:	8005883a 	mov	r2,r16
 4024818:	dfc00517 	ldw	ra,20(sp)
 402481c:	dcc00417 	ldw	r19,16(sp)
 4024820:	dc800317 	ldw	r18,12(sp)
 4024824:	dc400217 	ldw	r17,8(sp)
 4024828:	dc000117 	ldw	r16,4(sp)
 402482c:	dec00604 	addi	sp,sp,24
 4024830:	f800283a 	ret
 4024834:	40247300 	call	4024730 <__sfp_lock_acquire>
 4024838:	8000030d 	sth	zero,12(r16)
 402483c:	40247340 	call	4024734 <__sfp_lock_release>
 4024840:	0005883a 	mov	r2,zero
 4024844:	003ff406 	br	4024818 <_gp+0xfffe3618>
 4024848:	01c00084 	movi	r7,2
 402484c:	000d883a 	mov	r6,zero
 4024850:	800b883a 	mov	r5,r16
 4024854:	9009883a 	mov	r4,r18
 4024858:	4024cfc0 	call	4024cfc <_fseek_r>
 402485c:	8005883a 	mov	r2,r16
 4024860:	003fed06 	br	4024818 <_gp+0xfffe3618>

04024864 <fopen>:
 4024864:	00810134 	movhi	r2,1028
 4024868:	10a48104 	addi	r2,r2,-28156
 402486c:	280d883a 	mov	r6,r5
 4024870:	200b883a 	mov	r5,r4
 4024874:	11000017 	ldw	r4,0(r2)
 4024878:	40247701 	jmpi	4024770 <_fopen_r>

0402487c <_fprintf_r>:
 402487c:	defffe04 	addi	sp,sp,-8
 4024880:	2809883a 	mov	r4,r5
 4024884:	300b883a 	mov	r5,r6
 4024888:	dfc00015 	stw	ra,0(sp)
 402488c:	d9c00115 	stw	r7,4(sp)
 4024890:	d9800104 	addi	r6,sp,4
 4024894:	402a99c0 	call	402a99c <__vfprintf_internal>
 4024898:	dfc00017 	ldw	ra,0(sp)
 402489c:	dec00204 	addi	sp,sp,8
 40248a0:	f800283a 	ret

040248a4 <fprintf>:
 40248a4:	defffd04 	addi	sp,sp,-12
 40248a8:	dfc00015 	stw	ra,0(sp)
 40248ac:	d9800115 	stw	r6,4(sp)
 40248b0:	d9c00215 	stw	r7,8(sp)
 40248b4:	d9800104 	addi	r6,sp,4
 40248b8:	402a99c0 	call	402a99c <__vfprintf_internal>
 40248bc:	dfc00017 	ldw	ra,0(sp)
 40248c0:	dec00304 	addi	sp,sp,12
 40248c4:	f800283a 	ret

040248c8 <_malloc_trim_r>:
 40248c8:	defffb04 	addi	sp,sp,-20
 40248cc:	dcc00315 	stw	r19,12(sp)
 40248d0:	04c100f4 	movhi	r19,1027
 40248d4:	dc800215 	stw	r18,8(sp)
 40248d8:	dc400115 	stw	r17,4(sp)
 40248dc:	dc000015 	stw	r16,0(sp)
 40248e0:	dfc00415 	stw	ra,16(sp)
 40248e4:	2821883a 	mov	r16,r5
 40248e8:	9cdede04 	addi	r19,r19,31608
 40248ec:	2025883a 	mov	r18,r4
 40248f0:	40345300 	call	4034530 <__malloc_lock>
 40248f4:	98800217 	ldw	r2,8(r19)
 40248f8:	14400117 	ldw	r17,4(r2)
 40248fc:	00bfff04 	movi	r2,-4
 4024900:	88a2703a 	and	r17,r17,r2
 4024904:	8c21c83a 	sub	r16,r17,r16
 4024908:	8403fbc4 	addi	r16,r16,4079
 402490c:	8020d33a 	srli	r16,r16,12
 4024910:	0083ffc4 	movi	r2,4095
 4024914:	843fffc4 	addi	r16,r16,-1
 4024918:	8020933a 	slli	r16,r16,12
 402491c:	1400060e 	bge	r2,r16,4024938 <_malloc_trim_r+0x70>
 4024920:	000b883a 	mov	r5,zero
 4024924:	9009883a 	mov	r4,r18
 4024928:	40262e00 	call	40262e0 <_sbrk_r>
 402492c:	98c00217 	ldw	r3,8(r19)
 4024930:	1c47883a 	add	r3,r3,r17
 4024934:	10c00a26 	beq	r2,r3,4024960 <_malloc_trim_r+0x98>
 4024938:	9009883a 	mov	r4,r18
 402493c:	40345540 	call	4034554 <__malloc_unlock>
 4024940:	0005883a 	mov	r2,zero
 4024944:	dfc00417 	ldw	ra,16(sp)
 4024948:	dcc00317 	ldw	r19,12(sp)
 402494c:	dc800217 	ldw	r18,8(sp)
 4024950:	dc400117 	ldw	r17,4(sp)
 4024954:	dc000017 	ldw	r16,0(sp)
 4024958:	dec00504 	addi	sp,sp,20
 402495c:	f800283a 	ret
 4024960:	040bc83a 	sub	r5,zero,r16
 4024964:	9009883a 	mov	r4,r18
 4024968:	40262e00 	call	40262e0 <_sbrk_r>
 402496c:	00ffffc4 	movi	r3,-1
 4024970:	10c00d26 	beq	r2,r3,40249a8 <_malloc_trim_r+0xe0>
 4024974:	00c10134 	movhi	r3,1028
 4024978:	18eb5a04 	addi	r3,r3,-21144
 402497c:	18800017 	ldw	r2,0(r3)
 4024980:	99000217 	ldw	r4,8(r19)
 4024984:	8c23c83a 	sub	r17,r17,r16
 4024988:	8c400054 	ori	r17,r17,1
 402498c:	1421c83a 	sub	r16,r2,r16
 4024990:	24400115 	stw	r17,4(r4)
 4024994:	9009883a 	mov	r4,r18
 4024998:	1c000015 	stw	r16,0(r3)
 402499c:	40345540 	call	4034554 <__malloc_unlock>
 40249a0:	00800044 	movi	r2,1
 40249a4:	003fe706 	br	4024944 <_gp+0xfffe3744>
 40249a8:	000b883a 	mov	r5,zero
 40249ac:	9009883a 	mov	r4,r18
 40249b0:	40262e00 	call	40262e0 <_sbrk_r>
 40249b4:	99000217 	ldw	r4,8(r19)
 40249b8:	014003c4 	movi	r5,15
 40249bc:	1107c83a 	sub	r3,r2,r4
 40249c0:	28ffdd0e 	bge	r5,r3,4024938 <_gp+0xfffe3738>
 40249c4:	01410134 	movhi	r5,1028
 40249c8:	29648204 	addi	r5,r5,-28152
 40249cc:	29400017 	ldw	r5,0(r5)
 40249d0:	18c00054 	ori	r3,r3,1
 40249d4:	20c00115 	stw	r3,4(r4)
 40249d8:	00c10134 	movhi	r3,1028
 40249dc:	1145c83a 	sub	r2,r2,r5
 40249e0:	18eb5a04 	addi	r3,r3,-21144
 40249e4:	18800015 	stw	r2,0(r3)
 40249e8:	003fd306 	br	4024938 <_gp+0xfffe3738>

040249ec <_free_r>:
 40249ec:	28004126 	beq	r5,zero,4024af4 <_free_r+0x108>
 40249f0:	defffd04 	addi	sp,sp,-12
 40249f4:	dc400115 	stw	r17,4(sp)
 40249f8:	dc000015 	stw	r16,0(sp)
 40249fc:	2023883a 	mov	r17,r4
 4024a00:	2821883a 	mov	r16,r5
 4024a04:	dfc00215 	stw	ra,8(sp)
 4024a08:	40345300 	call	4034530 <__malloc_lock>
 4024a0c:	81ffff17 	ldw	r7,-4(r16)
 4024a10:	00bfff84 	movi	r2,-2
 4024a14:	010100f4 	movhi	r4,1027
 4024a18:	81bffe04 	addi	r6,r16,-8
 4024a1c:	3884703a 	and	r2,r7,r2
 4024a20:	211ede04 	addi	r4,r4,31608
 4024a24:	308b883a 	add	r5,r6,r2
 4024a28:	2a400117 	ldw	r9,4(r5)
 4024a2c:	22000217 	ldw	r8,8(r4)
 4024a30:	00ffff04 	movi	r3,-4
 4024a34:	48c6703a 	and	r3,r9,r3
 4024a38:	2a005726 	beq	r5,r8,4024b98 <_free_r+0x1ac>
 4024a3c:	28c00115 	stw	r3,4(r5)
 4024a40:	39c0004c 	andi	r7,r7,1
 4024a44:	3800091e 	bne	r7,zero,4024a6c <_free_r+0x80>
 4024a48:	823ffe17 	ldw	r8,-8(r16)
 4024a4c:	22400204 	addi	r9,r4,8
 4024a50:	320dc83a 	sub	r6,r6,r8
 4024a54:	31c00217 	ldw	r7,8(r6)
 4024a58:	1205883a 	add	r2,r2,r8
 4024a5c:	3a406526 	beq	r7,r9,4024bf4 <_free_r+0x208>
 4024a60:	32000317 	ldw	r8,12(r6)
 4024a64:	3a000315 	stw	r8,12(r7)
 4024a68:	41c00215 	stw	r7,8(r8)
 4024a6c:	28cf883a 	add	r7,r5,r3
 4024a70:	39c00117 	ldw	r7,4(r7)
 4024a74:	39c0004c 	andi	r7,r7,1
 4024a78:	38003a26 	beq	r7,zero,4024b64 <_free_r+0x178>
 4024a7c:	10c00054 	ori	r3,r2,1
 4024a80:	30c00115 	stw	r3,4(r6)
 4024a84:	3087883a 	add	r3,r6,r2
 4024a88:	18800015 	stw	r2,0(r3)
 4024a8c:	00c07fc4 	movi	r3,511
 4024a90:	18801936 	bltu	r3,r2,4024af8 <_free_r+0x10c>
 4024a94:	1004d0fa 	srli	r2,r2,3
 4024a98:	01c00044 	movi	r7,1
 4024a9c:	21400117 	ldw	r5,4(r4)
 4024aa0:	10c00044 	addi	r3,r2,1
 4024aa4:	18c7883a 	add	r3,r3,r3
 4024aa8:	1005d0ba 	srai	r2,r2,2
 4024aac:	18c7883a 	add	r3,r3,r3
 4024ab0:	18c7883a 	add	r3,r3,r3
 4024ab4:	1907883a 	add	r3,r3,r4
 4024ab8:	3884983a 	sll	r2,r7,r2
 4024abc:	19c00017 	ldw	r7,0(r3)
 4024ac0:	1a3ffe04 	addi	r8,r3,-8
 4024ac4:	1144b03a 	or	r2,r2,r5
 4024ac8:	32000315 	stw	r8,12(r6)
 4024acc:	31c00215 	stw	r7,8(r6)
 4024ad0:	20800115 	stw	r2,4(r4)
 4024ad4:	19800015 	stw	r6,0(r3)
 4024ad8:	39800315 	stw	r6,12(r7)
 4024adc:	8809883a 	mov	r4,r17
 4024ae0:	dfc00217 	ldw	ra,8(sp)
 4024ae4:	dc400117 	ldw	r17,4(sp)
 4024ae8:	dc000017 	ldw	r16,0(sp)
 4024aec:	dec00304 	addi	sp,sp,12
 4024af0:	40345541 	jmpi	4034554 <__malloc_unlock>
 4024af4:	f800283a 	ret
 4024af8:	100ad27a 	srli	r5,r2,9
 4024afc:	00c00104 	movi	r3,4
 4024b00:	19404a36 	bltu	r3,r5,4024c2c <_free_r+0x240>
 4024b04:	100ad1ba 	srli	r5,r2,6
 4024b08:	28c00e44 	addi	r3,r5,57
 4024b0c:	18c7883a 	add	r3,r3,r3
 4024b10:	29400e04 	addi	r5,r5,56
 4024b14:	18c7883a 	add	r3,r3,r3
 4024b18:	18c7883a 	add	r3,r3,r3
 4024b1c:	1909883a 	add	r4,r3,r4
 4024b20:	20c00017 	ldw	r3,0(r4)
 4024b24:	01c100f4 	movhi	r7,1027
 4024b28:	213ffe04 	addi	r4,r4,-8
 4024b2c:	39dede04 	addi	r7,r7,31608
 4024b30:	20c04426 	beq	r4,r3,4024c44 <_free_r+0x258>
 4024b34:	01ffff04 	movi	r7,-4
 4024b38:	19400117 	ldw	r5,4(r3)
 4024b3c:	29ca703a 	and	r5,r5,r7
 4024b40:	1140022e 	bgeu	r2,r5,4024b4c <_free_r+0x160>
 4024b44:	18c00217 	ldw	r3,8(r3)
 4024b48:	20fffb1e 	bne	r4,r3,4024b38 <_gp+0xfffe3938>
 4024b4c:	19000317 	ldw	r4,12(r3)
 4024b50:	31000315 	stw	r4,12(r6)
 4024b54:	30c00215 	stw	r3,8(r6)
 4024b58:	21800215 	stw	r6,8(r4)
 4024b5c:	19800315 	stw	r6,12(r3)
 4024b60:	003fde06 	br	4024adc <_gp+0xfffe38dc>
 4024b64:	29c00217 	ldw	r7,8(r5)
 4024b68:	10c5883a 	add	r2,r2,r3
 4024b6c:	00c100f4 	movhi	r3,1027
 4024b70:	18dee004 	addi	r3,r3,31616
 4024b74:	38c03b26 	beq	r7,r3,4024c64 <_free_r+0x278>
 4024b78:	2a000317 	ldw	r8,12(r5)
 4024b7c:	11400054 	ori	r5,r2,1
 4024b80:	3087883a 	add	r3,r6,r2
 4024b84:	3a000315 	stw	r8,12(r7)
 4024b88:	41c00215 	stw	r7,8(r8)
 4024b8c:	31400115 	stw	r5,4(r6)
 4024b90:	18800015 	stw	r2,0(r3)
 4024b94:	003fbd06 	br	4024a8c <_gp+0xfffe388c>
 4024b98:	39c0004c 	andi	r7,r7,1
 4024b9c:	10c5883a 	add	r2,r2,r3
 4024ba0:	3800071e 	bne	r7,zero,4024bc0 <_free_r+0x1d4>
 4024ba4:	81fffe17 	ldw	r7,-8(r16)
 4024ba8:	31cdc83a 	sub	r6,r6,r7
 4024bac:	30c00317 	ldw	r3,12(r6)
 4024bb0:	31400217 	ldw	r5,8(r6)
 4024bb4:	11c5883a 	add	r2,r2,r7
 4024bb8:	28c00315 	stw	r3,12(r5)
 4024bbc:	19400215 	stw	r5,8(r3)
 4024bc0:	10c00054 	ori	r3,r2,1
 4024bc4:	30c00115 	stw	r3,4(r6)
 4024bc8:	00c10134 	movhi	r3,1028
 4024bcc:	18e48304 	addi	r3,r3,-28148
 4024bd0:	18c00017 	ldw	r3,0(r3)
 4024bd4:	21800215 	stw	r6,8(r4)
 4024bd8:	10ffc036 	bltu	r2,r3,4024adc <_gp+0xfffe38dc>
 4024bdc:	00810134 	movhi	r2,1028
 4024be0:	10ab4f04 	addi	r2,r2,-21188
 4024be4:	11400017 	ldw	r5,0(r2)
 4024be8:	8809883a 	mov	r4,r17
 4024bec:	40248c80 	call	40248c8 <_malloc_trim_r>
 4024bf0:	003fba06 	br	4024adc <_gp+0xfffe38dc>
 4024bf4:	28c9883a 	add	r4,r5,r3
 4024bf8:	21000117 	ldw	r4,4(r4)
 4024bfc:	2100004c 	andi	r4,r4,1
 4024c00:	2000391e 	bne	r4,zero,4024ce8 <_free_r+0x2fc>
 4024c04:	29c00217 	ldw	r7,8(r5)
 4024c08:	29000317 	ldw	r4,12(r5)
 4024c0c:	1885883a 	add	r2,r3,r2
 4024c10:	10c00054 	ori	r3,r2,1
 4024c14:	39000315 	stw	r4,12(r7)
 4024c18:	21c00215 	stw	r7,8(r4)
 4024c1c:	30c00115 	stw	r3,4(r6)
 4024c20:	308d883a 	add	r6,r6,r2
 4024c24:	30800015 	stw	r2,0(r6)
 4024c28:	003fac06 	br	4024adc <_gp+0xfffe38dc>
 4024c2c:	00c00504 	movi	r3,20
 4024c30:	19401536 	bltu	r3,r5,4024c88 <_free_r+0x29c>
 4024c34:	28c01704 	addi	r3,r5,92
 4024c38:	18c7883a 	add	r3,r3,r3
 4024c3c:	294016c4 	addi	r5,r5,91
 4024c40:	003fb406 	br	4024b14 <_gp+0xfffe3914>
 4024c44:	280bd0ba 	srai	r5,r5,2
 4024c48:	00c00044 	movi	r3,1
 4024c4c:	38800117 	ldw	r2,4(r7)
 4024c50:	194a983a 	sll	r5,r3,r5
 4024c54:	2007883a 	mov	r3,r4
 4024c58:	2884b03a 	or	r2,r5,r2
 4024c5c:	38800115 	stw	r2,4(r7)
 4024c60:	003fbb06 	br	4024b50 <_gp+0xfffe3950>
 4024c64:	21800515 	stw	r6,20(r4)
 4024c68:	21800415 	stw	r6,16(r4)
 4024c6c:	10c00054 	ori	r3,r2,1
 4024c70:	31c00315 	stw	r7,12(r6)
 4024c74:	31c00215 	stw	r7,8(r6)
 4024c78:	30c00115 	stw	r3,4(r6)
 4024c7c:	308d883a 	add	r6,r6,r2
 4024c80:	30800015 	stw	r2,0(r6)
 4024c84:	003f9506 	br	4024adc <_gp+0xfffe38dc>
 4024c88:	00c01504 	movi	r3,84
 4024c8c:	19400536 	bltu	r3,r5,4024ca4 <_free_r+0x2b8>
 4024c90:	100ad33a 	srli	r5,r2,12
 4024c94:	28c01bc4 	addi	r3,r5,111
 4024c98:	18c7883a 	add	r3,r3,r3
 4024c9c:	29401b84 	addi	r5,r5,110
 4024ca0:	003f9c06 	br	4024b14 <_gp+0xfffe3914>
 4024ca4:	00c05504 	movi	r3,340
 4024ca8:	19400536 	bltu	r3,r5,4024cc0 <_free_r+0x2d4>
 4024cac:	100ad3fa 	srli	r5,r2,15
 4024cb0:	28c01e04 	addi	r3,r5,120
 4024cb4:	18c7883a 	add	r3,r3,r3
 4024cb8:	29401dc4 	addi	r5,r5,119
 4024cbc:	003f9506 	br	4024b14 <_gp+0xfffe3914>
 4024cc0:	00c15504 	movi	r3,1364
 4024cc4:	19400536 	bltu	r3,r5,4024cdc <_free_r+0x2f0>
 4024cc8:	100ad4ba 	srli	r5,r2,18
 4024ccc:	28c01f44 	addi	r3,r5,125
 4024cd0:	18c7883a 	add	r3,r3,r3
 4024cd4:	29401f04 	addi	r5,r5,124
 4024cd8:	003f8e06 	br	4024b14 <_gp+0xfffe3914>
 4024cdc:	00c03f84 	movi	r3,254
 4024ce0:	01401f84 	movi	r5,126
 4024ce4:	003f8b06 	br	4024b14 <_gp+0xfffe3914>
 4024ce8:	10c00054 	ori	r3,r2,1
 4024cec:	30c00115 	stw	r3,4(r6)
 4024cf0:	308d883a 	add	r6,r6,r2
 4024cf4:	30800015 	stw	r2,0(r6)
 4024cf8:	003f7806 	br	4024adc <_gp+0xfffe38dc>

04024cfc <_fseek_r>:
 4024cfc:	4024d1c1 	jmpi	4024d1c <_fseeko_r>

04024d00 <fseek>:
 4024d00:	00810134 	movhi	r2,1028
 4024d04:	10a48104 	addi	r2,r2,-28156
 4024d08:	300f883a 	mov	r7,r6
 4024d0c:	280d883a 	mov	r6,r5
 4024d10:	200b883a 	mov	r5,r4
 4024d14:	11000017 	ldw	r4,0(r2)
 4024d18:	4024d1c1 	jmpi	4024d1c <_fseeko_r>

04024d1c <_fseeko_r>:
 4024d1c:	deffe804 	addi	sp,sp,-96
 4024d20:	dd401415 	stw	r21,80(sp)
 4024d24:	dc801115 	stw	r18,68(sp)
 4024d28:	dc401015 	stw	r17,64(sp)
 4024d2c:	dc000f15 	stw	r16,60(sp)
 4024d30:	dfc01715 	stw	ra,92(sp)
 4024d34:	ddc01615 	stw	r23,88(sp)
 4024d38:	dd801515 	stw	r22,84(sp)
 4024d3c:	dd001315 	stw	r20,76(sp)
 4024d40:	dcc01215 	stw	r19,72(sp)
 4024d44:	2023883a 	mov	r17,r4
 4024d48:	2821883a 	mov	r16,r5
 4024d4c:	302b883a 	mov	r21,r6
 4024d50:	3825883a 	mov	r18,r7
 4024d54:	20000226 	beq	r4,zero,4024d60 <_fseeko_r+0x44>
 4024d58:	20800e17 	ldw	r2,56(r4)
 4024d5c:	10005a26 	beq	r2,zero,4024ec8 <_fseeko_r+0x1ac>
 4024d60:	8080030b 	ldhu	r2,12(r16)
 4024d64:	00c04204 	movi	r3,264
 4024d68:	1080420c 	andi	r2,r2,264
 4024d6c:	10c05b26 	beq	r2,r3,4024edc <_fseeko_r+0x1c0>
 4024d70:	85000a17 	ldw	r20,40(r16)
 4024d74:	a000f626 	beq	r20,zero,4025150 <_fseeko_r+0x434>
 4024d78:	00800044 	movi	r2,1
 4024d7c:	90803e26 	beq	r18,r2,4024e78 <_fseeko_r+0x15c>
 4024d80:	00800084 	movi	r2,2
 4024d84:	90801026 	beq	r18,r2,4024dc8 <_fseeko_r+0xac>
 4024d88:	90000f26 	beq	r18,zero,4024dc8 <_fseeko_r+0xac>
 4024d8c:	00800584 	movi	r2,22
 4024d90:	88800015 	stw	r2,0(r17)
 4024d94:	04ffffc4 	movi	r19,-1
 4024d98:	9805883a 	mov	r2,r19
 4024d9c:	dfc01717 	ldw	ra,92(sp)
 4024da0:	ddc01617 	ldw	r23,88(sp)
 4024da4:	dd801517 	ldw	r22,84(sp)
 4024da8:	dd401417 	ldw	r21,80(sp)
 4024dac:	dd001317 	ldw	r20,76(sp)
 4024db0:	dcc01217 	ldw	r19,72(sp)
 4024db4:	dc801117 	ldw	r18,68(sp)
 4024db8:	dc401017 	ldw	r17,64(sp)
 4024dbc:	dc000f17 	ldw	r16,60(sp)
 4024dc0:	dec01804 	addi	sp,sp,96
 4024dc4:	f800283a 	ret
 4024dc8:	80800417 	ldw	r2,16(r16)
 4024dcc:	002f883a 	mov	r23,zero
 4024dd0:	0027883a 	mov	r19,zero
 4024dd4:	1000cb26 	beq	r2,zero,4025104 <_fseeko_r+0x3e8>
 4024dd8:	8080030b 	ldhu	r2,12(r16)
 4024ddc:	10c2068c 	andi	r3,r2,2074
 4024de0:	1800071e 	bne	r3,zero,4024e00 <_fseeko_r+0xe4>
 4024de4:	10c1000c 	andi	r3,r2,1024
 4024de8:	1800451e 	bne	r3,zero,4024f00 <_fseeko_r+0x1e4>
 4024dec:	00c100b4 	movhi	r3,1026
 4024df0:	18d93404 	addi	r3,r3,25808
 4024df4:	a0c0b726 	beq	r20,r3,40250d4 <_fseeko_r+0x3b8>
 4024df8:	10820014 	ori	r2,r2,2048
 4024dfc:	8080030d 	sth	r2,12(r16)
 4024e00:	800b883a 	mov	r5,r16
 4024e04:	8809883a 	mov	r4,r17
 4024e08:	40243440 	call	4024344 <_fflush_r>
 4024e0c:	1027883a 	mov	r19,r2
 4024e10:	103fe01e 	bne	r2,zero,4024d94 <_gp+0xfffe3b94>
 4024e14:	81400717 	ldw	r5,28(r16)
 4024e18:	900f883a 	mov	r7,r18
 4024e1c:	a80d883a 	mov	r6,r21
 4024e20:	8809883a 	mov	r4,r17
 4024e24:	a03ee83a 	callr	r20
 4024e28:	00ffffc4 	movi	r3,-1
 4024e2c:	10ffd926 	beq	r2,r3,4024d94 <_gp+0xfffe3b94>
 4024e30:	81400c17 	ldw	r5,48(r16)
 4024e34:	28000526 	beq	r5,zero,4024e4c <_fseeko_r+0x130>
 4024e38:	80801004 	addi	r2,r16,64
 4024e3c:	28800226 	beq	r5,r2,4024e48 <_fseeko_r+0x12c>
 4024e40:	8809883a 	mov	r4,r17
 4024e44:	40249ec0 	call	40249ec <_free_r>
 4024e48:	80000c15 	stw	zero,48(r16)
 4024e4c:	8080030b 	ldhu	r2,12(r16)
 4024e50:	80c00417 	ldw	r3,16(r16)
 4024e54:	80000115 	stw	zero,4(r16)
 4024e58:	10bdf7cc 	andi	r2,r2,63455
 4024e5c:	80c00015 	stw	r3,0(r16)
 4024e60:	8080030d 	sth	r2,12(r16)
 4024e64:	01800204 	movi	r6,8
 4024e68:	000b883a 	mov	r5,zero
 4024e6c:	81001704 	addi	r4,r16,92
 4024e70:	4025e280 	call	4025e28 <memset>
 4024e74:	003fc806 	br	4024d98 <_gp+0xfffe3b98>
 4024e78:	800b883a 	mov	r5,r16
 4024e7c:	8809883a 	mov	r4,r17
 4024e80:	40243440 	call	4024344 <_fflush_r>
 4024e84:	8080030b 	ldhu	r2,12(r16)
 4024e88:	10c4000c 	andi	r3,r2,4096
 4024e8c:	18008726 	beq	r3,zero,40250ac <_fseeko_r+0x390>
 4024e90:	84c01417 	ldw	r19,80(r16)
 4024e94:	10c0010c 	andi	r3,r2,4
 4024e98:	1800431e 	bne	r3,zero,4024fa8 <_fseeko_r+0x28c>
 4024e9c:	1080020c 	andi	r2,r2,8
 4024ea0:	10008026 	beq	r2,zero,40250a4 <_fseeko_r+0x388>
 4024ea4:	80c00017 	ldw	r3,0(r16)
 4024ea8:	80800417 	ldw	r2,16(r16)
 4024eac:	18000226 	beq	r3,zero,4024eb8 <_fseeko_r+0x19c>
 4024eb0:	1887c83a 	sub	r3,r3,r2
 4024eb4:	98e7883a 	add	r19,r19,r3
 4024eb8:	aceb883a 	add	r21,r21,r19
 4024ebc:	05c00044 	movi	r23,1
 4024ec0:	0025883a 	mov	r18,zero
 4024ec4:	003fc306 	br	4024dd4 <_gp+0xfffe3bd4>
 4024ec8:	40247200 	call	4024720 <__sinit>
 4024ecc:	8080030b 	ldhu	r2,12(r16)
 4024ed0:	00c04204 	movi	r3,264
 4024ed4:	1080420c 	andi	r2,r2,264
 4024ed8:	10ffa51e 	bne	r2,r3,4024d70 <_gp+0xfffe3b70>
 4024edc:	800b883a 	mov	r5,r16
 4024ee0:	8809883a 	mov	r4,r17
 4024ee4:	40243440 	call	4024344 <_fflush_r>
 4024ee8:	003fa106 	br	4024d70 <_gp+0xfffe3b70>
 4024eec:	8080030b 	ldhu	r2,12(r16)
 4024ef0:	00c10004 	movi	r3,1024
 4024ef4:	80c01315 	stw	r3,76(r16)
 4024ef8:	10c4b03a 	or	r2,r2,r3
 4024efc:	8080030d 	sth	r2,12(r16)
 4024f00:	9000311e 	bne	r18,zero,4024fc8 <_fseeko_r+0x2ac>
 4024f04:	a82d883a 	mov	r22,r21
 4024f08:	b800371e 	bne	r23,zero,4024fe8 <_fseeko_r+0x2cc>
 4024f0c:	8080030b 	ldhu	r2,12(r16)
 4024f10:	1084000c 	andi	r2,r2,4096
 4024f14:	10007f26 	beq	r2,zero,4025114 <_fseeko_r+0x3f8>
 4024f18:	80801417 	ldw	r2,80(r16)
 4024f1c:	81800117 	ldw	r6,4(r16)
 4024f20:	81400c17 	ldw	r5,48(r16)
 4024f24:	11a7c83a 	sub	r19,r2,r6
 4024f28:	28008226 	beq	r5,zero,4025134 <_fseeko_r+0x418>
 4024f2c:	81c00f17 	ldw	r7,60(r16)
 4024f30:	99e7c83a 	sub	r19,r19,r7
 4024f34:	81000e17 	ldw	r4,56(r16)
 4024f38:	80800417 	ldw	r2,16(r16)
 4024f3c:	99a7883a 	add	r19,r19,r6
 4024f40:	2087c83a 	sub	r3,r4,r2
 4024f44:	98e7c83a 	sub	r19,r19,r3
 4024f48:	38c7883a 	add	r3,r7,r3
 4024f4c:	b4c02b16 	blt	r22,r19,4024ffc <_fseeko_r+0x2e0>
 4024f50:	98c9883a 	add	r4,r19,r3
 4024f54:	b100292e 	bgeu	r22,r4,4024ffc <_fseeko_r+0x2e0>
 4024f58:	b4e7c83a 	sub	r19,r22,r19
 4024f5c:	14c5883a 	add	r2,r2,r19
 4024f60:	1ce7c83a 	sub	r19,r3,r19
 4024f64:	80800015 	stw	r2,0(r16)
 4024f68:	84c00115 	stw	r19,4(r16)
 4024f6c:	28000526 	beq	r5,zero,4024f84 <_fseeko_r+0x268>
 4024f70:	80801004 	addi	r2,r16,64
 4024f74:	28800226 	beq	r5,r2,4024f80 <_fseeko_r+0x264>
 4024f78:	8809883a 	mov	r4,r17
 4024f7c:	40249ec0 	call	40249ec <_free_r>
 4024f80:	80000c15 	stw	zero,48(r16)
 4024f84:	8080030b 	ldhu	r2,12(r16)
 4024f88:	01800204 	movi	r6,8
 4024f8c:	000b883a 	mov	r5,zero
 4024f90:	10bff7cc 	andi	r2,r2,65503
 4024f94:	8080030d 	sth	r2,12(r16)
 4024f98:	81001704 	addi	r4,r16,92
 4024f9c:	4025e280 	call	4025e28 <memset>
 4024fa0:	0027883a 	mov	r19,zero
 4024fa4:	003f7c06 	br	4024d98 <_gp+0xfffe3b98>
 4024fa8:	80c00117 	ldw	r3,4(r16)
 4024fac:	80800c17 	ldw	r2,48(r16)
 4024fb0:	98e7c83a 	sub	r19,r19,r3
 4024fb4:	10003b26 	beq	r2,zero,40250a4 <_fseeko_r+0x388>
 4024fb8:	80c00f17 	ldw	r3,60(r16)
 4024fbc:	80800417 	ldw	r2,16(r16)
 4024fc0:	98e7c83a 	sub	r19,r19,r3
 4024fc4:	003fbc06 	br	4024eb8 <_gp+0xfffe3cb8>
 4024fc8:	8140038f 	ldh	r5,14(r16)
 4024fcc:	d80d883a 	mov	r6,sp
 4024fd0:	8809883a 	mov	r4,r17
 4024fd4:	402517c0 	call	402517c <_fstat_r>
 4024fd8:	103f891e 	bne	r2,zero,4024e00 <_gp+0xfffe3c00>
 4024fdc:	dd800417 	ldw	r22,16(sp)
 4024fe0:	adad883a 	add	r22,r21,r22
 4024fe4:	b83fc926 	beq	r23,zero,4024f0c <_gp+0xfffe3d0c>
 4024fe8:	81400c17 	ldw	r5,48(r16)
 4024fec:	81800117 	ldw	r6,4(r16)
 4024ff0:	28005026 	beq	r5,zero,4025134 <_fseeko_r+0x418>
 4024ff4:	81c00f17 	ldw	r7,60(r16)
 4024ff8:	003fce06 	br	4024f34 <_gp+0xfffe3d34>
 4024ffc:	84c01317 	ldw	r19,76(r16)
 4025000:	81400717 	ldw	r5,28(r16)
 4025004:	000f883a 	mov	r7,zero
 4025008:	04e7c83a 	sub	r19,zero,r19
 402500c:	9da6703a 	and	r19,r19,r22
 4025010:	980d883a 	mov	r6,r19
 4025014:	8809883a 	mov	r4,r17
 4025018:	a03ee83a 	callr	r20
 402501c:	00ffffc4 	movi	r3,-1
 4025020:	10ff7726 	beq	r2,r3,4024e00 <_gp+0xfffe3c00>
 4025024:	80800417 	ldw	r2,16(r16)
 4025028:	81400c17 	ldw	r5,48(r16)
 402502c:	80000115 	stw	zero,4(r16)
 4025030:	80800015 	stw	r2,0(r16)
 4025034:	28000526 	beq	r5,zero,402504c <_fseeko_r+0x330>
 4025038:	80801004 	addi	r2,r16,64
 402503c:	28800226 	beq	r5,r2,4025048 <_fseeko_r+0x32c>
 4025040:	8809883a 	mov	r4,r17
 4025044:	40249ec0 	call	40249ec <_free_r>
 4025048:	80000c15 	stw	zero,48(r16)
 402504c:	8080030b 	ldhu	r2,12(r16)
 4025050:	b4e7c83a 	sub	r19,r22,r19
 4025054:	10bff7cc 	andi	r2,r2,65503
 4025058:	8080030d 	sth	r2,12(r16)
 402505c:	98000b26 	beq	r19,zero,402508c <_fseeko_r+0x370>
 4025060:	800b883a 	mov	r5,r16
 4025064:	8809883a 	mov	r4,r17
 4025068:	402610c0 	call	402610c <__srefill_r>
 402506c:	103f641e 	bne	r2,zero,4024e00 <_gp+0xfffe3c00>
 4025070:	80800117 	ldw	r2,4(r16)
 4025074:	14ff6236 	bltu	r2,r19,4024e00 <_gp+0xfffe3c00>
 4025078:	80c00017 	ldw	r3,0(r16)
 402507c:	14c5c83a 	sub	r2,r2,r19
 4025080:	80800115 	stw	r2,4(r16)
 4025084:	1ce7883a 	add	r19,r3,r19
 4025088:	84c00015 	stw	r19,0(r16)
 402508c:	01800204 	movi	r6,8
 4025090:	000b883a 	mov	r5,zero
 4025094:	81001704 	addi	r4,r16,92
 4025098:	4025e280 	call	4025e28 <memset>
 402509c:	0027883a 	mov	r19,zero
 40250a0:	003f3d06 	br	4024d98 <_gp+0xfffe3b98>
 40250a4:	80800417 	ldw	r2,16(r16)
 40250a8:	003f8306 	br	4024eb8 <_gp+0xfffe3cb8>
 40250ac:	81400717 	ldw	r5,28(r16)
 40250b0:	900f883a 	mov	r7,r18
 40250b4:	000d883a 	mov	r6,zero
 40250b8:	8809883a 	mov	r4,r17
 40250bc:	a03ee83a 	callr	r20
 40250c0:	1027883a 	mov	r19,r2
 40250c4:	00bfffc4 	movi	r2,-1
 40250c8:	98bf3226 	beq	r19,r2,4024d94 <_gp+0xfffe3b94>
 40250cc:	8080030b 	ldhu	r2,12(r16)
 40250d0:	003f7006 	br	4024e94 <_gp+0xfffe3c94>
 40250d4:	8140038f 	ldh	r5,14(r16)
 40250d8:	283f4716 	blt	r5,zero,4024df8 <_gp+0xfffe3bf8>
 40250dc:	d80d883a 	mov	r6,sp
 40250e0:	8809883a 	mov	r4,r17
 40250e4:	402517c0 	call	402517c <_fstat_r>
 40250e8:	1000041e 	bne	r2,zero,40250fc <_fseeko_r+0x3e0>
 40250ec:	d8800117 	ldw	r2,4(sp)
 40250f0:	00e00014 	movui	r3,32768
 40250f4:	10bc000c 	andi	r2,r2,61440
 40250f8:	10ff7c26 	beq	r2,r3,4024eec <_gp+0xfffe3cec>
 40250fc:	8080030b 	ldhu	r2,12(r16)
 4025100:	003f3d06 	br	4024df8 <_gp+0xfffe3bf8>
 4025104:	800b883a 	mov	r5,r16
 4025108:	8809883a 	mov	r4,r17
 402510c:	40254600 	call	4025460 <__smakebuf_r>
 4025110:	003f3106 	br	4024dd8 <_gp+0xfffe3bd8>
 4025114:	81400717 	ldw	r5,28(r16)
 4025118:	01c00044 	movi	r7,1
 402511c:	000d883a 	mov	r6,zero
 4025120:	8809883a 	mov	r4,r17
 4025124:	a03ee83a 	callr	r20
 4025128:	00ffffc4 	movi	r3,-1
 402512c:	10ff7b1e 	bne	r2,r3,4024f1c <_gp+0xfffe3d1c>
 4025130:	003f3306 	br	4024e00 <_gp+0xfffe3c00>
 4025134:	80c00017 	ldw	r3,0(r16)
 4025138:	80800417 	ldw	r2,16(r16)
 402513c:	000b883a 	mov	r5,zero
 4025140:	1887c83a 	sub	r3,r3,r2
 4025144:	98e7c83a 	sub	r19,r19,r3
 4025148:	30c7883a 	add	r3,r6,r3
 402514c:	003f7f06 	br	4024f4c <_gp+0xfffe3d4c>
 4025150:	00800744 	movi	r2,29
 4025154:	88800015 	stw	r2,0(r17)
 4025158:	04ffffc4 	movi	r19,-1
 402515c:	003f0e06 	br	4024d98 <_gp+0xfffe3b98>

04025160 <fseeko>:
 4025160:	00810134 	movhi	r2,1028
 4025164:	10a48104 	addi	r2,r2,-28156
 4025168:	300f883a 	mov	r7,r6
 402516c:	280d883a 	mov	r6,r5
 4025170:	200b883a 	mov	r5,r4
 4025174:	11000017 	ldw	r4,0(r2)
 4025178:	4024d1c1 	jmpi	4024d1c <_fseeko_r>

0402517c <_fstat_r>:
 402517c:	defffd04 	addi	sp,sp,-12
 4025180:	2805883a 	mov	r2,r5
 4025184:	dc000015 	stw	r16,0(sp)
 4025188:	04010134 	movhi	r16,1028
 402518c:	dc400115 	stw	r17,4(sp)
 4025190:	842b4c04 	addi	r16,r16,-21200
 4025194:	2023883a 	mov	r17,r4
 4025198:	300b883a 	mov	r5,r6
 402519c:	1009883a 	mov	r4,r2
 40251a0:	dfc00215 	stw	ra,8(sp)
 40251a4:	80000015 	stw	zero,0(r16)
 40251a8:	40341280 	call	4034128 <fstat>
 40251ac:	00ffffc4 	movi	r3,-1
 40251b0:	10c00526 	beq	r2,r3,40251c8 <_fstat_r+0x4c>
 40251b4:	dfc00217 	ldw	ra,8(sp)
 40251b8:	dc400117 	ldw	r17,4(sp)
 40251bc:	dc000017 	ldw	r16,0(sp)
 40251c0:	dec00304 	addi	sp,sp,12
 40251c4:	f800283a 	ret
 40251c8:	80c00017 	ldw	r3,0(r16)
 40251cc:	183ff926 	beq	r3,zero,40251b4 <_gp+0xfffe3fb4>
 40251d0:	88c00015 	stw	r3,0(r17)
 40251d4:	003ff706 	br	40251b4 <_gp+0xfffe3fb4>

040251d8 <_fwalk>:
 40251d8:	defff704 	addi	sp,sp,-36
 40251dc:	dd000415 	stw	r20,16(sp)
 40251e0:	dfc00815 	stw	ra,32(sp)
 40251e4:	ddc00715 	stw	r23,28(sp)
 40251e8:	dd800615 	stw	r22,24(sp)
 40251ec:	dd400515 	stw	r21,20(sp)
 40251f0:	dcc00315 	stw	r19,12(sp)
 40251f4:	dc800215 	stw	r18,8(sp)
 40251f8:	dc400115 	stw	r17,4(sp)
 40251fc:	dc000015 	stw	r16,0(sp)
 4025200:	2500b804 	addi	r20,r4,736
 4025204:	a0002326 	beq	r20,zero,4025294 <_fwalk+0xbc>
 4025208:	282b883a 	mov	r21,r5
 402520c:	002f883a 	mov	r23,zero
 4025210:	05800044 	movi	r22,1
 4025214:	04ffffc4 	movi	r19,-1
 4025218:	a4400117 	ldw	r17,4(r20)
 402521c:	a4800217 	ldw	r18,8(r20)
 4025220:	8c7fffc4 	addi	r17,r17,-1
 4025224:	88000d16 	blt	r17,zero,402525c <_fwalk+0x84>
 4025228:	94000304 	addi	r16,r18,12
 402522c:	94800384 	addi	r18,r18,14
 4025230:	8080000b 	ldhu	r2,0(r16)
 4025234:	8c7fffc4 	addi	r17,r17,-1
 4025238:	813ffd04 	addi	r4,r16,-12
 402523c:	b080042e 	bgeu	r22,r2,4025250 <_fwalk+0x78>
 4025240:	9080000f 	ldh	r2,0(r18)
 4025244:	14c00226 	beq	r2,r19,4025250 <_fwalk+0x78>
 4025248:	a83ee83a 	callr	r21
 402524c:	b8aeb03a 	or	r23,r23,r2
 4025250:	84001a04 	addi	r16,r16,104
 4025254:	94801a04 	addi	r18,r18,104
 4025258:	8cfff51e 	bne	r17,r19,4025230 <_gp+0xfffe4030>
 402525c:	a5000017 	ldw	r20,0(r20)
 4025260:	a03fed1e 	bne	r20,zero,4025218 <_gp+0xfffe4018>
 4025264:	b805883a 	mov	r2,r23
 4025268:	dfc00817 	ldw	ra,32(sp)
 402526c:	ddc00717 	ldw	r23,28(sp)
 4025270:	dd800617 	ldw	r22,24(sp)
 4025274:	dd400517 	ldw	r21,20(sp)
 4025278:	dd000417 	ldw	r20,16(sp)
 402527c:	dcc00317 	ldw	r19,12(sp)
 4025280:	dc800217 	ldw	r18,8(sp)
 4025284:	dc400117 	ldw	r17,4(sp)
 4025288:	dc000017 	ldw	r16,0(sp)
 402528c:	dec00904 	addi	sp,sp,36
 4025290:	f800283a 	ret
 4025294:	002f883a 	mov	r23,zero
 4025298:	003ff206 	br	4025264 <_gp+0xfffe4064>

0402529c <_fwalk_reent>:
 402529c:	defff704 	addi	sp,sp,-36
 40252a0:	dd000415 	stw	r20,16(sp)
 40252a4:	dfc00815 	stw	ra,32(sp)
 40252a8:	ddc00715 	stw	r23,28(sp)
 40252ac:	dd800615 	stw	r22,24(sp)
 40252b0:	dd400515 	stw	r21,20(sp)
 40252b4:	dcc00315 	stw	r19,12(sp)
 40252b8:	dc800215 	stw	r18,8(sp)
 40252bc:	dc400115 	stw	r17,4(sp)
 40252c0:	dc000015 	stw	r16,0(sp)
 40252c4:	2500b804 	addi	r20,r4,736
 40252c8:	a0002326 	beq	r20,zero,4025358 <_fwalk_reent+0xbc>
 40252cc:	282b883a 	mov	r21,r5
 40252d0:	2027883a 	mov	r19,r4
 40252d4:	002f883a 	mov	r23,zero
 40252d8:	05800044 	movi	r22,1
 40252dc:	04bfffc4 	movi	r18,-1
 40252e0:	a4400117 	ldw	r17,4(r20)
 40252e4:	a4000217 	ldw	r16,8(r20)
 40252e8:	8c7fffc4 	addi	r17,r17,-1
 40252ec:	88000c16 	blt	r17,zero,4025320 <_fwalk_reent+0x84>
 40252f0:	84000304 	addi	r16,r16,12
 40252f4:	8080000b 	ldhu	r2,0(r16)
 40252f8:	8c7fffc4 	addi	r17,r17,-1
 40252fc:	817ffd04 	addi	r5,r16,-12
 4025300:	b080052e 	bgeu	r22,r2,4025318 <_fwalk_reent+0x7c>
 4025304:	8080008f 	ldh	r2,2(r16)
 4025308:	9809883a 	mov	r4,r19
 402530c:	14800226 	beq	r2,r18,4025318 <_fwalk_reent+0x7c>
 4025310:	a83ee83a 	callr	r21
 4025314:	b8aeb03a 	or	r23,r23,r2
 4025318:	84001a04 	addi	r16,r16,104
 402531c:	8cbff51e 	bne	r17,r18,40252f4 <_gp+0xfffe40f4>
 4025320:	a5000017 	ldw	r20,0(r20)
 4025324:	a03fee1e 	bne	r20,zero,40252e0 <_gp+0xfffe40e0>
 4025328:	b805883a 	mov	r2,r23
 402532c:	dfc00817 	ldw	ra,32(sp)
 4025330:	ddc00717 	ldw	r23,28(sp)
 4025334:	dd800617 	ldw	r22,24(sp)
 4025338:	dd400517 	ldw	r21,20(sp)
 402533c:	dd000417 	ldw	r20,16(sp)
 4025340:	dcc00317 	ldw	r19,12(sp)
 4025344:	dc800217 	ldw	r18,8(sp)
 4025348:	dc400117 	ldw	r17,4(sp)
 402534c:	dc000017 	ldw	r16,0(sp)
 4025350:	dec00904 	addi	sp,sp,36
 4025354:	f800283a 	ret
 4025358:	002f883a 	mov	r23,zero
 402535c:	003ff206 	br	4025328 <_gp+0xfffe4128>

04025360 <_fwrite_r>:
 4025360:	defff504 	addi	sp,sp,-44
 4025364:	dc800815 	stw	r18,32(sp)
 4025368:	39a5383a 	mul	r18,r7,r6
 402536c:	d8800304 	addi	r2,sp,12
 4025370:	d8800015 	stw	r2,0(sp)
 4025374:	00800044 	movi	r2,1
 4025378:	dcc00915 	stw	r19,36(sp)
 402537c:	dc400715 	stw	r17,28(sp)
 4025380:	dc000615 	stw	r16,24(sp)
 4025384:	d9400315 	stw	r5,12(sp)
 4025388:	dfc00a15 	stw	ra,40(sp)
 402538c:	dc800415 	stw	r18,16(sp)
 4025390:	dc800215 	stw	r18,8(sp)
 4025394:	d8800115 	stw	r2,4(sp)
 4025398:	3027883a 	mov	r19,r6
 402539c:	3821883a 	mov	r16,r7
 40253a0:	2023883a 	mov	r17,r4
 40253a4:	d9400b17 	ldw	r5,44(sp)
 40253a8:	20000226 	beq	r4,zero,40253b4 <_fwrite_r+0x54>
 40253ac:	20800e17 	ldw	r2,56(r4)
 40253b0:	10001a26 	beq	r2,zero,402541c <_fwrite_r+0xbc>
 40253b4:	2880030b 	ldhu	r2,12(r5)
 40253b8:	10c8000c 	andi	r3,r2,8192
 40253bc:	1800061e 	bne	r3,zero,40253d8 <_fwrite_r+0x78>
 40253c0:	29001917 	ldw	r4,100(r5)
 40253c4:	00f7ffc4 	movi	r3,-8193
 40253c8:	10880014 	ori	r2,r2,8192
 40253cc:	20c6703a 	and	r3,r4,r3
 40253d0:	2880030d 	sth	r2,12(r5)
 40253d4:	28c01915 	stw	r3,100(r5)
 40253d8:	d80d883a 	mov	r6,sp
 40253dc:	8809883a 	mov	r4,r17
 40253e0:	402c5b00 	call	402c5b0 <__sfvwrite_r>
 40253e4:	10000b26 	beq	r2,zero,4025414 <_fwrite_r+0xb4>
 40253e8:	d9000217 	ldw	r4,8(sp)
 40253ec:	980b883a 	mov	r5,r19
 40253f0:	9109c83a 	sub	r4,r18,r4
 40253f4:	402296c0 	call	402296c <__udivsi3>
 40253f8:	dfc00a17 	ldw	ra,40(sp)
 40253fc:	dcc00917 	ldw	r19,36(sp)
 4025400:	dc800817 	ldw	r18,32(sp)
 4025404:	dc400717 	ldw	r17,28(sp)
 4025408:	dc000617 	ldw	r16,24(sp)
 402540c:	dec00b04 	addi	sp,sp,44
 4025410:	f800283a 	ret
 4025414:	8005883a 	mov	r2,r16
 4025418:	003ff706 	br	40253f8 <_gp+0xfffe41f8>
 402541c:	d9400515 	stw	r5,20(sp)
 4025420:	40247200 	call	4024720 <__sinit>
 4025424:	d9400517 	ldw	r5,20(sp)
 4025428:	003fe206 	br	40253b4 <_gp+0xfffe41b4>

0402542c <fwrite>:
 402542c:	defffe04 	addi	sp,sp,-8
 4025430:	00810134 	movhi	r2,1028
 4025434:	d9c00015 	stw	r7,0(sp)
 4025438:	10a48104 	addi	r2,r2,-28156
 402543c:	300f883a 	mov	r7,r6
 4025440:	280d883a 	mov	r6,r5
 4025444:	200b883a 	mov	r5,r4
 4025448:	11000017 	ldw	r4,0(r2)
 402544c:	dfc00115 	stw	ra,4(sp)
 4025450:	40253600 	call	4025360 <_fwrite_r>
 4025454:	dfc00117 	ldw	ra,4(sp)
 4025458:	dec00204 	addi	sp,sp,8
 402545c:	f800283a 	ret

04025460 <__smakebuf_r>:
 4025460:	2880030b 	ldhu	r2,12(r5)
 4025464:	10c0008c 	andi	r3,r2,2
 4025468:	1800411e 	bne	r3,zero,4025570 <__smakebuf_r+0x110>
 402546c:	deffec04 	addi	sp,sp,-80
 4025470:	dc000f15 	stw	r16,60(sp)
 4025474:	2821883a 	mov	r16,r5
 4025478:	2940038f 	ldh	r5,14(r5)
 402547c:	dc401015 	stw	r17,64(sp)
 4025480:	dfc01315 	stw	ra,76(sp)
 4025484:	dcc01215 	stw	r19,72(sp)
 4025488:	dc801115 	stw	r18,68(sp)
 402548c:	2023883a 	mov	r17,r4
 4025490:	28001c16 	blt	r5,zero,4025504 <__smakebuf_r+0xa4>
 4025494:	d80d883a 	mov	r6,sp
 4025498:	402517c0 	call	402517c <_fstat_r>
 402549c:	10001816 	blt	r2,zero,4025500 <__smakebuf_r+0xa0>
 40254a0:	d8800117 	ldw	r2,4(sp)
 40254a4:	00e00014 	movui	r3,32768
 40254a8:	10bc000c 	andi	r2,r2,61440
 40254ac:	14c80020 	cmpeqi	r19,r2,8192
 40254b0:	10c03726 	beq	r2,r3,4025590 <__smakebuf_r+0x130>
 40254b4:	80c0030b 	ldhu	r3,12(r16)
 40254b8:	18c20014 	ori	r3,r3,2048
 40254bc:	80c0030d 	sth	r3,12(r16)
 40254c0:	00c80004 	movi	r3,8192
 40254c4:	10c0521e 	bne	r2,r3,4025610 <__smakebuf_r+0x1b0>
 40254c8:	8140038f 	ldh	r5,14(r16)
 40254cc:	8809883a 	mov	r4,r17
 40254d0:	402ca6c0 	call	402ca6c <_isatty_r>
 40254d4:	10004c26 	beq	r2,zero,4025608 <__smakebuf_r+0x1a8>
 40254d8:	8080030b 	ldhu	r2,12(r16)
 40254dc:	80c010c4 	addi	r3,r16,67
 40254e0:	80c00015 	stw	r3,0(r16)
 40254e4:	10800054 	ori	r2,r2,1
 40254e8:	8080030d 	sth	r2,12(r16)
 40254ec:	00800044 	movi	r2,1
 40254f0:	80c00415 	stw	r3,16(r16)
 40254f4:	80800515 	stw	r2,20(r16)
 40254f8:	04810004 	movi	r18,1024
 40254fc:	00000706 	br	402551c <__smakebuf_r+0xbc>
 4025500:	8080030b 	ldhu	r2,12(r16)
 4025504:	10c0200c 	andi	r3,r2,128
 4025508:	18001f1e 	bne	r3,zero,4025588 <__smakebuf_r+0x128>
 402550c:	04810004 	movi	r18,1024
 4025510:	10820014 	ori	r2,r2,2048
 4025514:	8080030d 	sth	r2,12(r16)
 4025518:	0027883a 	mov	r19,zero
 402551c:	900b883a 	mov	r5,r18
 4025520:	8809883a 	mov	r4,r17
 4025524:	402561c0 	call	402561c <_malloc_r>
 4025528:	10002c26 	beq	r2,zero,40255dc <__smakebuf_r+0x17c>
 402552c:	80c0030b 	ldhu	r3,12(r16)
 4025530:	010100b4 	movhi	r4,1026
 4025534:	2110f604 	addi	r4,r4,17368
 4025538:	89000f15 	stw	r4,60(r17)
 402553c:	18c02014 	ori	r3,r3,128
 4025540:	80c0030d 	sth	r3,12(r16)
 4025544:	80800015 	stw	r2,0(r16)
 4025548:	80800415 	stw	r2,16(r16)
 402554c:	84800515 	stw	r18,20(r16)
 4025550:	98001a1e 	bne	r19,zero,40255bc <__smakebuf_r+0x15c>
 4025554:	dfc01317 	ldw	ra,76(sp)
 4025558:	dcc01217 	ldw	r19,72(sp)
 402555c:	dc801117 	ldw	r18,68(sp)
 4025560:	dc401017 	ldw	r17,64(sp)
 4025564:	dc000f17 	ldw	r16,60(sp)
 4025568:	dec01404 	addi	sp,sp,80
 402556c:	f800283a 	ret
 4025570:	288010c4 	addi	r2,r5,67
 4025574:	28800015 	stw	r2,0(r5)
 4025578:	28800415 	stw	r2,16(r5)
 402557c:	00800044 	movi	r2,1
 4025580:	28800515 	stw	r2,20(r5)
 4025584:	f800283a 	ret
 4025588:	04801004 	movi	r18,64
 402558c:	003fe006 	br	4025510 <_gp+0xfffe4310>
 4025590:	81000a17 	ldw	r4,40(r16)
 4025594:	00c100b4 	movhi	r3,1026
 4025598:	18d93404 	addi	r3,r3,25808
 402559c:	20ffc51e 	bne	r4,r3,40254b4 <_gp+0xfffe42b4>
 40255a0:	8080030b 	ldhu	r2,12(r16)
 40255a4:	04810004 	movi	r18,1024
 40255a8:	84801315 	stw	r18,76(r16)
 40255ac:	1484b03a 	or	r2,r2,r18
 40255b0:	8080030d 	sth	r2,12(r16)
 40255b4:	0027883a 	mov	r19,zero
 40255b8:	003fd806 	br	402551c <_gp+0xfffe431c>
 40255bc:	8140038f 	ldh	r5,14(r16)
 40255c0:	8809883a 	mov	r4,r17
 40255c4:	402ca6c0 	call	402ca6c <_isatty_r>
 40255c8:	103fe226 	beq	r2,zero,4025554 <_gp+0xfffe4354>
 40255cc:	8080030b 	ldhu	r2,12(r16)
 40255d0:	10800054 	ori	r2,r2,1
 40255d4:	8080030d 	sth	r2,12(r16)
 40255d8:	003fde06 	br	4025554 <_gp+0xfffe4354>
 40255dc:	8080030b 	ldhu	r2,12(r16)
 40255e0:	10c0800c 	andi	r3,r2,512
 40255e4:	183fdb1e 	bne	r3,zero,4025554 <_gp+0xfffe4354>
 40255e8:	10800094 	ori	r2,r2,2
 40255ec:	80c010c4 	addi	r3,r16,67
 40255f0:	8080030d 	sth	r2,12(r16)
 40255f4:	00800044 	movi	r2,1
 40255f8:	80c00015 	stw	r3,0(r16)
 40255fc:	80c00415 	stw	r3,16(r16)
 4025600:	80800515 	stw	r2,20(r16)
 4025604:	003fd306 	br	4025554 <_gp+0xfffe4354>
 4025608:	04810004 	movi	r18,1024
 402560c:	003fc306 	br	402551c <_gp+0xfffe431c>
 4025610:	0027883a 	mov	r19,zero
 4025614:	04810004 	movi	r18,1024
 4025618:	003fc006 	br	402551c <_gp+0xfffe431c>

0402561c <_malloc_r>:
 402561c:	defff504 	addi	sp,sp,-44
 4025620:	dc800315 	stw	r18,12(sp)
 4025624:	dfc00a15 	stw	ra,40(sp)
 4025628:	df000915 	stw	fp,36(sp)
 402562c:	ddc00815 	stw	r23,32(sp)
 4025630:	dd800715 	stw	r22,28(sp)
 4025634:	dd400615 	stw	r21,24(sp)
 4025638:	dd000515 	stw	r20,20(sp)
 402563c:	dcc00415 	stw	r19,16(sp)
 4025640:	dc400215 	stw	r17,8(sp)
 4025644:	dc000115 	stw	r16,4(sp)
 4025648:	288002c4 	addi	r2,r5,11
 402564c:	00c00584 	movi	r3,22
 4025650:	2025883a 	mov	r18,r4
 4025654:	18807f2e 	bgeu	r3,r2,4025854 <_malloc_r+0x238>
 4025658:	047ffe04 	movi	r17,-8
 402565c:	1462703a 	and	r17,r2,r17
 4025660:	8800a316 	blt	r17,zero,40258f0 <_malloc_r+0x2d4>
 4025664:	8940a236 	bltu	r17,r5,40258f0 <_malloc_r+0x2d4>
 4025668:	40345300 	call	4034530 <__malloc_lock>
 402566c:	00807dc4 	movi	r2,503
 4025670:	1441e92e 	bgeu	r2,r17,4025e18 <_malloc_r+0x7fc>
 4025674:	8804d27a 	srli	r2,r17,9
 4025678:	1000a126 	beq	r2,zero,4025900 <_malloc_r+0x2e4>
 402567c:	00c00104 	movi	r3,4
 4025680:	18811e36 	bltu	r3,r2,4025afc <_malloc_r+0x4e0>
 4025684:	8804d1ba 	srli	r2,r17,6
 4025688:	12000e44 	addi	r8,r2,57
 402568c:	11c00e04 	addi	r7,r2,56
 4025690:	4209883a 	add	r4,r8,r8
 4025694:	04c100f4 	movhi	r19,1027
 4025698:	2109883a 	add	r4,r4,r4
 402569c:	9cdede04 	addi	r19,r19,31608
 40256a0:	2109883a 	add	r4,r4,r4
 40256a4:	9909883a 	add	r4,r19,r4
 40256a8:	24000117 	ldw	r16,4(r4)
 40256ac:	213ffe04 	addi	r4,r4,-8
 40256b0:	24009726 	beq	r4,r16,4025910 <_malloc_r+0x2f4>
 40256b4:	80800117 	ldw	r2,4(r16)
 40256b8:	01bfff04 	movi	r6,-4
 40256bc:	014003c4 	movi	r5,15
 40256c0:	1184703a 	and	r2,r2,r6
 40256c4:	1447c83a 	sub	r3,r2,r17
 40256c8:	28c00716 	blt	r5,r3,40256e8 <_malloc_r+0xcc>
 40256cc:	1800920e 	bge	r3,zero,4025918 <_malloc_r+0x2fc>
 40256d0:	84000317 	ldw	r16,12(r16)
 40256d4:	24008e26 	beq	r4,r16,4025910 <_malloc_r+0x2f4>
 40256d8:	80800117 	ldw	r2,4(r16)
 40256dc:	1184703a 	and	r2,r2,r6
 40256e0:	1447c83a 	sub	r3,r2,r17
 40256e4:	28fff90e 	bge	r5,r3,40256cc <_gp+0xfffe44cc>
 40256e8:	3809883a 	mov	r4,r7
 40256ec:	018100f4 	movhi	r6,1027
 40256f0:	9c000417 	ldw	r16,16(r19)
 40256f4:	319ede04 	addi	r6,r6,31608
 40256f8:	32000204 	addi	r8,r6,8
 40256fc:	82013426 	beq	r16,r8,4025bd0 <_malloc_r+0x5b4>
 4025700:	80c00117 	ldw	r3,4(r16)
 4025704:	00bfff04 	movi	r2,-4
 4025708:	188e703a 	and	r7,r3,r2
 402570c:	3c45c83a 	sub	r2,r7,r17
 4025710:	00c003c4 	movi	r3,15
 4025714:	18811f16 	blt	r3,r2,4025b94 <_malloc_r+0x578>
 4025718:	32000515 	stw	r8,20(r6)
 402571c:	32000415 	stw	r8,16(r6)
 4025720:	10007f0e 	bge	r2,zero,4025920 <_malloc_r+0x304>
 4025724:	00807fc4 	movi	r2,511
 4025728:	11c0fd36 	bltu	r2,r7,4025b20 <_malloc_r+0x504>
 402572c:	3806d0fa 	srli	r3,r7,3
 4025730:	01c00044 	movi	r7,1
 4025734:	30800117 	ldw	r2,4(r6)
 4025738:	19400044 	addi	r5,r3,1
 402573c:	294b883a 	add	r5,r5,r5
 4025740:	1807d0ba 	srai	r3,r3,2
 4025744:	294b883a 	add	r5,r5,r5
 4025748:	294b883a 	add	r5,r5,r5
 402574c:	298b883a 	add	r5,r5,r6
 4025750:	38c6983a 	sll	r3,r7,r3
 4025754:	29c00017 	ldw	r7,0(r5)
 4025758:	2a7ffe04 	addi	r9,r5,-8
 402575c:	1886b03a 	or	r3,r3,r2
 4025760:	82400315 	stw	r9,12(r16)
 4025764:	81c00215 	stw	r7,8(r16)
 4025768:	30c00115 	stw	r3,4(r6)
 402576c:	2c000015 	stw	r16,0(r5)
 4025770:	3c000315 	stw	r16,12(r7)
 4025774:	2005d0ba 	srai	r2,r4,2
 4025778:	01400044 	movi	r5,1
 402577c:	288a983a 	sll	r5,r5,r2
 4025780:	19406f36 	bltu	r3,r5,4025940 <_malloc_r+0x324>
 4025784:	28c4703a 	and	r2,r5,r3
 4025788:	10000a1e 	bne	r2,zero,40257b4 <_malloc_r+0x198>
 402578c:	00bfff04 	movi	r2,-4
 4025790:	294b883a 	add	r5,r5,r5
 4025794:	2088703a 	and	r4,r4,r2
 4025798:	28c4703a 	and	r2,r5,r3
 402579c:	21000104 	addi	r4,r4,4
 40257a0:	1000041e 	bne	r2,zero,40257b4 <_malloc_r+0x198>
 40257a4:	294b883a 	add	r5,r5,r5
 40257a8:	28c4703a 	and	r2,r5,r3
 40257ac:	21000104 	addi	r4,r4,4
 40257b0:	103ffc26 	beq	r2,zero,40257a4 <_gp+0xfffe45a4>
 40257b4:	02bfff04 	movi	r10,-4
 40257b8:	024003c4 	movi	r9,15
 40257bc:	21800044 	addi	r6,r4,1
 40257c0:	318d883a 	add	r6,r6,r6
 40257c4:	318d883a 	add	r6,r6,r6
 40257c8:	318d883a 	add	r6,r6,r6
 40257cc:	998d883a 	add	r6,r19,r6
 40257d0:	333ffe04 	addi	r12,r6,-8
 40257d4:	2017883a 	mov	r11,r4
 40257d8:	31800104 	addi	r6,r6,4
 40257dc:	34000017 	ldw	r16,0(r6)
 40257e0:	31fffd04 	addi	r7,r6,-12
 40257e4:	81c0041e 	bne	r16,r7,40257f8 <_malloc_r+0x1dc>
 40257e8:	0000fb06 	br	4025bd8 <_malloc_r+0x5bc>
 40257ec:	1801030e 	bge	r3,zero,4025bfc <_malloc_r+0x5e0>
 40257f0:	84000317 	ldw	r16,12(r16)
 40257f4:	81c0f826 	beq	r16,r7,4025bd8 <_malloc_r+0x5bc>
 40257f8:	80800117 	ldw	r2,4(r16)
 40257fc:	1284703a 	and	r2,r2,r10
 4025800:	1447c83a 	sub	r3,r2,r17
 4025804:	48fff90e 	bge	r9,r3,40257ec <_gp+0xfffe45ec>
 4025808:	80800317 	ldw	r2,12(r16)
 402580c:	81000217 	ldw	r4,8(r16)
 4025810:	89400054 	ori	r5,r17,1
 4025814:	81400115 	stw	r5,4(r16)
 4025818:	20800315 	stw	r2,12(r4)
 402581c:	11000215 	stw	r4,8(r2)
 4025820:	8463883a 	add	r17,r16,r17
 4025824:	9c400515 	stw	r17,20(r19)
 4025828:	9c400415 	stw	r17,16(r19)
 402582c:	18800054 	ori	r2,r3,1
 4025830:	88800115 	stw	r2,4(r17)
 4025834:	8a000315 	stw	r8,12(r17)
 4025838:	8a000215 	stw	r8,8(r17)
 402583c:	88e3883a 	add	r17,r17,r3
 4025840:	88c00015 	stw	r3,0(r17)
 4025844:	9009883a 	mov	r4,r18
 4025848:	40345540 	call	4034554 <__malloc_unlock>
 402584c:	80800204 	addi	r2,r16,8
 4025850:	00001b06 	br	40258c0 <_malloc_r+0x2a4>
 4025854:	04400404 	movi	r17,16
 4025858:	89402536 	bltu	r17,r5,40258f0 <_malloc_r+0x2d4>
 402585c:	40345300 	call	4034530 <__malloc_lock>
 4025860:	00800184 	movi	r2,6
 4025864:	01000084 	movi	r4,2
 4025868:	04c100f4 	movhi	r19,1027
 402586c:	1085883a 	add	r2,r2,r2
 4025870:	9cdede04 	addi	r19,r19,31608
 4025874:	1085883a 	add	r2,r2,r2
 4025878:	9885883a 	add	r2,r19,r2
 402587c:	14000117 	ldw	r16,4(r2)
 4025880:	10fffe04 	addi	r3,r2,-8
 4025884:	80c0d926 	beq	r16,r3,4025bec <_malloc_r+0x5d0>
 4025888:	80c00117 	ldw	r3,4(r16)
 402588c:	81000317 	ldw	r4,12(r16)
 4025890:	00bfff04 	movi	r2,-4
 4025894:	1884703a 	and	r2,r3,r2
 4025898:	81400217 	ldw	r5,8(r16)
 402589c:	8085883a 	add	r2,r16,r2
 40258a0:	10c00117 	ldw	r3,4(r2)
 40258a4:	29000315 	stw	r4,12(r5)
 40258a8:	21400215 	stw	r5,8(r4)
 40258ac:	18c00054 	ori	r3,r3,1
 40258b0:	10c00115 	stw	r3,4(r2)
 40258b4:	9009883a 	mov	r4,r18
 40258b8:	40345540 	call	4034554 <__malloc_unlock>
 40258bc:	80800204 	addi	r2,r16,8
 40258c0:	dfc00a17 	ldw	ra,40(sp)
 40258c4:	df000917 	ldw	fp,36(sp)
 40258c8:	ddc00817 	ldw	r23,32(sp)
 40258cc:	dd800717 	ldw	r22,28(sp)
 40258d0:	dd400617 	ldw	r21,24(sp)
 40258d4:	dd000517 	ldw	r20,20(sp)
 40258d8:	dcc00417 	ldw	r19,16(sp)
 40258dc:	dc800317 	ldw	r18,12(sp)
 40258e0:	dc400217 	ldw	r17,8(sp)
 40258e4:	dc000117 	ldw	r16,4(sp)
 40258e8:	dec00b04 	addi	sp,sp,44
 40258ec:	f800283a 	ret
 40258f0:	00800304 	movi	r2,12
 40258f4:	90800015 	stw	r2,0(r18)
 40258f8:	0005883a 	mov	r2,zero
 40258fc:	003ff006 	br	40258c0 <_gp+0xfffe46c0>
 4025900:	01002004 	movi	r4,128
 4025904:	02001004 	movi	r8,64
 4025908:	01c00fc4 	movi	r7,63
 402590c:	003f6106 	br	4025694 <_gp+0xfffe4494>
 4025910:	4009883a 	mov	r4,r8
 4025914:	003f7506 	br	40256ec <_gp+0xfffe44ec>
 4025918:	81000317 	ldw	r4,12(r16)
 402591c:	003fde06 	br	4025898 <_gp+0xfffe4698>
 4025920:	81c5883a 	add	r2,r16,r7
 4025924:	11400117 	ldw	r5,4(r2)
 4025928:	9009883a 	mov	r4,r18
 402592c:	29400054 	ori	r5,r5,1
 4025930:	11400115 	stw	r5,4(r2)
 4025934:	40345540 	call	4034554 <__malloc_unlock>
 4025938:	80800204 	addi	r2,r16,8
 402593c:	003fe006 	br	40258c0 <_gp+0xfffe46c0>
 4025940:	9c000217 	ldw	r16,8(r19)
 4025944:	00bfff04 	movi	r2,-4
 4025948:	85800117 	ldw	r22,4(r16)
 402594c:	b0ac703a 	and	r22,r22,r2
 4025950:	b4400336 	bltu	r22,r17,4025960 <_malloc_r+0x344>
 4025954:	b445c83a 	sub	r2,r22,r17
 4025958:	00c003c4 	movi	r3,15
 402595c:	18805d16 	blt	r3,r2,4025ad4 <_malloc_r+0x4b8>
 4025960:	05c10134 	movhi	r23,1028
 4025964:	00810134 	movhi	r2,1028
 4025968:	10ab4f04 	addi	r2,r2,-21188
 402596c:	bde48204 	addi	r23,r23,-28152
 4025970:	15400017 	ldw	r21,0(r2)
 4025974:	b8c00017 	ldw	r3,0(r23)
 4025978:	00bfffc4 	movi	r2,-1
 402597c:	858d883a 	add	r6,r16,r22
 4025980:	8d6b883a 	add	r21,r17,r21
 4025984:	1880ea26 	beq	r3,r2,4025d30 <_malloc_r+0x714>
 4025988:	ad4403c4 	addi	r21,r21,4111
 402598c:	00bc0004 	movi	r2,-4096
 4025990:	a8aa703a 	and	r21,r21,r2
 4025994:	a80b883a 	mov	r5,r21
 4025998:	9009883a 	mov	r4,r18
 402599c:	d9800015 	stw	r6,0(sp)
 40259a0:	40262e00 	call	40262e0 <_sbrk_r>
 40259a4:	1029883a 	mov	r20,r2
 40259a8:	00bfffc4 	movi	r2,-1
 40259ac:	d9800017 	ldw	r6,0(sp)
 40259b0:	a080e826 	beq	r20,r2,4025d54 <_malloc_r+0x738>
 40259b4:	a180a636 	bltu	r20,r6,4025c50 <_malloc_r+0x634>
 40259b8:	07010134 	movhi	fp,1028
 40259bc:	e72b5a04 	addi	fp,fp,-21144
 40259c0:	e0800017 	ldw	r2,0(fp)
 40259c4:	a887883a 	add	r3,r21,r2
 40259c8:	e0c00015 	stw	r3,0(fp)
 40259cc:	3500e626 	beq	r6,r20,4025d68 <_malloc_r+0x74c>
 40259d0:	b9000017 	ldw	r4,0(r23)
 40259d4:	00bfffc4 	movi	r2,-1
 40259d8:	2080ee26 	beq	r4,r2,4025d94 <_malloc_r+0x778>
 40259dc:	a185c83a 	sub	r2,r20,r6
 40259e0:	10c5883a 	add	r2,r2,r3
 40259e4:	e0800015 	stw	r2,0(fp)
 40259e8:	a0c001cc 	andi	r3,r20,7
 40259ec:	1800bc26 	beq	r3,zero,4025ce0 <_malloc_r+0x6c4>
 40259f0:	a0e9c83a 	sub	r20,r20,r3
 40259f4:	00840204 	movi	r2,4104
 40259f8:	a5000204 	addi	r20,r20,8
 40259fc:	10c7c83a 	sub	r3,r2,r3
 4025a00:	a545883a 	add	r2,r20,r21
 4025a04:	1083ffcc 	andi	r2,r2,4095
 4025a08:	18abc83a 	sub	r21,r3,r2
 4025a0c:	a80b883a 	mov	r5,r21
 4025a10:	9009883a 	mov	r4,r18
 4025a14:	40262e00 	call	40262e0 <_sbrk_r>
 4025a18:	00ffffc4 	movi	r3,-1
 4025a1c:	10c0e126 	beq	r2,r3,4025da4 <_malloc_r+0x788>
 4025a20:	1505c83a 	sub	r2,r2,r20
 4025a24:	1545883a 	add	r2,r2,r21
 4025a28:	10800054 	ori	r2,r2,1
 4025a2c:	e0c00017 	ldw	r3,0(fp)
 4025a30:	9d000215 	stw	r20,8(r19)
 4025a34:	a0800115 	stw	r2,4(r20)
 4025a38:	a8c7883a 	add	r3,r21,r3
 4025a3c:	e0c00015 	stw	r3,0(fp)
 4025a40:	84c00e26 	beq	r16,r19,4025a7c <_malloc_r+0x460>
 4025a44:	018003c4 	movi	r6,15
 4025a48:	3580a72e 	bgeu	r6,r22,4025ce8 <_malloc_r+0x6cc>
 4025a4c:	81400117 	ldw	r5,4(r16)
 4025a50:	013ffe04 	movi	r4,-8
 4025a54:	b0bffd04 	addi	r2,r22,-12
 4025a58:	1104703a 	and	r2,r2,r4
 4025a5c:	2900004c 	andi	r4,r5,1
 4025a60:	2088b03a 	or	r4,r4,r2
 4025a64:	81000115 	stw	r4,4(r16)
 4025a68:	01400144 	movi	r5,5
 4025a6c:	8089883a 	add	r4,r16,r2
 4025a70:	21400115 	stw	r5,4(r4)
 4025a74:	21400215 	stw	r5,8(r4)
 4025a78:	3080cd36 	bltu	r6,r2,4025db0 <_malloc_r+0x794>
 4025a7c:	00810134 	movhi	r2,1028
 4025a80:	10ab4e04 	addi	r2,r2,-21192
 4025a84:	11000017 	ldw	r4,0(r2)
 4025a88:	20c0012e 	bgeu	r4,r3,4025a90 <_malloc_r+0x474>
 4025a8c:	10c00015 	stw	r3,0(r2)
 4025a90:	00810134 	movhi	r2,1028
 4025a94:	10ab4d04 	addi	r2,r2,-21196
 4025a98:	11000017 	ldw	r4,0(r2)
 4025a9c:	9c000217 	ldw	r16,8(r19)
 4025aa0:	20c0012e 	bgeu	r4,r3,4025aa8 <_malloc_r+0x48c>
 4025aa4:	10c00015 	stw	r3,0(r2)
 4025aa8:	80c00117 	ldw	r3,4(r16)
 4025aac:	00bfff04 	movi	r2,-4
 4025ab0:	1886703a 	and	r3,r3,r2
 4025ab4:	1c45c83a 	sub	r2,r3,r17
 4025ab8:	1c400236 	bltu	r3,r17,4025ac4 <_malloc_r+0x4a8>
 4025abc:	00c003c4 	movi	r3,15
 4025ac0:	18800416 	blt	r3,r2,4025ad4 <_malloc_r+0x4b8>
 4025ac4:	9009883a 	mov	r4,r18
 4025ac8:	40345540 	call	4034554 <__malloc_unlock>
 4025acc:	0005883a 	mov	r2,zero
 4025ad0:	003f7b06 	br	40258c0 <_gp+0xfffe46c0>
 4025ad4:	88c00054 	ori	r3,r17,1
 4025ad8:	80c00115 	stw	r3,4(r16)
 4025adc:	8463883a 	add	r17,r16,r17
 4025ae0:	10800054 	ori	r2,r2,1
 4025ae4:	9c400215 	stw	r17,8(r19)
 4025ae8:	88800115 	stw	r2,4(r17)
 4025aec:	9009883a 	mov	r4,r18
 4025af0:	40345540 	call	4034554 <__malloc_unlock>
 4025af4:	80800204 	addi	r2,r16,8
 4025af8:	003f7106 	br	40258c0 <_gp+0xfffe46c0>
 4025afc:	00c00504 	movi	r3,20
 4025b00:	18804a2e 	bgeu	r3,r2,4025c2c <_malloc_r+0x610>
 4025b04:	00c01504 	movi	r3,84
 4025b08:	18806e36 	bltu	r3,r2,4025cc4 <_malloc_r+0x6a8>
 4025b0c:	8804d33a 	srli	r2,r17,12
 4025b10:	12001bc4 	addi	r8,r2,111
 4025b14:	11c01b84 	addi	r7,r2,110
 4025b18:	4209883a 	add	r4,r8,r8
 4025b1c:	003edd06 	br	4025694 <_gp+0xfffe4494>
 4025b20:	3804d27a 	srli	r2,r7,9
 4025b24:	00c00104 	movi	r3,4
 4025b28:	1880442e 	bgeu	r3,r2,4025c3c <_malloc_r+0x620>
 4025b2c:	00c00504 	movi	r3,20
 4025b30:	18808136 	bltu	r3,r2,4025d38 <_malloc_r+0x71c>
 4025b34:	11401704 	addi	r5,r2,92
 4025b38:	10c016c4 	addi	r3,r2,91
 4025b3c:	294b883a 	add	r5,r5,r5
 4025b40:	294b883a 	add	r5,r5,r5
 4025b44:	294b883a 	add	r5,r5,r5
 4025b48:	994b883a 	add	r5,r19,r5
 4025b4c:	28800017 	ldw	r2,0(r5)
 4025b50:	018100f4 	movhi	r6,1027
 4025b54:	297ffe04 	addi	r5,r5,-8
 4025b58:	319ede04 	addi	r6,r6,31608
 4025b5c:	28806526 	beq	r5,r2,4025cf4 <_malloc_r+0x6d8>
 4025b60:	01bfff04 	movi	r6,-4
 4025b64:	10c00117 	ldw	r3,4(r2)
 4025b68:	1986703a 	and	r3,r3,r6
 4025b6c:	38c0022e 	bgeu	r7,r3,4025b78 <_malloc_r+0x55c>
 4025b70:	10800217 	ldw	r2,8(r2)
 4025b74:	28bffb1e 	bne	r5,r2,4025b64 <_gp+0xfffe4964>
 4025b78:	11400317 	ldw	r5,12(r2)
 4025b7c:	98c00117 	ldw	r3,4(r19)
 4025b80:	81400315 	stw	r5,12(r16)
 4025b84:	80800215 	stw	r2,8(r16)
 4025b88:	2c000215 	stw	r16,8(r5)
 4025b8c:	14000315 	stw	r16,12(r2)
 4025b90:	003ef806 	br	4025774 <_gp+0xfffe4574>
 4025b94:	88c00054 	ori	r3,r17,1
 4025b98:	80c00115 	stw	r3,4(r16)
 4025b9c:	8463883a 	add	r17,r16,r17
 4025ba0:	34400515 	stw	r17,20(r6)
 4025ba4:	34400415 	stw	r17,16(r6)
 4025ba8:	10c00054 	ori	r3,r2,1
 4025bac:	8a000315 	stw	r8,12(r17)
 4025bb0:	8a000215 	stw	r8,8(r17)
 4025bb4:	88c00115 	stw	r3,4(r17)
 4025bb8:	88a3883a 	add	r17,r17,r2
 4025bbc:	88800015 	stw	r2,0(r17)
 4025bc0:	9009883a 	mov	r4,r18
 4025bc4:	40345540 	call	4034554 <__malloc_unlock>
 4025bc8:	80800204 	addi	r2,r16,8
 4025bcc:	003f3c06 	br	40258c0 <_gp+0xfffe46c0>
 4025bd0:	30c00117 	ldw	r3,4(r6)
 4025bd4:	003ee706 	br	4025774 <_gp+0xfffe4574>
 4025bd8:	5ac00044 	addi	r11,r11,1
 4025bdc:	588000cc 	andi	r2,r11,3
 4025be0:	31800204 	addi	r6,r6,8
 4025be4:	103efd1e 	bne	r2,zero,40257dc <_gp+0xfffe45dc>
 4025be8:	00002406 	br	4025c7c <_malloc_r+0x660>
 4025bec:	14000317 	ldw	r16,12(r2)
 4025bf0:	143f251e 	bne	r2,r16,4025888 <_gp+0xfffe4688>
 4025bf4:	21000084 	addi	r4,r4,2
 4025bf8:	003ebc06 	br	40256ec <_gp+0xfffe44ec>
 4025bfc:	8085883a 	add	r2,r16,r2
 4025c00:	10c00117 	ldw	r3,4(r2)
 4025c04:	81000317 	ldw	r4,12(r16)
 4025c08:	81400217 	ldw	r5,8(r16)
 4025c0c:	18c00054 	ori	r3,r3,1
 4025c10:	10c00115 	stw	r3,4(r2)
 4025c14:	29000315 	stw	r4,12(r5)
 4025c18:	21400215 	stw	r5,8(r4)
 4025c1c:	9009883a 	mov	r4,r18
 4025c20:	40345540 	call	4034554 <__malloc_unlock>
 4025c24:	80800204 	addi	r2,r16,8
 4025c28:	003f2506 	br	40258c0 <_gp+0xfffe46c0>
 4025c2c:	12001704 	addi	r8,r2,92
 4025c30:	11c016c4 	addi	r7,r2,91
 4025c34:	4209883a 	add	r4,r8,r8
 4025c38:	003e9606 	br	4025694 <_gp+0xfffe4494>
 4025c3c:	3804d1ba 	srli	r2,r7,6
 4025c40:	11400e44 	addi	r5,r2,57
 4025c44:	10c00e04 	addi	r3,r2,56
 4025c48:	294b883a 	add	r5,r5,r5
 4025c4c:	003fbc06 	br	4025b40 <_gp+0xfffe4940>
 4025c50:	84ff5926 	beq	r16,r19,40259b8 <_gp+0xfffe47b8>
 4025c54:	008100f4 	movhi	r2,1027
 4025c58:	109ede04 	addi	r2,r2,31608
 4025c5c:	14000217 	ldw	r16,8(r2)
 4025c60:	00bfff04 	movi	r2,-4
 4025c64:	80c00117 	ldw	r3,4(r16)
 4025c68:	1886703a 	and	r3,r3,r2
 4025c6c:	003f9106 	br	4025ab4 <_gp+0xfffe48b4>
 4025c70:	60800217 	ldw	r2,8(r12)
 4025c74:	213fffc4 	addi	r4,r4,-1
 4025c78:	1300651e 	bne	r2,r12,4025e10 <_malloc_r+0x7f4>
 4025c7c:	208000cc 	andi	r2,r4,3
 4025c80:	633ffe04 	addi	r12,r12,-8
 4025c84:	103ffa1e 	bne	r2,zero,4025c70 <_gp+0xfffe4a70>
 4025c88:	98800117 	ldw	r2,4(r19)
 4025c8c:	0146303a 	nor	r3,zero,r5
 4025c90:	1884703a 	and	r2,r3,r2
 4025c94:	98800115 	stw	r2,4(r19)
 4025c98:	294b883a 	add	r5,r5,r5
 4025c9c:	117f2836 	bltu	r2,r5,4025940 <_gp+0xfffe4740>
 4025ca0:	283f2726 	beq	r5,zero,4025940 <_gp+0xfffe4740>
 4025ca4:	2886703a 	and	r3,r5,r2
 4025ca8:	5809883a 	mov	r4,r11
 4025cac:	183ec31e 	bne	r3,zero,40257bc <_gp+0xfffe45bc>
 4025cb0:	294b883a 	add	r5,r5,r5
 4025cb4:	2886703a 	and	r3,r5,r2
 4025cb8:	21000104 	addi	r4,r4,4
 4025cbc:	183ffc26 	beq	r3,zero,4025cb0 <_gp+0xfffe4ab0>
 4025cc0:	003ebe06 	br	40257bc <_gp+0xfffe45bc>
 4025cc4:	00c05504 	movi	r3,340
 4025cc8:	18801236 	bltu	r3,r2,4025d14 <_malloc_r+0x6f8>
 4025ccc:	8804d3fa 	srli	r2,r17,15
 4025cd0:	12001e04 	addi	r8,r2,120
 4025cd4:	11c01dc4 	addi	r7,r2,119
 4025cd8:	4209883a 	add	r4,r8,r8
 4025cdc:	003e6d06 	br	4025694 <_gp+0xfffe4494>
 4025ce0:	00c40004 	movi	r3,4096
 4025ce4:	003f4606 	br	4025a00 <_gp+0xfffe4800>
 4025ce8:	00800044 	movi	r2,1
 4025cec:	a0800115 	stw	r2,4(r20)
 4025cf0:	003f7406 	br	4025ac4 <_gp+0xfffe48c4>
 4025cf4:	1805d0ba 	srai	r2,r3,2
 4025cf8:	01c00044 	movi	r7,1
 4025cfc:	30c00117 	ldw	r3,4(r6)
 4025d00:	388e983a 	sll	r7,r7,r2
 4025d04:	2805883a 	mov	r2,r5
 4025d08:	38c6b03a 	or	r3,r7,r3
 4025d0c:	30c00115 	stw	r3,4(r6)
 4025d10:	003f9b06 	br	4025b80 <_gp+0xfffe4980>
 4025d14:	00c15504 	movi	r3,1364
 4025d18:	18801a36 	bltu	r3,r2,4025d84 <_malloc_r+0x768>
 4025d1c:	8804d4ba 	srli	r2,r17,18
 4025d20:	12001f44 	addi	r8,r2,125
 4025d24:	11c01f04 	addi	r7,r2,124
 4025d28:	4209883a 	add	r4,r8,r8
 4025d2c:	003e5906 	br	4025694 <_gp+0xfffe4494>
 4025d30:	ad400404 	addi	r21,r21,16
 4025d34:	003f1706 	br	4025994 <_gp+0xfffe4794>
 4025d38:	00c01504 	movi	r3,84
 4025d3c:	18802336 	bltu	r3,r2,4025dcc <_malloc_r+0x7b0>
 4025d40:	3804d33a 	srli	r2,r7,12
 4025d44:	11401bc4 	addi	r5,r2,111
 4025d48:	10c01b84 	addi	r3,r2,110
 4025d4c:	294b883a 	add	r5,r5,r5
 4025d50:	003f7b06 	br	4025b40 <_gp+0xfffe4940>
 4025d54:	9c000217 	ldw	r16,8(r19)
 4025d58:	00bfff04 	movi	r2,-4
 4025d5c:	80c00117 	ldw	r3,4(r16)
 4025d60:	1886703a 	and	r3,r3,r2
 4025d64:	003f5306 	br	4025ab4 <_gp+0xfffe48b4>
 4025d68:	3083ffcc 	andi	r2,r6,4095
 4025d6c:	103f181e 	bne	r2,zero,40259d0 <_gp+0xfffe47d0>
 4025d70:	99000217 	ldw	r4,8(r19)
 4025d74:	b545883a 	add	r2,r22,r21
 4025d78:	10800054 	ori	r2,r2,1
 4025d7c:	20800115 	stw	r2,4(r4)
 4025d80:	003f3e06 	br	4025a7c <_gp+0xfffe487c>
 4025d84:	01003f84 	movi	r4,254
 4025d88:	02001fc4 	movi	r8,127
 4025d8c:	01c01f84 	movi	r7,126
 4025d90:	003e4006 	br	4025694 <_gp+0xfffe4494>
 4025d94:	00810134 	movhi	r2,1028
 4025d98:	10a48204 	addi	r2,r2,-28152
 4025d9c:	15000015 	stw	r20,0(r2)
 4025da0:	003f1106 	br	40259e8 <_gp+0xfffe47e8>
 4025da4:	00800044 	movi	r2,1
 4025da8:	002b883a 	mov	r21,zero
 4025dac:	003f1f06 	br	4025a2c <_gp+0xfffe482c>
 4025db0:	81400204 	addi	r5,r16,8
 4025db4:	9009883a 	mov	r4,r18
 4025db8:	40249ec0 	call	40249ec <_free_r>
 4025dbc:	00810134 	movhi	r2,1028
 4025dc0:	10ab5a04 	addi	r2,r2,-21144
 4025dc4:	10c00017 	ldw	r3,0(r2)
 4025dc8:	003f2c06 	br	4025a7c <_gp+0xfffe487c>
 4025dcc:	00c05504 	movi	r3,340
 4025dd0:	18800536 	bltu	r3,r2,4025de8 <_malloc_r+0x7cc>
 4025dd4:	3804d3fa 	srli	r2,r7,15
 4025dd8:	11401e04 	addi	r5,r2,120
 4025ddc:	10c01dc4 	addi	r3,r2,119
 4025de0:	294b883a 	add	r5,r5,r5
 4025de4:	003f5606 	br	4025b40 <_gp+0xfffe4940>
 4025de8:	00c15504 	movi	r3,1364
 4025dec:	18800536 	bltu	r3,r2,4025e04 <_malloc_r+0x7e8>
 4025df0:	3804d4ba 	srli	r2,r7,18
 4025df4:	11401f44 	addi	r5,r2,125
 4025df8:	10c01f04 	addi	r3,r2,124
 4025dfc:	294b883a 	add	r5,r5,r5
 4025e00:	003f4f06 	br	4025b40 <_gp+0xfffe4940>
 4025e04:	01403f84 	movi	r5,254
 4025e08:	00c01f84 	movi	r3,126
 4025e0c:	003f4c06 	br	4025b40 <_gp+0xfffe4940>
 4025e10:	98800117 	ldw	r2,4(r19)
 4025e14:	003fa006 	br	4025c98 <_gp+0xfffe4a98>
 4025e18:	8808d0fa 	srli	r4,r17,3
 4025e1c:	20800044 	addi	r2,r4,1
 4025e20:	1085883a 	add	r2,r2,r2
 4025e24:	003e9006 	br	4025868 <_gp+0xfffe4668>

04025e28 <memset>:
 4025e28:	20c000cc 	andi	r3,r4,3
 4025e2c:	2005883a 	mov	r2,r4
 4025e30:	18004426 	beq	r3,zero,4025f44 <memset+0x11c>
 4025e34:	31ffffc4 	addi	r7,r6,-1
 4025e38:	30004026 	beq	r6,zero,4025f3c <memset+0x114>
 4025e3c:	2813883a 	mov	r9,r5
 4025e40:	200d883a 	mov	r6,r4
 4025e44:	2007883a 	mov	r3,r4
 4025e48:	00000406 	br	4025e5c <memset+0x34>
 4025e4c:	3a3fffc4 	addi	r8,r7,-1
 4025e50:	31800044 	addi	r6,r6,1
 4025e54:	38003926 	beq	r7,zero,4025f3c <memset+0x114>
 4025e58:	400f883a 	mov	r7,r8
 4025e5c:	18c00044 	addi	r3,r3,1
 4025e60:	32400005 	stb	r9,0(r6)
 4025e64:	1a0000cc 	andi	r8,r3,3
 4025e68:	403ff81e 	bne	r8,zero,4025e4c <_gp+0xfffe4c4c>
 4025e6c:	010000c4 	movi	r4,3
 4025e70:	21c02d2e 	bgeu	r4,r7,4025f28 <memset+0x100>
 4025e74:	29003fcc 	andi	r4,r5,255
 4025e78:	200c923a 	slli	r6,r4,8
 4025e7c:	3108b03a 	or	r4,r6,r4
 4025e80:	200c943a 	slli	r6,r4,16
 4025e84:	218cb03a 	or	r6,r4,r6
 4025e88:	010003c4 	movi	r4,15
 4025e8c:	21c0182e 	bgeu	r4,r7,4025ef0 <memset+0xc8>
 4025e90:	3b3ffc04 	addi	r12,r7,-16
 4025e94:	6018d13a 	srli	r12,r12,4
 4025e98:	1a000104 	addi	r8,r3,4
 4025e9c:	1ac00204 	addi	r11,r3,8
 4025ea0:	6008913a 	slli	r4,r12,4
 4025ea4:	1a800304 	addi	r10,r3,12
 4025ea8:	1813883a 	mov	r9,r3
 4025eac:	21000504 	addi	r4,r4,20
 4025eb0:	1909883a 	add	r4,r3,r4
 4025eb4:	49800015 	stw	r6,0(r9)
 4025eb8:	41800015 	stw	r6,0(r8)
 4025ebc:	59800015 	stw	r6,0(r11)
 4025ec0:	51800015 	stw	r6,0(r10)
 4025ec4:	42000404 	addi	r8,r8,16
 4025ec8:	4a400404 	addi	r9,r9,16
 4025ecc:	5ac00404 	addi	r11,r11,16
 4025ed0:	52800404 	addi	r10,r10,16
 4025ed4:	413ff71e 	bne	r8,r4,4025eb4 <_gp+0xfffe4cb4>
 4025ed8:	63000044 	addi	r12,r12,1
 4025edc:	6018913a 	slli	r12,r12,4
 4025ee0:	39c003cc 	andi	r7,r7,15
 4025ee4:	010000c4 	movi	r4,3
 4025ee8:	1b07883a 	add	r3,r3,r12
 4025eec:	21c00e2e 	bgeu	r4,r7,4025f28 <memset+0x100>
 4025ef0:	1813883a 	mov	r9,r3
 4025ef4:	3811883a 	mov	r8,r7
 4025ef8:	010000c4 	movi	r4,3
 4025efc:	49800015 	stw	r6,0(r9)
 4025f00:	423fff04 	addi	r8,r8,-4
 4025f04:	4a400104 	addi	r9,r9,4
 4025f08:	223ffc36 	bltu	r4,r8,4025efc <_gp+0xfffe4cfc>
 4025f0c:	393fff04 	addi	r4,r7,-4
 4025f10:	2008d0ba 	srli	r4,r4,2
 4025f14:	39c000cc 	andi	r7,r7,3
 4025f18:	21000044 	addi	r4,r4,1
 4025f1c:	2109883a 	add	r4,r4,r4
 4025f20:	2109883a 	add	r4,r4,r4
 4025f24:	1907883a 	add	r3,r3,r4
 4025f28:	38000526 	beq	r7,zero,4025f40 <memset+0x118>
 4025f2c:	19cf883a 	add	r7,r3,r7
 4025f30:	19400005 	stb	r5,0(r3)
 4025f34:	18c00044 	addi	r3,r3,1
 4025f38:	38fffd1e 	bne	r7,r3,4025f30 <_gp+0xfffe4d30>
 4025f3c:	f800283a 	ret
 4025f40:	f800283a 	ret
 4025f44:	2007883a 	mov	r3,r4
 4025f48:	300f883a 	mov	r7,r6
 4025f4c:	003fc706 	br	4025e6c <_gp+0xfffe4c6c>

04025f50 <_open_r>:
 4025f50:	defffd04 	addi	sp,sp,-12
 4025f54:	2805883a 	mov	r2,r5
 4025f58:	dc000015 	stw	r16,0(sp)
 4025f5c:	04010134 	movhi	r16,1028
 4025f60:	dc400115 	stw	r17,4(sp)
 4025f64:	300b883a 	mov	r5,r6
 4025f68:	842b4c04 	addi	r16,r16,-21200
 4025f6c:	2023883a 	mov	r17,r4
 4025f70:	380d883a 	mov	r6,r7
 4025f74:	1009883a 	mov	r4,r2
 4025f78:	dfc00215 	stw	ra,8(sp)
 4025f7c:	80000015 	stw	zero,0(r16)
 4025f80:	40346780 	call	4034678 <open>
 4025f84:	00ffffc4 	movi	r3,-1
 4025f88:	10c00526 	beq	r2,r3,4025fa0 <_open_r+0x50>
 4025f8c:	dfc00217 	ldw	ra,8(sp)
 4025f90:	dc400117 	ldw	r17,4(sp)
 4025f94:	dc000017 	ldw	r16,0(sp)
 4025f98:	dec00304 	addi	sp,sp,12
 4025f9c:	f800283a 	ret
 4025fa0:	80c00017 	ldw	r3,0(r16)
 4025fa4:	183ff926 	beq	r3,zero,4025f8c <_gp+0xfffe4d8c>
 4025fa8:	88c00015 	stw	r3,0(r17)
 4025fac:	003ff706 	br	4025f8c <_gp+0xfffe4d8c>

04025fb0 <_printf_r>:
 4025fb0:	defffd04 	addi	sp,sp,-12
 4025fb4:	2805883a 	mov	r2,r5
 4025fb8:	dfc00015 	stw	ra,0(sp)
 4025fbc:	d9800115 	stw	r6,4(sp)
 4025fc0:	d9c00215 	stw	r7,8(sp)
 4025fc4:	21400217 	ldw	r5,8(r4)
 4025fc8:	d9c00104 	addi	r7,sp,4
 4025fcc:	100d883a 	mov	r6,r2
 4025fd0:	40287a40 	call	40287a4 <___vfprintf_internal_r>
 4025fd4:	dfc00017 	ldw	ra,0(sp)
 4025fd8:	dec00304 	addi	sp,sp,12
 4025fdc:	f800283a 	ret

04025fe0 <printf>:
 4025fe0:	defffc04 	addi	sp,sp,-16
 4025fe4:	dfc00015 	stw	ra,0(sp)
 4025fe8:	d9400115 	stw	r5,4(sp)
 4025fec:	d9800215 	stw	r6,8(sp)
 4025ff0:	d9c00315 	stw	r7,12(sp)
 4025ff4:	00810134 	movhi	r2,1028
 4025ff8:	10a48104 	addi	r2,r2,-28156
 4025ffc:	10800017 	ldw	r2,0(r2)
 4026000:	200b883a 	mov	r5,r4
 4026004:	d9800104 	addi	r6,sp,4
 4026008:	11000217 	ldw	r4,8(r2)
 402600c:	402a99c0 	call	402a99c <__vfprintf_internal>
 4026010:	dfc00017 	ldw	ra,0(sp)
 4026014:	dec00404 	addi	sp,sp,16
 4026018:	f800283a 	ret

0402601c <_puts_r>:
 402601c:	defff604 	addi	sp,sp,-40
 4026020:	dc000715 	stw	r16,28(sp)
 4026024:	2021883a 	mov	r16,r4
 4026028:	2809883a 	mov	r4,r5
 402602c:	dc400815 	stw	r17,32(sp)
 4026030:	dfc00915 	stw	ra,36(sp)
 4026034:	2823883a 	mov	r17,r5
 4026038:	40265340 	call	4026534 <strlen>
 402603c:	10c00044 	addi	r3,r2,1
 4026040:	d8800115 	stw	r2,4(sp)
 4026044:	008100f4 	movhi	r2,1027
 4026048:	109d0804 	addi	r2,r2,29728
 402604c:	d8800215 	stw	r2,8(sp)
 4026050:	00800044 	movi	r2,1
 4026054:	d8800315 	stw	r2,12(sp)
 4026058:	00800084 	movi	r2,2
 402605c:	dc400015 	stw	r17,0(sp)
 4026060:	d8c00615 	stw	r3,24(sp)
 4026064:	dec00415 	stw	sp,16(sp)
 4026068:	d8800515 	stw	r2,20(sp)
 402606c:	80000226 	beq	r16,zero,4026078 <_puts_r+0x5c>
 4026070:	80800e17 	ldw	r2,56(r16)
 4026074:	10001426 	beq	r2,zero,40260c8 <_puts_r+0xac>
 4026078:	81400217 	ldw	r5,8(r16)
 402607c:	2880030b 	ldhu	r2,12(r5)
 4026080:	10c8000c 	andi	r3,r2,8192
 4026084:	1800061e 	bne	r3,zero,40260a0 <_puts_r+0x84>
 4026088:	29001917 	ldw	r4,100(r5)
 402608c:	00f7ffc4 	movi	r3,-8193
 4026090:	10880014 	ori	r2,r2,8192
 4026094:	20c6703a 	and	r3,r4,r3
 4026098:	2880030d 	sth	r2,12(r5)
 402609c:	28c01915 	stw	r3,100(r5)
 40260a0:	d9800404 	addi	r6,sp,16
 40260a4:	8009883a 	mov	r4,r16
 40260a8:	402c5b00 	call	402c5b0 <__sfvwrite_r>
 40260ac:	1000091e 	bne	r2,zero,40260d4 <_puts_r+0xb8>
 40260b0:	00800284 	movi	r2,10
 40260b4:	dfc00917 	ldw	ra,36(sp)
 40260b8:	dc400817 	ldw	r17,32(sp)
 40260bc:	dc000717 	ldw	r16,28(sp)
 40260c0:	dec00a04 	addi	sp,sp,40
 40260c4:	f800283a 	ret
 40260c8:	8009883a 	mov	r4,r16
 40260cc:	40247200 	call	4024720 <__sinit>
 40260d0:	003fe906 	br	4026078 <_gp+0xfffe4e78>
 40260d4:	00bfffc4 	movi	r2,-1
 40260d8:	003ff606 	br	40260b4 <_gp+0xfffe4eb4>

040260dc <puts>:
 40260dc:	00810134 	movhi	r2,1028
 40260e0:	10a48104 	addi	r2,r2,-28156
 40260e4:	200b883a 	mov	r5,r4
 40260e8:	11000017 	ldw	r4,0(r2)
 40260ec:	402601c1 	jmpi	402601c <_puts_r>

040260f0 <lflush>:
 40260f0:	2080030b 	ldhu	r2,12(r4)
 40260f4:	00c00244 	movi	r3,9
 40260f8:	1080024c 	andi	r2,r2,9
 40260fc:	10c00226 	beq	r2,r3,4026108 <lflush+0x18>
 4026100:	0005883a 	mov	r2,zero
 4026104:	f800283a 	ret
 4026108:	40243a01 	jmpi	40243a0 <fflush>

0402610c <__srefill_r>:
 402610c:	defffc04 	addi	sp,sp,-16
 4026110:	dc400115 	stw	r17,4(sp)
 4026114:	dc000015 	stw	r16,0(sp)
 4026118:	dfc00315 	stw	ra,12(sp)
 402611c:	dc800215 	stw	r18,8(sp)
 4026120:	2023883a 	mov	r17,r4
 4026124:	2821883a 	mov	r16,r5
 4026128:	20000226 	beq	r4,zero,4026134 <__srefill_r+0x28>
 402612c:	20800e17 	ldw	r2,56(r4)
 4026130:	10003c26 	beq	r2,zero,4026224 <__srefill_r+0x118>
 4026134:	80c0030b 	ldhu	r3,12(r16)
 4026138:	1908000c 	andi	r4,r3,8192
 402613c:	1805883a 	mov	r2,r3
 4026140:	2000071e 	bne	r4,zero,4026160 <__srefill_r+0x54>
 4026144:	81001917 	ldw	r4,100(r16)
 4026148:	18880014 	ori	r2,r3,8192
 402614c:	00f7ffc4 	movi	r3,-8193
 4026150:	20c8703a 	and	r4,r4,r3
 4026154:	8080030d 	sth	r2,12(r16)
 4026158:	1007883a 	mov	r3,r2
 402615c:	81001915 	stw	r4,100(r16)
 4026160:	80000115 	stw	zero,4(r16)
 4026164:	1100080c 	andi	r4,r2,32
 4026168:	2000571e 	bne	r4,zero,40262c8 <__srefill_r+0x1bc>
 402616c:	1100010c 	andi	r4,r2,4
 4026170:	20001f26 	beq	r4,zero,40261f0 <__srefill_r+0xe4>
 4026174:	81400c17 	ldw	r5,48(r16)
 4026178:	28000826 	beq	r5,zero,402619c <__srefill_r+0x90>
 402617c:	80801004 	addi	r2,r16,64
 4026180:	28800226 	beq	r5,r2,402618c <__srefill_r+0x80>
 4026184:	8809883a 	mov	r4,r17
 4026188:	40249ec0 	call	40249ec <_free_r>
 402618c:	80800f17 	ldw	r2,60(r16)
 4026190:	80000c15 	stw	zero,48(r16)
 4026194:	80800115 	stw	r2,4(r16)
 4026198:	1000391e 	bne	r2,zero,4026280 <__srefill_r+0x174>
 402619c:	80800417 	ldw	r2,16(r16)
 40261a0:	10004b26 	beq	r2,zero,40262d0 <__srefill_r+0x1c4>
 40261a4:	8480030b 	ldhu	r18,12(r16)
 40261a8:	908000cc 	andi	r2,r18,3
 40261ac:	10001f1e 	bne	r2,zero,402622c <__srefill_r+0x120>
 40261b0:	81800417 	ldw	r6,16(r16)
 40261b4:	80800817 	ldw	r2,32(r16)
 40261b8:	81c00517 	ldw	r7,20(r16)
 40261bc:	81400717 	ldw	r5,28(r16)
 40261c0:	81800015 	stw	r6,0(r16)
 40261c4:	8809883a 	mov	r4,r17
 40261c8:	103ee83a 	callr	r2
 40261cc:	80800115 	stw	r2,4(r16)
 40261d0:	00800e0e 	bge	zero,r2,402620c <__srefill_r+0x100>
 40261d4:	0005883a 	mov	r2,zero
 40261d8:	dfc00317 	ldw	ra,12(sp)
 40261dc:	dc800217 	ldw	r18,8(sp)
 40261e0:	dc400117 	ldw	r17,4(sp)
 40261e4:	dc000017 	ldw	r16,0(sp)
 40261e8:	dec00404 	addi	sp,sp,16
 40261ec:	f800283a 	ret
 40261f0:	1100040c 	andi	r4,r2,16
 40261f4:	20003026 	beq	r4,zero,40262b8 <__srefill_r+0x1ac>
 40261f8:	1080020c 	andi	r2,r2,8
 40261fc:	1000241e 	bne	r2,zero,4026290 <__srefill_r+0x184>
 4026200:	18c00114 	ori	r3,r3,4
 4026204:	80c0030d 	sth	r3,12(r16)
 4026208:	003fe406 	br	402619c <_gp+0xfffe4f9c>
 402620c:	80c0030b 	ldhu	r3,12(r16)
 4026210:	1000161e 	bne	r2,zero,402626c <__srefill_r+0x160>
 4026214:	18c00814 	ori	r3,r3,32
 4026218:	00bfffc4 	movi	r2,-1
 402621c:	80c0030d 	sth	r3,12(r16)
 4026220:	003fed06 	br	40261d8 <_gp+0xfffe4fd8>
 4026224:	40247200 	call	4024720 <__sinit>
 4026228:	003fc206 	br	4026134 <_gp+0xfffe4f34>
 402622c:	00810134 	movhi	r2,1028
 4026230:	10a48004 	addi	r2,r2,-28160
 4026234:	11000017 	ldw	r4,0(r2)
 4026238:	014100b4 	movhi	r5,1026
 402623c:	00800044 	movi	r2,1
 4026240:	29583c04 	addi	r5,r5,24816
 4026244:	8080030d 	sth	r2,12(r16)
 4026248:	40251d80 	call	40251d8 <_fwalk>
 402624c:	00800244 	movi	r2,9
 4026250:	8480030d 	sth	r18,12(r16)
 4026254:	9480024c 	andi	r18,r18,9
 4026258:	90bfd51e 	bne	r18,r2,40261b0 <_gp+0xfffe4fb0>
 402625c:	800b883a 	mov	r5,r16
 4026260:	8809883a 	mov	r4,r17
 4026264:	40241280 	call	4024128 <__sflush_r>
 4026268:	003fd106 	br	40261b0 <_gp+0xfffe4fb0>
 402626c:	18c01014 	ori	r3,r3,64
 4026270:	80000115 	stw	zero,4(r16)
 4026274:	00bfffc4 	movi	r2,-1
 4026278:	80c0030d 	sth	r3,12(r16)
 402627c:	003fd606 	br	40261d8 <_gp+0xfffe4fd8>
 4026280:	80c00e17 	ldw	r3,56(r16)
 4026284:	0005883a 	mov	r2,zero
 4026288:	80c00015 	stw	r3,0(r16)
 402628c:	003fd206 	br	40261d8 <_gp+0xfffe4fd8>
 4026290:	800b883a 	mov	r5,r16
 4026294:	8809883a 	mov	r4,r17
 4026298:	40243440 	call	4024344 <_fflush_r>
 402629c:	10000a1e 	bne	r2,zero,40262c8 <__srefill_r+0x1bc>
 40262a0:	8080030b 	ldhu	r2,12(r16)
 40262a4:	00fffdc4 	movi	r3,-9
 40262a8:	80000215 	stw	zero,8(r16)
 40262ac:	1886703a 	and	r3,r3,r2
 40262b0:	80000615 	stw	zero,24(r16)
 40262b4:	003fd206 	br	4026200 <_gp+0xfffe5000>
 40262b8:	00800244 	movi	r2,9
 40262bc:	88800015 	stw	r2,0(r17)
 40262c0:	18c01014 	ori	r3,r3,64
 40262c4:	80c0030d 	sth	r3,12(r16)
 40262c8:	00bfffc4 	movi	r2,-1
 40262cc:	003fc206 	br	40261d8 <_gp+0xfffe4fd8>
 40262d0:	800b883a 	mov	r5,r16
 40262d4:	8809883a 	mov	r4,r17
 40262d8:	40254600 	call	4025460 <__smakebuf_r>
 40262dc:	003fb106 	br	40261a4 <_gp+0xfffe4fa4>

040262e0 <_sbrk_r>:
 40262e0:	defffd04 	addi	sp,sp,-12
 40262e4:	dc000015 	stw	r16,0(sp)
 40262e8:	04010134 	movhi	r16,1028
 40262ec:	dc400115 	stw	r17,4(sp)
 40262f0:	842b4c04 	addi	r16,r16,-21200
 40262f4:	2023883a 	mov	r17,r4
 40262f8:	2809883a 	mov	r4,r5
 40262fc:	dfc00215 	stw	ra,8(sp)
 4026300:	80000015 	stw	zero,0(r16)
 4026304:	4034bd00 	call	4034bd0 <sbrk>
 4026308:	00ffffc4 	movi	r3,-1
 402630c:	10c00526 	beq	r2,r3,4026324 <_sbrk_r+0x44>
 4026310:	dfc00217 	ldw	ra,8(sp)
 4026314:	dc400117 	ldw	r17,4(sp)
 4026318:	dc000017 	ldw	r16,0(sp)
 402631c:	dec00304 	addi	sp,sp,12
 4026320:	f800283a 	ret
 4026324:	80c00017 	ldw	r3,0(r16)
 4026328:	183ff926 	beq	r3,zero,4026310 <_gp+0xfffe5110>
 402632c:	88c00015 	stw	r3,0(r17)
 4026330:	003ff706 	br	4026310 <_gp+0xfffe5110>

04026334 <_sprintf_r>:
 4026334:	deffe404 	addi	sp,sp,-112
 4026338:	2807883a 	mov	r3,r5
 402633c:	dfc01a15 	stw	ra,104(sp)
 4026340:	d9c01b15 	stw	r7,108(sp)
 4026344:	00a00034 	movhi	r2,32768
 4026348:	10bfffc4 	addi	r2,r2,-1
 402634c:	02008204 	movi	r8,520
 4026350:	d8800215 	stw	r2,8(sp)
 4026354:	d8800515 	stw	r2,20(sp)
 4026358:	d9c01b04 	addi	r7,sp,108
 402635c:	d80b883a 	mov	r5,sp
 4026360:	00bfffc4 	movi	r2,-1
 4026364:	d8c00015 	stw	r3,0(sp)
 4026368:	d8c00415 	stw	r3,16(sp)
 402636c:	da00030d 	sth	r8,12(sp)
 4026370:	d880038d 	sth	r2,14(sp)
 4026374:	40265cc0 	call	40265cc <___svfprintf_internal_r>
 4026378:	d8c00017 	ldw	r3,0(sp)
 402637c:	18000005 	stb	zero,0(r3)
 4026380:	dfc01a17 	ldw	ra,104(sp)
 4026384:	dec01c04 	addi	sp,sp,112
 4026388:	f800283a 	ret

0402638c <sprintf>:
 402638c:	deffe304 	addi	sp,sp,-116
 4026390:	2007883a 	mov	r3,r4
 4026394:	dfc01a15 	stw	ra,104(sp)
 4026398:	d9801b15 	stw	r6,108(sp)
 402639c:	d9c01c15 	stw	r7,112(sp)
 40263a0:	01010134 	movhi	r4,1028
 40263a4:	21248104 	addi	r4,r4,-28156
 40263a8:	21000017 	ldw	r4,0(r4)
 40263ac:	00a00034 	movhi	r2,32768
 40263b0:	10bfffc4 	addi	r2,r2,-1
 40263b4:	280d883a 	mov	r6,r5
 40263b8:	02008204 	movi	r8,520
 40263bc:	d8800215 	stw	r2,8(sp)
 40263c0:	d8800515 	stw	r2,20(sp)
 40263c4:	d9c01b04 	addi	r7,sp,108
 40263c8:	d80b883a 	mov	r5,sp
 40263cc:	00bfffc4 	movi	r2,-1
 40263d0:	d8c00015 	stw	r3,0(sp)
 40263d4:	d8c00415 	stw	r3,16(sp)
 40263d8:	da00030d 	sth	r8,12(sp)
 40263dc:	d880038d 	sth	r2,14(sp)
 40263e0:	40265cc0 	call	40265cc <___svfprintf_internal_r>
 40263e4:	d8c00017 	ldw	r3,0(sp)
 40263e8:	18000005 	stb	zero,0(r3)
 40263ec:	dfc01a17 	ldw	ra,104(sp)
 40263f0:	dec01d04 	addi	sp,sp,116
 40263f4:	f800283a 	ret

040263f8 <__sread>:
 40263f8:	defffe04 	addi	sp,sp,-8
 40263fc:	dc000015 	stw	r16,0(sp)
 4026400:	2821883a 	mov	r16,r5
 4026404:	2940038f 	ldh	r5,14(r5)
 4026408:	dfc00115 	stw	ra,4(sp)
 402640c:	402df800 	call	402df80 <_read_r>
 4026410:	10000716 	blt	r2,zero,4026430 <__sread+0x38>
 4026414:	80c01417 	ldw	r3,80(r16)
 4026418:	1887883a 	add	r3,r3,r2
 402641c:	80c01415 	stw	r3,80(r16)
 4026420:	dfc00117 	ldw	ra,4(sp)
 4026424:	dc000017 	ldw	r16,0(sp)
 4026428:	dec00204 	addi	sp,sp,8
 402642c:	f800283a 	ret
 4026430:	80c0030b 	ldhu	r3,12(r16)
 4026434:	18fbffcc 	andi	r3,r3,61439
 4026438:	80c0030d 	sth	r3,12(r16)
 402643c:	dfc00117 	ldw	ra,4(sp)
 4026440:	dc000017 	ldw	r16,0(sp)
 4026444:	dec00204 	addi	sp,sp,8
 4026448:	f800283a 	ret

0402644c <__seofread>:
 402644c:	0005883a 	mov	r2,zero
 4026450:	f800283a 	ret

04026454 <__swrite>:
 4026454:	2880030b 	ldhu	r2,12(r5)
 4026458:	defffb04 	addi	sp,sp,-20
 402645c:	dcc00315 	stw	r19,12(sp)
 4026460:	dc800215 	stw	r18,8(sp)
 4026464:	dc400115 	stw	r17,4(sp)
 4026468:	dc000015 	stw	r16,0(sp)
 402646c:	dfc00415 	stw	ra,16(sp)
 4026470:	10c0400c 	andi	r3,r2,256
 4026474:	2821883a 	mov	r16,r5
 4026478:	2023883a 	mov	r17,r4
 402647c:	3025883a 	mov	r18,r6
 4026480:	3827883a 	mov	r19,r7
 4026484:	18000526 	beq	r3,zero,402649c <__swrite+0x48>
 4026488:	2940038f 	ldh	r5,14(r5)
 402648c:	01c00084 	movi	r7,2
 4026490:	000d883a 	mov	r6,zero
 4026494:	402cb9c0 	call	402cb9c <_lseek_r>
 4026498:	8080030b 	ldhu	r2,12(r16)
 402649c:	8140038f 	ldh	r5,14(r16)
 40264a0:	10bbffcc 	andi	r2,r2,61439
 40264a4:	980f883a 	mov	r7,r19
 40264a8:	900d883a 	mov	r6,r18
 40264ac:	8809883a 	mov	r4,r17
 40264b0:	8080030d 	sth	r2,12(r16)
 40264b4:	dfc00417 	ldw	ra,16(sp)
 40264b8:	dcc00317 	ldw	r19,12(sp)
 40264bc:	dc800217 	ldw	r18,8(sp)
 40264c0:	dc400117 	ldw	r17,4(sp)
 40264c4:	dc000017 	ldw	r16,0(sp)
 40264c8:	dec00504 	addi	sp,sp,20
 40264cc:	402aa741 	jmpi	402aa74 <_write_r>

040264d0 <__sseek>:
 40264d0:	defffe04 	addi	sp,sp,-8
 40264d4:	dc000015 	stw	r16,0(sp)
 40264d8:	2821883a 	mov	r16,r5
 40264dc:	2940038f 	ldh	r5,14(r5)
 40264e0:	dfc00115 	stw	ra,4(sp)
 40264e4:	402cb9c0 	call	402cb9c <_lseek_r>
 40264e8:	00ffffc4 	movi	r3,-1
 40264ec:	10c00826 	beq	r2,r3,4026510 <__sseek+0x40>
 40264f0:	80c0030b 	ldhu	r3,12(r16)
 40264f4:	80801415 	stw	r2,80(r16)
 40264f8:	18c40014 	ori	r3,r3,4096
 40264fc:	80c0030d 	sth	r3,12(r16)
 4026500:	dfc00117 	ldw	ra,4(sp)
 4026504:	dc000017 	ldw	r16,0(sp)
 4026508:	dec00204 	addi	sp,sp,8
 402650c:	f800283a 	ret
 4026510:	80c0030b 	ldhu	r3,12(r16)
 4026514:	18fbffcc 	andi	r3,r3,61439
 4026518:	80c0030d 	sth	r3,12(r16)
 402651c:	dfc00117 	ldw	ra,4(sp)
 4026520:	dc000017 	ldw	r16,0(sp)
 4026524:	dec00204 	addi	sp,sp,8
 4026528:	f800283a 	ret

0402652c <__sclose>:
 402652c:	2940038f 	ldh	r5,14(r5)
 4026530:	402ac281 	jmpi	402ac28 <_close_r>

04026534 <strlen>:
 4026534:	208000cc 	andi	r2,r4,3
 4026538:	10002026 	beq	r2,zero,40265bc <strlen+0x88>
 402653c:	20800007 	ldb	r2,0(r4)
 4026540:	10002026 	beq	r2,zero,40265c4 <strlen+0x90>
 4026544:	2005883a 	mov	r2,r4
 4026548:	00000206 	br	4026554 <strlen+0x20>
 402654c:	10c00007 	ldb	r3,0(r2)
 4026550:	18001826 	beq	r3,zero,40265b4 <strlen+0x80>
 4026554:	10800044 	addi	r2,r2,1
 4026558:	10c000cc 	andi	r3,r2,3
 402655c:	183ffb1e 	bne	r3,zero,402654c <_gp+0xfffe534c>
 4026560:	10c00017 	ldw	r3,0(r2)
 4026564:	01ffbff4 	movhi	r7,65279
 4026568:	39ffbfc4 	addi	r7,r7,-257
 402656c:	00ca303a 	nor	r5,zero,r3
 4026570:	01a02074 	movhi	r6,32897
 4026574:	19c7883a 	add	r3,r3,r7
 4026578:	31a02004 	addi	r6,r6,-32640
 402657c:	1946703a 	and	r3,r3,r5
 4026580:	1986703a 	and	r3,r3,r6
 4026584:	1800091e 	bne	r3,zero,40265ac <strlen+0x78>
 4026588:	10800104 	addi	r2,r2,4
 402658c:	10c00017 	ldw	r3,0(r2)
 4026590:	19cb883a 	add	r5,r3,r7
 4026594:	00c6303a 	nor	r3,zero,r3
 4026598:	28c6703a 	and	r3,r5,r3
 402659c:	1986703a 	and	r3,r3,r6
 40265a0:	183ff926 	beq	r3,zero,4026588 <_gp+0xfffe5388>
 40265a4:	00000106 	br	40265ac <strlen+0x78>
 40265a8:	10800044 	addi	r2,r2,1
 40265ac:	10c00007 	ldb	r3,0(r2)
 40265b0:	183ffd1e 	bne	r3,zero,40265a8 <_gp+0xfffe53a8>
 40265b4:	1105c83a 	sub	r2,r2,r4
 40265b8:	f800283a 	ret
 40265bc:	2005883a 	mov	r2,r4
 40265c0:	003fe706 	br	4026560 <_gp+0xfffe5360>
 40265c4:	0005883a 	mov	r2,zero
 40265c8:	f800283a 	ret

040265cc <___svfprintf_internal_r>:
 40265cc:	deffb704 	addi	sp,sp,-292
 40265d0:	dfc04815 	stw	ra,288(sp)
 40265d4:	ddc04615 	stw	r23,280(sp)
 40265d8:	d9402c15 	stw	r5,176(sp)
 40265dc:	d9003915 	stw	r4,228(sp)
 40265e0:	302f883a 	mov	r23,r6
 40265e4:	d9c02d15 	stw	r7,180(sp)
 40265e8:	df004715 	stw	fp,284(sp)
 40265ec:	dd804515 	stw	r22,276(sp)
 40265f0:	dd404415 	stw	r21,272(sp)
 40265f4:	dd004315 	stw	r20,268(sp)
 40265f8:	dcc04215 	stw	r19,264(sp)
 40265fc:	dc804115 	stw	r18,260(sp)
 4026600:	dc404015 	stw	r17,256(sp)
 4026604:	dc003f15 	stw	r16,252(sp)
 4026608:	402cb6c0 	call	402cb6c <_localeconv_r>
 402660c:	10800017 	ldw	r2,0(r2)
 4026610:	1009883a 	mov	r4,r2
 4026614:	d8803415 	stw	r2,208(sp)
 4026618:	40265340 	call	4026534 <strlen>
 402661c:	d8c02c17 	ldw	r3,176(sp)
 4026620:	d8803815 	stw	r2,224(sp)
 4026624:	1880030b 	ldhu	r2,12(r3)
 4026628:	1080200c 	andi	r2,r2,128
 402662c:	10000226 	beq	r2,zero,4026638 <___svfprintf_internal_r+0x6c>
 4026630:	18800417 	ldw	r2,16(r3)
 4026634:	10067f26 	beq	r2,zero,4028034 <___svfprintf_internal_r+0x1a68>
 4026638:	dcc03917 	ldw	r19,228(sp)
 402663c:	d8c00404 	addi	r3,sp,16
 4026640:	054100f4 	movhi	r21,1027
 4026644:	d9001e04 	addi	r4,sp,120
 4026648:	ad5d1984 	addi	r21,r21,29798
 402664c:	d8c01e15 	stw	r3,120(sp)
 4026650:	d8002015 	stw	zero,128(sp)
 4026654:	d8001f15 	stw	zero,124(sp)
 4026658:	d8003315 	stw	zero,204(sp)
 402665c:	d8003615 	stw	zero,216(sp)
 4026660:	d8003715 	stw	zero,220(sp)
 4026664:	1811883a 	mov	r8,r3
 4026668:	d8003a15 	stw	zero,232(sp)
 402666c:	d8003b15 	stw	zero,236(sp)
 4026670:	d8002f15 	stw	zero,188(sp)
 4026674:	d9002815 	stw	r4,160(sp)
 4026678:	b8800007 	ldb	r2,0(r23)
 402667c:	10026726 	beq	r2,zero,402701c <___svfprintf_internal_r+0xa50>
 4026680:	00c00944 	movi	r3,37
 4026684:	b821883a 	mov	r16,r23
 4026688:	10c0021e 	bne	r2,r3,4026694 <___svfprintf_internal_r+0xc8>
 402668c:	00001406 	br	40266e0 <___svfprintf_internal_r+0x114>
 4026690:	10c00326 	beq	r2,r3,40266a0 <___svfprintf_internal_r+0xd4>
 4026694:	84000044 	addi	r16,r16,1
 4026698:	80800007 	ldb	r2,0(r16)
 402669c:	103ffc1e 	bne	r2,zero,4026690 <_gp+0xfffe5490>
 40266a0:	85e3c83a 	sub	r17,r16,r23
 40266a4:	88000e26 	beq	r17,zero,40266e0 <___svfprintf_internal_r+0x114>
 40266a8:	d8c02017 	ldw	r3,128(sp)
 40266ac:	d8801f17 	ldw	r2,124(sp)
 40266b0:	45c00015 	stw	r23,0(r8)
 40266b4:	1c47883a 	add	r3,r3,r17
 40266b8:	10800044 	addi	r2,r2,1
 40266bc:	d8c02015 	stw	r3,128(sp)
 40266c0:	44400115 	stw	r17,4(r8)
 40266c4:	d8801f15 	stw	r2,124(sp)
 40266c8:	00c001c4 	movi	r3,7
 40266cc:	18809716 	blt	r3,r2,402692c <___svfprintf_internal_r+0x360>
 40266d0:	42000204 	addi	r8,r8,8
 40266d4:	d9402f17 	ldw	r5,188(sp)
 40266d8:	2c4b883a 	add	r5,r5,r17
 40266dc:	d9402f15 	stw	r5,188(sp)
 40266e0:	80800007 	ldb	r2,0(r16)
 40266e4:	10009826 	beq	r2,zero,4026948 <___svfprintf_internal_r+0x37c>
 40266e8:	84400047 	ldb	r17,1(r16)
 40266ec:	00bfffc4 	movi	r2,-1
 40266f0:	85c00044 	addi	r23,r16,1
 40266f4:	d8002785 	stb	zero,158(sp)
 40266f8:	0007883a 	mov	r3,zero
 40266fc:	000f883a 	mov	r7,zero
 4026700:	d8802915 	stw	r2,164(sp)
 4026704:	d8003115 	stw	zero,196(sp)
 4026708:	0025883a 	mov	r18,zero
 402670c:	01401604 	movi	r5,88
 4026710:	01800244 	movi	r6,9
 4026714:	02800a84 	movi	r10,42
 4026718:	02401b04 	movi	r9,108
 402671c:	bdc00044 	addi	r23,r23,1
 4026720:	88bff804 	addi	r2,r17,-32
 4026724:	2882f036 	bltu	r5,r2,40272e8 <___svfprintf_internal_r+0xd1c>
 4026728:	100490ba 	slli	r2,r2,2
 402672c:	010100b4 	movhi	r4,1026
 4026730:	2119d004 	addi	r4,r4,26432
 4026734:	1105883a 	add	r2,r2,r4
 4026738:	10800017 	ldw	r2,0(r2)
 402673c:	1000683a 	jmp	r2
 4026740:	04027250 	cmplti	r16,zero,2505
 4026744:	040272e8 	cmpgeui	r16,zero,2507
 4026748:	040272e8 	cmpgeui	r16,zero,2507
 402674c:	04027244 	movi	r16,2505
 4026750:	040272e8 	cmpgeui	r16,zero,2507
 4026754:	040272e8 	cmpgeui	r16,zero,2507
 4026758:	040272e8 	cmpgeui	r16,zero,2507
 402675c:	040272e8 	cmpgeui	r16,zero,2507
 4026760:	040272e8 	cmpgeui	r16,zero,2507
 4026764:	040272e8 	cmpgeui	r16,zero,2507
 4026768:	040269a4 	muli	r16,zero,2470
 402676c:	04027180 	call	402718 <__alt_mem_SDRAM_Controller+0x402718>
 4026770:	040272e8 	cmpgeui	r16,zero,2507
 4026774:	040268b4 	movhi	r16,2466
 4026778:	040269cc 	andi	r16,zero,2471
 402677c:	040272e8 	cmpgeui	r16,zero,2507
 4026780:	04026a40 	call	4026a4 <__alt_mem_SDRAM_Controller+0x4026a4>
 4026784:	04026a0c 	andi	r16,zero,2472
 4026788:	04026a0c 	andi	r16,zero,2472
 402678c:	04026a0c 	andi	r16,zero,2472
 4026790:	04026a0c 	andi	r16,zero,2472
 4026794:	04026a0c 	andi	r16,zero,2472
 4026798:	04026a0c 	andi	r16,zero,2472
 402679c:	04026a0c 	andi	r16,zero,2472
 40267a0:	04026a0c 	andi	r16,zero,2472
 40267a4:	04026a0c 	andi	r16,zero,2472
 40267a8:	040272e8 	cmpgeui	r16,zero,2507
 40267ac:	040272e8 	cmpgeui	r16,zero,2507
 40267b0:	040272e8 	cmpgeui	r16,zero,2507
 40267b4:	040272e8 	cmpgeui	r16,zero,2507
 40267b8:	040272e8 	cmpgeui	r16,zero,2507
 40267bc:	040272e8 	cmpgeui	r16,zero,2507
 40267c0:	040272e8 	cmpgeui	r16,zero,2507
 40267c4:	040272e8 	cmpgeui	r16,zero,2507
 40267c8:	040272e8 	cmpgeui	r16,zero,2507
 40267cc:	040272e8 	cmpgeui	r16,zero,2507
 40267d0:	04026af8 	rdprs	r16,zero,2475
 40267d4:	04026a4c 	andi	r16,zero,2473
 40267d8:	040272e8 	cmpgeui	r16,zero,2507
 40267dc:	04026a4c 	andi	r16,zero,2473
 40267e0:	040272e8 	cmpgeui	r16,zero,2507
 40267e4:	040272e8 	cmpgeui	r16,zero,2507
 40267e8:	040272e8 	cmpgeui	r16,zero,2507
 40267ec:	040272e8 	cmpgeui	r16,zero,2507
 40267f0:	04026aec 	andhi	r16,zero,2475
 40267f4:	040272e8 	cmpgeui	r16,zero,2507
 40267f8:	040272e8 	cmpgeui	r16,zero,2507
 40267fc:	04026bb4 	movhi	r16,2478
 4026800:	040272e8 	cmpgeui	r16,zero,2507
 4026804:	040272e8 	cmpgeui	r16,zero,2507
 4026808:	040272e8 	cmpgeui	r16,zero,2507
 402680c:	040272e8 	cmpgeui	r16,zero,2507
 4026810:	040272e8 	cmpgeui	r16,zero,2507
 4026814:	04027024 	muli	r16,zero,2496
 4026818:	040272e8 	cmpgeui	r16,zero,2507
 402681c:	040272e8 	cmpgeui	r16,zero,2507
 4026820:	04027084 	movi	r16,2498
 4026824:	040272e8 	cmpgeui	r16,zero,2507
 4026828:	040272e8 	cmpgeui	r16,zero,2507
 402682c:	040272e8 	cmpgeui	r16,zero,2507
 4026830:	040272e8 	cmpgeui	r16,zero,2507
 4026834:	040272e8 	cmpgeui	r16,zero,2507
 4026838:	040272e8 	cmpgeui	r16,zero,2507
 402683c:	040272e8 	cmpgeui	r16,zero,2507
 4026840:	040272e8 	cmpgeui	r16,zero,2507
 4026844:	040272e8 	cmpgeui	r16,zero,2507
 4026848:	040272e8 	cmpgeui	r16,zero,2507
 402684c:	04027134 	movhi	r16,2500
 4026850:	04027270 	cmpltui	r16,zero,2505
 4026854:	04026a4c 	andi	r16,zero,2473
 4026858:	04026a4c 	andi	r16,zero,2473
 402685c:	04026a4c 	andi	r16,zero,2473
 4026860:	040272c4 	movi	r16,2507
 4026864:	04027270 	cmpltui	r16,zero,2505
 4026868:	040272e8 	cmpgeui	r16,zero,2507
 402686c:	040272e8 	cmpgeui	r16,zero,2507
 4026870:	04027280 	call	402728 <__alt_mem_SDRAM_Controller+0x402728>
 4026874:	040272e8 	cmpgeui	r16,zero,2507
 4026878:	04027290 	cmplti	r16,zero,2506
 402687c:	04027170 	cmpltui	r16,zero,2501
 4026880:	040268c0 	call	40268c <__alt_mem_SDRAM_Controller+0x40268c>
 4026884:	04027190 	cmplti	r16,zero,2502
 4026888:	040272e8 	cmpgeui	r16,zero,2507
 402688c:	0402719c 	xori	r16,zero,2502
 4026890:	040272e8 	cmpgeui	r16,zero,2507
 4026894:	040271f8 	rdprs	r16,zero,2503
 4026898:	040272e8 	cmpgeui	r16,zero,2507
 402689c:	040272e8 	cmpgeui	r16,zero,2507
 40268a0:	04027208 	cmpgei	r16,zero,2504
 40268a4:	d9003117 	ldw	r4,196(sp)
 40268a8:	d8802d15 	stw	r2,180(sp)
 40268ac:	0109c83a 	sub	r4,zero,r4
 40268b0:	d9003115 	stw	r4,196(sp)
 40268b4:	94800114 	ori	r18,r18,4
 40268b8:	bc400007 	ldb	r17,0(r23)
 40268bc:	003f9706 	br	402671c <_gp+0xfffe551c>
 40268c0:	00800c04 	movi	r2,48
 40268c4:	d9002d17 	ldw	r4,180(sp)
 40268c8:	d9402917 	ldw	r5,164(sp)
 40268cc:	d8802705 	stb	r2,156(sp)
 40268d0:	00801e04 	movi	r2,120
 40268d4:	d8802745 	stb	r2,157(sp)
 40268d8:	d8002785 	stb	zero,158(sp)
 40268dc:	20c00104 	addi	r3,r4,4
 40268e0:	25000017 	ldw	r20,0(r4)
 40268e4:	002d883a 	mov	r22,zero
 40268e8:	90800094 	ori	r2,r18,2
 40268ec:	28028616 	blt	r5,zero,4027308 <___svfprintf_internal_r+0xd3c>
 40268f0:	00bfdfc4 	movi	r2,-129
 40268f4:	90a4703a 	and	r18,r18,r2
 40268f8:	d8c02d15 	stw	r3,180(sp)
 40268fc:	94800094 	ori	r18,r18,2
 4026900:	a002731e 	bne	r20,zero,40272d0 <___svfprintf_internal_r+0xd04>
 4026904:	008100f4 	movhi	r2,1027
 4026908:	109d1204 	addi	r2,r2,29768
 402690c:	d8803a15 	stw	r2,232(sp)
 4026910:	04401e04 	movi	r17,120
 4026914:	d8c02917 	ldw	r3,164(sp)
 4026918:	0039883a 	mov	fp,zero
 402691c:	1801d526 	beq	r3,zero,4027074 <___svfprintf_internal_r+0xaa8>
 4026920:	0029883a 	mov	r20,zero
 4026924:	002d883a 	mov	r22,zero
 4026928:	0001f106 	br	40270f0 <___svfprintf_internal_r+0xb24>
 402692c:	d9402c17 	ldw	r5,176(sp)
 4026930:	d9801e04 	addi	r6,sp,120
 4026934:	9809883a 	mov	r4,r19
 4026938:	402e6940 	call	402e694 <__ssprint_r>
 402693c:	1000081e 	bne	r2,zero,4026960 <___svfprintf_internal_r+0x394>
 4026940:	da000404 	addi	r8,sp,16
 4026944:	003f6306 	br	40266d4 <_gp+0xfffe54d4>
 4026948:	d8802017 	ldw	r2,128(sp)
 402694c:	10000426 	beq	r2,zero,4026960 <___svfprintf_internal_r+0x394>
 4026950:	d9402c17 	ldw	r5,176(sp)
 4026954:	d9003917 	ldw	r4,228(sp)
 4026958:	d9801e04 	addi	r6,sp,120
 402695c:	402e6940 	call	402e694 <__ssprint_r>
 4026960:	d8802c17 	ldw	r2,176(sp)
 4026964:	10c0030b 	ldhu	r3,12(r2)
 4026968:	d8802f17 	ldw	r2,188(sp)
 402696c:	18c0100c 	andi	r3,r3,64
 4026970:	1805f51e 	bne	r3,zero,4028148 <___svfprintf_internal_r+0x1b7c>
 4026974:	dfc04817 	ldw	ra,288(sp)
 4026978:	df004717 	ldw	fp,284(sp)
 402697c:	ddc04617 	ldw	r23,280(sp)
 4026980:	dd804517 	ldw	r22,276(sp)
 4026984:	dd404417 	ldw	r21,272(sp)
 4026988:	dd004317 	ldw	r20,268(sp)
 402698c:	dcc04217 	ldw	r19,264(sp)
 4026990:	dc804117 	ldw	r18,260(sp)
 4026994:	dc404017 	ldw	r17,256(sp)
 4026998:	dc003f17 	ldw	r16,252(sp)
 402699c:	dec04904 	addi	sp,sp,292
 40269a0:	f800283a 	ret
 40269a4:	d8802d17 	ldw	r2,180(sp)
 40269a8:	d9002d17 	ldw	r4,180(sp)
 40269ac:	10800017 	ldw	r2,0(r2)
 40269b0:	d8803115 	stw	r2,196(sp)
 40269b4:	20800104 	addi	r2,r4,4
 40269b8:	d9003117 	ldw	r4,196(sp)
 40269bc:	203fb916 	blt	r4,zero,40268a4 <_gp+0xfffe56a4>
 40269c0:	d8802d15 	stw	r2,180(sp)
 40269c4:	bc400007 	ldb	r17,0(r23)
 40269c8:	003f5406 	br	402671c <_gp+0xfffe551c>
 40269cc:	bc400007 	ldb	r17,0(r23)
 40269d0:	bac00044 	addi	r11,r23,1
 40269d4:	8a873926 	beq	r17,r10,40286bc <___svfprintf_internal_r+0x20f0>
 40269d8:	88bff404 	addi	r2,r17,-48
 40269dc:	0009883a 	mov	r4,zero
 40269e0:	30868836 	bltu	r6,r2,4028404 <___svfprintf_internal_r+0x1e38>
 40269e4:	5c400007 	ldb	r17,0(r11)
 40269e8:	210002a4 	muli	r4,r4,10
 40269ec:	5dc00044 	addi	r23,r11,1
 40269f0:	b817883a 	mov	r11,r23
 40269f4:	2089883a 	add	r4,r4,r2
 40269f8:	88bff404 	addi	r2,r17,-48
 40269fc:	30bff92e 	bgeu	r6,r2,40269e4 <_gp+0xfffe57e4>
 4026a00:	2005d716 	blt	r4,zero,4028160 <___svfprintf_internal_r+0x1b94>
 4026a04:	d9002915 	stw	r4,164(sp)
 4026a08:	003f4506 	br	4026720 <_gp+0xfffe5520>
 4026a0c:	b809883a 	mov	r4,r23
 4026a10:	d8003115 	stw	zero,196(sp)
 4026a14:	88bff404 	addi	r2,r17,-48
 4026a18:	0017883a 	mov	r11,zero
 4026a1c:	24400007 	ldb	r17,0(r4)
 4026a20:	5ac002a4 	muli	r11,r11,10
 4026a24:	bdc00044 	addi	r23,r23,1
 4026a28:	b809883a 	mov	r4,r23
 4026a2c:	12d7883a 	add	r11,r2,r11
 4026a30:	88bff404 	addi	r2,r17,-48
 4026a34:	30bff92e 	bgeu	r6,r2,4026a1c <_gp+0xfffe581c>
 4026a38:	dac03115 	stw	r11,196(sp)
 4026a3c:	003f3806 	br	4026720 <_gp+0xfffe5520>
 4026a40:	94802014 	ori	r18,r18,128
 4026a44:	bc400007 	ldb	r17,0(r23)
 4026a48:	003f3406 	br	402671c <_gp+0xfffe551c>
 4026a4c:	18c03fcc 	andi	r3,r3,255
 4026a50:	1807471e 	bne	r3,zero,4028770 <___svfprintf_internal_r+0x21a4>
 4026a54:	9080020c 	andi	r2,r18,8
 4026a58:	10047d26 	beq	r2,zero,4027c50 <___svfprintf_internal_r+0x1684>
 4026a5c:	d8c02d17 	ldw	r3,180(sp)
 4026a60:	d9002d17 	ldw	r4,180(sp)
 4026a64:	d9402d17 	ldw	r5,180(sp)
 4026a68:	18c00017 	ldw	r3,0(r3)
 4026a6c:	21000117 	ldw	r4,4(r4)
 4026a70:	29400204 	addi	r5,r5,8
 4026a74:	d8c03615 	stw	r3,216(sp)
 4026a78:	d9003715 	stw	r4,220(sp)
 4026a7c:	d9402d15 	stw	r5,180(sp)
 4026a80:	d9003617 	ldw	r4,216(sp)
 4026a84:	d9403717 	ldw	r5,220(sp)
 4026a88:	da003e15 	stw	r8,248(sp)
 4026a8c:	04000044 	movi	r16,1
 4026a90:	402e5440 	call	402e544 <__fpclassifyd>
 4026a94:	da003e17 	ldw	r8,248(sp)
 4026a98:	14044b1e 	bne	r2,r16,4027bc8 <___svfprintf_internal_r+0x15fc>
 4026a9c:	d9003617 	ldw	r4,216(sp)
 4026aa0:	d9403717 	ldw	r5,220(sp)
 4026aa4:	000d883a 	mov	r6,zero
 4026aa8:	000f883a 	mov	r7,zero
 4026aac:	403349c0 	call	403349c <__ledf2>
 4026ab0:	da003e17 	ldw	r8,248(sp)
 4026ab4:	1005f316 	blt	r2,zero,4028284 <___svfprintf_internal_r+0x1cb8>
 4026ab8:	df002783 	ldbu	fp,158(sp)
 4026abc:	008011c4 	movi	r2,71
 4026ac0:	1445590e 	bge	r2,r17,4028028 <___svfprintf_internal_r+0x1a5c>
 4026ac4:	040100f4 	movhi	r16,1027
 4026ac8:	841d0a04 	addi	r16,r16,29736
 4026acc:	00c000c4 	movi	r3,3
 4026ad0:	00bfdfc4 	movi	r2,-129
 4026ad4:	d8c02a15 	stw	r3,168(sp)
 4026ad8:	90a4703a 	and	r18,r18,r2
 4026adc:	d8c02e15 	stw	r3,184(sp)
 4026ae0:	d8002915 	stw	zero,164(sp)
 4026ae4:	d8003215 	stw	zero,200(sp)
 4026ae8:	00006606 	br	4026c84 <___svfprintf_internal_r+0x6b8>
 4026aec:	94800214 	ori	r18,r18,8
 4026af0:	bc400007 	ldb	r17,0(r23)
 4026af4:	003f0906 	br	402671c <_gp+0xfffe551c>
 4026af8:	18c03fcc 	andi	r3,r3,255
 4026afc:	1807181e 	bne	r3,zero,4028760 <___svfprintf_internal_r+0x2194>
 4026b00:	94800414 	ori	r18,r18,16
 4026b04:	9080080c 	andi	r2,r18,32
 4026b08:	10039626 	beq	r2,zero,4027964 <___svfprintf_internal_r+0x1398>
 4026b0c:	d9402d17 	ldw	r5,180(sp)
 4026b10:	28800117 	ldw	r2,4(r5)
 4026b14:	2d000017 	ldw	r20,0(r5)
 4026b18:	29400204 	addi	r5,r5,8
 4026b1c:	d9402d15 	stw	r5,180(sp)
 4026b20:	102d883a 	mov	r22,r2
 4026b24:	10039816 	blt	r2,zero,4027988 <___svfprintf_internal_r+0x13bc>
 4026b28:	d9402917 	ldw	r5,164(sp)
 4026b2c:	df002783 	ldbu	fp,158(sp)
 4026b30:	2803ab16 	blt	r5,zero,40279e0 <___svfprintf_internal_r+0x1414>
 4026b34:	00ffdfc4 	movi	r3,-129
 4026b38:	a584b03a 	or	r2,r20,r22
 4026b3c:	90e4703a 	and	r18,r18,r3
 4026b40:	10014a26 	beq	r2,zero,402706c <___svfprintf_internal_r+0xaa0>
 4026b44:	b0034b26 	beq	r22,zero,4027874 <___svfprintf_internal_r+0x12a8>
 4026b48:	dc402a15 	stw	r17,168(sp)
 4026b4c:	dc001e04 	addi	r16,sp,120
 4026b50:	b023883a 	mov	r17,r22
 4026b54:	402d883a 	mov	r22,r8
 4026b58:	a009883a 	mov	r4,r20
 4026b5c:	880b883a 	mov	r5,r17
 4026b60:	01800284 	movi	r6,10
 4026b64:	000f883a 	mov	r7,zero
 4026b68:	4031c6c0 	call	4031c6c <__umoddi3>
 4026b6c:	10800c04 	addi	r2,r2,48
 4026b70:	843fffc4 	addi	r16,r16,-1
 4026b74:	a009883a 	mov	r4,r20
 4026b78:	880b883a 	mov	r5,r17
 4026b7c:	80800005 	stb	r2,0(r16)
 4026b80:	01800284 	movi	r6,10
 4026b84:	000f883a 	mov	r7,zero
 4026b88:	40316f40 	call	40316f4 <__udivdi3>
 4026b8c:	1029883a 	mov	r20,r2
 4026b90:	10c4b03a 	or	r2,r2,r3
 4026b94:	1823883a 	mov	r17,r3
 4026b98:	103fef1e 	bne	r2,zero,4026b58 <_gp+0xfffe5958>
 4026b9c:	d8c02817 	ldw	r3,160(sp)
 4026ba0:	dc402a17 	ldw	r17,168(sp)
 4026ba4:	b011883a 	mov	r8,r22
 4026ba8:	1c07c83a 	sub	r3,r3,r16
 4026bac:	d8c02e15 	stw	r3,184(sp)
 4026bb0:	00002e06 	br	4026c6c <___svfprintf_internal_r+0x6a0>
 4026bb4:	18c03fcc 	andi	r3,r3,255
 4026bb8:	1806e71e 	bne	r3,zero,4028758 <___svfprintf_internal_r+0x218c>
 4026bbc:	94800414 	ori	r18,r18,16
 4026bc0:	9080080c 	andi	r2,r18,32
 4026bc4:	1002d426 	beq	r2,zero,4027718 <___svfprintf_internal_r+0x114c>
 4026bc8:	d9402d17 	ldw	r5,180(sp)
 4026bcc:	d8c02917 	ldw	r3,164(sp)
 4026bd0:	d8002785 	stb	zero,158(sp)
 4026bd4:	28800204 	addi	r2,r5,8
 4026bd8:	2d000017 	ldw	r20,0(r5)
 4026bdc:	2d800117 	ldw	r22,4(r5)
 4026be0:	18041516 	blt	r3,zero,4027c38 <___svfprintf_internal_r+0x166c>
 4026be4:	013fdfc4 	movi	r4,-129
 4026be8:	a586b03a 	or	r3,r20,r22
 4026bec:	d8802d15 	stw	r2,180(sp)
 4026bf0:	9124703a 	and	r18,r18,r4
 4026bf4:	1802d51e 	bne	r3,zero,402774c <___svfprintf_internal_r+0x1180>
 4026bf8:	d9402917 	ldw	r5,164(sp)
 4026bfc:	0039883a 	mov	fp,zero
 4026c00:	2806be26 	beq	r5,zero,40286fc <___svfprintf_internal_r+0x2130>
 4026c04:	0029883a 	mov	r20,zero
 4026c08:	002d883a 	mov	r22,zero
 4026c0c:	dc001e04 	addi	r16,sp,120
 4026c10:	a006d0fa 	srli	r3,r20,3
 4026c14:	b008977a 	slli	r4,r22,29
 4026c18:	b02cd0fa 	srli	r22,r22,3
 4026c1c:	a50001cc 	andi	r20,r20,7
 4026c20:	a0800c04 	addi	r2,r20,48
 4026c24:	843fffc4 	addi	r16,r16,-1
 4026c28:	20e8b03a 	or	r20,r4,r3
 4026c2c:	80800005 	stb	r2,0(r16)
 4026c30:	a586b03a 	or	r3,r20,r22
 4026c34:	183ff61e 	bne	r3,zero,4026c10 <_gp+0xfffe5a10>
 4026c38:	90c0004c 	andi	r3,r18,1
 4026c3c:	18013926 	beq	r3,zero,4027124 <___svfprintf_internal_r+0xb58>
 4026c40:	10803fcc 	andi	r2,r2,255
 4026c44:	1080201c 	xori	r2,r2,128
 4026c48:	10bfe004 	addi	r2,r2,-128
 4026c4c:	00c00c04 	movi	r3,48
 4026c50:	10c13426 	beq	r2,r3,4027124 <___svfprintf_internal_r+0xb58>
 4026c54:	80ffffc5 	stb	r3,-1(r16)
 4026c58:	d8c02817 	ldw	r3,160(sp)
 4026c5c:	80bfffc4 	addi	r2,r16,-1
 4026c60:	1021883a 	mov	r16,r2
 4026c64:	1887c83a 	sub	r3,r3,r2
 4026c68:	d8c02e15 	stw	r3,184(sp)
 4026c6c:	d8802e17 	ldw	r2,184(sp)
 4026c70:	d9002917 	ldw	r4,164(sp)
 4026c74:	1100010e 	bge	r2,r4,4026c7c <___svfprintf_internal_r+0x6b0>
 4026c78:	2005883a 	mov	r2,r4
 4026c7c:	d8802a15 	stw	r2,168(sp)
 4026c80:	d8003215 	stw	zero,200(sp)
 4026c84:	e7003fcc 	andi	fp,fp,255
 4026c88:	e700201c 	xori	fp,fp,128
 4026c8c:	e73fe004 	addi	fp,fp,-128
 4026c90:	e0000326 	beq	fp,zero,4026ca0 <___svfprintf_internal_r+0x6d4>
 4026c94:	d8c02a17 	ldw	r3,168(sp)
 4026c98:	18c00044 	addi	r3,r3,1
 4026c9c:	d8c02a15 	stw	r3,168(sp)
 4026ca0:	90c0008c 	andi	r3,r18,2
 4026ca4:	d8c02b15 	stw	r3,172(sp)
 4026ca8:	18000326 	beq	r3,zero,4026cb8 <___svfprintf_internal_r+0x6ec>
 4026cac:	d8c02a17 	ldw	r3,168(sp)
 4026cb0:	18c00084 	addi	r3,r3,2
 4026cb4:	d8c02a15 	stw	r3,168(sp)
 4026cb8:	90c0210c 	andi	r3,r18,132
 4026cbc:	d8c03015 	stw	r3,192(sp)
 4026cc0:	1801a11e 	bne	r3,zero,4027348 <___svfprintf_internal_r+0xd7c>
 4026cc4:	d9003117 	ldw	r4,196(sp)
 4026cc8:	d8c02a17 	ldw	r3,168(sp)
 4026ccc:	20e9c83a 	sub	r20,r4,r3
 4026cd0:	05019d0e 	bge	zero,r20,4027348 <___svfprintf_internal_r+0xd7c>
 4026cd4:	02400404 	movi	r9,16
 4026cd8:	d8c02017 	ldw	r3,128(sp)
 4026cdc:	d8801f17 	ldw	r2,124(sp)
 4026ce0:	4d051b0e 	bge	r9,r20,4028150 <___svfprintf_internal_r+0x1b84>
 4026ce4:	014100f4 	movhi	r5,1027
 4026ce8:	295d1d84 	addi	r5,r5,29814
 4026cec:	dc403c15 	stw	r17,240(sp)
 4026cf0:	d9403515 	stw	r5,212(sp)
 4026cf4:	a023883a 	mov	r17,r20
 4026cf8:	482d883a 	mov	r22,r9
 4026cfc:	9029883a 	mov	r20,r18
 4026d00:	070001c4 	movi	fp,7
 4026d04:	8025883a 	mov	r18,r16
 4026d08:	dc002c17 	ldw	r16,176(sp)
 4026d0c:	00000306 	br	4026d1c <___svfprintf_internal_r+0x750>
 4026d10:	8c7ffc04 	addi	r17,r17,-16
 4026d14:	42000204 	addi	r8,r8,8
 4026d18:	b440130e 	bge	r22,r17,4026d68 <___svfprintf_internal_r+0x79c>
 4026d1c:	010100f4 	movhi	r4,1027
 4026d20:	18c00404 	addi	r3,r3,16
 4026d24:	10800044 	addi	r2,r2,1
 4026d28:	211d1d84 	addi	r4,r4,29814
 4026d2c:	41000015 	stw	r4,0(r8)
 4026d30:	45800115 	stw	r22,4(r8)
 4026d34:	d8c02015 	stw	r3,128(sp)
 4026d38:	d8801f15 	stw	r2,124(sp)
 4026d3c:	e0bff40e 	bge	fp,r2,4026d10 <_gp+0xfffe5b10>
 4026d40:	d9801e04 	addi	r6,sp,120
 4026d44:	800b883a 	mov	r5,r16
 4026d48:	9809883a 	mov	r4,r19
 4026d4c:	402e6940 	call	402e694 <__ssprint_r>
 4026d50:	103f031e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4026d54:	8c7ffc04 	addi	r17,r17,-16
 4026d58:	d8c02017 	ldw	r3,128(sp)
 4026d5c:	d8801f17 	ldw	r2,124(sp)
 4026d60:	da000404 	addi	r8,sp,16
 4026d64:	b47fed16 	blt	r22,r17,4026d1c <_gp+0xfffe5b1c>
 4026d68:	9021883a 	mov	r16,r18
 4026d6c:	a025883a 	mov	r18,r20
 4026d70:	8829883a 	mov	r20,r17
 4026d74:	dc403c17 	ldw	r17,240(sp)
 4026d78:	d9403517 	ldw	r5,212(sp)
 4026d7c:	a0c7883a 	add	r3,r20,r3
 4026d80:	10800044 	addi	r2,r2,1
 4026d84:	41400015 	stw	r5,0(r8)
 4026d88:	45000115 	stw	r20,4(r8)
 4026d8c:	d8c02015 	stw	r3,128(sp)
 4026d90:	d8801f15 	stw	r2,124(sp)
 4026d94:	010001c4 	movi	r4,7
 4026d98:	20829f16 	blt	r4,r2,4027818 <___svfprintf_internal_r+0x124c>
 4026d9c:	df002787 	ldb	fp,158(sp)
 4026da0:	42000204 	addi	r8,r8,8
 4026da4:	e0000c26 	beq	fp,zero,4026dd8 <___svfprintf_internal_r+0x80c>
 4026da8:	d8801f17 	ldw	r2,124(sp)
 4026dac:	d9002784 	addi	r4,sp,158
 4026db0:	18c00044 	addi	r3,r3,1
 4026db4:	10800044 	addi	r2,r2,1
 4026db8:	41000015 	stw	r4,0(r8)
 4026dbc:	01000044 	movi	r4,1
 4026dc0:	41000115 	stw	r4,4(r8)
 4026dc4:	d8c02015 	stw	r3,128(sp)
 4026dc8:	d8801f15 	stw	r2,124(sp)
 4026dcc:	010001c4 	movi	r4,7
 4026dd0:	20823816 	blt	r4,r2,40276b4 <___svfprintf_internal_r+0x10e8>
 4026dd4:	42000204 	addi	r8,r8,8
 4026dd8:	d8802b17 	ldw	r2,172(sp)
 4026ddc:	10000c26 	beq	r2,zero,4026e10 <___svfprintf_internal_r+0x844>
 4026de0:	d8801f17 	ldw	r2,124(sp)
 4026de4:	d9002704 	addi	r4,sp,156
 4026de8:	18c00084 	addi	r3,r3,2
 4026dec:	10800044 	addi	r2,r2,1
 4026df0:	41000015 	stw	r4,0(r8)
 4026df4:	01000084 	movi	r4,2
 4026df8:	41000115 	stw	r4,4(r8)
 4026dfc:	d8c02015 	stw	r3,128(sp)
 4026e00:	d8801f15 	stw	r2,124(sp)
 4026e04:	010001c4 	movi	r4,7
 4026e08:	20823216 	blt	r4,r2,40276d4 <___svfprintf_internal_r+0x1108>
 4026e0c:	42000204 	addi	r8,r8,8
 4026e10:	d9003017 	ldw	r4,192(sp)
 4026e14:	00802004 	movi	r2,128
 4026e18:	20819726 	beq	r4,r2,4027478 <___svfprintf_internal_r+0xeac>
 4026e1c:	d9402917 	ldw	r5,164(sp)
 4026e20:	d8802e17 	ldw	r2,184(sp)
 4026e24:	28adc83a 	sub	r22,r5,r2
 4026e28:	05802f0e 	bge	zero,r22,4026ee8 <___svfprintf_internal_r+0x91c>
 4026e2c:	07000404 	movi	fp,16
 4026e30:	d8801f17 	ldw	r2,124(sp)
 4026e34:	e583c00e 	bge	fp,r22,4027d38 <___svfprintf_internal_r+0x176c>
 4026e38:	014100f4 	movhi	r5,1027
 4026e3c:	295d1984 	addi	r5,r5,29798
 4026e40:	dc402915 	stw	r17,164(sp)
 4026e44:	d9402b15 	stw	r5,172(sp)
 4026e48:	b023883a 	mov	r17,r22
 4026e4c:	050001c4 	movi	r20,7
 4026e50:	902d883a 	mov	r22,r18
 4026e54:	8025883a 	mov	r18,r16
 4026e58:	dc002c17 	ldw	r16,176(sp)
 4026e5c:	00000306 	br	4026e6c <___svfprintf_internal_r+0x8a0>
 4026e60:	8c7ffc04 	addi	r17,r17,-16
 4026e64:	42000204 	addi	r8,r8,8
 4026e68:	e440110e 	bge	fp,r17,4026eb0 <___svfprintf_internal_r+0x8e4>
 4026e6c:	18c00404 	addi	r3,r3,16
 4026e70:	10800044 	addi	r2,r2,1
 4026e74:	45400015 	stw	r21,0(r8)
 4026e78:	47000115 	stw	fp,4(r8)
 4026e7c:	d8c02015 	stw	r3,128(sp)
 4026e80:	d8801f15 	stw	r2,124(sp)
 4026e84:	a0bff60e 	bge	r20,r2,4026e60 <_gp+0xfffe5c60>
 4026e88:	d9801e04 	addi	r6,sp,120
 4026e8c:	800b883a 	mov	r5,r16
 4026e90:	9809883a 	mov	r4,r19
 4026e94:	402e6940 	call	402e694 <__ssprint_r>
 4026e98:	103eb11e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4026e9c:	8c7ffc04 	addi	r17,r17,-16
 4026ea0:	d8c02017 	ldw	r3,128(sp)
 4026ea4:	d8801f17 	ldw	r2,124(sp)
 4026ea8:	da000404 	addi	r8,sp,16
 4026eac:	e47fef16 	blt	fp,r17,4026e6c <_gp+0xfffe5c6c>
 4026eb0:	9021883a 	mov	r16,r18
 4026eb4:	b025883a 	mov	r18,r22
 4026eb8:	882d883a 	mov	r22,r17
 4026ebc:	dc402917 	ldw	r17,164(sp)
 4026ec0:	d9002b17 	ldw	r4,172(sp)
 4026ec4:	1d87883a 	add	r3,r3,r22
 4026ec8:	10800044 	addi	r2,r2,1
 4026ecc:	41000015 	stw	r4,0(r8)
 4026ed0:	45800115 	stw	r22,4(r8)
 4026ed4:	d8c02015 	stw	r3,128(sp)
 4026ed8:	d8801f15 	stw	r2,124(sp)
 4026edc:	010001c4 	movi	r4,7
 4026ee0:	2081ec16 	blt	r4,r2,4027694 <___svfprintf_internal_r+0x10c8>
 4026ee4:	42000204 	addi	r8,r8,8
 4026ee8:	9080400c 	andi	r2,r18,256
 4026eec:	1001181e 	bne	r2,zero,4027350 <___svfprintf_internal_r+0xd84>
 4026ef0:	d9402e17 	ldw	r5,184(sp)
 4026ef4:	d8801f17 	ldw	r2,124(sp)
 4026ef8:	44000015 	stw	r16,0(r8)
 4026efc:	1947883a 	add	r3,r3,r5
 4026f00:	10800044 	addi	r2,r2,1
 4026f04:	41400115 	stw	r5,4(r8)
 4026f08:	d8c02015 	stw	r3,128(sp)
 4026f0c:	d8801f15 	stw	r2,124(sp)
 4026f10:	010001c4 	movi	r4,7
 4026f14:	2081d116 	blt	r4,r2,402765c <___svfprintf_internal_r+0x1090>
 4026f18:	42000204 	addi	r8,r8,8
 4026f1c:	9480010c 	andi	r18,r18,4
 4026f20:	90003226 	beq	r18,zero,4026fec <___svfprintf_internal_r+0xa20>
 4026f24:	d9403117 	ldw	r5,196(sp)
 4026f28:	d8802a17 	ldw	r2,168(sp)
 4026f2c:	28a1c83a 	sub	r16,r5,r2
 4026f30:	04002e0e 	bge	zero,r16,4026fec <___svfprintf_internal_r+0xa20>
 4026f34:	04400404 	movi	r17,16
 4026f38:	d8801f17 	ldw	r2,124(sp)
 4026f3c:	8c04b90e 	bge	r17,r16,4028224 <___svfprintf_internal_r+0x1c58>
 4026f40:	014100f4 	movhi	r5,1027
 4026f44:	295d1d84 	addi	r5,r5,29814
 4026f48:	d9403515 	stw	r5,212(sp)
 4026f4c:	048001c4 	movi	r18,7
 4026f50:	dd002c17 	ldw	r20,176(sp)
 4026f54:	00000306 	br	4026f64 <___svfprintf_internal_r+0x998>
 4026f58:	843ffc04 	addi	r16,r16,-16
 4026f5c:	42000204 	addi	r8,r8,8
 4026f60:	8c00130e 	bge	r17,r16,4026fb0 <___svfprintf_internal_r+0x9e4>
 4026f64:	010100f4 	movhi	r4,1027
 4026f68:	18c00404 	addi	r3,r3,16
 4026f6c:	10800044 	addi	r2,r2,1
 4026f70:	211d1d84 	addi	r4,r4,29814
 4026f74:	41000015 	stw	r4,0(r8)
 4026f78:	44400115 	stw	r17,4(r8)
 4026f7c:	d8c02015 	stw	r3,128(sp)
 4026f80:	d8801f15 	stw	r2,124(sp)
 4026f84:	90bff40e 	bge	r18,r2,4026f58 <_gp+0xfffe5d58>
 4026f88:	d9801e04 	addi	r6,sp,120
 4026f8c:	a00b883a 	mov	r5,r20
 4026f90:	9809883a 	mov	r4,r19
 4026f94:	402e6940 	call	402e694 <__ssprint_r>
 4026f98:	103e711e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4026f9c:	843ffc04 	addi	r16,r16,-16
 4026fa0:	d8c02017 	ldw	r3,128(sp)
 4026fa4:	d8801f17 	ldw	r2,124(sp)
 4026fa8:	da000404 	addi	r8,sp,16
 4026fac:	8c3fed16 	blt	r17,r16,4026f64 <_gp+0xfffe5d64>
 4026fb0:	d9403517 	ldw	r5,212(sp)
 4026fb4:	1c07883a 	add	r3,r3,r16
 4026fb8:	10800044 	addi	r2,r2,1
 4026fbc:	41400015 	stw	r5,0(r8)
 4026fc0:	44000115 	stw	r16,4(r8)
 4026fc4:	d8c02015 	stw	r3,128(sp)
 4026fc8:	d8801f15 	stw	r2,124(sp)
 4026fcc:	010001c4 	movi	r4,7
 4026fd0:	2080060e 	bge	r4,r2,4026fec <___svfprintf_internal_r+0xa20>
 4026fd4:	d9402c17 	ldw	r5,176(sp)
 4026fd8:	d9801e04 	addi	r6,sp,120
 4026fdc:	9809883a 	mov	r4,r19
 4026fe0:	402e6940 	call	402e694 <__ssprint_r>
 4026fe4:	103e5e1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4026fe8:	d8c02017 	ldw	r3,128(sp)
 4026fec:	d8803117 	ldw	r2,196(sp)
 4026ff0:	d9002a17 	ldw	r4,168(sp)
 4026ff4:	1100010e 	bge	r2,r4,4026ffc <___svfprintf_internal_r+0xa30>
 4026ff8:	2005883a 	mov	r2,r4
 4026ffc:	d9402f17 	ldw	r5,188(sp)
 4027000:	288b883a 	add	r5,r5,r2
 4027004:	d9402f15 	stw	r5,188(sp)
 4027008:	18019c1e 	bne	r3,zero,402767c <___svfprintf_internal_r+0x10b0>
 402700c:	b8800007 	ldb	r2,0(r23)
 4027010:	d8001f15 	stw	zero,124(sp)
 4027014:	da000404 	addi	r8,sp,16
 4027018:	103d991e 	bne	r2,zero,4026680 <_gp+0xfffe5480>
 402701c:	b821883a 	mov	r16,r23
 4027020:	003daf06 	br	40266e0 <_gp+0xfffe54e0>
 4027024:	18c03fcc 	andi	r3,r3,255
 4027028:	1805c71e 	bne	r3,zero,4028748 <___svfprintf_internal_r+0x217c>
 402702c:	94800414 	ori	r18,r18,16
 4027030:	9080080c 	andi	r2,r18,32
 4027034:	10020126 	beq	r2,zero,402783c <___svfprintf_internal_r+0x1270>
 4027038:	d8802d17 	ldw	r2,180(sp)
 402703c:	d9002917 	ldw	r4,164(sp)
 4027040:	d8002785 	stb	zero,158(sp)
 4027044:	10c00204 	addi	r3,r2,8
 4027048:	15000017 	ldw	r20,0(r2)
 402704c:	15800117 	ldw	r22,4(r2)
 4027050:	20038e16 	blt	r4,zero,4027e8c <___svfprintf_internal_r+0x18c0>
 4027054:	013fdfc4 	movi	r4,-129
 4027058:	a584b03a 	or	r2,r20,r22
 402705c:	d8c02d15 	stw	r3,180(sp)
 4027060:	9124703a 	and	r18,r18,r4
 4027064:	0039883a 	mov	fp,zero
 4027068:	103eb61e 	bne	r2,zero,4026b44 <_gp+0xfffe5944>
 402706c:	d8802917 	ldw	r2,164(sp)
 4027070:	1002c81e 	bne	r2,zero,4027b94 <___svfprintf_internal_r+0x15c8>
 4027074:	d8002915 	stw	zero,164(sp)
 4027078:	d8002e15 	stw	zero,184(sp)
 402707c:	dc001e04 	addi	r16,sp,120
 4027080:	003efa06 	br	4026c6c <_gp+0xfffe5a6c>
 4027084:	18c03fcc 	andi	r3,r3,255
 4027088:	1805ad1e 	bne	r3,zero,4028740 <___svfprintf_internal_r+0x2174>
 402708c:	014100f4 	movhi	r5,1027
 4027090:	295d0d04 	addi	r5,r5,29748
 4027094:	d9403a15 	stw	r5,232(sp)
 4027098:	9080080c 	andi	r2,r18,32
 402709c:	10006126 	beq	r2,zero,4027224 <___svfprintf_internal_r+0xc58>
 40270a0:	d8802d17 	ldw	r2,180(sp)
 40270a4:	15000017 	ldw	r20,0(r2)
 40270a8:	15800117 	ldw	r22,4(r2)
 40270ac:	10800204 	addi	r2,r2,8
 40270b0:	d8802d15 	stw	r2,180(sp)
 40270b4:	9080004c 	andi	r2,r18,1
 40270b8:	10018e26 	beq	r2,zero,40276f4 <___svfprintf_internal_r+0x1128>
 40270bc:	a584b03a 	or	r2,r20,r22
 40270c0:	10030926 	beq	r2,zero,4027ce8 <___svfprintf_internal_r+0x171c>
 40270c4:	d8c02917 	ldw	r3,164(sp)
 40270c8:	00800c04 	movi	r2,48
 40270cc:	d8802705 	stb	r2,156(sp)
 40270d0:	dc402745 	stb	r17,157(sp)
 40270d4:	d8002785 	stb	zero,158(sp)
 40270d8:	90800094 	ori	r2,r18,2
 40270dc:	18048716 	blt	r3,zero,40282fc <___svfprintf_internal_r+0x1d30>
 40270e0:	00bfdfc4 	movi	r2,-129
 40270e4:	90a4703a 	and	r18,r18,r2
 40270e8:	94800094 	ori	r18,r18,2
 40270ec:	0039883a 	mov	fp,zero
 40270f0:	d9003a17 	ldw	r4,232(sp)
 40270f4:	dc001e04 	addi	r16,sp,120
 40270f8:	a08003cc 	andi	r2,r20,15
 40270fc:	b006973a 	slli	r3,r22,28
 4027100:	2085883a 	add	r2,r4,r2
 4027104:	a028d13a 	srli	r20,r20,4
 4027108:	10800003 	ldbu	r2,0(r2)
 402710c:	b02cd13a 	srli	r22,r22,4
 4027110:	843fffc4 	addi	r16,r16,-1
 4027114:	1d28b03a 	or	r20,r3,r20
 4027118:	80800005 	stb	r2,0(r16)
 402711c:	a584b03a 	or	r2,r20,r22
 4027120:	103ff51e 	bne	r2,zero,40270f8 <_gp+0xfffe5ef8>
 4027124:	d8c02817 	ldw	r3,160(sp)
 4027128:	1c07c83a 	sub	r3,r3,r16
 402712c:	d8c02e15 	stw	r3,184(sp)
 4027130:	003ece06 	br	4026c6c <_gp+0xfffe5a6c>
 4027134:	d8c02d17 	ldw	r3,180(sp)
 4027138:	d9002d17 	ldw	r4,180(sp)
 402713c:	d8002785 	stb	zero,158(sp)
 4027140:	18800017 	ldw	r2,0(r3)
 4027144:	21000104 	addi	r4,r4,4
 4027148:	00c00044 	movi	r3,1
 402714c:	d8c02a15 	stw	r3,168(sp)
 4027150:	d8801405 	stb	r2,80(sp)
 4027154:	d9002d15 	stw	r4,180(sp)
 4027158:	d8c02e15 	stw	r3,184(sp)
 402715c:	d8002915 	stw	zero,164(sp)
 4027160:	d8003215 	stw	zero,200(sp)
 4027164:	dc001404 	addi	r16,sp,80
 4027168:	0039883a 	mov	fp,zero
 402716c:	003ecc06 	br	4026ca0 <_gp+0xfffe5aa0>
 4027170:	18c03fcc 	andi	r3,r3,255
 4027174:	183e9226 	beq	r3,zero,4026bc0 <_gp+0xfffe59c0>
 4027178:	d9c02785 	stb	r7,158(sp)
 402717c:	003e9006 	br	4026bc0 <_gp+0xfffe59c0>
 4027180:	00c00044 	movi	r3,1
 4027184:	01c00ac4 	movi	r7,43
 4027188:	bc400007 	ldb	r17,0(r23)
 402718c:	003d6306 	br	402671c <_gp+0xfffe551c>
 4027190:	94800814 	ori	r18,r18,32
 4027194:	bc400007 	ldb	r17,0(r23)
 4027198:	003d6006 	br	402671c <_gp+0xfffe551c>
 402719c:	d8c02d17 	ldw	r3,180(sp)
 40271a0:	d8002785 	stb	zero,158(sp)
 40271a4:	1c000017 	ldw	r16,0(r3)
 40271a8:	1d000104 	addi	r20,r3,4
 40271ac:	80040f26 	beq	r16,zero,40281ec <___svfprintf_internal_r+0x1c20>
 40271b0:	d9002917 	ldw	r4,164(sp)
 40271b4:	2003dc16 	blt	r4,zero,4028128 <___svfprintf_internal_r+0x1b5c>
 40271b8:	200d883a 	mov	r6,r4
 40271bc:	000b883a 	mov	r5,zero
 40271c0:	8009883a 	mov	r4,r16
 40271c4:	da003e15 	stw	r8,248(sp)
 40271c8:	402cbfc0 	call	402cbfc <memchr>
 40271cc:	da003e17 	ldw	r8,248(sp)
 40271d0:	10045826 	beq	r2,zero,4028334 <___svfprintf_internal_r+0x1d68>
 40271d4:	1405c83a 	sub	r2,r2,r16
 40271d8:	d8802e15 	stw	r2,184(sp)
 40271dc:	1003d816 	blt	r2,zero,4028140 <___svfprintf_internal_r+0x1b74>
 40271e0:	df002783 	ldbu	fp,158(sp)
 40271e4:	d8802a15 	stw	r2,168(sp)
 40271e8:	dd002d15 	stw	r20,180(sp)
 40271ec:	d8002915 	stw	zero,164(sp)
 40271f0:	d8003215 	stw	zero,200(sp)
 40271f4:	003ea306 	br	4026c84 <_gp+0xfffe5a84>
 40271f8:	18c03fcc 	andi	r3,r3,255
 40271fc:	183f8c26 	beq	r3,zero,4027030 <_gp+0xfffe5e30>
 4027200:	d9c02785 	stb	r7,158(sp)
 4027204:	003f8a06 	br	4027030 <_gp+0xfffe5e30>
 4027208:	18c03fcc 	andi	r3,r3,255
 402720c:	1805631e 	bne	r3,zero,402879c <___svfprintf_internal_r+0x21d0>
 4027210:	014100f4 	movhi	r5,1027
 4027214:	295d1204 	addi	r5,r5,29768
 4027218:	d9403a15 	stw	r5,232(sp)
 402721c:	9080080c 	andi	r2,r18,32
 4027220:	103f9f1e 	bne	r2,zero,40270a0 <_gp+0xfffe5ea0>
 4027224:	9080040c 	andi	r2,r18,16
 4027228:	10029c26 	beq	r2,zero,4027c9c <___svfprintf_internal_r+0x16d0>
 402722c:	d8c02d17 	ldw	r3,180(sp)
 4027230:	002d883a 	mov	r22,zero
 4027234:	1d000017 	ldw	r20,0(r3)
 4027238:	18c00104 	addi	r3,r3,4
 402723c:	d8c02d15 	stw	r3,180(sp)
 4027240:	003f9c06 	br	40270b4 <_gp+0xfffe5eb4>
 4027244:	94800054 	ori	r18,r18,1
 4027248:	bc400007 	ldb	r17,0(r23)
 402724c:	003d3306 	br	402671c <_gp+0xfffe551c>
 4027250:	38803fcc 	andi	r2,r7,255
 4027254:	1080201c 	xori	r2,r2,128
 4027258:	10bfe004 	addi	r2,r2,-128
 402725c:	1002971e 	bne	r2,zero,4027cbc <___svfprintf_internal_r+0x16f0>
 4027260:	00c00044 	movi	r3,1
 4027264:	01c00804 	movi	r7,32
 4027268:	bc400007 	ldb	r17,0(r23)
 402726c:	003d2b06 	br	402671c <_gp+0xfffe551c>
 4027270:	18c03fcc 	andi	r3,r3,255
 4027274:	183e2326 	beq	r3,zero,4026b04 <_gp+0xfffe5904>
 4027278:	d9c02785 	stb	r7,158(sp)
 402727c:	003e2106 	br	4026b04 <_gp+0xfffe5904>
 4027280:	bc400007 	ldb	r17,0(r23)
 4027284:	8a430426 	beq	r17,r9,4027e98 <___svfprintf_internal_r+0x18cc>
 4027288:	94800414 	ori	r18,r18,16
 402728c:	003d2306 	br	402671c <_gp+0xfffe551c>
 4027290:	18c03fcc 	andi	r3,r3,255
 4027294:	18053f1e 	bne	r3,zero,4028794 <___svfprintf_internal_r+0x21c8>
 4027298:	9080080c 	andi	r2,r18,32
 402729c:	10028926 	beq	r2,zero,4027cc4 <___svfprintf_internal_r+0x16f8>
 40272a0:	d9402d17 	ldw	r5,180(sp)
 40272a4:	d9002f17 	ldw	r4,188(sp)
 40272a8:	28800017 	ldw	r2,0(r5)
 40272ac:	2007d7fa 	srai	r3,r4,31
 40272b0:	29400104 	addi	r5,r5,4
 40272b4:	d9402d15 	stw	r5,180(sp)
 40272b8:	11000015 	stw	r4,0(r2)
 40272bc:	10c00115 	stw	r3,4(r2)
 40272c0:	003ced06 	br	4026678 <_gp+0xfffe5478>
 40272c4:	94801014 	ori	r18,r18,64
 40272c8:	bc400007 	ldb	r17,0(r23)
 40272cc:	003d1306 	br	402671c <_gp+0xfffe551c>
 40272d0:	010100f4 	movhi	r4,1027
 40272d4:	211d1204 	addi	r4,r4,29768
 40272d8:	0039883a 	mov	fp,zero
 40272dc:	d9003a15 	stw	r4,232(sp)
 40272e0:	04401e04 	movi	r17,120
 40272e4:	003f8206 	br	40270f0 <_gp+0xfffe5ef0>
 40272e8:	18c03fcc 	andi	r3,r3,255
 40272ec:	1805221e 	bne	r3,zero,4028778 <___svfprintf_internal_r+0x21ac>
 40272f0:	883d9526 	beq	r17,zero,4026948 <_gp+0xfffe5748>
 40272f4:	00c00044 	movi	r3,1
 40272f8:	d8c02a15 	stw	r3,168(sp)
 40272fc:	dc401405 	stb	r17,80(sp)
 4027300:	d8002785 	stb	zero,158(sp)
 4027304:	003f9406 	br	4027158 <_gp+0xfffe5f58>
 4027308:	010100f4 	movhi	r4,1027
 402730c:	211d1204 	addi	r4,r4,29768
 4027310:	d9003a15 	stw	r4,232(sp)
 4027314:	d8c02d15 	stw	r3,180(sp)
 4027318:	1025883a 	mov	r18,r2
 402731c:	04401e04 	movi	r17,120
 4027320:	a584b03a 	or	r2,r20,r22
 4027324:	1000fa1e 	bne	r2,zero,4027710 <___svfprintf_internal_r+0x1144>
 4027328:	0039883a 	mov	fp,zero
 402732c:	00800084 	movi	r2,2
 4027330:	10803fcc 	andi	r2,r2,255
 4027334:	00c00044 	movi	r3,1
 4027338:	10c21626 	beq	r2,r3,4027b94 <___svfprintf_internal_r+0x15c8>
 402733c:	00c00084 	movi	r3,2
 4027340:	10fe301e 	bne	r2,r3,4026c04 <_gp+0xfffe5a04>
 4027344:	003d7606 	br	4026920 <_gp+0xfffe5720>
 4027348:	d8c02017 	ldw	r3,128(sp)
 402734c:	003e9506 	br	4026da4 <_gp+0xfffe5ba4>
 4027350:	00801944 	movi	r2,101
 4027354:	14407c0e 	bge	r2,r17,4027548 <___svfprintf_internal_r+0xf7c>
 4027358:	d9003617 	ldw	r4,216(sp)
 402735c:	d9403717 	ldw	r5,220(sp)
 4027360:	000d883a 	mov	r6,zero
 4027364:	000f883a 	mov	r7,zero
 4027368:	d8c03d15 	stw	r3,244(sp)
 402736c:	da003e15 	stw	r8,248(sp)
 4027370:	40333380 	call	4033338 <__eqdf2>
 4027374:	d8c03d17 	ldw	r3,244(sp)
 4027378:	da003e17 	ldw	r8,248(sp)
 402737c:	1000f51e 	bne	r2,zero,4027754 <___svfprintf_internal_r+0x1188>
 4027380:	d8801f17 	ldw	r2,124(sp)
 4027384:	010100f4 	movhi	r4,1027
 4027388:	211d1904 	addi	r4,r4,29796
 402738c:	18c00044 	addi	r3,r3,1
 4027390:	10800044 	addi	r2,r2,1
 4027394:	41000015 	stw	r4,0(r8)
 4027398:	01000044 	movi	r4,1
 402739c:	41000115 	stw	r4,4(r8)
 40273a0:	d8c02015 	stw	r3,128(sp)
 40273a4:	d8801f15 	stw	r2,124(sp)
 40273a8:	010001c4 	movi	r4,7
 40273ac:	20826616 	blt	r4,r2,4027d48 <___svfprintf_internal_r+0x177c>
 40273b0:	42000204 	addi	r8,r8,8
 40273b4:	d8802617 	ldw	r2,152(sp)
 40273b8:	d9403317 	ldw	r5,204(sp)
 40273bc:	11400216 	blt	r2,r5,40273c8 <___svfprintf_internal_r+0xdfc>
 40273c0:	9080004c 	andi	r2,r18,1
 40273c4:	103ed526 	beq	r2,zero,4026f1c <_gp+0xfffe5d1c>
 40273c8:	d8803817 	ldw	r2,224(sp)
 40273cc:	d9003417 	ldw	r4,208(sp)
 40273d0:	d9403817 	ldw	r5,224(sp)
 40273d4:	1887883a 	add	r3,r3,r2
 40273d8:	d8801f17 	ldw	r2,124(sp)
 40273dc:	41000015 	stw	r4,0(r8)
 40273e0:	41400115 	stw	r5,4(r8)
 40273e4:	10800044 	addi	r2,r2,1
 40273e8:	d8c02015 	stw	r3,128(sp)
 40273ec:	d8801f15 	stw	r2,124(sp)
 40273f0:	010001c4 	movi	r4,7
 40273f4:	2082af16 	blt	r4,r2,4027eb4 <___svfprintf_internal_r+0x18e8>
 40273f8:	42000204 	addi	r8,r8,8
 40273fc:	d8803317 	ldw	r2,204(sp)
 4027400:	143fffc4 	addi	r16,r2,-1
 4027404:	043ec50e 	bge	zero,r16,4026f1c <_gp+0xfffe5d1c>
 4027408:	04400404 	movi	r17,16
 402740c:	d8801f17 	ldw	r2,124(sp)
 4027410:	8c00860e 	bge	r17,r16,402762c <___svfprintf_internal_r+0x1060>
 4027414:	014100f4 	movhi	r5,1027
 4027418:	295d1984 	addi	r5,r5,29798
 402741c:	d9402b15 	stw	r5,172(sp)
 4027420:	058001c4 	movi	r22,7
 4027424:	dd002c17 	ldw	r20,176(sp)
 4027428:	00000306 	br	4027438 <___svfprintf_internal_r+0xe6c>
 402742c:	42000204 	addi	r8,r8,8
 4027430:	843ffc04 	addi	r16,r16,-16
 4027434:	8c00800e 	bge	r17,r16,4027638 <___svfprintf_internal_r+0x106c>
 4027438:	18c00404 	addi	r3,r3,16
 402743c:	10800044 	addi	r2,r2,1
 4027440:	45400015 	stw	r21,0(r8)
 4027444:	44400115 	stw	r17,4(r8)
 4027448:	d8c02015 	stw	r3,128(sp)
 402744c:	d8801f15 	stw	r2,124(sp)
 4027450:	b0bff60e 	bge	r22,r2,402742c <_gp+0xfffe622c>
 4027454:	d9801e04 	addi	r6,sp,120
 4027458:	a00b883a 	mov	r5,r20
 402745c:	9809883a 	mov	r4,r19
 4027460:	402e6940 	call	402e694 <__ssprint_r>
 4027464:	103d3e1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027468:	d8c02017 	ldw	r3,128(sp)
 402746c:	d8801f17 	ldw	r2,124(sp)
 4027470:	da000404 	addi	r8,sp,16
 4027474:	003fee06 	br	4027430 <_gp+0xfffe6230>
 4027478:	d9403117 	ldw	r5,196(sp)
 402747c:	d8802a17 	ldw	r2,168(sp)
 4027480:	28adc83a 	sub	r22,r5,r2
 4027484:	05be650e 	bge	zero,r22,4026e1c <_gp+0xfffe5c1c>
 4027488:	07000404 	movi	fp,16
 402748c:	d8801f17 	ldw	r2,124(sp)
 4027490:	e583a20e 	bge	fp,r22,402831c <___svfprintf_internal_r+0x1d50>
 4027494:	014100f4 	movhi	r5,1027
 4027498:	295d1984 	addi	r5,r5,29798
 402749c:	dc403015 	stw	r17,192(sp)
 40274a0:	d9402b15 	stw	r5,172(sp)
 40274a4:	b023883a 	mov	r17,r22
 40274a8:	050001c4 	movi	r20,7
 40274ac:	902d883a 	mov	r22,r18
 40274b0:	8025883a 	mov	r18,r16
 40274b4:	dc002c17 	ldw	r16,176(sp)
 40274b8:	00000306 	br	40274c8 <___svfprintf_internal_r+0xefc>
 40274bc:	8c7ffc04 	addi	r17,r17,-16
 40274c0:	42000204 	addi	r8,r8,8
 40274c4:	e440110e 	bge	fp,r17,402750c <___svfprintf_internal_r+0xf40>
 40274c8:	18c00404 	addi	r3,r3,16
 40274cc:	10800044 	addi	r2,r2,1
 40274d0:	45400015 	stw	r21,0(r8)
 40274d4:	47000115 	stw	fp,4(r8)
 40274d8:	d8c02015 	stw	r3,128(sp)
 40274dc:	d8801f15 	stw	r2,124(sp)
 40274e0:	a0bff60e 	bge	r20,r2,40274bc <_gp+0xfffe62bc>
 40274e4:	d9801e04 	addi	r6,sp,120
 40274e8:	800b883a 	mov	r5,r16
 40274ec:	9809883a 	mov	r4,r19
 40274f0:	402e6940 	call	402e694 <__ssprint_r>
 40274f4:	103d1a1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40274f8:	8c7ffc04 	addi	r17,r17,-16
 40274fc:	d8c02017 	ldw	r3,128(sp)
 4027500:	d8801f17 	ldw	r2,124(sp)
 4027504:	da000404 	addi	r8,sp,16
 4027508:	e47fef16 	blt	fp,r17,40274c8 <_gp+0xfffe62c8>
 402750c:	9021883a 	mov	r16,r18
 4027510:	b025883a 	mov	r18,r22
 4027514:	882d883a 	mov	r22,r17
 4027518:	dc403017 	ldw	r17,192(sp)
 402751c:	d9002b17 	ldw	r4,172(sp)
 4027520:	1d87883a 	add	r3,r3,r22
 4027524:	10800044 	addi	r2,r2,1
 4027528:	41000015 	stw	r4,0(r8)
 402752c:	45800115 	stw	r22,4(r8)
 4027530:	d8c02015 	stw	r3,128(sp)
 4027534:	d8801f15 	stw	r2,124(sp)
 4027538:	010001c4 	movi	r4,7
 402753c:	20819a16 	blt	r4,r2,4027ba8 <___svfprintf_internal_r+0x15dc>
 4027540:	42000204 	addi	r8,r8,8
 4027544:	003e3506 	br	4026e1c <_gp+0xfffe5c1c>
 4027548:	d9403317 	ldw	r5,204(sp)
 402754c:	00800044 	movi	r2,1
 4027550:	18c00044 	addi	r3,r3,1
 4027554:	1141710e 	bge	r2,r5,4027b1c <___svfprintf_internal_r+0x1550>
 4027558:	dc401f17 	ldw	r17,124(sp)
 402755c:	00800044 	movi	r2,1
 4027560:	40800115 	stw	r2,4(r8)
 4027564:	8c400044 	addi	r17,r17,1
 4027568:	44000015 	stw	r16,0(r8)
 402756c:	d8c02015 	stw	r3,128(sp)
 4027570:	dc401f15 	stw	r17,124(sp)
 4027574:	008001c4 	movi	r2,7
 4027578:	14417416 	blt	r2,r17,4027b4c <___svfprintf_internal_r+0x1580>
 402757c:	42000204 	addi	r8,r8,8
 4027580:	d8803817 	ldw	r2,224(sp)
 4027584:	d9003417 	ldw	r4,208(sp)
 4027588:	8c400044 	addi	r17,r17,1
 402758c:	10c7883a 	add	r3,r2,r3
 4027590:	40800115 	stw	r2,4(r8)
 4027594:	41000015 	stw	r4,0(r8)
 4027598:	d8c02015 	stw	r3,128(sp)
 402759c:	dc401f15 	stw	r17,124(sp)
 40275a0:	008001c4 	movi	r2,7
 40275a4:	14417216 	blt	r2,r17,4027b70 <___svfprintf_internal_r+0x15a4>
 40275a8:	45800204 	addi	r22,r8,8
 40275ac:	d9003617 	ldw	r4,216(sp)
 40275b0:	d9403717 	ldw	r5,220(sp)
 40275b4:	000d883a 	mov	r6,zero
 40275b8:	000f883a 	mov	r7,zero
 40275bc:	d8c03d15 	stw	r3,244(sp)
 40275c0:	40333380 	call	4033338 <__eqdf2>
 40275c4:	d8c03d17 	ldw	r3,244(sp)
 40275c8:	1000b326 	beq	r2,zero,4027898 <___svfprintf_internal_r+0x12cc>
 40275cc:	d9403317 	ldw	r5,204(sp)
 40275d0:	84000044 	addi	r16,r16,1
 40275d4:	8c400044 	addi	r17,r17,1
 40275d8:	28bfffc4 	addi	r2,r5,-1
 40275dc:	1887883a 	add	r3,r3,r2
 40275e0:	b0800115 	stw	r2,4(r22)
 40275e4:	b4000015 	stw	r16,0(r22)
 40275e8:	d8c02015 	stw	r3,128(sp)
 40275ec:	dc401f15 	stw	r17,124(sp)
 40275f0:	008001c4 	movi	r2,7
 40275f4:	1440d216 	blt	r2,r17,4027940 <___svfprintf_internal_r+0x1374>
 40275f8:	b5800204 	addi	r22,r22,8
 40275fc:	d9003b17 	ldw	r4,236(sp)
 4027600:	df0022c4 	addi	fp,sp,139
 4027604:	8c400044 	addi	r17,r17,1
 4027608:	20c7883a 	add	r3,r4,r3
 402760c:	b7000015 	stw	fp,0(r22)
 4027610:	b1000115 	stw	r4,4(r22)
 4027614:	d8c02015 	stw	r3,128(sp)
 4027618:	dc401f15 	stw	r17,124(sp)
 402761c:	008001c4 	movi	r2,7
 4027620:	14400e16 	blt	r2,r17,402765c <___svfprintf_internal_r+0x1090>
 4027624:	b2000204 	addi	r8,r22,8
 4027628:	003e3c06 	br	4026f1c <_gp+0xfffe5d1c>
 402762c:	010100f4 	movhi	r4,1027
 4027630:	211d1984 	addi	r4,r4,29798
 4027634:	d9002b15 	stw	r4,172(sp)
 4027638:	d9002b17 	ldw	r4,172(sp)
 402763c:	1c07883a 	add	r3,r3,r16
 4027640:	44000115 	stw	r16,4(r8)
 4027644:	41000015 	stw	r4,0(r8)
 4027648:	10800044 	addi	r2,r2,1
 402764c:	d8c02015 	stw	r3,128(sp)
 4027650:	d8801f15 	stw	r2,124(sp)
 4027654:	010001c4 	movi	r4,7
 4027658:	20be2f0e 	bge	r4,r2,4026f18 <_gp+0xfffe5d18>
 402765c:	d9402c17 	ldw	r5,176(sp)
 4027660:	d9801e04 	addi	r6,sp,120
 4027664:	9809883a 	mov	r4,r19
 4027668:	402e6940 	call	402e694 <__ssprint_r>
 402766c:	103cbc1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027670:	d8c02017 	ldw	r3,128(sp)
 4027674:	da000404 	addi	r8,sp,16
 4027678:	003e2806 	br	4026f1c <_gp+0xfffe5d1c>
 402767c:	d9402c17 	ldw	r5,176(sp)
 4027680:	d9801e04 	addi	r6,sp,120
 4027684:	9809883a 	mov	r4,r19
 4027688:	402e6940 	call	402e694 <__ssprint_r>
 402768c:	103e5f26 	beq	r2,zero,402700c <_gp+0xfffe5e0c>
 4027690:	003cb306 	br	4026960 <_gp+0xfffe5760>
 4027694:	d9402c17 	ldw	r5,176(sp)
 4027698:	d9801e04 	addi	r6,sp,120
 402769c:	9809883a 	mov	r4,r19
 40276a0:	402e6940 	call	402e694 <__ssprint_r>
 40276a4:	103cae1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40276a8:	d8c02017 	ldw	r3,128(sp)
 40276ac:	da000404 	addi	r8,sp,16
 40276b0:	003e0d06 	br	4026ee8 <_gp+0xfffe5ce8>
 40276b4:	d9402c17 	ldw	r5,176(sp)
 40276b8:	d9801e04 	addi	r6,sp,120
 40276bc:	9809883a 	mov	r4,r19
 40276c0:	402e6940 	call	402e694 <__ssprint_r>
 40276c4:	103ca61e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40276c8:	d8c02017 	ldw	r3,128(sp)
 40276cc:	da000404 	addi	r8,sp,16
 40276d0:	003dc106 	br	4026dd8 <_gp+0xfffe5bd8>
 40276d4:	d9402c17 	ldw	r5,176(sp)
 40276d8:	d9801e04 	addi	r6,sp,120
 40276dc:	9809883a 	mov	r4,r19
 40276e0:	402e6940 	call	402e694 <__ssprint_r>
 40276e4:	103c9e1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40276e8:	d8c02017 	ldw	r3,128(sp)
 40276ec:	da000404 	addi	r8,sp,16
 40276f0:	003dc706 	br	4026e10 <_gp+0xfffe5c10>
 40276f4:	d8802917 	ldw	r2,164(sp)
 40276f8:	d8002785 	stb	zero,158(sp)
 40276fc:	103f0816 	blt	r2,zero,4027320 <_gp+0xfffe6120>
 4027700:	00ffdfc4 	movi	r3,-129
 4027704:	a584b03a 	or	r2,r20,r22
 4027708:	90e4703a 	and	r18,r18,r3
 402770c:	103c8126 	beq	r2,zero,4026914 <_gp+0xfffe5714>
 4027710:	0039883a 	mov	fp,zero
 4027714:	003e7606 	br	40270f0 <_gp+0xfffe5ef0>
 4027718:	9080040c 	andi	r2,r18,16
 402771c:	10013d26 	beq	r2,zero,4027c14 <___svfprintf_internal_r+0x1648>
 4027720:	d9002d17 	ldw	r4,180(sp)
 4027724:	d9402917 	ldw	r5,164(sp)
 4027728:	d8002785 	stb	zero,158(sp)
 402772c:	20800104 	addi	r2,r4,4
 4027730:	25000017 	ldw	r20,0(r4)
 4027734:	002d883a 	mov	r22,zero
 4027738:	28013f16 	blt	r5,zero,4027c38 <___svfprintf_internal_r+0x166c>
 402773c:	00ffdfc4 	movi	r3,-129
 4027740:	d8802d15 	stw	r2,180(sp)
 4027744:	90e4703a 	and	r18,r18,r3
 4027748:	a03d2b26 	beq	r20,zero,4026bf8 <_gp+0xfffe59f8>
 402774c:	0039883a 	mov	fp,zero
 4027750:	003d2e06 	br	4026c0c <_gp+0xfffe5a0c>
 4027754:	dc402617 	ldw	r17,152(sp)
 4027758:	0441830e 	bge	zero,r17,4027d68 <___svfprintf_internal_r+0x179c>
 402775c:	dc403217 	ldw	r17,200(sp)
 4027760:	d8803317 	ldw	r2,204(sp)
 4027764:	1440010e 	bge	r2,r17,402776c <___svfprintf_internal_r+0x11a0>
 4027768:	1023883a 	mov	r17,r2
 402776c:	04400a0e 	bge	zero,r17,4027798 <___svfprintf_internal_r+0x11cc>
 4027770:	d8801f17 	ldw	r2,124(sp)
 4027774:	1c47883a 	add	r3,r3,r17
 4027778:	44000015 	stw	r16,0(r8)
 402777c:	10800044 	addi	r2,r2,1
 4027780:	44400115 	stw	r17,4(r8)
 4027784:	d8c02015 	stw	r3,128(sp)
 4027788:	d8801f15 	stw	r2,124(sp)
 402778c:	010001c4 	movi	r4,7
 4027790:	20827516 	blt	r4,r2,4028168 <___svfprintf_internal_r+0x1b9c>
 4027794:	42000204 	addi	r8,r8,8
 4027798:	88027b16 	blt	r17,zero,4028188 <___svfprintf_internal_r+0x1bbc>
 402779c:	d9003217 	ldw	r4,200(sp)
 40277a0:	2463c83a 	sub	r17,r4,r17
 40277a4:	0440990e 	bge	zero,r17,4027a0c <___svfprintf_internal_r+0x1440>
 40277a8:	05800404 	movi	r22,16
 40277ac:	d8801f17 	ldw	r2,124(sp)
 40277b0:	b441530e 	bge	r22,r17,4027d00 <___svfprintf_internal_r+0x1734>
 40277b4:	010100f4 	movhi	r4,1027
 40277b8:	211d1984 	addi	r4,r4,29798
 40277bc:	d9002b15 	stw	r4,172(sp)
 40277c0:	070001c4 	movi	fp,7
 40277c4:	dd002c17 	ldw	r20,176(sp)
 40277c8:	00000306 	br	40277d8 <___svfprintf_internal_r+0x120c>
 40277cc:	42000204 	addi	r8,r8,8
 40277d0:	8c7ffc04 	addi	r17,r17,-16
 40277d4:	b4414d0e 	bge	r22,r17,4027d0c <___svfprintf_internal_r+0x1740>
 40277d8:	18c00404 	addi	r3,r3,16
 40277dc:	10800044 	addi	r2,r2,1
 40277e0:	45400015 	stw	r21,0(r8)
 40277e4:	45800115 	stw	r22,4(r8)
 40277e8:	d8c02015 	stw	r3,128(sp)
 40277ec:	d8801f15 	stw	r2,124(sp)
 40277f0:	e0bff60e 	bge	fp,r2,40277cc <_gp+0xfffe65cc>
 40277f4:	d9801e04 	addi	r6,sp,120
 40277f8:	a00b883a 	mov	r5,r20
 40277fc:	9809883a 	mov	r4,r19
 4027800:	402e6940 	call	402e694 <__ssprint_r>
 4027804:	103c561e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027808:	d8c02017 	ldw	r3,128(sp)
 402780c:	d8801f17 	ldw	r2,124(sp)
 4027810:	da000404 	addi	r8,sp,16
 4027814:	003fee06 	br	40277d0 <_gp+0xfffe65d0>
 4027818:	d9402c17 	ldw	r5,176(sp)
 402781c:	d9801e04 	addi	r6,sp,120
 4027820:	9809883a 	mov	r4,r19
 4027824:	402e6940 	call	402e694 <__ssprint_r>
 4027828:	103c4d1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 402782c:	d8c02017 	ldw	r3,128(sp)
 4027830:	df002787 	ldb	fp,158(sp)
 4027834:	da000404 	addi	r8,sp,16
 4027838:	003d5a06 	br	4026da4 <_gp+0xfffe5ba4>
 402783c:	9080040c 	andi	r2,r18,16
 4027840:	10005c26 	beq	r2,zero,40279b4 <___svfprintf_internal_r+0x13e8>
 4027844:	d9402d17 	ldw	r5,180(sp)
 4027848:	d8c02917 	ldw	r3,164(sp)
 402784c:	d8002785 	stb	zero,158(sp)
 4027850:	28800104 	addi	r2,r5,4
 4027854:	2d000017 	ldw	r20,0(r5)
 4027858:	002d883a 	mov	r22,zero
 402785c:	18005e16 	blt	r3,zero,40279d8 <___svfprintf_internal_r+0x140c>
 4027860:	00ffdfc4 	movi	r3,-129
 4027864:	d8802d15 	stw	r2,180(sp)
 4027868:	90e4703a 	and	r18,r18,r3
 402786c:	0039883a 	mov	fp,zero
 4027870:	a03dfe26 	beq	r20,zero,402706c <_gp+0xfffe5e6c>
 4027874:	00800244 	movi	r2,9
 4027878:	153cb336 	bltu	r2,r20,4026b48 <_gp+0xfffe5948>
 402787c:	a5000c04 	addi	r20,r20,48
 4027880:	dc001dc4 	addi	r16,sp,119
 4027884:	dd001dc5 	stb	r20,119(sp)
 4027888:	d8c02817 	ldw	r3,160(sp)
 402788c:	1c07c83a 	sub	r3,r3,r16
 4027890:	d8c02e15 	stw	r3,184(sp)
 4027894:	003cf506 	br	4026c6c <_gp+0xfffe5a6c>
 4027898:	d8803317 	ldw	r2,204(sp)
 402789c:	143fffc4 	addi	r16,r2,-1
 40278a0:	043f560e 	bge	zero,r16,40275fc <_gp+0xfffe63fc>
 40278a4:	07000404 	movi	fp,16
 40278a8:	e403530e 	bge	fp,r16,40285f8 <___svfprintf_internal_r+0x202c>
 40278ac:	014100f4 	movhi	r5,1027
 40278b0:	295d1984 	addi	r5,r5,29798
 40278b4:	d9402b15 	stw	r5,172(sp)
 40278b8:	01c001c4 	movi	r7,7
 40278bc:	dd002c17 	ldw	r20,176(sp)
 40278c0:	00000306 	br	40278d0 <___svfprintf_internal_r+0x1304>
 40278c4:	843ffc04 	addi	r16,r16,-16
 40278c8:	b5800204 	addi	r22,r22,8
 40278cc:	e400130e 	bge	fp,r16,402791c <___svfprintf_internal_r+0x1350>
 40278d0:	18c00404 	addi	r3,r3,16
 40278d4:	8c400044 	addi	r17,r17,1
 40278d8:	b5400015 	stw	r21,0(r22)
 40278dc:	b7000115 	stw	fp,4(r22)
 40278e0:	d8c02015 	stw	r3,128(sp)
 40278e4:	dc401f15 	stw	r17,124(sp)
 40278e8:	3c7ff60e 	bge	r7,r17,40278c4 <_gp+0xfffe66c4>
 40278ec:	d9801e04 	addi	r6,sp,120
 40278f0:	a00b883a 	mov	r5,r20
 40278f4:	9809883a 	mov	r4,r19
 40278f8:	d9c03d15 	stw	r7,244(sp)
 40278fc:	402e6940 	call	402e694 <__ssprint_r>
 4027900:	d9c03d17 	ldw	r7,244(sp)
 4027904:	103c161e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027908:	843ffc04 	addi	r16,r16,-16
 402790c:	d8c02017 	ldw	r3,128(sp)
 4027910:	dc401f17 	ldw	r17,124(sp)
 4027914:	dd800404 	addi	r22,sp,16
 4027918:	e43fed16 	blt	fp,r16,40278d0 <_gp+0xfffe66d0>
 402791c:	d8802b17 	ldw	r2,172(sp)
 4027920:	1c07883a 	add	r3,r3,r16
 4027924:	8c400044 	addi	r17,r17,1
 4027928:	b0800015 	stw	r2,0(r22)
 402792c:	b4000115 	stw	r16,4(r22)
 4027930:	d8c02015 	stw	r3,128(sp)
 4027934:	dc401f15 	stw	r17,124(sp)
 4027938:	008001c4 	movi	r2,7
 402793c:	147f2e0e 	bge	r2,r17,40275f8 <_gp+0xfffe63f8>
 4027940:	d9402c17 	ldw	r5,176(sp)
 4027944:	d9801e04 	addi	r6,sp,120
 4027948:	9809883a 	mov	r4,r19
 402794c:	402e6940 	call	402e694 <__ssprint_r>
 4027950:	103c031e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027954:	d8c02017 	ldw	r3,128(sp)
 4027958:	dc401f17 	ldw	r17,124(sp)
 402795c:	dd800404 	addi	r22,sp,16
 4027960:	003f2606 	br	40275fc <_gp+0xfffe63fc>
 4027964:	9080040c 	andi	r2,r18,16
 4027968:	1000c326 	beq	r2,zero,4027c78 <___svfprintf_internal_r+0x16ac>
 402796c:	d8802d17 	ldw	r2,180(sp)
 4027970:	15000017 	ldw	r20,0(r2)
 4027974:	10800104 	addi	r2,r2,4
 4027978:	d8802d15 	stw	r2,180(sp)
 402797c:	a02dd7fa 	srai	r22,r20,31
 4027980:	b005883a 	mov	r2,r22
 4027984:	103c680e 	bge	r2,zero,4026b28 <_gp+0xfffe5928>
 4027988:	0529c83a 	sub	r20,zero,r20
 402798c:	a004c03a 	cmpne	r2,r20,zero
 4027990:	05adc83a 	sub	r22,zero,r22
 4027994:	b0adc83a 	sub	r22,r22,r2
 4027998:	d8802917 	ldw	r2,164(sp)
 402799c:	07000b44 	movi	fp,45
 40279a0:	df002785 	stb	fp,158(sp)
 40279a4:	10022e16 	blt	r2,zero,4028260 <___svfprintf_internal_r+0x1c94>
 40279a8:	00bfdfc4 	movi	r2,-129
 40279ac:	90a4703a 	and	r18,r18,r2
 40279b0:	003c6406 	br	4026b44 <_gp+0xfffe5944>
 40279b4:	9080100c 	andi	r2,r18,64
 40279b8:	d8002785 	stb	zero,158(sp)
 40279bc:	10012526 	beq	r2,zero,4027e54 <___svfprintf_internal_r+0x1888>
 40279c0:	d9002d17 	ldw	r4,180(sp)
 40279c4:	d9402917 	ldw	r5,164(sp)
 40279c8:	002d883a 	mov	r22,zero
 40279cc:	20800104 	addi	r2,r4,4
 40279d0:	2500000b 	ldhu	r20,0(r4)
 40279d4:	283fa20e 	bge	r5,zero,4027860 <_gp+0xfffe6660>
 40279d8:	d8802d15 	stw	r2,180(sp)
 40279dc:	0039883a 	mov	fp,zero
 40279e0:	a584b03a 	or	r2,r20,r22
 40279e4:	103c571e 	bne	r2,zero,4026b44 <_gp+0xfffe5944>
 40279e8:	00800044 	movi	r2,1
 40279ec:	003e5006 	br	4027330 <_gp+0xfffe6130>
 40279f0:	d9402c17 	ldw	r5,176(sp)
 40279f4:	d9801e04 	addi	r6,sp,120
 40279f8:	9809883a 	mov	r4,r19
 40279fc:	402e6940 	call	402e694 <__ssprint_r>
 4027a00:	103bd71e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027a04:	d8c02017 	ldw	r3,128(sp)
 4027a08:	da000404 	addi	r8,sp,16
 4027a0c:	d9003217 	ldw	r4,200(sp)
 4027a10:	d8802617 	ldw	r2,152(sp)
 4027a14:	d9403317 	ldw	r5,204(sp)
 4027a18:	8123883a 	add	r17,r16,r4
 4027a1c:	11400216 	blt	r2,r5,4027a28 <___svfprintf_internal_r+0x145c>
 4027a20:	9100004c 	andi	r4,r18,1
 4027a24:	20000d26 	beq	r4,zero,4027a5c <___svfprintf_internal_r+0x1490>
 4027a28:	d9003817 	ldw	r4,224(sp)
 4027a2c:	d9403417 	ldw	r5,208(sp)
 4027a30:	1907883a 	add	r3,r3,r4
 4027a34:	d9001f17 	ldw	r4,124(sp)
 4027a38:	41400015 	stw	r5,0(r8)
 4027a3c:	d9403817 	ldw	r5,224(sp)
 4027a40:	21000044 	addi	r4,r4,1
 4027a44:	d8c02015 	stw	r3,128(sp)
 4027a48:	41400115 	stw	r5,4(r8)
 4027a4c:	d9001f15 	stw	r4,124(sp)
 4027a50:	014001c4 	movi	r5,7
 4027a54:	2901dc16 	blt	r5,r4,40281c8 <___svfprintf_internal_r+0x1bfc>
 4027a58:	42000204 	addi	r8,r8,8
 4027a5c:	d9003317 	ldw	r4,204(sp)
 4027a60:	8121883a 	add	r16,r16,r4
 4027a64:	2085c83a 	sub	r2,r4,r2
 4027a68:	8461c83a 	sub	r16,r16,r17
 4027a6c:	1400010e 	bge	r2,r16,4027a74 <___svfprintf_internal_r+0x14a8>
 4027a70:	1021883a 	mov	r16,r2
 4027a74:	04000a0e 	bge	zero,r16,4027aa0 <___svfprintf_internal_r+0x14d4>
 4027a78:	d9001f17 	ldw	r4,124(sp)
 4027a7c:	1c07883a 	add	r3,r3,r16
 4027a80:	44400015 	stw	r17,0(r8)
 4027a84:	21000044 	addi	r4,r4,1
 4027a88:	44000115 	stw	r16,4(r8)
 4027a8c:	d8c02015 	stw	r3,128(sp)
 4027a90:	d9001f15 	stw	r4,124(sp)
 4027a94:	014001c4 	movi	r5,7
 4027a98:	2901e616 	blt	r5,r4,4028234 <___svfprintf_internal_r+0x1c68>
 4027a9c:	42000204 	addi	r8,r8,8
 4027aa0:	8001f616 	blt	r16,zero,402827c <___svfprintf_internal_r+0x1cb0>
 4027aa4:	1421c83a 	sub	r16,r2,r16
 4027aa8:	043d1c0e 	bge	zero,r16,4026f1c <_gp+0xfffe5d1c>
 4027aac:	04400404 	movi	r17,16
 4027ab0:	d8801f17 	ldw	r2,124(sp)
 4027ab4:	8c3edd0e 	bge	r17,r16,402762c <_gp+0xfffe642c>
 4027ab8:	014100f4 	movhi	r5,1027
 4027abc:	295d1984 	addi	r5,r5,29798
 4027ac0:	d9402b15 	stw	r5,172(sp)
 4027ac4:	058001c4 	movi	r22,7
 4027ac8:	dd002c17 	ldw	r20,176(sp)
 4027acc:	00000306 	br	4027adc <___svfprintf_internal_r+0x1510>
 4027ad0:	42000204 	addi	r8,r8,8
 4027ad4:	843ffc04 	addi	r16,r16,-16
 4027ad8:	8c3ed70e 	bge	r17,r16,4027638 <_gp+0xfffe6438>
 4027adc:	18c00404 	addi	r3,r3,16
 4027ae0:	10800044 	addi	r2,r2,1
 4027ae4:	45400015 	stw	r21,0(r8)
 4027ae8:	44400115 	stw	r17,4(r8)
 4027aec:	d8c02015 	stw	r3,128(sp)
 4027af0:	d8801f15 	stw	r2,124(sp)
 4027af4:	b0bff60e 	bge	r22,r2,4027ad0 <_gp+0xfffe68d0>
 4027af8:	d9801e04 	addi	r6,sp,120
 4027afc:	a00b883a 	mov	r5,r20
 4027b00:	9809883a 	mov	r4,r19
 4027b04:	402e6940 	call	402e694 <__ssprint_r>
 4027b08:	103b951e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027b0c:	d8c02017 	ldw	r3,128(sp)
 4027b10:	d8801f17 	ldw	r2,124(sp)
 4027b14:	da000404 	addi	r8,sp,16
 4027b18:	003fee06 	br	4027ad4 <_gp+0xfffe68d4>
 4027b1c:	9088703a 	and	r4,r18,r2
 4027b20:	203e8d1e 	bne	r4,zero,4027558 <_gp+0xfffe6358>
 4027b24:	dc401f17 	ldw	r17,124(sp)
 4027b28:	40800115 	stw	r2,4(r8)
 4027b2c:	44000015 	stw	r16,0(r8)
 4027b30:	8c400044 	addi	r17,r17,1
 4027b34:	d8c02015 	stw	r3,128(sp)
 4027b38:	dc401f15 	stw	r17,124(sp)
 4027b3c:	008001c4 	movi	r2,7
 4027b40:	147f7f16 	blt	r2,r17,4027940 <_gp+0xfffe6740>
 4027b44:	45800204 	addi	r22,r8,8
 4027b48:	003eac06 	br	40275fc <_gp+0xfffe63fc>
 4027b4c:	d9402c17 	ldw	r5,176(sp)
 4027b50:	d9801e04 	addi	r6,sp,120
 4027b54:	9809883a 	mov	r4,r19
 4027b58:	402e6940 	call	402e694 <__ssprint_r>
 4027b5c:	103b801e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027b60:	d8c02017 	ldw	r3,128(sp)
 4027b64:	dc401f17 	ldw	r17,124(sp)
 4027b68:	da000404 	addi	r8,sp,16
 4027b6c:	003e8406 	br	4027580 <_gp+0xfffe6380>
 4027b70:	d9402c17 	ldw	r5,176(sp)
 4027b74:	d9801e04 	addi	r6,sp,120
 4027b78:	9809883a 	mov	r4,r19
 4027b7c:	402e6940 	call	402e694 <__ssprint_r>
 4027b80:	103b771e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027b84:	d8c02017 	ldw	r3,128(sp)
 4027b88:	dc401f17 	ldw	r17,124(sp)
 4027b8c:	dd800404 	addi	r22,sp,16
 4027b90:	003e8606 	br	40275ac <_gp+0xfffe63ac>
 4027b94:	0029883a 	mov	r20,zero
 4027b98:	a5000c04 	addi	r20,r20,48
 4027b9c:	dc001dc4 	addi	r16,sp,119
 4027ba0:	dd001dc5 	stb	r20,119(sp)
 4027ba4:	003f3806 	br	4027888 <_gp+0xfffe6688>
 4027ba8:	d9402c17 	ldw	r5,176(sp)
 4027bac:	d9801e04 	addi	r6,sp,120
 4027bb0:	9809883a 	mov	r4,r19
 4027bb4:	402e6940 	call	402e694 <__ssprint_r>
 4027bb8:	103b691e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027bbc:	d8c02017 	ldw	r3,128(sp)
 4027bc0:	da000404 	addi	r8,sp,16
 4027bc4:	003c9506 	br	4026e1c <_gp+0xfffe5c1c>
 4027bc8:	d9003617 	ldw	r4,216(sp)
 4027bcc:	d9403717 	ldw	r5,220(sp)
 4027bd0:	da003e15 	stw	r8,248(sp)
 4027bd4:	402e5440 	call	402e544 <__fpclassifyd>
 4027bd8:	da003e17 	ldw	r8,248(sp)
 4027bdc:	1000bd1e 	bne	r2,zero,4027ed4 <___svfprintf_internal_r+0x1908>
 4027be0:	008011c4 	movi	r2,71
 4027be4:	14411e0e 	bge	r2,r17,4028060 <___svfprintf_internal_r+0x1a94>
 4027be8:	040100f4 	movhi	r16,1027
 4027bec:	841d0c04 	addi	r16,r16,29744
 4027bf0:	00c000c4 	movi	r3,3
 4027bf4:	00bfdfc4 	movi	r2,-129
 4027bf8:	d8c02a15 	stw	r3,168(sp)
 4027bfc:	90a4703a 	and	r18,r18,r2
 4027c00:	df002783 	ldbu	fp,158(sp)
 4027c04:	d8c02e15 	stw	r3,184(sp)
 4027c08:	d8002915 	stw	zero,164(sp)
 4027c0c:	d8003215 	stw	zero,200(sp)
 4027c10:	003c1c06 	br	4026c84 <_gp+0xfffe5a84>
 4027c14:	9080100c 	andi	r2,r18,64
 4027c18:	d8002785 	stb	zero,158(sp)
 4027c1c:	10009426 	beq	r2,zero,4027e70 <___svfprintf_internal_r+0x18a4>
 4027c20:	d8c02d17 	ldw	r3,180(sp)
 4027c24:	d9002917 	ldw	r4,164(sp)
 4027c28:	002d883a 	mov	r22,zero
 4027c2c:	18800104 	addi	r2,r3,4
 4027c30:	1d00000b 	ldhu	r20,0(r3)
 4027c34:	203ec10e 	bge	r4,zero,402773c <_gp+0xfffe653c>
 4027c38:	a586b03a 	or	r3,r20,r22
 4027c3c:	d8802d15 	stw	r2,180(sp)
 4027c40:	183ec21e 	bne	r3,zero,402774c <_gp+0xfffe654c>
 4027c44:	0039883a 	mov	fp,zero
 4027c48:	0005883a 	mov	r2,zero
 4027c4c:	003db806 	br	4027330 <_gp+0xfffe6130>
 4027c50:	d8802d17 	ldw	r2,180(sp)
 4027c54:	d8c02d17 	ldw	r3,180(sp)
 4027c58:	d9002d17 	ldw	r4,180(sp)
 4027c5c:	10800017 	ldw	r2,0(r2)
 4027c60:	18c00117 	ldw	r3,4(r3)
 4027c64:	21000204 	addi	r4,r4,8
 4027c68:	d8803615 	stw	r2,216(sp)
 4027c6c:	d8c03715 	stw	r3,220(sp)
 4027c70:	d9002d15 	stw	r4,180(sp)
 4027c74:	003b8206 	br	4026a80 <_gp+0xfffe5880>
 4027c78:	9080100c 	andi	r2,r18,64
 4027c7c:	10010726 	beq	r2,zero,402809c <___svfprintf_internal_r+0x1ad0>
 4027c80:	d8c02d17 	ldw	r3,180(sp)
 4027c84:	1d00000f 	ldh	r20,0(r3)
 4027c88:	18c00104 	addi	r3,r3,4
 4027c8c:	d8c02d15 	stw	r3,180(sp)
 4027c90:	a02dd7fa 	srai	r22,r20,31
 4027c94:	b005883a 	mov	r2,r22
 4027c98:	003ba206 	br	4026b24 <_gp+0xfffe5924>
 4027c9c:	9080100c 	andi	r2,r18,64
 4027ca0:	10010526 	beq	r2,zero,40280b8 <___svfprintf_internal_r+0x1aec>
 4027ca4:	d9002d17 	ldw	r4,180(sp)
 4027ca8:	002d883a 	mov	r22,zero
 4027cac:	2500000b 	ldhu	r20,0(r4)
 4027cb0:	21000104 	addi	r4,r4,4
 4027cb4:	d9002d15 	stw	r4,180(sp)
 4027cb8:	003cfe06 	br	40270b4 <_gp+0xfffe5eb4>
 4027cbc:	bc400007 	ldb	r17,0(r23)
 4027cc0:	003a9606 	br	402671c <_gp+0xfffe551c>
 4027cc4:	9080040c 	andi	r2,r18,16
 4027cc8:	10010126 	beq	r2,zero,40280d0 <___svfprintf_internal_r+0x1b04>
 4027ccc:	d9402d17 	ldw	r5,180(sp)
 4027cd0:	d8c02f17 	ldw	r3,188(sp)
 4027cd4:	28800017 	ldw	r2,0(r5)
 4027cd8:	29400104 	addi	r5,r5,4
 4027cdc:	d9402d15 	stw	r5,180(sp)
 4027ce0:	10c00015 	stw	r3,0(r2)
 4027ce4:	003a6406 	br	4026678 <_gp+0xfffe5478>
 4027ce8:	d9002917 	ldw	r4,164(sp)
 4027cec:	d8002785 	stb	zero,158(sp)
 4027cf0:	203d8d16 	blt	r4,zero,4027328 <_gp+0xfffe6128>
 4027cf4:	00bfdfc4 	movi	r2,-129
 4027cf8:	90a4703a 	and	r18,r18,r2
 4027cfc:	003b0506 	br	4026914 <_gp+0xfffe5714>
 4027d00:	014100f4 	movhi	r5,1027
 4027d04:	295d1984 	addi	r5,r5,29798
 4027d08:	d9402b15 	stw	r5,172(sp)
 4027d0c:	d9402b17 	ldw	r5,172(sp)
 4027d10:	1c47883a 	add	r3,r3,r17
 4027d14:	10800044 	addi	r2,r2,1
 4027d18:	41400015 	stw	r5,0(r8)
 4027d1c:	44400115 	stw	r17,4(r8)
 4027d20:	d8c02015 	stw	r3,128(sp)
 4027d24:	d8801f15 	stw	r2,124(sp)
 4027d28:	010001c4 	movi	r4,7
 4027d2c:	20bf3016 	blt	r4,r2,40279f0 <_gp+0xfffe67f0>
 4027d30:	42000204 	addi	r8,r8,8
 4027d34:	003f3506 	br	4027a0c <_gp+0xfffe680c>
 4027d38:	010100f4 	movhi	r4,1027
 4027d3c:	211d1984 	addi	r4,r4,29798
 4027d40:	d9002b15 	stw	r4,172(sp)
 4027d44:	003c5e06 	br	4026ec0 <_gp+0xfffe5cc0>
 4027d48:	d9402c17 	ldw	r5,176(sp)
 4027d4c:	d9801e04 	addi	r6,sp,120
 4027d50:	9809883a 	mov	r4,r19
 4027d54:	402e6940 	call	402e694 <__ssprint_r>
 4027d58:	103b011e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027d5c:	d8c02017 	ldw	r3,128(sp)
 4027d60:	da000404 	addi	r8,sp,16
 4027d64:	003d9306 	br	40273b4 <_gp+0xfffe61b4>
 4027d68:	d8801f17 	ldw	r2,124(sp)
 4027d6c:	014100f4 	movhi	r5,1027
 4027d70:	01000044 	movi	r4,1
 4027d74:	18c00044 	addi	r3,r3,1
 4027d78:	10800044 	addi	r2,r2,1
 4027d7c:	295d1904 	addi	r5,r5,29796
 4027d80:	41000115 	stw	r4,4(r8)
 4027d84:	41400015 	stw	r5,0(r8)
 4027d88:	d8c02015 	stw	r3,128(sp)
 4027d8c:	d8801f15 	stw	r2,124(sp)
 4027d90:	010001c4 	movi	r4,7
 4027d94:	2080b516 	blt	r4,r2,402806c <___svfprintf_internal_r+0x1aa0>
 4027d98:	42000204 	addi	r8,r8,8
 4027d9c:	8800041e 	bne	r17,zero,4027db0 <___svfprintf_internal_r+0x17e4>
 4027da0:	d8803317 	ldw	r2,204(sp)
 4027da4:	1000021e 	bne	r2,zero,4027db0 <___svfprintf_internal_r+0x17e4>
 4027da8:	9080004c 	andi	r2,r18,1
 4027dac:	103c5b26 	beq	r2,zero,4026f1c <_gp+0xfffe5d1c>
 4027db0:	d9003817 	ldw	r4,224(sp)
 4027db4:	d8801f17 	ldw	r2,124(sp)
 4027db8:	d9403417 	ldw	r5,208(sp)
 4027dbc:	20c7883a 	add	r3,r4,r3
 4027dc0:	10800044 	addi	r2,r2,1
 4027dc4:	41000115 	stw	r4,4(r8)
 4027dc8:	41400015 	stw	r5,0(r8)
 4027dcc:	d8c02015 	stw	r3,128(sp)
 4027dd0:	d8801f15 	stw	r2,124(sp)
 4027dd4:	010001c4 	movi	r4,7
 4027dd8:	20818016 	blt	r4,r2,40283dc <___svfprintf_internal_r+0x1e10>
 4027ddc:	42000204 	addi	r8,r8,8
 4027de0:	0463c83a 	sub	r17,zero,r17
 4027de4:	0440cb0e 	bge	zero,r17,4028114 <___svfprintf_internal_r+0x1b48>
 4027de8:	05800404 	movi	r22,16
 4027dec:	b440e80e 	bge	r22,r17,4028190 <___svfprintf_internal_r+0x1bc4>
 4027df0:	014100f4 	movhi	r5,1027
 4027df4:	295d1984 	addi	r5,r5,29798
 4027df8:	d9402b15 	stw	r5,172(sp)
 4027dfc:	070001c4 	movi	fp,7
 4027e00:	dd002c17 	ldw	r20,176(sp)
 4027e04:	00000306 	br	4027e14 <___svfprintf_internal_r+0x1848>
 4027e08:	42000204 	addi	r8,r8,8
 4027e0c:	8c7ffc04 	addi	r17,r17,-16
 4027e10:	b440e20e 	bge	r22,r17,402819c <___svfprintf_internal_r+0x1bd0>
 4027e14:	18c00404 	addi	r3,r3,16
 4027e18:	10800044 	addi	r2,r2,1
 4027e1c:	45400015 	stw	r21,0(r8)
 4027e20:	45800115 	stw	r22,4(r8)
 4027e24:	d8c02015 	stw	r3,128(sp)
 4027e28:	d8801f15 	stw	r2,124(sp)
 4027e2c:	e0bff60e 	bge	fp,r2,4027e08 <_gp+0xfffe6c08>
 4027e30:	d9801e04 	addi	r6,sp,120
 4027e34:	a00b883a 	mov	r5,r20
 4027e38:	9809883a 	mov	r4,r19
 4027e3c:	402e6940 	call	402e694 <__ssprint_r>
 4027e40:	103ac71e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027e44:	d8c02017 	ldw	r3,128(sp)
 4027e48:	d8801f17 	ldw	r2,124(sp)
 4027e4c:	da000404 	addi	r8,sp,16
 4027e50:	003fee06 	br	4027e0c <_gp+0xfffe6c0c>
 4027e54:	d8c02d17 	ldw	r3,180(sp)
 4027e58:	d9002917 	ldw	r4,164(sp)
 4027e5c:	002d883a 	mov	r22,zero
 4027e60:	18800104 	addi	r2,r3,4
 4027e64:	1d000017 	ldw	r20,0(r3)
 4027e68:	203e7d0e 	bge	r4,zero,4027860 <_gp+0xfffe6660>
 4027e6c:	003eda06 	br	40279d8 <_gp+0xfffe67d8>
 4027e70:	d9402d17 	ldw	r5,180(sp)
 4027e74:	d8c02917 	ldw	r3,164(sp)
 4027e78:	002d883a 	mov	r22,zero
 4027e7c:	28800104 	addi	r2,r5,4
 4027e80:	2d000017 	ldw	r20,0(r5)
 4027e84:	183e2d0e 	bge	r3,zero,402773c <_gp+0xfffe653c>
 4027e88:	003f6b06 	br	4027c38 <_gp+0xfffe6a38>
 4027e8c:	d8c02d15 	stw	r3,180(sp)
 4027e90:	0039883a 	mov	fp,zero
 4027e94:	003ed206 	br	40279e0 <_gp+0xfffe67e0>
 4027e98:	bc400043 	ldbu	r17,1(r23)
 4027e9c:	94800814 	ori	r18,r18,32
 4027ea0:	bdc00044 	addi	r23,r23,1
 4027ea4:	8c403fcc 	andi	r17,r17,255
 4027ea8:	8c40201c 	xori	r17,r17,128
 4027eac:	8c7fe004 	addi	r17,r17,-128
 4027eb0:	003a1a06 	br	402671c <_gp+0xfffe551c>
 4027eb4:	d9402c17 	ldw	r5,176(sp)
 4027eb8:	d9801e04 	addi	r6,sp,120
 4027ebc:	9809883a 	mov	r4,r19
 4027ec0:	402e6940 	call	402e694 <__ssprint_r>
 4027ec4:	103aa61e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4027ec8:	d8c02017 	ldw	r3,128(sp)
 4027ecc:	da000404 	addi	r8,sp,16
 4027ed0:	003d4a06 	br	40273fc <_gp+0xfffe61fc>
 4027ed4:	d9002917 	ldw	r4,164(sp)
 4027ed8:	05bff7c4 	movi	r22,-33
 4027edc:	00bfffc4 	movi	r2,-1
 4027ee0:	8dac703a 	and	r22,r17,r22
 4027ee4:	20806a26 	beq	r4,r2,4028090 <___svfprintf_internal_r+0x1ac4>
 4027ee8:	008011c4 	movi	r2,71
 4027eec:	b0813726 	beq	r22,r2,40283cc <___svfprintf_internal_r+0x1e00>
 4027ef0:	d9003717 	ldw	r4,220(sp)
 4027ef4:	90c04014 	ori	r3,r18,256
 4027ef8:	d8c02b15 	stw	r3,172(sp)
 4027efc:	20015d16 	blt	r4,zero,4028474 <___svfprintf_internal_r+0x1ea8>
 4027f00:	dd003717 	ldw	r20,220(sp)
 4027f04:	d8002a05 	stb	zero,168(sp)
 4027f08:	00801984 	movi	r2,102
 4027f0c:	88814026 	beq	r17,r2,4028410 <___svfprintf_internal_r+0x1e44>
 4027f10:	00801184 	movi	r2,70
 4027f14:	88817126 	beq	r17,r2,40284dc <___svfprintf_internal_r+0x1f10>
 4027f18:	00801144 	movi	r2,69
 4027f1c:	b0816226 	beq	r22,r2,40284a8 <___svfprintf_internal_r+0x1edc>
 4027f20:	d8c02917 	ldw	r3,164(sp)
 4027f24:	d8802104 	addi	r2,sp,132
 4027f28:	d8800315 	stw	r2,12(sp)
 4027f2c:	d9403617 	ldw	r5,216(sp)
 4027f30:	d8802504 	addi	r2,sp,148
 4027f34:	d8800215 	stw	r2,8(sp)
 4027f38:	d8802604 	addi	r2,sp,152
 4027f3c:	d8c00015 	stw	r3,0(sp)
 4027f40:	d8800115 	stw	r2,4(sp)
 4027f44:	01c00084 	movi	r7,2
 4027f48:	a00d883a 	mov	r6,r20
 4027f4c:	9809883a 	mov	r4,r19
 4027f50:	d8c03d15 	stw	r3,244(sp)
 4027f54:	da003e15 	stw	r8,248(sp)
 4027f58:	402ae7c0 	call	402ae7c <_dtoa_r>
 4027f5c:	1021883a 	mov	r16,r2
 4027f60:	008019c4 	movi	r2,103
 4027f64:	d8c03d17 	ldw	r3,244(sp)
 4027f68:	da003e17 	ldw	r8,248(sp)
 4027f6c:	8880e726 	beq	r17,r2,402830c <___svfprintf_internal_r+0x1d40>
 4027f70:	008011c4 	movi	r2,71
 4027f74:	8880d426 	beq	r17,r2,40282c8 <___svfprintf_internal_r+0x1cfc>
 4027f78:	80f9883a 	add	fp,r16,r3
 4027f7c:	d9003617 	ldw	r4,216(sp)
 4027f80:	000d883a 	mov	r6,zero
 4027f84:	000f883a 	mov	r7,zero
 4027f88:	a00b883a 	mov	r5,r20
 4027f8c:	da003e15 	stw	r8,248(sp)
 4027f90:	40333380 	call	4033338 <__eqdf2>
 4027f94:	da003e17 	ldw	r8,248(sp)
 4027f98:	1000e426 	beq	r2,zero,402832c <___svfprintf_internal_r+0x1d60>
 4027f9c:	d8802117 	ldw	r2,132(sp)
 4027fa0:	1700062e 	bgeu	r2,fp,4027fbc <___svfprintf_internal_r+0x19f0>
 4027fa4:	01000c04 	movi	r4,48
 4027fa8:	10c00044 	addi	r3,r2,1
 4027fac:	d8c02115 	stw	r3,132(sp)
 4027fb0:	11000005 	stb	r4,0(r2)
 4027fb4:	d8802117 	ldw	r2,132(sp)
 4027fb8:	173ffb36 	bltu	r2,fp,4027fa8 <_gp+0xfffe6da8>
 4027fbc:	1405c83a 	sub	r2,r2,r16
 4027fc0:	d8803315 	stw	r2,204(sp)
 4027fc4:	008011c4 	movi	r2,71
 4027fc8:	b080c526 	beq	r22,r2,40282e0 <___svfprintf_internal_r+0x1d14>
 4027fcc:	00801944 	movi	r2,101
 4027fd0:	1441d90e 	bge	r2,r17,4028738 <___svfprintf_internal_r+0x216c>
 4027fd4:	d8c02617 	ldw	r3,152(sp)
 4027fd8:	00801984 	movi	r2,102
 4027fdc:	d8c03215 	stw	r3,200(sp)
 4027fe0:	88813426 	beq	r17,r2,40284b4 <___svfprintf_internal_r+0x1ee8>
 4027fe4:	d8c03217 	ldw	r3,200(sp)
 4027fe8:	d9003317 	ldw	r4,204(sp)
 4027fec:	19012516 	blt	r3,r4,4028484 <___svfprintf_internal_r+0x1eb8>
 4027ff0:	9480004c 	andi	r18,r18,1
 4027ff4:	9001841e 	bne	r18,zero,4028608 <___svfprintf_internal_r+0x203c>
 4027ff8:	1805883a 	mov	r2,r3
 4027ffc:	1801cc16 	blt	r3,zero,4028730 <___svfprintf_internal_r+0x2164>
 4028000:	d8c03217 	ldw	r3,200(sp)
 4028004:	044019c4 	movi	r17,103
 4028008:	d8c02e15 	stw	r3,184(sp)
 402800c:	df002a07 	ldb	fp,168(sp)
 4028010:	e000a61e 	bne	fp,zero,40282ac <___svfprintf_internal_r+0x1ce0>
 4028014:	df002783 	ldbu	fp,158(sp)
 4028018:	d8802a15 	stw	r2,168(sp)
 402801c:	dc802b17 	ldw	r18,172(sp)
 4028020:	d8002915 	stw	zero,164(sp)
 4028024:	003b1706 	br	4026c84 <_gp+0xfffe5a84>
 4028028:	040100f4 	movhi	r16,1027
 402802c:	841d0904 	addi	r16,r16,29732
 4028030:	003aa606 	br	4026acc <_gp+0xfffe58cc>
 4028034:	d9003917 	ldw	r4,228(sp)
 4028038:	04001004 	movi	r16,64
 402803c:	800b883a 	mov	r5,r16
 4028040:	402561c0 	call	402561c <_malloc_r>
 4028044:	d9002c17 	ldw	r4,176(sp)
 4028048:	20800015 	stw	r2,0(r4)
 402804c:	20800415 	stw	r2,16(r4)
 4028050:	1001cb26 	beq	r2,zero,4028780 <___svfprintf_internal_r+0x21b4>
 4028054:	d8802c17 	ldw	r2,176(sp)
 4028058:	14000515 	stw	r16,20(r2)
 402805c:	00397606 	br	4026638 <_gp+0xfffe5438>
 4028060:	040100f4 	movhi	r16,1027
 4028064:	841d0b04 	addi	r16,r16,29740
 4028068:	003ee106 	br	4027bf0 <_gp+0xfffe69f0>
 402806c:	d9402c17 	ldw	r5,176(sp)
 4028070:	d9801e04 	addi	r6,sp,120
 4028074:	9809883a 	mov	r4,r19
 4028078:	402e6940 	call	402e694 <__ssprint_r>
 402807c:	103a381e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4028080:	dc402617 	ldw	r17,152(sp)
 4028084:	d8c02017 	ldw	r3,128(sp)
 4028088:	da000404 	addi	r8,sp,16
 402808c:	003f4306 	br	4027d9c <_gp+0xfffe6b9c>
 4028090:	01400184 	movi	r5,6
 4028094:	d9402915 	stw	r5,164(sp)
 4028098:	003f9506 	br	4027ef0 <_gp+0xfffe6cf0>
 402809c:	d9002d17 	ldw	r4,180(sp)
 40280a0:	25000017 	ldw	r20,0(r4)
 40280a4:	21000104 	addi	r4,r4,4
 40280a8:	d9002d15 	stw	r4,180(sp)
 40280ac:	a02dd7fa 	srai	r22,r20,31
 40280b0:	b005883a 	mov	r2,r22
 40280b4:	003a9b06 	br	4026b24 <_gp+0xfffe5924>
 40280b8:	d9402d17 	ldw	r5,180(sp)
 40280bc:	002d883a 	mov	r22,zero
 40280c0:	2d000017 	ldw	r20,0(r5)
 40280c4:	29400104 	addi	r5,r5,4
 40280c8:	d9402d15 	stw	r5,180(sp)
 40280cc:	003bf906 	br	40270b4 <_gp+0xfffe5eb4>
 40280d0:	9480100c 	andi	r18,r18,64
 40280d4:	90006e26 	beq	r18,zero,4028290 <___svfprintf_internal_r+0x1cc4>
 40280d8:	d9002d17 	ldw	r4,180(sp)
 40280dc:	d9402f17 	ldw	r5,188(sp)
 40280e0:	20800017 	ldw	r2,0(r4)
 40280e4:	21000104 	addi	r4,r4,4
 40280e8:	d9002d15 	stw	r4,180(sp)
 40280ec:	1140000d 	sth	r5,0(r2)
 40280f0:	00396106 	br	4026678 <_gp+0xfffe5478>
 40280f4:	d9402c17 	ldw	r5,176(sp)
 40280f8:	d9801e04 	addi	r6,sp,120
 40280fc:	9809883a 	mov	r4,r19
 4028100:	402e6940 	call	402e694 <__ssprint_r>
 4028104:	103a161e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4028108:	d8c02017 	ldw	r3,128(sp)
 402810c:	d8801f17 	ldw	r2,124(sp)
 4028110:	da000404 	addi	r8,sp,16
 4028114:	d9403317 	ldw	r5,204(sp)
 4028118:	10800044 	addi	r2,r2,1
 402811c:	44000015 	stw	r16,0(r8)
 4028120:	28c7883a 	add	r3,r5,r3
 4028124:	003b7706 	br	4026f04 <_gp+0xfffe5d04>
 4028128:	8009883a 	mov	r4,r16
 402812c:	da003e15 	stw	r8,248(sp)
 4028130:	40265340 	call	4026534 <strlen>
 4028134:	d8802e15 	stw	r2,184(sp)
 4028138:	da003e17 	ldw	r8,248(sp)
 402813c:	103c280e 	bge	r2,zero,40271e0 <_gp+0xfffe5fe0>
 4028140:	0005883a 	mov	r2,zero
 4028144:	003c2606 	br	40271e0 <_gp+0xfffe5fe0>
 4028148:	00bfffc4 	movi	r2,-1
 402814c:	003a0906 	br	4026974 <_gp+0xfffe5774>
 4028150:	010100f4 	movhi	r4,1027
 4028154:	211d1d84 	addi	r4,r4,29814
 4028158:	d9003515 	stw	r4,212(sp)
 402815c:	003b0606 	br	4026d78 <_gp+0xfffe5b78>
 4028160:	013fffc4 	movi	r4,-1
 4028164:	003a2706 	br	4026a04 <_gp+0xfffe5804>
 4028168:	d9402c17 	ldw	r5,176(sp)
 402816c:	d9801e04 	addi	r6,sp,120
 4028170:	9809883a 	mov	r4,r19
 4028174:	402e6940 	call	402e694 <__ssprint_r>
 4028178:	1039f91e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 402817c:	d8c02017 	ldw	r3,128(sp)
 4028180:	da000404 	addi	r8,sp,16
 4028184:	003d8406 	br	4027798 <_gp+0xfffe6598>
 4028188:	0023883a 	mov	r17,zero
 402818c:	003d8306 	br	402779c <_gp+0xfffe659c>
 4028190:	010100f4 	movhi	r4,1027
 4028194:	211d1984 	addi	r4,r4,29798
 4028198:	d9002b15 	stw	r4,172(sp)
 402819c:	d9002b17 	ldw	r4,172(sp)
 40281a0:	1c47883a 	add	r3,r3,r17
 40281a4:	10800044 	addi	r2,r2,1
 40281a8:	41000015 	stw	r4,0(r8)
 40281ac:	44400115 	stw	r17,4(r8)
 40281b0:	d8c02015 	stw	r3,128(sp)
 40281b4:	d8801f15 	stw	r2,124(sp)
 40281b8:	010001c4 	movi	r4,7
 40281bc:	20bfcd16 	blt	r4,r2,40280f4 <_gp+0xfffe6ef4>
 40281c0:	42000204 	addi	r8,r8,8
 40281c4:	003fd306 	br	4028114 <_gp+0xfffe6f14>
 40281c8:	d9402c17 	ldw	r5,176(sp)
 40281cc:	d9801e04 	addi	r6,sp,120
 40281d0:	9809883a 	mov	r4,r19
 40281d4:	402e6940 	call	402e694 <__ssprint_r>
 40281d8:	1039e11e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40281dc:	d8802617 	ldw	r2,152(sp)
 40281e0:	d8c02017 	ldw	r3,128(sp)
 40281e4:	da000404 	addi	r8,sp,16
 40281e8:	003e1c06 	br	4027a5c <_gp+0xfffe685c>
 40281ec:	d8802917 	ldw	r2,164(sp)
 40281f0:	00c00184 	movi	r3,6
 40281f4:	1880012e 	bgeu	r3,r2,40281fc <___svfprintf_internal_r+0x1c30>
 40281f8:	1805883a 	mov	r2,r3
 40281fc:	d8802e15 	stw	r2,184(sp)
 4028200:	1000f316 	blt	r2,zero,40285d0 <___svfprintf_internal_r+0x2004>
 4028204:	040100f4 	movhi	r16,1027
 4028208:	d8802a15 	stw	r2,168(sp)
 402820c:	dd002d15 	stw	r20,180(sp)
 4028210:	d8002915 	stw	zero,164(sp)
 4028214:	d8003215 	stw	zero,200(sp)
 4028218:	841d1704 	addi	r16,r16,29788
 402821c:	0039883a 	mov	fp,zero
 4028220:	003a9f06 	br	4026ca0 <_gp+0xfffe5aa0>
 4028224:	010100f4 	movhi	r4,1027
 4028228:	211d1d84 	addi	r4,r4,29814
 402822c:	d9003515 	stw	r4,212(sp)
 4028230:	003b5f06 	br	4026fb0 <_gp+0xfffe5db0>
 4028234:	d9402c17 	ldw	r5,176(sp)
 4028238:	d9801e04 	addi	r6,sp,120
 402823c:	9809883a 	mov	r4,r19
 4028240:	402e6940 	call	402e694 <__ssprint_r>
 4028244:	1039c61e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 4028248:	d8802617 	ldw	r2,152(sp)
 402824c:	d9403317 	ldw	r5,204(sp)
 4028250:	d8c02017 	ldw	r3,128(sp)
 4028254:	da000404 	addi	r8,sp,16
 4028258:	2885c83a 	sub	r2,r5,r2
 402825c:	003e1006 	br	4027aa0 <_gp+0xfffe68a0>
 4028260:	00800044 	movi	r2,1
 4028264:	10803fcc 	andi	r2,r2,255
 4028268:	00c00044 	movi	r3,1
 402826c:	10fa3526 	beq	r2,r3,4026b44 <_gp+0xfffe5944>
 4028270:	00c00084 	movi	r3,2
 4028274:	10fb9e26 	beq	r2,r3,40270f0 <_gp+0xfffe5ef0>
 4028278:	003a6406 	br	4026c0c <_gp+0xfffe5a0c>
 402827c:	0021883a 	mov	r16,zero
 4028280:	003e0806 	br	4027aa4 <_gp+0xfffe68a4>
 4028284:	07000b44 	movi	fp,45
 4028288:	df002785 	stb	fp,158(sp)
 402828c:	003a0b06 	br	4026abc <_gp+0xfffe58bc>
 4028290:	d8c02d17 	ldw	r3,180(sp)
 4028294:	d9002f17 	ldw	r4,188(sp)
 4028298:	18800017 	ldw	r2,0(r3)
 402829c:	18c00104 	addi	r3,r3,4
 40282a0:	d8c02d15 	stw	r3,180(sp)
 40282a4:	11000015 	stw	r4,0(r2)
 40282a8:	0038f306 	br	4026678 <_gp+0xfffe5478>
 40282ac:	00c00b44 	movi	r3,45
 40282b0:	d8c02785 	stb	r3,158(sp)
 40282b4:	d8802a15 	stw	r2,168(sp)
 40282b8:	dc802b17 	ldw	r18,172(sp)
 40282bc:	d8002915 	stw	zero,164(sp)
 40282c0:	07000b44 	movi	fp,45
 40282c4:	003a7306 	br	4026c94 <_gp+0xfffe5a94>
 40282c8:	9080004c 	andi	r2,r18,1
 40282cc:	1000941e 	bne	r2,zero,4028520 <___svfprintf_internal_r+0x1f54>
 40282d0:	d8802117 	ldw	r2,132(sp)
 40282d4:	1405c83a 	sub	r2,r2,r16
 40282d8:	d8803315 	stw	r2,204(sp)
 40282dc:	b441161e 	bne	r22,r17,4028738 <___svfprintf_internal_r+0x216c>
 40282e0:	dd802617 	ldw	r22,152(sp)
 40282e4:	00bfff44 	movi	r2,-3
 40282e8:	b0801a16 	blt	r22,r2,4028354 <___svfprintf_internal_r+0x1d88>
 40282ec:	d9402917 	ldw	r5,164(sp)
 40282f0:	2d801816 	blt	r5,r22,4028354 <___svfprintf_internal_r+0x1d88>
 40282f4:	dd803215 	stw	r22,200(sp)
 40282f8:	003f3a06 	br	4027fe4 <_gp+0xfffe6de4>
 40282fc:	1025883a 	mov	r18,r2
 4028300:	0039883a 	mov	fp,zero
 4028304:	00800084 	movi	r2,2
 4028308:	003fd606 	br	4028264 <_gp+0xfffe7064>
 402830c:	9080004c 	andi	r2,r18,1
 4028310:	103f191e 	bne	r2,zero,4027f78 <_gp+0xfffe6d78>
 4028314:	d8802117 	ldw	r2,132(sp)
 4028318:	003f2806 	br	4027fbc <_gp+0xfffe6dbc>
 402831c:	010100f4 	movhi	r4,1027
 4028320:	211d1984 	addi	r4,r4,29798
 4028324:	d9002b15 	stw	r4,172(sp)
 4028328:	003c7c06 	br	402751c <_gp+0xfffe631c>
 402832c:	e005883a 	mov	r2,fp
 4028330:	003f2206 	br	4027fbc <_gp+0xfffe6dbc>
 4028334:	d9402917 	ldw	r5,164(sp)
 4028338:	df002783 	ldbu	fp,158(sp)
 402833c:	dd002d15 	stw	r20,180(sp)
 4028340:	d9402a15 	stw	r5,168(sp)
 4028344:	d9402e15 	stw	r5,184(sp)
 4028348:	d8002915 	stw	zero,164(sp)
 402834c:	d8003215 	stw	zero,200(sp)
 4028350:	003a4c06 	br	4026c84 <_gp+0xfffe5a84>
 4028354:	8c7fff84 	addi	r17,r17,-2
 4028358:	b5bfffc4 	addi	r22,r22,-1
 402835c:	dd802615 	stw	r22,152(sp)
 4028360:	dc4022c5 	stb	r17,139(sp)
 4028364:	b000c316 	blt	r22,zero,4028674 <___svfprintf_internal_r+0x20a8>
 4028368:	00800ac4 	movi	r2,43
 402836c:	d8802305 	stb	r2,140(sp)
 4028370:	00800244 	movi	r2,9
 4028374:	15806e16 	blt	r2,r22,4028530 <___svfprintf_internal_r+0x1f64>
 4028378:	00800c04 	movi	r2,48
 402837c:	b5800c04 	addi	r22,r22,48
 4028380:	d8802345 	stb	r2,141(sp)
 4028384:	dd802385 	stb	r22,142(sp)
 4028388:	d88023c4 	addi	r2,sp,143
 402838c:	df0022c4 	addi	fp,sp,139
 4028390:	d8c03317 	ldw	r3,204(sp)
 4028394:	1739c83a 	sub	fp,r2,fp
 4028398:	d9003317 	ldw	r4,204(sp)
 402839c:	e0c7883a 	add	r3,fp,r3
 40283a0:	df003b15 	stw	fp,236(sp)
 40283a4:	d8c02e15 	stw	r3,184(sp)
 40283a8:	00800044 	movi	r2,1
 40283ac:	1100b70e 	bge	r2,r4,402868c <___svfprintf_internal_r+0x20c0>
 40283b0:	d8c02e17 	ldw	r3,184(sp)
 40283b4:	18c00044 	addi	r3,r3,1
 40283b8:	d8c02e15 	stw	r3,184(sp)
 40283bc:	1805883a 	mov	r2,r3
 40283c0:	1800b016 	blt	r3,zero,4028684 <___svfprintf_internal_r+0x20b8>
 40283c4:	d8003215 	stw	zero,200(sp)
 40283c8:	003f1006 	br	402800c <_gp+0xfffe6e0c>
 40283cc:	d8802917 	ldw	r2,164(sp)
 40283d0:	103ec71e 	bne	r2,zero,4027ef0 <_gp+0xfffe6cf0>
 40283d4:	dc002915 	stw	r16,164(sp)
 40283d8:	003ec506 	br	4027ef0 <_gp+0xfffe6cf0>
 40283dc:	d9402c17 	ldw	r5,176(sp)
 40283e0:	d9801e04 	addi	r6,sp,120
 40283e4:	9809883a 	mov	r4,r19
 40283e8:	402e6940 	call	402e694 <__ssprint_r>
 40283ec:	10395c1e 	bne	r2,zero,4026960 <_gp+0xfffe5760>
 40283f0:	dc402617 	ldw	r17,152(sp)
 40283f4:	d8c02017 	ldw	r3,128(sp)
 40283f8:	d8801f17 	ldw	r2,124(sp)
 40283fc:	da000404 	addi	r8,sp,16
 4028400:	003e7706 	br	4027de0 <_gp+0xfffe6be0>
 4028404:	582f883a 	mov	r23,r11
 4028408:	d8002915 	stw	zero,164(sp)
 402840c:	0038c406 	br	4026720 <_gp+0xfffe5520>
 4028410:	d8c02917 	ldw	r3,164(sp)
 4028414:	d8802104 	addi	r2,sp,132
 4028418:	d8800315 	stw	r2,12(sp)
 402841c:	d9403617 	ldw	r5,216(sp)
 4028420:	d8802504 	addi	r2,sp,148
 4028424:	d8800215 	stw	r2,8(sp)
 4028428:	d8802604 	addi	r2,sp,152
 402842c:	d8c00015 	stw	r3,0(sp)
 4028430:	9809883a 	mov	r4,r19
 4028434:	d8800115 	stw	r2,4(sp)
 4028438:	01c000c4 	movi	r7,3
 402843c:	a00d883a 	mov	r6,r20
 4028440:	da003e15 	stw	r8,248(sp)
 4028444:	402ae7c0 	call	402ae7c <_dtoa_r>
 4028448:	d9002917 	ldw	r4,164(sp)
 402844c:	da003e17 	ldw	r8,248(sp)
 4028450:	1021883a 	mov	r16,r2
 4028454:	1139883a 	add	fp,r2,r4
 4028458:	2007883a 	mov	r3,r4
 402845c:	81000007 	ldb	r4,0(r16)
 4028460:	00800c04 	movi	r2,48
 4028464:	20806f26 	beq	r4,r2,4028624 <___svfprintf_internal_r+0x2058>
 4028468:	d8c02617 	ldw	r3,152(sp)
 402846c:	e0f9883a 	add	fp,fp,r3
 4028470:	003ec206 	br	4027f7c <_gp+0xfffe6d7c>
 4028474:	00c00b44 	movi	r3,45
 4028478:	2520003c 	xorhi	r20,r4,32768
 402847c:	d8c02a05 	stb	r3,168(sp)
 4028480:	003ea106 	br	4027f08 <_gp+0xfffe6d08>
 4028484:	d8c03217 	ldw	r3,200(sp)
 4028488:	00c0890e 	bge	zero,r3,40286b0 <___svfprintf_internal_r+0x20e4>
 402848c:	00800044 	movi	r2,1
 4028490:	d9003317 	ldw	r4,204(sp)
 4028494:	1105883a 	add	r2,r2,r4
 4028498:	d8802e15 	stw	r2,184(sp)
 402849c:	10005f16 	blt	r2,zero,402861c <___svfprintf_internal_r+0x2050>
 40284a0:	044019c4 	movi	r17,103
 40284a4:	003ed906 	br	402800c <_gp+0xfffe6e0c>
 40284a8:	d9002917 	ldw	r4,164(sp)
 40284ac:	20c00044 	addi	r3,r4,1
 40284b0:	003e9c06 	br	4027f24 <_gp+0xfffe6d24>
 40284b4:	d9002917 	ldw	r4,164(sp)
 40284b8:	00c0680e 	bge	zero,r3,402865c <___svfprintf_internal_r+0x2090>
 40284bc:	2000461e 	bne	r4,zero,40285d8 <___svfprintf_internal_r+0x200c>
 40284c0:	9480004c 	andi	r18,r18,1
 40284c4:	9000441e 	bne	r18,zero,40285d8 <___svfprintf_internal_r+0x200c>
 40284c8:	1805883a 	mov	r2,r3
 40284cc:	1800a016 	blt	r3,zero,4028750 <___svfprintf_internal_r+0x2184>
 40284d0:	d8c03217 	ldw	r3,200(sp)
 40284d4:	d8c02e15 	stw	r3,184(sp)
 40284d8:	003ecc06 	br	402800c <_gp+0xfffe6e0c>
 40284dc:	d9402917 	ldw	r5,164(sp)
 40284e0:	d8802104 	addi	r2,sp,132
 40284e4:	d8800315 	stw	r2,12(sp)
 40284e8:	d9400015 	stw	r5,0(sp)
 40284ec:	d8802504 	addi	r2,sp,148
 40284f0:	d9403617 	ldw	r5,216(sp)
 40284f4:	d8800215 	stw	r2,8(sp)
 40284f8:	d8802604 	addi	r2,sp,152
 40284fc:	d8800115 	stw	r2,4(sp)
 4028500:	01c000c4 	movi	r7,3
 4028504:	a00d883a 	mov	r6,r20
 4028508:	9809883a 	mov	r4,r19
 402850c:	da003e15 	stw	r8,248(sp)
 4028510:	402ae7c0 	call	402ae7c <_dtoa_r>
 4028514:	d8c02917 	ldw	r3,164(sp)
 4028518:	da003e17 	ldw	r8,248(sp)
 402851c:	1021883a 	mov	r16,r2
 4028520:	00801184 	movi	r2,70
 4028524:	80f9883a 	add	fp,r16,r3
 4028528:	88bfcc26 	beq	r17,r2,402845c <_gp+0xfffe725c>
 402852c:	003e9306 	br	4027f7c <_gp+0xfffe6d7c>
 4028530:	df0022c4 	addi	fp,sp,139
 4028534:	dc002915 	stw	r16,164(sp)
 4028538:	9829883a 	mov	r20,r19
 402853c:	e021883a 	mov	r16,fp
 4028540:	4027883a 	mov	r19,r8
 4028544:	b009883a 	mov	r4,r22
 4028548:	01400284 	movi	r5,10
 402854c:	40228f80 	call	40228f8 <__modsi3>
 4028550:	10800c04 	addi	r2,r2,48
 4028554:	843fffc4 	addi	r16,r16,-1
 4028558:	b009883a 	mov	r4,r22
 402855c:	01400284 	movi	r5,10
 4028560:	80800005 	stb	r2,0(r16)
 4028564:	40228740 	call	4022874 <__divsi3>
 4028568:	102d883a 	mov	r22,r2
 402856c:	00800244 	movi	r2,9
 4028570:	15bff416 	blt	r2,r22,4028544 <_gp+0xfffe7344>
 4028574:	9811883a 	mov	r8,r19
 4028578:	b0800c04 	addi	r2,r22,48
 402857c:	a027883a 	mov	r19,r20
 4028580:	8029883a 	mov	r20,r16
 4028584:	a17fffc4 	addi	r5,r20,-1
 4028588:	a0bfffc5 	stb	r2,-1(r20)
 402858c:	dc002917 	ldw	r16,164(sp)
 4028590:	2f00752e 	bgeu	r5,fp,4028768 <___svfprintf_internal_r+0x219c>
 4028594:	d9c02384 	addi	r7,sp,142
 4028598:	3d0fc83a 	sub	r7,r7,r20
 402859c:	d9002344 	addi	r4,sp,141
 40285a0:	e1cf883a 	add	r7,fp,r7
 40285a4:	00000106 	br	40285ac <___svfprintf_internal_r+0x1fe0>
 40285a8:	28800003 	ldbu	r2,0(r5)
 40285ac:	20800005 	stb	r2,0(r4)
 40285b0:	21000044 	addi	r4,r4,1
 40285b4:	29400044 	addi	r5,r5,1
 40285b8:	21fffb1e 	bne	r4,r7,40285a8 <_gp+0xfffe73a8>
 40285bc:	d8802304 	addi	r2,sp,140
 40285c0:	1505c83a 	sub	r2,r2,r20
 40285c4:	d8c02344 	addi	r3,sp,141
 40285c8:	1885883a 	add	r2,r3,r2
 40285cc:	003f7006 	br	4028390 <_gp+0xfffe7190>
 40285d0:	0005883a 	mov	r2,zero
 40285d4:	003f0b06 	br	4028204 <_gp+0xfffe7004>
 40285d8:	d9002917 	ldw	r4,164(sp)
 40285dc:	d8c03217 	ldw	r3,200(sp)
 40285e0:	20800044 	addi	r2,r4,1
 40285e4:	1885883a 	add	r2,r3,r2
 40285e8:	d8802e15 	stw	r2,184(sp)
 40285ec:	103e870e 	bge	r2,zero,402800c <_gp+0xfffe6e0c>
 40285f0:	0005883a 	mov	r2,zero
 40285f4:	003e8506 	br	402800c <_gp+0xfffe6e0c>
 40285f8:	010100f4 	movhi	r4,1027
 40285fc:	211d1984 	addi	r4,r4,29798
 4028600:	d9002b15 	stw	r4,172(sp)
 4028604:	003cc506 	br	402791c <_gp+0xfffe671c>
 4028608:	d8c03217 	ldw	r3,200(sp)
 402860c:	18c00044 	addi	r3,r3,1
 4028610:	d8c02e15 	stw	r3,184(sp)
 4028614:	1805883a 	mov	r2,r3
 4028618:	183fa10e 	bge	r3,zero,40284a0 <_gp+0xfffe72a0>
 402861c:	0005883a 	mov	r2,zero
 4028620:	003f9f06 	br	40284a0 <_gp+0xfffe72a0>
 4028624:	d9003617 	ldw	r4,216(sp)
 4028628:	000d883a 	mov	r6,zero
 402862c:	000f883a 	mov	r7,zero
 4028630:	a00b883a 	mov	r5,r20
 4028634:	d8c03d15 	stw	r3,244(sp)
 4028638:	da003e15 	stw	r8,248(sp)
 402863c:	40333380 	call	4033338 <__eqdf2>
 4028640:	d8c03d17 	ldw	r3,244(sp)
 4028644:	da003e17 	ldw	r8,248(sp)
 4028648:	103f8726 	beq	r2,zero,4028468 <_gp+0xfffe7268>
 402864c:	00800044 	movi	r2,1
 4028650:	10c7c83a 	sub	r3,r2,r3
 4028654:	d8c02615 	stw	r3,152(sp)
 4028658:	003f8406 	br	402846c <_gp+0xfffe726c>
 402865c:	20000e1e 	bne	r4,zero,4028698 <___svfprintf_internal_r+0x20cc>
 4028660:	9480004c 	andi	r18,r18,1
 4028664:	90000c1e 	bne	r18,zero,4028698 <___svfprintf_internal_r+0x20cc>
 4028668:	00800044 	movi	r2,1
 402866c:	d8802e15 	stw	r2,184(sp)
 4028670:	003e6606 	br	402800c <_gp+0xfffe6e0c>
 4028674:	00800b44 	movi	r2,45
 4028678:	05adc83a 	sub	r22,zero,r22
 402867c:	d8802305 	stb	r2,140(sp)
 4028680:	003f3b06 	br	4028370 <_gp+0xfffe7170>
 4028684:	0005883a 	mov	r2,zero
 4028688:	003f4e06 	br	40283c4 <_gp+0xfffe71c4>
 402868c:	90a4703a 	and	r18,r18,r2
 4028690:	903f4a26 	beq	r18,zero,40283bc <_gp+0xfffe71bc>
 4028694:	003f4606 	br	40283b0 <_gp+0xfffe71b0>
 4028698:	d8c02917 	ldw	r3,164(sp)
 402869c:	18c00084 	addi	r3,r3,2
 40286a0:	d8c02e15 	stw	r3,184(sp)
 40286a4:	1805883a 	mov	r2,r3
 40286a8:	183e580e 	bge	r3,zero,402800c <_gp+0xfffe6e0c>
 40286ac:	003fd006 	br	40285f0 <_gp+0xfffe73f0>
 40286b0:	00800084 	movi	r2,2
 40286b4:	10c5c83a 	sub	r2,r2,r3
 40286b8:	003f7506 	br	4028490 <_gp+0xfffe7290>
 40286bc:	d8802d17 	ldw	r2,180(sp)
 40286c0:	d9002d17 	ldw	r4,180(sp)
 40286c4:	bc400043 	ldbu	r17,1(r23)
 40286c8:	10800017 	ldw	r2,0(r2)
 40286cc:	582f883a 	mov	r23,r11
 40286d0:	d8802915 	stw	r2,164(sp)
 40286d4:	20800104 	addi	r2,r4,4
 40286d8:	d9002917 	ldw	r4,164(sp)
 40286dc:	d8802d15 	stw	r2,180(sp)
 40286e0:	203df00e 	bge	r4,zero,4027ea4 <_gp+0xfffe6ca4>
 40286e4:	8c403fcc 	andi	r17,r17,255
 40286e8:	00bfffc4 	movi	r2,-1
 40286ec:	8c40201c 	xori	r17,r17,128
 40286f0:	d8802915 	stw	r2,164(sp)
 40286f4:	8c7fe004 	addi	r17,r17,-128
 40286f8:	00380806 	br	402671c <_gp+0xfffe551c>
 40286fc:	9080004c 	andi	r2,r18,1
 4028700:	0039883a 	mov	fp,zero
 4028704:	10000726 	beq	r2,zero,4028724 <___svfprintf_internal_r+0x2158>
 4028708:	d8c02817 	ldw	r3,160(sp)
 402870c:	dc001dc4 	addi	r16,sp,119
 4028710:	00800c04 	movi	r2,48
 4028714:	1c07c83a 	sub	r3,r3,r16
 4028718:	d8801dc5 	stb	r2,119(sp)
 402871c:	d8c02e15 	stw	r3,184(sp)
 4028720:	00395206 	br	4026c6c <_gp+0xfffe5a6c>
 4028724:	d8002e15 	stw	zero,184(sp)
 4028728:	dc001e04 	addi	r16,sp,120
 402872c:	00394f06 	br	4026c6c <_gp+0xfffe5a6c>
 4028730:	0005883a 	mov	r2,zero
 4028734:	003e3206 	br	4028000 <_gp+0xfffe6e00>
 4028738:	dd802617 	ldw	r22,152(sp)
 402873c:	003f0606 	br	4028358 <_gp+0xfffe7158>
 4028740:	d9c02785 	stb	r7,158(sp)
 4028744:	003a5106 	br	402708c <_gp+0xfffe5e8c>
 4028748:	d9c02785 	stb	r7,158(sp)
 402874c:	003a3706 	br	402702c <_gp+0xfffe5e2c>
 4028750:	0005883a 	mov	r2,zero
 4028754:	003f5e06 	br	40284d0 <_gp+0xfffe72d0>
 4028758:	d9c02785 	stb	r7,158(sp)
 402875c:	00391706 	br	4026bbc <_gp+0xfffe59bc>
 4028760:	d9c02785 	stb	r7,158(sp)
 4028764:	0038e606 	br	4026b00 <_gp+0xfffe5900>
 4028768:	d8802344 	addi	r2,sp,141
 402876c:	003f0806 	br	4028390 <_gp+0xfffe7190>
 4028770:	d9c02785 	stb	r7,158(sp)
 4028774:	0038b706 	br	4026a54 <_gp+0xfffe5854>
 4028778:	d9c02785 	stb	r7,158(sp)
 402877c:	003adc06 	br	40272f0 <_gp+0xfffe60f0>
 4028780:	d9403917 	ldw	r5,228(sp)
 4028784:	00800304 	movi	r2,12
 4028788:	28800015 	stw	r2,0(r5)
 402878c:	00bfffc4 	movi	r2,-1
 4028790:	00387806 	br	4026974 <_gp+0xfffe5774>
 4028794:	d9c02785 	stb	r7,158(sp)
 4028798:	003abf06 	br	4027298 <_gp+0xfffe6098>
 402879c:	d9c02785 	stb	r7,158(sp)
 40287a0:	003a9b06 	br	4027210 <_gp+0xfffe6010>

040287a4 <___vfprintf_internal_r>:
 40287a4:	deffb804 	addi	sp,sp,-288
 40287a8:	dfc04715 	stw	ra,284(sp)
 40287ac:	ddc04515 	stw	r23,276(sp)
 40287b0:	dd404315 	stw	r21,268(sp)
 40287b4:	d9002c15 	stw	r4,176(sp)
 40287b8:	282f883a 	mov	r23,r5
 40287bc:	302b883a 	mov	r21,r6
 40287c0:	d9c02d15 	stw	r7,180(sp)
 40287c4:	df004615 	stw	fp,280(sp)
 40287c8:	dd804415 	stw	r22,272(sp)
 40287cc:	dd004215 	stw	r20,264(sp)
 40287d0:	dcc04115 	stw	r19,260(sp)
 40287d4:	dc804015 	stw	r18,256(sp)
 40287d8:	dc403f15 	stw	r17,252(sp)
 40287dc:	dc003e15 	stw	r16,248(sp)
 40287e0:	402cb6c0 	call	402cb6c <_localeconv_r>
 40287e4:	10800017 	ldw	r2,0(r2)
 40287e8:	1009883a 	mov	r4,r2
 40287ec:	d8803415 	stw	r2,208(sp)
 40287f0:	40265340 	call	4026534 <strlen>
 40287f4:	d8803715 	stw	r2,220(sp)
 40287f8:	d8802c17 	ldw	r2,176(sp)
 40287fc:	10000226 	beq	r2,zero,4028808 <___vfprintf_internal_r+0x64>
 4028800:	10800e17 	ldw	r2,56(r2)
 4028804:	1000f926 	beq	r2,zero,4028bec <___vfprintf_internal_r+0x448>
 4028808:	b880030b 	ldhu	r2,12(r23)
 402880c:	10c8000c 	andi	r3,r2,8192
 4028810:	1800061e 	bne	r3,zero,402882c <___vfprintf_internal_r+0x88>
 4028814:	b9001917 	ldw	r4,100(r23)
 4028818:	00f7ffc4 	movi	r3,-8193
 402881c:	10880014 	ori	r2,r2,8192
 4028820:	20c6703a 	and	r3,r4,r3
 4028824:	b880030d 	sth	r2,12(r23)
 4028828:	b8c01915 	stw	r3,100(r23)
 402882c:	10c0020c 	andi	r3,r2,8
 4028830:	1800c126 	beq	r3,zero,4028b38 <___vfprintf_internal_r+0x394>
 4028834:	b8c00417 	ldw	r3,16(r23)
 4028838:	1800bf26 	beq	r3,zero,4028b38 <___vfprintf_internal_r+0x394>
 402883c:	1080068c 	andi	r2,r2,26
 4028840:	00c00284 	movi	r3,10
 4028844:	10c0c426 	beq	r2,r3,4028b58 <___vfprintf_internal_r+0x3b4>
 4028848:	d8c00404 	addi	r3,sp,16
 402884c:	050100f4 	movhi	r20,1027
 4028850:	d9001e04 	addi	r4,sp,120
 4028854:	a51d2184 	addi	r20,r20,29830
 4028858:	d8c01e15 	stw	r3,120(sp)
 402885c:	d8002015 	stw	zero,128(sp)
 4028860:	d8001f15 	stw	zero,124(sp)
 4028864:	d8003315 	stw	zero,204(sp)
 4028868:	d8003615 	stw	zero,216(sp)
 402886c:	d8003815 	stw	zero,224(sp)
 4028870:	1811883a 	mov	r8,r3
 4028874:	d8003915 	stw	zero,228(sp)
 4028878:	d8003a15 	stw	zero,232(sp)
 402887c:	d8002f15 	stw	zero,188(sp)
 4028880:	d9002815 	stw	r4,160(sp)
 4028884:	a8800007 	ldb	r2,0(r21)
 4028888:	10027b26 	beq	r2,zero,4029278 <___vfprintf_internal_r+0xad4>
 402888c:	00c00944 	movi	r3,37
 4028890:	a821883a 	mov	r16,r21
 4028894:	10c0021e 	bne	r2,r3,40288a0 <___vfprintf_internal_r+0xfc>
 4028898:	00001406 	br	40288ec <___vfprintf_internal_r+0x148>
 402889c:	10c00326 	beq	r2,r3,40288ac <___vfprintf_internal_r+0x108>
 40288a0:	84000044 	addi	r16,r16,1
 40288a4:	80800007 	ldb	r2,0(r16)
 40288a8:	103ffc1e 	bne	r2,zero,402889c <_gp+0xfffe769c>
 40288ac:	8563c83a 	sub	r17,r16,r21
 40288b0:	88000e26 	beq	r17,zero,40288ec <___vfprintf_internal_r+0x148>
 40288b4:	d8c02017 	ldw	r3,128(sp)
 40288b8:	d8801f17 	ldw	r2,124(sp)
 40288bc:	45400015 	stw	r21,0(r8)
 40288c0:	1c47883a 	add	r3,r3,r17
 40288c4:	10800044 	addi	r2,r2,1
 40288c8:	d8c02015 	stw	r3,128(sp)
 40288cc:	44400115 	stw	r17,4(r8)
 40288d0:	d8801f15 	stw	r2,124(sp)
 40288d4:	00c001c4 	movi	r3,7
 40288d8:	1880a716 	blt	r3,r2,4028b78 <___vfprintf_internal_r+0x3d4>
 40288dc:	42000204 	addi	r8,r8,8
 40288e0:	d9402f17 	ldw	r5,188(sp)
 40288e4:	2c4b883a 	add	r5,r5,r17
 40288e8:	d9402f15 	stw	r5,188(sp)
 40288ec:	80800007 	ldb	r2,0(r16)
 40288f0:	1000a826 	beq	r2,zero,4028b94 <___vfprintf_internal_r+0x3f0>
 40288f4:	84400047 	ldb	r17,1(r16)
 40288f8:	00bfffc4 	movi	r2,-1
 40288fc:	85400044 	addi	r21,r16,1
 4028900:	d8002785 	stb	zero,158(sp)
 4028904:	0007883a 	mov	r3,zero
 4028908:	000f883a 	mov	r7,zero
 402890c:	d8802915 	stw	r2,164(sp)
 4028910:	d8003115 	stw	zero,196(sp)
 4028914:	0025883a 	mov	r18,zero
 4028918:	01401604 	movi	r5,88
 402891c:	01800244 	movi	r6,9
 4028920:	02800a84 	movi	r10,42
 4028924:	02401b04 	movi	r9,108
 4028928:	ad400044 	addi	r21,r21,1
 402892c:	88bff804 	addi	r2,r17,-32
 4028930:	28830436 	bltu	r5,r2,4029544 <___vfprintf_internal_r+0xda0>
 4028934:	100490ba 	slli	r2,r2,2
 4028938:	010100f4 	movhi	r4,1027
 402893c:	21225304 	addi	r4,r4,-30388
 4028940:	1105883a 	add	r2,r2,r4
 4028944:	10800017 	ldw	r2,0(r2)
 4028948:	1000683a 	jmp	r2
 402894c:	04029464 	muli	r16,zero,2641
 4028950:	04029544 	movi	r16,2645
 4028954:	04029544 	movi	r16,2645
 4028958:	04029484 	movi	r16,2642
 402895c:	04029544 	movi	r16,2645
 4028960:	04029544 	movi	r16,2645
 4028964:	04029544 	movi	r16,2645
 4028968:	04029544 	movi	r16,2645
 402896c:	04029544 	movi	r16,2645
 4028970:	04029544 	movi	r16,2645
 4028974:	04028bf8 	rdprs	r16,zero,2607
 4028978:	040293a0 	cmpeqi	r16,zero,2638
 402897c:	04029544 	movi	r16,2645
 4028980:	04028ac0 	call	4028ac <__alt_mem_SDRAM_Controller+0x4028ac>
 4028984:	04028c20 	cmpeqi	r16,zero,2608
 4028988:	04029544 	movi	r16,2645
 402898c:	04028c60 	cmpeqi	r16,zero,2609
 4028990:	04028c6c 	andhi	r16,zero,2609
 4028994:	04028c6c 	andhi	r16,zero,2609
 4028998:	04028c6c 	andhi	r16,zero,2609
 402899c:	04028c6c 	andhi	r16,zero,2609
 40289a0:	04028c6c 	andhi	r16,zero,2609
 40289a4:	04028c6c 	andhi	r16,zero,2609
 40289a8:	04028c6c 	andhi	r16,zero,2609
 40289ac:	04028c6c 	andhi	r16,zero,2609
 40289b0:	04028c6c 	andhi	r16,zero,2609
 40289b4:	04029544 	movi	r16,2645
 40289b8:	04029544 	movi	r16,2645
 40289bc:	04029544 	movi	r16,2645
 40289c0:	04029544 	movi	r16,2645
 40289c4:	04029544 	movi	r16,2645
 40289c8:	04029544 	movi	r16,2645
 40289cc:	04029544 	movi	r16,2645
 40289d0:	04029544 	movi	r16,2645
 40289d4:	04029544 	movi	r16,2645
 40289d8:	04029544 	movi	r16,2645
 40289dc:	04028ca0 	cmpeqi	r16,zero,2610
 40289e0:	04028d5c 	xori	r16,zero,2613
 40289e4:	04029544 	movi	r16,2645
 40289e8:	04028d5c 	xori	r16,zero,2613
 40289ec:	04029544 	movi	r16,2645
 40289f0:	04029544 	movi	r16,2645
 40289f4:	04029544 	movi	r16,2645
 40289f8:	04029544 	movi	r16,2645
 40289fc:	04028dfc 	xorhi	r16,zero,2615
 4028a00:	04029544 	movi	r16,2645
 4028a04:	04029544 	movi	r16,2645
 4028a08:	04028e08 	cmpgei	r16,zero,2616
 4028a0c:	04029544 	movi	r16,2645
 4028a10:	04029544 	movi	r16,2645
 4028a14:	04029544 	movi	r16,2645
 4028a18:	04029544 	movi	r16,2645
 4028a1c:	04029544 	movi	r16,2645
 4028a20:	04029280 	call	402928 <__alt_mem_SDRAM_Controller+0x402928>
 4028a24:	04029544 	movi	r16,2645
 4028a28:	04029544 	movi	r16,2645
 4028a2c:	040292e0 	cmpeqi	r16,zero,2635
 4028a30:	04029544 	movi	r16,2645
 4028a34:	04029544 	movi	r16,2645
 4028a38:	04029544 	movi	r16,2645
 4028a3c:	04029544 	movi	r16,2645
 4028a40:	04029544 	movi	r16,2645
 4028a44:	04029544 	movi	r16,2645
 4028a48:	04029544 	movi	r16,2645
 4028a4c:	04029544 	movi	r16,2645
 4028a50:	04029544 	movi	r16,2645
 4028a54:	04029544 	movi	r16,2645
 4028a58:	040294f0 	cmpltui	r16,zero,2643
 4028a5c:	04029490 	cmplti	r16,zero,2642
 4028a60:	04028d5c 	xori	r16,zero,2613
 4028a64:	04028d5c 	xori	r16,zero,2613
 4028a68:	04028d5c 	xori	r16,zero,2613
 4028a6c:	040294a0 	cmpeqi	r16,zero,2642
 4028a70:	04029490 	cmplti	r16,zero,2642
 4028a74:	04029544 	movi	r16,2645
 4028a78:	04029544 	movi	r16,2645
 4028a7c:	040294ac 	andhi	r16,zero,2642
 4028a80:	04029544 	movi	r16,2645
 4028a84:	040294bc 	xorhi	r16,zero,2642
 4028a88:	04029390 	cmplti	r16,zero,2638
 4028a8c:	04028acc 	andi	r16,zero,2603
 4028a90:	040293b0 	cmpltui	r16,zero,2638
 4028a94:	04029544 	movi	r16,2645
 4028a98:	040293bc 	xorhi	r16,zero,2638
 4028a9c:	04029544 	movi	r16,2645
 4028aa0:	04029418 	cmpnei	r16,zero,2640
 4028aa4:	04029544 	movi	r16,2645
 4028aa8:	04029544 	movi	r16,2645
 4028aac:	04029428 	cmpgeui	r16,zero,2640
 4028ab0:	d9003117 	ldw	r4,196(sp)
 4028ab4:	d8802d15 	stw	r2,180(sp)
 4028ab8:	0109c83a 	sub	r4,zero,r4
 4028abc:	d9003115 	stw	r4,196(sp)
 4028ac0:	94800114 	ori	r18,r18,4
 4028ac4:	ac400007 	ldb	r17,0(r21)
 4028ac8:	003f9706 	br	4028928 <_gp+0xfffe7728>
 4028acc:	00800c04 	movi	r2,48
 4028ad0:	d9002d17 	ldw	r4,180(sp)
 4028ad4:	d9402917 	ldw	r5,164(sp)
 4028ad8:	d8802705 	stb	r2,156(sp)
 4028adc:	00801e04 	movi	r2,120
 4028ae0:	d8802745 	stb	r2,157(sp)
 4028ae4:	d8002785 	stb	zero,158(sp)
 4028ae8:	20c00104 	addi	r3,r4,4
 4028aec:	24c00017 	ldw	r19,0(r4)
 4028af0:	002d883a 	mov	r22,zero
 4028af4:	90800094 	ori	r2,r18,2
 4028af8:	28029a16 	blt	r5,zero,4029564 <___vfprintf_internal_r+0xdc0>
 4028afc:	00bfdfc4 	movi	r2,-129
 4028b00:	90a4703a 	and	r18,r18,r2
 4028b04:	d8c02d15 	stw	r3,180(sp)
 4028b08:	94800094 	ori	r18,r18,2
 4028b0c:	9802871e 	bne	r19,zero,402952c <___vfprintf_internal_r+0xd88>
 4028b10:	008100f4 	movhi	r2,1027
 4028b14:	109d1204 	addi	r2,r2,29768
 4028b18:	d8803915 	stw	r2,228(sp)
 4028b1c:	04401e04 	movi	r17,120
 4028b20:	d8802917 	ldw	r2,164(sp)
 4028b24:	0039883a 	mov	fp,zero
 4028b28:	1001e926 	beq	r2,zero,40292d0 <___vfprintf_internal_r+0xb2c>
 4028b2c:	0027883a 	mov	r19,zero
 4028b30:	002d883a 	mov	r22,zero
 4028b34:	00020506 	br	402934c <___vfprintf_internal_r+0xba8>
 4028b38:	d9002c17 	ldw	r4,176(sp)
 4028b3c:	b80b883a 	mov	r5,r23
 4028b40:	402aad40 	call	402aad4 <__swsetup_r>
 4028b44:	1005ac1e 	bne	r2,zero,402a1f8 <___vfprintf_internal_r+0x1a54>
 4028b48:	b880030b 	ldhu	r2,12(r23)
 4028b4c:	00c00284 	movi	r3,10
 4028b50:	1080068c 	andi	r2,r2,26
 4028b54:	10ff3c1e 	bne	r2,r3,4028848 <_gp+0xfffe7648>
 4028b58:	b880038f 	ldh	r2,14(r23)
 4028b5c:	103f3a16 	blt	r2,zero,4028848 <_gp+0xfffe7648>
 4028b60:	d9c02d17 	ldw	r7,180(sp)
 4028b64:	d9002c17 	ldw	r4,176(sp)
 4028b68:	a80d883a 	mov	r6,r21
 4028b6c:	b80b883a 	mov	r5,r23
 4028b70:	402a9b80 	call	402a9b8 <__sbprintf>
 4028b74:	00001106 	br	4028bbc <___vfprintf_internal_r+0x418>
 4028b78:	d9002c17 	ldw	r4,176(sp)
 4028b7c:	d9801e04 	addi	r6,sp,120
 4028b80:	b80b883a 	mov	r5,r23
 4028b84:	402fb9c0 	call	402fb9c <__sprint_r>
 4028b88:	1000081e 	bne	r2,zero,4028bac <___vfprintf_internal_r+0x408>
 4028b8c:	da000404 	addi	r8,sp,16
 4028b90:	003f5306 	br	40288e0 <_gp+0xfffe76e0>
 4028b94:	d8802017 	ldw	r2,128(sp)
 4028b98:	10000426 	beq	r2,zero,4028bac <___vfprintf_internal_r+0x408>
 4028b9c:	d9002c17 	ldw	r4,176(sp)
 4028ba0:	d9801e04 	addi	r6,sp,120
 4028ba4:	b80b883a 	mov	r5,r23
 4028ba8:	402fb9c0 	call	402fb9c <__sprint_r>
 4028bac:	b880030b 	ldhu	r2,12(r23)
 4028bb0:	1080100c 	andi	r2,r2,64
 4028bb4:	1005901e 	bne	r2,zero,402a1f8 <___vfprintf_internal_r+0x1a54>
 4028bb8:	d8802f17 	ldw	r2,188(sp)
 4028bbc:	dfc04717 	ldw	ra,284(sp)
 4028bc0:	df004617 	ldw	fp,280(sp)
 4028bc4:	ddc04517 	ldw	r23,276(sp)
 4028bc8:	dd804417 	ldw	r22,272(sp)
 4028bcc:	dd404317 	ldw	r21,268(sp)
 4028bd0:	dd004217 	ldw	r20,264(sp)
 4028bd4:	dcc04117 	ldw	r19,260(sp)
 4028bd8:	dc804017 	ldw	r18,256(sp)
 4028bdc:	dc403f17 	ldw	r17,252(sp)
 4028be0:	dc003e17 	ldw	r16,248(sp)
 4028be4:	dec04804 	addi	sp,sp,288
 4028be8:	f800283a 	ret
 4028bec:	d9002c17 	ldw	r4,176(sp)
 4028bf0:	40247200 	call	4024720 <__sinit>
 4028bf4:	003f0406 	br	4028808 <_gp+0xfffe7608>
 4028bf8:	d8802d17 	ldw	r2,180(sp)
 4028bfc:	d9002d17 	ldw	r4,180(sp)
 4028c00:	10800017 	ldw	r2,0(r2)
 4028c04:	d8803115 	stw	r2,196(sp)
 4028c08:	20800104 	addi	r2,r4,4
 4028c0c:	d9003117 	ldw	r4,196(sp)
 4028c10:	203fa716 	blt	r4,zero,4028ab0 <_gp+0xfffe78b0>
 4028c14:	d8802d15 	stw	r2,180(sp)
 4028c18:	ac400007 	ldb	r17,0(r21)
 4028c1c:	003f4206 	br	4028928 <_gp+0xfffe7728>
 4028c20:	ac400007 	ldb	r17,0(r21)
 4028c24:	aac00044 	addi	r11,r21,1
 4028c28:	8a872826 	beq	r17,r10,402a8cc <___vfprintf_internal_r+0x2128>
 4028c2c:	88bff404 	addi	r2,r17,-48
 4028c30:	0009883a 	mov	r4,zero
 4028c34:	30867d36 	bltu	r6,r2,402a62c <___vfprintf_internal_r+0x1e88>
 4028c38:	5c400007 	ldb	r17,0(r11)
 4028c3c:	210002a4 	muli	r4,r4,10
 4028c40:	5d400044 	addi	r21,r11,1
 4028c44:	a817883a 	mov	r11,r21
 4028c48:	2089883a 	add	r4,r4,r2
 4028c4c:	88bff404 	addi	r2,r17,-48
 4028c50:	30bff92e 	bgeu	r6,r2,4028c38 <_gp+0xfffe7a38>
 4028c54:	2005c916 	blt	r4,zero,402a37c <___vfprintf_internal_r+0x1bd8>
 4028c58:	d9002915 	stw	r4,164(sp)
 4028c5c:	003f3306 	br	402892c <_gp+0xfffe772c>
 4028c60:	94802014 	ori	r18,r18,128
 4028c64:	ac400007 	ldb	r17,0(r21)
 4028c68:	003f2f06 	br	4028928 <_gp+0xfffe7728>
 4028c6c:	a809883a 	mov	r4,r21
 4028c70:	d8003115 	stw	zero,196(sp)
 4028c74:	88bff404 	addi	r2,r17,-48
 4028c78:	0017883a 	mov	r11,zero
 4028c7c:	24400007 	ldb	r17,0(r4)
 4028c80:	5ac002a4 	muli	r11,r11,10
 4028c84:	ad400044 	addi	r21,r21,1
 4028c88:	a809883a 	mov	r4,r21
 4028c8c:	12d7883a 	add	r11,r2,r11
 4028c90:	88bff404 	addi	r2,r17,-48
 4028c94:	30bff92e 	bgeu	r6,r2,4028c7c <_gp+0xfffe7a7c>
 4028c98:	dac03115 	stw	r11,196(sp)
 4028c9c:	003f2306 	br	402892c <_gp+0xfffe772c>
 4028ca0:	18c03fcc 	andi	r3,r3,255
 4028ca4:	18072b1e 	bne	r3,zero,402a954 <___vfprintf_internal_r+0x21b0>
 4028ca8:	94800414 	ori	r18,r18,16
 4028cac:	9080080c 	andi	r2,r18,32
 4028cb0:	10037b26 	beq	r2,zero,4029aa0 <___vfprintf_internal_r+0x12fc>
 4028cb4:	d9402d17 	ldw	r5,180(sp)
 4028cb8:	28800117 	ldw	r2,4(r5)
 4028cbc:	2cc00017 	ldw	r19,0(r5)
 4028cc0:	29400204 	addi	r5,r5,8
 4028cc4:	d9402d15 	stw	r5,180(sp)
 4028cc8:	102d883a 	mov	r22,r2
 4028ccc:	10044b16 	blt	r2,zero,4029dfc <___vfprintf_internal_r+0x1658>
 4028cd0:	d9402917 	ldw	r5,164(sp)
 4028cd4:	df002783 	ldbu	fp,158(sp)
 4028cd8:	2803bc16 	blt	r5,zero,4029bcc <___vfprintf_internal_r+0x1428>
 4028cdc:	00ffdfc4 	movi	r3,-129
 4028ce0:	9d84b03a 	or	r2,r19,r22
 4028ce4:	90e4703a 	and	r18,r18,r3
 4028ce8:	10017726 	beq	r2,zero,40292c8 <___vfprintf_internal_r+0xb24>
 4028cec:	b0038326 	beq	r22,zero,4029afc <___vfprintf_internal_r+0x1358>
 4028cf0:	dc402a15 	stw	r17,168(sp)
 4028cf4:	dc001e04 	addi	r16,sp,120
 4028cf8:	b023883a 	mov	r17,r22
 4028cfc:	402d883a 	mov	r22,r8
 4028d00:	9809883a 	mov	r4,r19
 4028d04:	880b883a 	mov	r5,r17
 4028d08:	01800284 	movi	r6,10
 4028d0c:	000f883a 	mov	r7,zero
 4028d10:	4031c6c0 	call	4031c6c <__umoddi3>
 4028d14:	10800c04 	addi	r2,r2,48
 4028d18:	843fffc4 	addi	r16,r16,-1
 4028d1c:	9809883a 	mov	r4,r19
 4028d20:	880b883a 	mov	r5,r17
 4028d24:	80800005 	stb	r2,0(r16)
 4028d28:	01800284 	movi	r6,10
 4028d2c:	000f883a 	mov	r7,zero
 4028d30:	40316f40 	call	40316f4 <__udivdi3>
 4028d34:	1027883a 	mov	r19,r2
 4028d38:	10c4b03a 	or	r2,r2,r3
 4028d3c:	1823883a 	mov	r17,r3
 4028d40:	103fef1e 	bne	r2,zero,4028d00 <_gp+0xfffe7b00>
 4028d44:	d8c02817 	ldw	r3,160(sp)
 4028d48:	dc402a17 	ldw	r17,168(sp)
 4028d4c:	b011883a 	mov	r8,r22
 4028d50:	1c07c83a 	sub	r3,r3,r16
 4028d54:	d8c02e15 	stw	r3,184(sp)
 4028d58:	00005906 	br	4028ec0 <___vfprintf_internal_r+0x71c>
 4028d5c:	18c03fcc 	andi	r3,r3,255
 4028d60:	1806fa1e 	bne	r3,zero,402a94c <___vfprintf_internal_r+0x21a8>
 4028d64:	9080020c 	andi	r2,r18,8
 4028d68:	10048a26 	beq	r2,zero,4029f94 <___vfprintf_internal_r+0x17f0>
 4028d6c:	d8c02d17 	ldw	r3,180(sp)
 4028d70:	d9002d17 	ldw	r4,180(sp)
 4028d74:	d9402d17 	ldw	r5,180(sp)
 4028d78:	18c00017 	ldw	r3,0(r3)
 4028d7c:	21000117 	ldw	r4,4(r4)
 4028d80:	29400204 	addi	r5,r5,8
 4028d84:	d8c03615 	stw	r3,216(sp)
 4028d88:	d9003815 	stw	r4,224(sp)
 4028d8c:	d9402d15 	stw	r5,180(sp)
 4028d90:	d9003617 	ldw	r4,216(sp)
 4028d94:	d9403817 	ldw	r5,224(sp)
 4028d98:	da003d15 	stw	r8,244(sp)
 4028d9c:	04000044 	movi	r16,1
 4028da0:	402e5440 	call	402e544 <__fpclassifyd>
 4028da4:	da003d17 	ldw	r8,244(sp)
 4028da8:	14041f1e 	bne	r2,r16,4029e28 <___vfprintf_internal_r+0x1684>
 4028dac:	d9003617 	ldw	r4,216(sp)
 4028db0:	d9403817 	ldw	r5,224(sp)
 4028db4:	000d883a 	mov	r6,zero
 4028db8:	000f883a 	mov	r7,zero
 4028dbc:	403349c0 	call	403349c <__ledf2>
 4028dc0:	da003d17 	ldw	r8,244(sp)
 4028dc4:	1005be16 	blt	r2,zero,402a4c0 <___vfprintf_internal_r+0x1d1c>
 4028dc8:	df002783 	ldbu	fp,158(sp)
 4028dcc:	008011c4 	movi	r2,71
 4028dd0:	1445330e 	bge	r2,r17,402a2a0 <___vfprintf_internal_r+0x1afc>
 4028dd4:	040100f4 	movhi	r16,1027
 4028dd8:	841d0a04 	addi	r16,r16,29736
 4028ddc:	00c000c4 	movi	r3,3
 4028de0:	00bfdfc4 	movi	r2,-129
 4028de4:	d8c02a15 	stw	r3,168(sp)
 4028de8:	90a4703a 	and	r18,r18,r2
 4028dec:	d8c02e15 	stw	r3,184(sp)
 4028df0:	d8002915 	stw	zero,164(sp)
 4028df4:	d8003215 	stw	zero,200(sp)
 4028df8:	00003706 	br	4028ed8 <___vfprintf_internal_r+0x734>
 4028dfc:	94800214 	ori	r18,r18,8
 4028e00:	ac400007 	ldb	r17,0(r21)
 4028e04:	003ec806 	br	4028928 <_gp+0xfffe7728>
 4028e08:	18c03fcc 	andi	r3,r3,255
 4028e0c:	1806db1e 	bne	r3,zero,402a97c <___vfprintf_internal_r+0x21d8>
 4028e10:	94800414 	ori	r18,r18,16
 4028e14:	9080080c 	andi	r2,r18,32
 4028e18:	1002d826 	beq	r2,zero,402997c <___vfprintf_internal_r+0x11d8>
 4028e1c:	d9402d17 	ldw	r5,180(sp)
 4028e20:	d8c02917 	ldw	r3,164(sp)
 4028e24:	d8002785 	stb	zero,158(sp)
 4028e28:	28800204 	addi	r2,r5,8
 4028e2c:	2cc00017 	ldw	r19,0(r5)
 4028e30:	2d800117 	ldw	r22,4(r5)
 4028e34:	18048f16 	blt	r3,zero,402a074 <___vfprintf_internal_r+0x18d0>
 4028e38:	013fdfc4 	movi	r4,-129
 4028e3c:	9d86b03a 	or	r3,r19,r22
 4028e40:	d8802d15 	stw	r2,180(sp)
 4028e44:	9124703a 	and	r18,r18,r4
 4028e48:	1802d91e 	bne	r3,zero,40299b0 <___vfprintf_internal_r+0x120c>
 4028e4c:	d8c02917 	ldw	r3,164(sp)
 4028e50:	0039883a 	mov	fp,zero
 4028e54:	1805c326 	beq	r3,zero,402a564 <___vfprintf_internal_r+0x1dc0>
 4028e58:	0027883a 	mov	r19,zero
 4028e5c:	002d883a 	mov	r22,zero
 4028e60:	dc001e04 	addi	r16,sp,120
 4028e64:	9806d0fa 	srli	r3,r19,3
 4028e68:	b008977a 	slli	r4,r22,29
 4028e6c:	b02cd0fa 	srli	r22,r22,3
 4028e70:	9cc001cc 	andi	r19,r19,7
 4028e74:	98800c04 	addi	r2,r19,48
 4028e78:	843fffc4 	addi	r16,r16,-1
 4028e7c:	20e6b03a 	or	r19,r4,r3
 4028e80:	80800005 	stb	r2,0(r16)
 4028e84:	9d86b03a 	or	r3,r19,r22
 4028e88:	183ff61e 	bne	r3,zero,4028e64 <_gp+0xfffe7c64>
 4028e8c:	90c0004c 	andi	r3,r18,1
 4028e90:	18013b26 	beq	r3,zero,4029380 <___vfprintf_internal_r+0xbdc>
 4028e94:	10803fcc 	andi	r2,r2,255
 4028e98:	1080201c 	xori	r2,r2,128
 4028e9c:	10bfe004 	addi	r2,r2,-128
 4028ea0:	00c00c04 	movi	r3,48
 4028ea4:	10c13626 	beq	r2,r3,4029380 <___vfprintf_internal_r+0xbdc>
 4028ea8:	80ffffc5 	stb	r3,-1(r16)
 4028eac:	d8c02817 	ldw	r3,160(sp)
 4028eb0:	80bfffc4 	addi	r2,r16,-1
 4028eb4:	1021883a 	mov	r16,r2
 4028eb8:	1887c83a 	sub	r3,r3,r2
 4028ebc:	d8c02e15 	stw	r3,184(sp)
 4028ec0:	d8802e17 	ldw	r2,184(sp)
 4028ec4:	d9002917 	ldw	r4,164(sp)
 4028ec8:	1100010e 	bge	r2,r4,4028ed0 <___vfprintf_internal_r+0x72c>
 4028ecc:	2005883a 	mov	r2,r4
 4028ed0:	d8802a15 	stw	r2,168(sp)
 4028ed4:	d8003215 	stw	zero,200(sp)
 4028ed8:	e7003fcc 	andi	fp,fp,255
 4028edc:	e700201c 	xori	fp,fp,128
 4028ee0:	e73fe004 	addi	fp,fp,-128
 4028ee4:	e0000326 	beq	fp,zero,4028ef4 <___vfprintf_internal_r+0x750>
 4028ee8:	d8c02a17 	ldw	r3,168(sp)
 4028eec:	18c00044 	addi	r3,r3,1
 4028ef0:	d8c02a15 	stw	r3,168(sp)
 4028ef4:	90c0008c 	andi	r3,r18,2
 4028ef8:	d8c02b15 	stw	r3,172(sp)
 4028efc:	18000326 	beq	r3,zero,4028f0c <___vfprintf_internal_r+0x768>
 4028f00:	d8c02a17 	ldw	r3,168(sp)
 4028f04:	18c00084 	addi	r3,r3,2
 4028f08:	d8c02a15 	stw	r3,168(sp)
 4028f0c:	90c0210c 	andi	r3,r18,132
 4028f10:	d8c03015 	stw	r3,192(sp)
 4028f14:	1801a31e 	bne	r3,zero,40295a4 <___vfprintf_internal_r+0xe00>
 4028f18:	d9003117 	ldw	r4,196(sp)
 4028f1c:	d8c02a17 	ldw	r3,168(sp)
 4028f20:	20e7c83a 	sub	r19,r4,r3
 4028f24:	04c19f0e 	bge	zero,r19,40295a4 <___vfprintf_internal_r+0xe00>
 4028f28:	02400404 	movi	r9,16
 4028f2c:	d8c02017 	ldw	r3,128(sp)
 4028f30:	d8801f17 	ldw	r2,124(sp)
 4028f34:	4cc50d0e 	bge	r9,r19,402a36c <___vfprintf_internal_r+0x1bc8>
 4028f38:	014100f4 	movhi	r5,1027
 4028f3c:	295d2584 	addi	r5,r5,29846
 4028f40:	dc403b15 	stw	r17,236(sp)
 4028f44:	d9403515 	stw	r5,212(sp)
 4028f48:	9823883a 	mov	r17,r19
 4028f4c:	482d883a 	mov	r22,r9
 4028f50:	9027883a 	mov	r19,r18
 4028f54:	070001c4 	movi	fp,7
 4028f58:	8025883a 	mov	r18,r16
 4028f5c:	dc002c17 	ldw	r16,176(sp)
 4028f60:	00000306 	br	4028f70 <___vfprintf_internal_r+0x7cc>
 4028f64:	8c7ffc04 	addi	r17,r17,-16
 4028f68:	42000204 	addi	r8,r8,8
 4028f6c:	b440130e 	bge	r22,r17,4028fbc <___vfprintf_internal_r+0x818>
 4028f70:	010100f4 	movhi	r4,1027
 4028f74:	18c00404 	addi	r3,r3,16
 4028f78:	10800044 	addi	r2,r2,1
 4028f7c:	211d2584 	addi	r4,r4,29846
 4028f80:	41000015 	stw	r4,0(r8)
 4028f84:	45800115 	stw	r22,4(r8)
 4028f88:	d8c02015 	stw	r3,128(sp)
 4028f8c:	d8801f15 	stw	r2,124(sp)
 4028f90:	e0bff40e 	bge	fp,r2,4028f64 <_gp+0xfffe7d64>
 4028f94:	d9801e04 	addi	r6,sp,120
 4028f98:	b80b883a 	mov	r5,r23
 4028f9c:	8009883a 	mov	r4,r16
 4028fa0:	402fb9c0 	call	402fb9c <__sprint_r>
 4028fa4:	103f011e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4028fa8:	8c7ffc04 	addi	r17,r17,-16
 4028fac:	d8c02017 	ldw	r3,128(sp)
 4028fb0:	d8801f17 	ldw	r2,124(sp)
 4028fb4:	da000404 	addi	r8,sp,16
 4028fb8:	b47fed16 	blt	r22,r17,4028f70 <_gp+0xfffe7d70>
 4028fbc:	9021883a 	mov	r16,r18
 4028fc0:	9825883a 	mov	r18,r19
 4028fc4:	8827883a 	mov	r19,r17
 4028fc8:	dc403b17 	ldw	r17,236(sp)
 4028fcc:	d9403517 	ldw	r5,212(sp)
 4028fd0:	98c7883a 	add	r3,r19,r3
 4028fd4:	10800044 	addi	r2,r2,1
 4028fd8:	41400015 	stw	r5,0(r8)
 4028fdc:	44c00115 	stw	r19,4(r8)
 4028fe0:	d8c02015 	stw	r3,128(sp)
 4028fe4:	d8801f15 	stw	r2,124(sp)
 4028fe8:	010001c4 	movi	r4,7
 4028fec:	2082a316 	blt	r4,r2,4029a7c <___vfprintf_internal_r+0x12d8>
 4028ff0:	df002787 	ldb	fp,158(sp)
 4028ff4:	42000204 	addi	r8,r8,8
 4028ff8:	e0000c26 	beq	fp,zero,402902c <___vfprintf_internal_r+0x888>
 4028ffc:	d8801f17 	ldw	r2,124(sp)
 4029000:	d9002784 	addi	r4,sp,158
 4029004:	18c00044 	addi	r3,r3,1
 4029008:	10800044 	addi	r2,r2,1
 402900c:	41000015 	stw	r4,0(r8)
 4029010:	01000044 	movi	r4,1
 4029014:	41000115 	stw	r4,4(r8)
 4029018:	d8c02015 	stw	r3,128(sp)
 402901c:	d8801f15 	stw	r2,124(sp)
 4029020:	010001c4 	movi	r4,7
 4029024:	20823c16 	blt	r4,r2,4029918 <___vfprintf_internal_r+0x1174>
 4029028:	42000204 	addi	r8,r8,8
 402902c:	d8802b17 	ldw	r2,172(sp)
 4029030:	10000c26 	beq	r2,zero,4029064 <___vfprintf_internal_r+0x8c0>
 4029034:	d8801f17 	ldw	r2,124(sp)
 4029038:	d9002704 	addi	r4,sp,156
 402903c:	18c00084 	addi	r3,r3,2
 4029040:	10800044 	addi	r2,r2,1
 4029044:	41000015 	stw	r4,0(r8)
 4029048:	01000084 	movi	r4,2
 402904c:	41000115 	stw	r4,4(r8)
 4029050:	d8c02015 	stw	r3,128(sp)
 4029054:	d8801f15 	stw	r2,124(sp)
 4029058:	010001c4 	movi	r4,7
 402905c:	20823616 	blt	r4,r2,4029938 <___vfprintf_internal_r+0x1194>
 4029060:	42000204 	addi	r8,r8,8
 4029064:	d9003017 	ldw	r4,192(sp)
 4029068:	00802004 	movi	r2,128
 402906c:	20819926 	beq	r4,r2,40296d4 <___vfprintf_internal_r+0xf30>
 4029070:	d9402917 	ldw	r5,164(sp)
 4029074:	d8802e17 	ldw	r2,184(sp)
 4029078:	28adc83a 	sub	r22,r5,r2
 402907c:	0580310e 	bge	zero,r22,4029144 <___vfprintf_internal_r+0x9a0>
 4029080:	07000404 	movi	fp,16
 4029084:	d8801f17 	ldw	r2,124(sp)
 4029088:	e584140e 	bge	fp,r22,402a0dc <___vfprintf_internal_r+0x1938>
 402908c:	014100f4 	movhi	r5,1027
 4029090:	295d2184 	addi	r5,r5,29830
 4029094:	dc402915 	stw	r17,164(sp)
 4029098:	d9402b15 	stw	r5,172(sp)
 402909c:	b023883a 	mov	r17,r22
 40290a0:	04c001c4 	movi	r19,7
 40290a4:	a82d883a 	mov	r22,r21
 40290a8:	902b883a 	mov	r21,r18
 40290ac:	8025883a 	mov	r18,r16
 40290b0:	dc002c17 	ldw	r16,176(sp)
 40290b4:	00000306 	br	40290c4 <___vfprintf_internal_r+0x920>
 40290b8:	8c7ffc04 	addi	r17,r17,-16
 40290bc:	42000204 	addi	r8,r8,8
 40290c0:	e440110e 	bge	fp,r17,4029108 <___vfprintf_internal_r+0x964>
 40290c4:	18c00404 	addi	r3,r3,16
 40290c8:	10800044 	addi	r2,r2,1
 40290cc:	45000015 	stw	r20,0(r8)
 40290d0:	47000115 	stw	fp,4(r8)
 40290d4:	d8c02015 	stw	r3,128(sp)
 40290d8:	d8801f15 	stw	r2,124(sp)
 40290dc:	98bff60e 	bge	r19,r2,40290b8 <_gp+0xfffe7eb8>
 40290e0:	d9801e04 	addi	r6,sp,120
 40290e4:	b80b883a 	mov	r5,r23
 40290e8:	8009883a 	mov	r4,r16
 40290ec:	402fb9c0 	call	402fb9c <__sprint_r>
 40290f0:	103eae1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 40290f4:	8c7ffc04 	addi	r17,r17,-16
 40290f8:	d8c02017 	ldw	r3,128(sp)
 40290fc:	d8801f17 	ldw	r2,124(sp)
 4029100:	da000404 	addi	r8,sp,16
 4029104:	e47fef16 	blt	fp,r17,40290c4 <_gp+0xfffe7ec4>
 4029108:	9021883a 	mov	r16,r18
 402910c:	a825883a 	mov	r18,r21
 4029110:	b02b883a 	mov	r21,r22
 4029114:	882d883a 	mov	r22,r17
 4029118:	dc402917 	ldw	r17,164(sp)
 402911c:	d9002b17 	ldw	r4,172(sp)
 4029120:	1d87883a 	add	r3,r3,r22
 4029124:	10800044 	addi	r2,r2,1
 4029128:	41000015 	stw	r4,0(r8)
 402912c:	45800115 	stw	r22,4(r8)
 4029130:	d8c02015 	stw	r3,128(sp)
 4029134:	d8801f15 	stw	r2,124(sp)
 4029138:	010001c4 	movi	r4,7
 402913c:	2081ee16 	blt	r4,r2,40298f8 <___vfprintf_internal_r+0x1154>
 4029140:	42000204 	addi	r8,r8,8
 4029144:	9080400c 	andi	r2,r18,256
 4029148:	1001181e 	bne	r2,zero,40295ac <___vfprintf_internal_r+0xe08>
 402914c:	d9402e17 	ldw	r5,184(sp)
 4029150:	d8801f17 	ldw	r2,124(sp)
 4029154:	44000015 	stw	r16,0(r8)
 4029158:	1947883a 	add	r3,r3,r5
 402915c:	10800044 	addi	r2,r2,1
 4029160:	41400115 	stw	r5,4(r8)
 4029164:	d8c02015 	stw	r3,128(sp)
 4029168:	d8801f15 	stw	r2,124(sp)
 402916c:	010001c4 	movi	r4,7
 4029170:	2081d316 	blt	r4,r2,40298c0 <___vfprintf_internal_r+0x111c>
 4029174:	42000204 	addi	r8,r8,8
 4029178:	9480010c 	andi	r18,r18,4
 402917c:	90003226 	beq	r18,zero,4029248 <___vfprintf_internal_r+0xaa4>
 4029180:	d9403117 	ldw	r5,196(sp)
 4029184:	d8802a17 	ldw	r2,168(sp)
 4029188:	28a1c83a 	sub	r16,r5,r2
 402918c:	04002e0e 	bge	zero,r16,4029248 <___vfprintf_internal_r+0xaa4>
 4029190:	04400404 	movi	r17,16
 4029194:	d8801f17 	ldw	r2,124(sp)
 4029198:	8c04a20e 	bge	r17,r16,402a424 <___vfprintf_internal_r+0x1c80>
 402919c:	014100f4 	movhi	r5,1027
 40291a0:	295d2584 	addi	r5,r5,29846
 40291a4:	d9403515 	stw	r5,212(sp)
 40291a8:	048001c4 	movi	r18,7
 40291ac:	dcc02c17 	ldw	r19,176(sp)
 40291b0:	00000306 	br	40291c0 <___vfprintf_internal_r+0xa1c>
 40291b4:	843ffc04 	addi	r16,r16,-16
 40291b8:	42000204 	addi	r8,r8,8
 40291bc:	8c00130e 	bge	r17,r16,402920c <___vfprintf_internal_r+0xa68>
 40291c0:	010100f4 	movhi	r4,1027
 40291c4:	18c00404 	addi	r3,r3,16
 40291c8:	10800044 	addi	r2,r2,1
 40291cc:	211d2584 	addi	r4,r4,29846
 40291d0:	41000015 	stw	r4,0(r8)
 40291d4:	44400115 	stw	r17,4(r8)
 40291d8:	d8c02015 	stw	r3,128(sp)
 40291dc:	d8801f15 	stw	r2,124(sp)
 40291e0:	90bff40e 	bge	r18,r2,40291b4 <_gp+0xfffe7fb4>
 40291e4:	d9801e04 	addi	r6,sp,120
 40291e8:	b80b883a 	mov	r5,r23
 40291ec:	9809883a 	mov	r4,r19
 40291f0:	402fb9c0 	call	402fb9c <__sprint_r>
 40291f4:	103e6d1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 40291f8:	843ffc04 	addi	r16,r16,-16
 40291fc:	d8c02017 	ldw	r3,128(sp)
 4029200:	d8801f17 	ldw	r2,124(sp)
 4029204:	da000404 	addi	r8,sp,16
 4029208:	8c3fed16 	blt	r17,r16,40291c0 <_gp+0xfffe7fc0>
 402920c:	d9403517 	ldw	r5,212(sp)
 4029210:	1c07883a 	add	r3,r3,r16
 4029214:	10800044 	addi	r2,r2,1
 4029218:	41400015 	stw	r5,0(r8)
 402921c:	44000115 	stw	r16,4(r8)
 4029220:	d8c02015 	stw	r3,128(sp)
 4029224:	d8801f15 	stw	r2,124(sp)
 4029228:	010001c4 	movi	r4,7
 402922c:	2080060e 	bge	r4,r2,4029248 <___vfprintf_internal_r+0xaa4>
 4029230:	d9002c17 	ldw	r4,176(sp)
 4029234:	d9801e04 	addi	r6,sp,120
 4029238:	b80b883a 	mov	r5,r23
 402923c:	402fb9c0 	call	402fb9c <__sprint_r>
 4029240:	103e5a1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029244:	d8c02017 	ldw	r3,128(sp)
 4029248:	d8803117 	ldw	r2,196(sp)
 402924c:	d9002a17 	ldw	r4,168(sp)
 4029250:	1100010e 	bge	r2,r4,4029258 <___vfprintf_internal_r+0xab4>
 4029254:	2005883a 	mov	r2,r4
 4029258:	d9402f17 	ldw	r5,188(sp)
 402925c:	288b883a 	add	r5,r5,r2
 4029260:	d9402f15 	stw	r5,188(sp)
 4029264:	18019e1e 	bne	r3,zero,40298e0 <___vfprintf_internal_r+0x113c>
 4029268:	a8800007 	ldb	r2,0(r21)
 402926c:	d8001f15 	stw	zero,124(sp)
 4029270:	da000404 	addi	r8,sp,16
 4029274:	103d851e 	bne	r2,zero,402888c <_gp+0xfffe768c>
 4029278:	a821883a 	mov	r16,r21
 402927c:	003d9b06 	br	40288ec <_gp+0xfffe76ec>
 4029280:	18c03fcc 	andi	r3,r3,255
 4029284:	1805c11e 	bne	r3,zero,402a98c <___vfprintf_internal_r+0x21e8>
 4029288:	94800414 	ori	r18,r18,16
 402928c:	9080080c 	andi	r2,r18,32
 4029290:	10020c26 	beq	r2,zero,4029ac4 <___vfprintf_internal_r+0x1320>
 4029294:	d8802d17 	ldw	r2,180(sp)
 4029298:	d9002917 	ldw	r4,164(sp)
 402929c:	d8002785 	stb	zero,158(sp)
 40292a0:	10c00204 	addi	r3,r2,8
 40292a4:	14c00017 	ldw	r19,0(r2)
 40292a8:	15800117 	ldw	r22,4(r2)
 40292ac:	20040f16 	blt	r4,zero,402a2ec <___vfprintf_internal_r+0x1b48>
 40292b0:	013fdfc4 	movi	r4,-129
 40292b4:	9d84b03a 	or	r2,r19,r22
 40292b8:	d8c02d15 	stw	r3,180(sp)
 40292bc:	9124703a 	and	r18,r18,r4
 40292c0:	0039883a 	mov	fp,zero
 40292c4:	103e891e 	bne	r2,zero,4028cec <_gp+0xfffe7aec>
 40292c8:	d9002917 	ldw	r4,164(sp)
 40292cc:	2002c11e 	bne	r4,zero,4029dd4 <___vfprintf_internal_r+0x1630>
 40292d0:	d8002915 	stw	zero,164(sp)
 40292d4:	d8002e15 	stw	zero,184(sp)
 40292d8:	dc001e04 	addi	r16,sp,120
 40292dc:	003ef806 	br	4028ec0 <_gp+0xfffe7cc0>
 40292e0:	18c03fcc 	andi	r3,r3,255
 40292e4:	18059d1e 	bne	r3,zero,402a95c <___vfprintf_internal_r+0x21b8>
 40292e8:	014100f4 	movhi	r5,1027
 40292ec:	295d0d04 	addi	r5,r5,29748
 40292f0:	d9403915 	stw	r5,228(sp)
 40292f4:	9080080c 	andi	r2,r18,32
 40292f8:	10005226 	beq	r2,zero,4029444 <___vfprintf_internal_r+0xca0>
 40292fc:	d8802d17 	ldw	r2,180(sp)
 4029300:	14c00017 	ldw	r19,0(r2)
 4029304:	15800117 	ldw	r22,4(r2)
 4029308:	10800204 	addi	r2,r2,8
 402930c:	d8802d15 	stw	r2,180(sp)
 4029310:	9080004c 	andi	r2,r18,1
 4029314:	10019026 	beq	r2,zero,4029958 <___vfprintf_internal_r+0x11b4>
 4029318:	9d84b03a 	or	r2,r19,r22
 402931c:	10036926 	beq	r2,zero,402a0c4 <___vfprintf_internal_r+0x1920>
 4029320:	d8c02917 	ldw	r3,164(sp)
 4029324:	00800c04 	movi	r2,48
 4029328:	d8802705 	stb	r2,156(sp)
 402932c:	dc402745 	stb	r17,157(sp)
 4029330:	d8002785 	stb	zero,158(sp)
 4029334:	90800094 	ori	r2,r18,2
 4029338:	18045d16 	blt	r3,zero,402a4b0 <___vfprintf_internal_r+0x1d0c>
 402933c:	00bfdfc4 	movi	r2,-129
 4029340:	90a4703a 	and	r18,r18,r2
 4029344:	94800094 	ori	r18,r18,2
 4029348:	0039883a 	mov	fp,zero
 402934c:	d9003917 	ldw	r4,228(sp)
 4029350:	dc001e04 	addi	r16,sp,120
 4029354:	988003cc 	andi	r2,r19,15
 4029358:	b006973a 	slli	r3,r22,28
 402935c:	2085883a 	add	r2,r4,r2
 4029360:	9826d13a 	srli	r19,r19,4
 4029364:	10800003 	ldbu	r2,0(r2)
 4029368:	b02cd13a 	srli	r22,r22,4
 402936c:	843fffc4 	addi	r16,r16,-1
 4029370:	1ce6b03a 	or	r19,r3,r19
 4029374:	80800005 	stb	r2,0(r16)
 4029378:	9d84b03a 	or	r2,r19,r22
 402937c:	103ff51e 	bne	r2,zero,4029354 <_gp+0xfffe8154>
 4029380:	d8c02817 	ldw	r3,160(sp)
 4029384:	1c07c83a 	sub	r3,r3,r16
 4029388:	d8c02e15 	stw	r3,184(sp)
 402938c:	003ecc06 	br	4028ec0 <_gp+0xfffe7cc0>
 4029390:	18c03fcc 	andi	r3,r3,255
 4029394:	183e9f26 	beq	r3,zero,4028e14 <_gp+0xfffe7c14>
 4029398:	d9c02785 	stb	r7,158(sp)
 402939c:	003e9d06 	br	4028e14 <_gp+0xfffe7c14>
 40293a0:	00c00044 	movi	r3,1
 40293a4:	01c00ac4 	movi	r7,43
 40293a8:	ac400007 	ldb	r17,0(r21)
 40293ac:	003d5e06 	br	4028928 <_gp+0xfffe7728>
 40293b0:	94800814 	ori	r18,r18,32
 40293b4:	ac400007 	ldb	r17,0(r21)
 40293b8:	003d5b06 	br	4028928 <_gp+0xfffe7728>
 40293bc:	d8c02d17 	ldw	r3,180(sp)
 40293c0:	d8002785 	stb	zero,158(sp)
 40293c4:	1c000017 	ldw	r16,0(r3)
 40293c8:	1cc00104 	addi	r19,r3,4
 40293cc:	80041926 	beq	r16,zero,402a434 <___vfprintf_internal_r+0x1c90>
 40293d0:	d9002917 	ldw	r4,164(sp)
 40293d4:	2003d016 	blt	r4,zero,402a318 <___vfprintf_internal_r+0x1b74>
 40293d8:	200d883a 	mov	r6,r4
 40293dc:	000b883a 	mov	r5,zero
 40293e0:	8009883a 	mov	r4,r16
 40293e4:	da003d15 	stw	r8,244(sp)
 40293e8:	402cbfc0 	call	402cbfc <memchr>
 40293ec:	da003d17 	ldw	r8,244(sp)
 40293f0:	10045426 	beq	r2,zero,402a544 <___vfprintf_internal_r+0x1da0>
 40293f4:	1405c83a 	sub	r2,r2,r16
 40293f8:	d8802e15 	stw	r2,184(sp)
 40293fc:	1003cc16 	blt	r2,zero,402a330 <___vfprintf_internal_r+0x1b8c>
 4029400:	df002783 	ldbu	fp,158(sp)
 4029404:	d8802a15 	stw	r2,168(sp)
 4029408:	dcc02d15 	stw	r19,180(sp)
 402940c:	d8002915 	stw	zero,164(sp)
 4029410:	d8003215 	stw	zero,200(sp)
 4029414:	003eb006 	br	4028ed8 <_gp+0xfffe7cd8>
 4029418:	18c03fcc 	andi	r3,r3,255
 402941c:	183f9b26 	beq	r3,zero,402928c <_gp+0xfffe808c>
 4029420:	d9c02785 	stb	r7,158(sp)
 4029424:	003f9906 	br	402928c <_gp+0xfffe808c>
 4029428:	18c03fcc 	andi	r3,r3,255
 402942c:	1805551e 	bne	r3,zero,402a984 <___vfprintf_internal_r+0x21e0>
 4029430:	014100f4 	movhi	r5,1027
 4029434:	295d1204 	addi	r5,r5,29768
 4029438:	d9403915 	stw	r5,228(sp)
 402943c:	9080080c 	andi	r2,r18,32
 4029440:	103fae1e 	bne	r2,zero,40292fc <_gp+0xfffe80fc>
 4029444:	9080040c 	andi	r2,r18,16
 4029448:	1002de26 	beq	r2,zero,4029fc4 <___vfprintf_internal_r+0x1820>
 402944c:	d8c02d17 	ldw	r3,180(sp)
 4029450:	002d883a 	mov	r22,zero
 4029454:	1cc00017 	ldw	r19,0(r3)
 4029458:	18c00104 	addi	r3,r3,4
 402945c:	d8c02d15 	stw	r3,180(sp)
 4029460:	003fab06 	br	4029310 <_gp+0xfffe8110>
 4029464:	38803fcc 	andi	r2,r7,255
 4029468:	1080201c 	xori	r2,r2,128
 402946c:	10bfe004 	addi	r2,r2,-128
 4029470:	1002d21e 	bne	r2,zero,4029fbc <___vfprintf_internal_r+0x1818>
 4029474:	00c00044 	movi	r3,1
 4029478:	01c00804 	movi	r7,32
 402947c:	ac400007 	ldb	r17,0(r21)
 4029480:	003d2906 	br	4028928 <_gp+0xfffe7728>
 4029484:	94800054 	ori	r18,r18,1
 4029488:	ac400007 	ldb	r17,0(r21)
 402948c:	003d2606 	br	4028928 <_gp+0xfffe7728>
 4029490:	18c03fcc 	andi	r3,r3,255
 4029494:	183e0526 	beq	r3,zero,4028cac <_gp+0xfffe7aac>
 4029498:	d9c02785 	stb	r7,158(sp)
 402949c:	003e0306 	br	4028cac <_gp+0xfffe7aac>
 40294a0:	94801014 	ori	r18,r18,64
 40294a4:	ac400007 	ldb	r17,0(r21)
 40294a8:	003d1f06 	br	4028928 <_gp+0xfffe7728>
 40294ac:	ac400007 	ldb	r17,0(r21)
 40294b0:	8a438726 	beq	r17,r9,402a2d0 <___vfprintf_internal_r+0x1b2c>
 40294b4:	94800414 	ori	r18,r18,16
 40294b8:	003d1b06 	br	4028928 <_gp+0xfffe7728>
 40294bc:	18c03fcc 	andi	r3,r3,255
 40294c0:	1805341e 	bne	r3,zero,402a994 <___vfprintf_internal_r+0x21f0>
 40294c4:	9080080c 	andi	r2,r18,32
 40294c8:	1002cd26 	beq	r2,zero,402a000 <___vfprintf_internal_r+0x185c>
 40294cc:	d9402d17 	ldw	r5,180(sp)
 40294d0:	d9002f17 	ldw	r4,188(sp)
 40294d4:	28800017 	ldw	r2,0(r5)
 40294d8:	2007d7fa 	srai	r3,r4,31
 40294dc:	29400104 	addi	r5,r5,4
 40294e0:	d9402d15 	stw	r5,180(sp)
 40294e4:	11000015 	stw	r4,0(r2)
 40294e8:	10c00115 	stw	r3,4(r2)
 40294ec:	003ce506 	br	4028884 <_gp+0xfffe7684>
 40294f0:	d8c02d17 	ldw	r3,180(sp)
 40294f4:	d9002d17 	ldw	r4,180(sp)
 40294f8:	d8002785 	stb	zero,158(sp)
 40294fc:	18800017 	ldw	r2,0(r3)
 4029500:	21000104 	addi	r4,r4,4
 4029504:	00c00044 	movi	r3,1
 4029508:	d8c02a15 	stw	r3,168(sp)
 402950c:	d8801405 	stb	r2,80(sp)
 4029510:	d9002d15 	stw	r4,180(sp)
 4029514:	d8c02e15 	stw	r3,184(sp)
 4029518:	d8002915 	stw	zero,164(sp)
 402951c:	d8003215 	stw	zero,200(sp)
 4029520:	dc001404 	addi	r16,sp,80
 4029524:	0039883a 	mov	fp,zero
 4029528:	003e7206 	br	4028ef4 <_gp+0xfffe7cf4>
 402952c:	010100f4 	movhi	r4,1027
 4029530:	211d1204 	addi	r4,r4,29768
 4029534:	0039883a 	mov	fp,zero
 4029538:	d9003915 	stw	r4,228(sp)
 402953c:	04401e04 	movi	r17,120
 4029540:	003f8206 	br	402934c <_gp+0xfffe814c>
 4029544:	18c03fcc 	andi	r3,r3,255
 4029548:	1805061e 	bne	r3,zero,402a964 <___vfprintf_internal_r+0x21c0>
 402954c:	883d9126 	beq	r17,zero,4028b94 <_gp+0xfffe7994>
 4029550:	00c00044 	movi	r3,1
 4029554:	d8c02a15 	stw	r3,168(sp)
 4029558:	dc401405 	stb	r17,80(sp)
 402955c:	d8002785 	stb	zero,158(sp)
 4029560:	003fec06 	br	4029514 <_gp+0xfffe8314>
 4029564:	014100f4 	movhi	r5,1027
 4029568:	295d1204 	addi	r5,r5,29768
 402956c:	d9403915 	stw	r5,228(sp)
 4029570:	d8c02d15 	stw	r3,180(sp)
 4029574:	1025883a 	mov	r18,r2
 4029578:	04401e04 	movi	r17,120
 402957c:	9d84b03a 	or	r2,r19,r22
 4029580:	1000fc1e 	bne	r2,zero,4029974 <___vfprintf_internal_r+0x11d0>
 4029584:	0039883a 	mov	fp,zero
 4029588:	00800084 	movi	r2,2
 402958c:	10803fcc 	andi	r2,r2,255
 4029590:	00c00044 	movi	r3,1
 4029594:	10c20f26 	beq	r2,r3,4029dd4 <___vfprintf_internal_r+0x1630>
 4029598:	00c00084 	movi	r3,2
 402959c:	10fd6326 	beq	r2,r3,4028b2c <_gp+0xfffe792c>
 40295a0:	003e2d06 	br	4028e58 <_gp+0xfffe7c58>
 40295a4:	d8c02017 	ldw	r3,128(sp)
 40295a8:	003e9306 	br	4028ff8 <_gp+0xfffe7df8>
 40295ac:	00801944 	movi	r2,101
 40295b0:	14407e0e 	bge	r2,r17,40297ac <___vfprintf_internal_r+0x1008>
 40295b4:	d9003617 	ldw	r4,216(sp)
 40295b8:	d9403817 	ldw	r5,224(sp)
 40295bc:	000d883a 	mov	r6,zero
 40295c0:	000f883a 	mov	r7,zero
 40295c4:	d8c03c15 	stw	r3,240(sp)
 40295c8:	da003d15 	stw	r8,244(sp)
 40295cc:	40333380 	call	4033338 <__eqdf2>
 40295d0:	d8c03c17 	ldw	r3,240(sp)
 40295d4:	da003d17 	ldw	r8,244(sp)
 40295d8:	1000f71e 	bne	r2,zero,40299b8 <___vfprintf_internal_r+0x1214>
 40295dc:	d8801f17 	ldw	r2,124(sp)
 40295e0:	010100f4 	movhi	r4,1027
 40295e4:	211d1904 	addi	r4,r4,29796
 40295e8:	18c00044 	addi	r3,r3,1
 40295ec:	10800044 	addi	r2,r2,1
 40295f0:	41000015 	stw	r4,0(r8)
 40295f4:	01000044 	movi	r4,1
 40295f8:	41000115 	stw	r4,4(r8)
 40295fc:	d8c02015 	stw	r3,128(sp)
 4029600:	d8801f15 	stw	r2,124(sp)
 4029604:	010001c4 	movi	r4,7
 4029608:	2082b816 	blt	r4,r2,402a0ec <___vfprintf_internal_r+0x1948>
 402960c:	42000204 	addi	r8,r8,8
 4029610:	d8802617 	ldw	r2,152(sp)
 4029614:	d9403317 	ldw	r5,204(sp)
 4029618:	11400216 	blt	r2,r5,4029624 <___vfprintf_internal_r+0xe80>
 402961c:	9080004c 	andi	r2,r18,1
 4029620:	103ed526 	beq	r2,zero,4029178 <_gp+0xfffe7f78>
 4029624:	d8803717 	ldw	r2,220(sp)
 4029628:	d9003417 	ldw	r4,208(sp)
 402962c:	d9403717 	ldw	r5,220(sp)
 4029630:	1887883a 	add	r3,r3,r2
 4029634:	d8801f17 	ldw	r2,124(sp)
 4029638:	41000015 	stw	r4,0(r8)
 402963c:	41400115 	stw	r5,4(r8)
 4029640:	10800044 	addi	r2,r2,1
 4029644:	d8c02015 	stw	r3,128(sp)
 4029648:	d8801f15 	stw	r2,124(sp)
 402964c:	010001c4 	movi	r4,7
 4029650:	20832916 	blt	r4,r2,402a2f8 <___vfprintf_internal_r+0x1b54>
 4029654:	42000204 	addi	r8,r8,8
 4029658:	d8803317 	ldw	r2,204(sp)
 402965c:	143fffc4 	addi	r16,r2,-1
 4029660:	043ec50e 	bge	zero,r16,4029178 <_gp+0xfffe7f78>
 4029664:	04400404 	movi	r17,16
 4029668:	d8801f17 	ldw	r2,124(sp)
 402966c:	8c00880e 	bge	r17,r16,4029890 <___vfprintf_internal_r+0x10ec>
 4029670:	014100f4 	movhi	r5,1027
 4029674:	295d2184 	addi	r5,r5,29830
 4029678:	d9402b15 	stw	r5,172(sp)
 402967c:	058001c4 	movi	r22,7
 4029680:	dcc02c17 	ldw	r19,176(sp)
 4029684:	00000306 	br	4029694 <___vfprintf_internal_r+0xef0>
 4029688:	42000204 	addi	r8,r8,8
 402968c:	843ffc04 	addi	r16,r16,-16
 4029690:	8c00820e 	bge	r17,r16,402989c <___vfprintf_internal_r+0x10f8>
 4029694:	18c00404 	addi	r3,r3,16
 4029698:	10800044 	addi	r2,r2,1
 402969c:	45000015 	stw	r20,0(r8)
 40296a0:	44400115 	stw	r17,4(r8)
 40296a4:	d8c02015 	stw	r3,128(sp)
 40296a8:	d8801f15 	stw	r2,124(sp)
 40296ac:	b0bff60e 	bge	r22,r2,4029688 <_gp+0xfffe8488>
 40296b0:	d9801e04 	addi	r6,sp,120
 40296b4:	b80b883a 	mov	r5,r23
 40296b8:	9809883a 	mov	r4,r19
 40296bc:	402fb9c0 	call	402fb9c <__sprint_r>
 40296c0:	103d3a1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 40296c4:	d8c02017 	ldw	r3,128(sp)
 40296c8:	d8801f17 	ldw	r2,124(sp)
 40296cc:	da000404 	addi	r8,sp,16
 40296d0:	003fee06 	br	402968c <_gp+0xfffe848c>
 40296d4:	d9403117 	ldw	r5,196(sp)
 40296d8:	d8802a17 	ldw	r2,168(sp)
 40296dc:	28adc83a 	sub	r22,r5,r2
 40296e0:	05be630e 	bge	zero,r22,4029070 <_gp+0xfffe7e70>
 40296e4:	07000404 	movi	fp,16
 40296e8:	d8801f17 	ldw	r2,124(sp)
 40296ec:	e5838f0e 	bge	fp,r22,402a52c <___vfprintf_internal_r+0x1d88>
 40296f0:	014100f4 	movhi	r5,1027
 40296f4:	295d2184 	addi	r5,r5,29830
 40296f8:	dc403015 	stw	r17,192(sp)
 40296fc:	d9402b15 	stw	r5,172(sp)
 4029700:	b023883a 	mov	r17,r22
 4029704:	04c001c4 	movi	r19,7
 4029708:	a82d883a 	mov	r22,r21
 402970c:	902b883a 	mov	r21,r18
 4029710:	8025883a 	mov	r18,r16
 4029714:	dc002c17 	ldw	r16,176(sp)
 4029718:	00000306 	br	4029728 <___vfprintf_internal_r+0xf84>
 402971c:	8c7ffc04 	addi	r17,r17,-16
 4029720:	42000204 	addi	r8,r8,8
 4029724:	e440110e 	bge	fp,r17,402976c <___vfprintf_internal_r+0xfc8>
 4029728:	18c00404 	addi	r3,r3,16
 402972c:	10800044 	addi	r2,r2,1
 4029730:	45000015 	stw	r20,0(r8)
 4029734:	47000115 	stw	fp,4(r8)
 4029738:	d8c02015 	stw	r3,128(sp)
 402973c:	d8801f15 	stw	r2,124(sp)
 4029740:	98bff60e 	bge	r19,r2,402971c <_gp+0xfffe851c>
 4029744:	d9801e04 	addi	r6,sp,120
 4029748:	b80b883a 	mov	r5,r23
 402974c:	8009883a 	mov	r4,r16
 4029750:	402fb9c0 	call	402fb9c <__sprint_r>
 4029754:	103d151e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029758:	8c7ffc04 	addi	r17,r17,-16
 402975c:	d8c02017 	ldw	r3,128(sp)
 4029760:	d8801f17 	ldw	r2,124(sp)
 4029764:	da000404 	addi	r8,sp,16
 4029768:	e47fef16 	blt	fp,r17,4029728 <_gp+0xfffe8528>
 402976c:	9021883a 	mov	r16,r18
 4029770:	a825883a 	mov	r18,r21
 4029774:	b02b883a 	mov	r21,r22
 4029778:	882d883a 	mov	r22,r17
 402977c:	dc403017 	ldw	r17,192(sp)
 4029780:	d9002b17 	ldw	r4,172(sp)
 4029784:	1d87883a 	add	r3,r3,r22
 4029788:	10800044 	addi	r2,r2,1
 402978c:	41000015 	stw	r4,0(r8)
 4029790:	45800115 	stw	r22,4(r8)
 4029794:	d8c02015 	stw	r3,128(sp)
 4029798:	d8801f15 	stw	r2,124(sp)
 402979c:	010001c4 	movi	r4,7
 40297a0:	20818e16 	blt	r4,r2,4029ddc <___vfprintf_internal_r+0x1638>
 40297a4:	42000204 	addi	r8,r8,8
 40297a8:	003e3106 	br	4029070 <_gp+0xfffe7e70>
 40297ac:	d9403317 	ldw	r5,204(sp)
 40297b0:	00800044 	movi	r2,1
 40297b4:	18c00044 	addi	r3,r3,1
 40297b8:	1141530e 	bge	r2,r5,4029d08 <___vfprintf_internal_r+0x1564>
 40297bc:	dc401f17 	ldw	r17,124(sp)
 40297c0:	00800044 	movi	r2,1
 40297c4:	40800115 	stw	r2,4(r8)
 40297c8:	8c400044 	addi	r17,r17,1
 40297cc:	44000015 	stw	r16,0(r8)
 40297d0:	d8c02015 	stw	r3,128(sp)
 40297d4:	dc401f15 	stw	r17,124(sp)
 40297d8:	008001c4 	movi	r2,7
 40297dc:	14416b16 	blt	r2,r17,4029d8c <___vfprintf_internal_r+0x15e8>
 40297e0:	42000204 	addi	r8,r8,8
 40297e4:	d8803717 	ldw	r2,220(sp)
 40297e8:	d9003417 	ldw	r4,208(sp)
 40297ec:	8c400044 	addi	r17,r17,1
 40297f0:	10c7883a 	add	r3,r2,r3
 40297f4:	40800115 	stw	r2,4(r8)
 40297f8:	41000015 	stw	r4,0(r8)
 40297fc:	d8c02015 	stw	r3,128(sp)
 4029800:	dc401f15 	stw	r17,124(sp)
 4029804:	008001c4 	movi	r2,7
 4029808:	14416916 	blt	r2,r17,4029db0 <___vfprintf_internal_r+0x160c>
 402980c:	45800204 	addi	r22,r8,8
 4029810:	d9003617 	ldw	r4,216(sp)
 4029814:	d9403817 	ldw	r5,224(sp)
 4029818:	000d883a 	mov	r6,zero
 402981c:	000f883a 	mov	r7,zero
 4029820:	d8c03c15 	stw	r3,240(sp)
 4029824:	40333380 	call	4033338 <__eqdf2>
 4029828:	d8c03c17 	ldw	r3,240(sp)
 402982c:	1000bc26 	beq	r2,zero,4029b20 <___vfprintf_internal_r+0x137c>
 4029830:	d9403317 	ldw	r5,204(sp)
 4029834:	84000044 	addi	r16,r16,1
 4029838:	8c400044 	addi	r17,r17,1
 402983c:	28bfffc4 	addi	r2,r5,-1
 4029840:	1887883a 	add	r3,r3,r2
 4029844:	b0800115 	stw	r2,4(r22)
 4029848:	b4000015 	stw	r16,0(r22)
 402984c:	d8c02015 	stw	r3,128(sp)
 4029850:	dc401f15 	stw	r17,124(sp)
 4029854:	008001c4 	movi	r2,7
 4029858:	14414316 	blt	r2,r17,4029d68 <___vfprintf_internal_r+0x15c4>
 402985c:	b5800204 	addi	r22,r22,8
 4029860:	d9003a17 	ldw	r4,232(sp)
 4029864:	df0022c4 	addi	fp,sp,139
 4029868:	8c400044 	addi	r17,r17,1
 402986c:	20c7883a 	add	r3,r4,r3
 4029870:	b7000015 	stw	fp,0(r22)
 4029874:	b1000115 	stw	r4,4(r22)
 4029878:	d8c02015 	stw	r3,128(sp)
 402987c:	dc401f15 	stw	r17,124(sp)
 4029880:	008001c4 	movi	r2,7
 4029884:	14400e16 	blt	r2,r17,40298c0 <___vfprintf_internal_r+0x111c>
 4029888:	b2000204 	addi	r8,r22,8
 402988c:	003e3a06 	br	4029178 <_gp+0xfffe7f78>
 4029890:	010100f4 	movhi	r4,1027
 4029894:	211d2184 	addi	r4,r4,29830
 4029898:	d9002b15 	stw	r4,172(sp)
 402989c:	d9002b17 	ldw	r4,172(sp)
 40298a0:	1c07883a 	add	r3,r3,r16
 40298a4:	44000115 	stw	r16,4(r8)
 40298a8:	41000015 	stw	r4,0(r8)
 40298ac:	10800044 	addi	r2,r2,1
 40298b0:	d8c02015 	stw	r3,128(sp)
 40298b4:	d8801f15 	stw	r2,124(sp)
 40298b8:	010001c4 	movi	r4,7
 40298bc:	20be2d0e 	bge	r4,r2,4029174 <_gp+0xfffe7f74>
 40298c0:	d9002c17 	ldw	r4,176(sp)
 40298c4:	d9801e04 	addi	r6,sp,120
 40298c8:	b80b883a 	mov	r5,r23
 40298cc:	402fb9c0 	call	402fb9c <__sprint_r>
 40298d0:	103cb61e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 40298d4:	d8c02017 	ldw	r3,128(sp)
 40298d8:	da000404 	addi	r8,sp,16
 40298dc:	003e2606 	br	4029178 <_gp+0xfffe7f78>
 40298e0:	d9002c17 	ldw	r4,176(sp)
 40298e4:	d9801e04 	addi	r6,sp,120
 40298e8:	b80b883a 	mov	r5,r23
 40298ec:	402fb9c0 	call	402fb9c <__sprint_r>
 40298f0:	103e5d26 	beq	r2,zero,4029268 <_gp+0xfffe8068>
 40298f4:	003cad06 	br	4028bac <_gp+0xfffe79ac>
 40298f8:	d9002c17 	ldw	r4,176(sp)
 40298fc:	d9801e04 	addi	r6,sp,120
 4029900:	b80b883a 	mov	r5,r23
 4029904:	402fb9c0 	call	402fb9c <__sprint_r>
 4029908:	103ca81e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402990c:	d8c02017 	ldw	r3,128(sp)
 4029910:	da000404 	addi	r8,sp,16
 4029914:	003e0b06 	br	4029144 <_gp+0xfffe7f44>
 4029918:	d9002c17 	ldw	r4,176(sp)
 402991c:	d9801e04 	addi	r6,sp,120
 4029920:	b80b883a 	mov	r5,r23
 4029924:	402fb9c0 	call	402fb9c <__sprint_r>
 4029928:	103ca01e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402992c:	d8c02017 	ldw	r3,128(sp)
 4029930:	da000404 	addi	r8,sp,16
 4029934:	003dbd06 	br	402902c <_gp+0xfffe7e2c>
 4029938:	d9002c17 	ldw	r4,176(sp)
 402993c:	d9801e04 	addi	r6,sp,120
 4029940:	b80b883a 	mov	r5,r23
 4029944:	402fb9c0 	call	402fb9c <__sprint_r>
 4029948:	103c981e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402994c:	d8c02017 	ldw	r3,128(sp)
 4029950:	da000404 	addi	r8,sp,16
 4029954:	003dc306 	br	4029064 <_gp+0xfffe7e64>
 4029958:	d8802917 	ldw	r2,164(sp)
 402995c:	d8002785 	stb	zero,158(sp)
 4029960:	103f0616 	blt	r2,zero,402957c <_gp+0xfffe837c>
 4029964:	00ffdfc4 	movi	r3,-129
 4029968:	9d84b03a 	or	r2,r19,r22
 402996c:	90e4703a 	and	r18,r18,r3
 4029970:	103c6b26 	beq	r2,zero,4028b20 <_gp+0xfffe7920>
 4029974:	0039883a 	mov	fp,zero
 4029978:	003e7406 	br	402934c <_gp+0xfffe814c>
 402997c:	9080040c 	andi	r2,r18,16
 4029980:	1001b326 	beq	r2,zero,402a050 <___vfprintf_internal_r+0x18ac>
 4029984:	d9002d17 	ldw	r4,180(sp)
 4029988:	d9402917 	ldw	r5,164(sp)
 402998c:	d8002785 	stb	zero,158(sp)
 4029990:	20800104 	addi	r2,r4,4
 4029994:	24c00017 	ldw	r19,0(r4)
 4029998:	002d883a 	mov	r22,zero
 402999c:	2801b516 	blt	r5,zero,402a074 <___vfprintf_internal_r+0x18d0>
 40299a0:	00ffdfc4 	movi	r3,-129
 40299a4:	d8802d15 	stw	r2,180(sp)
 40299a8:	90e4703a 	and	r18,r18,r3
 40299ac:	983d2726 	beq	r19,zero,4028e4c <_gp+0xfffe7c4c>
 40299b0:	0039883a 	mov	fp,zero
 40299b4:	003d2a06 	br	4028e60 <_gp+0xfffe7c60>
 40299b8:	dc402617 	ldw	r17,152(sp)
 40299bc:	0441d30e 	bge	zero,r17,402a10c <___vfprintf_internal_r+0x1968>
 40299c0:	dc403217 	ldw	r17,200(sp)
 40299c4:	d8803317 	ldw	r2,204(sp)
 40299c8:	1440010e 	bge	r2,r17,40299d0 <___vfprintf_internal_r+0x122c>
 40299cc:	1023883a 	mov	r17,r2
 40299d0:	04400a0e 	bge	zero,r17,40299fc <___vfprintf_internal_r+0x1258>
 40299d4:	d8801f17 	ldw	r2,124(sp)
 40299d8:	1c47883a 	add	r3,r3,r17
 40299dc:	44000015 	stw	r16,0(r8)
 40299e0:	10800044 	addi	r2,r2,1
 40299e4:	44400115 	stw	r17,4(r8)
 40299e8:	d8c02015 	stw	r3,128(sp)
 40299ec:	d8801f15 	stw	r2,124(sp)
 40299f0:	010001c4 	movi	r4,7
 40299f4:	20826516 	blt	r4,r2,402a38c <___vfprintf_internal_r+0x1be8>
 40299f8:	42000204 	addi	r8,r8,8
 40299fc:	88026116 	blt	r17,zero,402a384 <___vfprintf_internal_r+0x1be0>
 4029a00:	d9003217 	ldw	r4,200(sp)
 4029a04:	2463c83a 	sub	r17,r4,r17
 4029a08:	04407b0e 	bge	zero,r17,4029bf8 <___vfprintf_internal_r+0x1454>
 4029a0c:	05800404 	movi	r22,16
 4029a10:	d8801f17 	ldw	r2,124(sp)
 4029a14:	b4419d0e 	bge	r22,r17,402a08c <___vfprintf_internal_r+0x18e8>
 4029a18:	010100f4 	movhi	r4,1027
 4029a1c:	211d2184 	addi	r4,r4,29830
 4029a20:	d9002b15 	stw	r4,172(sp)
 4029a24:	070001c4 	movi	fp,7
 4029a28:	dcc02c17 	ldw	r19,176(sp)
 4029a2c:	00000306 	br	4029a3c <___vfprintf_internal_r+0x1298>
 4029a30:	42000204 	addi	r8,r8,8
 4029a34:	8c7ffc04 	addi	r17,r17,-16
 4029a38:	b441970e 	bge	r22,r17,402a098 <___vfprintf_internal_r+0x18f4>
 4029a3c:	18c00404 	addi	r3,r3,16
 4029a40:	10800044 	addi	r2,r2,1
 4029a44:	45000015 	stw	r20,0(r8)
 4029a48:	45800115 	stw	r22,4(r8)
 4029a4c:	d8c02015 	stw	r3,128(sp)
 4029a50:	d8801f15 	stw	r2,124(sp)
 4029a54:	e0bff60e 	bge	fp,r2,4029a30 <_gp+0xfffe8830>
 4029a58:	d9801e04 	addi	r6,sp,120
 4029a5c:	b80b883a 	mov	r5,r23
 4029a60:	9809883a 	mov	r4,r19
 4029a64:	402fb9c0 	call	402fb9c <__sprint_r>
 4029a68:	103c501e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029a6c:	d8c02017 	ldw	r3,128(sp)
 4029a70:	d8801f17 	ldw	r2,124(sp)
 4029a74:	da000404 	addi	r8,sp,16
 4029a78:	003fee06 	br	4029a34 <_gp+0xfffe8834>
 4029a7c:	d9002c17 	ldw	r4,176(sp)
 4029a80:	d9801e04 	addi	r6,sp,120
 4029a84:	b80b883a 	mov	r5,r23
 4029a88:	402fb9c0 	call	402fb9c <__sprint_r>
 4029a8c:	103c471e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029a90:	d8c02017 	ldw	r3,128(sp)
 4029a94:	df002787 	ldb	fp,158(sp)
 4029a98:	da000404 	addi	r8,sp,16
 4029a9c:	003d5606 	br	4028ff8 <_gp+0xfffe7df8>
 4029aa0:	9080040c 	andi	r2,r18,16
 4029aa4:	10016126 	beq	r2,zero,402a02c <___vfprintf_internal_r+0x1888>
 4029aa8:	d8802d17 	ldw	r2,180(sp)
 4029aac:	14c00017 	ldw	r19,0(r2)
 4029ab0:	10800104 	addi	r2,r2,4
 4029ab4:	d8802d15 	stw	r2,180(sp)
 4029ab8:	982dd7fa 	srai	r22,r19,31
 4029abc:	b005883a 	mov	r2,r22
 4029ac0:	003c8206 	br	4028ccc <_gp+0xfffe7acc>
 4029ac4:	9080040c 	andi	r2,r18,16
 4029ac8:	10003526 	beq	r2,zero,4029ba0 <___vfprintf_internal_r+0x13fc>
 4029acc:	d9402d17 	ldw	r5,180(sp)
 4029ad0:	d8c02917 	ldw	r3,164(sp)
 4029ad4:	d8002785 	stb	zero,158(sp)
 4029ad8:	28800104 	addi	r2,r5,4
 4029adc:	2cc00017 	ldw	r19,0(r5)
 4029ae0:	002d883a 	mov	r22,zero
 4029ae4:	18003716 	blt	r3,zero,4029bc4 <___vfprintf_internal_r+0x1420>
 4029ae8:	00ffdfc4 	movi	r3,-129
 4029aec:	d8802d15 	stw	r2,180(sp)
 4029af0:	90e4703a 	and	r18,r18,r3
 4029af4:	0039883a 	mov	fp,zero
 4029af8:	983df326 	beq	r19,zero,40292c8 <_gp+0xfffe80c8>
 4029afc:	00800244 	movi	r2,9
 4029b00:	14fc7b36 	bltu	r2,r19,4028cf0 <_gp+0xfffe7af0>
 4029b04:	d8c02817 	ldw	r3,160(sp)
 4029b08:	dc001dc4 	addi	r16,sp,119
 4029b0c:	9cc00c04 	addi	r19,r19,48
 4029b10:	1c07c83a 	sub	r3,r3,r16
 4029b14:	dcc01dc5 	stb	r19,119(sp)
 4029b18:	d8c02e15 	stw	r3,184(sp)
 4029b1c:	003ce806 	br	4028ec0 <_gp+0xfffe7cc0>
 4029b20:	d8803317 	ldw	r2,204(sp)
 4029b24:	143fffc4 	addi	r16,r2,-1
 4029b28:	043f4d0e 	bge	zero,r16,4029860 <_gp+0xfffe8660>
 4029b2c:	07000404 	movi	fp,16
 4029b30:	e400810e 	bge	fp,r16,4029d38 <___vfprintf_internal_r+0x1594>
 4029b34:	014100f4 	movhi	r5,1027
 4029b38:	295d2184 	addi	r5,r5,29830
 4029b3c:	d9402b15 	stw	r5,172(sp)
 4029b40:	01c001c4 	movi	r7,7
 4029b44:	dcc02c17 	ldw	r19,176(sp)
 4029b48:	00000306 	br	4029b58 <___vfprintf_internal_r+0x13b4>
 4029b4c:	b5800204 	addi	r22,r22,8
 4029b50:	843ffc04 	addi	r16,r16,-16
 4029b54:	e4007b0e 	bge	fp,r16,4029d44 <___vfprintf_internal_r+0x15a0>
 4029b58:	18c00404 	addi	r3,r3,16
 4029b5c:	8c400044 	addi	r17,r17,1
 4029b60:	b5000015 	stw	r20,0(r22)
 4029b64:	b7000115 	stw	fp,4(r22)
 4029b68:	d8c02015 	stw	r3,128(sp)
 4029b6c:	dc401f15 	stw	r17,124(sp)
 4029b70:	3c7ff60e 	bge	r7,r17,4029b4c <_gp+0xfffe894c>
 4029b74:	d9801e04 	addi	r6,sp,120
 4029b78:	b80b883a 	mov	r5,r23
 4029b7c:	9809883a 	mov	r4,r19
 4029b80:	d9c03c15 	stw	r7,240(sp)
 4029b84:	402fb9c0 	call	402fb9c <__sprint_r>
 4029b88:	d9c03c17 	ldw	r7,240(sp)
 4029b8c:	103c071e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029b90:	d8c02017 	ldw	r3,128(sp)
 4029b94:	dc401f17 	ldw	r17,124(sp)
 4029b98:	dd800404 	addi	r22,sp,16
 4029b9c:	003fec06 	br	4029b50 <_gp+0xfffe8950>
 4029ba0:	9080100c 	andi	r2,r18,64
 4029ba4:	d8002785 	stb	zero,158(sp)
 4029ba8:	10010e26 	beq	r2,zero,4029fe4 <___vfprintf_internal_r+0x1840>
 4029bac:	d9002d17 	ldw	r4,180(sp)
 4029bb0:	d9402917 	ldw	r5,164(sp)
 4029bb4:	002d883a 	mov	r22,zero
 4029bb8:	20800104 	addi	r2,r4,4
 4029bbc:	24c0000b 	ldhu	r19,0(r4)
 4029bc0:	283fc90e 	bge	r5,zero,4029ae8 <_gp+0xfffe88e8>
 4029bc4:	d8802d15 	stw	r2,180(sp)
 4029bc8:	0039883a 	mov	fp,zero
 4029bcc:	9d84b03a 	or	r2,r19,r22
 4029bd0:	103c461e 	bne	r2,zero,4028cec <_gp+0xfffe7aec>
 4029bd4:	00800044 	movi	r2,1
 4029bd8:	003e6c06 	br	402958c <_gp+0xfffe838c>
 4029bdc:	d9002c17 	ldw	r4,176(sp)
 4029be0:	d9801e04 	addi	r6,sp,120
 4029be4:	b80b883a 	mov	r5,r23
 4029be8:	402fb9c0 	call	402fb9c <__sprint_r>
 4029bec:	103bef1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029bf0:	d8c02017 	ldw	r3,128(sp)
 4029bf4:	da000404 	addi	r8,sp,16
 4029bf8:	d9003217 	ldw	r4,200(sp)
 4029bfc:	d8802617 	ldw	r2,152(sp)
 4029c00:	d9403317 	ldw	r5,204(sp)
 4029c04:	8123883a 	add	r17,r16,r4
 4029c08:	11400216 	blt	r2,r5,4029c14 <___vfprintf_internal_r+0x1470>
 4029c0c:	9100004c 	andi	r4,r18,1
 4029c10:	20000d26 	beq	r4,zero,4029c48 <___vfprintf_internal_r+0x14a4>
 4029c14:	d9003717 	ldw	r4,220(sp)
 4029c18:	d9403417 	ldw	r5,208(sp)
 4029c1c:	1907883a 	add	r3,r3,r4
 4029c20:	d9001f17 	ldw	r4,124(sp)
 4029c24:	41400015 	stw	r5,0(r8)
 4029c28:	d9403717 	ldw	r5,220(sp)
 4029c2c:	21000044 	addi	r4,r4,1
 4029c30:	d8c02015 	stw	r3,128(sp)
 4029c34:	41400115 	stw	r5,4(r8)
 4029c38:	d9001f15 	stw	r4,124(sp)
 4029c3c:	014001c4 	movi	r5,7
 4029c40:	2901e816 	blt	r5,r4,402a3e4 <___vfprintf_internal_r+0x1c40>
 4029c44:	42000204 	addi	r8,r8,8
 4029c48:	d9003317 	ldw	r4,204(sp)
 4029c4c:	8121883a 	add	r16,r16,r4
 4029c50:	2085c83a 	sub	r2,r4,r2
 4029c54:	8461c83a 	sub	r16,r16,r17
 4029c58:	1400010e 	bge	r2,r16,4029c60 <___vfprintf_internal_r+0x14bc>
 4029c5c:	1021883a 	mov	r16,r2
 4029c60:	04000a0e 	bge	zero,r16,4029c8c <___vfprintf_internal_r+0x14e8>
 4029c64:	d9001f17 	ldw	r4,124(sp)
 4029c68:	1c07883a 	add	r3,r3,r16
 4029c6c:	44400015 	stw	r17,0(r8)
 4029c70:	21000044 	addi	r4,r4,1
 4029c74:	44000115 	stw	r16,4(r8)
 4029c78:	d8c02015 	stw	r3,128(sp)
 4029c7c:	d9001f15 	stw	r4,124(sp)
 4029c80:	014001c4 	movi	r5,7
 4029c84:	2901fb16 	blt	r5,r4,402a474 <___vfprintf_internal_r+0x1cd0>
 4029c88:	42000204 	addi	r8,r8,8
 4029c8c:	8001f716 	blt	r16,zero,402a46c <___vfprintf_internal_r+0x1cc8>
 4029c90:	1421c83a 	sub	r16,r2,r16
 4029c94:	043d380e 	bge	zero,r16,4029178 <_gp+0xfffe7f78>
 4029c98:	04400404 	movi	r17,16
 4029c9c:	d8801f17 	ldw	r2,124(sp)
 4029ca0:	8c3efb0e 	bge	r17,r16,4029890 <_gp+0xfffe8690>
 4029ca4:	014100f4 	movhi	r5,1027
 4029ca8:	295d2184 	addi	r5,r5,29830
 4029cac:	d9402b15 	stw	r5,172(sp)
 4029cb0:	058001c4 	movi	r22,7
 4029cb4:	dcc02c17 	ldw	r19,176(sp)
 4029cb8:	00000306 	br	4029cc8 <___vfprintf_internal_r+0x1524>
 4029cbc:	42000204 	addi	r8,r8,8
 4029cc0:	843ffc04 	addi	r16,r16,-16
 4029cc4:	8c3ef50e 	bge	r17,r16,402989c <_gp+0xfffe869c>
 4029cc8:	18c00404 	addi	r3,r3,16
 4029ccc:	10800044 	addi	r2,r2,1
 4029cd0:	45000015 	stw	r20,0(r8)
 4029cd4:	44400115 	stw	r17,4(r8)
 4029cd8:	d8c02015 	stw	r3,128(sp)
 4029cdc:	d8801f15 	stw	r2,124(sp)
 4029ce0:	b0bff60e 	bge	r22,r2,4029cbc <_gp+0xfffe8abc>
 4029ce4:	d9801e04 	addi	r6,sp,120
 4029ce8:	b80b883a 	mov	r5,r23
 4029cec:	9809883a 	mov	r4,r19
 4029cf0:	402fb9c0 	call	402fb9c <__sprint_r>
 4029cf4:	103bad1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029cf8:	d8c02017 	ldw	r3,128(sp)
 4029cfc:	d8801f17 	ldw	r2,124(sp)
 4029d00:	da000404 	addi	r8,sp,16
 4029d04:	003fee06 	br	4029cc0 <_gp+0xfffe8ac0>
 4029d08:	9088703a 	and	r4,r18,r2
 4029d0c:	203eab1e 	bne	r4,zero,40297bc <_gp+0xfffe85bc>
 4029d10:	dc401f17 	ldw	r17,124(sp)
 4029d14:	40800115 	stw	r2,4(r8)
 4029d18:	44000015 	stw	r16,0(r8)
 4029d1c:	8c400044 	addi	r17,r17,1
 4029d20:	d8c02015 	stw	r3,128(sp)
 4029d24:	dc401f15 	stw	r17,124(sp)
 4029d28:	008001c4 	movi	r2,7
 4029d2c:	14400e16 	blt	r2,r17,4029d68 <___vfprintf_internal_r+0x15c4>
 4029d30:	45800204 	addi	r22,r8,8
 4029d34:	003eca06 	br	4029860 <_gp+0xfffe8660>
 4029d38:	010100f4 	movhi	r4,1027
 4029d3c:	211d2184 	addi	r4,r4,29830
 4029d40:	d9002b15 	stw	r4,172(sp)
 4029d44:	d8802b17 	ldw	r2,172(sp)
 4029d48:	1c07883a 	add	r3,r3,r16
 4029d4c:	8c400044 	addi	r17,r17,1
 4029d50:	b0800015 	stw	r2,0(r22)
 4029d54:	b4000115 	stw	r16,4(r22)
 4029d58:	d8c02015 	stw	r3,128(sp)
 4029d5c:	dc401f15 	stw	r17,124(sp)
 4029d60:	008001c4 	movi	r2,7
 4029d64:	147ebd0e 	bge	r2,r17,402985c <_gp+0xfffe865c>
 4029d68:	d9002c17 	ldw	r4,176(sp)
 4029d6c:	d9801e04 	addi	r6,sp,120
 4029d70:	b80b883a 	mov	r5,r23
 4029d74:	402fb9c0 	call	402fb9c <__sprint_r>
 4029d78:	103b8c1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029d7c:	d8c02017 	ldw	r3,128(sp)
 4029d80:	dc401f17 	ldw	r17,124(sp)
 4029d84:	dd800404 	addi	r22,sp,16
 4029d88:	003eb506 	br	4029860 <_gp+0xfffe8660>
 4029d8c:	d9002c17 	ldw	r4,176(sp)
 4029d90:	d9801e04 	addi	r6,sp,120
 4029d94:	b80b883a 	mov	r5,r23
 4029d98:	402fb9c0 	call	402fb9c <__sprint_r>
 4029d9c:	103b831e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029da0:	d8c02017 	ldw	r3,128(sp)
 4029da4:	dc401f17 	ldw	r17,124(sp)
 4029da8:	da000404 	addi	r8,sp,16
 4029dac:	003e8d06 	br	40297e4 <_gp+0xfffe85e4>
 4029db0:	d9002c17 	ldw	r4,176(sp)
 4029db4:	d9801e04 	addi	r6,sp,120
 4029db8:	b80b883a 	mov	r5,r23
 4029dbc:	402fb9c0 	call	402fb9c <__sprint_r>
 4029dc0:	103b7a1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029dc4:	d8c02017 	ldw	r3,128(sp)
 4029dc8:	dc401f17 	ldw	r17,124(sp)
 4029dcc:	dd800404 	addi	r22,sp,16
 4029dd0:	003e8f06 	br	4029810 <_gp+0xfffe8610>
 4029dd4:	0027883a 	mov	r19,zero
 4029dd8:	003f4a06 	br	4029b04 <_gp+0xfffe8904>
 4029ddc:	d9002c17 	ldw	r4,176(sp)
 4029de0:	d9801e04 	addi	r6,sp,120
 4029de4:	b80b883a 	mov	r5,r23
 4029de8:	402fb9c0 	call	402fb9c <__sprint_r>
 4029dec:	103b6f1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 4029df0:	d8c02017 	ldw	r3,128(sp)
 4029df4:	da000404 	addi	r8,sp,16
 4029df8:	003c9d06 	br	4029070 <_gp+0xfffe7e70>
 4029dfc:	04e7c83a 	sub	r19,zero,r19
 4029e00:	9804c03a 	cmpne	r2,r19,zero
 4029e04:	05adc83a 	sub	r22,zero,r22
 4029e08:	b0adc83a 	sub	r22,r22,r2
 4029e0c:	d8802917 	ldw	r2,164(sp)
 4029e10:	07000b44 	movi	fp,45
 4029e14:	df002785 	stb	fp,158(sp)
 4029e18:	10017b16 	blt	r2,zero,402a408 <___vfprintf_internal_r+0x1c64>
 4029e1c:	00bfdfc4 	movi	r2,-129
 4029e20:	90a4703a 	and	r18,r18,r2
 4029e24:	003bb106 	br	4028cec <_gp+0xfffe7aec>
 4029e28:	d9003617 	ldw	r4,216(sp)
 4029e2c:	d9403817 	ldw	r5,224(sp)
 4029e30:	da003d15 	stw	r8,244(sp)
 4029e34:	402e5440 	call	402e544 <__fpclassifyd>
 4029e38:	da003d17 	ldw	r8,244(sp)
 4029e3c:	1000f026 	beq	r2,zero,402a200 <___vfprintf_internal_r+0x1a5c>
 4029e40:	d9002917 	ldw	r4,164(sp)
 4029e44:	05bff7c4 	movi	r22,-33
 4029e48:	00bfffc4 	movi	r2,-1
 4029e4c:	8dac703a 	and	r22,r17,r22
 4029e50:	20820026 	beq	r4,r2,402a654 <___vfprintf_internal_r+0x1eb0>
 4029e54:	008011c4 	movi	r2,71
 4029e58:	b081f726 	beq	r22,r2,402a638 <___vfprintf_internal_r+0x1e94>
 4029e5c:	d9003817 	ldw	r4,224(sp)
 4029e60:	90c04014 	ori	r3,r18,256
 4029e64:	d8c02b15 	stw	r3,172(sp)
 4029e68:	20021516 	blt	r4,zero,402a6c0 <___vfprintf_internal_r+0x1f1c>
 4029e6c:	dcc03817 	ldw	r19,224(sp)
 4029e70:	d8002a05 	stb	zero,168(sp)
 4029e74:	00801984 	movi	r2,102
 4029e78:	8881f926 	beq	r17,r2,402a660 <___vfprintf_internal_r+0x1ebc>
 4029e7c:	00801184 	movi	r2,70
 4029e80:	88821c26 	beq	r17,r2,402a6f4 <___vfprintf_internal_r+0x1f50>
 4029e84:	00801144 	movi	r2,69
 4029e88:	b081ef26 	beq	r22,r2,402a648 <___vfprintf_internal_r+0x1ea4>
 4029e8c:	d8c02917 	ldw	r3,164(sp)
 4029e90:	d8802104 	addi	r2,sp,132
 4029e94:	d8800315 	stw	r2,12(sp)
 4029e98:	d9403617 	ldw	r5,216(sp)
 4029e9c:	d8802504 	addi	r2,sp,148
 4029ea0:	d9002c17 	ldw	r4,176(sp)
 4029ea4:	d8800215 	stw	r2,8(sp)
 4029ea8:	d8802604 	addi	r2,sp,152
 4029eac:	d8c00015 	stw	r3,0(sp)
 4029eb0:	d8800115 	stw	r2,4(sp)
 4029eb4:	01c00084 	movi	r7,2
 4029eb8:	980d883a 	mov	r6,r19
 4029ebc:	d8c03c15 	stw	r3,240(sp)
 4029ec0:	da003d15 	stw	r8,244(sp)
 4029ec4:	402ae7c0 	call	402ae7c <_dtoa_r>
 4029ec8:	1021883a 	mov	r16,r2
 4029ecc:	008019c4 	movi	r2,103
 4029ed0:	d8c03c17 	ldw	r3,240(sp)
 4029ed4:	da003d17 	ldw	r8,244(sp)
 4029ed8:	88817126 	beq	r17,r2,402a4a0 <___vfprintf_internal_r+0x1cfc>
 4029edc:	008011c4 	movi	r2,71
 4029ee0:	88829226 	beq	r17,r2,402a92c <___vfprintf_internal_r+0x2188>
 4029ee4:	80f9883a 	add	fp,r16,r3
 4029ee8:	d9003617 	ldw	r4,216(sp)
 4029eec:	000d883a 	mov	r6,zero
 4029ef0:	000f883a 	mov	r7,zero
 4029ef4:	980b883a 	mov	r5,r19
 4029ef8:	da003d15 	stw	r8,244(sp)
 4029efc:	40333380 	call	4033338 <__eqdf2>
 4029f00:	da003d17 	ldw	r8,244(sp)
 4029f04:	10018d26 	beq	r2,zero,402a53c <___vfprintf_internal_r+0x1d98>
 4029f08:	d8802117 	ldw	r2,132(sp)
 4029f0c:	1700062e 	bgeu	r2,fp,4029f28 <___vfprintf_internal_r+0x1784>
 4029f10:	01000c04 	movi	r4,48
 4029f14:	10c00044 	addi	r3,r2,1
 4029f18:	d8c02115 	stw	r3,132(sp)
 4029f1c:	11000005 	stb	r4,0(r2)
 4029f20:	d8802117 	ldw	r2,132(sp)
 4029f24:	173ffb36 	bltu	r2,fp,4029f14 <_gp+0xfffe8d14>
 4029f28:	1405c83a 	sub	r2,r2,r16
 4029f2c:	d8803315 	stw	r2,204(sp)
 4029f30:	008011c4 	movi	r2,71
 4029f34:	b0817626 	beq	r22,r2,402a510 <___vfprintf_internal_r+0x1d6c>
 4029f38:	00801944 	movi	r2,101
 4029f3c:	1442810e 	bge	r2,r17,402a944 <___vfprintf_internal_r+0x21a0>
 4029f40:	d8c02617 	ldw	r3,152(sp)
 4029f44:	00801984 	movi	r2,102
 4029f48:	d8c03215 	stw	r3,200(sp)
 4029f4c:	8881fe26 	beq	r17,r2,402a748 <___vfprintf_internal_r+0x1fa4>
 4029f50:	d8c03217 	ldw	r3,200(sp)
 4029f54:	d9003317 	ldw	r4,204(sp)
 4029f58:	1901dd16 	blt	r3,r4,402a6d0 <___vfprintf_internal_r+0x1f2c>
 4029f5c:	9480004c 	andi	r18,r18,1
 4029f60:	90022b1e 	bne	r18,zero,402a810 <___vfprintf_internal_r+0x206c>
 4029f64:	1805883a 	mov	r2,r3
 4029f68:	18028016 	blt	r3,zero,402a96c <___vfprintf_internal_r+0x21c8>
 4029f6c:	d8c03217 	ldw	r3,200(sp)
 4029f70:	044019c4 	movi	r17,103
 4029f74:	d8c02e15 	stw	r3,184(sp)
 4029f78:	df002a07 	ldb	fp,168(sp)
 4029f7c:	e001531e 	bne	fp,zero,402a4cc <___vfprintf_internal_r+0x1d28>
 4029f80:	df002783 	ldbu	fp,158(sp)
 4029f84:	d8802a15 	stw	r2,168(sp)
 4029f88:	dc802b17 	ldw	r18,172(sp)
 4029f8c:	d8002915 	stw	zero,164(sp)
 4029f90:	003bd106 	br	4028ed8 <_gp+0xfffe7cd8>
 4029f94:	d8802d17 	ldw	r2,180(sp)
 4029f98:	d8c02d17 	ldw	r3,180(sp)
 4029f9c:	d9002d17 	ldw	r4,180(sp)
 4029fa0:	10800017 	ldw	r2,0(r2)
 4029fa4:	18c00117 	ldw	r3,4(r3)
 4029fa8:	21000204 	addi	r4,r4,8
 4029fac:	d8803615 	stw	r2,216(sp)
 4029fb0:	d8c03815 	stw	r3,224(sp)
 4029fb4:	d9002d15 	stw	r4,180(sp)
 4029fb8:	003b7506 	br	4028d90 <_gp+0xfffe7b90>
 4029fbc:	ac400007 	ldb	r17,0(r21)
 4029fc0:	003a5906 	br	4028928 <_gp+0xfffe7728>
 4029fc4:	9080100c 	andi	r2,r18,64
 4029fc8:	1000a826 	beq	r2,zero,402a26c <___vfprintf_internal_r+0x1ac8>
 4029fcc:	d9002d17 	ldw	r4,180(sp)
 4029fd0:	002d883a 	mov	r22,zero
 4029fd4:	24c0000b 	ldhu	r19,0(r4)
 4029fd8:	21000104 	addi	r4,r4,4
 4029fdc:	d9002d15 	stw	r4,180(sp)
 4029fe0:	003ccb06 	br	4029310 <_gp+0xfffe8110>
 4029fe4:	d8c02d17 	ldw	r3,180(sp)
 4029fe8:	d9002917 	ldw	r4,164(sp)
 4029fec:	002d883a 	mov	r22,zero
 4029ff0:	18800104 	addi	r2,r3,4
 4029ff4:	1cc00017 	ldw	r19,0(r3)
 4029ff8:	203ebb0e 	bge	r4,zero,4029ae8 <_gp+0xfffe88e8>
 4029ffc:	003ef106 	br	4029bc4 <_gp+0xfffe89c4>
 402a000:	9080040c 	andi	r2,r18,16
 402a004:	1000921e 	bne	r2,zero,402a250 <___vfprintf_internal_r+0x1aac>
 402a008:	9480100c 	andi	r18,r18,64
 402a00c:	90013926 	beq	r18,zero,402a4f4 <___vfprintf_internal_r+0x1d50>
 402a010:	d9002d17 	ldw	r4,180(sp)
 402a014:	d9402f17 	ldw	r5,188(sp)
 402a018:	20800017 	ldw	r2,0(r4)
 402a01c:	21000104 	addi	r4,r4,4
 402a020:	d9002d15 	stw	r4,180(sp)
 402a024:	1140000d 	sth	r5,0(r2)
 402a028:	003a1606 	br	4028884 <_gp+0xfffe7684>
 402a02c:	9080100c 	andi	r2,r18,64
 402a030:	10008026 	beq	r2,zero,402a234 <___vfprintf_internal_r+0x1a90>
 402a034:	d8c02d17 	ldw	r3,180(sp)
 402a038:	1cc0000f 	ldh	r19,0(r3)
 402a03c:	18c00104 	addi	r3,r3,4
 402a040:	d8c02d15 	stw	r3,180(sp)
 402a044:	982dd7fa 	srai	r22,r19,31
 402a048:	b005883a 	mov	r2,r22
 402a04c:	003b1f06 	br	4028ccc <_gp+0xfffe7acc>
 402a050:	9080100c 	andi	r2,r18,64
 402a054:	d8002785 	stb	zero,158(sp)
 402a058:	10008a1e 	bne	r2,zero,402a284 <___vfprintf_internal_r+0x1ae0>
 402a05c:	d9402d17 	ldw	r5,180(sp)
 402a060:	d8c02917 	ldw	r3,164(sp)
 402a064:	002d883a 	mov	r22,zero
 402a068:	28800104 	addi	r2,r5,4
 402a06c:	2cc00017 	ldw	r19,0(r5)
 402a070:	183e4b0e 	bge	r3,zero,40299a0 <_gp+0xfffe87a0>
 402a074:	9d86b03a 	or	r3,r19,r22
 402a078:	d8802d15 	stw	r2,180(sp)
 402a07c:	183e4c1e 	bne	r3,zero,40299b0 <_gp+0xfffe87b0>
 402a080:	0039883a 	mov	fp,zero
 402a084:	0005883a 	mov	r2,zero
 402a088:	003d4006 	br	402958c <_gp+0xfffe838c>
 402a08c:	014100f4 	movhi	r5,1027
 402a090:	295d2184 	addi	r5,r5,29830
 402a094:	d9402b15 	stw	r5,172(sp)
 402a098:	d9402b17 	ldw	r5,172(sp)
 402a09c:	1c47883a 	add	r3,r3,r17
 402a0a0:	10800044 	addi	r2,r2,1
 402a0a4:	41400015 	stw	r5,0(r8)
 402a0a8:	44400115 	stw	r17,4(r8)
 402a0ac:	d8c02015 	stw	r3,128(sp)
 402a0b0:	d8801f15 	stw	r2,124(sp)
 402a0b4:	010001c4 	movi	r4,7
 402a0b8:	20bec816 	blt	r4,r2,4029bdc <_gp+0xfffe89dc>
 402a0bc:	42000204 	addi	r8,r8,8
 402a0c0:	003ecd06 	br	4029bf8 <_gp+0xfffe89f8>
 402a0c4:	d9002917 	ldw	r4,164(sp)
 402a0c8:	d8002785 	stb	zero,158(sp)
 402a0cc:	203d2d16 	blt	r4,zero,4029584 <_gp+0xfffe8384>
 402a0d0:	00bfdfc4 	movi	r2,-129
 402a0d4:	90a4703a 	and	r18,r18,r2
 402a0d8:	003a9106 	br	4028b20 <_gp+0xfffe7920>
 402a0dc:	010100f4 	movhi	r4,1027
 402a0e0:	211d2184 	addi	r4,r4,29830
 402a0e4:	d9002b15 	stw	r4,172(sp)
 402a0e8:	003c0c06 	br	402911c <_gp+0xfffe7f1c>
 402a0ec:	d9002c17 	ldw	r4,176(sp)
 402a0f0:	d9801e04 	addi	r6,sp,120
 402a0f4:	b80b883a 	mov	r5,r23
 402a0f8:	402fb9c0 	call	402fb9c <__sprint_r>
 402a0fc:	103aab1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a100:	d8c02017 	ldw	r3,128(sp)
 402a104:	da000404 	addi	r8,sp,16
 402a108:	003d4106 	br	4029610 <_gp+0xfffe8410>
 402a10c:	d8801f17 	ldw	r2,124(sp)
 402a110:	014100f4 	movhi	r5,1027
 402a114:	01000044 	movi	r4,1
 402a118:	18c00044 	addi	r3,r3,1
 402a11c:	10800044 	addi	r2,r2,1
 402a120:	295d1904 	addi	r5,r5,29796
 402a124:	41000115 	stw	r4,4(r8)
 402a128:	41400015 	stw	r5,0(r8)
 402a12c:	d8c02015 	stw	r3,128(sp)
 402a130:	d8801f15 	stw	r2,124(sp)
 402a134:	010001c4 	movi	r4,7
 402a138:	20805c16 	blt	r4,r2,402a2ac <___vfprintf_internal_r+0x1b08>
 402a13c:	42000204 	addi	r8,r8,8
 402a140:	8800041e 	bne	r17,zero,402a154 <___vfprintf_internal_r+0x19b0>
 402a144:	d8803317 	ldw	r2,204(sp)
 402a148:	1000021e 	bne	r2,zero,402a154 <___vfprintf_internal_r+0x19b0>
 402a14c:	9080004c 	andi	r2,r18,1
 402a150:	103c0926 	beq	r2,zero,4029178 <_gp+0xfffe7f78>
 402a154:	d9003717 	ldw	r4,220(sp)
 402a158:	d8801f17 	ldw	r2,124(sp)
 402a15c:	d9403417 	ldw	r5,208(sp)
 402a160:	20c7883a 	add	r3,r4,r3
 402a164:	10800044 	addi	r2,r2,1
 402a168:	41000115 	stw	r4,4(r8)
 402a16c:	41400015 	stw	r5,0(r8)
 402a170:	d8c02015 	stw	r3,128(sp)
 402a174:	d8801f15 	stw	r2,124(sp)
 402a178:	010001c4 	movi	r4,7
 402a17c:	20812116 	blt	r4,r2,402a604 <___vfprintf_internal_r+0x1e60>
 402a180:	42000204 	addi	r8,r8,8
 402a184:	0463c83a 	sub	r17,zero,r17
 402a188:	0440730e 	bge	zero,r17,402a358 <___vfprintf_internal_r+0x1bb4>
 402a18c:	05800404 	movi	r22,16
 402a190:	b440860e 	bge	r22,r17,402a3ac <___vfprintf_internal_r+0x1c08>
 402a194:	014100f4 	movhi	r5,1027
 402a198:	295d2184 	addi	r5,r5,29830
 402a19c:	d9402b15 	stw	r5,172(sp)
 402a1a0:	070001c4 	movi	fp,7
 402a1a4:	dcc02c17 	ldw	r19,176(sp)
 402a1a8:	00000306 	br	402a1b8 <___vfprintf_internal_r+0x1a14>
 402a1ac:	42000204 	addi	r8,r8,8
 402a1b0:	8c7ffc04 	addi	r17,r17,-16
 402a1b4:	b440800e 	bge	r22,r17,402a3b8 <___vfprintf_internal_r+0x1c14>
 402a1b8:	18c00404 	addi	r3,r3,16
 402a1bc:	10800044 	addi	r2,r2,1
 402a1c0:	45000015 	stw	r20,0(r8)
 402a1c4:	45800115 	stw	r22,4(r8)
 402a1c8:	d8c02015 	stw	r3,128(sp)
 402a1cc:	d8801f15 	stw	r2,124(sp)
 402a1d0:	e0bff60e 	bge	fp,r2,402a1ac <_gp+0xfffe8fac>
 402a1d4:	d9801e04 	addi	r6,sp,120
 402a1d8:	b80b883a 	mov	r5,r23
 402a1dc:	9809883a 	mov	r4,r19
 402a1e0:	402fb9c0 	call	402fb9c <__sprint_r>
 402a1e4:	103a711e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a1e8:	d8c02017 	ldw	r3,128(sp)
 402a1ec:	d8801f17 	ldw	r2,124(sp)
 402a1f0:	da000404 	addi	r8,sp,16
 402a1f4:	003fee06 	br	402a1b0 <_gp+0xfffe8fb0>
 402a1f8:	00bfffc4 	movi	r2,-1
 402a1fc:	003a6f06 	br	4028bbc <_gp+0xfffe79bc>
 402a200:	008011c4 	movi	r2,71
 402a204:	1440b816 	blt	r2,r17,402a4e8 <___vfprintf_internal_r+0x1d44>
 402a208:	040100f4 	movhi	r16,1027
 402a20c:	841d0b04 	addi	r16,r16,29740
 402a210:	00c000c4 	movi	r3,3
 402a214:	00bfdfc4 	movi	r2,-129
 402a218:	d8c02a15 	stw	r3,168(sp)
 402a21c:	90a4703a 	and	r18,r18,r2
 402a220:	df002783 	ldbu	fp,158(sp)
 402a224:	d8c02e15 	stw	r3,184(sp)
 402a228:	d8002915 	stw	zero,164(sp)
 402a22c:	d8003215 	stw	zero,200(sp)
 402a230:	003b2906 	br	4028ed8 <_gp+0xfffe7cd8>
 402a234:	d9002d17 	ldw	r4,180(sp)
 402a238:	24c00017 	ldw	r19,0(r4)
 402a23c:	21000104 	addi	r4,r4,4
 402a240:	d9002d15 	stw	r4,180(sp)
 402a244:	982dd7fa 	srai	r22,r19,31
 402a248:	b005883a 	mov	r2,r22
 402a24c:	003a9f06 	br	4028ccc <_gp+0xfffe7acc>
 402a250:	d9402d17 	ldw	r5,180(sp)
 402a254:	d8c02f17 	ldw	r3,188(sp)
 402a258:	28800017 	ldw	r2,0(r5)
 402a25c:	29400104 	addi	r5,r5,4
 402a260:	d9402d15 	stw	r5,180(sp)
 402a264:	10c00015 	stw	r3,0(r2)
 402a268:	00398606 	br	4028884 <_gp+0xfffe7684>
 402a26c:	d9402d17 	ldw	r5,180(sp)
 402a270:	002d883a 	mov	r22,zero
 402a274:	2cc00017 	ldw	r19,0(r5)
 402a278:	29400104 	addi	r5,r5,4
 402a27c:	d9402d15 	stw	r5,180(sp)
 402a280:	003c2306 	br	4029310 <_gp+0xfffe8110>
 402a284:	d8c02d17 	ldw	r3,180(sp)
 402a288:	d9002917 	ldw	r4,164(sp)
 402a28c:	002d883a 	mov	r22,zero
 402a290:	18800104 	addi	r2,r3,4
 402a294:	1cc0000b 	ldhu	r19,0(r3)
 402a298:	203dc10e 	bge	r4,zero,40299a0 <_gp+0xfffe87a0>
 402a29c:	003f7506 	br	402a074 <_gp+0xfffe8e74>
 402a2a0:	040100f4 	movhi	r16,1027
 402a2a4:	841d0904 	addi	r16,r16,29732
 402a2a8:	003acc06 	br	4028ddc <_gp+0xfffe7bdc>
 402a2ac:	d9002c17 	ldw	r4,176(sp)
 402a2b0:	d9801e04 	addi	r6,sp,120
 402a2b4:	b80b883a 	mov	r5,r23
 402a2b8:	402fb9c0 	call	402fb9c <__sprint_r>
 402a2bc:	103a3b1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a2c0:	dc402617 	ldw	r17,152(sp)
 402a2c4:	d8c02017 	ldw	r3,128(sp)
 402a2c8:	da000404 	addi	r8,sp,16
 402a2cc:	003f9c06 	br	402a140 <_gp+0xfffe8f40>
 402a2d0:	ac400043 	ldbu	r17,1(r21)
 402a2d4:	94800814 	ori	r18,r18,32
 402a2d8:	ad400044 	addi	r21,r21,1
 402a2dc:	8c403fcc 	andi	r17,r17,255
 402a2e0:	8c40201c 	xori	r17,r17,128
 402a2e4:	8c7fe004 	addi	r17,r17,-128
 402a2e8:	00398f06 	br	4028928 <_gp+0xfffe7728>
 402a2ec:	d8c02d15 	stw	r3,180(sp)
 402a2f0:	0039883a 	mov	fp,zero
 402a2f4:	003e3506 	br	4029bcc <_gp+0xfffe89cc>
 402a2f8:	d9002c17 	ldw	r4,176(sp)
 402a2fc:	d9801e04 	addi	r6,sp,120
 402a300:	b80b883a 	mov	r5,r23
 402a304:	402fb9c0 	call	402fb9c <__sprint_r>
 402a308:	103a281e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a30c:	d8c02017 	ldw	r3,128(sp)
 402a310:	da000404 	addi	r8,sp,16
 402a314:	003cd006 	br	4029658 <_gp+0xfffe8458>
 402a318:	8009883a 	mov	r4,r16
 402a31c:	da003d15 	stw	r8,244(sp)
 402a320:	40265340 	call	4026534 <strlen>
 402a324:	d8802e15 	stw	r2,184(sp)
 402a328:	da003d17 	ldw	r8,244(sp)
 402a32c:	103c340e 	bge	r2,zero,4029400 <_gp+0xfffe8200>
 402a330:	0005883a 	mov	r2,zero
 402a334:	003c3206 	br	4029400 <_gp+0xfffe8200>
 402a338:	d9002c17 	ldw	r4,176(sp)
 402a33c:	d9801e04 	addi	r6,sp,120
 402a340:	b80b883a 	mov	r5,r23
 402a344:	402fb9c0 	call	402fb9c <__sprint_r>
 402a348:	103a181e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a34c:	d8c02017 	ldw	r3,128(sp)
 402a350:	d8801f17 	ldw	r2,124(sp)
 402a354:	da000404 	addi	r8,sp,16
 402a358:	d9403317 	ldw	r5,204(sp)
 402a35c:	10800044 	addi	r2,r2,1
 402a360:	44000015 	stw	r16,0(r8)
 402a364:	28c7883a 	add	r3,r5,r3
 402a368:	003b7d06 	br	4029160 <_gp+0xfffe7f60>
 402a36c:	010100f4 	movhi	r4,1027
 402a370:	211d2584 	addi	r4,r4,29846
 402a374:	d9003515 	stw	r4,212(sp)
 402a378:	003b1406 	br	4028fcc <_gp+0xfffe7dcc>
 402a37c:	013fffc4 	movi	r4,-1
 402a380:	003a3506 	br	4028c58 <_gp+0xfffe7a58>
 402a384:	0023883a 	mov	r17,zero
 402a388:	003d9d06 	br	4029a00 <_gp+0xfffe8800>
 402a38c:	d9002c17 	ldw	r4,176(sp)
 402a390:	d9801e04 	addi	r6,sp,120
 402a394:	b80b883a 	mov	r5,r23
 402a398:	402fb9c0 	call	402fb9c <__sprint_r>
 402a39c:	103a031e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a3a0:	d8c02017 	ldw	r3,128(sp)
 402a3a4:	da000404 	addi	r8,sp,16
 402a3a8:	003d9406 	br	40299fc <_gp+0xfffe87fc>
 402a3ac:	010100f4 	movhi	r4,1027
 402a3b0:	211d2184 	addi	r4,r4,29830
 402a3b4:	d9002b15 	stw	r4,172(sp)
 402a3b8:	d9002b17 	ldw	r4,172(sp)
 402a3bc:	1c47883a 	add	r3,r3,r17
 402a3c0:	10800044 	addi	r2,r2,1
 402a3c4:	41000015 	stw	r4,0(r8)
 402a3c8:	44400115 	stw	r17,4(r8)
 402a3cc:	d8c02015 	stw	r3,128(sp)
 402a3d0:	d8801f15 	stw	r2,124(sp)
 402a3d4:	010001c4 	movi	r4,7
 402a3d8:	20bfd716 	blt	r4,r2,402a338 <_gp+0xfffe9138>
 402a3dc:	42000204 	addi	r8,r8,8
 402a3e0:	003fdd06 	br	402a358 <_gp+0xfffe9158>
 402a3e4:	d9002c17 	ldw	r4,176(sp)
 402a3e8:	d9801e04 	addi	r6,sp,120
 402a3ec:	b80b883a 	mov	r5,r23
 402a3f0:	402fb9c0 	call	402fb9c <__sprint_r>
 402a3f4:	1039ed1e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a3f8:	d8802617 	ldw	r2,152(sp)
 402a3fc:	d8c02017 	ldw	r3,128(sp)
 402a400:	da000404 	addi	r8,sp,16
 402a404:	003e1006 	br	4029c48 <_gp+0xfffe8a48>
 402a408:	00800044 	movi	r2,1
 402a40c:	10803fcc 	andi	r2,r2,255
 402a410:	00c00044 	movi	r3,1
 402a414:	10fa3526 	beq	r2,r3,4028cec <_gp+0xfffe7aec>
 402a418:	00c00084 	movi	r3,2
 402a41c:	10fbcb26 	beq	r2,r3,402934c <_gp+0xfffe814c>
 402a420:	003a8f06 	br	4028e60 <_gp+0xfffe7c60>
 402a424:	010100f4 	movhi	r4,1027
 402a428:	211d2584 	addi	r4,r4,29846
 402a42c:	d9003515 	stw	r4,212(sp)
 402a430:	003b7606 	br	402920c <_gp+0xfffe800c>
 402a434:	d8802917 	ldw	r2,164(sp)
 402a438:	00c00184 	movi	r3,6
 402a43c:	1880012e 	bgeu	r3,r2,402a444 <___vfprintf_internal_r+0x1ca0>
 402a440:	1805883a 	mov	r2,r3
 402a444:	d8802e15 	stw	r2,184(sp)
 402a448:	1000ef16 	blt	r2,zero,402a808 <___vfprintf_internal_r+0x2064>
 402a44c:	040100f4 	movhi	r16,1027
 402a450:	d8802a15 	stw	r2,168(sp)
 402a454:	dcc02d15 	stw	r19,180(sp)
 402a458:	d8002915 	stw	zero,164(sp)
 402a45c:	d8003215 	stw	zero,200(sp)
 402a460:	841d1704 	addi	r16,r16,29788
 402a464:	0039883a 	mov	fp,zero
 402a468:	003aa206 	br	4028ef4 <_gp+0xfffe7cf4>
 402a46c:	0021883a 	mov	r16,zero
 402a470:	003e0706 	br	4029c90 <_gp+0xfffe8a90>
 402a474:	d9002c17 	ldw	r4,176(sp)
 402a478:	d9801e04 	addi	r6,sp,120
 402a47c:	b80b883a 	mov	r5,r23
 402a480:	402fb9c0 	call	402fb9c <__sprint_r>
 402a484:	1039c91e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a488:	d8802617 	ldw	r2,152(sp)
 402a48c:	d9403317 	ldw	r5,204(sp)
 402a490:	d8c02017 	ldw	r3,128(sp)
 402a494:	da000404 	addi	r8,sp,16
 402a498:	2885c83a 	sub	r2,r5,r2
 402a49c:	003dfb06 	br	4029c8c <_gp+0xfffe8a8c>
 402a4a0:	9080004c 	andi	r2,r18,1
 402a4a4:	103e8f1e 	bne	r2,zero,4029ee4 <_gp+0xfffe8ce4>
 402a4a8:	d8802117 	ldw	r2,132(sp)
 402a4ac:	003e9e06 	br	4029f28 <_gp+0xfffe8d28>
 402a4b0:	1025883a 	mov	r18,r2
 402a4b4:	0039883a 	mov	fp,zero
 402a4b8:	00800084 	movi	r2,2
 402a4bc:	003fd306 	br	402a40c <_gp+0xfffe920c>
 402a4c0:	07000b44 	movi	fp,45
 402a4c4:	df002785 	stb	fp,158(sp)
 402a4c8:	003a4006 	br	4028dcc <_gp+0xfffe7bcc>
 402a4cc:	00c00b44 	movi	r3,45
 402a4d0:	d8c02785 	stb	r3,158(sp)
 402a4d4:	d8802a15 	stw	r2,168(sp)
 402a4d8:	dc802b17 	ldw	r18,172(sp)
 402a4dc:	d8002915 	stw	zero,164(sp)
 402a4e0:	07000b44 	movi	fp,45
 402a4e4:	003a8006 	br	4028ee8 <_gp+0xfffe7ce8>
 402a4e8:	040100f4 	movhi	r16,1027
 402a4ec:	841d0c04 	addi	r16,r16,29744
 402a4f0:	003f4706 	br	402a210 <_gp+0xfffe9010>
 402a4f4:	d8c02d17 	ldw	r3,180(sp)
 402a4f8:	d9002f17 	ldw	r4,188(sp)
 402a4fc:	18800017 	ldw	r2,0(r3)
 402a500:	18c00104 	addi	r3,r3,4
 402a504:	d8c02d15 	stw	r3,180(sp)
 402a508:	11000015 	stw	r4,0(r2)
 402a50c:	0038dd06 	br	4028884 <_gp+0xfffe7684>
 402a510:	dd802617 	ldw	r22,152(sp)
 402a514:	00bfff44 	movi	r2,-3
 402a518:	b0801c16 	blt	r22,r2,402a58c <___vfprintf_internal_r+0x1de8>
 402a51c:	d9402917 	ldw	r5,164(sp)
 402a520:	2d801a16 	blt	r5,r22,402a58c <___vfprintf_internal_r+0x1de8>
 402a524:	dd803215 	stw	r22,200(sp)
 402a528:	003e8906 	br	4029f50 <_gp+0xfffe8d50>
 402a52c:	010100f4 	movhi	r4,1027
 402a530:	211d2184 	addi	r4,r4,29830
 402a534:	d9002b15 	stw	r4,172(sp)
 402a538:	003c9106 	br	4029780 <_gp+0xfffe8580>
 402a53c:	e005883a 	mov	r2,fp
 402a540:	003e7906 	br	4029f28 <_gp+0xfffe8d28>
 402a544:	d9402917 	ldw	r5,164(sp)
 402a548:	df002783 	ldbu	fp,158(sp)
 402a54c:	dcc02d15 	stw	r19,180(sp)
 402a550:	d9402a15 	stw	r5,168(sp)
 402a554:	d9402e15 	stw	r5,184(sp)
 402a558:	d8002915 	stw	zero,164(sp)
 402a55c:	d8003215 	stw	zero,200(sp)
 402a560:	003a5d06 	br	4028ed8 <_gp+0xfffe7cd8>
 402a564:	9080004c 	andi	r2,r18,1
 402a568:	0039883a 	mov	fp,zero
 402a56c:	10000426 	beq	r2,zero,402a580 <___vfprintf_internal_r+0x1ddc>
 402a570:	00800c04 	movi	r2,48
 402a574:	dc001dc4 	addi	r16,sp,119
 402a578:	d8801dc5 	stb	r2,119(sp)
 402a57c:	003b8006 	br	4029380 <_gp+0xfffe8180>
 402a580:	d8002e15 	stw	zero,184(sp)
 402a584:	dc001e04 	addi	r16,sp,120
 402a588:	003a4d06 	br	4028ec0 <_gp+0xfffe7cc0>
 402a58c:	8c7fff84 	addi	r17,r17,-2
 402a590:	b5bfffc4 	addi	r22,r22,-1
 402a594:	dd802615 	stw	r22,152(sp)
 402a598:	dc4022c5 	stb	r17,139(sp)
 402a59c:	b000bf16 	blt	r22,zero,402a89c <___vfprintf_internal_r+0x20f8>
 402a5a0:	00800ac4 	movi	r2,43
 402a5a4:	d8802305 	stb	r2,140(sp)
 402a5a8:	00800244 	movi	r2,9
 402a5ac:	15807016 	blt	r2,r22,402a770 <___vfprintf_internal_r+0x1fcc>
 402a5b0:	00800c04 	movi	r2,48
 402a5b4:	b5800c04 	addi	r22,r22,48
 402a5b8:	d8802345 	stb	r2,141(sp)
 402a5bc:	dd802385 	stb	r22,142(sp)
 402a5c0:	d88023c4 	addi	r2,sp,143
 402a5c4:	df0022c4 	addi	fp,sp,139
 402a5c8:	d8c03317 	ldw	r3,204(sp)
 402a5cc:	1739c83a 	sub	fp,r2,fp
 402a5d0:	d9003317 	ldw	r4,204(sp)
 402a5d4:	e0c7883a 	add	r3,fp,r3
 402a5d8:	df003a15 	stw	fp,232(sp)
 402a5dc:	d8c02e15 	stw	r3,184(sp)
 402a5e0:	00800044 	movi	r2,1
 402a5e4:	1100b30e 	bge	r2,r4,402a8b4 <___vfprintf_internal_r+0x2110>
 402a5e8:	d8c02e17 	ldw	r3,184(sp)
 402a5ec:	18c00044 	addi	r3,r3,1
 402a5f0:	d8c02e15 	stw	r3,184(sp)
 402a5f4:	1805883a 	mov	r2,r3
 402a5f8:	1800ac16 	blt	r3,zero,402a8ac <___vfprintf_internal_r+0x2108>
 402a5fc:	d8003215 	stw	zero,200(sp)
 402a600:	003e5d06 	br	4029f78 <_gp+0xfffe8d78>
 402a604:	d9002c17 	ldw	r4,176(sp)
 402a608:	d9801e04 	addi	r6,sp,120
 402a60c:	b80b883a 	mov	r5,r23
 402a610:	402fb9c0 	call	402fb9c <__sprint_r>
 402a614:	1039651e 	bne	r2,zero,4028bac <_gp+0xfffe79ac>
 402a618:	dc402617 	ldw	r17,152(sp)
 402a61c:	d8c02017 	ldw	r3,128(sp)
 402a620:	d8801f17 	ldw	r2,124(sp)
 402a624:	da000404 	addi	r8,sp,16
 402a628:	003ed606 	br	402a184 <_gp+0xfffe8f84>
 402a62c:	582b883a 	mov	r21,r11
 402a630:	d8002915 	stw	zero,164(sp)
 402a634:	0038bd06 	br	402892c <_gp+0xfffe772c>
 402a638:	d8802917 	ldw	r2,164(sp)
 402a63c:	103e071e 	bne	r2,zero,4029e5c <_gp+0xfffe8c5c>
 402a640:	dc002915 	stw	r16,164(sp)
 402a644:	003e0506 	br	4029e5c <_gp+0xfffe8c5c>
 402a648:	d9002917 	ldw	r4,164(sp)
 402a64c:	20c00044 	addi	r3,r4,1
 402a650:	003e0f06 	br	4029e90 <_gp+0xfffe8c90>
 402a654:	01400184 	movi	r5,6
 402a658:	d9402915 	stw	r5,164(sp)
 402a65c:	003dff06 	br	4029e5c <_gp+0xfffe8c5c>
 402a660:	d8802104 	addi	r2,sp,132
 402a664:	d8800315 	stw	r2,12(sp)
 402a668:	d8802504 	addi	r2,sp,148
 402a66c:	d8800215 	stw	r2,8(sp)
 402a670:	d8802604 	addi	r2,sp,152
 402a674:	d8800115 	stw	r2,4(sp)
 402a678:	d8802917 	ldw	r2,164(sp)
 402a67c:	d9403617 	ldw	r5,216(sp)
 402a680:	d9002c17 	ldw	r4,176(sp)
 402a684:	d8800015 	stw	r2,0(sp)
 402a688:	01c000c4 	movi	r7,3
 402a68c:	980d883a 	mov	r6,r19
 402a690:	da003d15 	stw	r8,244(sp)
 402a694:	402ae7c0 	call	402ae7c <_dtoa_r>
 402a698:	d8c02917 	ldw	r3,164(sp)
 402a69c:	da003d17 	ldw	r8,244(sp)
 402a6a0:	1021883a 	mov	r16,r2
 402a6a4:	10f9883a 	add	fp,r2,r3
 402a6a8:	81000007 	ldb	r4,0(r16)
 402a6ac:	00800c04 	movi	r2,48
 402a6b0:	20805e26 	beq	r4,r2,402a82c <___vfprintf_internal_r+0x2088>
 402a6b4:	d8c02617 	ldw	r3,152(sp)
 402a6b8:	e0f9883a 	add	fp,fp,r3
 402a6bc:	003e0a06 	br	4029ee8 <_gp+0xfffe8ce8>
 402a6c0:	00c00b44 	movi	r3,45
 402a6c4:	24e0003c 	xorhi	r19,r4,32768
 402a6c8:	d8c02a05 	stb	r3,168(sp)
 402a6cc:	003de906 	br	4029e74 <_gp+0xfffe8c74>
 402a6d0:	d8c03217 	ldw	r3,200(sp)
 402a6d4:	00c07a0e 	bge	zero,r3,402a8c0 <___vfprintf_internal_r+0x211c>
 402a6d8:	00800044 	movi	r2,1
 402a6dc:	d9003317 	ldw	r4,204(sp)
 402a6e0:	1105883a 	add	r2,r2,r4
 402a6e4:	d8802e15 	stw	r2,184(sp)
 402a6e8:	10004e16 	blt	r2,zero,402a824 <___vfprintf_internal_r+0x2080>
 402a6ec:	044019c4 	movi	r17,103
 402a6f0:	003e2106 	br	4029f78 <_gp+0xfffe8d78>
 402a6f4:	d9002917 	ldw	r4,164(sp)
 402a6f8:	d8802104 	addi	r2,sp,132
 402a6fc:	d8800315 	stw	r2,12(sp)
 402a700:	d9000015 	stw	r4,0(sp)
 402a704:	d8802504 	addi	r2,sp,148
 402a708:	d9403617 	ldw	r5,216(sp)
 402a70c:	d9002c17 	ldw	r4,176(sp)
 402a710:	d8800215 	stw	r2,8(sp)
 402a714:	d8802604 	addi	r2,sp,152
 402a718:	d8800115 	stw	r2,4(sp)
 402a71c:	01c000c4 	movi	r7,3
 402a720:	980d883a 	mov	r6,r19
 402a724:	da003d15 	stw	r8,244(sp)
 402a728:	402ae7c0 	call	402ae7c <_dtoa_r>
 402a72c:	d8c02917 	ldw	r3,164(sp)
 402a730:	da003d17 	ldw	r8,244(sp)
 402a734:	1021883a 	mov	r16,r2
 402a738:	00801184 	movi	r2,70
 402a73c:	80f9883a 	add	fp,r16,r3
 402a740:	88bfd926 	beq	r17,r2,402a6a8 <_gp+0xfffe94a8>
 402a744:	003de806 	br	4029ee8 <_gp+0xfffe8ce8>
 402a748:	d9002917 	ldw	r4,164(sp)
 402a74c:	00c04d0e 	bge	zero,r3,402a884 <___vfprintf_internal_r+0x20e0>
 402a750:	2000441e 	bne	r4,zero,402a864 <___vfprintf_internal_r+0x20c0>
 402a754:	9480004c 	andi	r18,r18,1
 402a758:	9000421e 	bne	r18,zero,402a864 <___vfprintf_internal_r+0x20c0>
 402a75c:	1805883a 	mov	r2,r3
 402a760:	18007016 	blt	r3,zero,402a924 <___vfprintf_internal_r+0x2180>
 402a764:	d8c03217 	ldw	r3,200(sp)
 402a768:	d8c02e15 	stw	r3,184(sp)
 402a76c:	003e0206 	br	4029f78 <_gp+0xfffe8d78>
 402a770:	df0022c4 	addi	fp,sp,139
 402a774:	dc002915 	stw	r16,164(sp)
 402a778:	4027883a 	mov	r19,r8
 402a77c:	e021883a 	mov	r16,fp
 402a780:	b009883a 	mov	r4,r22
 402a784:	01400284 	movi	r5,10
 402a788:	40228f80 	call	40228f8 <__modsi3>
 402a78c:	10800c04 	addi	r2,r2,48
 402a790:	843fffc4 	addi	r16,r16,-1
 402a794:	b009883a 	mov	r4,r22
 402a798:	01400284 	movi	r5,10
 402a79c:	80800005 	stb	r2,0(r16)
 402a7a0:	40228740 	call	4022874 <__divsi3>
 402a7a4:	102d883a 	mov	r22,r2
 402a7a8:	00800244 	movi	r2,9
 402a7ac:	15bff416 	blt	r2,r22,402a780 <_gp+0xfffe9580>
 402a7b0:	9811883a 	mov	r8,r19
 402a7b4:	b0800c04 	addi	r2,r22,48
 402a7b8:	8027883a 	mov	r19,r16
 402a7bc:	997fffc4 	addi	r5,r19,-1
 402a7c0:	98bfffc5 	stb	r2,-1(r19)
 402a7c4:	dc002917 	ldw	r16,164(sp)
 402a7c8:	2f006a2e 	bgeu	r5,fp,402a974 <___vfprintf_internal_r+0x21d0>
 402a7cc:	d9c02384 	addi	r7,sp,142
 402a7d0:	3ccfc83a 	sub	r7,r7,r19
 402a7d4:	d9002344 	addi	r4,sp,141
 402a7d8:	e1cf883a 	add	r7,fp,r7
 402a7dc:	00000106 	br	402a7e4 <___vfprintf_internal_r+0x2040>
 402a7e0:	28800003 	ldbu	r2,0(r5)
 402a7e4:	20800005 	stb	r2,0(r4)
 402a7e8:	21000044 	addi	r4,r4,1
 402a7ec:	29400044 	addi	r5,r5,1
 402a7f0:	393ffb1e 	bne	r7,r4,402a7e0 <_gp+0xfffe95e0>
 402a7f4:	d8802304 	addi	r2,sp,140
 402a7f8:	14c5c83a 	sub	r2,r2,r19
 402a7fc:	d8c02344 	addi	r3,sp,141
 402a800:	1885883a 	add	r2,r3,r2
 402a804:	003f7006 	br	402a5c8 <_gp+0xfffe93c8>
 402a808:	0005883a 	mov	r2,zero
 402a80c:	003f0f06 	br	402a44c <_gp+0xfffe924c>
 402a810:	d8c03217 	ldw	r3,200(sp)
 402a814:	18c00044 	addi	r3,r3,1
 402a818:	d8c02e15 	stw	r3,184(sp)
 402a81c:	1805883a 	mov	r2,r3
 402a820:	183fb20e 	bge	r3,zero,402a6ec <_gp+0xfffe94ec>
 402a824:	0005883a 	mov	r2,zero
 402a828:	003fb006 	br	402a6ec <_gp+0xfffe94ec>
 402a82c:	d9003617 	ldw	r4,216(sp)
 402a830:	000d883a 	mov	r6,zero
 402a834:	000f883a 	mov	r7,zero
 402a838:	980b883a 	mov	r5,r19
 402a83c:	d8c03c15 	stw	r3,240(sp)
 402a840:	da003d15 	stw	r8,244(sp)
 402a844:	40333380 	call	4033338 <__eqdf2>
 402a848:	d8c03c17 	ldw	r3,240(sp)
 402a84c:	da003d17 	ldw	r8,244(sp)
 402a850:	103f9826 	beq	r2,zero,402a6b4 <_gp+0xfffe94b4>
 402a854:	00800044 	movi	r2,1
 402a858:	10c7c83a 	sub	r3,r2,r3
 402a85c:	d8c02615 	stw	r3,152(sp)
 402a860:	003f9506 	br	402a6b8 <_gp+0xfffe94b8>
 402a864:	d9002917 	ldw	r4,164(sp)
 402a868:	d8c03217 	ldw	r3,200(sp)
 402a86c:	20800044 	addi	r2,r4,1
 402a870:	1885883a 	add	r2,r3,r2
 402a874:	d8802e15 	stw	r2,184(sp)
 402a878:	103dbf0e 	bge	r2,zero,4029f78 <_gp+0xfffe8d78>
 402a87c:	0005883a 	mov	r2,zero
 402a880:	003dbd06 	br	4029f78 <_gp+0xfffe8d78>
 402a884:	2000211e 	bne	r4,zero,402a90c <___vfprintf_internal_r+0x2168>
 402a888:	9480004c 	andi	r18,r18,1
 402a88c:	90001f1e 	bne	r18,zero,402a90c <___vfprintf_internal_r+0x2168>
 402a890:	00800044 	movi	r2,1
 402a894:	d8802e15 	stw	r2,184(sp)
 402a898:	003db706 	br	4029f78 <_gp+0xfffe8d78>
 402a89c:	00800b44 	movi	r2,45
 402a8a0:	05adc83a 	sub	r22,zero,r22
 402a8a4:	d8802305 	stb	r2,140(sp)
 402a8a8:	003f3f06 	br	402a5a8 <_gp+0xfffe93a8>
 402a8ac:	0005883a 	mov	r2,zero
 402a8b0:	003f5206 	br	402a5fc <_gp+0xfffe93fc>
 402a8b4:	90a4703a 	and	r18,r18,r2
 402a8b8:	903f4e26 	beq	r18,zero,402a5f4 <_gp+0xfffe93f4>
 402a8bc:	003f4a06 	br	402a5e8 <_gp+0xfffe93e8>
 402a8c0:	00800084 	movi	r2,2
 402a8c4:	10c5c83a 	sub	r2,r2,r3
 402a8c8:	003f8406 	br	402a6dc <_gp+0xfffe94dc>
 402a8cc:	d8802d17 	ldw	r2,180(sp)
 402a8d0:	d9002d17 	ldw	r4,180(sp)
 402a8d4:	ac400043 	ldbu	r17,1(r21)
 402a8d8:	10800017 	ldw	r2,0(r2)
 402a8dc:	582b883a 	mov	r21,r11
 402a8e0:	d8802915 	stw	r2,164(sp)
 402a8e4:	20800104 	addi	r2,r4,4
 402a8e8:	d9002917 	ldw	r4,164(sp)
 402a8ec:	d8802d15 	stw	r2,180(sp)
 402a8f0:	203e7a0e 	bge	r4,zero,402a2dc <_gp+0xfffe90dc>
 402a8f4:	8c403fcc 	andi	r17,r17,255
 402a8f8:	00bfffc4 	movi	r2,-1
 402a8fc:	8c40201c 	xori	r17,r17,128
 402a900:	d8802915 	stw	r2,164(sp)
 402a904:	8c7fe004 	addi	r17,r17,-128
 402a908:	00380706 	br	4028928 <_gp+0xfffe7728>
 402a90c:	d8c02917 	ldw	r3,164(sp)
 402a910:	18c00084 	addi	r3,r3,2
 402a914:	d8c02e15 	stw	r3,184(sp)
 402a918:	1805883a 	mov	r2,r3
 402a91c:	183d960e 	bge	r3,zero,4029f78 <_gp+0xfffe8d78>
 402a920:	003fd606 	br	402a87c <_gp+0xfffe967c>
 402a924:	0005883a 	mov	r2,zero
 402a928:	003f8e06 	br	402a764 <_gp+0xfffe9564>
 402a92c:	9080004c 	andi	r2,r18,1
 402a930:	103f811e 	bne	r2,zero,402a738 <_gp+0xfffe9538>
 402a934:	d8802117 	ldw	r2,132(sp)
 402a938:	1405c83a 	sub	r2,r2,r16
 402a93c:	d8803315 	stw	r2,204(sp)
 402a940:	b47ef326 	beq	r22,r17,402a510 <_gp+0xfffe9310>
 402a944:	dd802617 	ldw	r22,152(sp)
 402a948:	003f1106 	br	402a590 <_gp+0xfffe9390>
 402a94c:	d9c02785 	stb	r7,158(sp)
 402a950:	00390406 	br	4028d64 <_gp+0xfffe7b64>
 402a954:	d9c02785 	stb	r7,158(sp)
 402a958:	0038d306 	br	4028ca8 <_gp+0xfffe7aa8>
 402a95c:	d9c02785 	stb	r7,158(sp)
 402a960:	003a6106 	br	40292e8 <_gp+0xfffe80e8>
 402a964:	d9c02785 	stb	r7,158(sp)
 402a968:	003af806 	br	402954c <_gp+0xfffe834c>
 402a96c:	0005883a 	mov	r2,zero
 402a970:	003d7e06 	br	4029f6c <_gp+0xfffe8d6c>
 402a974:	d8802344 	addi	r2,sp,141
 402a978:	003f1306 	br	402a5c8 <_gp+0xfffe93c8>
 402a97c:	d9c02785 	stb	r7,158(sp)
 402a980:	00392306 	br	4028e10 <_gp+0xfffe7c10>
 402a984:	d9c02785 	stb	r7,158(sp)
 402a988:	003aa906 	br	4029430 <_gp+0xfffe8230>
 402a98c:	d9c02785 	stb	r7,158(sp)
 402a990:	003a3d06 	br	4029288 <_gp+0xfffe8088>
 402a994:	d9c02785 	stb	r7,158(sp)
 402a998:	003aca06 	br	40294c4 <_gp+0xfffe82c4>

0402a99c <__vfprintf_internal>:
 402a99c:	00810134 	movhi	r2,1028
 402a9a0:	10a48104 	addi	r2,r2,-28156
 402a9a4:	300f883a 	mov	r7,r6
 402a9a8:	280d883a 	mov	r6,r5
 402a9ac:	200b883a 	mov	r5,r4
 402a9b0:	11000017 	ldw	r4,0(r2)
 402a9b4:	40287a41 	jmpi	40287a4 <___vfprintf_internal_r>

0402a9b8 <__sbprintf>:
 402a9b8:	2880030b 	ldhu	r2,12(r5)
 402a9bc:	2ac01917 	ldw	r11,100(r5)
 402a9c0:	2a80038b 	ldhu	r10,14(r5)
 402a9c4:	2a400717 	ldw	r9,28(r5)
 402a9c8:	2a000917 	ldw	r8,36(r5)
 402a9cc:	defee204 	addi	sp,sp,-1144
 402a9d0:	00c10004 	movi	r3,1024
 402a9d4:	dc011a15 	stw	r16,1128(sp)
 402a9d8:	10bfff4c 	andi	r2,r2,65533
 402a9dc:	2821883a 	mov	r16,r5
 402a9e0:	d8cb883a 	add	r5,sp,r3
 402a9e4:	dc811c15 	stw	r18,1136(sp)
 402a9e8:	dc411b15 	stw	r17,1132(sp)
 402a9ec:	dfc11d15 	stw	ra,1140(sp)
 402a9f0:	2025883a 	mov	r18,r4
 402a9f4:	d881030d 	sth	r2,1036(sp)
 402a9f8:	dac11915 	stw	r11,1124(sp)
 402a9fc:	da81038d 	sth	r10,1038(sp)
 402aa00:	da410715 	stw	r9,1052(sp)
 402aa04:	da010915 	stw	r8,1060(sp)
 402aa08:	dec10015 	stw	sp,1024(sp)
 402aa0c:	dec10415 	stw	sp,1040(sp)
 402aa10:	d8c10215 	stw	r3,1032(sp)
 402aa14:	d8c10515 	stw	r3,1044(sp)
 402aa18:	d8010615 	stw	zero,1048(sp)
 402aa1c:	40287a40 	call	40287a4 <___vfprintf_internal_r>
 402aa20:	1023883a 	mov	r17,r2
 402aa24:	10000416 	blt	r2,zero,402aa38 <__sbprintf+0x80>
 402aa28:	d9410004 	addi	r5,sp,1024
 402aa2c:	9009883a 	mov	r4,r18
 402aa30:	40243440 	call	4024344 <_fflush_r>
 402aa34:	10000d1e 	bne	r2,zero,402aa6c <__sbprintf+0xb4>
 402aa38:	d881030b 	ldhu	r2,1036(sp)
 402aa3c:	1080100c 	andi	r2,r2,64
 402aa40:	10000326 	beq	r2,zero,402aa50 <__sbprintf+0x98>
 402aa44:	8080030b 	ldhu	r2,12(r16)
 402aa48:	10801014 	ori	r2,r2,64
 402aa4c:	8080030d 	sth	r2,12(r16)
 402aa50:	8805883a 	mov	r2,r17
 402aa54:	dfc11d17 	ldw	ra,1140(sp)
 402aa58:	dc811c17 	ldw	r18,1136(sp)
 402aa5c:	dc411b17 	ldw	r17,1132(sp)
 402aa60:	dc011a17 	ldw	r16,1128(sp)
 402aa64:	dec11e04 	addi	sp,sp,1144
 402aa68:	f800283a 	ret
 402aa6c:	047fffc4 	movi	r17,-1
 402aa70:	003ff106 	br	402aa38 <_gp+0xfffe9838>

0402aa74 <_write_r>:
 402aa74:	defffd04 	addi	sp,sp,-12
 402aa78:	2805883a 	mov	r2,r5
 402aa7c:	dc000015 	stw	r16,0(sp)
 402aa80:	04010134 	movhi	r16,1028
 402aa84:	dc400115 	stw	r17,4(sp)
 402aa88:	300b883a 	mov	r5,r6
 402aa8c:	842b4c04 	addi	r16,r16,-21200
 402aa90:	2023883a 	mov	r17,r4
 402aa94:	380d883a 	mov	r6,r7
 402aa98:	1009883a 	mov	r4,r2
 402aa9c:	dfc00215 	stw	ra,8(sp)
 402aaa0:	80000015 	stw	zero,0(r16)
 402aaa4:	4034cec0 	call	4034cec <write>
 402aaa8:	00ffffc4 	movi	r3,-1
 402aaac:	10c00526 	beq	r2,r3,402aac4 <_write_r+0x50>
 402aab0:	dfc00217 	ldw	ra,8(sp)
 402aab4:	dc400117 	ldw	r17,4(sp)
 402aab8:	dc000017 	ldw	r16,0(sp)
 402aabc:	dec00304 	addi	sp,sp,12
 402aac0:	f800283a 	ret
 402aac4:	80c00017 	ldw	r3,0(r16)
 402aac8:	183ff926 	beq	r3,zero,402aab0 <_gp+0xfffe98b0>
 402aacc:	88c00015 	stw	r3,0(r17)
 402aad0:	003ff706 	br	402aab0 <_gp+0xfffe98b0>

0402aad4 <__swsetup_r>:
 402aad4:	00810134 	movhi	r2,1028
 402aad8:	defffd04 	addi	sp,sp,-12
 402aadc:	10a48104 	addi	r2,r2,-28156
 402aae0:	dc400115 	stw	r17,4(sp)
 402aae4:	2023883a 	mov	r17,r4
 402aae8:	11000017 	ldw	r4,0(r2)
 402aaec:	dc000015 	stw	r16,0(sp)
 402aaf0:	dfc00215 	stw	ra,8(sp)
 402aaf4:	2821883a 	mov	r16,r5
 402aaf8:	20000226 	beq	r4,zero,402ab04 <__swsetup_r+0x30>
 402aafc:	20800e17 	ldw	r2,56(r4)
 402ab00:	10003126 	beq	r2,zero,402abc8 <__swsetup_r+0xf4>
 402ab04:	8080030b 	ldhu	r2,12(r16)
 402ab08:	10c0020c 	andi	r3,r2,8
 402ab0c:	1009883a 	mov	r4,r2
 402ab10:	18000f26 	beq	r3,zero,402ab50 <__swsetup_r+0x7c>
 402ab14:	80c00417 	ldw	r3,16(r16)
 402ab18:	18001526 	beq	r3,zero,402ab70 <__swsetup_r+0x9c>
 402ab1c:	1100004c 	andi	r4,r2,1
 402ab20:	20001c1e 	bne	r4,zero,402ab94 <__swsetup_r+0xc0>
 402ab24:	1080008c 	andi	r2,r2,2
 402ab28:	1000291e 	bne	r2,zero,402abd0 <__swsetup_r+0xfc>
 402ab2c:	80800517 	ldw	r2,20(r16)
 402ab30:	80800215 	stw	r2,8(r16)
 402ab34:	18001c26 	beq	r3,zero,402aba8 <__swsetup_r+0xd4>
 402ab38:	0005883a 	mov	r2,zero
 402ab3c:	dfc00217 	ldw	ra,8(sp)
 402ab40:	dc400117 	ldw	r17,4(sp)
 402ab44:	dc000017 	ldw	r16,0(sp)
 402ab48:	dec00304 	addi	sp,sp,12
 402ab4c:	f800283a 	ret
 402ab50:	2080040c 	andi	r2,r4,16
 402ab54:	10002e26 	beq	r2,zero,402ac10 <__swsetup_r+0x13c>
 402ab58:	2080010c 	andi	r2,r4,4
 402ab5c:	10001e1e 	bne	r2,zero,402abd8 <__swsetup_r+0x104>
 402ab60:	80c00417 	ldw	r3,16(r16)
 402ab64:	20800214 	ori	r2,r4,8
 402ab68:	8080030d 	sth	r2,12(r16)
 402ab6c:	183feb1e 	bne	r3,zero,402ab1c <_gp+0xfffe991c>
 402ab70:	1100a00c 	andi	r4,r2,640
 402ab74:	01408004 	movi	r5,512
 402ab78:	217fe826 	beq	r4,r5,402ab1c <_gp+0xfffe991c>
 402ab7c:	800b883a 	mov	r5,r16
 402ab80:	8809883a 	mov	r4,r17
 402ab84:	40254600 	call	4025460 <__smakebuf_r>
 402ab88:	8080030b 	ldhu	r2,12(r16)
 402ab8c:	80c00417 	ldw	r3,16(r16)
 402ab90:	003fe206 	br	402ab1c <_gp+0xfffe991c>
 402ab94:	80800517 	ldw	r2,20(r16)
 402ab98:	80000215 	stw	zero,8(r16)
 402ab9c:	0085c83a 	sub	r2,zero,r2
 402aba0:	80800615 	stw	r2,24(r16)
 402aba4:	183fe41e 	bne	r3,zero,402ab38 <_gp+0xfffe9938>
 402aba8:	80c0030b 	ldhu	r3,12(r16)
 402abac:	0005883a 	mov	r2,zero
 402abb0:	1900200c 	andi	r4,r3,128
 402abb4:	203fe126 	beq	r4,zero,402ab3c <_gp+0xfffe993c>
 402abb8:	18c01014 	ori	r3,r3,64
 402abbc:	80c0030d 	sth	r3,12(r16)
 402abc0:	00bfffc4 	movi	r2,-1
 402abc4:	003fdd06 	br	402ab3c <_gp+0xfffe993c>
 402abc8:	40247200 	call	4024720 <__sinit>
 402abcc:	003fcd06 	br	402ab04 <_gp+0xfffe9904>
 402abd0:	0005883a 	mov	r2,zero
 402abd4:	003fd606 	br	402ab30 <_gp+0xfffe9930>
 402abd8:	81400c17 	ldw	r5,48(r16)
 402abdc:	28000626 	beq	r5,zero,402abf8 <__swsetup_r+0x124>
 402abe0:	80801004 	addi	r2,r16,64
 402abe4:	28800326 	beq	r5,r2,402abf4 <__swsetup_r+0x120>
 402abe8:	8809883a 	mov	r4,r17
 402abec:	40249ec0 	call	40249ec <_free_r>
 402abf0:	8100030b 	ldhu	r4,12(r16)
 402abf4:	80000c15 	stw	zero,48(r16)
 402abf8:	80c00417 	ldw	r3,16(r16)
 402abfc:	00bff6c4 	movi	r2,-37
 402ac00:	1108703a 	and	r4,r2,r4
 402ac04:	80000115 	stw	zero,4(r16)
 402ac08:	80c00015 	stw	r3,0(r16)
 402ac0c:	003fd506 	br	402ab64 <_gp+0xfffe9964>
 402ac10:	00800244 	movi	r2,9
 402ac14:	88800015 	stw	r2,0(r17)
 402ac18:	20801014 	ori	r2,r4,64
 402ac1c:	8080030d 	sth	r2,12(r16)
 402ac20:	00bfffc4 	movi	r2,-1
 402ac24:	003fc506 	br	402ab3c <_gp+0xfffe993c>

0402ac28 <_close_r>:
 402ac28:	defffd04 	addi	sp,sp,-12
 402ac2c:	dc000015 	stw	r16,0(sp)
 402ac30:	04010134 	movhi	r16,1028
 402ac34:	dc400115 	stw	r17,4(sp)
 402ac38:	842b4c04 	addi	r16,r16,-21200
 402ac3c:	2023883a 	mov	r17,r4
 402ac40:	2809883a 	mov	r4,r5
 402ac44:	dfc00215 	stw	ra,8(sp)
 402ac48:	80000015 	stw	zero,0(r16)
 402ac4c:	4033ff00 	call	4033ff0 <close>
 402ac50:	00ffffc4 	movi	r3,-1
 402ac54:	10c00526 	beq	r2,r3,402ac6c <_close_r+0x44>
 402ac58:	dfc00217 	ldw	ra,8(sp)
 402ac5c:	dc400117 	ldw	r17,4(sp)
 402ac60:	dc000017 	ldw	r16,0(sp)
 402ac64:	dec00304 	addi	sp,sp,12
 402ac68:	f800283a 	ret
 402ac6c:	80c00017 	ldw	r3,0(r16)
 402ac70:	183ff926 	beq	r3,zero,402ac58 <_gp+0xfffe9a58>
 402ac74:	88c00015 	stw	r3,0(r17)
 402ac78:	003ff706 	br	402ac58 <_gp+0xfffe9a58>

0402ac7c <quorem>:
 402ac7c:	defff704 	addi	sp,sp,-36
 402ac80:	dc800215 	stw	r18,8(sp)
 402ac84:	20800417 	ldw	r2,16(r4)
 402ac88:	2c800417 	ldw	r18,16(r5)
 402ac8c:	dfc00815 	stw	ra,32(sp)
 402ac90:	ddc00715 	stw	r23,28(sp)
 402ac94:	dd800615 	stw	r22,24(sp)
 402ac98:	dd400515 	stw	r21,20(sp)
 402ac9c:	dd000415 	stw	r20,16(sp)
 402aca0:	dcc00315 	stw	r19,12(sp)
 402aca4:	dc400115 	stw	r17,4(sp)
 402aca8:	dc000015 	stw	r16,0(sp)
 402acac:	14807116 	blt	r2,r18,402ae74 <quorem+0x1f8>
 402acb0:	94bfffc4 	addi	r18,r18,-1
 402acb4:	94ad883a 	add	r22,r18,r18
 402acb8:	b5ad883a 	add	r22,r22,r22
 402acbc:	2c400504 	addi	r17,r5,20
 402acc0:	8da9883a 	add	r20,r17,r22
 402acc4:	25400504 	addi	r21,r4,20
 402acc8:	282f883a 	mov	r23,r5
 402accc:	adad883a 	add	r22,r21,r22
 402acd0:	a1400017 	ldw	r5,0(r20)
 402acd4:	2021883a 	mov	r16,r4
 402acd8:	b1000017 	ldw	r4,0(r22)
 402acdc:	29400044 	addi	r5,r5,1
 402ace0:	402296c0 	call	402296c <__udivsi3>
 402ace4:	1027883a 	mov	r19,r2
 402ace8:	10002c26 	beq	r2,zero,402ad9c <quorem+0x120>
 402acec:	a813883a 	mov	r9,r21
 402acf0:	880b883a 	mov	r5,r17
 402acf4:	0009883a 	mov	r4,zero
 402acf8:	000d883a 	mov	r6,zero
 402acfc:	2a000017 	ldw	r8,0(r5)
 402ad00:	49c00017 	ldw	r7,0(r9)
 402ad04:	29400104 	addi	r5,r5,4
 402ad08:	40bfffcc 	andi	r2,r8,65535
 402ad0c:	14c5383a 	mul	r2,r2,r19
 402ad10:	4010d43a 	srli	r8,r8,16
 402ad14:	38ffffcc 	andi	r3,r7,65535
 402ad18:	1105883a 	add	r2,r2,r4
 402ad1c:	1008d43a 	srli	r4,r2,16
 402ad20:	44d1383a 	mul	r8,r8,r19
 402ad24:	198d883a 	add	r6,r3,r6
 402ad28:	10ffffcc 	andi	r3,r2,65535
 402ad2c:	30c7c83a 	sub	r3,r6,r3
 402ad30:	380ed43a 	srli	r7,r7,16
 402ad34:	4105883a 	add	r2,r8,r4
 402ad38:	180dd43a 	srai	r6,r3,16
 402ad3c:	113fffcc 	andi	r4,r2,65535
 402ad40:	390fc83a 	sub	r7,r7,r4
 402ad44:	398d883a 	add	r6,r7,r6
 402ad48:	300e943a 	slli	r7,r6,16
 402ad4c:	18ffffcc 	andi	r3,r3,65535
 402ad50:	1008d43a 	srli	r4,r2,16
 402ad54:	38ceb03a 	or	r7,r7,r3
 402ad58:	49c00015 	stw	r7,0(r9)
 402ad5c:	300dd43a 	srai	r6,r6,16
 402ad60:	4a400104 	addi	r9,r9,4
 402ad64:	a17fe52e 	bgeu	r20,r5,402acfc <_gp+0xfffe9afc>
 402ad68:	b0800017 	ldw	r2,0(r22)
 402ad6c:	10000b1e 	bne	r2,zero,402ad9c <quorem+0x120>
 402ad70:	b0bfff04 	addi	r2,r22,-4
 402ad74:	a880082e 	bgeu	r21,r2,402ad98 <quorem+0x11c>
 402ad78:	b0ffff17 	ldw	r3,-4(r22)
 402ad7c:	18000326 	beq	r3,zero,402ad8c <quorem+0x110>
 402ad80:	00000506 	br	402ad98 <quorem+0x11c>
 402ad84:	10c00017 	ldw	r3,0(r2)
 402ad88:	1800031e 	bne	r3,zero,402ad98 <quorem+0x11c>
 402ad8c:	10bfff04 	addi	r2,r2,-4
 402ad90:	94bfffc4 	addi	r18,r18,-1
 402ad94:	a8bffb36 	bltu	r21,r2,402ad84 <_gp+0xfffe9b84>
 402ad98:	84800415 	stw	r18,16(r16)
 402ad9c:	b80b883a 	mov	r5,r23
 402ada0:	8009883a 	mov	r4,r16
 402ada4:	402d84c0 	call	402d84c <__mcmp>
 402ada8:	10002616 	blt	r2,zero,402ae44 <quorem+0x1c8>
 402adac:	9cc00044 	addi	r19,r19,1
 402adb0:	a805883a 	mov	r2,r21
 402adb4:	000b883a 	mov	r5,zero
 402adb8:	11000017 	ldw	r4,0(r2)
 402adbc:	89800017 	ldw	r6,0(r17)
 402adc0:	10800104 	addi	r2,r2,4
 402adc4:	20ffffcc 	andi	r3,r4,65535
 402adc8:	194b883a 	add	r5,r3,r5
 402adcc:	30ffffcc 	andi	r3,r6,65535
 402add0:	28c7c83a 	sub	r3,r5,r3
 402add4:	300cd43a 	srli	r6,r6,16
 402add8:	2008d43a 	srli	r4,r4,16
 402addc:	180bd43a 	srai	r5,r3,16
 402ade0:	18ffffcc 	andi	r3,r3,65535
 402ade4:	2189c83a 	sub	r4,r4,r6
 402ade8:	2149883a 	add	r4,r4,r5
 402adec:	200c943a 	slli	r6,r4,16
 402adf0:	8c400104 	addi	r17,r17,4
 402adf4:	200bd43a 	srai	r5,r4,16
 402adf8:	30c6b03a 	or	r3,r6,r3
 402adfc:	10ffff15 	stw	r3,-4(r2)
 402ae00:	a47fed2e 	bgeu	r20,r17,402adb8 <_gp+0xfffe9bb8>
 402ae04:	9485883a 	add	r2,r18,r18
 402ae08:	1085883a 	add	r2,r2,r2
 402ae0c:	a887883a 	add	r3,r21,r2
 402ae10:	18800017 	ldw	r2,0(r3)
 402ae14:	10000b1e 	bne	r2,zero,402ae44 <quorem+0x1c8>
 402ae18:	18bfff04 	addi	r2,r3,-4
 402ae1c:	a880082e 	bgeu	r21,r2,402ae40 <quorem+0x1c4>
 402ae20:	18ffff17 	ldw	r3,-4(r3)
 402ae24:	18000326 	beq	r3,zero,402ae34 <quorem+0x1b8>
 402ae28:	00000506 	br	402ae40 <quorem+0x1c4>
 402ae2c:	10c00017 	ldw	r3,0(r2)
 402ae30:	1800031e 	bne	r3,zero,402ae40 <quorem+0x1c4>
 402ae34:	10bfff04 	addi	r2,r2,-4
 402ae38:	94bfffc4 	addi	r18,r18,-1
 402ae3c:	a8bffb36 	bltu	r21,r2,402ae2c <_gp+0xfffe9c2c>
 402ae40:	84800415 	stw	r18,16(r16)
 402ae44:	9805883a 	mov	r2,r19
 402ae48:	dfc00817 	ldw	ra,32(sp)
 402ae4c:	ddc00717 	ldw	r23,28(sp)
 402ae50:	dd800617 	ldw	r22,24(sp)
 402ae54:	dd400517 	ldw	r21,20(sp)
 402ae58:	dd000417 	ldw	r20,16(sp)
 402ae5c:	dcc00317 	ldw	r19,12(sp)
 402ae60:	dc800217 	ldw	r18,8(sp)
 402ae64:	dc400117 	ldw	r17,4(sp)
 402ae68:	dc000017 	ldw	r16,0(sp)
 402ae6c:	dec00904 	addi	sp,sp,36
 402ae70:	f800283a 	ret
 402ae74:	0005883a 	mov	r2,zero
 402ae78:	003ff306 	br	402ae48 <_gp+0xfffe9c48>

0402ae7c <_dtoa_r>:
 402ae7c:	20801017 	ldw	r2,64(r4)
 402ae80:	deffde04 	addi	sp,sp,-136
 402ae84:	df002015 	stw	fp,128(sp)
 402ae88:	dcc01b15 	stw	r19,108(sp)
 402ae8c:	dc801a15 	stw	r18,104(sp)
 402ae90:	dc401915 	stw	r17,100(sp)
 402ae94:	dc001815 	stw	r16,96(sp)
 402ae98:	dfc02115 	stw	ra,132(sp)
 402ae9c:	ddc01f15 	stw	r23,124(sp)
 402aea0:	dd801e15 	stw	r22,120(sp)
 402aea4:	dd401d15 	stw	r21,116(sp)
 402aea8:	dd001c15 	stw	r20,112(sp)
 402aeac:	d9c00315 	stw	r7,12(sp)
 402aeb0:	2039883a 	mov	fp,r4
 402aeb4:	3023883a 	mov	r17,r6
 402aeb8:	2825883a 	mov	r18,r5
 402aebc:	dc002417 	ldw	r16,144(sp)
 402aec0:	3027883a 	mov	r19,r6
 402aec4:	10000826 	beq	r2,zero,402aee8 <_dtoa_r+0x6c>
 402aec8:	21801117 	ldw	r6,68(r4)
 402aecc:	00c00044 	movi	r3,1
 402aed0:	100b883a 	mov	r5,r2
 402aed4:	1986983a 	sll	r3,r3,r6
 402aed8:	11800115 	stw	r6,4(r2)
 402aedc:	10c00215 	stw	r3,8(r2)
 402aee0:	402d02c0 	call	402d02c <_Bfree>
 402aee4:	e0001015 	stw	zero,64(fp)
 402aee8:	88002e16 	blt	r17,zero,402afa4 <_dtoa_r+0x128>
 402aeec:	80000015 	stw	zero,0(r16)
 402aef0:	889ffc2c 	andhi	r2,r17,32752
 402aef4:	00dffc34 	movhi	r3,32752
 402aef8:	10c01c26 	beq	r2,r3,402af6c <_dtoa_r+0xf0>
 402aefc:	000d883a 	mov	r6,zero
 402af00:	000f883a 	mov	r7,zero
 402af04:	9009883a 	mov	r4,r18
 402af08:	980b883a 	mov	r5,r19
 402af0c:	40333380 	call	4033338 <__eqdf2>
 402af10:	10002b1e 	bne	r2,zero,402afc0 <_dtoa_r+0x144>
 402af14:	d9c02317 	ldw	r7,140(sp)
 402af18:	00800044 	movi	r2,1
 402af1c:	38800015 	stw	r2,0(r7)
 402af20:	d8802517 	ldw	r2,148(sp)
 402af24:	10019e26 	beq	r2,zero,402b5a0 <_dtoa_r+0x724>
 402af28:	d8c02517 	ldw	r3,148(sp)
 402af2c:	008100f4 	movhi	r2,1027
 402af30:	109d1944 	addi	r2,r2,29797
 402af34:	18800015 	stw	r2,0(r3)
 402af38:	10bfffc4 	addi	r2,r2,-1
 402af3c:	dfc02117 	ldw	ra,132(sp)
 402af40:	df002017 	ldw	fp,128(sp)
 402af44:	ddc01f17 	ldw	r23,124(sp)
 402af48:	dd801e17 	ldw	r22,120(sp)
 402af4c:	dd401d17 	ldw	r21,116(sp)
 402af50:	dd001c17 	ldw	r20,112(sp)
 402af54:	dcc01b17 	ldw	r19,108(sp)
 402af58:	dc801a17 	ldw	r18,104(sp)
 402af5c:	dc401917 	ldw	r17,100(sp)
 402af60:	dc001817 	ldw	r16,96(sp)
 402af64:	dec02204 	addi	sp,sp,136
 402af68:	f800283a 	ret
 402af6c:	d8c02317 	ldw	r3,140(sp)
 402af70:	0089c3c4 	movi	r2,9999
 402af74:	18800015 	stw	r2,0(r3)
 402af78:	90017726 	beq	r18,zero,402b558 <_dtoa_r+0x6dc>
 402af7c:	008100f4 	movhi	r2,1027
 402af80:	109d2d04 	addi	r2,r2,29876
 402af84:	d9002517 	ldw	r4,148(sp)
 402af88:	203fec26 	beq	r4,zero,402af3c <_gp+0xfffe9d3c>
 402af8c:	10c000c7 	ldb	r3,3(r2)
 402af90:	1801781e 	bne	r3,zero,402b574 <_dtoa_r+0x6f8>
 402af94:	10c000c4 	addi	r3,r2,3
 402af98:	d9802517 	ldw	r6,148(sp)
 402af9c:	30c00015 	stw	r3,0(r6)
 402afa0:	003fe606 	br	402af3c <_gp+0xfffe9d3c>
 402afa4:	04e00034 	movhi	r19,32768
 402afa8:	9cffffc4 	addi	r19,r19,-1
 402afac:	00800044 	movi	r2,1
 402afb0:	8ce6703a 	and	r19,r17,r19
 402afb4:	80800015 	stw	r2,0(r16)
 402afb8:	9823883a 	mov	r17,r19
 402afbc:	003fcc06 	br	402aef0 <_gp+0xfffe9cf0>
 402afc0:	d8800204 	addi	r2,sp,8
 402afc4:	d8800015 	stw	r2,0(sp)
 402afc8:	d9c00104 	addi	r7,sp,4
 402afcc:	900b883a 	mov	r5,r18
 402afd0:	980d883a 	mov	r6,r19
 402afd4:	e009883a 	mov	r4,fp
 402afd8:	8820d53a 	srli	r16,r17,20
 402afdc:	402dc180 	call	402dc18 <__d2b>
 402afe0:	d8800915 	stw	r2,36(sp)
 402afe4:	8001651e 	bne	r16,zero,402b57c <_dtoa_r+0x700>
 402afe8:	dd800217 	ldw	r22,8(sp)
 402afec:	dc000117 	ldw	r16,4(sp)
 402aff0:	00800804 	movi	r2,32
 402aff4:	b421883a 	add	r16,r22,r16
 402aff8:	80c10c84 	addi	r3,r16,1074
 402affc:	10c2d10e 	bge	r2,r3,402bb44 <_dtoa_r+0xcc8>
 402b000:	00801004 	movi	r2,64
 402b004:	81010484 	addi	r4,r16,1042
 402b008:	10c7c83a 	sub	r3,r2,r3
 402b00c:	9108d83a 	srl	r4,r18,r4
 402b010:	88e2983a 	sll	r17,r17,r3
 402b014:	2448b03a 	or	r4,r4,r17
 402b018:	4033f0c0 	call	4033f0c <__floatunsidf>
 402b01c:	017f8434 	movhi	r5,65040
 402b020:	01800044 	movi	r6,1
 402b024:	1009883a 	mov	r4,r2
 402b028:	194b883a 	add	r5,r3,r5
 402b02c:	843fffc4 	addi	r16,r16,-1
 402b030:	d9801115 	stw	r6,68(sp)
 402b034:	000d883a 	mov	r6,zero
 402b038:	01cffe34 	movhi	r7,16376
 402b03c:	40335900 	call	4033590 <__subdf3>
 402b040:	0198dbf4 	movhi	r6,25455
 402b044:	01cff4f4 	movhi	r7,16339
 402b048:	3190d844 	addi	r6,r6,17249
 402b04c:	39e1e9c4 	addi	r7,r7,-30809
 402b050:	1009883a 	mov	r4,r2
 402b054:	180b883a 	mov	r5,r3
 402b058:	40236240 	call	4023624 <__muldf3>
 402b05c:	01a2d874 	movhi	r6,35681
 402b060:	01cff1f4 	movhi	r7,16327
 402b064:	31b22cc4 	addi	r6,r6,-14157
 402b068:	39e28a04 	addi	r7,r7,-30168
 402b06c:	180b883a 	mov	r5,r3
 402b070:	1009883a 	mov	r4,r2
 402b074:	40321a40 	call	40321a4 <__adddf3>
 402b078:	8009883a 	mov	r4,r16
 402b07c:	1029883a 	mov	r20,r2
 402b080:	1823883a 	mov	r17,r3
 402b084:	4023d3c0 	call	4023d3c <__floatsidf>
 402b088:	019427f4 	movhi	r6,20639
 402b08c:	01cff4f4 	movhi	r7,16339
 402b090:	319e7ec4 	addi	r6,r6,31227
 402b094:	39d104c4 	addi	r7,r7,17427
 402b098:	1009883a 	mov	r4,r2
 402b09c:	180b883a 	mov	r5,r3
 402b0a0:	40236240 	call	4023624 <__muldf3>
 402b0a4:	100d883a 	mov	r6,r2
 402b0a8:	180f883a 	mov	r7,r3
 402b0ac:	a009883a 	mov	r4,r20
 402b0b0:	880b883a 	mov	r5,r17
 402b0b4:	40321a40 	call	40321a4 <__adddf3>
 402b0b8:	1009883a 	mov	r4,r2
 402b0bc:	180b883a 	mov	r5,r3
 402b0c0:	1029883a 	mov	r20,r2
 402b0c4:	1823883a 	mov	r17,r3
 402b0c8:	4033e8c0 	call	4033e8c <__fixdfsi>
 402b0cc:	000d883a 	mov	r6,zero
 402b0d0:	000f883a 	mov	r7,zero
 402b0d4:	a009883a 	mov	r4,r20
 402b0d8:	880b883a 	mov	r5,r17
 402b0dc:	d8800515 	stw	r2,20(sp)
 402b0e0:	403349c0 	call	403349c <__ledf2>
 402b0e4:	10028716 	blt	r2,zero,402bb04 <_dtoa_r+0xc88>
 402b0e8:	d8c00517 	ldw	r3,20(sp)
 402b0ec:	00800584 	movi	r2,22
 402b0f0:	10c27536 	bltu	r2,r3,402bac8 <_dtoa_r+0xc4c>
 402b0f4:	180490fa 	slli	r2,r3,3
 402b0f8:	00c100f4 	movhi	r3,1027
 402b0fc:	18dd4804 	addi	r3,r3,29984
 402b100:	1885883a 	add	r2,r3,r2
 402b104:	11000017 	ldw	r4,0(r2)
 402b108:	11400117 	ldw	r5,4(r2)
 402b10c:	900d883a 	mov	r6,r18
 402b110:	980f883a 	mov	r7,r19
 402b114:	40333c00 	call	40333c0 <__gedf2>
 402b118:	00828d0e 	bge	zero,r2,402bb50 <_dtoa_r+0xcd4>
 402b11c:	d9000517 	ldw	r4,20(sp)
 402b120:	d8000e15 	stw	zero,56(sp)
 402b124:	213fffc4 	addi	r4,r4,-1
 402b128:	d9000515 	stw	r4,20(sp)
 402b12c:	b42dc83a 	sub	r22,r22,r16
 402b130:	b5bfffc4 	addi	r22,r22,-1
 402b134:	b0026f16 	blt	r22,zero,402baf4 <_dtoa_r+0xc78>
 402b138:	d8000815 	stw	zero,32(sp)
 402b13c:	d9c00517 	ldw	r7,20(sp)
 402b140:	38026416 	blt	r7,zero,402bad4 <_dtoa_r+0xc58>
 402b144:	b1ed883a 	add	r22,r22,r7
 402b148:	d9c00d15 	stw	r7,52(sp)
 402b14c:	d8000a15 	stw	zero,40(sp)
 402b150:	d9800317 	ldw	r6,12(sp)
 402b154:	00800244 	movi	r2,9
 402b158:	11811436 	bltu	r2,r6,402b5ac <_dtoa_r+0x730>
 402b15c:	00800144 	movi	r2,5
 402b160:	1184e10e 	bge	r2,r6,402c4e8 <_dtoa_r+0x166c>
 402b164:	31bfff04 	addi	r6,r6,-4
 402b168:	d9800315 	stw	r6,12(sp)
 402b16c:	0023883a 	mov	r17,zero
 402b170:	d9800317 	ldw	r6,12(sp)
 402b174:	008000c4 	movi	r2,3
 402b178:	30836726 	beq	r6,r2,402bf18 <_dtoa_r+0x109c>
 402b17c:	1183410e 	bge	r2,r6,402be84 <_dtoa_r+0x1008>
 402b180:	d9c00317 	ldw	r7,12(sp)
 402b184:	00800104 	movi	r2,4
 402b188:	38827c26 	beq	r7,r2,402bb7c <_dtoa_r+0xd00>
 402b18c:	00800144 	movi	r2,5
 402b190:	3884c41e 	bne	r7,r2,402c4a4 <_dtoa_r+0x1628>
 402b194:	00800044 	movi	r2,1
 402b198:	d8800b15 	stw	r2,44(sp)
 402b19c:	d8c00517 	ldw	r3,20(sp)
 402b1a0:	d9002217 	ldw	r4,136(sp)
 402b1a4:	1907883a 	add	r3,r3,r4
 402b1a8:	19800044 	addi	r6,r3,1
 402b1ac:	d8c00c15 	stw	r3,48(sp)
 402b1b0:	d9800615 	stw	r6,24(sp)
 402b1b4:	0183a40e 	bge	zero,r6,402c048 <_dtoa_r+0x11cc>
 402b1b8:	d9800617 	ldw	r6,24(sp)
 402b1bc:	3021883a 	mov	r16,r6
 402b1c0:	e0001115 	stw	zero,68(fp)
 402b1c4:	008005c4 	movi	r2,23
 402b1c8:	1184c92e 	bgeu	r2,r6,402c4f0 <_dtoa_r+0x1674>
 402b1cc:	00c00044 	movi	r3,1
 402b1d0:	00800104 	movi	r2,4
 402b1d4:	1085883a 	add	r2,r2,r2
 402b1d8:	11000504 	addi	r4,r2,20
 402b1dc:	180b883a 	mov	r5,r3
 402b1e0:	18c00044 	addi	r3,r3,1
 402b1e4:	313ffb2e 	bgeu	r6,r4,402b1d4 <_gp+0xfffe9fd4>
 402b1e8:	e1401115 	stw	r5,68(fp)
 402b1ec:	e009883a 	mov	r4,fp
 402b1f0:	402cf840 	call	402cf84 <_Balloc>
 402b1f4:	d8800715 	stw	r2,28(sp)
 402b1f8:	e0801015 	stw	r2,64(fp)
 402b1fc:	00800384 	movi	r2,14
 402b200:	1400f736 	bltu	r2,r16,402b5e0 <_dtoa_r+0x764>
 402b204:	8800f626 	beq	r17,zero,402b5e0 <_dtoa_r+0x764>
 402b208:	d9c00517 	ldw	r7,20(sp)
 402b20c:	01c39a0e 	bge	zero,r7,402c078 <_dtoa_r+0x11fc>
 402b210:	388003cc 	andi	r2,r7,15
 402b214:	100490fa 	slli	r2,r2,3
 402b218:	382bd13a 	srai	r21,r7,4
 402b21c:	00c100f4 	movhi	r3,1027
 402b220:	18dd4804 	addi	r3,r3,29984
 402b224:	1885883a 	add	r2,r3,r2
 402b228:	a8c0040c 	andi	r3,r21,16
 402b22c:	12400017 	ldw	r9,0(r2)
 402b230:	12000117 	ldw	r8,4(r2)
 402b234:	18037926 	beq	r3,zero,402c01c <_dtoa_r+0x11a0>
 402b238:	008100f4 	movhi	r2,1027
 402b23c:	109d3e04 	addi	r2,r2,29944
 402b240:	11800817 	ldw	r6,32(r2)
 402b244:	11c00917 	ldw	r7,36(r2)
 402b248:	9009883a 	mov	r4,r18
 402b24c:	980b883a 	mov	r5,r19
 402b250:	da001715 	stw	r8,92(sp)
 402b254:	da401615 	stw	r9,88(sp)
 402b258:	4032a500 	call	4032a50 <__divdf3>
 402b25c:	da001717 	ldw	r8,92(sp)
 402b260:	da401617 	ldw	r9,88(sp)
 402b264:	ad4003cc 	andi	r21,r21,15
 402b268:	040000c4 	movi	r16,3
 402b26c:	1023883a 	mov	r17,r2
 402b270:	1829883a 	mov	r20,r3
 402b274:	a8001126 	beq	r21,zero,402b2bc <_dtoa_r+0x440>
 402b278:	05c100f4 	movhi	r23,1027
 402b27c:	bddd3e04 	addi	r23,r23,29944
 402b280:	4805883a 	mov	r2,r9
 402b284:	4007883a 	mov	r3,r8
 402b288:	a980004c 	andi	r6,r21,1
 402b28c:	1009883a 	mov	r4,r2
 402b290:	a82bd07a 	srai	r21,r21,1
 402b294:	180b883a 	mov	r5,r3
 402b298:	30000426 	beq	r6,zero,402b2ac <_dtoa_r+0x430>
 402b29c:	b9800017 	ldw	r6,0(r23)
 402b2a0:	b9c00117 	ldw	r7,4(r23)
 402b2a4:	84000044 	addi	r16,r16,1
 402b2a8:	40236240 	call	4023624 <__muldf3>
 402b2ac:	bdc00204 	addi	r23,r23,8
 402b2b0:	a83ff51e 	bne	r21,zero,402b288 <_gp+0xfffea088>
 402b2b4:	1013883a 	mov	r9,r2
 402b2b8:	1811883a 	mov	r8,r3
 402b2bc:	480d883a 	mov	r6,r9
 402b2c0:	400f883a 	mov	r7,r8
 402b2c4:	8809883a 	mov	r4,r17
 402b2c8:	a00b883a 	mov	r5,r20
 402b2cc:	4032a500 	call	4032a50 <__divdf3>
 402b2d0:	d8800f15 	stw	r2,60(sp)
 402b2d4:	d8c01015 	stw	r3,64(sp)
 402b2d8:	d8c00e17 	ldw	r3,56(sp)
 402b2dc:	18000626 	beq	r3,zero,402b2f8 <_dtoa_r+0x47c>
 402b2e0:	d9000f17 	ldw	r4,60(sp)
 402b2e4:	d9401017 	ldw	r5,64(sp)
 402b2e8:	000d883a 	mov	r6,zero
 402b2ec:	01cffc34 	movhi	r7,16368
 402b2f0:	403349c0 	call	403349c <__ledf2>
 402b2f4:	10040b16 	blt	r2,zero,402c324 <_dtoa_r+0x14a8>
 402b2f8:	8009883a 	mov	r4,r16
 402b2fc:	4023d3c0 	call	4023d3c <__floatsidf>
 402b300:	d9800f17 	ldw	r6,60(sp)
 402b304:	d9c01017 	ldw	r7,64(sp)
 402b308:	1009883a 	mov	r4,r2
 402b30c:	180b883a 	mov	r5,r3
 402b310:	40236240 	call	4023624 <__muldf3>
 402b314:	000d883a 	mov	r6,zero
 402b318:	01d00734 	movhi	r7,16412
 402b31c:	1009883a 	mov	r4,r2
 402b320:	180b883a 	mov	r5,r3
 402b324:	40321a40 	call	40321a4 <__adddf3>
 402b328:	1021883a 	mov	r16,r2
 402b32c:	d8800617 	ldw	r2,24(sp)
 402b330:	047f3034 	movhi	r17,64704
 402b334:	1c63883a 	add	r17,r3,r17
 402b338:	10031826 	beq	r2,zero,402bf9c <_dtoa_r+0x1120>
 402b33c:	d8c00517 	ldw	r3,20(sp)
 402b340:	db000617 	ldw	r12,24(sp)
 402b344:	d8c01315 	stw	r3,76(sp)
 402b348:	d9000b17 	ldw	r4,44(sp)
 402b34c:	20038f26 	beq	r4,zero,402c18c <_dtoa_r+0x1310>
 402b350:	60bfffc4 	addi	r2,r12,-1
 402b354:	100490fa 	slli	r2,r2,3
 402b358:	00c100f4 	movhi	r3,1027
 402b35c:	18dd4804 	addi	r3,r3,29984
 402b360:	1885883a 	add	r2,r3,r2
 402b364:	11800017 	ldw	r6,0(r2)
 402b368:	11c00117 	ldw	r7,4(r2)
 402b36c:	d8800717 	ldw	r2,28(sp)
 402b370:	0009883a 	mov	r4,zero
 402b374:	014ff834 	movhi	r5,16352
 402b378:	db001615 	stw	r12,88(sp)
 402b37c:	15c00044 	addi	r23,r2,1
 402b380:	4032a500 	call	4032a50 <__divdf3>
 402b384:	800d883a 	mov	r6,r16
 402b388:	880f883a 	mov	r7,r17
 402b38c:	1009883a 	mov	r4,r2
 402b390:	180b883a 	mov	r5,r3
 402b394:	40335900 	call	4033590 <__subdf3>
 402b398:	d9401017 	ldw	r5,64(sp)
 402b39c:	d9000f17 	ldw	r4,60(sp)
 402b3a0:	102b883a 	mov	r21,r2
 402b3a4:	d8c01215 	stw	r3,72(sp)
 402b3a8:	4033e8c0 	call	4033e8c <__fixdfsi>
 402b3ac:	1009883a 	mov	r4,r2
 402b3b0:	1029883a 	mov	r20,r2
 402b3b4:	4023d3c0 	call	4023d3c <__floatsidf>
 402b3b8:	d9000f17 	ldw	r4,60(sp)
 402b3bc:	d9401017 	ldw	r5,64(sp)
 402b3c0:	100d883a 	mov	r6,r2
 402b3c4:	180f883a 	mov	r7,r3
 402b3c8:	40335900 	call	4033590 <__subdf3>
 402b3cc:	1823883a 	mov	r17,r3
 402b3d0:	d8c00717 	ldw	r3,28(sp)
 402b3d4:	d9401217 	ldw	r5,72(sp)
 402b3d8:	a2000c04 	addi	r8,r20,48
 402b3dc:	1021883a 	mov	r16,r2
 402b3e0:	1a000005 	stb	r8,0(r3)
 402b3e4:	800d883a 	mov	r6,r16
 402b3e8:	880f883a 	mov	r7,r17
 402b3ec:	a809883a 	mov	r4,r21
 402b3f0:	4029883a 	mov	r20,r8
 402b3f4:	40333c00 	call	40333c0 <__gedf2>
 402b3f8:	00841d16 	blt	zero,r2,402c470 <_dtoa_r+0x15f4>
 402b3fc:	800d883a 	mov	r6,r16
 402b400:	880f883a 	mov	r7,r17
 402b404:	0009883a 	mov	r4,zero
 402b408:	014ffc34 	movhi	r5,16368
 402b40c:	40335900 	call	4033590 <__subdf3>
 402b410:	d9401217 	ldw	r5,72(sp)
 402b414:	100d883a 	mov	r6,r2
 402b418:	180f883a 	mov	r7,r3
 402b41c:	a809883a 	mov	r4,r21
 402b420:	40333c00 	call	40333c0 <__gedf2>
 402b424:	db001617 	ldw	r12,88(sp)
 402b428:	00840e16 	blt	zero,r2,402c464 <_dtoa_r+0x15e8>
 402b42c:	00800044 	movi	r2,1
 402b430:	13006b0e 	bge	r2,r12,402b5e0 <_dtoa_r+0x764>
 402b434:	d9000717 	ldw	r4,28(sp)
 402b438:	dd800f15 	stw	r22,60(sp)
 402b43c:	dcc01015 	stw	r19,64(sp)
 402b440:	2319883a 	add	r12,r4,r12
 402b444:	dcc01217 	ldw	r19,72(sp)
 402b448:	602d883a 	mov	r22,r12
 402b44c:	dc801215 	stw	r18,72(sp)
 402b450:	b825883a 	mov	r18,r23
 402b454:	00000906 	br	402b47c <_dtoa_r+0x600>
 402b458:	40335900 	call	4033590 <__subdf3>
 402b45c:	a80d883a 	mov	r6,r21
 402b460:	980f883a 	mov	r7,r19
 402b464:	1009883a 	mov	r4,r2
 402b468:	180b883a 	mov	r5,r3
 402b46c:	403349c0 	call	403349c <__ledf2>
 402b470:	1003e816 	blt	r2,zero,402c414 <_dtoa_r+0x1598>
 402b474:	b825883a 	mov	r18,r23
 402b478:	bd83e926 	beq	r23,r22,402c420 <_dtoa_r+0x15a4>
 402b47c:	a809883a 	mov	r4,r21
 402b480:	980b883a 	mov	r5,r19
 402b484:	000d883a 	mov	r6,zero
 402b488:	01d00934 	movhi	r7,16420
 402b48c:	40236240 	call	4023624 <__muldf3>
 402b490:	000d883a 	mov	r6,zero
 402b494:	01d00934 	movhi	r7,16420
 402b498:	8009883a 	mov	r4,r16
 402b49c:	880b883a 	mov	r5,r17
 402b4a0:	102b883a 	mov	r21,r2
 402b4a4:	1827883a 	mov	r19,r3
 402b4a8:	40236240 	call	4023624 <__muldf3>
 402b4ac:	180b883a 	mov	r5,r3
 402b4b0:	1009883a 	mov	r4,r2
 402b4b4:	1821883a 	mov	r16,r3
 402b4b8:	1023883a 	mov	r17,r2
 402b4bc:	4033e8c0 	call	4033e8c <__fixdfsi>
 402b4c0:	1009883a 	mov	r4,r2
 402b4c4:	1029883a 	mov	r20,r2
 402b4c8:	4023d3c0 	call	4023d3c <__floatsidf>
 402b4cc:	8809883a 	mov	r4,r17
 402b4d0:	800b883a 	mov	r5,r16
 402b4d4:	100d883a 	mov	r6,r2
 402b4d8:	180f883a 	mov	r7,r3
 402b4dc:	40335900 	call	4033590 <__subdf3>
 402b4e0:	a5000c04 	addi	r20,r20,48
 402b4e4:	a80d883a 	mov	r6,r21
 402b4e8:	980f883a 	mov	r7,r19
 402b4ec:	1009883a 	mov	r4,r2
 402b4f0:	180b883a 	mov	r5,r3
 402b4f4:	95000005 	stb	r20,0(r18)
 402b4f8:	1021883a 	mov	r16,r2
 402b4fc:	1823883a 	mov	r17,r3
 402b500:	403349c0 	call	403349c <__ledf2>
 402b504:	bdc00044 	addi	r23,r23,1
 402b508:	800d883a 	mov	r6,r16
 402b50c:	880f883a 	mov	r7,r17
 402b510:	0009883a 	mov	r4,zero
 402b514:	014ffc34 	movhi	r5,16368
 402b518:	103fcf0e 	bge	r2,zero,402b458 <_gp+0xfffea258>
 402b51c:	d8c01317 	ldw	r3,76(sp)
 402b520:	d8c00515 	stw	r3,20(sp)
 402b524:	d9400917 	ldw	r5,36(sp)
 402b528:	e009883a 	mov	r4,fp
 402b52c:	402d02c0 	call	402d02c <_Bfree>
 402b530:	d9000517 	ldw	r4,20(sp)
 402b534:	d9802317 	ldw	r6,140(sp)
 402b538:	d9c02517 	ldw	r7,148(sp)
 402b53c:	b8000005 	stb	zero,0(r23)
 402b540:	20800044 	addi	r2,r4,1
 402b544:	30800015 	stw	r2,0(r6)
 402b548:	3802aa26 	beq	r7,zero,402bff4 <_dtoa_r+0x1178>
 402b54c:	3dc00015 	stw	r23,0(r7)
 402b550:	d8800717 	ldw	r2,28(sp)
 402b554:	003e7906 	br	402af3c <_gp+0xfffe9d3c>
 402b558:	00800434 	movhi	r2,16
 402b55c:	10bfffc4 	addi	r2,r2,-1
 402b560:	88a2703a 	and	r17,r17,r2
 402b564:	883e851e 	bne	r17,zero,402af7c <_gp+0xfffe9d7c>
 402b568:	008100f4 	movhi	r2,1027
 402b56c:	109d2a04 	addi	r2,r2,29864
 402b570:	003e8406 	br	402af84 <_gp+0xfffe9d84>
 402b574:	10c00204 	addi	r3,r2,8
 402b578:	003e8706 	br	402af98 <_gp+0xfffe9d98>
 402b57c:	01400434 	movhi	r5,16
 402b580:	297fffc4 	addi	r5,r5,-1
 402b584:	994a703a 	and	r5,r19,r5
 402b588:	9009883a 	mov	r4,r18
 402b58c:	843f0044 	addi	r16,r16,-1023
 402b590:	294ffc34 	orhi	r5,r5,16368
 402b594:	dd800217 	ldw	r22,8(sp)
 402b598:	d8001115 	stw	zero,68(sp)
 402b59c:	003ea506 	br	402b034 <_gp+0xfffe9e34>
 402b5a0:	008100f4 	movhi	r2,1027
 402b5a4:	109d1904 	addi	r2,r2,29796
 402b5a8:	003e6406 	br	402af3c <_gp+0xfffe9d3c>
 402b5ac:	e0001115 	stw	zero,68(fp)
 402b5b0:	000b883a 	mov	r5,zero
 402b5b4:	e009883a 	mov	r4,fp
 402b5b8:	402cf840 	call	402cf84 <_Balloc>
 402b5bc:	01bfffc4 	movi	r6,-1
 402b5c0:	01c00044 	movi	r7,1
 402b5c4:	d8800715 	stw	r2,28(sp)
 402b5c8:	d9800c15 	stw	r6,48(sp)
 402b5cc:	e0801015 	stw	r2,64(fp)
 402b5d0:	d8000315 	stw	zero,12(sp)
 402b5d4:	d9c00b15 	stw	r7,44(sp)
 402b5d8:	d9800615 	stw	r6,24(sp)
 402b5dc:	d8002215 	stw	zero,136(sp)
 402b5e0:	d8800117 	ldw	r2,4(sp)
 402b5e4:	10008916 	blt	r2,zero,402b80c <_dtoa_r+0x990>
 402b5e8:	d9000517 	ldw	r4,20(sp)
 402b5ec:	00c00384 	movi	r3,14
 402b5f0:	19008616 	blt	r3,r4,402b80c <_dtoa_r+0x990>
 402b5f4:	200490fa 	slli	r2,r4,3
 402b5f8:	00c100f4 	movhi	r3,1027
 402b5fc:	d9802217 	ldw	r6,136(sp)
 402b600:	18dd4804 	addi	r3,r3,29984
 402b604:	1885883a 	add	r2,r3,r2
 402b608:	14000017 	ldw	r16,0(r2)
 402b60c:	14400117 	ldw	r17,4(r2)
 402b610:	30016316 	blt	r6,zero,402bba0 <_dtoa_r+0xd24>
 402b614:	800d883a 	mov	r6,r16
 402b618:	880f883a 	mov	r7,r17
 402b61c:	9009883a 	mov	r4,r18
 402b620:	980b883a 	mov	r5,r19
 402b624:	4032a500 	call	4032a50 <__divdf3>
 402b628:	180b883a 	mov	r5,r3
 402b62c:	1009883a 	mov	r4,r2
 402b630:	4033e8c0 	call	4033e8c <__fixdfsi>
 402b634:	1009883a 	mov	r4,r2
 402b638:	102b883a 	mov	r21,r2
 402b63c:	4023d3c0 	call	4023d3c <__floatsidf>
 402b640:	800d883a 	mov	r6,r16
 402b644:	880f883a 	mov	r7,r17
 402b648:	1009883a 	mov	r4,r2
 402b64c:	180b883a 	mov	r5,r3
 402b650:	40236240 	call	4023624 <__muldf3>
 402b654:	100d883a 	mov	r6,r2
 402b658:	180f883a 	mov	r7,r3
 402b65c:	9009883a 	mov	r4,r18
 402b660:	980b883a 	mov	r5,r19
 402b664:	40335900 	call	4033590 <__subdf3>
 402b668:	d9c00717 	ldw	r7,28(sp)
 402b66c:	1009883a 	mov	r4,r2
 402b670:	a8800c04 	addi	r2,r21,48
 402b674:	38800005 	stb	r2,0(r7)
 402b678:	3dc00044 	addi	r23,r7,1
 402b67c:	d9c00617 	ldw	r7,24(sp)
 402b680:	01800044 	movi	r6,1
 402b684:	180b883a 	mov	r5,r3
 402b688:	2005883a 	mov	r2,r4
 402b68c:	39803826 	beq	r7,r6,402b770 <_dtoa_r+0x8f4>
 402b690:	000d883a 	mov	r6,zero
 402b694:	01d00934 	movhi	r7,16420
 402b698:	40236240 	call	4023624 <__muldf3>
 402b69c:	000d883a 	mov	r6,zero
 402b6a0:	000f883a 	mov	r7,zero
 402b6a4:	1009883a 	mov	r4,r2
 402b6a8:	180b883a 	mov	r5,r3
 402b6ac:	1025883a 	mov	r18,r2
 402b6b0:	1827883a 	mov	r19,r3
 402b6b4:	40333380 	call	4033338 <__eqdf2>
 402b6b8:	103f9a26 	beq	r2,zero,402b524 <_gp+0xfffea324>
 402b6bc:	d9c00617 	ldw	r7,24(sp)
 402b6c0:	d8c00717 	ldw	r3,28(sp)
 402b6c4:	b829883a 	mov	r20,r23
 402b6c8:	38bfffc4 	addi	r2,r7,-1
 402b6cc:	18ad883a 	add	r22,r3,r2
 402b6d0:	00000a06 	br	402b6fc <_dtoa_r+0x880>
 402b6d4:	40236240 	call	4023624 <__muldf3>
 402b6d8:	000d883a 	mov	r6,zero
 402b6dc:	000f883a 	mov	r7,zero
 402b6e0:	1009883a 	mov	r4,r2
 402b6e4:	180b883a 	mov	r5,r3
 402b6e8:	1025883a 	mov	r18,r2
 402b6ec:	1827883a 	mov	r19,r3
 402b6f0:	b829883a 	mov	r20,r23
 402b6f4:	40333380 	call	4033338 <__eqdf2>
 402b6f8:	103f8a26 	beq	r2,zero,402b524 <_gp+0xfffea324>
 402b6fc:	800d883a 	mov	r6,r16
 402b700:	880f883a 	mov	r7,r17
 402b704:	9009883a 	mov	r4,r18
 402b708:	980b883a 	mov	r5,r19
 402b70c:	4032a500 	call	4032a50 <__divdf3>
 402b710:	180b883a 	mov	r5,r3
 402b714:	1009883a 	mov	r4,r2
 402b718:	4033e8c0 	call	4033e8c <__fixdfsi>
 402b71c:	1009883a 	mov	r4,r2
 402b720:	102b883a 	mov	r21,r2
 402b724:	4023d3c0 	call	4023d3c <__floatsidf>
 402b728:	800d883a 	mov	r6,r16
 402b72c:	880f883a 	mov	r7,r17
 402b730:	1009883a 	mov	r4,r2
 402b734:	180b883a 	mov	r5,r3
 402b738:	40236240 	call	4023624 <__muldf3>
 402b73c:	100d883a 	mov	r6,r2
 402b740:	180f883a 	mov	r7,r3
 402b744:	9009883a 	mov	r4,r18
 402b748:	980b883a 	mov	r5,r19
 402b74c:	40335900 	call	4033590 <__subdf3>
 402b750:	aa000c04 	addi	r8,r21,48
 402b754:	a2000005 	stb	r8,0(r20)
 402b758:	000d883a 	mov	r6,zero
 402b75c:	01d00934 	movhi	r7,16420
 402b760:	1009883a 	mov	r4,r2
 402b764:	180b883a 	mov	r5,r3
 402b768:	a5c00044 	addi	r23,r20,1
 402b76c:	b53fd91e 	bne	r22,r20,402b6d4 <_gp+0xfffea4d4>
 402b770:	100d883a 	mov	r6,r2
 402b774:	180f883a 	mov	r7,r3
 402b778:	1009883a 	mov	r4,r2
 402b77c:	180b883a 	mov	r5,r3
 402b780:	40321a40 	call	40321a4 <__adddf3>
 402b784:	100d883a 	mov	r6,r2
 402b788:	180f883a 	mov	r7,r3
 402b78c:	8009883a 	mov	r4,r16
 402b790:	880b883a 	mov	r5,r17
 402b794:	1027883a 	mov	r19,r2
 402b798:	1825883a 	mov	r18,r3
 402b79c:	403349c0 	call	403349c <__ledf2>
 402b7a0:	10000816 	blt	r2,zero,402b7c4 <_dtoa_r+0x948>
 402b7a4:	980d883a 	mov	r6,r19
 402b7a8:	900f883a 	mov	r7,r18
 402b7ac:	8009883a 	mov	r4,r16
 402b7b0:	880b883a 	mov	r5,r17
 402b7b4:	40333380 	call	4033338 <__eqdf2>
 402b7b8:	103f5a1e 	bne	r2,zero,402b524 <_gp+0xfffea324>
 402b7bc:	ad40004c 	andi	r21,r21,1
 402b7c0:	a83f5826 	beq	r21,zero,402b524 <_gp+0xfffea324>
 402b7c4:	bd3fffc3 	ldbu	r20,-1(r23)
 402b7c8:	b8bfffc4 	addi	r2,r23,-1
 402b7cc:	1007883a 	mov	r3,r2
 402b7d0:	01400e44 	movi	r5,57
 402b7d4:	d9800717 	ldw	r6,28(sp)
 402b7d8:	00000506 	br	402b7f0 <_dtoa_r+0x974>
 402b7dc:	18ffffc4 	addi	r3,r3,-1
 402b7e0:	11824726 	beq	r2,r6,402c100 <_dtoa_r+0x1284>
 402b7e4:	1d000003 	ldbu	r20,0(r3)
 402b7e8:	102f883a 	mov	r23,r2
 402b7ec:	10bfffc4 	addi	r2,r2,-1
 402b7f0:	a1003fcc 	andi	r4,r20,255
 402b7f4:	2100201c 	xori	r4,r4,128
 402b7f8:	213fe004 	addi	r4,r4,-128
 402b7fc:	217ff726 	beq	r4,r5,402b7dc <_gp+0xfffea5dc>
 402b800:	a2000044 	addi	r8,r20,1
 402b804:	12000005 	stb	r8,0(r2)
 402b808:	003f4606 	br	402b524 <_gp+0xfffea324>
 402b80c:	d9000b17 	ldw	r4,44(sp)
 402b810:	2000c826 	beq	r4,zero,402bb34 <_dtoa_r+0xcb8>
 402b814:	d9800317 	ldw	r6,12(sp)
 402b818:	00c00044 	movi	r3,1
 402b81c:	1980f90e 	bge	r3,r6,402bc04 <_dtoa_r+0xd88>
 402b820:	d8800617 	ldw	r2,24(sp)
 402b824:	d8c00a17 	ldw	r3,40(sp)
 402b828:	157fffc4 	addi	r21,r2,-1
 402b82c:	1d41f316 	blt	r3,r21,402bffc <_dtoa_r+0x1180>
 402b830:	1d6bc83a 	sub	r21,r3,r21
 402b834:	d9c00617 	ldw	r7,24(sp)
 402b838:	3802aa16 	blt	r7,zero,402c2e4 <_dtoa_r+0x1468>
 402b83c:	dd000817 	ldw	r20,32(sp)
 402b840:	d8800617 	ldw	r2,24(sp)
 402b844:	d8c00817 	ldw	r3,32(sp)
 402b848:	01400044 	movi	r5,1
 402b84c:	e009883a 	mov	r4,fp
 402b850:	1887883a 	add	r3,r3,r2
 402b854:	d8c00815 	stw	r3,32(sp)
 402b858:	b0ad883a 	add	r22,r22,r2
 402b85c:	402d3900 	call	402d390 <__i2b>
 402b860:	1023883a 	mov	r17,r2
 402b864:	a0000826 	beq	r20,zero,402b888 <_dtoa_r+0xa0c>
 402b868:	0580070e 	bge	zero,r22,402b888 <_dtoa_r+0xa0c>
 402b86c:	a005883a 	mov	r2,r20
 402b870:	b500b916 	blt	r22,r20,402bb58 <_dtoa_r+0xcdc>
 402b874:	d9000817 	ldw	r4,32(sp)
 402b878:	a0a9c83a 	sub	r20,r20,r2
 402b87c:	b0adc83a 	sub	r22,r22,r2
 402b880:	2089c83a 	sub	r4,r4,r2
 402b884:	d9000815 	stw	r4,32(sp)
 402b888:	d9800a17 	ldw	r6,40(sp)
 402b88c:	0181810e 	bge	zero,r6,402be94 <_dtoa_r+0x1018>
 402b890:	d9c00b17 	ldw	r7,44(sp)
 402b894:	3800b326 	beq	r7,zero,402bb64 <_dtoa_r+0xce8>
 402b898:	a800b226 	beq	r21,zero,402bb64 <_dtoa_r+0xce8>
 402b89c:	880b883a 	mov	r5,r17
 402b8a0:	a80d883a 	mov	r6,r21
 402b8a4:	e009883a 	mov	r4,fp
 402b8a8:	402d5c40 	call	402d5c4 <__pow5mult>
 402b8ac:	d9800917 	ldw	r6,36(sp)
 402b8b0:	100b883a 	mov	r5,r2
 402b8b4:	e009883a 	mov	r4,fp
 402b8b8:	1023883a 	mov	r17,r2
 402b8bc:	402d3cc0 	call	402d3cc <__multiply>
 402b8c0:	1021883a 	mov	r16,r2
 402b8c4:	d8800a17 	ldw	r2,40(sp)
 402b8c8:	d9400917 	ldw	r5,36(sp)
 402b8cc:	e009883a 	mov	r4,fp
 402b8d0:	1545c83a 	sub	r2,r2,r21
 402b8d4:	d8800a15 	stw	r2,40(sp)
 402b8d8:	402d02c0 	call	402d02c <_Bfree>
 402b8dc:	d8c00a17 	ldw	r3,40(sp)
 402b8e0:	18009f1e 	bne	r3,zero,402bb60 <_dtoa_r+0xce4>
 402b8e4:	05c00044 	movi	r23,1
 402b8e8:	e009883a 	mov	r4,fp
 402b8ec:	b80b883a 	mov	r5,r23
 402b8f0:	402d3900 	call	402d390 <__i2b>
 402b8f4:	d9000d17 	ldw	r4,52(sp)
 402b8f8:	102b883a 	mov	r21,r2
 402b8fc:	2000ce26 	beq	r4,zero,402bc38 <_dtoa_r+0xdbc>
 402b900:	200d883a 	mov	r6,r4
 402b904:	100b883a 	mov	r5,r2
 402b908:	e009883a 	mov	r4,fp
 402b90c:	402d5c40 	call	402d5c4 <__pow5mult>
 402b910:	d9800317 	ldw	r6,12(sp)
 402b914:	102b883a 	mov	r21,r2
 402b918:	b981810e 	bge	r23,r6,402bf20 <_dtoa_r+0x10a4>
 402b91c:	0027883a 	mov	r19,zero
 402b920:	a8800417 	ldw	r2,16(r21)
 402b924:	05c00804 	movi	r23,32
 402b928:	10800104 	addi	r2,r2,4
 402b92c:	1085883a 	add	r2,r2,r2
 402b930:	1085883a 	add	r2,r2,r2
 402b934:	a885883a 	add	r2,r21,r2
 402b938:	11000017 	ldw	r4,0(r2)
 402b93c:	402d2780 	call	402d278 <__hi0bits>
 402b940:	b885c83a 	sub	r2,r23,r2
 402b944:	1585883a 	add	r2,r2,r22
 402b948:	108007cc 	andi	r2,r2,31
 402b94c:	1000b326 	beq	r2,zero,402bc1c <_dtoa_r+0xda0>
 402b950:	00c00804 	movi	r3,32
 402b954:	1887c83a 	sub	r3,r3,r2
 402b958:	01000104 	movi	r4,4
 402b95c:	20c2cd0e 	bge	r4,r3,402c494 <_dtoa_r+0x1618>
 402b960:	00c00704 	movi	r3,28
 402b964:	1885c83a 	sub	r2,r3,r2
 402b968:	d8c00817 	ldw	r3,32(sp)
 402b96c:	a0a9883a 	add	r20,r20,r2
 402b970:	b0ad883a 	add	r22,r22,r2
 402b974:	1887883a 	add	r3,r3,r2
 402b978:	d8c00815 	stw	r3,32(sp)
 402b97c:	d9800817 	ldw	r6,32(sp)
 402b980:	0180040e 	bge	zero,r6,402b994 <_dtoa_r+0xb18>
 402b984:	800b883a 	mov	r5,r16
 402b988:	e009883a 	mov	r4,fp
 402b98c:	402d7040 	call	402d704 <__lshift>
 402b990:	1021883a 	mov	r16,r2
 402b994:	0580050e 	bge	zero,r22,402b9ac <_dtoa_r+0xb30>
 402b998:	a80b883a 	mov	r5,r21
 402b99c:	b00d883a 	mov	r6,r22
 402b9a0:	e009883a 	mov	r4,fp
 402b9a4:	402d7040 	call	402d704 <__lshift>
 402b9a8:	102b883a 	mov	r21,r2
 402b9ac:	d9c00e17 	ldw	r7,56(sp)
 402b9b0:	3801211e 	bne	r7,zero,402be38 <_dtoa_r+0xfbc>
 402b9b4:	d9800617 	ldw	r6,24(sp)
 402b9b8:	0181380e 	bge	zero,r6,402be9c <_dtoa_r+0x1020>
 402b9bc:	d8c00b17 	ldw	r3,44(sp)
 402b9c0:	1800ab1e 	bne	r3,zero,402bc70 <_dtoa_r+0xdf4>
 402b9c4:	dc800717 	ldw	r18,28(sp)
 402b9c8:	dcc00617 	ldw	r19,24(sp)
 402b9cc:	9029883a 	mov	r20,r18
 402b9d0:	00000206 	br	402b9dc <_dtoa_r+0xb60>
 402b9d4:	402d0540 	call	402d054 <__multadd>
 402b9d8:	1021883a 	mov	r16,r2
 402b9dc:	a80b883a 	mov	r5,r21
 402b9e0:	8009883a 	mov	r4,r16
 402b9e4:	402ac7c0 	call	402ac7c <quorem>
 402b9e8:	10800c04 	addi	r2,r2,48
 402b9ec:	90800005 	stb	r2,0(r18)
 402b9f0:	94800044 	addi	r18,r18,1
 402b9f4:	9507c83a 	sub	r3,r18,r20
 402b9f8:	000f883a 	mov	r7,zero
 402b9fc:	01800284 	movi	r6,10
 402ba00:	800b883a 	mov	r5,r16
 402ba04:	e009883a 	mov	r4,fp
 402ba08:	1cfff216 	blt	r3,r19,402b9d4 <_gp+0xfffea7d4>
 402ba0c:	1011883a 	mov	r8,r2
 402ba10:	d8800617 	ldw	r2,24(sp)
 402ba14:	0082370e 	bge	zero,r2,402c2f4 <_dtoa_r+0x1478>
 402ba18:	d9000717 	ldw	r4,28(sp)
 402ba1c:	0025883a 	mov	r18,zero
 402ba20:	20af883a 	add	r23,r4,r2
 402ba24:	01800044 	movi	r6,1
 402ba28:	800b883a 	mov	r5,r16
 402ba2c:	e009883a 	mov	r4,fp
 402ba30:	da001715 	stw	r8,92(sp)
 402ba34:	402d7040 	call	402d704 <__lshift>
 402ba38:	a80b883a 	mov	r5,r21
 402ba3c:	1009883a 	mov	r4,r2
 402ba40:	d8800915 	stw	r2,36(sp)
 402ba44:	402d84c0 	call	402d84c <__mcmp>
 402ba48:	da001717 	ldw	r8,92(sp)
 402ba4c:	0081800e 	bge	zero,r2,402c050 <_dtoa_r+0x11d4>
 402ba50:	b93fffc3 	ldbu	r4,-1(r23)
 402ba54:	b8bfffc4 	addi	r2,r23,-1
 402ba58:	1007883a 	mov	r3,r2
 402ba5c:	01800e44 	movi	r6,57
 402ba60:	d9c00717 	ldw	r7,28(sp)
 402ba64:	00000506 	br	402ba7c <_dtoa_r+0xc00>
 402ba68:	18ffffc4 	addi	r3,r3,-1
 402ba6c:	11c12326 	beq	r2,r7,402befc <_dtoa_r+0x1080>
 402ba70:	19000003 	ldbu	r4,0(r3)
 402ba74:	102f883a 	mov	r23,r2
 402ba78:	10bfffc4 	addi	r2,r2,-1
 402ba7c:	21403fcc 	andi	r5,r4,255
 402ba80:	2940201c 	xori	r5,r5,128
 402ba84:	297fe004 	addi	r5,r5,-128
 402ba88:	29bff726 	beq	r5,r6,402ba68 <_gp+0xfffea868>
 402ba8c:	21000044 	addi	r4,r4,1
 402ba90:	11000005 	stb	r4,0(r2)
 402ba94:	a80b883a 	mov	r5,r21
 402ba98:	e009883a 	mov	r4,fp
 402ba9c:	402d02c0 	call	402d02c <_Bfree>
 402baa0:	883ea026 	beq	r17,zero,402b524 <_gp+0xfffea324>
 402baa4:	90000426 	beq	r18,zero,402bab8 <_dtoa_r+0xc3c>
 402baa8:	94400326 	beq	r18,r17,402bab8 <_dtoa_r+0xc3c>
 402baac:	900b883a 	mov	r5,r18
 402bab0:	e009883a 	mov	r4,fp
 402bab4:	402d02c0 	call	402d02c <_Bfree>
 402bab8:	880b883a 	mov	r5,r17
 402babc:	e009883a 	mov	r4,fp
 402bac0:	402d02c0 	call	402d02c <_Bfree>
 402bac4:	003e9706 	br	402b524 <_gp+0xfffea324>
 402bac8:	01800044 	movi	r6,1
 402bacc:	d9800e15 	stw	r6,56(sp)
 402bad0:	003d9606 	br	402b12c <_gp+0xfffe9f2c>
 402bad4:	d8800817 	ldw	r2,32(sp)
 402bad8:	d8c00517 	ldw	r3,20(sp)
 402badc:	d8000d15 	stw	zero,52(sp)
 402bae0:	10c5c83a 	sub	r2,r2,r3
 402bae4:	00c9c83a 	sub	r4,zero,r3
 402bae8:	d8800815 	stw	r2,32(sp)
 402baec:	d9000a15 	stw	r4,40(sp)
 402baf0:	003d9706 	br	402b150 <_gp+0xfffe9f50>
 402baf4:	05adc83a 	sub	r22,zero,r22
 402baf8:	dd800815 	stw	r22,32(sp)
 402bafc:	002d883a 	mov	r22,zero
 402bb00:	003d8e06 	br	402b13c <_gp+0xfffe9f3c>
 402bb04:	d9000517 	ldw	r4,20(sp)
 402bb08:	4023d3c0 	call	4023d3c <__floatsidf>
 402bb0c:	100d883a 	mov	r6,r2
 402bb10:	180f883a 	mov	r7,r3
 402bb14:	a009883a 	mov	r4,r20
 402bb18:	880b883a 	mov	r5,r17
 402bb1c:	40333380 	call	4033338 <__eqdf2>
 402bb20:	103d7126 	beq	r2,zero,402b0e8 <_gp+0xfffe9ee8>
 402bb24:	d9c00517 	ldw	r7,20(sp)
 402bb28:	39ffffc4 	addi	r7,r7,-1
 402bb2c:	d9c00515 	stw	r7,20(sp)
 402bb30:	003d6d06 	br	402b0e8 <_gp+0xfffe9ee8>
 402bb34:	dd400a17 	ldw	r21,40(sp)
 402bb38:	dd000817 	ldw	r20,32(sp)
 402bb3c:	0023883a 	mov	r17,zero
 402bb40:	003f4806 	br	402b864 <_gp+0xfffea664>
 402bb44:	10e3c83a 	sub	r17,r2,r3
 402bb48:	9448983a 	sll	r4,r18,r17
 402bb4c:	003d3206 	br	402b018 <_gp+0xfffe9e18>
 402bb50:	d8000e15 	stw	zero,56(sp)
 402bb54:	003d7506 	br	402b12c <_gp+0xfffe9f2c>
 402bb58:	b005883a 	mov	r2,r22
 402bb5c:	003f4506 	br	402b874 <_gp+0xfffea674>
 402bb60:	dc000915 	stw	r16,36(sp)
 402bb64:	d9800a17 	ldw	r6,40(sp)
 402bb68:	d9400917 	ldw	r5,36(sp)
 402bb6c:	e009883a 	mov	r4,fp
 402bb70:	402d5c40 	call	402d5c4 <__pow5mult>
 402bb74:	1021883a 	mov	r16,r2
 402bb78:	003f5a06 	br	402b8e4 <_gp+0xfffea6e4>
 402bb7c:	01c00044 	movi	r7,1
 402bb80:	d9c00b15 	stw	r7,44(sp)
 402bb84:	d8802217 	ldw	r2,136(sp)
 402bb88:	0081280e 	bge	zero,r2,402c02c <_dtoa_r+0x11b0>
 402bb8c:	100d883a 	mov	r6,r2
 402bb90:	1021883a 	mov	r16,r2
 402bb94:	d8800c15 	stw	r2,48(sp)
 402bb98:	d8800615 	stw	r2,24(sp)
 402bb9c:	003d8806 	br	402b1c0 <_gp+0xfffe9fc0>
 402bba0:	d8800617 	ldw	r2,24(sp)
 402bba4:	00be9b16 	blt	zero,r2,402b614 <_gp+0xfffea414>
 402bba8:	10010f1e 	bne	r2,zero,402bfe8 <_dtoa_r+0x116c>
 402bbac:	880b883a 	mov	r5,r17
 402bbb0:	000d883a 	mov	r6,zero
 402bbb4:	01d00534 	movhi	r7,16404
 402bbb8:	8009883a 	mov	r4,r16
 402bbbc:	40236240 	call	4023624 <__muldf3>
 402bbc0:	900d883a 	mov	r6,r18
 402bbc4:	980f883a 	mov	r7,r19
 402bbc8:	1009883a 	mov	r4,r2
 402bbcc:	180b883a 	mov	r5,r3
 402bbd0:	40333c00 	call	40333c0 <__gedf2>
 402bbd4:	002b883a 	mov	r21,zero
 402bbd8:	0023883a 	mov	r17,zero
 402bbdc:	1000bf16 	blt	r2,zero,402bedc <_dtoa_r+0x1060>
 402bbe0:	d9802217 	ldw	r6,136(sp)
 402bbe4:	ddc00717 	ldw	r23,28(sp)
 402bbe8:	018c303a 	nor	r6,zero,r6
 402bbec:	d9800515 	stw	r6,20(sp)
 402bbf0:	a80b883a 	mov	r5,r21
 402bbf4:	e009883a 	mov	r4,fp
 402bbf8:	402d02c0 	call	402d02c <_Bfree>
 402bbfc:	883e4926 	beq	r17,zero,402b524 <_gp+0xfffea324>
 402bc00:	003fad06 	br	402bab8 <_gp+0xfffea8b8>
 402bc04:	d9c01117 	ldw	r7,68(sp)
 402bc08:	3801bc26 	beq	r7,zero,402c2fc <_dtoa_r+0x1480>
 402bc0c:	10810cc4 	addi	r2,r2,1075
 402bc10:	dd400a17 	ldw	r21,40(sp)
 402bc14:	dd000817 	ldw	r20,32(sp)
 402bc18:	003f0a06 	br	402b844 <_gp+0xfffea644>
 402bc1c:	00800704 	movi	r2,28
 402bc20:	d9000817 	ldw	r4,32(sp)
 402bc24:	a0a9883a 	add	r20,r20,r2
 402bc28:	b0ad883a 	add	r22,r22,r2
 402bc2c:	2089883a 	add	r4,r4,r2
 402bc30:	d9000815 	stw	r4,32(sp)
 402bc34:	003f5106 	br	402b97c <_gp+0xfffea77c>
 402bc38:	d8c00317 	ldw	r3,12(sp)
 402bc3c:	b8c1fc0e 	bge	r23,r3,402c430 <_dtoa_r+0x15b4>
 402bc40:	0027883a 	mov	r19,zero
 402bc44:	b805883a 	mov	r2,r23
 402bc48:	003f3e06 	br	402b944 <_gp+0xfffea744>
 402bc4c:	880b883a 	mov	r5,r17
 402bc50:	e009883a 	mov	r4,fp
 402bc54:	000f883a 	mov	r7,zero
 402bc58:	01800284 	movi	r6,10
 402bc5c:	402d0540 	call	402d054 <__multadd>
 402bc60:	d9000c17 	ldw	r4,48(sp)
 402bc64:	1023883a 	mov	r17,r2
 402bc68:	0102040e 	bge	zero,r4,402c47c <_dtoa_r+0x1600>
 402bc6c:	d9000615 	stw	r4,24(sp)
 402bc70:	0500050e 	bge	zero,r20,402bc88 <_dtoa_r+0xe0c>
 402bc74:	880b883a 	mov	r5,r17
 402bc78:	a00d883a 	mov	r6,r20
 402bc7c:	e009883a 	mov	r4,fp
 402bc80:	402d7040 	call	402d704 <__lshift>
 402bc84:	1023883a 	mov	r17,r2
 402bc88:	9801241e 	bne	r19,zero,402c11c <_dtoa_r+0x12a0>
 402bc8c:	8829883a 	mov	r20,r17
 402bc90:	d9000617 	ldw	r4,24(sp)
 402bc94:	dcc00717 	ldw	r19,28(sp)
 402bc98:	9480004c 	andi	r18,r18,1
 402bc9c:	20bfffc4 	addi	r2,r4,-1
 402bca0:	9885883a 	add	r2,r19,r2
 402bca4:	d8800415 	stw	r2,16(sp)
 402bca8:	dc800615 	stw	r18,24(sp)
 402bcac:	a80b883a 	mov	r5,r21
 402bcb0:	8009883a 	mov	r4,r16
 402bcb4:	402ac7c0 	call	402ac7c <quorem>
 402bcb8:	880b883a 	mov	r5,r17
 402bcbc:	8009883a 	mov	r4,r16
 402bcc0:	102f883a 	mov	r23,r2
 402bcc4:	402d84c0 	call	402d84c <__mcmp>
 402bcc8:	a80b883a 	mov	r5,r21
 402bccc:	a00d883a 	mov	r6,r20
 402bcd0:	e009883a 	mov	r4,fp
 402bcd4:	102d883a 	mov	r22,r2
 402bcd8:	402d8ac0 	call	402d8ac <__mdiff>
 402bcdc:	1007883a 	mov	r3,r2
 402bce0:	10800317 	ldw	r2,12(r2)
 402bce4:	bc800c04 	addi	r18,r23,48
 402bce8:	180b883a 	mov	r5,r3
 402bcec:	10004e1e 	bne	r2,zero,402be28 <_dtoa_r+0xfac>
 402bcf0:	8009883a 	mov	r4,r16
 402bcf4:	d8c01615 	stw	r3,88(sp)
 402bcf8:	402d84c0 	call	402d84c <__mcmp>
 402bcfc:	d8c01617 	ldw	r3,88(sp)
 402bd00:	e009883a 	mov	r4,fp
 402bd04:	d8801615 	stw	r2,88(sp)
 402bd08:	180b883a 	mov	r5,r3
 402bd0c:	402d02c0 	call	402d02c <_Bfree>
 402bd10:	d8801617 	ldw	r2,88(sp)
 402bd14:	1000041e 	bne	r2,zero,402bd28 <_dtoa_r+0xeac>
 402bd18:	d9800317 	ldw	r6,12(sp)
 402bd1c:	3000021e 	bne	r6,zero,402bd28 <_dtoa_r+0xeac>
 402bd20:	d8c00617 	ldw	r3,24(sp)
 402bd24:	18003726 	beq	r3,zero,402be04 <_dtoa_r+0xf88>
 402bd28:	b0002016 	blt	r22,zero,402bdac <_dtoa_r+0xf30>
 402bd2c:	b000041e 	bne	r22,zero,402bd40 <_dtoa_r+0xec4>
 402bd30:	d9000317 	ldw	r4,12(sp)
 402bd34:	2000021e 	bne	r4,zero,402bd40 <_dtoa_r+0xec4>
 402bd38:	d8c00617 	ldw	r3,24(sp)
 402bd3c:	18001b26 	beq	r3,zero,402bdac <_dtoa_r+0xf30>
 402bd40:	00810716 	blt	zero,r2,402c160 <_dtoa_r+0x12e4>
 402bd44:	d8c00417 	ldw	r3,16(sp)
 402bd48:	9d800044 	addi	r22,r19,1
 402bd4c:	9c800005 	stb	r18,0(r19)
 402bd50:	b02f883a 	mov	r23,r22
 402bd54:	98c10626 	beq	r19,r3,402c170 <_dtoa_r+0x12f4>
 402bd58:	800b883a 	mov	r5,r16
 402bd5c:	000f883a 	mov	r7,zero
 402bd60:	01800284 	movi	r6,10
 402bd64:	e009883a 	mov	r4,fp
 402bd68:	402d0540 	call	402d054 <__multadd>
 402bd6c:	1021883a 	mov	r16,r2
 402bd70:	000f883a 	mov	r7,zero
 402bd74:	01800284 	movi	r6,10
 402bd78:	880b883a 	mov	r5,r17
 402bd7c:	e009883a 	mov	r4,fp
 402bd80:	8d002526 	beq	r17,r20,402be18 <_dtoa_r+0xf9c>
 402bd84:	402d0540 	call	402d054 <__multadd>
 402bd88:	a00b883a 	mov	r5,r20
 402bd8c:	000f883a 	mov	r7,zero
 402bd90:	01800284 	movi	r6,10
 402bd94:	e009883a 	mov	r4,fp
 402bd98:	1023883a 	mov	r17,r2
 402bd9c:	402d0540 	call	402d054 <__multadd>
 402bda0:	1029883a 	mov	r20,r2
 402bda4:	b027883a 	mov	r19,r22
 402bda8:	003fc006 	br	402bcac <_gp+0xfffeaaac>
 402bdac:	9011883a 	mov	r8,r18
 402bdb0:	00800e0e 	bge	zero,r2,402bdec <_dtoa_r+0xf70>
 402bdb4:	800b883a 	mov	r5,r16
 402bdb8:	01800044 	movi	r6,1
 402bdbc:	e009883a 	mov	r4,fp
 402bdc0:	da001715 	stw	r8,92(sp)
 402bdc4:	402d7040 	call	402d704 <__lshift>
 402bdc8:	a80b883a 	mov	r5,r21
 402bdcc:	1009883a 	mov	r4,r2
 402bdd0:	1021883a 	mov	r16,r2
 402bdd4:	402d84c0 	call	402d84c <__mcmp>
 402bdd8:	da001717 	ldw	r8,92(sp)
 402bddc:	0081960e 	bge	zero,r2,402c438 <_dtoa_r+0x15bc>
 402bde0:	00800e44 	movi	r2,57
 402bde4:	40817026 	beq	r8,r2,402c3a8 <_dtoa_r+0x152c>
 402bde8:	ba000c44 	addi	r8,r23,49
 402bdec:	8825883a 	mov	r18,r17
 402bdf0:	9dc00044 	addi	r23,r19,1
 402bdf4:	9a000005 	stb	r8,0(r19)
 402bdf8:	a023883a 	mov	r17,r20
 402bdfc:	dc000915 	stw	r16,36(sp)
 402be00:	003f2406 	br	402ba94 <_gp+0xfffea894>
 402be04:	00800e44 	movi	r2,57
 402be08:	9011883a 	mov	r8,r18
 402be0c:	90816626 	beq	r18,r2,402c3a8 <_dtoa_r+0x152c>
 402be10:	05bff516 	blt	zero,r22,402bde8 <_gp+0xfffeabe8>
 402be14:	003ff506 	br	402bdec <_gp+0xfffeabec>
 402be18:	402d0540 	call	402d054 <__multadd>
 402be1c:	1023883a 	mov	r17,r2
 402be20:	1029883a 	mov	r20,r2
 402be24:	003fdf06 	br	402bda4 <_gp+0xfffeaba4>
 402be28:	e009883a 	mov	r4,fp
 402be2c:	402d02c0 	call	402d02c <_Bfree>
 402be30:	00800044 	movi	r2,1
 402be34:	003fbc06 	br	402bd28 <_gp+0xfffeab28>
 402be38:	a80b883a 	mov	r5,r21
 402be3c:	8009883a 	mov	r4,r16
 402be40:	402d84c0 	call	402d84c <__mcmp>
 402be44:	103edb0e 	bge	r2,zero,402b9b4 <_gp+0xfffea7b4>
 402be48:	800b883a 	mov	r5,r16
 402be4c:	000f883a 	mov	r7,zero
 402be50:	01800284 	movi	r6,10
 402be54:	e009883a 	mov	r4,fp
 402be58:	402d0540 	call	402d054 <__multadd>
 402be5c:	1021883a 	mov	r16,r2
 402be60:	d8800517 	ldw	r2,20(sp)
 402be64:	d8c00b17 	ldw	r3,44(sp)
 402be68:	10bfffc4 	addi	r2,r2,-1
 402be6c:	d8800515 	stw	r2,20(sp)
 402be70:	183f761e 	bne	r3,zero,402bc4c <_gp+0xfffeaa4c>
 402be74:	d9000c17 	ldw	r4,48(sp)
 402be78:	0101730e 	bge	zero,r4,402c448 <_dtoa_r+0x15cc>
 402be7c:	d9000615 	stw	r4,24(sp)
 402be80:	003ed006 	br	402b9c4 <_gp+0xfffea7c4>
 402be84:	00800084 	movi	r2,2
 402be88:	3081861e 	bne	r6,r2,402c4a4 <_dtoa_r+0x1628>
 402be8c:	d8000b15 	stw	zero,44(sp)
 402be90:	003f3c06 	br	402bb84 <_gp+0xfffea984>
 402be94:	dc000917 	ldw	r16,36(sp)
 402be98:	003e9206 	br	402b8e4 <_gp+0xfffea6e4>
 402be9c:	d9c00317 	ldw	r7,12(sp)
 402bea0:	00800084 	movi	r2,2
 402bea4:	11fec50e 	bge	r2,r7,402b9bc <_gp+0xfffea7bc>
 402bea8:	d9000617 	ldw	r4,24(sp)
 402beac:	20013c1e 	bne	r4,zero,402c3a0 <_dtoa_r+0x1524>
 402beb0:	a80b883a 	mov	r5,r21
 402beb4:	000f883a 	mov	r7,zero
 402beb8:	01800144 	movi	r6,5
 402bebc:	e009883a 	mov	r4,fp
 402bec0:	402d0540 	call	402d054 <__multadd>
 402bec4:	100b883a 	mov	r5,r2
 402bec8:	8009883a 	mov	r4,r16
 402becc:	102b883a 	mov	r21,r2
 402bed0:	402d84c0 	call	402d84c <__mcmp>
 402bed4:	dc000915 	stw	r16,36(sp)
 402bed8:	00bf410e 	bge	zero,r2,402bbe0 <_gp+0xfffea9e0>
 402bedc:	d9c00717 	ldw	r7,28(sp)
 402bee0:	00800c44 	movi	r2,49
 402bee4:	38800005 	stb	r2,0(r7)
 402bee8:	d8800517 	ldw	r2,20(sp)
 402beec:	3dc00044 	addi	r23,r7,1
 402bef0:	10800044 	addi	r2,r2,1
 402bef4:	d8800515 	stw	r2,20(sp)
 402bef8:	003f3d06 	br	402bbf0 <_gp+0xfffea9f0>
 402befc:	d9800517 	ldw	r6,20(sp)
 402bf00:	d9c00717 	ldw	r7,28(sp)
 402bf04:	00800c44 	movi	r2,49
 402bf08:	31800044 	addi	r6,r6,1
 402bf0c:	d9800515 	stw	r6,20(sp)
 402bf10:	38800005 	stb	r2,0(r7)
 402bf14:	003edf06 	br	402ba94 <_gp+0xfffea894>
 402bf18:	d8000b15 	stw	zero,44(sp)
 402bf1c:	003c9f06 	br	402b19c <_gp+0xfffe9f9c>
 402bf20:	903e7e1e 	bne	r18,zero,402b91c <_gp+0xfffea71c>
 402bf24:	00800434 	movhi	r2,16
 402bf28:	10bfffc4 	addi	r2,r2,-1
 402bf2c:	9884703a 	and	r2,r19,r2
 402bf30:	1000ea1e 	bne	r2,zero,402c2dc <_dtoa_r+0x1460>
 402bf34:	9cdffc2c 	andhi	r19,r19,32752
 402bf38:	9800e826 	beq	r19,zero,402c2dc <_dtoa_r+0x1460>
 402bf3c:	d9c00817 	ldw	r7,32(sp)
 402bf40:	b5800044 	addi	r22,r22,1
 402bf44:	04c00044 	movi	r19,1
 402bf48:	39c00044 	addi	r7,r7,1
 402bf4c:	d9c00815 	stw	r7,32(sp)
 402bf50:	d8800d17 	ldw	r2,52(sp)
 402bf54:	103e721e 	bne	r2,zero,402b920 <_gp+0xfffea720>
 402bf58:	00800044 	movi	r2,1
 402bf5c:	003e7906 	br	402b944 <_gp+0xfffea744>
 402bf60:	8009883a 	mov	r4,r16
 402bf64:	4023d3c0 	call	4023d3c <__floatsidf>
 402bf68:	d9800f17 	ldw	r6,60(sp)
 402bf6c:	d9c01017 	ldw	r7,64(sp)
 402bf70:	1009883a 	mov	r4,r2
 402bf74:	180b883a 	mov	r5,r3
 402bf78:	40236240 	call	4023624 <__muldf3>
 402bf7c:	000d883a 	mov	r6,zero
 402bf80:	01d00734 	movhi	r7,16412
 402bf84:	1009883a 	mov	r4,r2
 402bf88:	180b883a 	mov	r5,r3
 402bf8c:	40321a40 	call	40321a4 <__adddf3>
 402bf90:	047f3034 	movhi	r17,64704
 402bf94:	1021883a 	mov	r16,r2
 402bf98:	1c63883a 	add	r17,r3,r17
 402bf9c:	d9000f17 	ldw	r4,60(sp)
 402bfa0:	d9401017 	ldw	r5,64(sp)
 402bfa4:	000d883a 	mov	r6,zero
 402bfa8:	01d00534 	movhi	r7,16404
 402bfac:	40335900 	call	4033590 <__subdf3>
 402bfb0:	800d883a 	mov	r6,r16
 402bfb4:	880f883a 	mov	r7,r17
 402bfb8:	1009883a 	mov	r4,r2
 402bfbc:	180b883a 	mov	r5,r3
 402bfc0:	102b883a 	mov	r21,r2
 402bfc4:	1829883a 	mov	r20,r3
 402bfc8:	40333c00 	call	40333c0 <__gedf2>
 402bfcc:	00806c16 	blt	zero,r2,402c180 <_dtoa_r+0x1304>
 402bfd0:	89e0003c 	xorhi	r7,r17,32768
 402bfd4:	800d883a 	mov	r6,r16
 402bfd8:	a809883a 	mov	r4,r21
 402bfdc:	a00b883a 	mov	r5,r20
 402bfe0:	403349c0 	call	403349c <__ledf2>
 402bfe4:	103d7e0e 	bge	r2,zero,402b5e0 <_gp+0xfffea3e0>
 402bfe8:	002b883a 	mov	r21,zero
 402bfec:	0023883a 	mov	r17,zero
 402bff0:	003efb06 	br	402bbe0 <_gp+0xfffea9e0>
 402bff4:	d8800717 	ldw	r2,28(sp)
 402bff8:	003bd006 	br	402af3c <_gp+0xfffe9d3c>
 402bffc:	d9000a17 	ldw	r4,40(sp)
 402c000:	d9800d17 	ldw	r6,52(sp)
 402c004:	dd400a15 	stw	r21,40(sp)
 402c008:	a905c83a 	sub	r2,r21,r4
 402c00c:	308d883a 	add	r6,r6,r2
 402c010:	d9800d15 	stw	r6,52(sp)
 402c014:	002b883a 	mov	r21,zero
 402c018:	003e0606 	br	402b834 <_gp+0xfffea634>
 402c01c:	9023883a 	mov	r17,r18
 402c020:	9829883a 	mov	r20,r19
 402c024:	04000084 	movi	r16,2
 402c028:	003c9206 	br	402b274 <_gp+0xfffea074>
 402c02c:	04000044 	movi	r16,1
 402c030:	dc000c15 	stw	r16,48(sp)
 402c034:	dc000615 	stw	r16,24(sp)
 402c038:	dc002215 	stw	r16,136(sp)
 402c03c:	e0001115 	stw	zero,68(fp)
 402c040:	000b883a 	mov	r5,zero
 402c044:	003c6906 	br	402b1ec <_gp+0xfffe9fec>
 402c048:	3021883a 	mov	r16,r6
 402c04c:	003ffb06 	br	402c03c <_gp+0xfffeae3c>
 402c050:	1000021e 	bne	r2,zero,402c05c <_dtoa_r+0x11e0>
 402c054:	4200004c 	andi	r8,r8,1
 402c058:	403e7d1e 	bne	r8,zero,402ba50 <_gp+0xfffea850>
 402c05c:	01000c04 	movi	r4,48
 402c060:	00000106 	br	402c068 <_dtoa_r+0x11ec>
 402c064:	102f883a 	mov	r23,r2
 402c068:	b8bfffc4 	addi	r2,r23,-1
 402c06c:	10c00007 	ldb	r3,0(r2)
 402c070:	193ffc26 	beq	r3,r4,402c064 <_gp+0xfffeae64>
 402c074:	003e8706 	br	402ba94 <_gp+0xfffea894>
 402c078:	d8800517 	ldw	r2,20(sp)
 402c07c:	00a3c83a 	sub	r17,zero,r2
 402c080:	8800a426 	beq	r17,zero,402c314 <_dtoa_r+0x1498>
 402c084:	888003cc 	andi	r2,r17,15
 402c088:	100490fa 	slli	r2,r2,3
 402c08c:	00c100f4 	movhi	r3,1027
 402c090:	18dd4804 	addi	r3,r3,29984
 402c094:	1885883a 	add	r2,r3,r2
 402c098:	11800017 	ldw	r6,0(r2)
 402c09c:	11c00117 	ldw	r7,4(r2)
 402c0a0:	9009883a 	mov	r4,r18
 402c0a4:	980b883a 	mov	r5,r19
 402c0a8:	8823d13a 	srai	r17,r17,4
 402c0ac:	40236240 	call	4023624 <__muldf3>
 402c0b0:	d8800f15 	stw	r2,60(sp)
 402c0b4:	d8c01015 	stw	r3,64(sp)
 402c0b8:	8800e826 	beq	r17,zero,402c45c <_dtoa_r+0x15e0>
 402c0bc:	050100f4 	movhi	r20,1027
 402c0c0:	a51d3e04 	addi	r20,r20,29944
 402c0c4:	04000084 	movi	r16,2
 402c0c8:	8980004c 	andi	r6,r17,1
 402c0cc:	1009883a 	mov	r4,r2
 402c0d0:	8823d07a 	srai	r17,r17,1
 402c0d4:	180b883a 	mov	r5,r3
 402c0d8:	30000426 	beq	r6,zero,402c0ec <_dtoa_r+0x1270>
 402c0dc:	a1800017 	ldw	r6,0(r20)
 402c0e0:	a1c00117 	ldw	r7,4(r20)
 402c0e4:	84000044 	addi	r16,r16,1
 402c0e8:	40236240 	call	4023624 <__muldf3>
 402c0ec:	a5000204 	addi	r20,r20,8
 402c0f0:	883ff51e 	bne	r17,zero,402c0c8 <_gp+0xfffeaec8>
 402c0f4:	d8800f15 	stw	r2,60(sp)
 402c0f8:	d8c01015 	stw	r3,64(sp)
 402c0fc:	003c7606 	br	402b2d8 <_gp+0xfffea0d8>
 402c100:	00c00c04 	movi	r3,48
 402c104:	10c00005 	stb	r3,0(r2)
 402c108:	d8c00517 	ldw	r3,20(sp)
 402c10c:	bd3fffc3 	ldbu	r20,-1(r23)
 402c110:	18c00044 	addi	r3,r3,1
 402c114:	d8c00515 	stw	r3,20(sp)
 402c118:	003db906 	br	402b800 <_gp+0xfffea600>
 402c11c:	89400117 	ldw	r5,4(r17)
 402c120:	e009883a 	mov	r4,fp
 402c124:	402cf840 	call	402cf84 <_Balloc>
 402c128:	89800417 	ldw	r6,16(r17)
 402c12c:	89400304 	addi	r5,r17,12
 402c130:	11000304 	addi	r4,r2,12
 402c134:	31800084 	addi	r6,r6,2
 402c138:	318d883a 	add	r6,r6,r6
 402c13c:	318d883a 	add	r6,r6,r6
 402c140:	1027883a 	mov	r19,r2
 402c144:	402cce00 	call	402cce0 <memcpy>
 402c148:	01800044 	movi	r6,1
 402c14c:	980b883a 	mov	r5,r19
 402c150:	e009883a 	mov	r4,fp
 402c154:	402d7040 	call	402d704 <__lshift>
 402c158:	1029883a 	mov	r20,r2
 402c15c:	003ecc06 	br	402bc90 <_gp+0xfffeaa90>
 402c160:	00800e44 	movi	r2,57
 402c164:	90809026 	beq	r18,r2,402c3a8 <_dtoa_r+0x152c>
 402c168:	92000044 	addi	r8,r18,1
 402c16c:	003f1f06 	br	402bdec <_gp+0xfffeabec>
 402c170:	9011883a 	mov	r8,r18
 402c174:	8825883a 	mov	r18,r17
 402c178:	a023883a 	mov	r17,r20
 402c17c:	003e2906 	br	402ba24 <_gp+0xfffea824>
 402c180:	002b883a 	mov	r21,zero
 402c184:	0023883a 	mov	r17,zero
 402c188:	003f5406 	br	402bedc <_gp+0xfffeacdc>
 402c18c:	61bfffc4 	addi	r6,r12,-1
 402c190:	300490fa 	slli	r2,r6,3
 402c194:	00c100f4 	movhi	r3,1027
 402c198:	18dd4804 	addi	r3,r3,29984
 402c19c:	1885883a 	add	r2,r3,r2
 402c1a0:	11000017 	ldw	r4,0(r2)
 402c1a4:	11400117 	ldw	r5,4(r2)
 402c1a8:	d8800717 	ldw	r2,28(sp)
 402c1ac:	880f883a 	mov	r7,r17
 402c1b0:	d9801215 	stw	r6,72(sp)
 402c1b4:	800d883a 	mov	r6,r16
 402c1b8:	db001615 	stw	r12,88(sp)
 402c1bc:	15c00044 	addi	r23,r2,1
 402c1c0:	40236240 	call	4023624 <__muldf3>
 402c1c4:	d9401017 	ldw	r5,64(sp)
 402c1c8:	d9000f17 	ldw	r4,60(sp)
 402c1cc:	d8c01515 	stw	r3,84(sp)
 402c1d0:	d8801415 	stw	r2,80(sp)
 402c1d4:	4033e8c0 	call	4033e8c <__fixdfsi>
 402c1d8:	1009883a 	mov	r4,r2
 402c1dc:	1021883a 	mov	r16,r2
 402c1e0:	4023d3c0 	call	4023d3c <__floatsidf>
 402c1e4:	d9000f17 	ldw	r4,60(sp)
 402c1e8:	d9401017 	ldw	r5,64(sp)
 402c1ec:	100d883a 	mov	r6,r2
 402c1f0:	180f883a 	mov	r7,r3
 402c1f4:	40335900 	call	4033590 <__subdf3>
 402c1f8:	1829883a 	mov	r20,r3
 402c1fc:	d8c00717 	ldw	r3,28(sp)
 402c200:	84000c04 	addi	r16,r16,48
 402c204:	1023883a 	mov	r17,r2
 402c208:	1c000005 	stb	r16,0(r3)
 402c20c:	db001617 	ldw	r12,88(sp)
 402c210:	00800044 	movi	r2,1
 402c214:	60802226 	beq	r12,r2,402c2a0 <_dtoa_r+0x1424>
 402c218:	d9c00717 	ldw	r7,28(sp)
 402c21c:	8805883a 	mov	r2,r17
 402c220:	b82b883a 	mov	r21,r23
 402c224:	3b19883a 	add	r12,r7,r12
 402c228:	6023883a 	mov	r17,r12
 402c22c:	a007883a 	mov	r3,r20
 402c230:	dc800f15 	stw	r18,60(sp)
 402c234:	000d883a 	mov	r6,zero
 402c238:	01d00934 	movhi	r7,16420
 402c23c:	1009883a 	mov	r4,r2
 402c240:	180b883a 	mov	r5,r3
 402c244:	40236240 	call	4023624 <__muldf3>
 402c248:	180b883a 	mov	r5,r3
 402c24c:	1009883a 	mov	r4,r2
 402c250:	1829883a 	mov	r20,r3
 402c254:	1025883a 	mov	r18,r2
 402c258:	4033e8c0 	call	4033e8c <__fixdfsi>
 402c25c:	1009883a 	mov	r4,r2
 402c260:	1021883a 	mov	r16,r2
 402c264:	4023d3c0 	call	4023d3c <__floatsidf>
 402c268:	100d883a 	mov	r6,r2
 402c26c:	180f883a 	mov	r7,r3
 402c270:	9009883a 	mov	r4,r18
 402c274:	a00b883a 	mov	r5,r20
 402c278:	84000c04 	addi	r16,r16,48
 402c27c:	40335900 	call	4033590 <__subdf3>
 402c280:	ad400044 	addi	r21,r21,1
 402c284:	ac3fffc5 	stb	r16,-1(r21)
 402c288:	ac7fea1e 	bne	r21,r17,402c234 <_gp+0xfffeb034>
 402c28c:	1023883a 	mov	r17,r2
 402c290:	d8801217 	ldw	r2,72(sp)
 402c294:	dc800f17 	ldw	r18,60(sp)
 402c298:	1829883a 	mov	r20,r3
 402c29c:	b8af883a 	add	r23,r23,r2
 402c2a0:	d9001417 	ldw	r4,80(sp)
 402c2a4:	d9401517 	ldw	r5,84(sp)
 402c2a8:	000d883a 	mov	r6,zero
 402c2ac:	01cff834 	movhi	r7,16352
 402c2b0:	40321a40 	call	40321a4 <__adddf3>
 402c2b4:	880d883a 	mov	r6,r17
 402c2b8:	a00f883a 	mov	r7,r20
 402c2bc:	1009883a 	mov	r4,r2
 402c2c0:	180b883a 	mov	r5,r3
 402c2c4:	403349c0 	call	403349c <__ledf2>
 402c2c8:	10003e0e 	bge	r2,zero,402c3c4 <_dtoa_r+0x1548>
 402c2cc:	d9001317 	ldw	r4,76(sp)
 402c2d0:	bd3fffc3 	ldbu	r20,-1(r23)
 402c2d4:	d9000515 	stw	r4,20(sp)
 402c2d8:	003d3b06 	br	402b7c8 <_gp+0xfffea5c8>
 402c2dc:	0027883a 	mov	r19,zero
 402c2e0:	003f1b06 	br	402bf50 <_gp+0xfffead50>
 402c2e4:	d8800817 	ldw	r2,32(sp)
 402c2e8:	11e9c83a 	sub	r20,r2,r7
 402c2ec:	0005883a 	mov	r2,zero
 402c2f0:	003d5406 	br	402b844 <_gp+0xfffea644>
 402c2f4:	00800044 	movi	r2,1
 402c2f8:	003dc706 	br	402ba18 <_gp+0xfffea818>
 402c2fc:	d8c00217 	ldw	r3,8(sp)
 402c300:	00800d84 	movi	r2,54
 402c304:	dd400a17 	ldw	r21,40(sp)
 402c308:	10c5c83a 	sub	r2,r2,r3
 402c30c:	dd000817 	ldw	r20,32(sp)
 402c310:	003d4c06 	br	402b844 <_gp+0xfffea644>
 402c314:	dc800f15 	stw	r18,60(sp)
 402c318:	dcc01015 	stw	r19,64(sp)
 402c31c:	04000084 	movi	r16,2
 402c320:	003bed06 	br	402b2d8 <_gp+0xfffea0d8>
 402c324:	d9000617 	ldw	r4,24(sp)
 402c328:	203f0d26 	beq	r4,zero,402bf60 <_gp+0xfffead60>
 402c32c:	d9800c17 	ldw	r6,48(sp)
 402c330:	01bcab0e 	bge	zero,r6,402b5e0 <_gp+0xfffea3e0>
 402c334:	d9401017 	ldw	r5,64(sp)
 402c338:	d9000f17 	ldw	r4,60(sp)
 402c33c:	000d883a 	mov	r6,zero
 402c340:	01d00934 	movhi	r7,16420
 402c344:	40236240 	call	4023624 <__muldf3>
 402c348:	81000044 	addi	r4,r16,1
 402c34c:	d8800f15 	stw	r2,60(sp)
 402c350:	d8c01015 	stw	r3,64(sp)
 402c354:	4023d3c0 	call	4023d3c <__floatsidf>
 402c358:	d9800f17 	ldw	r6,60(sp)
 402c35c:	d9c01017 	ldw	r7,64(sp)
 402c360:	1009883a 	mov	r4,r2
 402c364:	180b883a 	mov	r5,r3
 402c368:	40236240 	call	4023624 <__muldf3>
 402c36c:	01d00734 	movhi	r7,16412
 402c370:	000d883a 	mov	r6,zero
 402c374:	1009883a 	mov	r4,r2
 402c378:	180b883a 	mov	r5,r3
 402c37c:	40321a40 	call	40321a4 <__adddf3>
 402c380:	d9c00517 	ldw	r7,20(sp)
 402c384:	047f3034 	movhi	r17,64704
 402c388:	1021883a 	mov	r16,r2
 402c38c:	39ffffc4 	addi	r7,r7,-1
 402c390:	d9c01315 	stw	r7,76(sp)
 402c394:	1c63883a 	add	r17,r3,r17
 402c398:	db000c17 	ldw	r12,48(sp)
 402c39c:	003bea06 	br	402b348 <_gp+0xfffea148>
 402c3a0:	dc000915 	stw	r16,36(sp)
 402c3a4:	003e0e06 	br	402bbe0 <_gp+0xfffea9e0>
 402c3a8:	01000e44 	movi	r4,57
 402c3ac:	8825883a 	mov	r18,r17
 402c3b0:	9dc00044 	addi	r23,r19,1
 402c3b4:	99000005 	stb	r4,0(r19)
 402c3b8:	a023883a 	mov	r17,r20
 402c3bc:	dc000915 	stw	r16,36(sp)
 402c3c0:	003da406 	br	402ba54 <_gp+0xfffea854>
 402c3c4:	d9801417 	ldw	r6,80(sp)
 402c3c8:	d9c01517 	ldw	r7,84(sp)
 402c3cc:	0009883a 	mov	r4,zero
 402c3d0:	014ff834 	movhi	r5,16352
 402c3d4:	40335900 	call	4033590 <__subdf3>
 402c3d8:	880d883a 	mov	r6,r17
 402c3dc:	a00f883a 	mov	r7,r20
 402c3e0:	1009883a 	mov	r4,r2
 402c3e4:	180b883a 	mov	r5,r3
 402c3e8:	40333c00 	call	40333c0 <__gedf2>
 402c3ec:	00bc7c0e 	bge	zero,r2,402b5e0 <_gp+0xfffea3e0>
 402c3f0:	01000c04 	movi	r4,48
 402c3f4:	00000106 	br	402c3fc <_dtoa_r+0x1580>
 402c3f8:	102f883a 	mov	r23,r2
 402c3fc:	b8bfffc4 	addi	r2,r23,-1
 402c400:	10c00007 	ldb	r3,0(r2)
 402c404:	193ffc26 	beq	r3,r4,402c3f8 <_gp+0xfffeb1f8>
 402c408:	d9801317 	ldw	r6,76(sp)
 402c40c:	d9800515 	stw	r6,20(sp)
 402c410:	003c4406 	br	402b524 <_gp+0xfffea324>
 402c414:	d9801317 	ldw	r6,76(sp)
 402c418:	d9800515 	stw	r6,20(sp)
 402c41c:	003cea06 	br	402b7c8 <_gp+0xfffea5c8>
 402c420:	dd800f17 	ldw	r22,60(sp)
 402c424:	dcc01017 	ldw	r19,64(sp)
 402c428:	dc801217 	ldw	r18,72(sp)
 402c42c:	003c6c06 	br	402b5e0 <_gp+0xfffea3e0>
 402c430:	903e031e 	bne	r18,zero,402bc40 <_gp+0xfffeaa40>
 402c434:	003ebb06 	br	402bf24 <_gp+0xfffead24>
 402c438:	103e6c1e 	bne	r2,zero,402bdec <_gp+0xfffeabec>
 402c43c:	4080004c 	andi	r2,r8,1
 402c440:	103e6a26 	beq	r2,zero,402bdec <_gp+0xfffeabec>
 402c444:	003e6606 	br	402bde0 <_gp+0xfffeabe0>
 402c448:	d8c00317 	ldw	r3,12(sp)
 402c44c:	00800084 	movi	r2,2
 402c450:	10c02916 	blt	r2,r3,402c4f8 <_dtoa_r+0x167c>
 402c454:	d9000c17 	ldw	r4,48(sp)
 402c458:	003e8806 	br	402be7c <_gp+0xfffeac7c>
 402c45c:	04000084 	movi	r16,2
 402c460:	003b9d06 	br	402b2d8 <_gp+0xfffea0d8>
 402c464:	d9001317 	ldw	r4,76(sp)
 402c468:	d9000515 	stw	r4,20(sp)
 402c46c:	003cd606 	br	402b7c8 <_gp+0xfffea5c8>
 402c470:	d8801317 	ldw	r2,76(sp)
 402c474:	d8800515 	stw	r2,20(sp)
 402c478:	003c2a06 	br	402b524 <_gp+0xfffea324>
 402c47c:	d9800317 	ldw	r6,12(sp)
 402c480:	00800084 	movi	r2,2
 402c484:	11801516 	blt	r2,r6,402c4dc <_dtoa_r+0x1660>
 402c488:	d9c00c17 	ldw	r7,48(sp)
 402c48c:	d9c00615 	stw	r7,24(sp)
 402c490:	003df706 	br	402bc70 <_gp+0xfffeaa70>
 402c494:	193d3926 	beq	r3,r4,402b97c <_gp+0xfffea77c>
 402c498:	00c00f04 	movi	r3,60
 402c49c:	1885c83a 	sub	r2,r3,r2
 402c4a0:	003ddf06 	br	402bc20 <_gp+0xfffeaa20>
 402c4a4:	e009883a 	mov	r4,fp
 402c4a8:	e0001115 	stw	zero,68(fp)
 402c4ac:	000b883a 	mov	r5,zero
 402c4b0:	402cf840 	call	402cf84 <_Balloc>
 402c4b4:	d8800715 	stw	r2,28(sp)
 402c4b8:	d8c00717 	ldw	r3,28(sp)
 402c4bc:	00bfffc4 	movi	r2,-1
 402c4c0:	01000044 	movi	r4,1
 402c4c4:	d8800c15 	stw	r2,48(sp)
 402c4c8:	e0c01015 	stw	r3,64(fp)
 402c4cc:	d9000b15 	stw	r4,44(sp)
 402c4d0:	d8800615 	stw	r2,24(sp)
 402c4d4:	d8002215 	stw	zero,136(sp)
 402c4d8:	003c4106 	br	402b5e0 <_gp+0xfffea3e0>
 402c4dc:	d8c00c17 	ldw	r3,48(sp)
 402c4e0:	d8c00615 	stw	r3,24(sp)
 402c4e4:	003e7006 	br	402bea8 <_gp+0xfffeaca8>
 402c4e8:	04400044 	movi	r17,1
 402c4ec:	003b2006 	br	402b170 <_gp+0xfffe9f70>
 402c4f0:	000b883a 	mov	r5,zero
 402c4f4:	003b3d06 	br	402b1ec <_gp+0xfffe9fec>
 402c4f8:	d8800c17 	ldw	r2,48(sp)
 402c4fc:	d8800615 	stw	r2,24(sp)
 402c500:	003e6906 	br	402bea8 <_gp+0xfffeaca8>

0402c504 <__sflags>:
 402c504:	28800007 	ldb	r2,0(r5)
 402c508:	00c01c84 	movi	r3,114
 402c50c:	10c02426 	beq	r2,r3,402c5a0 <__sflags+0x9c>
 402c510:	00c01dc4 	movi	r3,119
 402c514:	10c01e26 	beq	r2,r3,402c590 <__sflags+0x8c>
 402c518:	00c01844 	movi	r3,97
 402c51c:	10c00426 	beq	r2,r3,402c530 <__sflags+0x2c>
 402c520:	00800584 	movi	r2,22
 402c524:	20800015 	stw	r2,0(r4)
 402c528:	0005883a 	mov	r2,zero
 402c52c:	f800283a 	ret
 402c530:	02c08204 	movi	r11,520
 402c534:	01000044 	movi	r4,1
 402c538:	00804204 	movi	r2,264
 402c53c:	01c00ac4 	movi	r7,43
 402c540:	02bff8c4 	movi	r10,-29
 402c544:	027fff04 	movi	r9,-4
 402c548:	02001e04 	movi	r8,120
 402c54c:	29400044 	addi	r5,r5,1
 402c550:	28c00007 	ldb	r3,0(r5)
 402c554:	18000626 	beq	r3,zero,402c570 <__sflags+0x6c>
 402c558:	19c00826 	beq	r3,r7,402c57c <__sflags+0x78>
 402c55c:	1a3ffb1e 	bne	r3,r8,402c54c <_gp+0xfffeb34c>
 402c560:	29400044 	addi	r5,r5,1
 402c564:	28c00007 	ldb	r3,0(r5)
 402c568:	21020014 	ori	r4,r4,2048
 402c56c:	183ffa1e 	bne	r3,zero,402c558 <_gp+0xfffeb358>
 402c570:	22c8b03a 	or	r4,r4,r11
 402c574:	31000015 	stw	r4,0(r6)
 402c578:	f800283a 	ret
 402c57c:	1284703a 	and	r2,r2,r10
 402c580:	2248703a 	and	r4,r4,r9
 402c584:	10800414 	ori	r2,r2,16
 402c588:	21000094 	ori	r4,r4,2
 402c58c:	003fef06 	br	402c54c <_gp+0xfffeb34c>
 402c590:	02c18004 	movi	r11,1536
 402c594:	01000044 	movi	r4,1
 402c598:	00800204 	movi	r2,8
 402c59c:	003fe706 	br	402c53c <_gp+0xfffeb33c>
 402c5a0:	0017883a 	mov	r11,zero
 402c5a4:	0009883a 	mov	r4,zero
 402c5a8:	00800104 	movi	r2,4
 402c5ac:	003fe306 	br	402c53c <_gp+0xfffeb33c>

0402c5b0 <__sfvwrite_r>:
 402c5b0:	30800217 	ldw	r2,8(r6)
 402c5b4:	10006726 	beq	r2,zero,402c754 <__sfvwrite_r+0x1a4>
 402c5b8:	28c0030b 	ldhu	r3,12(r5)
 402c5bc:	defff404 	addi	sp,sp,-48
 402c5c0:	dd400715 	stw	r21,28(sp)
 402c5c4:	dd000615 	stw	r20,24(sp)
 402c5c8:	dc000215 	stw	r16,8(sp)
 402c5cc:	dfc00b15 	stw	ra,44(sp)
 402c5d0:	df000a15 	stw	fp,40(sp)
 402c5d4:	ddc00915 	stw	r23,36(sp)
 402c5d8:	dd800815 	stw	r22,32(sp)
 402c5dc:	dcc00515 	stw	r19,20(sp)
 402c5e0:	dc800415 	stw	r18,16(sp)
 402c5e4:	dc400315 	stw	r17,12(sp)
 402c5e8:	1880020c 	andi	r2,r3,8
 402c5ec:	2821883a 	mov	r16,r5
 402c5f0:	202b883a 	mov	r21,r4
 402c5f4:	3029883a 	mov	r20,r6
 402c5f8:	10002726 	beq	r2,zero,402c698 <__sfvwrite_r+0xe8>
 402c5fc:	28800417 	ldw	r2,16(r5)
 402c600:	10002526 	beq	r2,zero,402c698 <__sfvwrite_r+0xe8>
 402c604:	1880008c 	andi	r2,r3,2
 402c608:	a4400017 	ldw	r17,0(r20)
 402c60c:	10002a26 	beq	r2,zero,402c6b8 <__sfvwrite_r+0x108>
 402c610:	05a00034 	movhi	r22,32768
 402c614:	0027883a 	mov	r19,zero
 402c618:	0025883a 	mov	r18,zero
 402c61c:	b5bf0004 	addi	r22,r22,-1024
 402c620:	980d883a 	mov	r6,r19
 402c624:	a809883a 	mov	r4,r21
 402c628:	90004626 	beq	r18,zero,402c744 <__sfvwrite_r+0x194>
 402c62c:	900f883a 	mov	r7,r18
 402c630:	b480022e 	bgeu	r22,r18,402c63c <__sfvwrite_r+0x8c>
 402c634:	01e00034 	movhi	r7,32768
 402c638:	39ff0004 	addi	r7,r7,-1024
 402c63c:	80800917 	ldw	r2,36(r16)
 402c640:	81400717 	ldw	r5,28(r16)
 402c644:	103ee83a 	callr	r2
 402c648:	0080570e 	bge	zero,r2,402c7a8 <__sfvwrite_r+0x1f8>
 402c64c:	a0c00217 	ldw	r3,8(r20)
 402c650:	98a7883a 	add	r19,r19,r2
 402c654:	90a5c83a 	sub	r18,r18,r2
 402c658:	1885c83a 	sub	r2,r3,r2
 402c65c:	a0800215 	stw	r2,8(r20)
 402c660:	103fef1e 	bne	r2,zero,402c620 <_gp+0xfffeb420>
 402c664:	0005883a 	mov	r2,zero
 402c668:	dfc00b17 	ldw	ra,44(sp)
 402c66c:	df000a17 	ldw	fp,40(sp)
 402c670:	ddc00917 	ldw	r23,36(sp)
 402c674:	dd800817 	ldw	r22,32(sp)
 402c678:	dd400717 	ldw	r21,28(sp)
 402c67c:	dd000617 	ldw	r20,24(sp)
 402c680:	dcc00517 	ldw	r19,20(sp)
 402c684:	dc800417 	ldw	r18,16(sp)
 402c688:	dc400317 	ldw	r17,12(sp)
 402c68c:	dc000217 	ldw	r16,8(sp)
 402c690:	dec00c04 	addi	sp,sp,48
 402c694:	f800283a 	ret
 402c698:	800b883a 	mov	r5,r16
 402c69c:	a809883a 	mov	r4,r21
 402c6a0:	402aad40 	call	402aad4 <__swsetup_r>
 402c6a4:	1000eb1e 	bne	r2,zero,402ca54 <__sfvwrite_r+0x4a4>
 402c6a8:	80c0030b 	ldhu	r3,12(r16)
 402c6ac:	a4400017 	ldw	r17,0(r20)
 402c6b0:	1880008c 	andi	r2,r3,2
 402c6b4:	103fd61e 	bne	r2,zero,402c610 <_gp+0xfffeb410>
 402c6b8:	1880004c 	andi	r2,r3,1
 402c6bc:	10003f1e 	bne	r2,zero,402c7bc <__sfvwrite_r+0x20c>
 402c6c0:	0039883a 	mov	fp,zero
 402c6c4:	0025883a 	mov	r18,zero
 402c6c8:	90001a26 	beq	r18,zero,402c734 <__sfvwrite_r+0x184>
 402c6cc:	1880800c 	andi	r2,r3,512
 402c6d0:	84c00217 	ldw	r19,8(r16)
 402c6d4:	10002126 	beq	r2,zero,402c75c <__sfvwrite_r+0x1ac>
 402c6d8:	982f883a 	mov	r23,r19
 402c6dc:	94c09336 	bltu	r18,r19,402c92c <__sfvwrite_r+0x37c>
 402c6e0:	1881200c 	andi	r2,r3,1152
 402c6e4:	10009e1e 	bne	r2,zero,402c960 <__sfvwrite_r+0x3b0>
 402c6e8:	81000017 	ldw	r4,0(r16)
 402c6ec:	b80d883a 	mov	r6,r23
 402c6f0:	e00b883a 	mov	r5,fp
 402c6f4:	402ce280 	call	402ce28 <memmove>
 402c6f8:	80c00217 	ldw	r3,8(r16)
 402c6fc:	81000017 	ldw	r4,0(r16)
 402c700:	9005883a 	mov	r2,r18
 402c704:	1ce7c83a 	sub	r19,r3,r19
 402c708:	25cf883a 	add	r7,r4,r23
 402c70c:	84c00215 	stw	r19,8(r16)
 402c710:	81c00015 	stw	r7,0(r16)
 402c714:	a0c00217 	ldw	r3,8(r20)
 402c718:	e0b9883a 	add	fp,fp,r2
 402c71c:	90a5c83a 	sub	r18,r18,r2
 402c720:	18a7c83a 	sub	r19,r3,r2
 402c724:	a4c00215 	stw	r19,8(r20)
 402c728:	983fce26 	beq	r19,zero,402c664 <_gp+0xfffeb464>
 402c72c:	80c0030b 	ldhu	r3,12(r16)
 402c730:	903fe61e 	bne	r18,zero,402c6cc <_gp+0xfffeb4cc>
 402c734:	8f000017 	ldw	fp,0(r17)
 402c738:	8c800117 	ldw	r18,4(r17)
 402c73c:	8c400204 	addi	r17,r17,8
 402c740:	003fe106 	br	402c6c8 <_gp+0xfffeb4c8>
 402c744:	8cc00017 	ldw	r19,0(r17)
 402c748:	8c800117 	ldw	r18,4(r17)
 402c74c:	8c400204 	addi	r17,r17,8
 402c750:	003fb306 	br	402c620 <_gp+0xfffeb420>
 402c754:	0005883a 	mov	r2,zero
 402c758:	f800283a 	ret
 402c75c:	81000017 	ldw	r4,0(r16)
 402c760:	80800417 	ldw	r2,16(r16)
 402c764:	11005736 	bltu	r2,r4,402c8c4 <__sfvwrite_r+0x314>
 402c768:	85c00517 	ldw	r23,20(r16)
 402c76c:	95c05536 	bltu	r18,r23,402c8c4 <__sfvwrite_r+0x314>
 402c770:	00a00034 	movhi	r2,32768
 402c774:	10bfffc4 	addi	r2,r2,-1
 402c778:	9009883a 	mov	r4,r18
 402c77c:	1480012e 	bgeu	r2,r18,402c784 <__sfvwrite_r+0x1d4>
 402c780:	1009883a 	mov	r4,r2
 402c784:	b80b883a 	mov	r5,r23
 402c788:	40228740 	call	4022874 <__divsi3>
 402c78c:	15cf383a 	mul	r7,r2,r23
 402c790:	81400717 	ldw	r5,28(r16)
 402c794:	80800917 	ldw	r2,36(r16)
 402c798:	e00d883a 	mov	r6,fp
 402c79c:	a809883a 	mov	r4,r21
 402c7a0:	103ee83a 	callr	r2
 402c7a4:	00bfdb16 	blt	zero,r2,402c714 <_gp+0xfffeb514>
 402c7a8:	8080030b 	ldhu	r2,12(r16)
 402c7ac:	10801014 	ori	r2,r2,64
 402c7b0:	8080030d 	sth	r2,12(r16)
 402c7b4:	00bfffc4 	movi	r2,-1
 402c7b8:	003fab06 	br	402c668 <_gp+0xfffeb468>
 402c7bc:	0027883a 	mov	r19,zero
 402c7c0:	0011883a 	mov	r8,zero
 402c7c4:	0039883a 	mov	fp,zero
 402c7c8:	0025883a 	mov	r18,zero
 402c7cc:	90001f26 	beq	r18,zero,402c84c <__sfvwrite_r+0x29c>
 402c7d0:	40005a26 	beq	r8,zero,402c93c <__sfvwrite_r+0x38c>
 402c7d4:	982d883a 	mov	r22,r19
 402c7d8:	94c0012e 	bgeu	r18,r19,402c7e0 <__sfvwrite_r+0x230>
 402c7dc:	902d883a 	mov	r22,r18
 402c7e0:	81000017 	ldw	r4,0(r16)
 402c7e4:	80800417 	ldw	r2,16(r16)
 402c7e8:	b02f883a 	mov	r23,r22
 402c7ec:	81c00517 	ldw	r7,20(r16)
 402c7f0:	1100032e 	bgeu	r2,r4,402c800 <__sfvwrite_r+0x250>
 402c7f4:	80c00217 	ldw	r3,8(r16)
 402c7f8:	38c7883a 	add	r3,r7,r3
 402c7fc:	1d801816 	blt	r3,r22,402c860 <__sfvwrite_r+0x2b0>
 402c800:	b1c03e16 	blt	r22,r7,402c8fc <__sfvwrite_r+0x34c>
 402c804:	80800917 	ldw	r2,36(r16)
 402c808:	81400717 	ldw	r5,28(r16)
 402c80c:	e00d883a 	mov	r6,fp
 402c810:	da000115 	stw	r8,4(sp)
 402c814:	a809883a 	mov	r4,r21
 402c818:	103ee83a 	callr	r2
 402c81c:	102f883a 	mov	r23,r2
 402c820:	da000117 	ldw	r8,4(sp)
 402c824:	00bfe00e 	bge	zero,r2,402c7a8 <_gp+0xfffeb5a8>
 402c828:	9de7c83a 	sub	r19,r19,r23
 402c82c:	98001f26 	beq	r19,zero,402c8ac <__sfvwrite_r+0x2fc>
 402c830:	a0800217 	ldw	r2,8(r20)
 402c834:	e5f9883a 	add	fp,fp,r23
 402c838:	95e5c83a 	sub	r18,r18,r23
 402c83c:	15efc83a 	sub	r23,r2,r23
 402c840:	a5c00215 	stw	r23,8(r20)
 402c844:	b83f8726 	beq	r23,zero,402c664 <_gp+0xfffeb464>
 402c848:	903fe11e 	bne	r18,zero,402c7d0 <_gp+0xfffeb5d0>
 402c84c:	8f000017 	ldw	fp,0(r17)
 402c850:	8c800117 	ldw	r18,4(r17)
 402c854:	0011883a 	mov	r8,zero
 402c858:	8c400204 	addi	r17,r17,8
 402c85c:	003fdb06 	br	402c7cc <_gp+0xfffeb5cc>
 402c860:	180d883a 	mov	r6,r3
 402c864:	e00b883a 	mov	r5,fp
 402c868:	da000115 	stw	r8,4(sp)
 402c86c:	d8c00015 	stw	r3,0(sp)
 402c870:	402ce280 	call	402ce28 <memmove>
 402c874:	d8c00017 	ldw	r3,0(sp)
 402c878:	80800017 	ldw	r2,0(r16)
 402c87c:	800b883a 	mov	r5,r16
 402c880:	a809883a 	mov	r4,r21
 402c884:	10c5883a 	add	r2,r2,r3
 402c888:	80800015 	stw	r2,0(r16)
 402c88c:	d8c00015 	stw	r3,0(sp)
 402c890:	40243440 	call	4024344 <_fflush_r>
 402c894:	d8c00017 	ldw	r3,0(sp)
 402c898:	da000117 	ldw	r8,4(sp)
 402c89c:	103fc21e 	bne	r2,zero,402c7a8 <_gp+0xfffeb5a8>
 402c8a0:	182f883a 	mov	r23,r3
 402c8a4:	9de7c83a 	sub	r19,r19,r23
 402c8a8:	983fe11e 	bne	r19,zero,402c830 <_gp+0xfffeb630>
 402c8ac:	800b883a 	mov	r5,r16
 402c8b0:	a809883a 	mov	r4,r21
 402c8b4:	40243440 	call	4024344 <_fflush_r>
 402c8b8:	103fbb1e 	bne	r2,zero,402c7a8 <_gp+0xfffeb5a8>
 402c8bc:	0011883a 	mov	r8,zero
 402c8c0:	003fdb06 	br	402c830 <_gp+0xfffeb630>
 402c8c4:	94c0012e 	bgeu	r18,r19,402c8cc <__sfvwrite_r+0x31c>
 402c8c8:	9027883a 	mov	r19,r18
 402c8cc:	980d883a 	mov	r6,r19
 402c8d0:	e00b883a 	mov	r5,fp
 402c8d4:	402ce280 	call	402ce28 <memmove>
 402c8d8:	80800217 	ldw	r2,8(r16)
 402c8dc:	80c00017 	ldw	r3,0(r16)
 402c8e0:	14c5c83a 	sub	r2,r2,r19
 402c8e4:	1cc7883a 	add	r3,r3,r19
 402c8e8:	80800215 	stw	r2,8(r16)
 402c8ec:	80c00015 	stw	r3,0(r16)
 402c8f0:	10004326 	beq	r2,zero,402ca00 <__sfvwrite_r+0x450>
 402c8f4:	9805883a 	mov	r2,r19
 402c8f8:	003f8606 	br	402c714 <_gp+0xfffeb514>
 402c8fc:	b00d883a 	mov	r6,r22
 402c900:	e00b883a 	mov	r5,fp
 402c904:	da000115 	stw	r8,4(sp)
 402c908:	402ce280 	call	402ce28 <memmove>
 402c90c:	80800217 	ldw	r2,8(r16)
 402c910:	80c00017 	ldw	r3,0(r16)
 402c914:	da000117 	ldw	r8,4(sp)
 402c918:	1585c83a 	sub	r2,r2,r22
 402c91c:	1dad883a 	add	r22,r3,r22
 402c920:	80800215 	stw	r2,8(r16)
 402c924:	85800015 	stw	r22,0(r16)
 402c928:	003fbf06 	br	402c828 <_gp+0xfffeb628>
 402c92c:	81000017 	ldw	r4,0(r16)
 402c930:	9027883a 	mov	r19,r18
 402c934:	902f883a 	mov	r23,r18
 402c938:	003f6c06 	br	402c6ec <_gp+0xfffeb4ec>
 402c93c:	900d883a 	mov	r6,r18
 402c940:	01400284 	movi	r5,10
 402c944:	e009883a 	mov	r4,fp
 402c948:	402cbfc0 	call	402cbfc <memchr>
 402c94c:	10003e26 	beq	r2,zero,402ca48 <__sfvwrite_r+0x498>
 402c950:	10800044 	addi	r2,r2,1
 402c954:	1727c83a 	sub	r19,r2,fp
 402c958:	02000044 	movi	r8,1
 402c95c:	003f9d06 	br	402c7d4 <_gp+0xfffeb5d4>
 402c960:	80800517 	ldw	r2,20(r16)
 402c964:	81400417 	ldw	r5,16(r16)
 402c968:	81c00017 	ldw	r7,0(r16)
 402c96c:	10a7883a 	add	r19,r2,r2
 402c970:	9885883a 	add	r2,r19,r2
 402c974:	1026d7fa 	srli	r19,r2,31
 402c978:	396dc83a 	sub	r22,r7,r5
 402c97c:	b1000044 	addi	r4,r22,1
 402c980:	9885883a 	add	r2,r19,r2
 402c984:	1027d07a 	srai	r19,r2,1
 402c988:	2485883a 	add	r2,r4,r18
 402c98c:	980d883a 	mov	r6,r19
 402c990:	9880022e 	bgeu	r19,r2,402c99c <__sfvwrite_r+0x3ec>
 402c994:	1027883a 	mov	r19,r2
 402c998:	100d883a 	mov	r6,r2
 402c99c:	18c1000c 	andi	r3,r3,1024
 402c9a0:	18001c26 	beq	r3,zero,402ca14 <__sfvwrite_r+0x464>
 402c9a4:	300b883a 	mov	r5,r6
 402c9a8:	a809883a 	mov	r4,r21
 402c9ac:	402561c0 	call	402561c <_malloc_r>
 402c9b0:	102f883a 	mov	r23,r2
 402c9b4:	10002926 	beq	r2,zero,402ca5c <__sfvwrite_r+0x4ac>
 402c9b8:	81400417 	ldw	r5,16(r16)
 402c9bc:	b00d883a 	mov	r6,r22
 402c9c0:	1009883a 	mov	r4,r2
 402c9c4:	402cce00 	call	402cce0 <memcpy>
 402c9c8:	8080030b 	ldhu	r2,12(r16)
 402c9cc:	00fedfc4 	movi	r3,-1153
 402c9d0:	10c4703a 	and	r2,r2,r3
 402c9d4:	10802014 	ori	r2,r2,128
 402c9d8:	8080030d 	sth	r2,12(r16)
 402c9dc:	bd89883a 	add	r4,r23,r22
 402c9e0:	9d8fc83a 	sub	r7,r19,r22
 402c9e4:	85c00415 	stw	r23,16(r16)
 402c9e8:	84c00515 	stw	r19,20(r16)
 402c9ec:	81000015 	stw	r4,0(r16)
 402c9f0:	9027883a 	mov	r19,r18
 402c9f4:	81c00215 	stw	r7,8(r16)
 402c9f8:	902f883a 	mov	r23,r18
 402c9fc:	003f3b06 	br	402c6ec <_gp+0xfffeb4ec>
 402ca00:	800b883a 	mov	r5,r16
 402ca04:	a809883a 	mov	r4,r21
 402ca08:	40243440 	call	4024344 <_fflush_r>
 402ca0c:	103fb926 	beq	r2,zero,402c8f4 <_gp+0xfffeb6f4>
 402ca10:	003f6506 	br	402c7a8 <_gp+0xfffeb5a8>
 402ca14:	a809883a 	mov	r4,r21
 402ca18:	402dfe00 	call	402dfe0 <_realloc_r>
 402ca1c:	102f883a 	mov	r23,r2
 402ca20:	103fee1e 	bne	r2,zero,402c9dc <_gp+0xfffeb7dc>
 402ca24:	81400417 	ldw	r5,16(r16)
 402ca28:	a809883a 	mov	r4,r21
 402ca2c:	40249ec0 	call	40249ec <_free_r>
 402ca30:	8080030b 	ldhu	r2,12(r16)
 402ca34:	00ffdfc4 	movi	r3,-129
 402ca38:	1884703a 	and	r2,r3,r2
 402ca3c:	00c00304 	movi	r3,12
 402ca40:	a8c00015 	stw	r3,0(r21)
 402ca44:	003f5906 	br	402c7ac <_gp+0xfffeb5ac>
 402ca48:	94c00044 	addi	r19,r18,1
 402ca4c:	02000044 	movi	r8,1
 402ca50:	003f6006 	br	402c7d4 <_gp+0xfffeb5d4>
 402ca54:	00bfffc4 	movi	r2,-1
 402ca58:	003f0306 	br	402c668 <_gp+0xfffeb468>
 402ca5c:	00800304 	movi	r2,12
 402ca60:	a8800015 	stw	r2,0(r21)
 402ca64:	8080030b 	ldhu	r2,12(r16)
 402ca68:	003f5006 	br	402c7ac <_gp+0xfffeb5ac>

0402ca6c <_isatty_r>:
 402ca6c:	defffd04 	addi	sp,sp,-12
 402ca70:	dc000015 	stw	r16,0(sp)
 402ca74:	04010134 	movhi	r16,1028
 402ca78:	dc400115 	stw	r17,4(sp)
 402ca7c:	842b4c04 	addi	r16,r16,-21200
 402ca80:	2023883a 	mov	r17,r4
 402ca84:	2809883a 	mov	r4,r5
 402ca88:	dfc00215 	stw	ra,8(sp)
 402ca8c:	80000015 	stw	zero,0(r16)
 402ca90:	40342140 	call	4034214 <isatty>
 402ca94:	00ffffc4 	movi	r3,-1
 402ca98:	10c00526 	beq	r2,r3,402cab0 <_isatty_r+0x44>
 402ca9c:	dfc00217 	ldw	ra,8(sp)
 402caa0:	dc400117 	ldw	r17,4(sp)
 402caa4:	dc000017 	ldw	r16,0(sp)
 402caa8:	dec00304 	addi	sp,sp,12
 402caac:	f800283a 	ret
 402cab0:	80c00017 	ldw	r3,0(r16)
 402cab4:	183ff926 	beq	r3,zero,402ca9c <_gp+0xfffeb89c>
 402cab8:	88c00015 	stw	r3,0(r17)
 402cabc:	003ff706 	br	402ca9c <_gp+0xfffeb89c>

0402cac0 <_setlocale_r>:
 402cac0:	30001b26 	beq	r6,zero,402cb30 <_setlocale_r+0x70>
 402cac4:	014100f4 	movhi	r5,1027
 402cac8:	defffe04 	addi	sp,sp,-8
 402cacc:	295d2e04 	addi	r5,r5,29880
 402cad0:	3009883a 	mov	r4,r6
 402cad4:	dc000015 	stw	r16,0(sp)
 402cad8:	dfc00115 	stw	ra,4(sp)
 402cadc:	3021883a 	mov	r16,r6
 402cae0:	402e5b80 	call	402e5b8 <strcmp>
 402cae4:	1000061e 	bne	r2,zero,402cb00 <_setlocale_r+0x40>
 402cae8:	008100f4 	movhi	r2,1027
 402caec:	109d0704 	addi	r2,r2,29724
 402caf0:	dfc00117 	ldw	ra,4(sp)
 402caf4:	dc000017 	ldw	r16,0(sp)
 402caf8:	dec00204 	addi	sp,sp,8
 402cafc:	f800283a 	ret
 402cb00:	014100f4 	movhi	r5,1027
 402cb04:	295d0704 	addi	r5,r5,29724
 402cb08:	8009883a 	mov	r4,r16
 402cb0c:	402e5b80 	call	402e5b8 <strcmp>
 402cb10:	103ff526 	beq	r2,zero,402cae8 <_gp+0xfffeb8e8>
 402cb14:	014100f4 	movhi	r5,1027
 402cb18:	295d1104 	addi	r5,r5,29764
 402cb1c:	8009883a 	mov	r4,r16
 402cb20:	402e5b80 	call	402e5b8 <strcmp>
 402cb24:	103ff026 	beq	r2,zero,402cae8 <_gp+0xfffeb8e8>
 402cb28:	0005883a 	mov	r2,zero
 402cb2c:	003ff006 	br	402caf0 <_gp+0xfffeb8f0>
 402cb30:	008100f4 	movhi	r2,1027
 402cb34:	109d0704 	addi	r2,r2,29724
 402cb38:	f800283a 	ret

0402cb3c <__locale_charset>:
 402cb3c:	008100f4 	movhi	r2,1027
 402cb40:	109fe804 	addi	r2,r2,32672
 402cb44:	f800283a 	ret

0402cb48 <__locale_mb_cur_max>:
 402cb48:	00810134 	movhi	r2,1028
 402cb4c:	10a48404 	addi	r2,r2,-28144
 402cb50:	10800017 	ldw	r2,0(r2)
 402cb54:	f800283a 	ret

0402cb58 <__locale_msgcharset>:
 402cb58:	008100f4 	movhi	r2,1027
 402cb5c:	109fe004 	addi	r2,r2,32640
 402cb60:	f800283a 	ret

0402cb64 <__locale_cjk_lang>:
 402cb64:	0005883a 	mov	r2,zero
 402cb68:	f800283a 	ret

0402cb6c <_localeconv_r>:
 402cb6c:	008100f4 	movhi	r2,1027
 402cb70:	109ff004 	addi	r2,r2,32704
 402cb74:	f800283a 	ret

0402cb78 <setlocale>:
 402cb78:	00810134 	movhi	r2,1028
 402cb7c:	10a48104 	addi	r2,r2,-28156
 402cb80:	280d883a 	mov	r6,r5
 402cb84:	200b883a 	mov	r5,r4
 402cb88:	11000017 	ldw	r4,0(r2)
 402cb8c:	402cac01 	jmpi	402cac0 <_setlocale_r>

0402cb90 <localeconv>:
 402cb90:	008100f4 	movhi	r2,1027
 402cb94:	109ff004 	addi	r2,r2,32704
 402cb98:	f800283a 	ret

0402cb9c <_lseek_r>:
 402cb9c:	defffd04 	addi	sp,sp,-12
 402cba0:	2805883a 	mov	r2,r5
 402cba4:	dc000015 	stw	r16,0(sp)
 402cba8:	04010134 	movhi	r16,1028
 402cbac:	dc400115 	stw	r17,4(sp)
 402cbb0:	300b883a 	mov	r5,r6
 402cbb4:	842b4c04 	addi	r16,r16,-21200
 402cbb8:	2023883a 	mov	r17,r4
 402cbbc:	380d883a 	mov	r6,r7
 402cbc0:	1009883a 	mov	r4,r2
 402cbc4:	dfc00215 	stw	ra,8(sp)
 402cbc8:	80000015 	stw	zero,0(r16)
 402cbcc:	40343e00 	call	40343e0 <lseek>
 402cbd0:	00ffffc4 	movi	r3,-1
 402cbd4:	10c00526 	beq	r2,r3,402cbec <_lseek_r+0x50>
 402cbd8:	dfc00217 	ldw	ra,8(sp)
 402cbdc:	dc400117 	ldw	r17,4(sp)
 402cbe0:	dc000017 	ldw	r16,0(sp)
 402cbe4:	dec00304 	addi	sp,sp,12
 402cbe8:	f800283a 	ret
 402cbec:	80c00017 	ldw	r3,0(r16)
 402cbf0:	183ff926 	beq	r3,zero,402cbd8 <_gp+0xfffeb9d8>
 402cbf4:	88c00015 	stw	r3,0(r17)
 402cbf8:	003ff706 	br	402cbd8 <_gp+0xfffeb9d8>

0402cbfc <memchr>:
 402cbfc:	208000cc 	andi	r2,r4,3
 402cc00:	280f883a 	mov	r7,r5
 402cc04:	10003426 	beq	r2,zero,402ccd8 <memchr+0xdc>
 402cc08:	30bfffc4 	addi	r2,r6,-1
 402cc0c:	30001a26 	beq	r6,zero,402cc78 <memchr+0x7c>
 402cc10:	20c00003 	ldbu	r3,0(r4)
 402cc14:	29803fcc 	andi	r6,r5,255
 402cc18:	30c0051e 	bne	r6,r3,402cc30 <memchr+0x34>
 402cc1c:	00001806 	br	402cc80 <memchr+0x84>
 402cc20:	10001526 	beq	r2,zero,402cc78 <memchr+0x7c>
 402cc24:	20c00003 	ldbu	r3,0(r4)
 402cc28:	10bfffc4 	addi	r2,r2,-1
 402cc2c:	30c01426 	beq	r6,r3,402cc80 <memchr+0x84>
 402cc30:	21000044 	addi	r4,r4,1
 402cc34:	20c000cc 	andi	r3,r4,3
 402cc38:	183ff91e 	bne	r3,zero,402cc20 <_gp+0xfffeba20>
 402cc3c:	020000c4 	movi	r8,3
 402cc40:	40801136 	bltu	r8,r2,402cc88 <memchr+0x8c>
 402cc44:	10000c26 	beq	r2,zero,402cc78 <memchr+0x7c>
 402cc48:	20c00003 	ldbu	r3,0(r4)
 402cc4c:	29403fcc 	andi	r5,r5,255
 402cc50:	28c00b26 	beq	r5,r3,402cc80 <memchr+0x84>
 402cc54:	20c00044 	addi	r3,r4,1
 402cc58:	39803fcc 	andi	r6,r7,255
 402cc5c:	2089883a 	add	r4,r4,r2
 402cc60:	00000306 	br	402cc70 <memchr+0x74>
 402cc64:	18c00044 	addi	r3,r3,1
 402cc68:	197fffc3 	ldbu	r5,-1(r3)
 402cc6c:	31400526 	beq	r6,r5,402cc84 <memchr+0x88>
 402cc70:	1805883a 	mov	r2,r3
 402cc74:	20fffb1e 	bne	r4,r3,402cc64 <_gp+0xfffeba64>
 402cc78:	0005883a 	mov	r2,zero
 402cc7c:	f800283a 	ret
 402cc80:	2005883a 	mov	r2,r4
 402cc84:	f800283a 	ret
 402cc88:	28c03fcc 	andi	r3,r5,255
 402cc8c:	1812923a 	slli	r9,r3,8
 402cc90:	02ffbff4 	movhi	r11,65279
 402cc94:	02a02074 	movhi	r10,32897
 402cc98:	48d2b03a 	or	r9,r9,r3
 402cc9c:	4806943a 	slli	r3,r9,16
 402cca0:	5affbfc4 	addi	r11,r11,-257
 402cca4:	52a02004 	addi	r10,r10,-32640
 402cca8:	48d2b03a 	or	r9,r9,r3
 402ccac:	20c00017 	ldw	r3,0(r4)
 402ccb0:	48c6f03a 	xor	r3,r9,r3
 402ccb4:	1acd883a 	add	r6,r3,r11
 402ccb8:	00c6303a 	nor	r3,zero,r3
 402ccbc:	30c6703a 	and	r3,r6,r3
 402ccc0:	1a86703a 	and	r3,r3,r10
 402ccc4:	183fe01e 	bne	r3,zero,402cc48 <_gp+0xfffeba48>
 402ccc8:	10bfff04 	addi	r2,r2,-4
 402cccc:	21000104 	addi	r4,r4,4
 402ccd0:	40bff636 	bltu	r8,r2,402ccac <_gp+0xfffebaac>
 402ccd4:	003fdb06 	br	402cc44 <_gp+0xfffeba44>
 402ccd8:	3005883a 	mov	r2,r6
 402ccdc:	003fd706 	br	402cc3c <_gp+0xfffeba3c>

0402cce0 <memcpy>:
 402cce0:	defffd04 	addi	sp,sp,-12
 402cce4:	dfc00215 	stw	ra,8(sp)
 402cce8:	dc400115 	stw	r17,4(sp)
 402ccec:	dc000015 	stw	r16,0(sp)
 402ccf0:	00c003c4 	movi	r3,15
 402ccf4:	2005883a 	mov	r2,r4
 402ccf8:	1980452e 	bgeu	r3,r6,402ce10 <memcpy+0x130>
 402ccfc:	2906b03a 	or	r3,r5,r4
 402cd00:	18c000cc 	andi	r3,r3,3
 402cd04:	1800441e 	bne	r3,zero,402ce18 <memcpy+0x138>
 402cd08:	347ffc04 	addi	r17,r6,-16
 402cd0c:	8822d13a 	srli	r17,r17,4
 402cd10:	28c00104 	addi	r3,r5,4
 402cd14:	23400104 	addi	r13,r4,4
 402cd18:	8820913a 	slli	r16,r17,4
 402cd1c:	2b000204 	addi	r12,r5,8
 402cd20:	22c00204 	addi	r11,r4,8
 402cd24:	84000504 	addi	r16,r16,20
 402cd28:	2a800304 	addi	r10,r5,12
 402cd2c:	22400304 	addi	r9,r4,12
 402cd30:	2c21883a 	add	r16,r5,r16
 402cd34:	2811883a 	mov	r8,r5
 402cd38:	200f883a 	mov	r7,r4
 402cd3c:	41000017 	ldw	r4,0(r8)
 402cd40:	1fc00017 	ldw	ra,0(r3)
 402cd44:	63c00017 	ldw	r15,0(r12)
 402cd48:	39000015 	stw	r4,0(r7)
 402cd4c:	53800017 	ldw	r14,0(r10)
 402cd50:	6fc00015 	stw	ra,0(r13)
 402cd54:	5bc00015 	stw	r15,0(r11)
 402cd58:	4b800015 	stw	r14,0(r9)
 402cd5c:	18c00404 	addi	r3,r3,16
 402cd60:	39c00404 	addi	r7,r7,16
 402cd64:	42000404 	addi	r8,r8,16
 402cd68:	6b400404 	addi	r13,r13,16
 402cd6c:	63000404 	addi	r12,r12,16
 402cd70:	5ac00404 	addi	r11,r11,16
 402cd74:	52800404 	addi	r10,r10,16
 402cd78:	4a400404 	addi	r9,r9,16
 402cd7c:	1c3fef1e 	bne	r3,r16,402cd3c <_gp+0xfffebb3c>
 402cd80:	89c00044 	addi	r7,r17,1
 402cd84:	380e913a 	slli	r7,r7,4
 402cd88:	310003cc 	andi	r4,r6,15
 402cd8c:	02c000c4 	movi	r11,3
 402cd90:	11c7883a 	add	r3,r2,r7
 402cd94:	29cb883a 	add	r5,r5,r7
 402cd98:	5900212e 	bgeu	r11,r4,402ce20 <memcpy+0x140>
 402cd9c:	1813883a 	mov	r9,r3
 402cda0:	2811883a 	mov	r8,r5
 402cda4:	200f883a 	mov	r7,r4
 402cda8:	42800017 	ldw	r10,0(r8)
 402cdac:	4a400104 	addi	r9,r9,4
 402cdb0:	39ffff04 	addi	r7,r7,-4
 402cdb4:	4abfff15 	stw	r10,-4(r9)
 402cdb8:	42000104 	addi	r8,r8,4
 402cdbc:	59fffa36 	bltu	r11,r7,402cda8 <_gp+0xfffebba8>
 402cdc0:	213fff04 	addi	r4,r4,-4
 402cdc4:	2008d0ba 	srli	r4,r4,2
 402cdc8:	318000cc 	andi	r6,r6,3
 402cdcc:	21000044 	addi	r4,r4,1
 402cdd0:	2109883a 	add	r4,r4,r4
 402cdd4:	2109883a 	add	r4,r4,r4
 402cdd8:	1907883a 	add	r3,r3,r4
 402cddc:	290b883a 	add	r5,r5,r4
 402cde0:	30000626 	beq	r6,zero,402cdfc <memcpy+0x11c>
 402cde4:	198d883a 	add	r6,r3,r6
 402cde8:	29c00003 	ldbu	r7,0(r5)
 402cdec:	18c00044 	addi	r3,r3,1
 402cdf0:	29400044 	addi	r5,r5,1
 402cdf4:	19ffffc5 	stb	r7,-1(r3)
 402cdf8:	19bffb1e 	bne	r3,r6,402cde8 <_gp+0xfffebbe8>
 402cdfc:	dfc00217 	ldw	ra,8(sp)
 402ce00:	dc400117 	ldw	r17,4(sp)
 402ce04:	dc000017 	ldw	r16,0(sp)
 402ce08:	dec00304 	addi	sp,sp,12
 402ce0c:	f800283a 	ret
 402ce10:	2007883a 	mov	r3,r4
 402ce14:	003ff206 	br	402cde0 <_gp+0xfffebbe0>
 402ce18:	2007883a 	mov	r3,r4
 402ce1c:	003ff106 	br	402cde4 <_gp+0xfffebbe4>
 402ce20:	200d883a 	mov	r6,r4
 402ce24:	003fee06 	br	402cde0 <_gp+0xfffebbe0>

0402ce28 <memmove>:
 402ce28:	2005883a 	mov	r2,r4
 402ce2c:	29000b2e 	bgeu	r5,r4,402ce5c <memmove+0x34>
 402ce30:	298f883a 	add	r7,r5,r6
 402ce34:	21c0092e 	bgeu	r4,r7,402ce5c <memmove+0x34>
 402ce38:	2187883a 	add	r3,r4,r6
 402ce3c:	198bc83a 	sub	r5,r3,r6
 402ce40:	30004826 	beq	r6,zero,402cf64 <memmove+0x13c>
 402ce44:	39ffffc4 	addi	r7,r7,-1
 402ce48:	39000003 	ldbu	r4,0(r7)
 402ce4c:	18ffffc4 	addi	r3,r3,-1
 402ce50:	19000005 	stb	r4,0(r3)
 402ce54:	28fffb1e 	bne	r5,r3,402ce44 <_gp+0xfffebc44>
 402ce58:	f800283a 	ret
 402ce5c:	00c003c4 	movi	r3,15
 402ce60:	1980412e 	bgeu	r3,r6,402cf68 <memmove+0x140>
 402ce64:	2886b03a 	or	r3,r5,r2
 402ce68:	18c000cc 	andi	r3,r3,3
 402ce6c:	1800401e 	bne	r3,zero,402cf70 <memmove+0x148>
 402ce70:	33fffc04 	addi	r15,r6,-16
 402ce74:	781ed13a 	srli	r15,r15,4
 402ce78:	28c00104 	addi	r3,r5,4
 402ce7c:	13400104 	addi	r13,r2,4
 402ce80:	781c913a 	slli	r14,r15,4
 402ce84:	2b000204 	addi	r12,r5,8
 402ce88:	12c00204 	addi	r11,r2,8
 402ce8c:	73800504 	addi	r14,r14,20
 402ce90:	2a800304 	addi	r10,r5,12
 402ce94:	12400304 	addi	r9,r2,12
 402ce98:	2b9d883a 	add	r14,r5,r14
 402ce9c:	2811883a 	mov	r8,r5
 402cea0:	100f883a 	mov	r7,r2
 402cea4:	41000017 	ldw	r4,0(r8)
 402cea8:	39c00404 	addi	r7,r7,16
 402ceac:	18c00404 	addi	r3,r3,16
 402ceb0:	393ffc15 	stw	r4,-16(r7)
 402ceb4:	193ffc17 	ldw	r4,-16(r3)
 402ceb8:	6b400404 	addi	r13,r13,16
 402cebc:	5ac00404 	addi	r11,r11,16
 402cec0:	693ffc15 	stw	r4,-16(r13)
 402cec4:	61000017 	ldw	r4,0(r12)
 402cec8:	4a400404 	addi	r9,r9,16
 402cecc:	42000404 	addi	r8,r8,16
 402ced0:	593ffc15 	stw	r4,-16(r11)
 402ced4:	51000017 	ldw	r4,0(r10)
 402ced8:	63000404 	addi	r12,r12,16
 402cedc:	52800404 	addi	r10,r10,16
 402cee0:	493ffc15 	stw	r4,-16(r9)
 402cee4:	1bbfef1e 	bne	r3,r14,402cea4 <_gp+0xfffebca4>
 402cee8:	79000044 	addi	r4,r15,1
 402ceec:	2008913a 	slli	r4,r4,4
 402cef0:	328003cc 	andi	r10,r6,15
 402cef4:	02c000c4 	movi	r11,3
 402cef8:	1107883a 	add	r3,r2,r4
 402cefc:	290b883a 	add	r5,r5,r4
 402cf00:	5a801e2e 	bgeu	r11,r10,402cf7c <memmove+0x154>
 402cf04:	1813883a 	mov	r9,r3
 402cf08:	2811883a 	mov	r8,r5
 402cf0c:	500f883a 	mov	r7,r10
 402cf10:	41000017 	ldw	r4,0(r8)
 402cf14:	4a400104 	addi	r9,r9,4
 402cf18:	39ffff04 	addi	r7,r7,-4
 402cf1c:	493fff15 	stw	r4,-4(r9)
 402cf20:	42000104 	addi	r8,r8,4
 402cf24:	59fffa36 	bltu	r11,r7,402cf10 <_gp+0xfffebd10>
 402cf28:	513fff04 	addi	r4,r10,-4
 402cf2c:	2008d0ba 	srli	r4,r4,2
 402cf30:	318000cc 	andi	r6,r6,3
 402cf34:	21000044 	addi	r4,r4,1
 402cf38:	2109883a 	add	r4,r4,r4
 402cf3c:	2109883a 	add	r4,r4,r4
 402cf40:	1907883a 	add	r3,r3,r4
 402cf44:	290b883a 	add	r5,r5,r4
 402cf48:	30000b26 	beq	r6,zero,402cf78 <memmove+0x150>
 402cf4c:	198d883a 	add	r6,r3,r6
 402cf50:	29c00003 	ldbu	r7,0(r5)
 402cf54:	18c00044 	addi	r3,r3,1
 402cf58:	29400044 	addi	r5,r5,1
 402cf5c:	19ffffc5 	stb	r7,-1(r3)
 402cf60:	19bffb1e 	bne	r3,r6,402cf50 <_gp+0xfffebd50>
 402cf64:	f800283a 	ret
 402cf68:	1007883a 	mov	r3,r2
 402cf6c:	003ff606 	br	402cf48 <_gp+0xfffebd48>
 402cf70:	1007883a 	mov	r3,r2
 402cf74:	003ff506 	br	402cf4c <_gp+0xfffebd4c>
 402cf78:	f800283a 	ret
 402cf7c:	500d883a 	mov	r6,r10
 402cf80:	003ff106 	br	402cf48 <_gp+0xfffebd48>

0402cf84 <_Balloc>:
 402cf84:	20801317 	ldw	r2,76(r4)
 402cf88:	defffc04 	addi	sp,sp,-16
 402cf8c:	dc400115 	stw	r17,4(sp)
 402cf90:	dc000015 	stw	r16,0(sp)
 402cf94:	dfc00315 	stw	ra,12(sp)
 402cf98:	dc800215 	stw	r18,8(sp)
 402cf9c:	2023883a 	mov	r17,r4
 402cfa0:	2821883a 	mov	r16,r5
 402cfa4:	10000f26 	beq	r2,zero,402cfe4 <_Balloc+0x60>
 402cfa8:	8407883a 	add	r3,r16,r16
 402cfac:	18c7883a 	add	r3,r3,r3
 402cfb0:	10c7883a 	add	r3,r2,r3
 402cfb4:	18800017 	ldw	r2,0(r3)
 402cfb8:	10001126 	beq	r2,zero,402d000 <_Balloc+0x7c>
 402cfbc:	11000017 	ldw	r4,0(r2)
 402cfc0:	19000015 	stw	r4,0(r3)
 402cfc4:	10000415 	stw	zero,16(r2)
 402cfc8:	10000315 	stw	zero,12(r2)
 402cfcc:	dfc00317 	ldw	ra,12(sp)
 402cfd0:	dc800217 	ldw	r18,8(sp)
 402cfd4:	dc400117 	ldw	r17,4(sp)
 402cfd8:	dc000017 	ldw	r16,0(sp)
 402cfdc:	dec00404 	addi	sp,sp,16
 402cfe0:	f800283a 	ret
 402cfe4:	01800844 	movi	r6,33
 402cfe8:	01400104 	movi	r5,4
 402cfec:	40310e80 	call	40310e8 <_calloc_r>
 402cff0:	88801315 	stw	r2,76(r17)
 402cff4:	103fec1e 	bne	r2,zero,402cfa8 <_gp+0xfffebda8>
 402cff8:	0005883a 	mov	r2,zero
 402cffc:	003ff306 	br	402cfcc <_gp+0xfffebdcc>
 402d000:	01400044 	movi	r5,1
 402d004:	2c24983a 	sll	r18,r5,r16
 402d008:	8809883a 	mov	r4,r17
 402d00c:	91800144 	addi	r6,r18,5
 402d010:	318d883a 	add	r6,r6,r6
 402d014:	318d883a 	add	r6,r6,r6
 402d018:	40310e80 	call	40310e8 <_calloc_r>
 402d01c:	103ff626 	beq	r2,zero,402cff8 <_gp+0xfffebdf8>
 402d020:	14000115 	stw	r16,4(r2)
 402d024:	14800215 	stw	r18,8(r2)
 402d028:	003fe606 	br	402cfc4 <_gp+0xfffebdc4>

0402d02c <_Bfree>:
 402d02c:	28000826 	beq	r5,zero,402d050 <_Bfree+0x24>
 402d030:	28c00117 	ldw	r3,4(r5)
 402d034:	20801317 	ldw	r2,76(r4)
 402d038:	18c7883a 	add	r3,r3,r3
 402d03c:	18c7883a 	add	r3,r3,r3
 402d040:	10c5883a 	add	r2,r2,r3
 402d044:	10c00017 	ldw	r3,0(r2)
 402d048:	28c00015 	stw	r3,0(r5)
 402d04c:	11400015 	stw	r5,0(r2)
 402d050:	f800283a 	ret

0402d054 <__multadd>:
 402d054:	defffa04 	addi	sp,sp,-24
 402d058:	dc800315 	stw	r18,12(sp)
 402d05c:	dc400215 	stw	r17,8(sp)
 402d060:	dc000115 	stw	r16,4(sp)
 402d064:	2823883a 	mov	r17,r5
 402d068:	2c000417 	ldw	r16,16(r5)
 402d06c:	dfc00515 	stw	ra,20(sp)
 402d070:	dcc00415 	stw	r19,16(sp)
 402d074:	2025883a 	mov	r18,r4
 402d078:	29400504 	addi	r5,r5,20
 402d07c:	0011883a 	mov	r8,zero
 402d080:	28c00017 	ldw	r3,0(r5)
 402d084:	29400104 	addi	r5,r5,4
 402d088:	42000044 	addi	r8,r8,1
 402d08c:	18bfffcc 	andi	r2,r3,65535
 402d090:	1185383a 	mul	r2,r2,r6
 402d094:	1806d43a 	srli	r3,r3,16
 402d098:	11cf883a 	add	r7,r2,r7
 402d09c:	3808d43a 	srli	r4,r7,16
 402d0a0:	1987383a 	mul	r3,r3,r6
 402d0a4:	38bfffcc 	andi	r2,r7,65535
 402d0a8:	1907883a 	add	r3,r3,r4
 402d0ac:	1808943a 	slli	r4,r3,16
 402d0b0:	180ed43a 	srli	r7,r3,16
 402d0b4:	2085883a 	add	r2,r4,r2
 402d0b8:	28bfff15 	stw	r2,-4(r5)
 402d0bc:	443ff016 	blt	r8,r16,402d080 <_gp+0xfffebe80>
 402d0c0:	38000926 	beq	r7,zero,402d0e8 <__multadd+0x94>
 402d0c4:	88800217 	ldw	r2,8(r17)
 402d0c8:	80800f0e 	bge	r16,r2,402d108 <__multadd+0xb4>
 402d0cc:	80800144 	addi	r2,r16,5
 402d0d0:	1085883a 	add	r2,r2,r2
 402d0d4:	1085883a 	add	r2,r2,r2
 402d0d8:	8885883a 	add	r2,r17,r2
 402d0dc:	11c00015 	stw	r7,0(r2)
 402d0e0:	84000044 	addi	r16,r16,1
 402d0e4:	8c000415 	stw	r16,16(r17)
 402d0e8:	8805883a 	mov	r2,r17
 402d0ec:	dfc00517 	ldw	ra,20(sp)
 402d0f0:	dcc00417 	ldw	r19,16(sp)
 402d0f4:	dc800317 	ldw	r18,12(sp)
 402d0f8:	dc400217 	ldw	r17,8(sp)
 402d0fc:	dc000117 	ldw	r16,4(sp)
 402d100:	dec00604 	addi	sp,sp,24
 402d104:	f800283a 	ret
 402d108:	89400117 	ldw	r5,4(r17)
 402d10c:	9009883a 	mov	r4,r18
 402d110:	d9c00015 	stw	r7,0(sp)
 402d114:	29400044 	addi	r5,r5,1
 402d118:	402cf840 	call	402cf84 <_Balloc>
 402d11c:	89800417 	ldw	r6,16(r17)
 402d120:	89400304 	addi	r5,r17,12
 402d124:	11000304 	addi	r4,r2,12
 402d128:	31800084 	addi	r6,r6,2
 402d12c:	318d883a 	add	r6,r6,r6
 402d130:	318d883a 	add	r6,r6,r6
 402d134:	1027883a 	mov	r19,r2
 402d138:	402cce00 	call	402cce0 <memcpy>
 402d13c:	d9c00017 	ldw	r7,0(sp)
 402d140:	88000a26 	beq	r17,zero,402d16c <__multadd+0x118>
 402d144:	88c00117 	ldw	r3,4(r17)
 402d148:	90801317 	ldw	r2,76(r18)
 402d14c:	18c7883a 	add	r3,r3,r3
 402d150:	18c7883a 	add	r3,r3,r3
 402d154:	10c5883a 	add	r2,r2,r3
 402d158:	10c00017 	ldw	r3,0(r2)
 402d15c:	88c00015 	stw	r3,0(r17)
 402d160:	14400015 	stw	r17,0(r2)
 402d164:	9823883a 	mov	r17,r19
 402d168:	003fd806 	br	402d0cc <_gp+0xfffebecc>
 402d16c:	9823883a 	mov	r17,r19
 402d170:	003fd606 	br	402d0cc <_gp+0xfffebecc>

0402d174 <__s2b>:
 402d174:	defff904 	addi	sp,sp,-28
 402d178:	dc400115 	stw	r17,4(sp)
 402d17c:	dc000015 	stw	r16,0(sp)
 402d180:	2023883a 	mov	r17,r4
 402d184:	2821883a 	mov	r16,r5
 402d188:	39000204 	addi	r4,r7,8
 402d18c:	01400244 	movi	r5,9
 402d190:	dcc00315 	stw	r19,12(sp)
 402d194:	dc800215 	stw	r18,8(sp)
 402d198:	dfc00615 	stw	ra,24(sp)
 402d19c:	dd400515 	stw	r21,20(sp)
 402d1a0:	dd000415 	stw	r20,16(sp)
 402d1a4:	3825883a 	mov	r18,r7
 402d1a8:	3027883a 	mov	r19,r6
 402d1ac:	40228740 	call	4022874 <__divsi3>
 402d1b0:	00c00044 	movi	r3,1
 402d1b4:	000b883a 	mov	r5,zero
 402d1b8:	1880030e 	bge	r3,r2,402d1c8 <__s2b+0x54>
 402d1bc:	18c7883a 	add	r3,r3,r3
 402d1c0:	29400044 	addi	r5,r5,1
 402d1c4:	18bffd16 	blt	r3,r2,402d1bc <_gp+0xfffebfbc>
 402d1c8:	8809883a 	mov	r4,r17
 402d1cc:	402cf840 	call	402cf84 <_Balloc>
 402d1d0:	d8c00717 	ldw	r3,28(sp)
 402d1d4:	10c00515 	stw	r3,20(r2)
 402d1d8:	00c00044 	movi	r3,1
 402d1dc:	10c00415 	stw	r3,16(r2)
 402d1e0:	00c00244 	movi	r3,9
 402d1e4:	1cc0210e 	bge	r3,r19,402d26c <__s2b+0xf8>
 402d1e8:	80eb883a 	add	r21,r16,r3
 402d1ec:	a829883a 	mov	r20,r21
 402d1f0:	84e1883a 	add	r16,r16,r19
 402d1f4:	a1c00007 	ldb	r7,0(r20)
 402d1f8:	01800284 	movi	r6,10
 402d1fc:	a5000044 	addi	r20,r20,1
 402d200:	100b883a 	mov	r5,r2
 402d204:	39fff404 	addi	r7,r7,-48
 402d208:	8809883a 	mov	r4,r17
 402d20c:	402d0540 	call	402d054 <__multadd>
 402d210:	a43ff81e 	bne	r20,r16,402d1f4 <_gp+0xfffebff4>
 402d214:	ace1883a 	add	r16,r21,r19
 402d218:	843ffe04 	addi	r16,r16,-8
 402d21c:	9c800a0e 	bge	r19,r18,402d248 <__s2b+0xd4>
 402d220:	94e5c83a 	sub	r18,r18,r19
 402d224:	84a5883a 	add	r18,r16,r18
 402d228:	81c00007 	ldb	r7,0(r16)
 402d22c:	01800284 	movi	r6,10
 402d230:	84000044 	addi	r16,r16,1
 402d234:	100b883a 	mov	r5,r2
 402d238:	39fff404 	addi	r7,r7,-48
 402d23c:	8809883a 	mov	r4,r17
 402d240:	402d0540 	call	402d054 <__multadd>
 402d244:	84bff81e 	bne	r16,r18,402d228 <_gp+0xfffec028>
 402d248:	dfc00617 	ldw	ra,24(sp)
 402d24c:	dd400517 	ldw	r21,20(sp)
 402d250:	dd000417 	ldw	r20,16(sp)
 402d254:	dcc00317 	ldw	r19,12(sp)
 402d258:	dc800217 	ldw	r18,8(sp)
 402d25c:	dc400117 	ldw	r17,4(sp)
 402d260:	dc000017 	ldw	r16,0(sp)
 402d264:	dec00704 	addi	sp,sp,28
 402d268:	f800283a 	ret
 402d26c:	84000284 	addi	r16,r16,10
 402d270:	1827883a 	mov	r19,r3
 402d274:	003fe906 	br	402d21c <_gp+0xfffec01c>

0402d278 <__hi0bits>:
 402d278:	20bfffec 	andhi	r2,r4,65535
 402d27c:	1000141e 	bne	r2,zero,402d2d0 <__hi0bits+0x58>
 402d280:	2008943a 	slli	r4,r4,16
 402d284:	00800404 	movi	r2,16
 402d288:	20ffc02c 	andhi	r3,r4,65280
 402d28c:	1800021e 	bne	r3,zero,402d298 <__hi0bits+0x20>
 402d290:	2008923a 	slli	r4,r4,8
 402d294:	10800204 	addi	r2,r2,8
 402d298:	20fc002c 	andhi	r3,r4,61440
 402d29c:	1800021e 	bne	r3,zero,402d2a8 <__hi0bits+0x30>
 402d2a0:	2008913a 	slli	r4,r4,4
 402d2a4:	10800104 	addi	r2,r2,4
 402d2a8:	20f0002c 	andhi	r3,r4,49152
 402d2ac:	1800031e 	bne	r3,zero,402d2bc <__hi0bits+0x44>
 402d2b0:	2109883a 	add	r4,r4,r4
 402d2b4:	10800084 	addi	r2,r2,2
 402d2b8:	2109883a 	add	r4,r4,r4
 402d2bc:	20000316 	blt	r4,zero,402d2cc <__hi0bits+0x54>
 402d2c0:	2110002c 	andhi	r4,r4,16384
 402d2c4:	2000041e 	bne	r4,zero,402d2d8 <__hi0bits+0x60>
 402d2c8:	00800804 	movi	r2,32
 402d2cc:	f800283a 	ret
 402d2d0:	0005883a 	mov	r2,zero
 402d2d4:	003fec06 	br	402d288 <_gp+0xfffec088>
 402d2d8:	10800044 	addi	r2,r2,1
 402d2dc:	f800283a 	ret

0402d2e0 <__lo0bits>:
 402d2e0:	20c00017 	ldw	r3,0(r4)
 402d2e4:	188001cc 	andi	r2,r3,7
 402d2e8:	10000826 	beq	r2,zero,402d30c <__lo0bits+0x2c>
 402d2ec:	1880004c 	andi	r2,r3,1
 402d2f0:	1000211e 	bne	r2,zero,402d378 <__lo0bits+0x98>
 402d2f4:	1880008c 	andi	r2,r3,2
 402d2f8:	1000211e 	bne	r2,zero,402d380 <__lo0bits+0xa0>
 402d2fc:	1806d0ba 	srli	r3,r3,2
 402d300:	00800084 	movi	r2,2
 402d304:	20c00015 	stw	r3,0(r4)
 402d308:	f800283a 	ret
 402d30c:	18bfffcc 	andi	r2,r3,65535
 402d310:	10001326 	beq	r2,zero,402d360 <__lo0bits+0x80>
 402d314:	0005883a 	mov	r2,zero
 402d318:	19403fcc 	andi	r5,r3,255
 402d31c:	2800021e 	bne	r5,zero,402d328 <__lo0bits+0x48>
 402d320:	1806d23a 	srli	r3,r3,8
 402d324:	10800204 	addi	r2,r2,8
 402d328:	194003cc 	andi	r5,r3,15
 402d32c:	2800021e 	bne	r5,zero,402d338 <__lo0bits+0x58>
 402d330:	1806d13a 	srli	r3,r3,4
 402d334:	10800104 	addi	r2,r2,4
 402d338:	194000cc 	andi	r5,r3,3
 402d33c:	2800021e 	bne	r5,zero,402d348 <__lo0bits+0x68>
 402d340:	1806d0ba 	srli	r3,r3,2
 402d344:	10800084 	addi	r2,r2,2
 402d348:	1940004c 	andi	r5,r3,1
 402d34c:	2800081e 	bne	r5,zero,402d370 <__lo0bits+0x90>
 402d350:	1806d07a 	srli	r3,r3,1
 402d354:	1800051e 	bne	r3,zero,402d36c <__lo0bits+0x8c>
 402d358:	00800804 	movi	r2,32
 402d35c:	f800283a 	ret
 402d360:	1806d43a 	srli	r3,r3,16
 402d364:	00800404 	movi	r2,16
 402d368:	003feb06 	br	402d318 <_gp+0xfffec118>
 402d36c:	10800044 	addi	r2,r2,1
 402d370:	20c00015 	stw	r3,0(r4)
 402d374:	f800283a 	ret
 402d378:	0005883a 	mov	r2,zero
 402d37c:	f800283a 	ret
 402d380:	1806d07a 	srli	r3,r3,1
 402d384:	00800044 	movi	r2,1
 402d388:	20c00015 	stw	r3,0(r4)
 402d38c:	f800283a 	ret

0402d390 <__i2b>:
 402d390:	defffd04 	addi	sp,sp,-12
 402d394:	dc000015 	stw	r16,0(sp)
 402d398:	04000044 	movi	r16,1
 402d39c:	dc400115 	stw	r17,4(sp)
 402d3a0:	2823883a 	mov	r17,r5
 402d3a4:	800b883a 	mov	r5,r16
 402d3a8:	dfc00215 	stw	ra,8(sp)
 402d3ac:	402cf840 	call	402cf84 <_Balloc>
 402d3b0:	14400515 	stw	r17,20(r2)
 402d3b4:	14000415 	stw	r16,16(r2)
 402d3b8:	dfc00217 	ldw	ra,8(sp)
 402d3bc:	dc400117 	ldw	r17,4(sp)
 402d3c0:	dc000017 	ldw	r16,0(sp)
 402d3c4:	dec00304 	addi	sp,sp,12
 402d3c8:	f800283a 	ret

0402d3cc <__multiply>:
 402d3cc:	defffa04 	addi	sp,sp,-24
 402d3d0:	dcc00315 	stw	r19,12(sp)
 402d3d4:	dc800215 	stw	r18,8(sp)
 402d3d8:	34c00417 	ldw	r19,16(r6)
 402d3dc:	2c800417 	ldw	r18,16(r5)
 402d3e0:	dd000415 	stw	r20,16(sp)
 402d3e4:	dc400115 	stw	r17,4(sp)
 402d3e8:	dfc00515 	stw	ra,20(sp)
 402d3ec:	dc000015 	stw	r16,0(sp)
 402d3f0:	2829883a 	mov	r20,r5
 402d3f4:	3023883a 	mov	r17,r6
 402d3f8:	94c0050e 	bge	r18,r19,402d410 <__multiply+0x44>
 402d3fc:	9007883a 	mov	r3,r18
 402d400:	3029883a 	mov	r20,r6
 402d404:	9825883a 	mov	r18,r19
 402d408:	2823883a 	mov	r17,r5
 402d40c:	1827883a 	mov	r19,r3
 402d410:	a0800217 	ldw	r2,8(r20)
 402d414:	94e1883a 	add	r16,r18,r19
 402d418:	a1400117 	ldw	r5,4(r20)
 402d41c:	1400010e 	bge	r2,r16,402d424 <__multiply+0x58>
 402d420:	29400044 	addi	r5,r5,1
 402d424:	402cf840 	call	402cf84 <_Balloc>
 402d428:	8415883a 	add	r10,r16,r16
 402d42c:	12c00504 	addi	r11,r2,20
 402d430:	5295883a 	add	r10,r10,r10
 402d434:	5a95883a 	add	r10,r11,r10
 402d438:	5807883a 	mov	r3,r11
 402d43c:	5a80032e 	bgeu	r11,r10,402d44c <__multiply+0x80>
 402d440:	18000015 	stw	zero,0(r3)
 402d444:	18c00104 	addi	r3,r3,4
 402d448:	1abffd36 	bltu	r3,r10,402d440 <_gp+0xfffec240>
 402d44c:	9ce7883a 	add	r19,r19,r19
 402d450:	94a5883a 	add	r18,r18,r18
 402d454:	89800504 	addi	r6,r17,20
 402d458:	9ce7883a 	add	r19,r19,r19
 402d45c:	a3400504 	addi	r13,r20,20
 402d460:	94a5883a 	add	r18,r18,r18
 402d464:	34d9883a 	add	r12,r6,r19
 402d468:	6c93883a 	add	r9,r13,r18
 402d46c:	3300422e 	bgeu	r6,r12,402d578 <__multiply+0x1ac>
 402d470:	37c00017 	ldw	ra,0(r6)
 402d474:	fbffffcc 	andi	r15,ra,65535
 402d478:	78001b26 	beq	r15,zero,402d4e8 <__multiply+0x11c>
 402d47c:	5811883a 	mov	r8,r11
 402d480:	681d883a 	mov	r14,r13
 402d484:	000f883a 	mov	r7,zero
 402d488:	71000017 	ldw	r4,0(r14)
 402d48c:	40c00017 	ldw	r3,0(r8)
 402d490:	73800104 	addi	r14,r14,4
 402d494:	217fffcc 	andi	r5,r4,65535
 402d498:	2bcb383a 	mul	r5,r5,r15
 402d49c:	2008d43a 	srli	r4,r4,16
 402d4a0:	1c7fffcc 	andi	r17,r3,65535
 402d4a4:	2c4b883a 	add	r5,r5,r17
 402d4a8:	29cb883a 	add	r5,r5,r7
 402d4ac:	23c9383a 	mul	r4,r4,r15
 402d4b0:	1806d43a 	srli	r3,r3,16
 402d4b4:	280ed43a 	srli	r7,r5,16
 402d4b8:	297fffcc 	andi	r5,r5,65535
 402d4bc:	20c7883a 	add	r3,r4,r3
 402d4c0:	19c7883a 	add	r3,r3,r7
 402d4c4:	1808943a 	slli	r4,r3,16
 402d4c8:	4023883a 	mov	r17,r8
 402d4cc:	180ed43a 	srli	r7,r3,16
 402d4d0:	214ab03a 	or	r5,r4,r5
 402d4d4:	41400015 	stw	r5,0(r8)
 402d4d8:	42000104 	addi	r8,r8,4
 402d4dc:	727fea36 	bltu	r14,r9,402d488 <_gp+0xfffec288>
 402d4e0:	89c00115 	stw	r7,4(r17)
 402d4e4:	37c00017 	ldw	ra,0(r6)
 402d4e8:	f83ed43a 	srli	ra,ra,16
 402d4ec:	f8001f26 	beq	ra,zero,402d56c <__multiply+0x1a0>
 402d4f0:	58c00017 	ldw	r3,0(r11)
 402d4f4:	681d883a 	mov	r14,r13
 402d4f8:	581f883a 	mov	r15,r11
 402d4fc:	1811883a 	mov	r8,r3
 402d500:	5825883a 	mov	r18,r11
 402d504:	000f883a 	mov	r7,zero
 402d508:	00000106 	br	402d510 <__multiply+0x144>
 402d50c:	8825883a 	mov	r18,r17
 402d510:	7140000b 	ldhu	r5,0(r14)
 402d514:	4010d43a 	srli	r8,r8,16
 402d518:	193fffcc 	andi	r4,r3,65535
 402d51c:	2fcb383a 	mul	r5,r5,ra
 402d520:	7bc00104 	addi	r15,r15,4
 402d524:	73800104 	addi	r14,r14,4
 402d528:	2a0b883a 	add	r5,r5,r8
 402d52c:	29cb883a 	add	r5,r5,r7
 402d530:	2806943a 	slli	r3,r5,16
 402d534:	94400104 	addi	r17,r18,4
 402d538:	280ad43a 	srli	r5,r5,16
 402d53c:	1908b03a 	or	r4,r3,r4
 402d540:	793fff15 	stw	r4,-4(r15)
 402d544:	70ffff17 	ldw	r3,-4(r14)
 402d548:	8a000017 	ldw	r8,0(r17)
 402d54c:	1806d43a 	srli	r3,r3,16
 402d550:	413fffcc 	andi	r4,r8,65535
 402d554:	1fc7383a 	mul	r3,r3,ra
 402d558:	1907883a 	add	r3,r3,r4
 402d55c:	1947883a 	add	r3,r3,r5
 402d560:	180ed43a 	srli	r7,r3,16
 402d564:	727fe936 	bltu	r14,r9,402d50c <_gp+0xfffec30c>
 402d568:	90c00115 	stw	r3,4(r18)
 402d56c:	31800104 	addi	r6,r6,4
 402d570:	5ac00104 	addi	r11,r11,4
 402d574:	333fbe36 	bltu	r6,r12,402d470 <_gp+0xfffec270>
 402d578:	0400090e 	bge	zero,r16,402d5a0 <__multiply+0x1d4>
 402d57c:	50ffff17 	ldw	r3,-4(r10)
 402d580:	52bfff04 	addi	r10,r10,-4
 402d584:	18000326 	beq	r3,zero,402d594 <__multiply+0x1c8>
 402d588:	00000506 	br	402d5a0 <__multiply+0x1d4>
 402d58c:	50c00017 	ldw	r3,0(r10)
 402d590:	1800031e 	bne	r3,zero,402d5a0 <__multiply+0x1d4>
 402d594:	843fffc4 	addi	r16,r16,-1
 402d598:	52bfff04 	addi	r10,r10,-4
 402d59c:	803ffb1e 	bne	r16,zero,402d58c <_gp+0xfffec38c>
 402d5a0:	14000415 	stw	r16,16(r2)
 402d5a4:	dfc00517 	ldw	ra,20(sp)
 402d5a8:	dd000417 	ldw	r20,16(sp)
 402d5ac:	dcc00317 	ldw	r19,12(sp)
 402d5b0:	dc800217 	ldw	r18,8(sp)
 402d5b4:	dc400117 	ldw	r17,4(sp)
 402d5b8:	dc000017 	ldw	r16,0(sp)
 402d5bc:	dec00604 	addi	sp,sp,24
 402d5c0:	f800283a 	ret

0402d5c4 <__pow5mult>:
 402d5c4:	defffa04 	addi	sp,sp,-24
 402d5c8:	dcc00315 	stw	r19,12(sp)
 402d5cc:	dc000015 	stw	r16,0(sp)
 402d5d0:	dfc00515 	stw	ra,20(sp)
 402d5d4:	dd000415 	stw	r20,16(sp)
 402d5d8:	dc800215 	stw	r18,8(sp)
 402d5dc:	dc400115 	stw	r17,4(sp)
 402d5e0:	308000cc 	andi	r2,r6,3
 402d5e4:	3021883a 	mov	r16,r6
 402d5e8:	2027883a 	mov	r19,r4
 402d5ec:	10002f1e 	bne	r2,zero,402d6ac <__pow5mult+0xe8>
 402d5f0:	2825883a 	mov	r18,r5
 402d5f4:	8021d0ba 	srai	r16,r16,2
 402d5f8:	80001a26 	beq	r16,zero,402d664 <__pow5mult+0xa0>
 402d5fc:	9c401217 	ldw	r17,72(r19)
 402d600:	8800061e 	bne	r17,zero,402d61c <__pow5mult+0x58>
 402d604:	00003406 	br	402d6d8 <__pow5mult+0x114>
 402d608:	8021d07a 	srai	r16,r16,1
 402d60c:	80001526 	beq	r16,zero,402d664 <__pow5mult+0xa0>
 402d610:	88800017 	ldw	r2,0(r17)
 402d614:	10001c26 	beq	r2,zero,402d688 <__pow5mult+0xc4>
 402d618:	1023883a 	mov	r17,r2
 402d61c:	8080004c 	andi	r2,r16,1
 402d620:	103ff926 	beq	r2,zero,402d608 <_gp+0xfffec408>
 402d624:	880d883a 	mov	r6,r17
 402d628:	900b883a 	mov	r5,r18
 402d62c:	9809883a 	mov	r4,r19
 402d630:	402d3cc0 	call	402d3cc <__multiply>
 402d634:	90001b26 	beq	r18,zero,402d6a4 <__pow5mult+0xe0>
 402d638:	91000117 	ldw	r4,4(r18)
 402d63c:	98c01317 	ldw	r3,76(r19)
 402d640:	8021d07a 	srai	r16,r16,1
 402d644:	2109883a 	add	r4,r4,r4
 402d648:	2109883a 	add	r4,r4,r4
 402d64c:	1907883a 	add	r3,r3,r4
 402d650:	19000017 	ldw	r4,0(r3)
 402d654:	91000015 	stw	r4,0(r18)
 402d658:	1c800015 	stw	r18,0(r3)
 402d65c:	1025883a 	mov	r18,r2
 402d660:	803feb1e 	bne	r16,zero,402d610 <_gp+0xfffec410>
 402d664:	9005883a 	mov	r2,r18
 402d668:	dfc00517 	ldw	ra,20(sp)
 402d66c:	dd000417 	ldw	r20,16(sp)
 402d670:	dcc00317 	ldw	r19,12(sp)
 402d674:	dc800217 	ldw	r18,8(sp)
 402d678:	dc400117 	ldw	r17,4(sp)
 402d67c:	dc000017 	ldw	r16,0(sp)
 402d680:	dec00604 	addi	sp,sp,24
 402d684:	f800283a 	ret
 402d688:	880d883a 	mov	r6,r17
 402d68c:	880b883a 	mov	r5,r17
 402d690:	9809883a 	mov	r4,r19
 402d694:	402d3cc0 	call	402d3cc <__multiply>
 402d698:	88800015 	stw	r2,0(r17)
 402d69c:	10000015 	stw	zero,0(r2)
 402d6a0:	003fdd06 	br	402d618 <_gp+0xfffec418>
 402d6a4:	1025883a 	mov	r18,r2
 402d6a8:	003fd706 	br	402d608 <_gp+0xfffec408>
 402d6ac:	10bfffc4 	addi	r2,r2,-1
 402d6b0:	1085883a 	add	r2,r2,r2
 402d6b4:	00c100f4 	movhi	r3,1027
 402d6b8:	18dd3104 	addi	r3,r3,29892
 402d6bc:	1085883a 	add	r2,r2,r2
 402d6c0:	1885883a 	add	r2,r3,r2
 402d6c4:	11800017 	ldw	r6,0(r2)
 402d6c8:	000f883a 	mov	r7,zero
 402d6cc:	402d0540 	call	402d054 <__multadd>
 402d6d0:	1025883a 	mov	r18,r2
 402d6d4:	003fc706 	br	402d5f4 <_gp+0xfffec3f4>
 402d6d8:	05000044 	movi	r20,1
 402d6dc:	a00b883a 	mov	r5,r20
 402d6e0:	9809883a 	mov	r4,r19
 402d6e4:	402cf840 	call	402cf84 <_Balloc>
 402d6e8:	1023883a 	mov	r17,r2
 402d6ec:	00809c44 	movi	r2,625
 402d6f0:	88800515 	stw	r2,20(r17)
 402d6f4:	8d000415 	stw	r20,16(r17)
 402d6f8:	9c401215 	stw	r17,72(r19)
 402d6fc:	88000015 	stw	zero,0(r17)
 402d700:	003fc606 	br	402d61c <_gp+0xfffec41c>

0402d704 <__lshift>:
 402d704:	defff904 	addi	sp,sp,-28
 402d708:	dd400515 	stw	r21,20(sp)
 402d70c:	dcc00315 	stw	r19,12(sp)
 402d710:	302bd17a 	srai	r21,r6,5
 402d714:	2cc00417 	ldw	r19,16(r5)
 402d718:	28800217 	ldw	r2,8(r5)
 402d71c:	dd000415 	stw	r20,16(sp)
 402d720:	ace7883a 	add	r19,r21,r19
 402d724:	dc800215 	stw	r18,8(sp)
 402d728:	dc400115 	stw	r17,4(sp)
 402d72c:	dc000015 	stw	r16,0(sp)
 402d730:	dfc00615 	stw	ra,24(sp)
 402d734:	9c000044 	addi	r16,r19,1
 402d738:	2823883a 	mov	r17,r5
 402d73c:	3029883a 	mov	r20,r6
 402d740:	2025883a 	mov	r18,r4
 402d744:	29400117 	ldw	r5,4(r5)
 402d748:	1400030e 	bge	r2,r16,402d758 <__lshift+0x54>
 402d74c:	1085883a 	add	r2,r2,r2
 402d750:	29400044 	addi	r5,r5,1
 402d754:	143ffd16 	blt	r2,r16,402d74c <_gp+0xfffec54c>
 402d758:	9009883a 	mov	r4,r18
 402d75c:	402cf840 	call	402cf84 <_Balloc>
 402d760:	10c00504 	addi	r3,r2,20
 402d764:	0540070e 	bge	zero,r21,402d784 <__lshift+0x80>
 402d768:	ad6b883a 	add	r21,r21,r21
 402d76c:	ad6b883a 	add	r21,r21,r21
 402d770:	1809883a 	mov	r4,r3
 402d774:	1d47883a 	add	r3,r3,r21
 402d778:	20000015 	stw	zero,0(r4)
 402d77c:	21000104 	addi	r4,r4,4
 402d780:	193ffd1e 	bne	r3,r4,402d778 <_gp+0xfffec578>
 402d784:	8a000417 	ldw	r8,16(r17)
 402d788:	89000504 	addi	r4,r17,20
 402d78c:	a18007cc 	andi	r6,r20,31
 402d790:	4211883a 	add	r8,r8,r8
 402d794:	4211883a 	add	r8,r8,r8
 402d798:	2211883a 	add	r8,r4,r8
 402d79c:	30002326 	beq	r6,zero,402d82c <__lshift+0x128>
 402d7a0:	02400804 	movi	r9,32
 402d7a4:	4993c83a 	sub	r9,r9,r6
 402d7a8:	000b883a 	mov	r5,zero
 402d7ac:	21c00017 	ldw	r7,0(r4)
 402d7b0:	1815883a 	mov	r10,r3
 402d7b4:	18c00104 	addi	r3,r3,4
 402d7b8:	398e983a 	sll	r7,r7,r6
 402d7bc:	21000104 	addi	r4,r4,4
 402d7c0:	394ab03a 	or	r5,r7,r5
 402d7c4:	197fff15 	stw	r5,-4(r3)
 402d7c8:	217fff17 	ldw	r5,-4(r4)
 402d7cc:	2a4ad83a 	srl	r5,r5,r9
 402d7d0:	223ff636 	bltu	r4,r8,402d7ac <_gp+0xfffec5ac>
 402d7d4:	51400115 	stw	r5,4(r10)
 402d7d8:	28001a1e 	bne	r5,zero,402d844 <__lshift+0x140>
 402d7dc:	843fffc4 	addi	r16,r16,-1
 402d7e0:	14000415 	stw	r16,16(r2)
 402d7e4:	88000826 	beq	r17,zero,402d808 <__lshift+0x104>
 402d7e8:	89000117 	ldw	r4,4(r17)
 402d7ec:	90c01317 	ldw	r3,76(r18)
 402d7f0:	2109883a 	add	r4,r4,r4
 402d7f4:	2109883a 	add	r4,r4,r4
 402d7f8:	1907883a 	add	r3,r3,r4
 402d7fc:	19000017 	ldw	r4,0(r3)
 402d800:	89000015 	stw	r4,0(r17)
 402d804:	1c400015 	stw	r17,0(r3)
 402d808:	dfc00617 	ldw	ra,24(sp)
 402d80c:	dd400517 	ldw	r21,20(sp)
 402d810:	dd000417 	ldw	r20,16(sp)
 402d814:	dcc00317 	ldw	r19,12(sp)
 402d818:	dc800217 	ldw	r18,8(sp)
 402d81c:	dc400117 	ldw	r17,4(sp)
 402d820:	dc000017 	ldw	r16,0(sp)
 402d824:	dec00704 	addi	sp,sp,28
 402d828:	f800283a 	ret
 402d82c:	21400017 	ldw	r5,0(r4)
 402d830:	18c00104 	addi	r3,r3,4
 402d834:	21000104 	addi	r4,r4,4
 402d838:	197fff15 	stw	r5,-4(r3)
 402d83c:	223ffb36 	bltu	r4,r8,402d82c <_gp+0xfffec62c>
 402d840:	003fe606 	br	402d7dc <_gp+0xfffec5dc>
 402d844:	9c000084 	addi	r16,r19,2
 402d848:	003fe406 	br	402d7dc <_gp+0xfffec5dc>

0402d84c <__mcmp>:
 402d84c:	20800417 	ldw	r2,16(r4)
 402d850:	28c00417 	ldw	r3,16(r5)
 402d854:	10c5c83a 	sub	r2,r2,r3
 402d858:	1000111e 	bne	r2,zero,402d8a0 <__mcmp+0x54>
 402d85c:	18c7883a 	add	r3,r3,r3
 402d860:	18c7883a 	add	r3,r3,r3
 402d864:	21000504 	addi	r4,r4,20
 402d868:	29400504 	addi	r5,r5,20
 402d86c:	20c5883a 	add	r2,r4,r3
 402d870:	28cb883a 	add	r5,r5,r3
 402d874:	00000106 	br	402d87c <__mcmp+0x30>
 402d878:	20800a2e 	bgeu	r4,r2,402d8a4 <__mcmp+0x58>
 402d87c:	10bfff04 	addi	r2,r2,-4
 402d880:	297fff04 	addi	r5,r5,-4
 402d884:	11800017 	ldw	r6,0(r2)
 402d888:	28c00017 	ldw	r3,0(r5)
 402d88c:	30fffa26 	beq	r6,r3,402d878 <_gp+0xfffec678>
 402d890:	30c00236 	bltu	r6,r3,402d89c <__mcmp+0x50>
 402d894:	00800044 	movi	r2,1
 402d898:	f800283a 	ret
 402d89c:	00bfffc4 	movi	r2,-1
 402d8a0:	f800283a 	ret
 402d8a4:	0005883a 	mov	r2,zero
 402d8a8:	f800283a 	ret

0402d8ac <__mdiff>:
 402d8ac:	28c00417 	ldw	r3,16(r5)
 402d8b0:	30800417 	ldw	r2,16(r6)
 402d8b4:	defffa04 	addi	sp,sp,-24
 402d8b8:	dcc00315 	stw	r19,12(sp)
 402d8bc:	dc800215 	stw	r18,8(sp)
 402d8c0:	dfc00515 	stw	ra,20(sp)
 402d8c4:	dd000415 	stw	r20,16(sp)
 402d8c8:	dc400115 	stw	r17,4(sp)
 402d8cc:	dc000015 	stw	r16,0(sp)
 402d8d0:	1887c83a 	sub	r3,r3,r2
 402d8d4:	2825883a 	mov	r18,r5
 402d8d8:	3027883a 	mov	r19,r6
 402d8dc:	1800141e 	bne	r3,zero,402d930 <__mdiff+0x84>
 402d8e0:	1085883a 	add	r2,r2,r2
 402d8e4:	1085883a 	add	r2,r2,r2
 402d8e8:	2a000504 	addi	r8,r5,20
 402d8ec:	34000504 	addi	r16,r6,20
 402d8f0:	4087883a 	add	r3,r8,r2
 402d8f4:	8085883a 	add	r2,r16,r2
 402d8f8:	00000106 	br	402d900 <__mdiff+0x54>
 402d8fc:	40c0592e 	bgeu	r8,r3,402da64 <__mdiff+0x1b8>
 402d900:	18ffff04 	addi	r3,r3,-4
 402d904:	10bfff04 	addi	r2,r2,-4
 402d908:	19c00017 	ldw	r7,0(r3)
 402d90c:	11400017 	ldw	r5,0(r2)
 402d910:	397ffa26 	beq	r7,r5,402d8fc <_gp+0xfffec6fc>
 402d914:	3940592e 	bgeu	r7,r5,402da7c <__mdiff+0x1d0>
 402d918:	9005883a 	mov	r2,r18
 402d91c:	4023883a 	mov	r17,r8
 402d920:	9825883a 	mov	r18,r19
 402d924:	05000044 	movi	r20,1
 402d928:	1027883a 	mov	r19,r2
 402d92c:	00000406 	br	402d940 <__mdiff+0x94>
 402d930:	18005616 	blt	r3,zero,402da8c <__mdiff+0x1e0>
 402d934:	34400504 	addi	r17,r6,20
 402d938:	2c000504 	addi	r16,r5,20
 402d93c:	0029883a 	mov	r20,zero
 402d940:	91400117 	ldw	r5,4(r18)
 402d944:	402cf840 	call	402cf84 <_Balloc>
 402d948:	92400417 	ldw	r9,16(r18)
 402d94c:	9b000417 	ldw	r12,16(r19)
 402d950:	12c00504 	addi	r11,r2,20
 402d954:	4a51883a 	add	r8,r9,r9
 402d958:	6319883a 	add	r12,r12,r12
 402d95c:	4211883a 	add	r8,r8,r8
 402d960:	6319883a 	add	r12,r12,r12
 402d964:	15000315 	stw	r20,12(r2)
 402d968:	8211883a 	add	r8,r16,r8
 402d96c:	8b19883a 	add	r12,r17,r12
 402d970:	0007883a 	mov	r3,zero
 402d974:	81400017 	ldw	r5,0(r16)
 402d978:	89c00017 	ldw	r7,0(r17)
 402d97c:	59800104 	addi	r6,r11,4
 402d980:	293fffcc 	andi	r4,r5,65535
 402d984:	20c7883a 	add	r3,r4,r3
 402d988:	393fffcc 	andi	r4,r7,65535
 402d98c:	1909c83a 	sub	r4,r3,r4
 402d990:	280ad43a 	srli	r5,r5,16
 402d994:	380ed43a 	srli	r7,r7,16
 402d998:	2007d43a 	srai	r3,r4,16
 402d99c:	213fffcc 	andi	r4,r4,65535
 402d9a0:	29cbc83a 	sub	r5,r5,r7
 402d9a4:	28c7883a 	add	r3,r5,r3
 402d9a8:	180a943a 	slli	r5,r3,16
 402d9ac:	8c400104 	addi	r17,r17,4
 402d9b0:	84000104 	addi	r16,r16,4
 402d9b4:	2908b03a 	or	r4,r5,r4
 402d9b8:	59000015 	stw	r4,0(r11)
 402d9bc:	1807d43a 	srai	r3,r3,16
 402d9c0:	3015883a 	mov	r10,r6
 402d9c4:	3017883a 	mov	r11,r6
 402d9c8:	8b3fea36 	bltu	r17,r12,402d974 <_gp+0xfffec774>
 402d9cc:	8200162e 	bgeu	r16,r8,402da28 <__mdiff+0x17c>
 402d9d0:	8017883a 	mov	r11,r16
 402d9d4:	59400017 	ldw	r5,0(r11)
 402d9d8:	31800104 	addi	r6,r6,4
 402d9dc:	5ac00104 	addi	r11,r11,4
 402d9e0:	293fffcc 	andi	r4,r5,65535
 402d9e4:	20c7883a 	add	r3,r4,r3
 402d9e8:	280ed43a 	srli	r7,r5,16
 402d9ec:	180bd43a 	srai	r5,r3,16
 402d9f0:	193fffcc 	andi	r4,r3,65535
 402d9f4:	3947883a 	add	r3,r7,r5
 402d9f8:	180a943a 	slli	r5,r3,16
 402d9fc:	1807d43a 	srai	r3,r3,16
 402da00:	2908b03a 	or	r4,r5,r4
 402da04:	313fff15 	stw	r4,-4(r6)
 402da08:	5a3ff236 	bltu	r11,r8,402d9d4 <_gp+0xfffec7d4>
 402da0c:	0406303a 	nor	r3,zero,r16
 402da10:	1a07883a 	add	r3,r3,r8
 402da14:	1806d0ba 	srli	r3,r3,2
 402da18:	18c00044 	addi	r3,r3,1
 402da1c:	18c7883a 	add	r3,r3,r3
 402da20:	18c7883a 	add	r3,r3,r3
 402da24:	50d5883a 	add	r10,r10,r3
 402da28:	50ffff04 	addi	r3,r10,-4
 402da2c:	2000041e 	bne	r4,zero,402da40 <__mdiff+0x194>
 402da30:	18ffff04 	addi	r3,r3,-4
 402da34:	19000017 	ldw	r4,0(r3)
 402da38:	4a7fffc4 	addi	r9,r9,-1
 402da3c:	203ffc26 	beq	r4,zero,402da30 <_gp+0xfffec830>
 402da40:	12400415 	stw	r9,16(r2)
 402da44:	dfc00517 	ldw	ra,20(sp)
 402da48:	dd000417 	ldw	r20,16(sp)
 402da4c:	dcc00317 	ldw	r19,12(sp)
 402da50:	dc800217 	ldw	r18,8(sp)
 402da54:	dc400117 	ldw	r17,4(sp)
 402da58:	dc000017 	ldw	r16,0(sp)
 402da5c:	dec00604 	addi	sp,sp,24
 402da60:	f800283a 	ret
 402da64:	000b883a 	mov	r5,zero
 402da68:	402cf840 	call	402cf84 <_Balloc>
 402da6c:	00c00044 	movi	r3,1
 402da70:	10c00415 	stw	r3,16(r2)
 402da74:	10000515 	stw	zero,20(r2)
 402da78:	003ff206 	br	402da44 <_gp+0xfffec844>
 402da7c:	8023883a 	mov	r17,r16
 402da80:	0029883a 	mov	r20,zero
 402da84:	4021883a 	mov	r16,r8
 402da88:	003fad06 	br	402d940 <_gp+0xfffec740>
 402da8c:	9005883a 	mov	r2,r18
 402da90:	94400504 	addi	r17,r18,20
 402da94:	9c000504 	addi	r16,r19,20
 402da98:	9825883a 	mov	r18,r19
 402da9c:	05000044 	movi	r20,1
 402daa0:	1027883a 	mov	r19,r2
 402daa4:	003fa606 	br	402d940 <_gp+0xfffec740>

0402daa8 <__ulp>:
 402daa8:	295ffc2c 	andhi	r5,r5,32752
 402daac:	00bf3034 	movhi	r2,64704
 402dab0:	2887883a 	add	r3,r5,r2
 402dab4:	00c0020e 	bge	zero,r3,402dac0 <__ulp+0x18>
 402dab8:	0005883a 	mov	r2,zero
 402dabc:	f800283a 	ret
 402dac0:	00c7c83a 	sub	r3,zero,r3
 402dac4:	1807d53a 	srai	r3,r3,20
 402dac8:	008004c4 	movi	r2,19
 402dacc:	10c00b0e 	bge	r2,r3,402dafc <__ulp+0x54>
 402dad0:	18bffb04 	addi	r2,r3,-20
 402dad4:	01000784 	movi	r4,30
 402dad8:	0007883a 	mov	r3,zero
 402dadc:	20800516 	blt	r4,r2,402daf4 <__ulp+0x4c>
 402dae0:	010007c4 	movi	r4,31
 402dae4:	2089c83a 	sub	r4,r4,r2
 402dae8:	00800044 	movi	r2,1
 402daec:	1104983a 	sll	r2,r2,r4
 402daf0:	f800283a 	ret
 402daf4:	00800044 	movi	r2,1
 402daf8:	f800283a 	ret
 402dafc:	01400234 	movhi	r5,8
 402db00:	28c7d83a 	sra	r3,r5,r3
 402db04:	0005883a 	mov	r2,zero
 402db08:	f800283a 	ret

0402db0c <__b2d>:
 402db0c:	defffa04 	addi	sp,sp,-24
 402db10:	dc000015 	stw	r16,0(sp)
 402db14:	24000417 	ldw	r16,16(r4)
 402db18:	dc400115 	stw	r17,4(sp)
 402db1c:	24400504 	addi	r17,r4,20
 402db20:	8421883a 	add	r16,r16,r16
 402db24:	8421883a 	add	r16,r16,r16
 402db28:	8c21883a 	add	r16,r17,r16
 402db2c:	dc800215 	stw	r18,8(sp)
 402db30:	84bfff17 	ldw	r18,-4(r16)
 402db34:	dd000415 	stw	r20,16(sp)
 402db38:	dcc00315 	stw	r19,12(sp)
 402db3c:	9009883a 	mov	r4,r18
 402db40:	2829883a 	mov	r20,r5
 402db44:	dfc00515 	stw	ra,20(sp)
 402db48:	402d2780 	call	402d278 <__hi0bits>
 402db4c:	00c00804 	movi	r3,32
 402db50:	1889c83a 	sub	r4,r3,r2
 402db54:	a1000015 	stw	r4,0(r20)
 402db58:	01000284 	movi	r4,10
 402db5c:	84ffff04 	addi	r19,r16,-4
 402db60:	20801216 	blt	r4,r2,402dbac <__b2d+0xa0>
 402db64:	018002c4 	movi	r6,11
 402db68:	308dc83a 	sub	r6,r6,r2
 402db6c:	9186d83a 	srl	r3,r18,r6
 402db70:	18cffc34 	orhi	r3,r3,16368
 402db74:	8cc0212e 	bgeu	r17,r19,402dbfc <__b2d+0xf0>
 402db78:	813ffe17 	ldw	r4,-8(r16)
 402db7c:	218cd83a 	srl	r6,r4,r6
 402db80:	10800544 	addi	r2,r2,21
 402db84:	9084983a 	sll	r2,r18,r2
 402db88:	1184b03a 	or	r2,r2,r6
 402db8c:	dfc00517 	ldw	ra,20(sp)
 402db90:	dd000417 	ldw	r20,16(sp)
 402db94:	dcc00317 	ldw	r19,12(sp)
 402db98:	dc800217 	ldw	r18,8(sp)
 402db9c:	dc400117 	ldw	r17,4(sp)
 402dba0:	dc000017 	ldw	r16,0(sp)
 402dba4:	dec00604 	addi	sp,sp,24
 402dba8:	f800283a 	ret
 402dbac:	8cc00f2e 	bgeu	r17,r19,402dbec <__b2d+0xe0>
 402dbb0:	117ffd44 	addi	r5,r2,-11
 402dbb4:	80bffe17 	ldw	r2,-8(r16)
 402dbb8:	28000e26 	beq	r5,zero,402dbf4 <__b2d+0xe8>
 402dbbc:	1949c83a 	sub	r4,r3,r5
 402dbc0:	9164983a 	sll	r18,r18,r5
 402dbc4:	1106d83a 	srl	r3,r2,r4
 402dbc8:	81bffe04 	addi	r6,r16,-8
 402dbcc:	948ffc34 	orhi	r18,r18,16368
 402dbd0:	90c6b03a 	or	r3,r18,r3
 402dbd4:	89800e2e 	bgeu	r17,r6,402dc10 <__b2d+0x104>
 402dbd8:	81bffd17 	ldw	r6,-12(r16)
 402dbdc:	1144983a 	sll	r2,r2,r5
 402dbe0:	310ad83a 	srl	r5,r6,r4
 402dbe4:	2884b03a 	or	r2,r5,r2
 402dbe8:	003fe806 	br	402db8c <_gp+0xfffec98c>
 402dbec:	10bffd44 	addi	r2,r2,-11
 402dbf0:	1000041e 	bne	r2,zero,402dc04 <__b2d+0xf8>
 402dbf4:	90cffc34 	orhi	r3,r18,16368
 402dbf8:	003fe406 	br	402db8c <_gp+0xfffec98c>
 402dbfc:	000d883a 	mov	r6,zero
 402dc00:	003fdf06 	br	402db80 <_gp+0xfffec980>
 402dc04:	90a4983a 	sll	r18,r18,r2
 402dc08:	0005883a 	mov	r2,zero
 402dc0c:	003ff906 	br	402dbf4 <_gp+0xfffec9f4>
 402dc10:	1144983a 	sll	r2,r2,r5
 402dc14:	003fdd06 	br	402db8c <_gp+0xfffec98c>

0402dc18 <__d2b>:
 402dc18:	defff804 	addi	sp,sp,-32
 402dc1c:	dc000215 	stw	r16,8(sp)
 402dc20:	3021883a 	mov	r16,r6
 402dc24:	dc400315 	stw	r17,12(sp)
 402dc28:	8022907a 	slli	r17,r16,1
 402dc2c:	dd000615 	stw	r20,24(sp)
 402dc30:	2829883a 	mov	r20,r5
 402dc34:	01400044 	movi	r5,1
 402dc38:	dcc00515 	stw	r19,20(sp)
 402dc3c:	dc800415 	stw	r18,16(sp)
 402dc40:	dfc00715 	stw	ra,28(sp)
 402dc44:	3825883a 	mov	r18,r7
 402dc48:	8822d57a 	srli	r17,r17,21
 402dc4c:	402cf840 	call	402cf84 <_Balloc>
 402dc50:	1027883a 	mov	r19,r2
 402dc54:	00800434 	movhi	r2,16
 402dc58:	10bfffc4 	addi	r2,r2,-1
 402dc5c:	808c703a 	and	r6,r16,r2
 402dc60:	88000126 	beq	r17,zero,402dc68 <__d2b+0x50>
 402dc64:	31800434 	orhi	r6,r6,16
 402dc68:	d9800015 	stw	r6,0(sp)
 402dc6c:	a0002426 	beq	r20,zero,402dd00 <__d2b+0xe8>
 402dc70:	d9000104 	addi	r4,sp,4
 402dc74:	dd000115 	stw	r20,4(sp)
 402dc78:	402d2e00 	call	402d2e0 <__lo0bits>
 402dc7c:	d8c00017 	ldw	r3,0(sp)
 402dc80:	10002f1e 	bne	r2,zero,402dd40 <__d2b+0x128>
 402dc84:	d9000117 	ldw	r4,4(sp)
 402dc88:	99000515 	stw	r4,20(r19)
 402dc8c:	1821003a 	cmpeq	r16,r3,zero
 402dc90:	01000084 	movi	r4,2
 402dc94:	2421c83a 	sub	r16,r4,r16
 402dc98:	98c00615 	stw	r3,24(r19)
 402dc9c:	9c000415 	stw	r16,16(r19)
 402dca0:	88001f1e 	bne	r17,zero,402dd20 <__d2b+0x108>
 402dca4:	10bef384 	addi	r2,r2,-1074
 402dca8:	90800015 	stw	r2,0(r18)
 402dcac:	00900034 	movhi	r2,16384
 402dcb0:	10bfffc4 	addi	r2,r2,-1
 402dcb4:	8085883a 	add	r2,r16,r2
 402dcb8:	1085883a 	add	r2,r2,r2
 402dcbc:	1085883a 	add	r2,r2,r2
 402dcc0:	9885883a 	add	r2,r19,r2
 402dcc4:	11000517 	ldw	r4,20(r2)
 402dcc8:	8020917a 	slli	r16,r16,5
 402dccc:	402d2780 	call	402d278 <__hi0bits>
 402dcd0:	d8c00817 	ldw	r3,32(sp)
 402dcd4:	8085c83a 	sub	r2,r16,r2
 402dcd8:	18800015 	stw	r2,0(r3)
 402dcdc:	9805883a 	mov	r2,r19
 402dce0:	dfc00717 	ldw	ra,28(sp)
 402dce4:	dd000617 	ldw	r20,24(sp)
 402dce8:	dcc00517 	ldw	r19,20(sp)
 402dcec:	dc800417 	ldw	r18,16(sp)
 402dcf0:	dc400317 	ldw	r17,12(sp)
 402dcf4:	dc000217 	ldw	r16,8(sp)
 402dcf8:	dec00804 	addi	sp,sp,32
 402dcfc:	f800283a 	ret
 402dd00:	d809883a 	mov	r4,sp
 402dd04:	402d2e00 	call	402d2e0 <__lo0bits>
 402dd08:	d8c00017 	ldw	r3,0(sp)
 402dd0c:	04000044 	movi	r16,1
 402dd10:	9c000415 	stw	r16,16(r19)
 402dd14:	98c00515 	stw	r3,20(r19)
 402dd18:	10800804 	addi	r2,r2,32
 402dd1c:	883fe126 	beq	r17,zero,402dca4 <_gp+0xfffecaa4>
 402dd20:	00c00d44 	movi	r3,53
 402dd24:	8c7ef344 	addi	r17,r17,-1075
 402dd28:	88a3883a 	add	r17,r17,r2
 402dd2c:	1885c83a 	sub	r2,r3,r2
 402dd30:	d8c00817 	ldw	r3,32(sp)
 402dd34:	94400015 	stw	r17,0(r18)
 402dd38:	18800015 	stw	r2,0(r3)
 402dd3c:	003fe706 	br	402dcdc <_gp+0xfffecadc>
 402dd40:	01000804 	movi	r4,32
 402dd44:	2089c83a 	sub	r4,r4,r2
 402dd48:	1908983a 	sll	r4,r3,r4
 402dd4c:	d9400117 	ldw	r5,4(sp)
 402dd50:	1886d83a 	srl	r3,r3,r2
 402dd54:	2148b03a 	or	r4,r4,r5
 402dd58:	99000515 	stw	r4,20(r19)
 402dd5c:	d8c00015 	stw	r3,0(sp)
 402dd60:	003fca06 	br	402dc8c <_gp+0xfffeca8c>

0402dd64 <__ratio>:
 402dd64:	defff904 	addi	sp,sp,-28
 402dd68:	dc400315 	stw	r17,12(sp)
 402dd6c:	2823883a 	mov	r17,r5
 402dd70:	d9400104 	addi	r5,sp,4
 402dd74:	dfc00615 	stw	ra,24(sp)
 402dd78:	dcc00515 	stw	r19,20(sp)
 402dd7c:	dc800415 	stw	r18,16(sp)
 402dd80:	2027883a 	mov	r19,r4
 402dd84:	dc000215 	stw	r16,8(sp)
 402dd88:	402db0c0 	call	402db0c <__b2d>
 402dd8c:	d80b883a 	mov	r5,sp
 402dd90:	8809883a 	mov	r4,r17
 402dd94:	1025883a 	mov	r18,r2
 402dd98:	1821883a 	mov	r16,r3
 402dd9c:	402db0c0 	call	402db0c <__b2d>
 402dda0:	8a000417 	ldw	r8,16(r17)
 402dda4:	99000417 	ldw	r4,16(r19)
 402dda8:	d9400117 	ldw	r5,4(sp)
 402ddac:	2209c83a 	sub	r4,r4,r8
 402ddb0:	2010917a 	slli	r8,r4,5
 402ddb4:	d9000017 	ldw	r4,0(sp)
 402ddb8:	2909c83a 	sub	r4,r5,r4
 402ddbc:	4109883a 	add	r4,r8,r4
 402ddc0:	01000e0e 	bge	zero,r4,402ddfc <__ratio+0x98>
 402ddc4:	2008953a 	slli	r4,r4,20
 402ddc8:	2421883a 	add	r16,r4,r16
 402ddcc:	100d883a 	mov	r6,r2
 402ddd0:	180f883a 	mov	r7,r3
 402ddd4:	9009883a 	mov	r4,r18
 402ddd8:	800b883a 	mov	r5,r16
 402dddc:	4032a500 	call	4032a50 <__divdf3>
 402dde0:	dfc00617 	ldw	ra,24(sp)
 402dde4:	dcc00517 	ldw	r19,20(sp)
 402dde8:	dc800417 	ldw	r18,16(sp)
 402ddec:	dc400317 	ldw	r17,12(sp)
 402ddf0:	dc000217 	ldw	r16,8(sp)
 402ddf4:	dec00704 	addi	sp,sp,28
 402ddf8:	f800283a 	ret
 402ddfc:	2008953a 	slli	r4,r4,20
 402de00:	1907c83a 	sub	r3,r3,r4
 402de04:	003ff106 	br	402ddcc <_gp+0xfffecbcc>

0402de08 <_mprec_log10>:
 402de08:	defffe04 	addi	sp,sp,-8
 402de0c:	dc000015 	stw	r16,0(sp)
 402de10:	dfc00115 	stw	ra,4(sp)
 402de14:	008005c4 	movi	r2,23
 402de18:	2021883a 	mov	r16,r4
 402de1c:	11000d0e 	bge	r2,r4,402de54 <_mprec_log10+0x4c>
 402de20:	0005883a 	mov	r2,zero
 402de24:	00cffc34 	movhi	r3,16368
 402de28:	843fffc4 	addi	r16,r16,-1
 402de2c:	000d883a 	mov	r6,zero
 402de30:	01d00934 	movhi	r7,16420
 402de34:	1009883a 	mov	r4,r2
 402de38:	180b883a 	mov	r5,r3
 402de3c:	40236240 	call	4023624 <__muldf3>
 402de40:	803ff91e 	bne	r16,zero,402de28 <_gp+0xfffecc28>
 402de44:	dfc00117 	ldw	ra,4(sp)
 402de48:	dc000017 	ldw	r16,0(sp)
 402de4c:	dec00204 	addi	sp,sp,8
 402de50:	f800283a 	ret
 402de54:	202090fa 	slli	r16,r4,3
 402de58:	008100f4 	movhi	r2,1027
 402de5c:	109d4804 	addi	r2,r2,29984
 402de60:	1421883a 	add	r16,r2,r16
 402de64:	80800017 	ldw	r2,0(r16)
 402de68:	80c00117 	ldw	r3,4(r16)
 402de6c:	dfc00117 	ldw	ra,4(sp)
 402de70:	dc000017 	ldw	r16,0(sp)
 402de74:	dec00204 	addi	sp,sp,8
 402de78:	f800283a 	ret

0402de7c <__copybits>:
 402de7c:	297fffc4 	addi	r5,r5,-1
 402de80:	280fd17a 	srai	r7,r5,5
 402de84:	30c00417 	ldw	r3,16(r6)
 402de88:	30800504 	addi	r2,r6,20
 402de8c:	39c00044 	addi	r7,r7,1
 402de90:	18c7883a 	add	r3,r3,r3
 402de94:	39cf883a 	add	r7,r7,r7
 402de98:	18c7883a 	add	r3,r3,r3
 402de9c:	39cf883a 	add	r7,r7,r7
 402dea0:	10c7883a 	add	r3,r2,r3
 402dea4:	21cf883a 	add	r7,r4,r7
 402dea8:	10c00d2e 	bgeu	r2,r3,402dee0 <__copybits+0x64>
 402deac:	200b883a 	mov	r5,r4
 402deb0:	12000017 	ldw	r8,0(r2)
 402deb4:	29400104 	addi	r5,r5,4
 402deb8:	10800104 	addi	r2,r2,4
 402debc:	2a3fff15 	stw	r8,-4(r5)
 402dec0:	10fffb36 	bltu	r2,r3,402deb0 <_gp+0xfffeccb0>
 402dec4:	1985c83a 	sub	r2,r3,r6
 402dec8:	10bffac4 	addi	r2,r2,-21
 402decc:	1004d0ba 	srli	r2,r2,2
 402ded0:	10800044 	addi	r2,r2,1
 402ded4:	1085883a 	add	r2,r2,r2
 402ded8:	1085883a 	add	r2,r2,r2
 402dedc:	2089883a 	add	r4,r4,r2
 402dee0:	21c0032e 	bgeu	r4,r7,402def0 <__copybits+0x74>
 402dee4:	20000015 	stw	zero,0(r4)
 402dee8:	21000104 	addi	r4,r4,4
 402deec:	21fffd36 	bltu	r4,r7,402dee4 <_gp+0xfffecce4>
 402def0:	f800283a 	ret

0402def4 <__any_on>:
 402def4:	20c00417 	ldw	r3,16(r4)
 402def8:	2805d17a 	srai	r2,r5,5
 402defc:	21000504 	addi	r4,r4,20
 402df00:	18800d0e 	bge	r3,r2,402df38 <__any_on+0x44>
 402df04:	18c7883a 	add	r3,r3,r3
 402df08:	18c7883a 	add	r3,r3,r3
 402df0c:	20c7883a 	add	r3,r4,r3
 402df10:	20c0192e 	bgeu	r4,r3,402df78 <__any_on+0x84>
 402df14:	18bfff17 	ldw	r2,-4(r3)
 402df18:	18ffff04 	addi	r3,r3,-4
 402df1c:	1000041e 	bne	r2,zero,402df30 <__any_on+0x3c>
 402df20:	20c0142e 	bgeu	r4,r3,402df74 <__any_on+0x80>
 402df24:	18ffff04 	addi	r3,r3,-4
 402df28:	19400017 	ldw	r5,0(r3)
 402df2c:	283ffc26 	beq	r5,zero,402df20 <_gp+0xfffecd20>
 402df30:	00800044 	movi	r2,1
 402df34:	f800283a 	ret
 402df38:	10c00a0e 	bge	r2,r3,402df64 <__any_on+0x70>
 402df3c:	1085883a 	add	r2,r2,r2
 402df40:	1085883a 	add	r2,r2,r2
 402df44:	294007cc 	andi	r5,r5,31
 402df48:	2087883a 	add	r3,r4,r2
 402df4c:	283ff026 	beq	r5,zero,402df10 <_gp+0xfffecd10>
 402df50:	19800017 	ldw	r6,0(r3)
 402df54:	3144d83a 	srl	r2,r6,r5
 402df58:	114a983a 	sll	r5,r2,r5
 402df5c:	317ff41e 	bne	r6,r5,402df30 <_gp+0xfffecd30>
 402df60:	003feb06 	br	402df10 <_gp+0xfffecd10>
 402df64:	1085883a 	add	r2,r2,r2
 402df68:	1085883a 	add	r2,r2,r2
 402df6c:	2087883a 	add	r3,r4,r2
 402df70:	003fe706 	br	402df10 <_gp+0xfffecd10>
 402df74:	f800283a 	ret
 402df78:	0005883a 	mov	r2,zero
 402df7c:	f800283a 	ret

0402df80 <_read_r>:
 402df80:	defffd04 	addi	sp,sp,-12
 402df84:	2805883a 	mov	r2,r5
 402df88:	dc000015 	stw	r16,0(sp)
 402df8c:	04010134 	movhi	r16,1028
 402df90:	dc400115 	stw	r17,4(sp)
 402df94:	300b883a 	mov	r5,r6
 402df98:	842b4c04 	addi	r16,r16,-21200
 402df9c:	2023883a 	mov	r17,r4
 402dfa0:	380d883a 	mov	r6,r7
 402dfa4:	1009883a 	mov	r4,r2
 402dfa8:	dfc00215 	stw	ra,8(sp)
 402dfac:	80000015 	stw	zero,0(r16)
 402dfb0:	4034a700 	call	4034a70 <read>
 402dfb4:	00ffffc4 	movi	r3,-1
 402dfb8:	10c00526 	beq	r2,r3,402dfd0 <_read_r+0x50>
 402dfbc:	dfc00217 	ldw	ra,8(sp)
 402dfc0:	dc400117 	ldw	r17,4(sp)
 402dfc4:	dc000017 	ldw	r16,0(sp)
 402dfc8:	dec00304 	addi	sp,sp,12
 402dfcc:	f800283a 	ret
 402dfd0:	80c00017 	ldw	r3,0(r16)
 402dfd4:	183ff926 	beq	r3,zero,402dfbc <_gp+0xfffecdbc>
 402dfd8:	88c00015 	stw	r3,0(r17)
 402dfdc:	003ff706 	br	402dfbc <_gp+0xfffecdbc>

0402dfe0 <_realloc_r>:
 402dfe0:	defff604 	addi	sp,sp,-40
 402dfe4:	dc800215 	stw	r18,8(sp)
 402dfe8:	dfc00915 	stw	ra,36(sp)
 402dfec:	df000815 	stw	fp,32(sp)
 402dff0:	ddc00715 	stw	r23,28(sp)
 402dff4:	dd800615 	stw	r22,24(sp)
 402dff8:	dd400515 	stw	r21,20(sp)
 402dffc:	dd000415 	stw	r20,16(sp)
 402e000:	dcc00315 	stw	r19,12(sp)
 402e004:	dc400115 	stw	r17,4(sp)
 402e008:	dc000015 	stw	r16,0(sp)
 402e00c:	3025883a 	mov	r18,r6
 402e010:	2800b726 	beq	r5,zero,402e2f0 <_realloc_r+0x310>
 402e014:	282b883a 	mov	r21,r5
 402e018:	2029883a 	mov	r20,r4
 402e01c:	40345300 	call	4034530 <__malloc_lock>
 402e020:	a8bfff17 	ldw	r2,-4(r21)
 402e024:	043fff04 	movi	r16,-4
 402e028:	90c002c4 	addi	r3,r18,11
 402e02c:	01000584 	movi	r4,22
 402e030:	acfffe04 	addi	r19,r21,-8
 402e034:	1420703a 	and	r16,r2,r16
 402e038:	20c0332e 	bgeu	r4,r3,402e108 <_realloc_r+0x128>
 402e03c:	047ffe04 	movi	r17,-8
 402e040:	1c62703a 	and	r17,r3,r17
 402e044:	8807883a 	mov	r3,r17
 402e048:	88005816 	blt	r17,zero,402e1ac <_realloc_r+0x1cc>
 402e04c:	8c805736 	bltu	r17,r18,402e1ac <_realloc_r+0x1cc>
 402e050:	80c0300e 	bge	r16,r3,402e114 <_realloc_r+0x134>
 402e054:	070100f4 	movhi	fp,1027
 402e058:	e71ede04 	addi	fp,fp,31608
 402e05c:	e1c00217 	ldw	r7,8(fp)
 402e060:	9c09883a 	add	r4,r19,r16
 402e064:	22000117 	ldw	r8,4(r4)
 402e068:	21c06326 	beq	r4,r7,402e1f8 <_realloc_r+0x218>
 402e06c:	017fff84 	movi	r5,-2
 402e070:	414a703a 	and	r5,r8,r5
 402e074:	214b883a 	add	r5,r4,r5
 402e078:	29800117 	ldw	r6,4(r5)
 402e07c:	3180004c 	andi	r6,r6,1
 402e080:	30003f26 	beq	r6,zero,402e180 <_realloc_r+0x1a0>
 402e084:	1080004c 	andi	r2,r2,1
 402e088:	10008326 	beq	r2,zero,402e298 <_realloc_r+0x2b8>
 402e08c:	900b883a 	mov	r5,r18
 402e090:	a009883a 	mov	r4,r20
 402e094:	402561c0 	call	402561c <_malloc_r>
 402e098:	1025883a 	mov	r18,r2
 402e09c:	10011e26 	beq	r2,zero,402e518 <_realloc_r+0x538>
 402e0a0:	a93fff17 	ldw	r4,-4(r21)
 402e0a4:	10fffe04 	addi	r3,r2,-8
 402e0a8:	00bfff84 	movi	r2,-2
 402e0ac:	2084703a 	and	r2,r4,r2
 402e0b0:	9885883a 	add	r2,r19,r2
 402e0b4:	1880ee26 	beq	r3,r2,402e470 <_realloc_r+0x490>
 402e0b8:	81bfff04 	addi	r6,r16,-4
 402e0bc:	00800904 	movi	r2,36
 402e0c0:	1180b836 	bltu	r2,r6,402e3a4 <_realloc_r+0x3c4>
 402e0c4:	00c004c4 	movi	r3,19
 402e0c8:	19809636 	bltu	r3,r6,402e324 <_realloc_r+0x344>
 402e0cc:	9005883a 	mov	r2,r18
 402e0d0:	a807883a 	mov	r3,r21
 402e0d4:	19000017 	ldw	r4,0(r3)
 402e0d8:	11000015 	stw	r4,0(r2)
 402e0dc:	19000117 	ldw	r4,4(r3)
 402e0e0:	11000115 	stw	r4,4(r2)
 402e0e4:	18c00217 	ldw	r3,8(r3)
 402e0e8:	10c00215 	stw	r3,8(r2)
 402e0ec:	a80b883a 	mov	r5,r21
 402e0f0:	a009883a 	mov	r4,r20
 402e0f4:	40249ec0 	call	40249ec <_free_r>
 402e0f8:	a009883a 	mov	r4,r20
 402e0fc:	40345540 	call	4034554 <__malloc_unlock>
 402e100:	9005883a 	mov	r2,r18
 402e104:	00001206 	br	402e150 <_realloc_r+0x170>
 402e108:	00c00404 	movi	r3,16
 402e10c:	1823883a 	mov	r17,r3
 402e110:	003fce06 	br	402e04c <_gp+0xfffece4c>
 402e114:	a825883a 	mov	r18,r21
 402e118:	8445c83a 	sub	r2,r16,r17
 402e11c:	00c003c4 	movi	r3,15
 402e120:	18802636 	bltu	r3,r2,402e1bc <_realloc_r+0x1dc>
 402e124:	99800117 	ldw	r6,4(r19)
 402e128:	9c07883a 	add	r3,r19,r16
 402e12c:	3180004c 	andi	r6,r6,1
 402e130:	3420b03a 	or	r16,r6,r16
 402e134:	9c000115 	stw	r16,4(r19)
 402e138:	18800117 	ldw	r2,4(r3)
 402e13c:	10800054 	ori	r2,r2,1
 402e140:	18800115 	stw	r2,4(r3)
 402e144:	a009883a 	mov	r4,r20
 402e148:	40345540 	call	4034554 <__malloc_unlock>
 402e14c:	9005883a 	mov	r2,r18
 402e150:	dfc00917 	ldw	ra,36(sp)
 402e154:	df000817 	ldw	fp,32(sp)
 402e158:	ddc00717 	ldw	r23,28(sp)
 402e15c:	dd800617 	ldw	r22,24(sp)
 402e160:	dd400517 	ldw	r21,20(sp)
 402e164:	dd000417 	ldw	r20,16(sp)
 402e168:	dcc00317 	ldw	r19,12(sp)
 402e16c:	dc800217 	ldw	r18,8(sp)
 402e170:	dc400117 	ldw	r17,4(sp)
 402e174:	dc000017 	ldw	r16,0(sp)
 402e178:	dec00a04 	addi	sp,sp,40
 402e17c:	f800283a 	ret
 402e180:	017fff04 	movi	r5,-4
 402e184:	414a703a 	and	r5,r8,r5
 402e188:	814d883a 	add	r6,r16,r5
 402e18c:	30c01f16 	blt	r6,r3,402e20c <_realloc_r+0x22c>
 402e190:	20800317 	ldw	r2,12(r4)
 402e194:	20c00217 	ldw	r3,8(r4)
 402e198:	a825883a 	mov	r18,r21
 402e19c:	3021883a 	mov	r16,r6
 402e1a0:	18800315 	stw	r2,12(r3)
 402e1a4:	10c00215 	stw	r3,8(r2)
 402e1a8:	003fdb06 	br	402e118 <_gp+0xfffecf18>
 402e1ac:	00800304 	movi	r2,12
 402e1b0:	a0800015 	stw	r2,0(r20)
 402e1b4:	0005883a 	mov	r2,zero
 402e1b8:	003fe506 	br	402e150 <_gp+0xfffecf50>
 402e1bc:	98c00117 	ldw	r3,4(r19)
 402e1c0:	9c4b883a 	add	r5,r19,r17
 402e1c4:	11000054 	ori	r4,r2,1
 402e1c8:	18c0004c 	andi	r3,r3,1
 402e1cc:	1c62b03a 	or	r17,r3,r17
 402e1d0:	9c400115 	stw	r17,4(r19)
 402e1d4:	29000115 	stw	r4,4(r5)
 402e1d8:	2885883a 	add	r2,r5,r2
 402e1dc:	10c00117 	ldw	r3,4(r2)
 402e1e0:	29400204 	addi	r5,r5,8
 402e1e4:	a009883a 	mov	r4,r20
 402e1e8:	18c00054 	ori	r3,r3,1
 402e1ec:	10c00115 	stw	r3,4(r2)
 402e1f0:	40249ec0 	call	40249ec <_free_r>
 402e1f4:	003fd306 	br	402e144 <_gp+0xfffecf44>
 402e1f8:	017fff04 	movi	r5,-4
 402e1fc:	414a703a 	and	r5,r8,r5
 402e200:	89800404 	addi	r6,r17,16
 402e204:	8151883a 	add	r8,r16,r5
 402e208:	4180590e 	bge	r8,r6,402e370 <_realloc_r+0x390>
 402e20c:	1080004c 	andi	r2,r2,1
 402e210:	103f9e1e 	bne	r2,zero,402e08c <_gp+0xfffece8c>
 402e214:	adbffe17 	ldw	r22,-8(r21)
 402e218:	00bfff04 	movi	r2,-4
 402e21c:	9dadc83a 	sub	r22,r19,r22
 402e220:	b1800117 	ldw	r6,4(r22)
 402e224:	3084703a 	and	r2,r6,r2
 402e228:	20002026 	beq	r4,zero,402e2ac <_realloc_r+0x2cc>
 402e22c:	80af883a 	add	r23,r16,r2
 402e230:	b96f883a 	add	r23,r23,r5
 402e234:	21c05f26 	beq	r4,r7,402e3b4 <_realloc_r+0x3d4>
 402e238:	b8c01c16 	blt	r23,r3,402e2ac <_realloc_r+0x2cc>
 402e23c:	20800317 	ldw	r2,12(r4)
 402e240:	20c00217 	ldw	r3,8(r4)
 402e244:	81bfff04 	addi	r6,r16,-4
 402e248:	01000904 	movi	r4,36
 402e24c:	18800315 	stw	r2,12(r3)
 402e250:	10c00215 	stw	r3,8(r2)
 402e254:	b0c00217 	ldw	r3,8(r22)
 402e258:	b0800317 	ldw	r2,12(r22)
 402e25c:	b4800204 	addi	r18,r22,8
 402e260:	18800315 	stw	r2,12(r3)
 402e264:	10c00215 	stw	r3,8(r2)
 402e268:	21801b36 	bltu	r4,r6,402e2d8 <_realloc_r+0x2f8>
 402e26c:	008004c4 	movi	r2,19
 402e270:	1180352e 	bgeu	r2,r6,402e348 <_realloc_r+0x368>
 402e274:	a8800017 	ldw	r2,0(r21)
 402e278:	b0800215 	stw	r2,8(r22)
 402e27c:	a8800117 	ldw	r2,4(r21)
 402e280:	b0800315 	stw	r2,12(r22)
 402e284:	008006c4 	movi	r2,27
 402e288:	11807f36 	bltu	r2,r6,402e488 <_realloc_r+0x4a8>
 402e28c:	b0800404 	addi	r2,r22,16
 402e290:	ad400204 	addi	r21,r21,8
 402e294:	00002d06 	br	402e34c <_realloc_r+0x36c>
 402e298:	adbffe17 	ldw	r22,-8(r21)
 402e29c:	00bfff04 	movi	r2,-4
 402e2a0:	9dadc83a 	sub	r22,r19,r22
 402e2a4:	b1000117 	ldw	r4,4(r22)
 402e2a8:	2084703a 	and	r2,r4,r2
 402e2ac:	b03f7726 	beq	r22,zero,402e08c <_gp+0xfffece8c>
 402e2b0:	80af883a 	add	r23,r16,r2
 402e2b4:	b8ff7516 	blt	r23,r3,402e08c <_gp+0xfffece8c>
 402e2b8:	b0800317 	ldw	r2,12(r22)
 402e2bc:	b0c00217 	ldw	r3,8(r22)
 402e2c0:	81bfff04 	addi	r6,r16,-4
 402e2c4:	01000904 	movi	r4,36
 402e2c8:	18800315 	stw	r2,12(r3)
 402e2cc:	10c00215 	stw	r3,8(r2)
 402e2d0:	b4800204 	addi	r18,r22,8
 402e2d4:	21bfe52e 	bgeu	r4,r6,402e26c <_gp+0xfffed06c>
 402e2d8:	a80b883a 	mov	r5,r21
 402e2dc:	9009883a 	mov	r4,r18
 402e2e0:	402ce280 	call	402ce28 <memmove>
 402e2e4:	b821883a 	mov	r16,r23
 402e2e8:	b027883a 	mov	r19,r22
 402e2ec:	003f8a06 	br	402e118 <_gp+0xfffecf18>
 402e2f0:	300b883a 	mov	r5,r6
 402e2f4:	dfc00917 	ldw	ra,36(sp)
 402e2f8:	df000817 	ldw	fp,32(sp)
 402e2fc:	ddc00717 	ldw	r23,28(sp)
 402e300:	dd800617 	ldw	r22,24(sp)
 402e304:	dd400517 	ldw	r21,20(sp)
 402e308:	dd000417 	ldw	r20,16(sp)
 402e30c:	dcc00317 	ldw	r19,12(sp)
 402e310:	dc800217 	ldw	r18,8(sp)
 402e314:	dc400117 	ldw	r17,4(sp)
 402e318:	dc000017 	ldw	r16,0(sp)
 402e31c:	dec00a04 	addi	sp,sp,40
 402e320:	402561c1 	jmpi	402561c <_malloc_r>
 402e324:	a8c00017 	ldw	r3,0(r21)
 402e328:	90c00015 	stw	r3,0(r18)
 402e32c:	a8c00117 	ldw	r3,4(r21)
 402e330:	90c00115 	stw	r3,4(r18)
 402e334:	00c006c4 	movi	r3,27
 402e338:	19804536 	bltu	r3,r6,402e450 <_realloc_r+0x470>
 402e33c:	90800204 	addi	r2,r18,8
 402e340:	a8c00204 	addi	r3,r21,8
 402e344:	003f6306 	br	402e0d4 <_gp+0xfffeced4>
 402e348:	9005883a 	mov	r2,r18
 402e34c:	a8c00017 	ldw	r3,0(r21)
 402e350:	b821883a 	mov	r16,r23
 402e354:	b027883a 	mov	r19,r22
 402e358:	10c00015 	stw	r3,0(r2)
 402e35c:	a8c00117 	ldw	r3,4(r21)
 402e360:	10c00115 	stw	r3,4(r2)
 402e364:	a8c00217 	ldw	r3,8(r21)
 402e368:	10c00215 	stw	r3,8(r2)
 402e36c:	003f6a06 	br	402e118 <_gp+0xfffecf18>
 402e370:	9c67883a 	add	r19,r19,r17
 402e374:	4445c83a 	sub	r2,r8,r17
 402e378:	e4c00215 	stw	r19,8(fp)
 402e37c:	10800054 	ori	r2,r2,1
 402e380:	98800115 	stw	r2,4(r19)
 402e384:	a8bfff17 	ldw	r2,-4(r21)
 402e388:	a009883a 	mov	r4,r20
 402e38c:	1080004c 	andi	r2,r2,1
 402e390:	1462b03a 	or	r17,r2,r17
 402e394:	ac7fff15 	stw	r17,-4(r21)
 402e398:	40345540 	call	4034554 <__malloc_unlock>
 402e39c:	a805883a 	mov	r2,r21
 402e3a0:	003f6b06 	br	402e150 <_gp+0xfffecf50>
 402e3a4:	a80b883a 	mov	r5,r21
 402e3a8:	9009883a 	mov	r4,r18
 402e3ac:	402ce280 	call	402ce28 <memmove>
 402e3b0:	003f4e06 	br	402e0ec <_gp+0xfffeceec>
 402e3b4:	89000404 	addi	r4,r17,16
 402e3b8:	b93fbc16 	blt	r23,r4,402e2ac <_gp+0xfffed0ac>
 402e3bc:	b0800317 	ldw	r2,12(r22)
 402e3c0:	b0c00217 	ldw	r3,8(r22)
 402e3c4:	81bfff04 	addi	r6,r16,-4
 402e3c8:	01000904 	movi	r4,36
 402e3cc:	18800315 	stw	r2,12(r3)
 402e3d0:	10c00215 	stw	r3,8(r2)
 402e3d4:	b4800204 	addi	r18,r22,8
 402e3d8:	21804336 	bltu	r4,r6,402e4e8 <_realloc_r+0x508>
 402e3dc:	008004c4 	movi	r2,19
 402e3e0:	11803f2e 	bgeu	r2,r6,402e4e0 <_realloc_r+0x500>
 402e3e4:	a8800017 	ldw	r2,0(r21)
 402e3e8:	b0800215 	stw	r2,8(r22)
 402e3ec:	a8800117 	ldw	r2,4(r21)
 402e3f0:	b0800315 	stw	r2,12(r22)
 402e3f4:	008006c4 	movi	r2,27
 402e3f8:	11803f36 	bltu	r2,r6,402e4f8 <_realloc_r+0x518>
 402e3fc:	b0800404 	addi	r2,r22,16
 402e400:	ad400204 	addi	r21,r21,8
 402e404:	a8c00017 	ldw	r3,0(r21)
 402e408:	10c00015 	stw	r3,0(r2)
 402e40c:	a8c00117 	ldw	r3,4(r21)
 402e410:	10c00115 	stw	r3,4(r2)
 402e414:	a8c00217 	ldw	r3,8(r21)
 402e418:	10c00215 	stw	r3,8(r2)
 402e41c:	b447883a 	add	r3,r22,r17
 402e420:	bc45c83a 	sub	r2,r23,r17
 402e424:	e0c00215 	stw	r3,8(fp)
 402e428:	10800054 	ori	r2,r2,1
 402e42c:	18800115 	stw	r2,4(r3)
 402e430:	b0800117 	ldw	r2,4(r22)
 402e434:	a009883a 	mov	r4,r20
 402e438:	1080004c 	andi	r2,r2,1
 402e43c:	1462b03a 	or	r17,r2,r17
 402e440:	b4400115 	stw	r17,4(r22)
 402e444:	40345540 	call	4034554 <__malloc_unlock>
 402e448:	9005883a 	mov	r2,r18
 402e44c:	003f4006 	br	402e150 <_gp+0xfffecf50>
 402e450:	a8c00217 	ldw	r3,8(r21)
 402e454:	90c00215 	stw	r3,8(r18)
 402e458:	a8c00317 	ldw	r3,12(r21)
 402e45c:	90c00315 	stw	r3,12(r18)
 402e460:	30801126 	beq	r6,r2,402e4a8 <_realloc_r+0x4c8>
 402e464:	90800404 	addi	r2,r18,16
 402e468:	a8c00404 	addi	r3,r21,16
 402e46c:	003f1906 	br	402e0d4 <_gp+0xfffeced4>
 402e470:	90ffff17 	ldw	r3,-4(r18)
 402e474:	00bfff04 	movi	r2,-4
 402e478:	a825883a 	mov	r18,r21
 402e47c:	1884703a 	and	r2,r3,r2
 402e480:	80a1883a 	add	r16,r16,r2
 402e484:	003f2406 	br	402e118 <_gp+0xfffecf18>
 402e488:	a8800217 	ldw	r2,8(r21)
 402e48c:	b0800415 	stw	r2,16(r22)
 402e490:	a8800317 	ldw	r2,12(r21)
 402e494:	b0800515 	stw	r2,20(r22)
 402e498:	31000a26 	beq	r6,r4,402e4c4 <_realloc_r+0x4e4>
 402e49c:	b0800604 	addi	r2,r22,24
 402e4a0:	ad400404 	addi	r21,r21,16
 402e4a4:	003fa906 	br	402e34c <_gp+0xfffed14c>
 402e4a8:	a9000417 	ldw	r4,16(r21)
 402e4ac:	90800604 	addi	r2,r18,24
 402e4b0:	a8c00604 	addi	r3,r21,24
 402e4b4:	91000415 	stw	r4,16(r18)
 402e4b8:	a9000517 	ldw	r4,20(r21)
 402e4bc:	91000515 	stw	r4,20(r18)
 402e4c0:	003f0406 	br	402e0d4 <_gp+0xfffeced4>
 402e4c4:	a8c00417 	ldw	r3,16(r21)
 402e4c8:	ad400604 	addi	r21,r21,24
 402e4cc:	b0800804 	addi	r2,r22,32
 402e4d0:	b0c00615 	stw	r3,24(r22)
 402e4d4:	a8ffff17 	ldw	r3,-4(r21)
 402e4d8:	b0c00715 	stw	r3,28(r22)
 402e4dc:	003f9b06 	br	402e34c <_gp+0xfffed14c>
 402e4e0:	9005883a 	mov	r2,r18
 402e4e4:	003fc706 	br	402e404 <_gp+0xfffed204>
 402e4e8:	a80b883a 	mov	r5,r21
 402e4ec:	9009883a 	mov	r4,r18
 402e4f0:	402ce280 	call	402ce28 <memmove>
 402e4f4:	003fc906 	br	402e41c <_gp+0xfffed21c>
 402e4f8:	a8800217 	ldw	r2,8(r21)
 402e4fc:	b0800415 	stw	r2,16(r22)
 402e500:	a8800317 	ldw	r2,12(r21)
 402e504:	b0800515 	stw	r2,20(r22)
 402e508:	31000726 	beq	r6,r4,402e528 <_realloc_r+0x548>
 402e50c:	b0800604 	addi	r2,r22,24
 402e510:	ad400404 	addi	r21,r21,16
 402e514:	003fbb06 	br	402e404 <_gp+0xfffed204>
 402e518:	a009883a 	mov	r4,r20
 402e51c:	40345540 	call	4034554 <__malloc_unlock>
 402e520:	0005883a 	mov	r2,zero
 402e524:	003f0a06 	br	402e150 <_gp+0xfffecf50>
 402e528:	a8c00417 	ldw	r3,16(r21)
 402e52c:	ad400604 	addi	r21,r21,24
 402e530:	b0800804 	addi	r2,r22,32
 402e534:	b0c00615 	stw	r3,24(r22)
 402e538:	a8ffff17 	ldw	r3,-4(r21)
 402e53c:	b0c00715 	stw	r3,28(r22)
 402e540:	003fb006 	br	402e404 <_gp+0xfffed204>

0402e544 <__fpclassifyd>:
 402e544:	00a00034 	movhi	r2,32768
 402e548:	10bfffc4 	addi	r2,r2,-1
 402e54c:	2884703a 	and	r2,r5,r2
 402e550:	10000726 	beq	r2,zero,402e570 <__fpclassifyd+0x2c>
 402e554:	00fffc34 	movhi	r3,65520
 402e558:	019ff834 	movhi	r6,32736
 402e55c:	28c7883a 	add	r3,r5,r3
 402e560:	31bfffc4 	addi	r6,r6,-1
 402e564:	30c00536 	bltu	r6,r3,402e57c <__fpclassifyd+0x38>
 402e568:	00800104 	movi	r2,4
 402e56c:	f800283a 	ret
 402e570:	2000021e 	bne	r4,zero,402e57c <__fpclassifyd+0x38>
 402e574:	00800084 	movi	r2,2
 402e578:	f800283a 	ret
 402e57c:	00dffc34 	movhi	r3,32752
 402e580:	019ff834 	movhi	r6,32736
 402e584:	28cb883a 	add	r5,r5,r3
 402e588:	31bfffc4 	addi	r6,r6,-1
 402e58c:	317ff62e 	bgeu	r6,r5,402e568 <_gp+0xfffed368>
 402e590:	01400434 	movhi	r5,16
 402e594:	297fffc4 	addi	r5,r5,-1
 402e598:	28800236 	bltu	r5,r2,402e5a4 <__fpclassifyd+0x60>
 402e59c:	008000c4 	movi	r2,3
 402e5a0:	f800283a 	ret
 402e5a4:	10c00226 	beq	r2,r3,402e5b0 <__fpclassifyd+0x6c>
 402e5a8:	0005883a 	mov	r2,zero
 402e5ac:	f800283a 	ret
 402e5b0:	2005003a 	cmpeq	r2,r4,zero
 402e5b4:	f800283a 	ret

0402e5b8 <strcmp>:
 402e5b8:	2144b03a 	or	r2,r4,r5
 402e5bc:	108000cc 	andi	r2,r2,3
 402e5c0:	1000171e 	bne	r2,zero,402e620 <strcmp+0x68>
 402e5c4:	20800017 	ldw	r2,0(r4)
 402e5c8:	28c00017 	ldw	r3,0(r5)
 402e5cc:	10c0141e 	bne	r2,r3,402e620 <strcmp+0x68>
 402e5d0:	027fbff4 	movhi	r9,65279
 402e5d4:	4a7fbfc4 	addi	r9,r9,-257
 402e5d8:	0086303a 	nor	r3,zero,r2
 402e5dc:	02202074 	movhi	r8,32897
 402e5e0:	1245883a 	add	r2,r2,r9
 402e5e4:	42202004 	addi	r8,r8,-32640
 402e5e8:	10c4703a 	and	r2,r2,r3
 402e5ec:	1204703a 	and	r2,r2,r8
 402e5f0:	10000226 	beq	r2,zero,402e5fc <strcmp+0x44>
 402e5f4:	00002306 	br	402e684 <strcmp+0xcc>
 402e5f8:	1000221e 	bne	r2,zero,402e684 <strcmp+0xcc>
 402e5fc:	21000104 	addi	r4,r4,4
 402e600:	20c00017 	ldw	r3,0(r4)
 402e604:	29400104 	addi	r5,r5,4
 402e608:	29800017 	ldw	r6,0(r5)
 402e60c:	1a4f883a 	add	r7,r3,r9
 402e610:	00c4303a 	nor	r2,zero,r3
 402e614:	3884703a 	and	r2,r7,r2
 402e618:	1204703a 	and	r2,r2,r8
 402e61c:	19bff626 	beq	r3,r6,402e5f8 <_gp+0xfffed3f8>
 402e620:	20800003 	ldbu	r2,0(r4)
 402e624:	10c03fcc 	andi	r3,r2,255
 402e628:	18c0201c 	xori	r3,r3,128
 402e62c:	18ffe004 	addi	r3,r3,-128
 402e630:	18000c26 	beq	r3,zero,402e664 <strcmp+0xac>
 402e634:	29800007 	ldb	r6,0(r5)
 402e638:	19800326 	beq	r3,r6,402e648 <strcmp+0x90>
 402e63c:	00001306 	br	402e68c <strcmp+0xd4>
 402e640:	29800007 	ldb	r6,0(r5)
 402e644:	11800b1e 	bne	r2,r6,402e674 <strcmp+0xbc>
 402e648:	21000044 	addi	r4,r4,1
 402e64c:	20c00003 	ldbu	r3,0(r4)
 402e650:	29400044 	addi	r5,r5,1
 402e654:	18803fcc 	andi	r2,r3,255
 402e658:	1080201c 	xori	r2,r2,128
 402e65c:	10bfe004 	addi	r2,r2,-128
 402e660:	103ff71e 	bne	r2,zero,402e640 <_gp+0xfffed440>
 402e664:	0007883a 	mov	r3,zero
 402e668:	28800003 	ldbu	r2,0(r5)
 402e66c:	1885c83a 	sub	r2,r3,r2
 402e670:	f800283a 	ret
 402e674:	28800003 	ldbu	r2,0(r5)
 402e678:	18c03fcc 	andi	r3,r3,255
 402e67c:	1885c83a 	sub	r2,r3,r2
 402e680:	f800283a 	ret
 402e684:	0005883a 	mov	r2,zero
 402e688:	f800283a 	ret
 402e68c:	10c03fcc 	andi	r3,r2,255
 402e690:	003ff506 	br	402e668 <_gp+0xfffed468>

0402e694 <__ssprint_r>:
 402e694:	30800217 	ldw	r2,8(r6)
 402e698:	defff604 	addi	sp,sp,-40
 402e69c:	dc800215 	stw	r18,8(sp)
 402e6a0:	dfc00915 	stw	ra,36(sp)
 402e6a4:	df000815 	stw	fp,32(sp)
 402e6a8:	ddc00715 	stw	r23,28(sp)
 402e6ac:	dd800615 	stw	r22,24(sp)
 402e6b0:	dd400515 	stw	r21,20(sp)
 402e6b4:	dd000415 	stw	r20,16(sp)
 402e6b8:	dcc00315 	stw	r19,12(sp)
 402e6bc:	dc400115 	stw	r17,4(sp)
 402e6c0:	dc000015 	stw	r16,0(sp)
 402e6c4:	3025883a 	mov	r18,r6
 402e6c8:	10005826 	beq	r2,zero,402e82c <__ssprint_r+0x198>
 402e6cc:	2027883a 	mov	r19,r4
 402e6d0:	35c00017 	ldw	r23,0(r6)
 402e6d4:	29000017 	ldw	r4,0(r5)
 402e6d8:	28800217 	ldw	r2,8(r5)
 402e6dc:	2823883a 	mov	r17,r5
 402e6e0:	0039883a 	mov	fp,zero
 402e6e4:	0021883a 	mov	r16,zero
 402e6e8:	80003926 	beq	r16,zero,402e7d0 <__ssprint_r+0x13c>
 402e6ec:	102b883a 	mov	r21,r2
 402e6f0:	102d883a 	mov	r22,r2
 402e6f4:	80803a36 	bltu	r16,r2,402e7e0 <__ssprint_r+0x14c>
 402e6f8:	88c0030b 	ldhu	r3,12(r17)
 402e6fc:	1881200c 	andi	r2,r3,1152
 402e700:	10002626 	beq	r2,zero,402e79c <__ssprint_r+0x108>
 402e704:	88800517 	ldw	r2,20(r17)
 402e708:	89400417 	ldw	r5,16(r17)
 402e70c:	81800044 	addi	r6,r16,1
 402e710:	108f883a 	add	r7,r2,r2
 402e714:	3885883a 	add	r2,r7,r2
 402e718:	100ed7fa 	srli	r7,r2,31
 402e71c:	216dc83a 	sub	r22,r4,r5
 402e720:	3589883a 	add	r4,r6,r22
 402e724:	3885883a 	add	r2,r7,r2
 402e728:	102bd07a 	srai	r21,r2,1
 402e72c:	a80d883a 	mov	r6,r21
 402e730:	a900022e 	bgeu	r21,r4,402e73c <__ssprint_r+0xa8>
 402e734:	202b883a 	mov	r21,r4
 402e738:	200d883a 	mov	r6,r4
 402e73c:	18c1000c 	andi	r3,r3,1024
 402e740:	18002a26 	beq	r3,zero,402e7ec <__ssprint_r+0x158>
 402e744:	300b883a 	mov	r5,r6
 402e748:	9809883a 	mov	r4,r19
 402e74c:	402561c0 	call	402561c <_malloc_r>
 402e750:	1029883a 	mov	r20,r2
 402e754:	10002c26 	beq	r2,zero,402e808 <__ssprint_r+0x174>
 402e758:	89400417 	ldw	r5,16(r17)
 402e75c:	b00d883a 	mov	r6,r22
 402e760:	1009883a 	mov	r4,r2
 402e764:	402cce00 	call	402cce0 <memcpy>
 402e768:	8880030b 	ldhu	r2,12(r17)
 402e76c:	00fedfc4 	movi	r3,-1153
 402e770:	10c4703a 	and	r2,r2,r3
 402e774:	10802014 	ori	r2,r2,128
 402e778:	8880030d 	sth	r2,12(r17)
 402e77c:	a589883a 	add	r4,r20,r22
 402e780:	adadc83a 	sub	r22,r21,r22
 402e784:	8d400515 	stw	r21,20(r17)
 402e788:	8d800215 	stw	r22,8(r17)
 402e78c:	8d000415 	stw	r20,16(r17)
 402e790:	89000015 	stw	r4,0(r17)
 402e794:	802b883a 	mov	r21,r16
 402e798:	802d883a 	mov	r22,r16
 402e79c:	b00d883a 	mov	r6,r22
 402e7a0:	e00b883a 	mov	r5,fp
 402e7a4:	402ce280 	call	402ce28 <memmove>
 402e7a8:	88800217 	ldw	r2,8(r17)
 402e7ac:	89000017 	ldw	r4,0(r17)
 402e7b0:	90c00217 	ldw	r3,8(r18)
 402e7b4:	1545c83a 	sub	r2,r2,r21
 402e7b8:	2589883a 	add	r4,r4,r22
 402e7bc:	88800215 	stw	r2,8(r17)
 402e7c0:	89000015 	stw	r4,0(r17)
 402e7c4:	1c21c83a 	sub	r16,r3,r16
 402e7c8:	94000215 	stw	r16,8(r18)
 402e7cc:	80001726 	beq	r16,zero,402e82c <__ssprint_r+0x198>
 402e7d0:	bf000017 	ldw	fp,0(r23)
 402e7d4:	bc000117 	ldw	r16,4(r23)
 402e7d8:	bdc00204 	addi	r23,r23,8
 402e7dc:	003fc206 	br	402e6e8 <_gp+0xfffed4e8>
 402e7e0:	802b883a 	mov	r21,r16
 402e7e4:	802d883a 	mov	r22,r16
 402e7e8:	003fec06 	br	402e79c <_gp+0xfffed59c>
 402e7ec:	9809883a 	mov	r4,r19
 402e7f0:	402dfe00 	call	402dfe0 <_realloc_r>
 402e7f4:	1029883a 	mov	r20,r2
 402e7f8:	103fe01e 	bne	r2,zero,402e77c <_gp+0xfffed57c>
 402e7fc:	89400417 	ldw	r5,16(r17)
 402e800:	9809883a 	mov	r4,r19
 402e804:	40249ec0 	call	40249ec <_free_r>
 402e808:	88c0030b 	ldhu	r3,12(r17)
 402e80c:	00800304 	movi	r2,12
 402e810:	98800015 	stw	r2,0(r19)
 402e814:	18c01014 	ori	r3,r3,64
 402e818:	88c0030d 	sth	r3,12(r17)
 402e81c:	00bfffc4 	movi	r2,-1
 402e820:	90000215 	stw	zero,8(r18)
 402e824:	90000115 	stw	zero,4(r18)
 402e828:	00000206 	br	402e834 <__ssprint_r+0x1a0>
 402e82c:	90000115 	stw	zero,4(r18)
 402e830:	0005883a 	mov	r2,zero
 402e834:	dfc00917 	ldw	ra,36(sp)
 402e838:	df000817 	ldw	fp,32(sp)
 402e83c:	ddc00717 	ldw	r23,28(sp)
 402e840:	dd800617 	ldw	r22,24(sp)
 402e844:	dd400517 	ldw	r21,20(sp)
 402e848:	dd000417 	ldw	r20,16(sp)
 402e84c:	dcc00317 	ldw	r19,12(sp)
 402e850:	dc800217 	ldw	r18,8(sp)
 402e854:	dc400117 	ldw	r17,4(sp)
 402e858:	dc000017 	ldw	r16,0(sp)
 402e85c:	dec00a04 	addi	sp,sp,40
 402e860:	f800283a 	ret

0402e864 <___svfiprintf_internal_r>:
 402e864:	2880030b 	ldhu	r2,12(r5)
 402e868:	deffc804 	addi	sp,sp,-224
 402e86c:	dcc03115 	stw	r19,196(sp)
 402e870:	dfc03715 	stw	ra,220(sp)
 402e874:	df003615 	stw	fp,216(sp)
 402e878:	ddc03515 	stw	r23,212(sp)
 402e87c:	dd803415 	stw	r22,208(sp)
 402e880:	dd403315 	stw	r21,204(sp)
 402e884:	dd003215 	stw	r20,200(sp)
 402e888:	dc803015 	stw	r18,192(sp)
 402e88c:	dc402f15 	stw	r17,188(sp)
 402e890:	dc002e15 	stw	r16,184(sp)
 402e894:	d9402715 	stw	r5,156(sp)
 402e898:	d9002a15 	stw	r4,168(sp)
 402e89c:	1080200c 	andi	r2,r2,128
 402e8a0:	d9c02315 	stw	r7,140(sp)
 402e8a4:	3027883a 	mov	r19,r6
 402e8a8:	10000226 	beq	r2,zero,402e8b4 <___svfiprintf_internal_r+0x50>
 402e8ac:	28800417 	ldw	r2,16(r5)
 402e8b0:	10041d26 	beq	r2,zero,402f928 <___svfiprintf_internal_r+0x10c4>
 402e8b4:	dac01a04 	addi	r11,sp,104
 402e8b8:	dac01e15 	stw	r11,120(sp)
 402e8bc:	d8801e17 	ldw	r2,120(sp)
 402e8c0:	dac019c4 	addi	r11,sp,103
 402e8c4:	dd402a17 	ldw	r21,168(sp)
 402e8c8:	ddc02717 	ldw	r23,156(sp)
 402e8cc:	058100f4 	movhi	r22,1027
 402e8d0:	050100f4 	movhi	r20,1027
 402e8d4:	dac01f15 	stw	r11,124(sp)
 402e8d8:	12d7c83a 	sub	r11,r2,r11
 402e8dc:	b59d7e04 	addi	r22,r22,30200
 402e8e0:	a51d7a04 	addi	r20,r20,30184
 402e8e4:	dec01a15 	stw	sp,104(sp)
 402e8e8:	d8001c15 	stw	zero,112(sp)
 402e8ec:	d8001b15 	stw	zero,108(sp)
 402e8f0:	d811883a 	mov	r8,sp
 402e8f4:	d8002915 	stw	zero,164(sp)
 402e8f8:	d8002515 	stw	zero,148(sp)
 402e8fc:	dac02b15 	stw	r11,172(sp)
 402e900:	98800007 	ldb	r2,0(r19)
 402e904:	1002dd26 	beq	r2,zero,402f47c <___svfiprintf_internal_r+0xc18>
 402e908:	00c00944 	movi	r3,37
 402e90c:	9823883a 	mov	r17,r19
 402e910:	10c0021e 	bne	r2,r3,402e91c <___svfiprintf_internal_r+0xb8>
 402e914:	00001406 	br	402e968 <___svfiprintf_internal_r+0x104>
 402e918:	10c00326 	beq	r2,r3,402e928 <___svfiprintf_internal_r+0xc4>
 402e91c:	8c400044 	addi	r17,r17,1
 402e920:	88800007 	ldb	r2,0(r17)
 402e924:	103ffc1e 	bne	r2,zero,402e918 <_gp+0xfffed718>
 402e928:	8ce1c83a 	sub	r16,r17,r19
 402e92c:	80000e26 	beq	r16,zero,402e968 <___svfiprintf_internal_r+0x104>
 402e930:	d8c01c17 	ldw	r3,112(sp)
 402e934:	d8801b17 	ldw	r2,108(sp)
 402e938:	44c00015 	stw	r19,0(r8)
 402e93c:	1c07883a 	add	r3,r3,r16
 402e940:	10800044 	addi	r2,r2,1
 402e944:	d8c01c15 	stw	r3,112(sp)
 402e948:	44000115 	stw	r16,4(r8)
 402e94c:	d8801b15 	stw	r2,108(sp)
 402e950:	00c001c4 	movi	r3,7
 402e954:	18831e16 	blt	r3,r2,402f5d0 <___svfiprintf_internal_r+0xd6c>
 402e958:	42000204 	addi	r8,r8,8
 402e95c:	dac02517 	ldw	r11,148(sp)
 402e960:	5c17883a 	add	r11,r11,r16
 402e964:	dac02515 	stw	r11,148(sp)
 402e968:	88800007 	ldb	r2,0(r17)
 402e96c:	1002c526 	beq	r2,zero,402f484 <___svfiprintf_internal_r+0xc20>
 402e970:	88c00047 	ldb	r3,1(r17)
 402e974:	8cc00044 	addi	r19,r17,1
 402e978:	d8001d85 	stb	zero,118(sp)
 402e97c:	0009883a 	mov	r4,zero
 402e980:	000f883a 	mov	r7,zero
 402e984:	043fffc4 	movi	r16,-1
 402e988:	d8002415 	stw	zero,144(sp)
 402e98c:	0025883a 	mov	r18,zero
 402e990:	01401604 	movi	r5,88
 402e994:	01800244 	movi	r6,9
 402e998:	02800a84 	movi	r10,42
 402e99c:	02401b04 	movi	r9,108
 402e9a0:	9cc00044 	addi	r19,r19,1
 402e9a4:	18bff804 	addi	r2,r3,-32
 402e9a8:	2881dd36 	bltu	r5,r2,402f120 <___svfiprintf_internal_r+0x8bc>
 402e9ac:	100490ba 	slli	r2,r2,2
 402e9b0:	02c100f4 	movhi	r11,1027
 402e9b4:	5afa7104 	addi	r11,r11,-5692
 402e9b8:	12c5883a 	add	r2,r2,r11
 402e9bc:	10800017 	ldw	r2,0(r2)
 402e9c0:	1000683a 	jmp	r2
 402e9c4:	0402ebc0 	call	402ebc <__alt_mem_SDRAM_Controller+0x402ebc>
 402e9c8:	0402f120 	cmpeqi	r16,zero,3012
 402e9cc:	0402f120 	cmpeqi	r16,zero,3012
 402e9d0:	0402ebb4 	movhi	r16,2990
 402e9d4:	0402f120 	cmpeqi	r16,zero,3012
 402e9d8:	0402f120 	cmpeqi	r16,zero,3012
 402e9dc:	0402f120 	cmpeqi	r16,zero,3012
 402e9e0:	0402f120 	cmpeqi	r16,zero,3012
 402e9e4:	0402f120 	cmpeqi	r16,zero,3012
 402e9e8:	0402f120 	cmpeqi	r16,zero,3012
 402e9ec:	0402eb28 	cmpgeui	r16,zero,2988
 402e9f0:	0402ed04 	movi	r16,2996
 402e9f4:	0402f120 	cmpeqi	r16,zero,3012
 402e9f8:	0402eb54 	movui	r16,2989
 402e9fc:	0402f154 	movui	r16,3013
 402ea00:	0402f120 	cmpeqi	r16,zero,3012
 402ea04:	0402f148 	cmpgei	r16,zero,3013
 402ea08:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea0c:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea10:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea14:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea18:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea1c:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea20:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea24:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea28:	0402f0e8 	cmpgeui	r16,zero,3011
 402ea2c:	0402f120 	cmpeqi	r16,zero,3012
 402ea30:	0402f120 	cmpeqi	r16,zero,3012
 402ea34:	0402f120 	cmpeqi	r16,zero,3012
 402ea38:	0402f120 	cmpeqi	r16,zero,3012
 402ea3c:	0402f120 	cmpeqi	r16,zero,3012
 402ea40:	0402f120 	cmpeqi	r16,zero,3012
 402ea44:	0402f120 	cmpeqi	r16,zero,3012
 402ea48:	0402f120 	cmpeqi	r16,zero,3012
 402ea4c:	0402f120 	cmpeqi	r16,zero,3012
 402ea50:	0402f120 	cmpeqi	r16,zero,3012
 402ea54:	0402f084 	movi	r16,3010
 402ea58:	0402f120 	cmpeqi	r16,zero,3012
 402ea5c:	0402f120 	cmpeqi	r16,zero,3012
 402ea60:	0402f120 	cmpeqi	r16,zero,3012
 402ea64:	0402f120 	cmpeqi	r16,zero,3012
 402ea68:	0402f120 	cmpeqi	r16,zero,3012
 402ea6c:	0402f120 	cmpeqi	r16,zero,3012
 402ea70:	0402f120 	cmpeqi	r16,zero,3012
 402ea74:	0402f120 	cmpeqi	r16,zero,3012
 402ea78:	0402f120 	cmpeqi	r16,zero,3012
 402ea7c:	0402f120 	cmpeqi	r16,zero,3012
 402ea80:	0402f1fc 	xorhi	r16,zero,3015
 402ea84:	0402f120 	cmpeqi	r16,zero,3012
 402ea88:	0402f120 	cmpeqi	r16,zero,3012
 402ea8c:	0402f120 	cmpeqi	r16,zero,3012
 402ea90:	0402f120 	cmpeqi	r16,zero,3012
 402ea94:	0402f120 	cmpeqi	r16,zero,3012
 402ea98:	0402f194 	movui	r16,3014
 402ea9c:	0402f120 	cmpeqi	r16,zero,3012
 402eaa0:	0402f120 	cmpeqi	r16,zero,3012
 402eaa4:	0402eec8 	cmpgei	r16,zero,3003
 402eaa8:	0402f120 	cmpeqi	r16,zero,3012
 402eaac:	0402f120 	cmpeqi	r16,zero,3012
 402eab0:	0402f120 	cmpeqi	r16,zero,3012
 402eab4:	0402f120 	cmpeqi	r16,zero,3012
 402eab8:	0402f120 	cmpeqi	r16,zero,3012
 402eabc:	0402f120 	cmpeqi	r16,zero,3012
 402eac0:	0402f120 	cmpeqi	r16,zero,3012
 402eac4:	0402f120 	cmpeqi	r16,zero,3012
 402eac8:	0402f120 	cmpeqi	r16,zero,3012
 402eacc:	0402f120 	cmpeqi	r16,zero,3012
 402ead0:	0402edb8 	rdprs	r16,zero,2998
 402ead4:	0402ef64 	muli	r16,zero,3005
 402ead8:	0402f120 	cmpeqi	r16,zero,3012
 402eadc:	0402f120 	cmpeqi	r16,zero,3012
 402eae0:	0402f120 	cmpeqi	r16,zero,3012
 402eae4:	0402ef58 	cmpnei	r16,zero,3005
 402eae8:	0402ef64 	muli	r16,zero,3005
 402eaec:	0402f120 	cmpeqi	r16,zero,3012
 402eaf0:	0402f120 	cmpeqi	r16,zero,3012
 402eaf4:	0402ef48 	cmpgei	r16,zero,3005
 402eaf8:	0402f120 	cmpeqi	r16,zero,3012
 402eafc:	0402ef0c 	andi	r16,zero,3004
 402eb00:	0402ed14 	movui	r16,2996
 402eb04:	0402eb60 	cmpeqi	r16,zero,2989
 402eb08:	0402f078 	rdprs	r16,zero,3009
 402eb0c:	0402f120 	cmpeqi	r16,zero,3012
 402eb10:	0402f02c 	andhi	r16,zero,3008
 402eb14:	0402f120 	cmpeqi	r16,zero,3012
 402eb18:	0402ec84 	movi	r16,2994
 402eb1c:	0402f120 	cmpeqi	r16,zero,3012
 402eb20:	0402f120 	cmpeqi	r16,zero,3012
 402eb24:	0402ebe0 	cmpeqi	r16,zero,2991
 402eb28:	dac02317 	ldw	r11,140(sp)
 402eb2c:	5ac00017 	ldw	r11,0(r11)
 402eb30:	dac02415 	stw	r11,144(sp)
 402eb34:	dac02317 	ldw	r11,140(sp)
 402eb38:	58800104 	addi	r2,r11,4
 402eb3c:	dac02417 	ldw	r11,144(sp)
 402eb40:	5802e90e 	bge	r11,zero,402f6e8 <___svfiprintf_internal_r+0xe84>
 402eb44:	dac02417 	ldw	r11,144(sp)
 402eb48:	d8802315 	stw	r2,140(sp)
 402eb4c:	02d7c83a 	sub	r11,zero,r11
 402eb50:	dac02415 	stw	r11,144(sp)
 402eb54:	94800114 	ori	r18,r18,4
 402eb58:	98c00007 	ldb	r3,0(r19)
 402eb5c:	003f9006 	br	402e9a0 <_gp+0xfffed7a0>
 402eb60:	00800c04 	movi	r2,48
 402eb64:	dac02317 	ldw	r11,140(sp)
 402eb68:	d8801d05 	stb	r2,116(sp)
 402eb6c:	00801e04 	movi	r2,120
 402eb70:	d8801d45 	stb	r2,117(sp)
 402eb74:	d8001d85 	stb	zero,118(sp)
 402eb78:	58c00104 	addi	r3,r11,4
 402eb7c:	5f000017 	ldw	fp,0(r11)
 402eb80:	0013883a 	mov	r9,zero
 402eb84:	90800094 	ori	r2,r18,2
 402eb88:	80032b16 	blt	r16,zero,402f838 <___svfiprintf_internal_r+0xfd4>
 402eb8c:	00bfdfc4 	movi	r2,-129
 402eb90:	90a4703a 	and	r18,r18,r2
 402eb94:	d8c02315 	stw	r3,140(sp)
 402eb98:	94800094 	ori	r18,r18,2
 402eb9c:	e002dc26 	beq	fp,zero,402f710 <___svfiprintf_internal_r+0xeac>
 402eba0:	010100f4 	movhi	r4,1027
 402eba4:	211d1204 	addi	r4,r4,29768
 402eba8:	0015883a 	mov	r10,zero
 402ebac:	d9002915 	stw	r4,164(sp)
 402ebb0:	00002306 	br	402ec40 <___svfiprintf_internal_r+0x3dc>
 402ebb4:	94800054 	ori	r18,r18,1
 402ebb8:	98c00007 	ldb	r3,0(r19)
 402ebbc:	003f7806 	br	402e9a0 <_gp+0xfffed7a0>
 402ebc0:	38803fcc 	andi	r2,r7,255
 402ebc4:	1080201c 	xori	r2,r2,128
 402ebc8:	10bfe004 	addi	r2,r2,-128
 402ebcc:	1002f31e 	bne	r2,zero,402f79c <___svfiprintf_internal_r+0xf38>
 402ebd0:	01000044 	movi	r4,1
 402ebd4:	01c00804 	movi	r7,32
 402ebd8:	98c00007 	ldb	r3,0(r19)
 402ebdc:	003f7006 	br	402e9a0 <_gp+0xfffed7a0>
 402ebe0:	21003fcc 	andi	r4,r4,255
 402ebe4:	2003aa1e 	bne	r4,zero,402fa90 <___svfiprintf_internal_r+0x122c>
 402ebe8:	008100f4 	movhi	r2,1027
 402ebec:	109d1204 	addi	r2,r2,29768
 402ebf0:	d8802915 	stw	r2,164(sp)
 402ebf4:	9080080c 	andi	r2,r18,32
 402ebf8:	1000ba26 	beq	r2,zero,402eee4 <___svfiprintf_internal_r+0x680>
 402ebfc:	dac02317 	ldw	r11,140(sp)
 402ec00:	5f000017 	ldw	fp,0(r11)
 402ec04:	5a400117 	ldw	r9,4(r11)
 402ec08:	5ac00204 	addi	r11,r11,8
 402ec0c:	dac02315 	stw	r11,140(sp)
 402ec10:	9080004c 	andi	r2,r18,1
 402ec14:	10029026 	beq	r2,zero,402f658 <___svfiprintf_internal_r+0xdf4>
 402ec18:	e244b03a 	or	r2,fp,r9
 402ec1c:	1002d41e 	bne	r2,zero,402f770 <___svfiprintf_internal_r+0xf0c>
 402ec20:	d8001d85 	stb	zero,118(sp)
 402ec24:	80030b16 	blt	r16,zero,402f854 <___svfiprintf_internal_r+0xff0>
 402ec28:	00bfdfc4 	movi	r2,-129
 402ec2c:	90a4703a 	and	r18,r18,r2
 402ec30:	0015883a 	mov	r10,zero
 402ec34:	80002426 	beq	r16,zero,402ecc8 <___svfiprintf_internal_r+0x464>
 402ec38:	0039883a 	mov	fp,zero
 402ec3c:	0013883a 	mov	r9,zero
 402ec40:	d9002917 	ldw	r4,164(sp)
 402ec44:	dc401a04 	addi	r17,sp,104
 402ec48:	e08003cc 	andi	r2,fp,15
 402ec4c:	4806973a 	slli	r3,r9,28
 402ec50:	2085883a 	add	r2,r4,r2
 402ec54:	e038d13a 	srli	fp,fp,4
 402ec58:	10800003 	ldbu	r2,0(r2)
 402ec5c:	4812d13a 	srli	r9,r9,4
 402ec60:	8c7fffc4 	addi	r17,r17,-1
 402ec64:	1f38b03a 	or	fp,r3,fp
 402ec68:	88800005 	stb	r2,0(r17)
 402ec6c:	e244b03a 	or	r2,fp,r9
 402ec70:	103ff51e 	bne	r2,zero,402ec48 <_gp+0xfffeda48>
 402ec74:	dac01e17 	ldw	r11,120(sp)
 402ec78:	5c57c83a 	sub	r11,r11,r17
 402ec7c:	dac02115 	stw	r11,132(sp)
 402ec80:	00001406 	br	402ecd4 <___svfiprintf_internal_r+0x470>
 402ec84:	21003fcc 	andi	r4,r4,255
 402ec88:	2003741e 	bne	r4,zero,402fa5c <___svfiprintf_internal_r+0x11f8>
 402ec8c:	9080080c 	andi	r2,r18,32
 402ec90:	10014526 	beq	r2,zero,402f1a8 <___svfiprintf_internal_r+0x944>
 402ec94:	dac02317 	ldw	r11,140(sp)
 402ec98:	d8001d85 	stb	zero,118(sp)
 402ec9c:	58c00204 	addi	r3,r11,8
 402eca0:	5f000017 	ldw	fp,0(r11)
 402eca4:	5a400117 	ldw	r9,4(r11)
 402eca8:	8002d916 	blt	r16,zero,402f810 <___svfiprintf_internal_r+0xfac>
 402ecac:	013fdfc4 	movi	r4,-129
 402ecb0:	e244b03a 	or	r2,fp,r9
 402ecb4:	d8c02315 	stw	r3,140(sp)
 402ecb8:	9124703a 	and	r18,r18,r4
 402ecbc:	0015883a 	mov	r10,zero
 402ecc0:	1000b91e 	bne	r2,zero,402efa8 <___svfiprintf_internal_r+0x744>
 402ecc4:	8002e61e 	bne	r16,zero,402f860 <___svfiprintf_internal_r+0xffc>
 402ecc8:	0021883a 	mov	r16,zero
 402eccc:	d8002115 	stw	zero,132(sp)
 402ecd0:	dc401a04 	addi	r17,sp,104
 402ecd4:	d8c02117 	ldw	r3,132(sp)
 402ecd8:	dc002015 	stw	r16,128(sp)
 402ecdc:	80c0010e 	bge	r16,r3,402ece4 <___svfiprintf_internal_r+0x480>
 402ece0:	d8c02015 	stw	r3,128(sp)
 402ece4:	52803fcc 	andi	r10,r10,255
 402ece8:	5280201c 	xori	r10,r10,128
 402ecec:	52bfe004 	addi	r10,r10,-128
 402ecf0:	50003c26 	beq	r10,zero,402ede4 <___svfiprintf_internal_r+0x580>
 402ecf4:	dac02017 	ldw	r11,128(sp)
 402ecf8:	5ac00044 	addi	r11,r11,1
 402ecfc:	dac02015 	stw	r11,128(sp)
 402ed00:	00003806 	br	402ede4 <___svfiprintf_internal_r+0x580>
 402ed04:	01000044 	movi	r4,1
 402ed08:	01c00ac4 	movi	r7,43
 402ed0c:	98c00007 	ldb	r3,0(r19)
 402ed10:	003f2306 	br	402e9a0 <_gp+0xfffed7a0>
 402ed14:	21003fcc 	andi	r4,r4,255
 402ed18:	2003481e 	bne	r4,zero,402fa3c <___svfiprintf_internal_r+0x11d8>
 402ed1c:	9080080c 	andi	r2,r18,32
 402ed20:	10013b26 	beq	r2,zero,402f210 <___svfiprintf_internal_r+0x9ac>
 402ed24:	dac02317 	ldw	r11,140(sp)
 402ed28:	d8001d85 	stb	zero,118(sp)
 402ed2c:	58800204 	addi	r2,r11,8
 402ed30:	5f000017 	ldw	fp,0(r11)
 402ed34:	5a400117 	ldw	r9,4(r11)
 402ed38:	8002a816 	blt	r16,zero,402f7dc <___svfiprintf_internal_r+0xf78>
 402ed3c:	013fdfc4 	movi	r4,-129
 402ed40:	e246b03a 	or	r3,fp,r9
 402ed44:	d8802315 	stw	r2,140(sp)
 402ed48:	9124703a 	and	r18,r18,r4
 402ed4c:	18013c26 	beq	r3,zero,402f240 <___svfiprintf_internal_r+0x9dc>
 402ed50:	0015883a 	mov	r10,zero
 402ed54:	dc401a04 	addi	r17,sp,104
 402ed58:	e006d0fa 	srli	r3,fp,3
 402ed5c:	4808977a 	slli	r4,r9,29
 402ed60:	4812d0fa 	srli	r9,r9,3
 402ed64:	e70001cc 	andi	fp,fp,7
 402ed68:	e0800c04 	addi	r2,fp,48
 402ed6c:	8c7fffc4 	addi	r17,r17,-1
 402ed70:	20f8b03a 	or	fp,r4,r3
 402ed74:	88800005 	stb	r2,0(r17)
 402ed78:	e246b03a 	or	r3,fp,r9
 402ed7c:	183ff61e 	bne	r3,zero,402ed58 <_gp+0xfffedb58>
 402ed80:	90c0004c 	andi	r3,r18,1
 402ed84:	1800a526 	beq	r3,zero,402f01c <___svfiprintf_internal_r+0x7b8>
 402ed88:	10803fcc 	andi	r2,r2,255
 402ed8c:	1080201c 	xori	r2,r2,128
 402ed90:	10bfe004 	addi	r2,r2,-128
 402ed94:	00c00c04 	movi	r3,48
 402ed98:	10ffb626 	beq	r2,r3,402ec74 <_gp+0xfffeda74>
 402ed9c:	88ffffc5 	stb	r3,-1(r17)
 402eda0:	d8c01e17 	ldw	r3,120(sp)
 402eda4:	88bfffc4 	addi	r2,r17,-1
 402eda8:	1023883a 	mov	r17,r2
 402edac:	1887c83a 	sub	r3,r3,r2
 402edb0:	d8c02115 	stw	r3,132(sp)
 402edb4:	003fc706 	br	402ecd4 <_gp+0xfffedad4>
 402edb8:	dac02317 	ldw	r11,140(sp)
 402edbc:	00c00044 	movi	r3,1
 402edc0:	d8c02015 	stw	r3,128(sp)
 402edc4:	58800017 	ldw	r2,0(r11)
 402edc8:	5ac00104 	addi	r11,r11,4
 402edcc:	d8001d85 	stb	zero,118(sp)
 402edd0:	d8801005 	stb	r2,64(sp)
 402edd4:	dac02315 	stw	r11,140(sp)
 402edd8:	d8c02115 	stw	r3,132(sp)
 402eddc:	dc401004 	addi	r17,sp,64
 402ede0:	0021883a 	mov	r16,zero
 402ede4:	90c0008c 	andi	r3,r18,2
 402ede8:	d8c02215 	stw	r3,136(sp)
 402edec:	18000326 	beq	r3,zero,402edfc <___svfiprintf_internal_r+0x598>
 402edf0:	dac02017 	ldw	r11,128(sp)
 402edf4:	5ac00084 	addi	r11,r11,2
 402edf8:	dac02015 	stw	r11,128(sp)
 402edfc:	90c0210c 	andi	r3,r18,132
 402ee00:	d8c02615 	stw	r3,152(sp)
 402ee04:	1801131e 	bne	r3,zero,402f254 <___svfiprintf_internal_r+0x9f0>
 402ee08:	dac02417 	ldw	r11,144(sp)
 402ee0c:	d8c02017 	ldw	r3,128(sp)
 402ee10:	58f9c83a 	sub	fp,r11,r3
 402ee14:	07010f0e 	bge	zero,fp,402f254 <___svfiprintf_internal_r+0x9f0>
 402ee18:	02400404 	movi	r9,16
 402ee1c:	d8c01c17 	ldw	r3,112(sp)
 402ee20:	d8801b17 	ldw	r2,108(sp)
 402ee24:	4f02d60e 	bge	r9,fp,402f980 <___svfiprintf_internal_r+0x111c>
 402ee28:	014100f4 	movhi	r5,1027
 402ee2c:	295d7e04 	addi	r5,r5,30200
 402ee30:	d9402815 	stw	r5,160(sp)
 402ee34:	028001c4 	movi	r10,7
 402ee38:	00000306 	br	402ee48 <___svfiprintf_internal_r+0x5e4>
 402ee3c:	e73ffc04 	addi	fp,fp,-16
 402ee40:	42000204 	addi	r8,r8,8
 402ee44:	4f00150e 	bge	r9,fp,402ee9c <___svfiprintf_internal_r+0x638>
 402ee48:	18c00404 	addi	r3,r3,16
 402ee4c:	10800044 	addi	r2,r2,1
 402ee50:	45800015 	stw	r22,0(r8)
 402ee54:	42400115 	stw	r9,4(r8)
 402ee58:	d8c01c15 	stw	r3,112(sp)
 402ee5c:	d8801b15 	stw	r2,108(sp)
 402ee60:	50bff60e 	bge	r10,r2,402ee3c <_gp+0xfffedc3c>
 402ee64:	d9801a04 	addi	r6,sp,104
 402ee68:	b80b883a 	mov	r5,r23
 402ee6c:	a809883a 	mov	r4,r21
 402ee70:	da402c15 	stw	r9,176(sp)
 402ee74:	da802d15 	stw	r10,180(sp)
 402ee78:	402e6940 	call	402e694 <__ssprint_r>
 402ee7c:	da402c17 	ldw	r9,176(sp)
 402ee80:	da802d17 	ldw	r10,180(sp)
 402ee84:	1001851e 	bne	r2,zero,402f49c <___svfiprintf_internal_r+0xc38>
 402ee88:	e73ffc04 	addi	fp,fp,-16
 402ee8c:	d8c01c17 	ldw	r3,112(sp)
 402ee90:	d8801b17 	ldw	r2,108(sp)
 402ee94:	d811883a 	mov	r8,sp
 402ee98:	4f3feb16 	blt	r9,fp,402ee48 <_gp+0xfffedc48>
 402ee9c:	dac02817 	ldw	r11,160(sp)
 402eea0:	e0c7883a 	add	r3,fp,r3
 402eea4:	10800044 	addi	r2,r2,1
 402eea8:	42c00015 	stw	r11,0(r8)
 402eeac:	47000115 	stw	fp,4(r8)
 402eeb0:	d8c01c15 	stw	r3,112(sp)
 402eeb4:	d8801b15 	stw	r2,108(sp)
 402eeb8:	010001c4 	movi	r4,7
 402eebc:	2081ee16 	blt	r4,r2,402f678 <___svfiprintf_internal_r+0xe14>
 402eec0:	42000204 	addi	r8,r8,8
 402eec4:	0000e506 	br	402f25c <___svfiprintf_internal_r+0x9f8>
 402eec8:	21003fcc 	andi	r4,r4,255
 402eecc:	2002dd1e 	bne	r4,zero,402fa44 <___svfiprintf_internal_r+0x11e0>
 402eed0:	008100f4 	movhi	r2,1027
 402eed4:	109d0d04 	addi	r2,r2,29748
 402eed8:	d8802915 	stw	r2,164(sp)
 402eedc:	9080080c 	andi	r2,r18,32
 402eee0:	103f461e 	bne	r2,zero,402ebfc <_gp+0xfffed9fc>
 402eee4:	9080040c 	andi	r2,r18,16
 402eee8:	10022e1e 	bne	r2,zero,402f7a4 <___svfiprintf_internal_r+0xf40>
 402eeec:	9080100c 	andi	r2,r18,64
 402eef0:	dac02317 	ldw	r11,140(sp)
 402eef4:	10027326 	beq	r2,zero,402f8c4 <___svfiprintf_internal_r+0x1060>
 402eef8:	5f00000b 	ldhu	fp,0(r11)
 402eefc:	5ac00104 	addi	r11,r11,4
 402ef00:	0013883a 	mov	r9,zero
 402ef04:	dac02315 	stw	r11,140(sp)
 402ef08:	003f4106 	br	402ec10 <_gp+0xfffeda10>
 402ef0c:	21003fcc 	andi	r4,r4,255
 402ef10:	2002e11e 	bne	r4,zero,402fa98 <___svfiprintf_internal_r+0x1234>
 402ef14:	9080080c 	andi	r2,r18,32
 402ef18:	1002011e 	bne	r2,zero,402f720 <___svfiprintf_internal_r+0xebc>
 402ef1c:	9080040c 	andi	r2,r18,16
 402ef20:	10023e1e 	bne	r2,zero,402f81c <___svfiprintf_internal_r+0xfb8>
 402ef24:	9480100c 	andi	r18,r18,64
 402ef28:	90023c26 	beq	r18,zero,402f81c <___svfiprintf_internal_r+0xfb8>
 402ef2c:	dac02317 	ldw	r11,140(sp)
 402ef30:	58800017 	ldw	r2,0(r11)
 402ef34:	5ac00104 	addi	r11,r11,4
 402ef38:	dac02315 	stw	r11,140(sp)
 402ef3c:	dac02517 	ldw	r11,148(sp)
 402ef40:	12c0000d 	sth	r11,0(r2)
 402ef44:	003e6e06 	br	402e900 <_gp+0xfffed700>
 402ef48:	98c00007 	ldb	r3,0(r19)
 402ef4c:	1a422926 	beq	r3,r9,402f7f4 <___svfiprintf_internal_r+0xf90>
 402ef50:	94800414 	ori	r18,r18,16
 402ef54:	003e9206 	br	402e9a0 <_gp+0xfffed7a0>
 402ef58:	94801014 	ori	r18,r18,64
 402ef5c:	98c00007 	ldb	r3,0(r19)
 402ef60:	003e8f06 	br	402e9a0 <_gp+0xfffed7a0>
 402ef64:	21003fcc 	andi	r4,r4,255
 402ef68:	2002c71e 	bne	r4,zero,402fa88 <___svfiprintf_internal_r+0x1224>
 402ef6c:	9080080c 	andi	r2,r18,32
 402ef70:	10004926 	beq	r2,zero,402f098 <___svfiprintf_internal_r+0x834>
 402ef74:	dac02317 	ldw	r11,140(sp)
 402ef78:	58800117 	ldw	r2,4(r11)
 402ef7c:	5f000017 	ldw	fp,0(r11)
 402ef80:	5ac00204 	addi	r11,r11,8
 402ef84:	dac02315 	stw	r11,140(sp)
 402ef88:	1013883a 	mov	r9,r2
 402ef8c:	10004b16 	blt	r2,zero,402f0bc <___svfiprintf_internal_r+0x858>
 402ef90:	da801d83 	ldbu	r10,118(sp)
 402ef94:	8001cb16 	blt	r16,zero,402f6c4 <___svfiprintf_internal_r+0xe60>
 402ef98:	00ffdfc4 	movi	r3,-129
 402ef9c:	e244b03a 	or	r2,fp,r9
 402efa0:	90e4703a 	and	r18,r18,r3
 402efa4:	103f4726 	beq	r2,zero,402ecc4 <_gp+0xfffedac4>
 402efa8:	48008c26 	beq	r9,zero,402f1dc <___svfiprintf_internal_r+0x978>
 402efac:	dc802015 	stw	r18,128(sp)
 402efb0:	dc002115 	stw	r16,132(sp)
 402efb4:	dc401a04 	addi	r17,sp,104
 402efb8:	e021883a 	mov	r16,fp
 402efbc:	da002215 	stw	r8,136(sp)
 402efc0:	5039883a 	mov	fp,r10
 402efc4:	4825883a 	mov	r18,r9
 402efc8:	8009883a 	mov	r4,r16
 402efcc:	900b883a 	mov	r5,r18
 402efd0:	01800284 	movi	r6,10
 402efd4:	000f883a 	mov	r7,zero
 402efd8:	4031c6c0 	call	4031c6c <__umoddi3>
 402efdc:	10800c04 	addi	r2,r2,48
 402efe0:	8c7fffc4 	addi	r17,r17,-1
 402efe4:	8009883a 	mov	r4,r16
 402efe8:	900b883a 	mov	r5,r18
 402efec:	88800005 	stb	r2,0(r17)
 402eff0:	01800284 	movi	r6,10
 402eff4:	000f883a 	mov	r7,zero
 402eff8:	40316f40 	call	40316f4 <__udivdi3>
 402effc:	1021883a 	mov	r16,r2
 402f000:	10c4b03a 	or	r2,r2,r3
 402f004:	1825883a 	mov	r18,r3
 402f008:	103fef1e 	bne	r2,zero,402efc8 <_gp+0xfffeddc8>
 402f00c:	dc802017 	ldw	r18,128(sp)
 402f010:	dc002117 	ldw	r16,132(sp)
 402f014:	da002217 	ldw	r8,136(sp)
 402f018:	e015883a 	mov	r10,fp
 402f01c:	d8c01e17 	ldw	r3,120(sp)
 402f020:	1c47c83a 	sub	r3,r3,r17
 402f024:	d8c02115 	stw	r3,132(sp)
 402f028:	003f2a06 	br	402ecd4 <_gp+0xfffedad4>
 402f02c:	dac02317 	ldw	r11,140(sp)
 402f030:	d8001d85 	stb	zero,118(sp)
 402f034:	5c400017 	ldw	r17,0(r11)
 402f038:	5f000104 	addi	fp,r11,4
 402f03c:	88022f26 	beq	r17,zero,402f8fc <___svfiprintf_internal_r+0x1098>
 402f040:	80022516 	blt	r16,zero,402f8d8 <___svfiprintf_internal_r+0x1074>
 402f044:	800d883a 	mov	r6,r16
 402f048:	000b883a 	mov	r5,zero
 402f04c:	8809883a 	mov	r4,r17
 402f050:	da002c15 	stw	r8,176(sp)
 402f054:	402cbfc0 	call	402cbfc <memchr>
 402f058:	da002c17 	ldw	r8,176(sp)
 402f05c:	10026426 	beq	r2,zero,402f9f0 <___svfiprintf_internal_r+0x118c>
 402f060:	1445c83a 	sub	r2,r2,r17
 402f064:	d8802115 	stw	r2,132(sp)
 402f068:	da801d83 	ldbu	r10,118(sp)
 402f06c:	df002315 	stw	fp,140(sp)
 402f070:	0021883a 	mov	r16,zero
 402f074:	003f1706 	br	402ecd4 <_gp+0xfffedad4>
 402f078:	94800814 	ori	r18,r18,32
 402f07c:	98c00007 	ldb	r3,0(r19)
 402f080:	003e4706 	br	402e9a0 <_gp+0xfffed7a0>
 402f084:	21003fcc 	andi	r4,r4,255
 402f088:	2002701e 	bne	r4,zero,402fa4c <___svfiprintf_internal_r+0x11e8>
 402f08c:	94800414 	ori	r18,r18,16
 402f090:	9080080c 	andi	r2,r18,32
 402f094:	103fb71e 	bne	r2,zero,402ef74 <_gp+0xfffedd74>
 402f098:	9080040c 	andi	r2,r18,16
 402f09c:	1001ab26 	beq	r2,zero,402f74c <___svfiprintf_internal_r+0xee8>
 402f0a0:	dac02317 	ldw	r11,140(sp)
 402f0a4:	5f000017 	ldw	fp,0(r11)
 402f0a8:	5ac00104 	addi	r11,r11,4
 402f0ac:	dac02315 	stw	r11,140(sp)
 402f0b0:	e013d7fa 	srai	r9,fp,31
 402f0b4:	4805883a 	mov	r2,r9
 402f0b8:	103fb50e 	bge	r2,zero,402ef90 <_gp+0xfffedd90>
 402f0bc:	0739c83a 	sub	fp,zero,fp
 402f0c0:	02800b44 	movi	r10,45
 402f0c4:	e004c03a 	cmpne	r2,fp,zero
 402f0c8:	0253c83a 	sub	r9,zero,r9
 402f0cc:	da801d85 	stb	r10,118(sp)
 402f0d0:	4893c83a 	sub	r9,r9,r2
 402f0d4:	80023016 	blt	r16,zero,402f998 <___svfiprintf_internal_r+0x1134>
 402f0d8:	00bfdfc4 	movi	r2,-129
 402f0dc:	90a4703a 	and	r18,r18,r2
 402f0e0:	483fb21e 	bne	r9,zero,402efac <_gp+0xfffeddac>
 402f0e4:	00003d06 	br	402f1dc <___svfiprintf_internal_r+0x978>
 402f0e8:	9817883a 	mov	r11,r19
 402f0ec:	d8002415 	stw	zero,144(sp)
 402f0f0:	18bff404 	addi	r2,r3,-48
 402f0f4:	0019883a 	mov	r12,zero
 402f0f8:	58c00007 	ldb	r3,0(r11)
 402f0fc:	630002a4 	muli	r12,r12,10
 402f100:	9cc00044 	addi	r19,r19,1
 402f104:	9817883a 	mov	r11,r19
 402f108:	1319883a 	add	r12,r2,r12
 402f10c:	18bff404 	addi	r2,r3,-48
 402f110:	30bff92e 	bgeu	r6,r2,402f0f8 <_gp+0xfffedef8>
 402f114:	db002415 	stw	r12,144(sp)
 402f118:	18bff804 	addi	r2,r3,-32
 402f11c:	28be232e 	bgeu	r5,r2,402e9ac <_gp+0xfffed7ac>
 402f120:	21003fcc 	andi	r4,r4,255
 402f124:	20024b1e 	bne	r4,zero,402fa54 <___svfiprintf_internal_r+0x11f0>
 402f128:	1800d626 	beq	r3,zero,402f484 <___svfiprintf_internal_r+0xc20>
 402f12c:	02c00044 	movi	r11,1
 402f130:	dac02015 	stw	r11,128(sp)
 402f134:	d8c01005 	stb	r3,64(sp)
 402f138:	d8001d85 	stb	zero,118(sp)
 402f13c:	dac02115 	stw	r11,132(sp)
 402f140:	dc401004 	addi	r17,sp,64
 402f144:	003f2606 	br	402ede0 <_gp+0xfffedbe0>
 402f148:	94802014 	ori	r18,r18,128
 402f14c:	98c00007 	ldb	r3,0(r19)
 402f150:	003e1306 	br	402e9a0 <_gp+0xfffed7a0>
 402f154:	98c00007 	ldb	r3,0(r19)
 402f158:	9ac00044 	addi	r11,r19,1
 402f15c:	1a822b26 	beq	r3,r10,402fa0c <___svfiprintf_internal_r+0x11a8>
 402f160:	18bff404 	addi	r2,r3,-48
 402f164:	0021883a 	mov	r16,zero
 402f168:	30821e36 	bltu	r6,r2,402f9e4 <___svfiprintf_internal_r+0x1180>
 402f16c:	58c00007 	ldb	r3,0(r11)
 402f170:	840002a4 	muli	r16,r16,10
 402f174:	5cc00044 	addi	r19,r11,1
 402f178:	9817883a 	mov	r11,r19
 402f17c:	80a1883a 	add	r16,r16,r2
 402f180:	18bff404 	addi	r2,r3,-48
 402f184:	30bff92e 	bgeu	r6,r2,402f16c <_gp+0xfffedf6c>
 402f188:	803e060e 	bge	r16,zero,402e9a4 <_gp+0xfffed7a4>
 402f18c:	043fffc4 	movi	r16,-1
 402f190:	003e0406 	br	402e9a4 <_gp+0xfffed7a4>
 402f194:	21003fcc 	andi	r4,r4,255
 402f198:	2002371e 	bne	r4,zero,402fa78 <___svfiprintf_internal_r+0x1214>
 402f19c:	94800414 	ori	r18,r18,16
 402f1a0:	9080080c 	andi	r2,r18,32
 402f1a4:	103ebb1e 	bne	r2,zero,402ec94 <_gp+0xfffeda94>
 402f1a8:	9080040c 	andi	r2,r18,16
 402f1ac:	10013b26 	beq	r2,zero,402f69c <___svfiprintf_internal_r+0xe38>
 402f1b0:	dac02317 	ldw	r11,140(sp)
 402f1b4:	d8001d85 	stb	zero,118(sp)
 402f1b8:	0013883a 	mov	r9,zero
 402f1bc:	58800104 	addi	r2,r11,4
 402f1c0:	5f000017 	ldw	fp,0(r11)
 402f1c4:	80013d16 	blt	r16,zero,402f6bc <___svfiprintf_internal_r+0xe58>
 402f1c8:	00ffdfc4 	movi	r3,-129
 402f1cc:	d8802315 	stw	r2,140(sp)
 402f1d0:	90e4703a 	and	r18,r18,r3
 402f1d4:	0015883a 	mov	r10,zero
 402f1d8:	e03eba26 	beq	fp,zero,402ecc4 <_gp+0xfffedac4>
 402f1dc:	00800244 	movi	r2,9
 402f1e0:	173f7236 	bltu	r2,fp,402efac <_gp+0xfffeddac>
 402f1e4:	dac02b17 	ldw	r11,172(sp)
 402f1e8:	e7000c04 	addi	fp,fp,48
 402f1ec:	df0019c5 	stb	fp,103(sp)
 402f1f0:	dac02115 	stw	r11,132(sp)
 402f1f4:	dc4019c4 	addi	r17,sp,103
 402f1f8:	003eb606 	br	402ecd4 <_gp+0xfffedad4>
 402f1fc:	21003fcc 	andi	r4,r4,255
 402f200:	20021f1e 	bne	r4,zero,402fa80 <___svfiprintf_internal_r+0x121c>
 402f204:	94800414 	ori	r18,r18,16
 402f208:	9080080c 	andi	r2,r18,32
 402f20c:	103ec51e 	bne	r2,zero,402ed24 <_gp+0xfffedb24>
 402f210:	9080040c 	andi	r2,r18,16
 402f214:	10016926 	beq	r2,zero,402f7bc <___svfiprintf_internal_r+0xf58>
 402f218:	dac02317 	ldw	r11,140(sp)
 402f21c:	d8001d85 	stb	zero,118(sp)
 402f220:	0013883a 	mov	r9,zero
 402f224:	58800104 	addi	r2,r11,4
 402f228:	5f000017 	ldw	fp,0(r11)
 402f22c:	80016b16 	blt	r16,zero,402f7dc <___svfiprintf_internal_r+0xf78>
 402f230:	00ffdfc4 	movi	r3,-129
 402f234:	d8802315 	stw	r2,140(sp)
 402f238:	90e4703a 	and	r18,r18,r3
 402f23c:	e03ec41e 	bne	fp,zero,402ed50 <_gp+0xfffedb50>
 402f240:	0015883a 	mov	r10,zero
 402f244:	8001c226 	beq	r16,zero,402f950 <___svfiprintf_internal_r+0x10ec>
 402f248:	0039883a 	mov	fp,zero
 402f24c:	0013883a 	mov	r9,zero
 402f250:	003ec006 	br	402ed54 <_gp+0xfffedb54>
 402f254:	d8c01c17 	ldw	r3,112(sp)
 402f258:	d8801b17 	ldw	r2,108(sp)
 402f25c:	d9001d87 	ldb	r4,118(sp)
 402f260:	20000b26 	beq	r4,zero,402f290 <___svfiprintf_internal_r+0xa2c>
 402f264:	d9001d84 	addi	r4,sp,118
 402f268:	18c00044 	addi	r3,r3,1
 402f26c:	10800044 	addi	r2,r2,1
 402f270:	41000015 	stw	r4,0(r8)
 402f274:	01000044 	movi	r4,1
 402f278:	41000115 	stw	r4,4(r8)
 402f27c:	d8c01c15 	stw	r3,112(sp)
 402f280:	d8801b15 	stw	r2,108(sp)
 402f284:	010001c4 	movi	r4,7
 402f288:	2080e116 	blt	r4,r2,402f610 <___svfiprintf_internal_r+0xdac>
 402f28c:	42000204 	addi	r8,r8,8
 402f290:	dac02217 	ldw	r11,136(sp)
 402f294:	58000b26 	beq	r11,zero,402f2c4 <___svfiprintf_internal_r+0xa60>
 402f298:	d9001d04 	addi	r4,sp,116
 402f29c:	18c00084 	addi	r3,r3,2
 402f2a0:	10800044 	addi	r2,r2,1
 402f2a4:	41000015 	stw	r4,0(r8)
 402f2a8:	01000084 	movi	r4,2
 402f2ac:	41000115 	stw	r4,4(r8)
 402f2b0:	d8c01c15 	stw	r3,112(sp)
 402f2b4:	d8801b15 	stw	r2,108(sp)
 402f2b8:	010001c4 	movi	r4,7
 402f2bc:	2080dd16 	blt	r4,r2,402f634 <___svfiprintf_internal_r+0xdd0>
 402f2c0:	42000204 	addi	r8,r8,8
 402f2c4:	dac02617 	ldw	r11,152(sp)
 402f2c8:	01002004 	movi	r4,128
 402f2cc:	59008426 	beq	r11,r4,402f4e0 <___svfiprintf_internal_r+0xc7c>
 402f2d0:	dac02117 	ldw	r11,132(sp)
 402f2d4:	82e1c83a 	sub	r16,r16,r11
 402f2d8:	0400270e 	bge	zero,r16,402f378 <___svfiprintf_internal_r+0xb14>
 402f2dc:	01c00404 	movi	r7,16
 402f2e0:	3c016a0e 	bge	r7,r16,402f88c <___svfiprintf_internal_r+0x1028>
 402f2e4:	014100f4 	movhi	r5,1027
 402f2e8:	295d7a04 	addi	r5,r5,30184
 402f2ec:	d9402215 	stw	r5,136(sp)
 402f2f0:	070001c4 	movi	fp,7
 402f2f4:	00000306 	br	402f304 <___svfiprintf_internal_r+0xaa0>
 402f2f8:	843ffc04 	addi	r16,r16,-16
 402f2fc:	42000204 	addi	r8,r8,8
 402f300:	3c00130e 	bge	r7,r16,402f350 <___svfiprintf_internal_r+0xaec>
 402f304:	18c00404 	addi	r3,r3,16
 402f308:	10800044 	addi	r2,r2,1
 402f30c:	45000015 	stw	r20,0(r8)
 402f310:	41c00115 	stw	r7,4(r8)
 402f314:	d8c01c15 	stw	r3,112(sp)
 402f318:	d8801b15 	stw	r2,108(sp)
 402f31c:	e0bff60e 	bge	fp,r2,402f2f8 <_gp+0xfffee0f8>
 402f320:	d9801a04 	addi	r6,sp,104
 402f324:	b80b883a 	mov	r5,r23
 402f328:	a809883a 	mov	r4,r21
 402f32c:	d9c02c15 	stw	r7,176(sp)
 402f330:	402e6940 	call	402e694 <__ssprint_r>
 402f334:	d9c02c17 	ldw	r7,176(sp)
 402f338:	1000581e 	bne	r2,zero,402f49c <___svfiprintf_internal_r+0xc38>
 402f33c:	843ffc04 	addi	r16,r16,-16
 402f340:	d8c01c17 	ldw	r3,112(sp)
 402f344:	d8801b17 	ldw	r2,108(sp)
 402f348:	d811883a 	mov	r8,sp
 402f34c:	3c3fed16 	blt	r7,r16,402f304 <_gp+0xfffee104>
 402f350:	dac02217 	ldw	r11,136(sp)
 402f354:	1c07883a 	add	r3,r3,r16
 402f358:	10800044 	addi	r2,r2,1
 402f35c:	42c00015 	stw	r11,0(r8)
 402f360:	44000115 	stw	r16,4(r8)
 402f364:	d8c01c15 	stw	r3,112(sp)
 402f368:	d8801b15 	stw	r2,108(sp)
 402f36c:	010001c4 	movi	r4,7
 402f370:	20809e16 	blt	r4,r2,402f5ec <___svfiprintf_internal_r+0xd88>
 402f374:	42000204 	addi	r8,r8,8
 402f378:	dac02117 	ldw	r11,132(sp)
 402f37c:	10800044 	addi	r2,r2,1
 402f380:	44400015 	stw	r17,0(r8)
 402f384:	58c7883a 	add	r3,r11,r3
 402f388:	42c00115 	stw	r11,4(r8)
 402f38c:	d8c01c15 	stw	r3,112(sp)
 402f390:	d8801b15 	stw	r2,108(sp)
 402f394:	010001c4 	movi	r4,7
 402f398:	20807f16 	blt	r4,r2,402f598 <___svfiprintf_internal_r+0xd34>
 402f39c:	42000204 	addi	r8,r8,8
 402f3a0:	9480010c 	andi	r18,r18,4
 402f3a4:	90002926 	beq	r18,zero,402f44c <___svfiprintf_internal_r+0xbe8>
 402f3a8:	dac02417 	ldw	r11,144(sp)
 402f3ac:	d8802017 	ldw	r2,128(sp)
 402f3b0:	58a1c83a 	sub	r16,r11,r2
 402f3b4:	0400250e 	bge	zero,r16,402f44c <___svfiprintf_internal_r+0xbe8>
 402f3b8:	04400404 	movi	r17,16
 402f3bc:	d8801b17 	ldw	r2,108(sp)
 402f3c0:	8c017c0e 	bge	r17,r16,402f9b4 <___svfiprintf_internal_r+0x1150>
 402f3c4:	014100f4 	movhi	r5,1027
 402f3c8:	295d7e04 	addi	r5,r5,30200
 402f3cc:	d9402815 	stw	r5,160(sp)
 402f3d0:	048001c4 	movi	r18,7
 402f3d4:	00000306 	br	402f3e4 <___svfiprintf_internal_r+0xb80>
 402f3d8:	843ffc04 	addi	r16,r16,-16
 402f3dc:	42000204 	addi	r8,r8,8
 402f3e0:	8c00110e 	bge	r17,r16,402f428 <___svfiprintf_internal_r+0xbc4>
 402f3e4:	18c00404 	addi	r3,r3,16
 402f3e8:	10800044 	addi	r2,r2,1
 402f3ec:	45800015 	stw	r22,0(r8)
 402f3f0:	44400115 	stw	r17,4(r8)
 402f3f4:	d8c01c15 	stw	r3,112(sp)
 402f3f8:	d8801b15 	stw	r2,108(sp)
 402f3fc:	90bff60e 	bge	r18,r2,402f3d8 <_gp+0xfffee1d8>
 402f400:	d9801a04 	addi	r6,sp,104
 402f404:	b80b883a 	mov	r5,r23
 402f408:	a809883a 	mov	r4,r21
 402f40c:	402e6940 	call	402e694 <__ssprint_r>
 402f410:	1000221e 	bne	r2,zero,402f49c <___svfiprintf_internal_r+0xc38>
 402f414:	843ffc04 	addi	r16,r16,-16
 402f418:	d8c01c17 	ldw	r3,112(sp)
 402f41c:	d8801b17 	ldw	r2,108(sp)
 402f420:	d811883a 	mov	r8,sp
 402f424:	8c3fef16 	blt	r17,r16,402f3e4 <_gp+0xfffee1e4>
 402f428:	dac02817 	ldw	r11,160(sp)
 402f42c:	1c07883a 	add	r3,r3,r16
 402f430:	10800044 	addi	r2,r2,1
 402f434:	42c00015 	stw	r11,0(r8)
 402f438:	44000115 	stw	r16,4(r8)
 402f43c:	d8c01c15 	stw	r3,112(sp)
 402f440:	d8801b15 	stw	r2,108(sp)
 402f444:	010001c4 	movi	r4,7
 402f448:	2080aa16 	blt	r4,r2,402f6f4 <___svfiprintf_internal_r+0xe90>
 402f44c:	d8802417 	ldw	r2,144(sp)
 402f450:	dac02017 	ldw	r11,128(sp)
 402f454:	12c0010e 	bge	r2,r11,402f45c <___svfiprintf_internal_r+0xbf8>
 402f458:	5805883a 	mov	r2,r11
 402f45c:	dac02517 	ldw	r11,148(sp)
 402f460:	5897883a 	add	r11,r11,r2
 402f464:	dac02515 	stw	r11,148(sp)
 402f468:	1800531e 	bne	r3,zero,402f5b8 <___svfiprintf_internal_r+0xd54>
 402f46c:	98800007 	ldb	r2,0(r19)
 402f470:	d8001b15 	stw	zero,108(sp)
 402f474:	d811883a 	mov	r8,sp
 402f478:	103d231e 	bne	r2,zero,402e908 <_gp+0xfffed708>
 402f47c:	9823883a 	mov	r17,r19
 402f480:	003d3906 	br	402e968 <_gp+0xfffed768>
 402f484:	d8801c17 	ldw	r2,112(sp)
 402f488:	10000426 	beq	r2,zero,402f49c <___svfiprintf_internal_r+0xc38>
 402f48c:	d9402717 	ldw	r5,156(sp)
 402f490:	d9002a17 	ldw	r4,168(sp)
 402f494:	d9801a04 	addi	r6,sp,104
 402f498:	402e6940 	call	402e694 <__ssprint_r>
 402f49c:	dac02717 	ldw	r11,156(sp)
 402f4a0:	d8802517 	ldw	r2,148(sp)
 402f4a4:	58c0030b 	ldhu	r3,12(r11)
 402f4a8:	18c0100c 	andi	r3,r3,64
 402f4ac:	1801381e 	bne	r3,zero,402f990 <___svfiprintf_internal_r+0x112c>
 402f4b0:	dfc03717 	ldw	ra,220(sp)
 402f4b4:	df003617 	ldw	fp,216(sp)
 402f4b8:	ddc03517 	ldw	r23,212(sp)
 402f4bc:	dd803417 	ldw	r22,208(sp)
 402f4c0:	dd403317 	ldw	r21,204(sp)
 402f4c4:	dd003217 	ldw	r20,200(sp)
 402f4c8:	dcc03117 	ldw	r19,196(sp)
 402f4cc:	dc803017 	ldw	r18,192(sp)
 402f4d0:	dc402f17 	ldw	r17,188(sp)
 402f4d4:	dc002e17 	ldw	r16,184(sp)
 402f4d8:	dec03804 	addi	sp,sp,224
 402f4dc:	f800283a 	ret
 402f4e0:	dac02417 	ldw	r11,144(sp)
 402f4e4:	d9002017 	ldw	r4,128(sp)
 402f4e8:	5939c83a 	sub	fp,r11,r4
 402f4ec:	073f780e 	bge	zero,fp,402f2d0 <_gp+0xfffee0d0>
 402f4f0:	02400404 	movi	r9,16
 402f4f4:	4f01370e 	bge	r9,fp,402f9d4 <___svfiprintf_internal_r+0x1170>
 402f4f8:	02c100f4 	movhi	r11,1027
 402f4fc:	5add7a04 	addi	r11,r11,30184
 402f500:	dac02215 	stw	r11,136(sp)
 402f504:	028001c4 	movi	r10,7
 402f508:	00000306 	br	402f518 <___svfiprintf_internal_r+0xcb4>
 402f50c:	e73ffc04 	addi	fp,fp,-16
 402f510:	42000204 	addi	r8,r8,8
 402f514:	4f00150e 	bge	r9,fp,402f56c <___svfiprintf_internal_r+0xd08>
 402f518:	18c00404 	addi	r3,r3,16
 402f51c:	10800044 	addi	r2,r2,1
 402f520:	45000015 	stw	r20,0(r8)
 402f524:	42400115 	stw	r9,4(r8)
 402f528:	d8c01c15 	stw	r3,112(sp)
 402f52c:	d8801b15 	stw	r2,108(sp)
 402f530:	50bff60e 	bge	r10,r2,402f50c <_gp+0xfffee30c>
 402f534:	d9801a04 	addi	r6,sp,104
 402f538:	b80b883a 	mov	r5,r23
 402f53c:	a809883a 	mov	r4,r21
 402f540:	da402c15 	stw	r9,176(sp)
 402f544:	da802d15 	stw	r10,180(sp)
 402f548:	402e6940 	call	402e694 <__ssprint_r>
 402f54c:	da402c17 	ldw	r9,176(sp)
 402f550:	da802d17 	ldw	r10,180(sp)
 402f554:	103fd11e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f558:	e73ffc04 	addi	fp,fp,-16
 402f55c:	d8c01c17 	ldw	r3,112(sp)
 402f560:	d8801b17 	ldw	r2,108(sp)
 402f564:	d811883a 	mov	r8,sp
 402f568:	4f3feb16 	blt	r9,fp,402f518 <_gp+0xfffee318>
 402f56c:	dac02217 	ldw	r11,136(sp)
 402f570:	1f07883a 	add	r3,r3,fp
 402f574:	10800044 	addi	r2,r2,1
 402f578:	42c00015 	stw	r11,0(r8)
 402f57c:	47000115 	stw	fp,4(r8)
 402f580:	d8c01c15 	stw	r3,112(sp)
 402f584:	d8801b15 	stw	r2,108(sp)
 402f588:	010001c4 	movi	r4,7
 402f58c:	2080b616 	blt	r4,r2,402f868 <___svfiprintf_internal_r+0x1004>
 402f590:	42000204 	addi	r8,r8,8
 402f594:	003f4e06 	br	402f2d0 <_gp+0xfffee0d0>
 402f598:	d9801a04 	addi	r6,sp,104
 402f59c:	b80b883a 	mov	r5,r23
 402f5a0:	a809883a 	mov	r4,r21
 402f5a4:	402e6940 	call	402e694 <__ssprint_r>
 402f5a8:	103fbc1e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f5ac:	d8c01c17 	ldw	r3,112(sp)
 402f5b0:	d811883a 	mov	r8,sp
 402f5b4:	003f7a06 	br	402f3a0 <_gp+0xfffee1a0>
 402f5b8:	d9801a04 	addi	r6,sp,104
 402f5bc:	b80b883a 	mov	r5,r23
 402f5c0:	a809883a 	mov	r4,r21
 402f5c4:	402e6940 	call	402e694 <__ssprint_r>
 402f5c8:	103fa826 	beq	r2,zero,402f46c <_gp+0xfffee26c>
 402f5cc:	003fb306 	br	402f49c <_gp+0xfffee29c>
 402f5d0:	d9801a04 	addi	r6,sp,104
 402f5d4:	b80b883a 	mov	r5,r23
 402f5d8:	a809883a 	mov	r4,r21
 402f5dc:	402e6940 	call	402e694 <__ssprint_r>
 402f5e0:	103fae1e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f5e4:	d811883a 	mov	r8,sp
 402f5e8:	003cdc06 	br	402e95c <_gp+0xfffed75c>
 402f5ec:	d9801a04 	addi	r6,sp,104
 402f5f0:	b80b883a 	mov	r5,r23
 402f5f4:	a809883a 	mov	r4,r21
 402f5f8:	402e6940 	call	402e694 <__ssprint_r>
 402f5fc:	103fa71e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f600:	d8c01c17 	ldw	r3,112(sp)
 402f604:	d8801b17 	ldw	r2,108(sp)
 402f608:	d811883a 	mov	r8,sp
 402f60c:	003f5a06 	br	402f378 <_gp+0xfffee178>
 402f610:	d9801a04 	addi	r6,sp,104
 402f614:	b80b883a 	mov	r5,r23
 402f618:	a809883a 	mov	r4,r21
 402f61c:	402e6940 	call	402e694 <__ssprint_r>
 402f620:	103f9e1e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f624:	d8c01c17 	ldw	r3,112(sp)
 402f628:	d8801b17 	ldw	r2,108(sp)
 402f62c:	d811883a 	mov	r8,sp
 402f630:	003f1706 	br	402f290 <_gp+0xfffee090>
 402f634:	d9801a04 	addi	r6,sp,104
 402f638:	b80b883a 	mov	r5,r23
 402f63c:	a809883a 	mov	r4,r21
 402f640:	402e6940 	call	402e694 <__ssprint_r>
 402f644:	103f951e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f648:	d8c01c17 	ldw	r3,112(sp)
 402f64c:	d8801b17 	ldw	r2,108(sp)
 402f650:	d811883a 	mov	r8,sp
 402f654:	003f1b06 	br	402f2c4 <_gp+0xfffee0c4>
 402f658:	d8001d85 	stb	zero,118(sp)
 402f65c:	80007b16 	blt	r16,zero,402f84c <___svfiprintf_internal_r+0xfe8>
 402f660:	00ffdfc4 	movi	r3,-129
 402f664:	e244b03a 	or	r2,fp,r9
 402f668:	90e4703a 	and	r18,r18,r3
 402f66c:	103d7026 	beq	r2,zero,402ec30 <_gp+0xfffeda30>
 402f670:	0015883a 	mov	r10,zero
 402f674:	003d7206 	br	402ec40 <_gp+0xfffeda40>
 402f678:	d9801a04 	addi	r6,sp,104
 402f67c:	b80b883a 	mov	r5,r23
 402f680:	a809883a 	mov	r4,r21
 402f684:	402e6940 	call	402e694 <__ssprint_r>
 402f688:	103f841e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f68c:	d8c01c17 	ldw	r3,112(sp)
 402f690:	d8801b17 	ldw	r2,108(sp)
 402f694:	d811883a 	mov	r8,sp
 402f698:	003ef006 	br	402f25c <_gp+0xfffee05c>
 402f69c:	9080100c 	andi	r2,r18,64
 402f6a0:	d8001d85 	stb	zero,118(sp)
 402f6a4:	dac02317 	ldw	r11,140(sp)
 402f6a8:	10008126 	beq	r2,zero,402f8b0 <___svfiprintf_internal_r+0x104c>
 402f6ac:	58800104 	addi	r2,r11,4
 402f6b0:	5f00000b 	ldhu	fp,0(r11)
 402f6b4:	0013883a 	mov	r9,zero
 402f6b8:	803ec30e 	bge	r16,zero,402f1c8 <_gp+0xfffedfc8>
 402f6bc:	d8802315 	stw	r2,140(sp)
 402f6c0:	0015883a 	mov	r10,zero
 402f6c4:	e244b03a 	or	r2,fp,r9
 402f6c8:	103e371e 	bne	r2,zero,402efa8 <_gp+0xfffedda8>
 402f6cc:	00800044 	movi	r2,1
 402f6d0:	10803fcc 	andi	r2,r2,255
 402f6d4:	00c00044 	movi	r3,1
 402f6d8:	10c06126 	beq	r2,r3,402f860 <___svfiprintf_internal_r+0xffc>
 402f6dc:	00c00084 	movi	r3,2
 402f6e0:	10fd5526 	beq	r2,r3,402ec38 <_gp+0xfffeda38>
 402f6e4:	003ed806 	br	402f248 <_gp+0xfffee048>
 402f6e8:	d8802315 	stw	r2,140(sp)
 402f6ec:	98c00007 	ldb	r3,0(r19)
 402f6f0:	003cab06 	br	402e9a0 <_gp+0xfffed7a0>
 402f6f4:	d9801a04 	addi	r6,sp,104
 402f6f8:	b80b883a 	mov	r5,r23
 402f6fc:	a809883a 	mov	r4,r21
 402f700:	402e6940 	call	402e694 <__ssprint_r>
 402f704:	103f651e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f708:	d8c01c17 	ldw	r3,112(sp)
 402f70c:	003f4f06 	br	402f44c <_gp+0xfffee24c>
 402f710:	008100f4 	movhi	r2,1027
 402f714:	109d1204 	addi	r2,r2,29768
 402f718:	d8802915 	stw	r2,164(sp)
 402f71c:	003d4406 	br	402ec30 <_gp+0xfffeda30>
 402f720:	dac02317 	ldw	r11,140(sp)
 402f724:	58800017 	ldw	r2,0(r11)
 402f728:	dac02517 	ldw	r11,148(sp)
 402f72c:	5807d7fa 	srai	r3,r11,31
 402f730:	dac02317 	ldw	r11,140(sp)
 402f734:	10c00115 	stw	r3,4(r2)
 402f738:	5ac00104 	addi	r11,r11,4
 402f73c:	dac02315 	stw	r11,140(sp)
 402f740:	dac02517 	ldw	r11,148(sp)
 402f744:	12c00015 	stw	r11,0(r2)
 402f748:	003c6d06 	br	402e900 <_gp+0xfffed700>
 402f74c:	9080100c 	andi	r2,r18,64
 402f750:	dac02317 	ldw	r11,140(sp)
 402f754:	103e5326 	beq	r2,zero,402f0a4 <_gp+0xfffedea4>
 402f758:	5f00000f 	ldh	fp,0(r11)
 402f75c:	5ac00104 	addi	r11,r11,4
 402f760:	dac02315 	stw	r11,140(sp)
 402f764:	e013d7fa 	srai	r9,fp,31
 402f768:	4805883a 	mov	r2,r9
 402f76c:	003e0706 	br	402ef8c <_gp+0xfffedd8c>
 402f770:	00800c04 	movi	r2,48
 402f774:	d8801d05 	stb	r2,116(sp)
 402f778:	d8c01d45 	stb	r3,117(sp)
 402f77c:	d8001d85 	stb	zero,118(sp)
 402f780:	90800094 	ori	r2,r18,2
 402f784:	80008f16 	blt	r16,zero,402f9c4 <___svfiprintf_internal_r+0x1160>
 402f788:	00bfdfc4 	movi	r2,-129
 402f78c:	90a4703a 	and	r18,r18,r2
 402f790:	94800094 	ori	r18,r18,2
 402f794:	0015883a 	mov	r10,zero
 402f798:	003d2906 	br	402ec40 <_gp+0xfffeda40>
 402f79c:	98c00007 	ldb	r3,0(r19)
 402f7a0:	003c7f06 	br	402e9a0 <_gp+0xfffed7a0>
 402f7a4:	dac02317 	ldw	r11,140(sp)
 402f7a8:	0013883a 	mov	r9,zero
 402f7ac:	5f000017 	ldw	fp,0(r11)
 402f7b0:	5ac00104 	addi	r11,r11,4
 402f7b4:	dac02315 	stw	r11,140(sp)
 402f7b8:	003d1506 	br	402ec10 <_gp+0xfffeda10>
 402f7bc:	9080100c 	andi	r2,r18,64
 402f7c0:	d8001d85 	stb	zero,118(sp)
 402f7c4:	dac02317 	ldw	r11,140(sp)
 402f7c8:	10003426 	beq	r2,zero,402f89c <___svfiprintf_internal_r+0x1038>
 402f7cc:	58800104 	addi	r2,r11,4
 402f7d0:	5f00000b 	ldhu	fp,0(r11)
 402f7d4:	0013883a 	mov	r9,zero
 402f7d8:	803e950e 	bge	r16,zero,402f230 <_gp+0xfffee030>
 402f7dc:	e246b03a 	or	r3,fp,r9
 402f7e0:	d8802315 	stw	r2,140(sp)
 402f7e4:	183d5a1e 	bne	r3,zero,402ed50 <_gp+0xfffedb50>
 402f7e8:	0015883a 	mov	r10,zero
 402f7ec:	0005883a 	mov	r2,zero
 402f7f0:	003fb706 	br	402f6d0 <_gp+0xfffee4d0>
 402f7f4:	98c00043 	ldbu	r3,1(r19)
 402f7f8:	94800814 	ori	r18,r18,32
 402f7fc:	9cc00044 	addi	r19,r19,1
 402f800:	18c03fcc 	andi	r3,r3,255
 402f804:	18c0201c 	xori	r3,r3,128
 402f808:	18ffe004 	addi	r3,r3,-128
 402f80c:	003c6406 	br	402e9a0 <_gp+0xfffed7a0>
 402f810:	d8c02315 	stw	r3,140(sp)
 402f814:	0015883a 	mov	r10,zero
 402f818:	003faa06 	br	402f6c4 <_gp+0xfffee4c4>
 402f81c:	dac02317 	ldw	r11,140(sp)
 402f820:	58800017 	ldw	r2,0(r11)
 402f824:	5ac00104 	addi	r11,r11,4
 402f828:	dac02315 	stw	r11,140(sp)
 402f82c:	dac02517 	ldw	r11,148(sp)
 402f830:	12c00015 	stw	r11,0(r2)
 402f834:	003c3206 	br	402e900 <_gp+0xfffed700>
 402f838:	010100f4 	movhi	r4,1027
 402f83c:	211d1204 	addi	r4,r4,29768
 402f840:	d9002915 	stw	r4,164(sp)
 402f844:	d8c02315 	stw	r3,140(sp)
 402f848:	1025883a 	mov	r18,r2
 402f84c:	e244b03a 	or	r2,fp,r9
 402f850:	103f871e 	bne	r2,zero,402f670 <_gp+0xfffee470>
 402f854:	0015883a 	mov	r10,zero
 402f858:	00800084 	movi	r2,2
 402f85c:	003f9c06 	br	402f6d0 <_gp+0xfffee4d0>
 402f860:	0039883a 	mov	fp,zero
 402f864:	003e5f06 	br	402f1e4 <_gp+0xfffedfe4>
 402f868:	d9801a04 	addi	r6,sp,104
 402f86c:	b80b883a 	mov	r5,r23
 402f870:	a809883a 	mov	r4,r21
 402f874:	402e6940 	call	402e694 <__ssprint_r>
 402f878:	103f081e 	bne	r2,zero,402f49c <_gp+0xfffee29c>
 402f87c:	d8c01c17 	ldw	r3,112(sp)
 402f880:	d8801b17 	ldw	r2,108(sp)
 402f884:	d811883a 	mov	r8,sp
 402f888:	003e9106 	br	402f2d0 <_gp+0xfffee0d0>
 402f88c:	010100f4 	movhi	r4,1027
 402f890:	211d7a04 	addi	r4,r4,30184
 402f894:	d9002215 	stw	r4,136(sp)
 402f898:	003ead06 	br	402f350 <_gp+0xfffee150>
 402f89c:	58800104 	addi	r2,r11,4
 402f8a0:	5f000017 	ldw	fp,0(r11)
 402f8a4:	0013883a 	mov	r9,zero
 402f8a8:	803e610e 	bge	r16,zero,402f230 <_gp+0xfffee030>
 402f8ac:	003fcb06 	br	402f7dc <_gp+0xfffee5dc>
 402f8b0:	58800104 	addi	r2,r11,4
 402f8b4:	5f000017 	ldw	fp,0(r11)
 402f8b8:	0013883a 	mov	r9,zero
 402f8bc:	803e420e 	bge	r16,zero,402f1c8 <_gp+0xfffedfc8>
 402f8c0:	003f7e06 	br	402f6bc <_gp+0xfffee4bc>
 402f8c4:	5f000017 	ldw	fp,0(r11)
 402f8c8:	5ac00104 	addi	r11,r11,4
 402f8cc:	0013883a 	mov	r9,zero
 402f8d0:	dac02315 	stw	r11,140(sp)
 402f8d4:	003cce06 	br	402ec10 <_gp+0xfffeda10>
 402f8d8:	8809883a 	mov	r4,r17
 402f8dc:	da002c15 	stw	r8,176(sp)
 402f8e0:	40265340 	call	4026534 <strlen>
 402f8e4:	d8802115 	stw	r2,132(sp)
 402f8e8:	da801d83 	ldbu	r10,118(sp)
 402f8ec:	df002315 	stw	fp,140(sp)
 402f8f0:	0021883a 	mov	r16,zero
 402f8f4:	da002c17 	ldw	r8,176(sp)
 402f8f8:	003cf606 	br	402ecd4 <_gp+0xfffedad4>
 402f8fc:	00800184 	movi	r2,6
 402f900:	1400012e 	bgeu	r2,r16,402f908 <___svfiprintf_internal_r+0x10a4>
 402f904:	1021883a 	mov	r16,r2
 402f908:	dc002115 	stw	r16,132(sp)
 402f90c:	8005883a 	mov	r2,r16
 402f910:	80003c16 	blt	r16,zero,402fa04 <___svfiprintf_internal_r+0x11a0>
 402f914:	044100f4 	movhi	r17,1027
 402f918:	d8802015 	stw	r2,128(sp)
 402f91c:	df002315 	stw	fp,140(sp)
 402f920:	8c5d1704 	addi	r17,r17,29788
 402f924:	003d2e06 	br	402ede0 <_gp+0xfffedbe0>
 402f928:	04001004 	movi	r16,64
 402f92c:	800b883a 	mov	r5,r16
 402f930:	402561c0 	call	402561c <_malloc_r>
 402f934:	dac02717 	ldw	r11,156(sp)
 402f938:	58800015 	stw	r2,0(r11)
 402f93c:	58800415 	stw	r2,16(r11)
 402f940:	10004826 	beq	r2,zero,402fa64 <___svfiprintf_internal_r+0x1200>
 402f944:	dac02717 	ldw	r11,156(sp)
 402f948:	5c000515 	stw	r16,20(r11)
 402f94c:	003bd906 	br	402e8b4 <_gp+0xfffed6b4>
 402f950:	9080004c 	andi	r2,r18,1
 402f954:	0015883a 	mov	r10,zero
 402f958:	10000626 	beq	r2,zero,402f974 <___svfiprintf_internal_r+0x1110>
 402f95c:	dac02b17 	ldw	r11,172(sp)
 402f960:	00800c04 	movi	r2,48
 402f964:	d88019c5 	stb	r2,103(sp)
 402f968:	dac02115 	stw	r11,132(sp)
 402f96c:	dc4019c4 	addi	r17,sp,103
 402f970:	003cd806 	br	402ecd4 <_gp+0xfffedad4>
 402f974:	d8002115 	stw	zero,132(sp)
 402f978:	dc401a04 	addi	r17,sp,104
 402f97c:	003cd506 	br	402ecd4 <_gp+0xfffedad4>
 402f980:	010100f4 	movhi	r4,1027
 402f984:	211d7e04 	addi	r4,r4,30200
 402f988:	d9002815 	stw	r4,160(sp)
 402f98c:	003d4306 	br	402ee9c <_gp+0xfffedc9c>
 402f990:	00bfffc4 	movi	r2,-1
 402f994:	003ec606 	br	402f4b0 <_gp+0xfffee2b0>
 402f998:	00800044 	movi	r2,1
 402f99c:	10803fcc 	andi	r2,r2,255
 402f9a0:	00c00044 	movi	r3,1
 402f9a4:	10fd8026 	beq	r2,r3,402efa8 <_gp+0xfffedda8>
 402f9a8:	00c00084 	movi	r3,2
 402f9ac:	10fca426 	beq	r2,r3,402ec40 <_gp+0xfffeda40>
 402f9b0:	003ce806 	br	402ed54 <_gp+0xfffedb54>
 402f9b4:	010100f4 	movhi	r4,1027
 402f9b8:	211d7e04 	addi	r4,r4,30200
 402f9bc:	d9002815 	stw	r4,160(sp)
 402f9c0:	003e9906 	br	402f428 <_gp+0xfffee228>
 402f9c4:	1025883a 	mov	r18,r2
 402f9c8:	0015883a 	mov	r10,zero
 402f9cc:	00800084 	movi	r2,2
 402f9d0:	003ff206 	br	402f99c <_gp+0xfffee79c>
 402f9d4:	014100f4 	movhi	r5,1027
 402f9d8:	295d7a04 	addi	r5,r5,30184
 402f9dc:	d9402215 	stw	r5,136(sp)
 402f9e0:	003ee206 	br	402f56c <_gp+0xfffee36c>
 402f9e4:	5827883a 	mov	r19,r11
 402f9e8:	0021883a 	mov	r16,zero
 402f9ec:	003bed06 	br	402e9a4 <_gp+0xfffed7a4>
 402f9f0:	dc002115 	stw	r16,132(sp)
 402f9f4:	da801d83 	ldbu	r10,118(sp)
 402f9f8:	df002315 	stw	fp,140(sp)
 402f9fc:	0021883a 	mov	r16,zero
 402fa00:	003cb406 	br	402ecd4 <_gp+0xfffedad4>
 402fa04:	0005883a 	mov	r2,zero
 402fa08:	003fc206 	br	402f914 <_gp+0xfffee714>
 402fa0c:	d8802317 	ldw	r2,140(sp)
 402fa10:	98c00043 	ldbu	r3,1(r19)
 402fa14:	5827883a 	mov	r19,r11
 402fa18:	14000017 	ldw	r16,0(r2)
 402fa1c:	10800104 	addi	r2,r2,4
 402fa20:	d8802315 	stw	r2,140(sp)
 402fa24:	803f760e 	bge	r16,zero,402f800 <_gp+0xfffee600>
 402fa28:	18c03fcc 	andi	r3,r3,255
 402fa2c:	18c0201c 	xori	r3,r3,128
 402fa30:	043fffc4 	movi	r16,-1
 402fa34:	18ffe004 	addi	r3,r3,-128
 402fa38:	003bd906 	br	402e9a0 <_gp+0xfffed7a0>
 402fa3c:	d9c01d85 	stb	r7,118(sp)
 402fa40:	003cb606 	br	402ed1c <_gp+0xfffedb1c>
 402fa44:	d9c01d85 	stb	r7,118(sp)
 402fa48:	003d2106 	br	402eed0 <_gp+0xfffedcd0>
 402fa4c:	d9c01d85 	stb	r7,118(sp)
 402fa50:	003d8e06 	br	402f08c <_gp+0xfffede8c>
 402fa54:	d9c01d85 	stb	r7,118(sp)
 402fa58:	003db306 	br	402f128 <_gp+0xfffedf28>
 402fa5c:	d9c01d85 	stb	r7,118(sp)
 402fa60:	003c8a06 	br	402ec8c <_gp+0xfffeda8c>
 402fa64:	dac02a17 	ldw	r11,168(sp)
 402fa68:	00800304 	movi	r2,12
 402fa6c:	58800015 	stw	r2,0(r11)
 402fa70:	00bfffc4 	movi	r2,-1
 402fa74:	003e8e06 	br	402f4b0 <_gp+0xfffee2b0>
 402fa78:	d9c01d85 	stb	r7,118(sp)
 402fa7c:	003dc706 	br	402f19c <_gp+0xfffedf9c>
 402fa80:	d9c01d85 	stb	r7,118(sp)
 402fa84:	003ddf06 	br	402f204 <_gp+0xfffee004>
 402fa88:	d9c01d85 	stb	r7,118(sp)
 402fa8c:	003d3706 	br	402ef6c <_gp+0xfffedd6c>
 402fa90:	d9c01d85 	stb	r7,118(sp)
 402fa94:	003c5406 	br	402ebe8 <_gp+0xfffed9e8>
 402fa98:	d9c01d85 	stb	r7,118(sp)
 402fa9c:	003d1d06 	br	402ef14 <_gp+0xfffedd14>

0402faa0 <__sprint_r.part.0>:
 402faa0:	28801917 	ldw	r2,100(r5)
 402faa4:	defff604 	addi	sp,sp,-40
 402faa8:	dd400515 	stw	r21,20(sp)
 402faac:	dfc00915 	stw	ra,36(sp)
 402fab0:	df000815 	stw	fp,32(sp)
 402fab4:	ddc00715 	stw	r23,28(sp)
 402fab8:	dd800615 	stw	r22,24(sp)
 402fabc:	dd000415 	stw	r20,16(sp)
 402fac0:	dcc00315 	stw	r19,12(sp)
 402fac4:	dc800215 	stw	r18,8(sp)
 402fac8:	dc400115 	stw	r17,4(sp)
 402facc:	dc000015 	stw	r16,0(sp)
 402fad0:	1088000c 	andi	r2,r2,8192
 402fad4:	302b883a 	mov	r21,r6
 402fad8:	10002e26 	beq	r2,zero,402fb94 <__sprint_r.part.0+0xf4>
 402fadc:	30800217 	ldw	r2,8(r6)
 402fae0:	35800017 	ldw	r22,0(r6)
 402fae4:	10002926 	beq	r2,zero,402fb8c <__sprint_r.part.0+0xec>
 402fae8:	2827883a 	mov	r19,r5
 402faec:	2029883a 	mov	r20,r4
 402faf0:	b5c00104 	addi	r23,r22,4
 402faf4:	04bfffc4 	movi	r18,-1
 402faf8:	bc400017 	ldw	r17,0(r23)
 402fafc:	b4000017 	ldw	r16,0(r22)
 402fb00:	0039883a 	mov	fp,zero
 402fb04:	8822d0ba 	srli	r17,r17,2
 402fb08:	8800031e 	bne	r17,zero,402fb18 <__sprint_r.part.0+0x78>
 402fb0c:	00001806 	br	402fb70 <__sprint_r.part.0+0xd0>
 402fb10:	84000104 	addi	r16,r16,4
 402fb14:	8f001526 	beq	r17,fp,402fb6c <__sprint_r.part.0+0xcc>
 402fb18:	81400017 	ldw	r5,0(r16)
 402fb1c:	980d883a 	mov	r6,r19
 402fb20:	a009883a 	mov	r4,r20
 402fb24:	40313100 	call	4031310 <_fputwc_r>
 402fb28:	e7000044 	addi	fp,fp,1
 402fb2c:	14bff81e 	bne	r2,r18,402fb10 <_gp+0xfffee910>
 402fb30:	9005883a 	mov	r2,r18
 402fb34:	a8000215 	stw	zero,8(r21)
 402fb38:	a8000115 	stw	zero,4(r21)
 402fb3c:	dfc00917 	ldw	ra,36(sp)
 402fb40:	df000817 	ldw	fp,32(sp)
 402fb44:	ddc00717 	ldw	r23,28(sp)
 402fb48:	dd800617 	ldw	r22,24(sp)
 402fb4c:	dd400517 	ldw	r21,20(sp)
 402fb50:	dd000417 	ldw	r20,16(sp)
 402fb54:	dcc00317 	ldw	r19,12(sp)
 402fb58:	dc800217 	ldw	r18,8(sp)
 402fb5c:	dc400117 	ldw	r17,4(sp)
 402fb60:	dc000017 	ldw	r16,0(sp)
 402fb64:	dec00a04 	addi	sp,sp,40
 402fb68:	f800283a 	ret
 402fb6c:	a8800217 	ldw	r2,8(r21)
 402fb70:	8c63883a 	add	r17,r17,r17
 402fb74:	8c63883a 	add	r17,r17,r17
 402fb78:	1445c83a 	sub	r2,r2,r17
 402fb7c:	a8800215 	stw	r2,8(r21)
 402fb80:	b5800204 	addi	r22,r22,8
 402fb84:	bdc00204 	addi	r23,r23,8
 402fb88:	103fdb1e 	bne	r2,zero,402faf8 <_gp+0xfffee8f8>
 402fb8c:	0005883a 	mov	r2,zero
 402fb90:	003fe806 	br	402fb34 <_gp+0xfffee934>
 402fb94:	402c5b00 	call	402c5b0 <__sfvwrite_r>
 402fb98:	003fe606 	br	402fb34 <_gp+0xfffee934>

0402fb9c <__sprint_r>:
 402fb9c:	30c00217 	ldw	r3,8(r6)
 402fba0:	18000126 	beq	r3,zero,402fba8 <__sprint_r+0xc>
 402fba4:	402faa01 	jmpi	402faa0 <__sprint_r.part.0>
 402fba8:	30000115 	stw	zero,4(r6)
 402fbac:	0005883a 	mov	r2,zero
 402fbb0:	f800283a 	ret

0402fbb4 <___vfiprintf_internal_r>:
 402fbb4:	deffc904 	addi	sp,sp,-220
 402fbb8:	df003515 	stw	fp,212(sp)
 402fbbc:	dd003115 	stw	r20,196(sp)
 402fbc0:	dfc03615 	stw	ra,216(sp)
 402fbc4:	ddc03415 	stw	r23,208(sp)
 402fbc8:	dd803315 	stw	r22,204(sp)
 402fbcc:	dd403215 	stw	r21,200(sp)
 402fbd0:	dcc03015 	stw	r19,192(sp)
 402fbd4:	dc802f15 	stw	r18,188(sp)
 402fbd8:	dc402e15 	stw	r17,184(sp)
 402fbdc:	dc002d15 	stw	r16,180(sp)
 402fbe0:	d9002015 	stw	r4,128(sp)
 402fbe4:	d9c02215 	stw	r7,136(sp)
 402fbe8:	2829883a 	mov	r20,r5
 402fbec:	3039883a 	mov	fp,r6
 402fbf0:	20000226 	beq	r4,zero,402fbfc <___vfiprintf_internal_r+0x48>
 402fbf4:	20800e17 	ldw	r2,56(r4)
 402fbf8:	1000cf26 	beq	r2,zero,402ff38 <___vfiprintf_internal_r+0x384>
 402fbfc:	a080030b 	ldhu	r2,12(r20)
 402fc00:	10c8000c 	andi	r3,r2,8192
 402fc04:	1800061e 	bne	r3,zero,402fc20 <___vfiprintf_internal_r+0x6c>
 402fc08:	a1001917 	ldw	r4,100(r20)
 402fc0c:	00f7ffc4 	movi	r3,-8193
 402fc10:	10880014 	ori	r2,r2,8192
 402fc14:	20c6703a 	and	r3,r4,r3
 402fc18:	a080030d 	sth	r2,12(r20)
 402fc1c:	a0c01915 	stw	r3,100(r20)
 402fc20:	10c0020c 	andi	r3,r2,8
 402fc24:	1800a926 	beq	r3,zero,402fecc <___vfiprintf_internal_r+0x318>
 402fc28:	a0c00417 	ldw	r3,16(r20)
 402fc2c:	1800a726 	beq	r3,zero,402fecc <___vfiprintf_internal_r+0x318>
 402fc30:	1080068c 	andi	r2,r2,26
 402fc34:	00c00284 	movi	r3,10
 402fc38:	10c0ac26 	beq	r2,r3,402feec <___vfiprintf_internal_r+0x338>
 402fc3c:	da801a04 	addi	r10,sp,104
 402fc40:	da801e15 	stw	r10,120(sp)
 402fc44:	d8801e17 	ldw	r2,120(sp)
 402fc48:	da8019c4 	addi	r10,sp,103
 402fc4c:	058100f4 	movhi	r22,1027
 402fc50:	05c100f4 	movhi	r23,1027
 402fc54:	da801f15 	stw	r10,124(sp)
 402fc58:	1295c83a 	sub	r10,r2,r10
 402fc5c:	b59d8604 	addi	r22,r22,30232
 402fc60:	bddd8204 	addi	r23,r23,30216
 402fc64:	dec01a15 	stw	sp,104(sp)
 402fc68:	d8001c15 	stw	zero,112(sp)
 402fc6c:	d8001b15 	stw	zero,108(sp)
 402fc70:	d8002615 	stw	zero,152(sp)
 402fc74:	d8002315 	stw	zero,140(sp)
 402fc78:	da802715 	stw	r10,156(sp)
 402fc7c:	d811883a 	mov	r8,sp
 402fc80:	dd002115 	stw	r20,132(sp)
 402fc84:	e021883a 	mov	r16,fp
 402fc88:	80800007 	ldb	r2,0(r16)
 402fc8c:	1003ea26 	beq	r2,zero,4030c38 <___vfiprintf_internal_r+0x1084>
 402fc90:	00c00944 	movi	r3,37
 402fc94:	8025883a 	mov	r18,r16
 402fc98:	10c0021e 	bne	r2,r3,402fca4 <___vfiprintf_internal_r+0xf0>
 402fc9c:	00001606 	br	402fcf8 <___vfiprintf_internal_r+0x144>
 402fca0:	10c00326 	beq	r2,r3,402fcb0 <___vfiprintf_internal_r+0xfc>
 402fca4:	94800044 	addi	r18,r18,1
 402fca8:	90800007 	ldb	r2,0(r18)
 402fcac:	103ffc1e 	bne	r2,zero,402fca0 <_gp+0xfffeeaa0>
 402fcb0:	9423c83a 	sub	r17,r18,r16
 402fcb4:	88001026 	beq	r17,zero,402fcf8 <___vfiprintf_internal_r+0x144>
 402fcb8:	d8c01c17 	ldw	r3,112(sp)
 402fcbc:	d8801b17 	ldw	r2,108(sp)
 402fcc0:	44000015 	stw	r16,0(r8)
 402fcc4:	88c7883a 	add	r3,r17,r3
 402fcc8:	10800044 	addi	r2,r2,1
 402fccc:	44400115 	stw	r17,4(r8)
 402fcd0:	d8c01c15 	stw	r3,112(sp)
 402fcd4:	d8801b15 	stw	r2,108(sp)
 402fcd8:	010001c4 	movi	r4,7
 402fcdc:	2080760e 	bge	r4,r2,402feb8 <___vfiprintf_internal_r+0x304>
 402fce0:	1803821e 	bne	r3,zero,4030aec <___vfiprintf_internal_r+0xf38>
 402fce4:	da802317 	ldw	r10,140(sp)
 402fce8:	d8001b15 	stw	zero,108(sp)
 402fcec:	d811883a 	mov	r8,sp
 402fcf0:	5455883a 	add	r10,r10,r17
 402fcf4:	da802315 	stw	r10,140(sp)
 402fcf8:	90800007 	ldb	r2,0(r18)
 402fcfc:	10044626 	beq	r2,zero,4030e18 <___vfiprintf_internal_r+0x1264>
 402fd00:	90c00047 	ldb	r3,1(r18)
 402fd04:	94000044 	addi	r16,r18,1
 402fd08:	d8001d85 	stb	zero,118(sp)
 402fd0c:	0009883a 	mov	r4,zero
 402fd10:	000f883a 	mov	r7,zero
 402fd14:	027fffc4 	movi	r9,-1
 402fd18:	0023883a 	mov	r17,zero
 402fd1c:	0029883a 	mov	r20,zero
 402fd20:	01401604 	movi	r5,88
 402fd24:	01800244 	movi	r6,9
 402fd28:	03400a84 	movi	r13,42
 402fd2c:	03001b04 	movi	r12,108
 402fd30:	84000044 	addi	r16,r16,1
 402fd34:	18bff804 	addi	r2,r3,-32
 402fd38:	28827336 	bltu	r5,r2,4030708 <___vfiprintf_internal_r+0xb54>
 402fd3c:	100490ba 	slli	r2,r2,2
 402fd40:	028100f4 	movhi	r10,1027
 402fd44:	52bf5504 	addi	r10,r10,-684
 402fd48:	1285883a 	add	r2,r2,r10
 402fd4c:	10800017 	ldw	r2,0(r2)
 402fd50:	1000683a 	jmp	r2
 402fd54:	0403043c 	xorhi	r16,zero,3088
 402fd58:	04030708 	cmpgei	r16,zero,3100
 402fd5c:	04030708 	cmpgei	r16,zero,3100
 402fd60:	0403045c 	xori	r16,zero,3089
 402fd64:	04030708 	cmpgei	r16,zero,3100
 402fd68:	04030708 	cmpgei	r16,zero,3100
 402fd6c:	04030708 	cmpgei	r16,zero,3100
 402fd70:	04030708 	cmpgei	r16,zero,3100
 402fd74:	04030708 	cmpgei	r16,zero,3100
 402fd78:	04030708 	cmpgei	r16,zero,3100
 402fd7c:	04030644 	movi	r16,3097
 402fd80:	04030660 	cmpeqi	r16,zero,3097
 402fd84:	04030708 	cmpgei	r16,zero,3100
 402fd88:	0402ff48 	cmpgei	r16,zero,3069
 402fd8c:	04030670 	cmpltui	r16,zero,3097
 402fd90:	04030708 	cmpgei	r16,zero,3100
 402fd94:	04030468 	cmpgeui	r16,zero,3089
 402fd98:	04030474 	movhi	r16,3089
 402fd9c:	04030474 	movhi	r16,3089
 402fda0:	04030474 	movhi	r16,3089
 402fda4:	04030474 	movhi	r16,3089
 402fda8:	04030474 	movhi	r16,3089
 402fdac:	04030474 	movhi	r16,3089
 402fdb0:	04030474 	movhi	r16,3089
 402fdb4:	04030474 	movhi	r16,3089
 402fdb8:	04030474 	movhi	r16,3089
 402fdbc:	04030708 	cmpgei	r16,zero,3100
 402fdc0:	04030708 	cmpgei	r16,zero,3100
 402fdc4:	04030708 	cmpgei	r16,zero,3100
 402fdc8:	04030708 	cmpgei	r16,zero,3100
 402fdcc:	04030708 	cmpgei	r16,zero,3100
 402fdd0:	04030708 	cmpgei	r16,zero,3100
 402fdd4:	04030708 	cmpgei	r16,zero,3100
 402fdd8:	04030708 	cmpgei	r16,zero,3100
 402fddc:	04030708 	cmpgei	r16,zero,3100
 402fde0:	04030708 	cmpgei	r16,zero,3100
 402fde4:	040304a0 	cmpeqi	r16,zero,3090
 402fde8:	04030708 	cmpgei	r16,zero,3100
 402fdec:	04030708 	cmpgei	r16,zero,3100
 402fdf0:	04030708 	cmpgei	r16,zero,3100
 402fdf4:	04030708 	cmpgei	r16,zero,3100
 402fdf8:	04030708 	cmpgei	r16,zero,3100
 402fdfc:	04030708 	cmpgei	r16,zero,3100
 402fe00:	04030708 	cmpgei	r16,zero,3100
 402fe04:	04030708 	cmpgei	r16,zero,3100
 402fe08:	04030708 	cmpgei	r16,zero,3100
 402fe0c:	04030708 	cmpgei	r16,zero,3100
 402fe10:	040304d8 	cmpnei	r16,zero,3091
 402fe14:	04030708 	cmpgei	r16,zero,3100
 402fe18:	04030708 	cmpgei	r16,zero,3100
 402fe1c:	04030708 	cmpgei	r16,zero,3100
 402fe20:	04030708 	cmpgei	r16,zero,3100
 402fe24:	04030708 	cmpgei	r16,zero,3100
 402fe28:	04030530 	cmpltui	r16,zero,3092
 402fe2c:	04030708 	cmpgei	r16,zero,3100
 402fe30:	04030708 	cmpgei	r16,zero,3100
 402fe34:	040305a0 	cmpeqi	r16,zero,3094
 402fe38:	04030708 	cmpgei	r16,zero,3100
 402fe3c:	04030708 	cmpgei	r16,zero,3100
 402fe40:	04030708 	cmpgei	r16,zero,3100
 402fe44:	04030708 	cmpgei	r16,zero,3100
 402fe48:	04030708 	cmpgei	r16,zero,3100
 402fe4c:	04030708 	cmpgei	r16,zero,3100
 402fe50:	04030708 	cmpgei	r16,zero,3100
 402fe54:	04030708 	cmpgei	r16,zero,3100
 402fe58:	04030708 	cmpgei	r16,zero,3100
 402fe5c:	04030708 	cmpgei	r16,zero,3100
 402fe60:	0403034c 	andi	r16,zero,3085
 402fe64:	04030378 	rdprs	r16,zero,3085
 402fe68:	04030708 	cmpgei	r16,zero,3100
 402fe6c:	04030708 	cmpgei	r16,zero,3100
 402fe70:	04030708 	cmpgei	r16,zero,3100
 402fe74:	040306b0 	cmpltui	r16,zero,3098
 402fe78:	04030378 	rdprs	r16,zero,3085
 402fe7c:	04030708 	cmpgei	r16,zero,3100
 402fe80:	04030708 	cmpgei	r16,zero,3100
 402fe84:	0403020c 	andi	r16,zero,3080
 402fe88:	04030708 	cmpgei	r16,zero,3100
 402fe8c:	0403021c 	xori	r16,zero,3080
 402fe90:	04030258 	cmpnei	r16,zero,3081
 402fe94:	0402ff54 	movui	r16,3069
 402fe98:	04030200 	call	403020 <__alt_mem_SDRAM_Controller+0x403020>
 402fe9c:	04030708 	cmpgei	r16,zero,3100
 402fea0:	040305dc 	xori	r16,zero,3095
 402fea4:	04030708 	cmpgei	r16,zero,3100
 402fea8:	04030634 	movhi	r16,3096
 402feac:	04030708 	cmpgei	r16,zero,3100
 402feb0:	04030708 	cmpgei	r16,zero,3100
 402feb4:	040302f8 	rdprs	r16,zero,3083
 402feb8:	42000204 	addi	r8,r8,8
 402febc:	da802317 	ldw	r10,140(sp)
 402fec0:	5455883a 	add	r10,r10,r17
 402fec4:	da802315 	stw	r10,140(sp)
 402fec8:	003f8b06 	br	402fcf8 <_gp+0xfffeeaf8>
 402fecc:	d9002017 	ldw	r4,128(sp)
 402fed0:	a00b883a 	mov	r5,r20
 402fed4:	402aad40 	call	402aad4 <__swsetup_r>
 402fed8:	1003b11e 	bne	r2,zero,4030da0 <___vfiprintf_internal_r+0x11ec>
 402fedc:	a080030b 	ldhu	r2,12(r20)
 402fee0:	00c00284 	movi	r3,10
 402fee4:	1080068c 	andi	r2,r2,26
 402fee8:	10ff541e 	bne	r2,r3,402fc3c <_gp+0xfffeea3c>
 402feec:	a080038f 	ldh	r2,14(r20)
 402fef0:	103f5216 	blt	r2,zero,402fc3c <_gp+0xfffeea3c>
 402fef4:	d9c02217 	ldw	r7,136(sp)
 402fef8:	d9002017 	ldw	r4,128(sp)
 402fefc:	e00d883a 	mov	r6,fp
 402ff00:	a00b883a 	mov	r5,r20
 402ff04:	403102c0 	call	403102c <__sbprintf>
 402ff08:	dfc03617 	ldw	ra,216(sp)
 402ff0c:	df003517 	ldw	fp,212(sp)
 402ff10:	ddc03417 	ldw	r23,208(sp)
 402ff14:	dd803317 	ldw	r22,204(sp)
 402ff18:	dd403217 	ldw	r21,200(sp)
 402ff1c:	dd003117 	ldw	r20,196(sp)
 402ff20:	dcc03017 	ldw	r19,192(sp)
 402ff24:	dc802f17 	ldw	r18,188(sp)
 402ff28:	dc402e17 	ldw	r17,184(sp)
 402ff2c:	dc002d17 	ldw	r16,180(sp)
 402ff30:	dec03704 	addi	sp,sp,220
 402ff34:	f800283a 	ret
 402ff38:	40247200 	call	4024720 <__sinit>
 402ff3c:	003f2f06 	br	402fbfc <_gp+0xfffee9fc>
 402ff40:	0463c83a 	sub	r17,zero,r17
 402ff44:	d8802215 	stw	r2,136(sp)
 402ff48:	a5000114 	ori	r20,r20,4
 402ff4c:	80c00007 	ldb	r3,0(r16)
 402ff50:	003f7706 	br	402fd30 <_gp+0xfffeeb30>
 402ff54:	00800c04 	movi	r2,48
 402ff58:	da802217 	ldw	r10,136(sp)
 402ff5c:	d8801d05 	stb	r2,116(sp)
 402ff60:	00801e04 	movi	r2,120
 402ff64:	d8801d45 	stb	r2,117(sp)
 402ff68:	d8001d85 	stb	zero,118(sp)
 402ff6c:	50c00104 	addi	r3,r10,4
 402ff70:	54800017 	ldw	r18,0(r10)
 402ff74:	0027883a 	mov	r19,zero
 402ff78:	a0800094 	ori	r2,r20,2
 402ff7c:	48030b16 	blt	r9,zero,4030bac <___vfiprintf_internal_r+0xff8>
 402ff80:	00bfdfc4 	movi	r2,-129
 402ff84:	a096703a 	and	r11,r20,r2
 402ff88:	d8c02215 	stw	r3,136(sp)
 402ff8c:	5d000094 	ori	r20,r11,2
 402ff90:	90032b1e 	bne	r18,zero,4030c40 <___vfiprintf_internal_r+0x108c>
 402ff94:	008100f4 	movhi	r2,1027
 402ff98:	109d1204 	addi	r2,r2,29768
 402ff9c:	d8802615 	stw	r2,152(sp)
 402ffa0:	0039883a 	mov	fp,zero
 402ffa4:	48017b1e 	bne	r9,zero,4030594 <___vfiprintf_internal_r+0x9e0>
 402ffa8:	0013883a 	mov	r9,zero
 402ffac:	0027883a 	mov	r19,zero
 402ffb0:	dd401a04 	addi	r21,sp,104
 402ffb4:	4825883a 	mov	r18,r9
 402ffb8:	4cc0010e 	bge	r9,r19,402ffc0 <___vfiprintf_internal_r+0x40c>
 402ffbc:	9825883a 	mov	r18,r19
 402ffc0:	e7003fcc 	andi	fp,fp,255
 402ffc4:	e700201c 	xori	fp,fp,128
 402ffc8:	e73fe004 	addi	fp,fp,-128
 402ffcc:	e0000126 	beq	fp,zero,402ffd4 <___vfiprintf_internal_r+0x420>
 402ffd0:	94800044 	addi	r18,r18,1
 402ffd4:	a380008c 	andi	r14,r20,2
 402ffd8:	70000126 	beq	r14,zero,402ffe0 <___vfiprintf_internal_r+0x42c>
 402ffdc:	94800084 	addi	r18,r18,2
 402ffe0:	a700210c 	andi	fp,r20,132
 402ffe4:	e001df1e 	bne	fp,zero,4030764 <___vfiprintf_internal_r+0xbb0>
 402ffe8:	8c87c83a 	sub	r3,r17,r18
 402ffec:	00c1dd0e 	bge	zero,r3,4030764 <___vfiprintf_internal_r+0xbb0>
 402fff0:	01c00404 	movi	r7,16
 402fff4:	d8801c17 	ldw	r2,112(sp)
 402fff8:	38c3ad0e 	bge	r7,r3,4030eb0 <___vfiprintf_internal_r+0x12fc>
 402fffc:	028100f4 	movhi	r10,1027
 4030000:	529d8604 	addi	r10,r10,30232
 4030004:	dc002915 	stw	r16,164(sp)
 4030008:	d9801b17 	ldw	r6,108(sp)
 403000c:	da802415 	stw	r10,144(sp)
 4030010:	03c001c4 	movi	r15,7
 4030014:	da402515 	stw	r9,148(sp)
 4030018:	db802815 	stw	r14,160(sp)
 403001c:	1821883a 	mov	r16,r3
 4030020:	00000506 	br	4030038 <___vfiprintf_internal_r+0x484>
 4030024:	31400084 	addi	r5,r6,2
 4030028:	42000204 	addi	r8,r8,8
 403002c:	200d883a 	mov	r6,r4
 4030030:	843ffc04 	addi	r16,r16,-16
 4030034:	3c000d0e 	bge	r7,r16,403006c <___vfiprintf_internal_r+0x4b8>
 4030038:	10800404 	addi	r2,r2,16
 403003c:	31000044 	addi	r4,r6,1
 4030040:	45800015 	stw	r22,0(r8)
 4030044:	41c00115 	stw	r7,4(r8)
 4030048:	d8801c15 	stw	r2,112(sp)
 403004c:	d9001b15 	stw	r4,108(sp)
 4030050:	793ff40e 	bge	r15,r4,4030024 <_gp+0xfffeee24>
 4030054:	1001b51e 	bne	r2,zero,403072c <___vfiprintf_internal_r+0xb78>
 4030058:	843ffc04 	addi	r16,r16,-16
 403005c:	000d883a 	mov	r6,zero
 4030060:	01400044 	movi	r5,1
 4030064:	d811883a 	mov	r8,sp
 4030068:	3c3ff316 	blt	r7,r16,4030038 <_gp+0xfffeee38>
 403006c:	8007883a 	mov	r3,r16
 4030070:	da402517 	ldw	r9,148(sp)
 4030074:	db802817 	ldw	r14,160(sp)
 4030078:	dc002917 	ldw	r16,164(sp)
 403007c:	da802417 	ldw	r10,144(sp)
 4030080:	1885883a 	add	r2,r3,r2
 4030084:	40c00115 	stw	r3,4(r8)
 4030088:	42800015 	stw	r10,0(r8)
 403008c:	d8801c15 	stw	r2,112(sp)
 4030090:	d9401b15 	stw	r5,108(sp)
 4030094:	00c001c4 	movi	r3,7
 4030098:	19426016 	blt	r3,r5,4030a1c <___vfiprintf_internal_r+0xe68>
 403009c:	d8c01d87 	ldb	r3,118(sp)
 40300a0:	42000204 	addi	r8,r8,8
 40300a4:	29000044 	addi	r4,r5,1
 40300a8:	1801b31e 	bne	r3,zero,4030778 <___vfiprintf_internal_r+0xbc4>
 40300ac:	7001c026 	beq	r14,zero,40307b0 <___vfiprintf_internal_r+0xbfc>
 40300b0:	d8c01d04 	addi	r3,sp,116
 40300b4:	10800084 	addi	r2,r2,2
 40300b8:	40c00015 	stw	r3,0(r8)
 40300bc:	00c00084 	movi	r3,2
 40300c0:	40c00115 	stw	r3,4(r8)
 40300c4:	d8801c15 	stw	r2,112(sp)
 40300c8:	d9001b15 	stw	r4,108(sp)
 40300cc:	00c001c4 	movi	r3,7
 40300d0:	1902650e 	bge	r3,r4,4030a68 <___vfiprintf_internal_r+0xeb4>
 40300d4:	10029a1e 	bne	r2,zero,4030b40 <___vfiprintf_internal_r+0xf8c>
 40300d8:	00c02004 	movi	r3,128
 40300dc:	01000044 	movi	r4,1
 40300e0:	000b883a 	mov	r5,zero
 40300e4:	d811883a 	mov	r8,sp
 40300e8:	e0c1b31e 	bne	fp,r3,40307b8 <___vfiprintf_internal_r+0xc04>
 40300ec:	8cb9c83a 	sub	fp,r17,r18
 40300f0:	0701b10e 	bge	zero,fp,40307b8 <___vfiprintf_internal_r+0xc04>
 40300f4:	01c00404 	movi	r7,16
 40300f8:	3f03890e 	bge	r7,fp,4030f20 <___vfiprintf_internal_r+0x136c>
 40300fc:	00c100f4 	movhi	r3,1027
 4030100:	18dd8204 	addi	r3,r3,30216
 4030104:	d8c02415 	stw	r3,144(sp)
 4030108:	8007883a 	mov	r3,r16
 403010c:	034001c4 	movi	r13,7
 4030110:	e021883a 	mov	r16,fp
 4030114:	da402515 	stw	r9,148(sp)
 4030118:	1839883a 	mov	fp,r3
 403011c:	00000506 	br	4030134 <___vfiprintf_internal_r+0x580>
 4030120:	29800084 	addi	r6,r5,2
 4030124:	42000204 	addi	r8,r8,8
 4030128:	180b883a 	mov	r5,r3
 403012c:	843ffc04 	addi	r16,r16,-16
 4030130:	3c000d0e 	bge	r7,r16,4030168 <___vfiprintf_internal_r+0x5b4>
 4030134:	10800404 	addi	r2,r2,16
 4030138:	28c00044 	addi	r3,r5,1
 403013c:	45c00015 	stw	r23,0(r8)
 4030140:	41c00115 	stw	r7,4(r8)
 4030144:	d8801c15 	stw	r2,112(sp)
 4030148:	d8c01b15 	stw	r3,108(sp)
 403014c:	68fff40e 	bge	r13,r3,4030120 <_gp+0xfffeef20>
 4030150:	1002241e 	bne	r2,zero,40309e4 <___vfiprintf_internal_r+0xe30>
 4030154:	843ffc04 	addi	r16,r16,-16
 4030158:	01800044 	movi	r6,1
 403015c:	000b883a 	mov	r5,zero
 4030160:	d811883a 	mov	r8,sp
 4030164:	3c3ff316 	blt	r7,r16,4030134 <_gp+0xfffeef34>
 4030168:	da402517 	ldw	r9,148(sp)
 403016c:	e007883a 	mov	r3,fp
 4030170:	8039883a 	mov	fp,r16
 4030174:	1821883a 	mov	r16,r3
 4030178:	d8c02417 	ldw	r3,144(sp)
 403017c:	1705883a 	add	r2,r2,fp
 4030180:	47000115 	stw	fp,4(r8)
 4030184:	40c00015 	stw	r3,0(r8)
 4030188:	d8801c15 	stw	r2,112(sp)
 403018c:	d9801b15 	stw	r6,108(sp)
 4030190:	00c001c4 	movi	r3,7
 4030194:	19827616 	blt	r3,r6,4030b70 <___vfiprintf_internal_r+0xfbc>
 4030198:	4cf9c83a 	sub	fp,r9,r19
 403019c:	42000204 	addi	r8,r8,8
 40301a0:	31000044 	addi	r4,r6,1
 40301a4:	300b883a 	mov	r5,r6
 40301a8:	07018516 	blt	zero,fp,40307c0 <___vfiprintf_internal_r+0xc0c>
 40301ac:	9885883a 	add	r2,r19,r2
 40301b0:	45400015 	stw	r21,0(r8)
 40301b4:	44c00115 	stw	r19,4(r8)
 40301b8:	d8801c15 	stw	r2,112(sp)
 40301bc:	d9001b15 	stw	r4,108(sp)
 40301c0:	00c001c4 	movi	r3,7
 40301c4:	1901dd0e 	bge	r3,r4,403093c <___vfiprintf_internal_r+0xd88>
 40301c8:	1002401e 	bne	r2,zero,4030acc <___vfiprintf_internal_r+0xf18>
 40301cc:	d8001b15 	stw	zero,108(sp)
 40301d0:	a2c0010c 	andi	r11,r20,4
 40301d4:	58000226 	beq	r11,zero,40301e0 <___vfiprintf_internal_r+0x62c>
 40301d8:	8ca7c83a 	sub	r19,r17,r18
 40301dc:	04c2f216 	blt	zero,r19,4030da8 <___vfiprintf_internal_r+0x11f4>
 40301e0:	8c80010e 	bge	r17,r18,40301e8 <___vfiprintf_internal_r+0x634>
 40301e4:	9023883a 	mov	r17,r18
 40301e8:	da802317 	ldw	r10,140(sp)
 40301ec:	5455883a 	add	r10,r10,r17
 40301f0:	da802315 	stw	r10,140(sp)
 40301f4:	d8001b15 	stw	zero,108(sp)
 40301f8:	d811883a 	mov	r8,sp
 40301fc:	003ea206 	br	402fc88 <_gp+0xfffeea88>
 4030200:	a5000814 	ori	r20,r20,32
 4030204:	80c00007 	ldb	r3,0(r16)
 4030208:	003ec906 	br	402fd30 <_gp+0xfffeeb30>
 403020c:	80c00007 	ldb	r3,0(r16)
 4030210:	1b030926 	beq	r3,r12,4030e38 <___vfiprintf_internal_r+0x1284>
 4030214:	a5000414 	ori	r20,r20,16
 4030218:	003ec506 	br	402fd30 <_gp+0xfffeeb30>
 403021c:	21003fcc 	andi	r4,r4,255
 4030220:	20035e1e 	bne	r4,zero,4030f9c <___vfiprintf_internal_r+0x13e8>
 4030224:	a080080c 	andi	r2,r20,32
 4030228:	1002a526 	beq	r2,zero,4030cc0 <___vfiprintf_internal_r+0x110c>
 403022c:	da802217 	ldw	r10,136(sp)
 4030230:	50800017 	ldw	r2,0(r10)
 4030234:	da802317 	ldw	r10,140(sp)
 4030238:	5007d7fa 	srai	r3,r10,31
 403023c:	da802217 	ldw	r10,136(sp)
 4030240:	10c00115 	stw	r3,4(r2)
 4030244:	52800104 	addi	r10,r10,4
 4030248:	da802215 	stw	r10,136(sp)
 403024c:	da802317 	ldw	r10,140(sp)
 4030250:	12800015 	stw	r10,0(r2)
 4030254:	003e8c06 	br	402fc88 <_gp+0xfffeea88>
 4030258:	21003fcc 	andi	r4,r4,255
 403025c:	2003511e 	bne	r4,zero,4030fa4 <___vfiprintf_internal_r+0x13f0>
 4030260:	a080080c 	andi	r2,r20,32
 4030264:	1000a126 	beq	r2,zero,40304ec <___vfiprintf_internal_r+0x938>
 4030268:	da802217 	ldw	r10,136(sp)
 403026c:	d8001d85 	stb	zero,118(sp)
 4030270:	50800204 	addi	r2,r10,8
 4030274:	54800017 	ldw	r18,0(r10)
 4030278:	54c00117 	ldw	r19,4(r10)
 403027c:	4802b416 	blt	r9,zero,4030d50 <___vfiprintf_internal_r+0x119c>
 4030280:	013fdfc4 	movi	r4,-129
 4030284:	94c6b03a 	or	r3,r18,r19
 4030288:	d8802215 	stw	r2,136(sp)
 403028c:	a128703a 	and	r20,r20,r4
 4030290:	1800a226 	beq	r3,zero,403051c <___vfiprintf_internal_r+0x968>
 4030294:	0039883a 	mov	fp,zero
 4030298:	dd401a04 	addi	r21,sp,104
 403029c:	9006d0fa 	srli	r3,r18,3
 40302a0:	9808977a 	slli	r4,r19,29
 40302a4:	9826d0fa 	srli	r19,r19,3
 40302a8:	948001cc 	andi	r18,r18,7
 40302ac:	90800c04 	addi	r2,r18,48
 40302b0:	ad7fffc4 	addi	r21,r21,-1
 40302b4:	20e4b03a 	or	r18,r4,r3
 40302b8:	a8800005 	stb	r2,0(r21)
 40302bc:	94c6b03a 	or	r3,r18,r19
 40302c0:	183ff61e 	bne	r3,zero,403029c <_gp+0xfffef09c>
 40302c4:	a0c0004c 	andi	r3,r20,1
 40302c8:	18005926 	beq	r3,zero,4030430 <___vfiprintf_internal_r+0x87c>
 40302cc:	10803fcc 	andi	r2,r2,255
 40302d0:	1080201c 	xori	r2,r2,128
 40302d4:	10bfe004 	addi	r2,r2,-128
 40302d8:	00c00c04 	movi	r3,48
 40302dc:	10c05426 	beq	r2,r3,4030430 <___vfiprintf_internal_r+0x87c>
 40302e0:	da801e17 	ldw	r10,120(sp)
 40302e4:	a8bfffc4 	addi	r2,r21,-1
 40302e8:	a8ffffc5 	stb	r3,-1(r21)
 40302ec:	50a7c83a 	sub	r19,r10,r2
 40302f0:	102b883a 	mov	r21,r2
 40302f4:	003f2f06 	br	402ffb4 <_gp+0xfffeedb4>
 40302f8:	21003fcc 	andi	r4,r4,255
 40302fc:	2003421e 	bne	r4,zero,4031008 <___vfiprintf_internal_r+0x1454>
 4030300:	008100f4 	movhi	r2,1027
 4030304:	109d1204 	addi	r2,r2,29768
 4030308:	d8802615 	stw	r2,152(sp)
 403030c:	a080080c 	andi	r2,r20,32
 4030310:	1000aa26 	beq	r2,zero,40305bc <___vfiprintf_internal_r+0xa08>
 4030314:	da802217 	ldw	r10,136(sp)
 4030318:	54800017 	ldw	r18,0(r10)
 403031c:	54c00117 	ldw	r19,4(r10)
 4030320:	52800204 	addi	r10,r10,8
 4030324:	da802215 	stw	r10,136(sp)
 4030328:	a080004c 	andi	r2,r20,1
 403032c:	1001d226 	beq	r2,zero,4030a78 <___vfiprintf_internal_r+0xec4>
 4030330:	94c4b03a 	or	r2,r18,r19
 4030334:	1002351e 	bne	r2,zero,4030c0c <___vfiprintf_internal_r+0x1058>
 4030338:	d8001d85 	stb	zero,118(sp)
 403033c:	48022216 	blt	r9,zero,4030bc8 <___vfiprintf_internal_r+0x1014>
 4030340:	00bfdfc4 	movi	r2,-129
 4030344:	a0a8703a 	and	r20,r20,r2
 4030348:	003f1506 	br	402ffa0 <_gp+0xfffeeda0>
 403034c:	da802217 	ldw	r10,136(sp)
 4030350:	04800044 	movi	r18,1
 4030354:	d8001d85 	stb	zero,118(sp)
 4030358:	50800017 	ldw	r2,0(r10)
 403035c:	52800104 	addi	r10,r10,4
 4030360:	da802215 	stw	r10,136(sp)
 4030364:	d8801005 	stb	r2,64(sp)
 4030368:	9027883a 	mov	r19,r18
 403036c:	dd401004 	addi	r21,sp,64
 4030370:	0013883a 	mov	r9,zero
 4030374:	003f1706 	br	402ffd4 <_gp+0xfffeedd4>
 4030378:	21003fcc 	andi	r4,r4,255
 403037c:	2003201e 	bne	r4,zero,4031000 <___vfiprintf_internal_r+0x144c>
 4030380:	a080080c 	andi	r2,r20,32
 4030384:	10004b26 	beq	r2,zero,40304b4 <___vfiprintf_internal_r+0x900>
 4030388:	da802217 	ldw	r10,136(sp)
 403038c:	50800117 	ldw	r2,4(r10)
 4030390:	54800017 	ldw	r18,0(r10)
 4030394:	52800204 	addi	r10,r10,8
 4030398:	da802215 	stw	r10,136(sp)
 403039c:	1027883a 	mov	r19,r2
 40303a0:	10022c16 	blt	r2,zero,4030c54 <___vfiprintf_internal_r+0x10a0>
 40303a4:	df001d83 	ldbu	fp,118(sp)
 40303a8:	48007216 	blt	r9,zero,4030574 <___vfiprintf_internal_r+0x9c0>
 40303ac:	00ffdfc4 	movi	r3,-129
 40303b0:	94c4b03a 	or	r2,r18,r19
 40303b4:	a0e8703a 	and	r20,r20,r3
 40303b8:	1000cc26 	beq	r2,zero,40306ec <___vfiprintf_internal_r+0xb38>
 40303bc:	98021026 	beq	r19,zero,4030c00 <___vfiprintf_internal_r+0x104c>
 40303c0:	dc402415 	stw	r17,144(sp)
 40303c4:	dc002515 	stw	r16,148(sp)
 40303c8:	9823883a 	mov	r17,r19
 40303cc:	9021883a 	mov	r16,r18
 40303d0:	dd401a04 	addi	r21,sp,104
 40303d4:	4825883a 	mov	r18,r9
 40303d8:	4027883a 	mov	r19,r8
 40303dc:	8009883a 	mov	r4,r16
 40303e0:	880b883a 	mov	r5,r17
 40303e4:	01800284 	movi	r6,10
 40303e8:	000f883a 	mov	r7,zero
 40303ec:	4031c6c0 	call	4031c6c <__umoddi3>
 40303f0:	10800c04 	addi	r2,r2,48
 40303f4:	ad7fffc4 	addi	r21,r21,-1
 40303f8:	8009883a 	mov	r4,r16
 40303fc:	880b883a 	mov	r5,r17
 4030400:	a8800005 	stb	r2,0(r21)
 4030404:	01800284 	movi	r6,10
 4030408:	000f883a 	mov	r7,zero
 403040c:	40316f40 	call	40316f4 <__udivdi3>
 4030410:	1021883a 	mov	r16,r2
 4030414:	10c4b03a 	or	r2,r2,r3
 4030418:	1823883a 	mov	r17,r3
 403041c:	103fef1e 	bne	r2,zero,40303dc <_gp+0xfffef1dc>
 4030420:	dc402417 	ldw	r17,144(sp)
 4030424:	dc002517 	ldw	r16,148(sp)
 4030428:	9013883a 	mov	r9,r18
 403042c:	9811883a 	mov	r8,r19
 4030430:	da801e17 	ldw	r10,120(sp)
 4030434:	5567c83a 	sub	r19,r10,r21
 4030438:	003ede06 	br	402ffb4 <_gp+0xfffeedb4>
 403043c:	38803fcc 	andi	r2,r7,255
 4030440:	1080201c 	xori	r2,r2,128
 4030444:	10bfe004 	addi	r2,r2,-128
 4030448:	1002371e 	bne	r2,zero,4030d28 <___vfiprintf_internal_r+0x1174>
 403044c:	01000044 	movi	r4,1
 4030450:	01c00804 	movi	r7,32
 4030454:	80c00007 	ldb	r3,0(r16)
 4030458:	003e3506 	br	402fd30 <_gp+0xfffeeb30>
 403045c:	a5000054 	ori	r20,r20,1
 4030460:	80c00007 	ldb	r3,0(r16)
 4030464:	003e3206 	br	402fd30 <_gp+0xfffeeb30>
 4030468:	a5002014 	ori	r20,r20,128
 403046c:	80c00007 	ldb	r3,0(r16)
 4030470:	003e2f06 	br	402fd30 <_gp+0xfffeeb30>
 4030474:	8015883a 	mov	r10,r16
 4030478:	0023883a 	mov	r17,zero
 403047c:	18bff404 	addi	r2,r3,-48
 4030480:	50c00007 	ldb	r3,0(r10)
 4030484:	8c4002a4 	muli	r17,r17,10
 4030488:	84000044 	addi	r16,r16,1
 403048c:	8015883a 	mov	r10,r16
 4030490:	1463883a 	add	r17,r2,r17
 4030494:	18bff404 	addi	r2,r3,-48
 4030498:	30bff92e 	bgeu	r6,r2,4030480 <_gp+0xfffef280>
 403049c:	003e2506 	br	402fd34 <_gp+0xfffeeb34>
 40304a0:	21003fcc 	andi	r4,r4,255
 40304a4:	2002d41e 	bne	r4,zero,4030ff8 <___vfiprintf_internal_r+0x1444>
 40304a8:	a5000414 	ori	r20,r20,16
 40304ac:	a080080c 	andi	r2,r20,32
 40304b0:	103fb51e 	bne	r2,zero,4030388 <_gp+0xfffef188>
 40304b4:	a080040c 	andi	r2,r20,16
 40304b8:	1001f826 	beq	r2,zero,4030c9c <___vfiprintf_internal_r+0x10e8>
 40304bc:	da802217 	ldw	r10,136(sp)
 40304c0:	54800017 	ldw	r18,0(r10)
 40304c4:	52800104 	addi	r10,r10,4
 40304c8:	da802215 	stw	r10,136(sp)
 40304cc:	9027d7fa 	srai	r19,r18,31
 40304d0:	9805883a 	mov	r2,r19
 40304d4:	003fb206 	br	40303a0 <_gp+0xfffef1a0>
 40304d8:	21003fcc 	andi	r4,r4,255
 40304dc:	2002c41e 	bne	r4,zero,4030ff0 <___vfiprintf_internal_r+0x143c>
 40304e0:	a5000414 	ori	r20,r20,16
 40304e4:	a080080c 	andi	r2,r20,32
 40304e8:	103f5f1e 	bne	r2,zero,4030268 <_gp+0xfffef068>
 40304ec:	a080040c 	andi	r2,r20,16
 40304f0:	10020f26 	beq	r2,zero,4030d30 <___vfiprintf_internal_r+0x117c>
 40304f4:	da802217 	ldw	r10,136(sp)
 40304f8:	d8001d85 	stb	zero,118(sp)
 40304fc:	0027883a 	mov	r19,zero
 4030500:	50800104 	addi	r2,r10,4
 4030504:	54800017 	ldw	r18,0(r10)
 4030508:	48021116 	blt	r9,zero,4030d50 <___vfiprintf_internal_r+0x119c>
 403050c:	00ffdfc4 	movi	r3,-129
 4030510:	d8802215 	stw	r2,136(sp)
 4030514:	a0e8703a 	and	r20,r20,r3
 4030518:	903f5e1e 	bne	r18,zero,4030294 <_gp+0xfffef094>
 403051c:	0039883a 	mov	fp,zero
 4030520:	4802a626 	beq	r9,zero,4030fbc <___vfiprintf_internal_r+0x1408>
 4030524:	0025883a 	mov	r18,zero
 4030528:	0027883a 	mov	r19,zero
 403052c:	003f5a06 	br	4030298 <_gp+0xfffef098>
 4030530:	21003fcc 	andi	r4,r4,255
 4030534:	20029f1e 	bne	r4,zero,4030fb4 <___vfiprintf_internal_r+0x1400>
 4030538:	a5000414 	ori	r20,r20,16
 403053c:	a080080c 	andi	r2,r20,32
 4030540:	10005e1e 	bne	r2,zero,40306bc <___vfiprintf_internal_r+0xb08>
 4030544:	a080040c 	andi	r2,r20,16
 4030548:	1001a21e 	bne	r2,zero,4030bd4 <___vfiprintf_internal_r+0x1020>
 403054c:	a080100c 	andi	r2,r20,64
 4030550:	d8001d85 	stb	zero,118(sp)
 4030554:	da802217 	ldw	r10,136(sp)
 4030558:	1002231e 	bne	r2,zero,4030de8 <___vfiprintf_internal_r+0x1234>
 403055c:	50800104 	addi	r2,r10,4
 4030560:	54800017 	ldw	r18,0(r10)
 4030564:	0027883a 	mov	r19,zero
 4030568:	4801a00e 	bge	r9,zero,4030bec <___vfiprintf_internal_r+0x1038>
 403056c:	d8802215 	stw	r2,136(sp)
 4030570:	0039883a 	mov	fp,zero
 4030574:	94c4b03a 	or	r2,r18,r19
 4030578:	103f901e 	bne	r2,zero,40303bc <_gp+0xfffef1bc>
 403057c:	00800044 	movi	r2,1
 4030580:	10803fcc 	andi	r2,r2,255
 4030584:	00c00044 	movi	r3,1
 4030588:	10c05926 	beq	r2,r3,40306f0 <___vfiprintf_internal_r+0xb3c>
 403058c:	00c00084 	movi	r3,2
 4030590:	10ffe41e 	bne	r2,r3,4030524 <_gp+0xfffef324>
 4030594:	0025883a 	mov	r18,zero
 4030598:	0027883a 	mov	r19,zero
 403059c:	00013d06 	br	4030a94 <___vfiprintf_internal_r+0xee0>
 40305a0:	21003fcc 	andi	r4,r4,255
 40305a4:	2002811e 	bne	r4,zero,4030fac <___vfiprintf_internal_r+0x13f8>
 40305a8:	008100f4 	movhi	r2,1027
 40305ac:	109d0d04 	addi	r2,r2,29748
 40305b0:	d8802615 	stw	r2,152(sp)
 40305b4:	a080080c 	andi	r2,r20,32
 40305b8:	103f561e 	bne	r2,zero,4030314 <_gp+0xfffef114>
 40305bc:	a080040c 	andi	r2,r20,16
 40305c0:	1001d126 	beq	r2,zero,4030d08 <___vfiprintf_internal_r+0x1154>
 40305c4:	da802217 	ldw	r10,136(sp)
 40305c8:	0027883a 	mov	r19,zero
 40305cc:	54800017 	ldw	r18,0(r10)
 40305d0:	52800104 	addi	r10,r10,4
 40305d4:	da802215 	stw	r10,136(sp)
 40305d8:	003f5306 	br	4030328 <_gp+0xfffef128>
 40305dc:	da802217 	ldw	r10,136(sp)
 40305e0:	d8001d85 	stb	zero,118(sp)
 40305e4:	55400017 	ldw	r21,0(r10)
 40305e8:	50c00104 	addi	r3,r10,4
 40305ec:	a8024226 	beq	r21,zero,4030ef8 <___vfiprintf_internal_r+0x1344>
 40305f0:	48021816 	blt	r9,zero,4030e54 <___vfiprintf_internal_r+0x12a0>
 40305f4:	480d883a 	mov	r6,r9
 40305f8:	000b883a 	mov	r5,zero
 40305fc:	a809883a 	mov	r4,r21
 4030600:	d8c02a15 	stw	r3,168(sp)
 4030604:	da002b15 	stw	r8,172(sp)
 4030608:	da402c15 	stw	r9,176(sp)
 403060c:	402cbfc0 	call	402cbfc <memchr>
 4030610:	d8c02a17 	ldw	r3,168(sp)
 4030614:	da002b17 	ldw	r8,172(sp)
 4030618:	da402c17 	ldw	r9,176(sp)
 403061c:	10024826 	beq	r2,zero,4030f40 <___vfiprintf_internal_r+0x138c>
 4030620:	1567c83a 	sub	r19,r2,r21
 4030624:	df001d83 	ldbu	fp,118(sp)
 4030628:	d8c02215 	stw	r3,136(sp)
 403062c:	0013883a 	mov	r9,zero
 4030630:	003e6006 	br	402ffb4 <_gp+0xfffeedb4>
 4030634:	21003fcc 	andi	r4,r4,255
 4030638:	203fc026 	beq	r4,zero,403053c <_gp+0xfffef33c>
 403063c:	d9c01d85 	stb	r7,118(sp)
 4030640:	003fbe06 	br	403053c <_gp+0xfffef33c>
 4030644:	da802217 	ldw	r10,136(sp)
 4030648:	54400017 	ldw	r17,0(r10)
 403064c:	50800104 	addi	r2,r10,4
 4030650:	883e3b16 	blt	r17,zero,402ff40 <_gp+0xfffeed40>
 4030654:	d8802215 	stw	r2,136(sp)
 4030658:	80c00007 	ldb	r3,0(r16)
 403065c:	003db406 	br	402fd30 <_gp+0xfffeeb30>
 4030660:	01000044 	movi	r4,1
 4030664:	01c00ac4 	movi	r7,43
 4030668:	80c00007 	ldb	r3,0(r16)
 403066c:	003db006 	br	402fd30 <_gp+0xfffeeb30>
 4030670:	80c00007 	ldb	r3,0(r16)
 4030674:	82800044 	addi	r10,r16,1
 4030678:	1b423c26 	beq	r3,r13,4030f6c <___vfiprintf_internal_r+0x13b8>
 403067c:	18bff404 	addi	r2,r3,-48
 4030680:	0013883a 	mov	r9,zero
 4030684:	30822b36 	bltu	r6,r2,4030f34 <___vfiprintf_internal_r+0x1380>
 4030688:	50c00007 	ldb	r3,0(r10)
 403068c:	4a4002a4 	muli	r9,r9,10
 4030690:	54000044 	addi	r16,r10,1
 4030694:	8015883a 	mov	r10,r16
 4030698:	4893883a 	add	r9,r9,r2
 403069c:	18bff404 	addi	r2,r3,-48
 40306a0:	30bff92e 	bgeu	r6,r2,4030688 <_gp+0xfffef488>
 40306a4:	483da30e 	bge	r9,zero,402fd34 <_gp+0xfffeeb34>
 40306a8:	027fffc4 	movi	r9,-1
 40306ac:	003da106 	br	402fd34 <_gp+0xfffeeb34>
 40306b0:	a5001014 	ori	r20,r20,64
 40306b4:	80c00007 	ldb	r3,0(r16)
 40306b8:	003d9d06 	br	402fd30 <_gp+0xfffeeb30>
 40306bc:	da802217 	ldw	r10,136(sp)
 40306c0:	d8001d85 	stb	zero,118(sp)
 40306c4:	50c00204 	addi	r3,r10,8
 40306c8:	54800017 	ldw	r18,0(r10)
 40306cc:	54c00117 	ldw	r19,4(r10)
 40306d0:	4801ca16 	blt	r9,zero,4030dfc <___vfiprintf_internal_r+0x1248>
 40306d4:	013fdfc4 	movi	r4,-129
 40306d8:	94c4b03a 	or	r2,r18,r19
 40306dc:	d8c02215 	stw	r3,136(sp)
 40306e0:	a128703a 	and	r20,r20,r4
 40306e4:	0039883a 	mov	fp,zero
 40306e8:	103f341e 	bne	r2,zero,40303bc <_gp+0xfffef1bc>
 40306ec:	483e2e26 	beq	r9,zero,402ffa8 <_gp+0xfffeeda8>
 40306f0:	0025883a 	mov	r18,zero
 40306f4:	94800c04 	addi	r18,r18,48
 40306f8:	dc8019c5 	stb	r18,103(sp)
 40306fc:	dcc02717 	ldw	r19,156(sp)
 4030700:	dd4019c4 	addi	r21,sp,103
 4030704:	003e2b06 	br	402ffb4 <_gp+0xfffeedb4>
 4030708:	21003fcc 	andi	r4,r4,255
 403070c:	2002361e 	bne	r4,zero,4030fe8 <___vfiprintf_internal_r+0x1434>
 4030710:	1801c126 	beq	r3,zero,4030e18 <___vfiprintf_internal_r+0x1264>
 4030714:	04800044 	movi	r18,1
 4030718:	d8c01005 	stb	r3,64(sp)
 403071c:	d8001d85 	stb	zero,118(sp)
 4030720:	9027883a 	mov	r19,r18
 4030724:	dd401004 	addi	r21,sp,64
 4030728:	003f1106 	br	4030370 <_gp+0xfffef170>
 403072c:	d9402117 	ldw	r5,132(sp)
 4030730:	d9002017 	ldw	r4,128(sp)
 4030734:	d9801a04 	addi	r6,sp,104
 4030738:	d9c02b15 	stw	r7,172(sp)
 403073c:	dbc02a15 	stw	r15,168(sp)
 4030740:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030744:	d9c02b17 	ldw	r7,172(sp)
 4030748:	dbc02a17 	ldw	r15,168(sp)
 403074c:	10006d1e 	bne	r2,zero,4030904 <___vfiprintf_internal_r+0xd50>
 4030750:	d9801b17 	ldw	r6,108(sp)
 4030754:	d8801c17 	ldw	r2,112(sp)
 4030758:	d811883a 	mov	r8,sp
 403075c:	31400044 	addi	r5,r6,1
 4030760:	003e3306 	br	4030030 <_gp+0xfffeee30>
 4030764:	d9401b17 	ldw	r5,108(sp)
 4030768:	d8801c17 	ldw	r2,112(sp)
 403076c:	29000044 	addi	r4,r5,1
 4030770:	d8c01d87 	ldb	r3,118(sp)
 4030774:	183e4d26 	beq	r3,zero,40300ac <_gp+0xfffeeeac>
 4030778:	00c00044 	movi	r3,1
 403077c:	d9401d84 	addi	r5,sp,118
 4030780:	10c5883a 	add	r2,r2,r3
 4030784:	41400015 	stw	r5,0(r8)
 4030788:	40c00115 	stw	r3,4(r8)
 403078c:	d8801c15 	stw	r2,112(sp)
 4030790:	d9001b15 	stw	r4,108(sp)
 4030794:	014001c4 	movi	r5,7
 4030798:	2900a90e 	bge	r5,r4,4030a40 <___vfiprintf_internal_r+0xe8c>
 403079c:	1000da1e 	bne	r2,zero,4030b08 <___vfiprintf_internal_r+0xf54>
 40307a0:	7000ab1e 	bne	r14,zero,4030a50 <___vfiprintf_internal_r+0xe9c>
 40307a4:	000b883a 	mov	r5,zero
 40307a8:	1809883a 	mov	r4,r3
 40307ac:	d811883a 	mov	r8,sp
 40307b0:	00c02004 	movi	r3,128
 40307b4:	e0fe4d26 	beq	fp,r3,40300ec <_gp+0xfffeeeec>
 40307b8:	4cf9c83a 	sub	fp,r9,r19
 40307bc:	073e7b0e 	bge	zero,fp,40301ac <_gp+0xfffeefac>
 40307c0:	01c00404 	movi	r7,16
 40307c4:	3f01900e 	bge	r7,fp,4030e08 <___vfiprintf_internal_r+0x1254>
 40307c8:	00c100f4 	movhi	r3,1027
 40307cc:	18dd8204 	addi	r3,r3,30216
 40307d0:	d8c02415 	stw	r3,144(sp)
 40307d4:	034001c4 	movi	r13,7
 40307d8:	00000506 	br	40307f0 <___vfiprintf_internal_r+0xc3c>
 40307dc:	29000084 	addi	r4,r5,2
 40307e0:	42000204 	addi	r8,r8,8
 40307e4:	180b883a 	mov	r5,r3
 40307e8:	e73ffc04 	addi	fp,fp,-16
 40307ec:	3f000d0e 	bge	r7,fp,4030824 <___vfiprintf_internal_r+0xc70>
 40307f0:	10800404 	addi	r2,r2,16
 40307f4:	28c00044 	addi	r3,r5,1
 40307f8:	45c00015 	stw	r23,0(r8)
 40307fc:	41c00115 	stw	r7,4(r8)
 4030800:	d8801c15 	stw	r2,112(sp)
 4030804:	d8c01b15 	stw	r3,108(sp)
 4030808:	68fff40e 	bge	r13,r3,40307dc <_gp+0xfffef5dc>
 403080c:	1000101e 	bne	r2,zero,4030850 <___vfiprintf_internal_r+0xc9c>
 4030810:	e73ffc04 	addi	fp,fp,-16
 4030814:	01000044 	movi	r4,1
 4030818:	000b883a 	mov	r5,zero
 403081c:	d811883a 	mov	r8,sp
 4030820:	3f3ff316 	blt	r7,fp,40307f0 <_gp+0xfffef5f0>
 4030824:	da802417 	ldw	r10,144(sp)
 4030828:	1705883a 	add	r2,r2,fp
 403082c:	47000115 	stw	fp,4(r8)
 4030830:	42800015 	stw	r10,0(r8)
 4030834:	d8801c15 	stw	r2,112(sp)
 4030838:	d9001b15 	stw	r4,108(sp)
 403083c:	00c001c4 	movi	r3,7
 4030840:	19003616 	blt	r3,r4,403091c <___vfiprintf_internal_r+0xd68>
 4030844:	42000204 	addi	r8,r8,8
 4030848:	21000044 	addi	r4,r4,1
 403084c:	003e5706 	br	40301ac <_gp+0xfffeefac>
 4030850:	d9402117 	ldw	r5,132(sp)
 4030854:	d9002017 	ldw	r4,128(sp)
 4030858:	d9801a04 	addi	r6,sp,104
 403085c:	d9c02b15 	stw	r7,172(sp)
 4030860:	db402a15 	stw	r13,168(sp)
 4030864:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030868:	d9c02b17 	ldw	r7,172(sp)
 403086c:	db402a17 	ldw	r13,168(sp)
 4030870:	1000241e 	bne	r2,zero,4030904 <___vfiprintf_internal_r+0xd50>
 4030874:	d9401b17 	ldw	r5,108(sp)
 4030878:	d8801c17 	ldw	r2,112(sp)
 403087c:	d811883a 	mov	r8,sp
 4030880:	29000044 	addi	r4,r5,1
 4030884:	003fd806 	br	40307e8 <_gp+0xfffef5e8>
 4030888:	d9401b17 	ldw	r5,108(sp)
 403088c:	00c100f4 	movhi	r3,1027
 4030890:	18dd8604 	addi	r3,r3,30232
 4030894:	d8c02415 	stw	r3,144(sp)
 4030898:	29400044 	addi	r5,r5,1
 403089c:	d8c02417 	ldw	r3,144(sp)
 40308a0:	14c5883a 	add	r2,r2,r19
 40308a4:	44c00115 	stw	r19,4(r8)
 40308a8:	40c00015 	stw	r3,0(r8)
 40308ac:	d8801c15 	stw	r2,112(sp)
 40308b0:	d9401b15 	stw	r5,108(sp)
 40308b4:	00c001c4 	movi	r3,7
 40308b8:	1940070e 	bge	r3,r5,40308d8 <___vfiprintf_internal_r+0xd24>
 40308bc:	103e4826 	beq	r2,zero,40301e0 <_gp+0xfffeefe0>
 40308c0:	d9402117 	ldw	r5,132(sp)
 40308c4:	d9002017 	ldw	r4,128(sp)
 40308c8:	d9801a04 	addi	r6,sp,104
 40308cc:	402faa00 	call	402faa0 <__sprint_r.part.0>
 40308d0:	10000c1e 	bne	r2,zero,4030904 <___vfiprintf_internal_r+0xd50>
 40308d4:	d8801c17 	ldw	r2,112(sp)
 40308d8:	8c80010e 	bge	r17,r18,40308e0 <___vfiprintf_internal_r+0xd2c>
 40308dc:	9023883a 	mov	r17,r18
 40308e0:	da802317 	ldw	r10,140(sp)
 40308e4:	5455883a 	add	r10,r10,r17
 40308e8:	da802315 	stw	r10,140(sp)
 40308ec:	103e4126 	beq	r2,zero,40301f4 <_gp+0xfffeeff4>
 40308f0:	d9402117 	ldw	r5,132(sp)
 40308f4:	d9002017 	ldw	r4,128(sp)
 40308f8:	d9801a04 	addi	r6,sp,104
 40308fc:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030900:	103e3c26 	beq	r2,zero,40301f4 <_gp+0xfffeeff4>
 4030904:	dd002117 	ldw	r20,132(sp)
 4030908:	a080030b 	ldhu	r2,12(r20)
 403090c:	1080100c 	andi	r2,r2,64
 4030910:	1001231e 	bne	r2,zero,4030da0 <___vfiprintf_internal_r+0x11ec>
 4030914:	d8802317 	ldw	r2,140(sp)
 4030918:	003d7b06 	br	402ff08 <_gp+0xfffeed08>
 403091c:	1000991e 	bne	r2,zero,4030b84 <___vfiprintf_internal_r+0xfd0>
 4030920:	00c00044 	movi	r3,1
 4030924:	9805883a 	mov	r2,r19
 4030928:	dd400015 	stw	r21,0(sp)
 403092c:	dcc00115 	stw	r19,4(sp)
 4030930:	dcc01c15 	stw	r19,112(sp)
 4030934:	d8c01b15 	stw	r3,108(sp)
 4030938:	d811883a 	mov	r8,sp
 403093c:	42000204 	addi	r8,r8,8
 4030940:	a2c0010c 	andi	r11,r20,4
 4030944:	583fe426 	beq	r11,zero,40308d8 <_gp+0xfffef6d8>
 4030948:	8ca7c83a 	sub	r19,r17,r18
 403094c:	04ffe20e 	bge	zero,r19,40308d8 <_gp+0xfffef6d8>
 4030950:	01c00404 	movi	r7,16
 4030954:	3cffcc0e 	bge	r7,r19,4030888 <_gp+0xfffef688>
 4030958:	028100f4 	movhi	r10,1027
 403095c:	529d8604 	addi	r10,r10,30232
 4030960:	d9001b17 	ldw	r4,108(sp)
 4030964:	da802415 	stw	r10,144(sp)
 4030968:	382b883a 	mov	r21,r7
 403096c:	050001c4 	movi	r20,7
 4030970:	df002017 	ldw	fp,128(sp)
 4030974:	00000506 	br	403098c <___vfiprintf_internal_r+0xdd8>
 4030978:	21400084 	addi	r5,r4,2
 403097c:	42000204 	addi	r8,r8,8
 4030980:	1809883a 	mov	r4,r3
 4030984:	9cfffc04 	addi	r19,r19,-16
 4030988:	acffc40e 	bge	r21,r19,403089c <_gp+0xfffef69c>
 403098c:	10800404 	addi	r2,r2,16
 4030990:	20c00044 	addi	r3,r4,1
 4030994:	45800015 	stw	r22,0(r8)
 4030998:	45400115 	stw	r21,4(r8)
 403099c:	d8801c15 	stw	r2,112(sp)
 40309a0:	d8c01b15 	stw	r3,108(sp)
 40309a4:	a0fff40e 	bge	r20,r3,4030978 <_gp+0xfffef778>
 40309a8:	1000041e 	bne	r2,zero,40309bc <___vfiprintf_internal_r+0xe08>
 40309ac:	01400044 	movi	r5,1
 40309b0:	0009883a 	mov	r4,zero
 40309b4:	d811883a 	mov	r8,sp
 40309b8:	003ff206 	br	4030984 <_gp+0xfffef784>
 40309bc:	d9402117 	ldw	r5,132(sp)
 40309c0:	d9801a04 	addi	r6,sp,104
 40309c4:	e009883a 	mov	r4,fp
 40309c8:	402faa00 	call	402faa0 <__sprint_r.part.0>
 40309cc:	103fcd1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 40309d0:	d9001b17 	ldw	r4,108(sp)
 40309d4:	d8801c17 	ldw	r2,112(sp)
 40309d8:	d811883a 	mov	r8,sp
 40309dc:	21400044 	addi	r5,r4,1
 40309e0:	003fe806 	br	4030984 <_gp+0xfffef784>
 40309e4:	d9402117 	ldw	r5,132(sp)
 40309e8:	d9002017 	ldw	r4,128(sp)
 40309ec:	d9801a04 	addi	r6,sp,104
 40309f0:	d9c02b15 	stw	r7,172(sp)
 40309f4:	db402a15 	stw	r13,168(sp)
 40309f8:	402faa00 	call	402faa0 <__sprint_r.part.0>
 40309fc:	d9c02b17 	ldw	r7,172(sp)
 4030a00:	db402a17 	ldw	r13,168(sp)
 4030a04:	103fbf1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030a08:	d9401b17 	ldw	r5,108(sp)
 4030a0c:	d8801c17 	ldw	r2,112(sp)
 4030a10:	d811883a 	mov	r8,sp
 4030a14:	29800044 	addi	r6,r5,1
 4030a18:	003dc406 	br	403012c <_gp+0xfffeef2c>
 4030a1c:	1000d21e 	bne	r2,zero,4030d68 <___vfiprintf_internal_r+0x11b4>
 4030a20:	d8c01d87 	ldb	r3,118(sp)
 4030a24:	18009526 	beq	r3,zero,4030c7c <___vfiprintf_internal_r+0x10c8>
 4030a28:	00800044 	movi	r2,1
 4030a2c:	d8c01d84 	addi	r3,sp,118
 4030a30:	1009883a 	mov	r4,r2
 4030a34:	d8c00015 	stw	r3,0(sp)
 4030a38:	d8800115 	stw	r2,4(sp)
 4030a3c:	d811883a 	mov	r8,sp
 4030a40:	200b883a 	mov	r5,r4
 4030a44:	42000204 	addi	r8,r8,8
 4030a48:	21000044 	addi	r4,r4,1
 4030a4c:	003d9706 	br	40300ac <_gp+0xfffeeeac>
 4030a50:	d9001d04 	addi	r4,sp,116
 4030a54:	00800084 	movi	r2,2
 4030a58:	d9000015 	stw	r4,0(sp)
 4030a5c:	d8800115 	stw	r2,4(sp)
 4030a60:	1809883a 	mov	r4,r3
 4030a64:	d811883a 	mov	r8,sp
 4030a68:	200b883a 	mov	r5,r4
 4030a6c:	42000204 	addi	r8,r8,8
 4030a70:	21000044 	addi	r4,r4,1
 4030a74:	003f4e06 	br	40307b0 <_gp+0xfffef5b0>
 4030a78:	d8001d85 	stb	zero,118(sp)
 4030a7c:	48005016 	blt	r9,zero,4030bc0 <___vfiprintf_internal_r+0x100c>
 4030a80:	00ffdfc4 	movi	r3,-129
 4030a84:	94c4b03a 	or	r2,r18,r19
 4030a88:	a0e8703a 	and	r20,r20,r3
 4030a8c:	103d4426 	beq	r2,zero,402ffa0 <_gp+0xfffeeda0>
 4030a90:	0039883a 	mov	fp,zero
 4030a94:	d9002617 	ldw	r4,152(sp)
 4030a98:	dd401a04 	addi	r21,sp,104
 4030a9c:	908003cc 	andi	r2,r18,15
 4030aa0:	9806973a 	slli	r3,r19,28
 4030aa4:	2085883a 	add	r2,r4,r2
 4030aa8:	9024d13a 	srli	r18,r18,4
 4030aac:	10800003 	ldbu	r2,0(r2)
 4030ab0:	9826d13a 	srli	r19,r19,4
 4030ab4:	ad7fffc4 	addi	r21,r21,-1
 4030ab8:	1ca4b03a 	or	r18,r3,r18
 4030abc:	a8800005 	stb	r2,0(r21)
 4030ac0:	94c4b03a 	or	r2,r18,r19
 4030ac4:	103ff51e 	bne	r2,zero,4030a9c <_gp+0xfffef89c>
 4030ac8:	003e5906 	br	4030430 <_gp+0xfffef230>
 4030acc:	d9402117 	ldw	r5,132(sp)
 4030ad0:	d9002017 	ldw	r4,128(sp)
 4030ad4:	d9801a04 	addi	r6,sp,104
 4030ad8:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030adc:	103f891e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030ae0:	d8801c17 	ldw	r2,112(sp)
 4030ae4:	d811883a 	mov	r8,sp
 4030ae8:	003f9506 	br	4030940 <_gp+0xfffef740>
 4030aec:	d9402117 	ldw	r5,132(sp)
 4030af0:	d9002017 	ldw	r4,128(sp)
 4030af4:	d9801a04 	addi	r6,sp,104
 4030af8:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030afc:	103f811e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030b00:	d811883a 	mov	r8,sp
 4030b04:	003ced06 	br	402febc <_gp+0xfffeecbc>
 4030b08:	d9402117 	ldw	r5,132(sp)
 4030b0c:	d9002017 	ldw	r4,128(sp)
 4030b10:	d9801a04 	addi	r6,sp,104
 4030b14:	da402c15 	stw	r9,176(sp)
 4030b18:	db802a15 	stw	r14,168(sp)
 4030b1c:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030b20:	da402c17 	ldw	r9,176(sp)
 4030b24:	db802a17 	ldw	r14,168(sp)
 4030b28:	103f761e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030b2c:	d9401b17 	ldw	r5,108(sp)
 4030b30:	d8801c17 	ldw	r2,112(sp)
 4030b34:	d811883a 	mov	r8,sp
 4030b38:	29000044 	addi	r4,r5,1
 4030b3c:	003d5b06 	br	40300ac <_gp+0xfffeeeac>
 4030b40:	d9402117 	ldw	r5,132(sp)
 4030b44:	d9002017 	ldw	r4,128(sp)
 4030b48:	d9801a04 	addi	r6,sp,104
 4030b4c:	da402c15 	stw	r9,176(sp)
 4030b50:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030b54:	da402c17 	ldw	r9,176(sp)
 4030b58:	103f6a1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030b5c:	d9401b17 	ldw	r5,108(sp)
 4030b60:	d8801c17 	ldw	r2,112(sp)
 4030b64:	d811883a 	mov	r8,sp
 4030b68:	29000044 	addi	r4,r5,1
 4030b6c:	003f1006 	br	40307b0 <_gp+0xfffef5b0>
 4030b70:	1000c31e 	bne	r2,zero,4030e80 <___vfiprintf_internal_r+0x12cc>
 4030b74:	01000044 	movi	r4,1
 4030b78:	000b883a 	mov	r5,zero
 4030b7c:	d811883a 	mov	r8,sp
 4030b80:	003f0d06 	br	40307b8 <_gp+0xfffef5b8>
 4030b84:	d9402117 	ldw	r5,132(sp)
 4030b88:	d9002017 	ldw	r4,128(sp)
 4030b8c:	d9801a04 	addi	r6,sp,104
 4030b90:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030b94:	103f5b1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030b98:	d9001b17 	ldw	r4,108(sp)
 4030b9c:	d8801c17 	ldw	r2,112(sp)
 4030ba0:	d811883a 	mov	r8,sp
 4030ba4:	21000044 	addi	r4,r4,1
 4030ba8:	003d8006 	br	40301ac <_gp+0xfffeefac>
 4030bac:	010100f4 	movhi	r4,1027
 4030bb0:	211d1204 	addi	r4,r4,29768
 4030bb4:	d9002615 	stw	r4,152(sp)
 4030bb8:	d8c02215 	stw	r3,136(sp)
 4030bbc:	1029883a 	mov	r20,r2
 4030bc0:	94c4b03a 	or	r2,r18,r19
 4030bc4:	103fb21e 	bne	r2,zero,4030a90 <_gp+0xfffef890>
 4030bc8:	0039883a 	mov	fp,zero
 4030bcc:	00800084 	movi	r2,2
 4030bd0:	003e6b06 	br	4030580 <_gp+0xfffef380>
 4030bd4:	da802217 	ldw	r10,136(sp)
 4030bd8:	d8001d85 	stb	zero,118(sp)
 4030bdc:	0027883a 	mov	r19,zero
 4030be0:	50800104 	addi	r2,r10,4
 4030be4:	54800017 	ldw	r18,0(r10)
 4030be8:	483e6016 	blt	r9,zero,403056c <_gp+0xfffef36c>
 4030bec:	00ffdfc4 	movi	r3,-129
 4030bf0:	d8802215 	stw	r2,136(sp)
 4030bf4:	a0e8703a 	and	r20,r20,r3
 4030bf8:	0039883a 	mov	fp,zero
 4030bfc:	903ebb26 	beq	r18,zero,40306ec <_gp+0xfffef4ec>
 4030c00:	00800244 	movi	r2,9
 4030c04:	14bdee36 	bltu	r2,r18,40303c0 <_gp+0xfffef1c0>
 4030c08:	003eba06 	br	40306f4 <_gp+0xfffef4f4>
 4030c0c:	00800c04 	movi	r2,48
 4030c10:	d8c01d45 	stb	r3,117(sp)
 4030c14:	d8801d05 	stb	r2,116(sp)
 4030c18:	d8001d85 	stb	zero,118(sp)
 4030c1c:	a0c00094 	ori	r3,r20,2
 4030c20:	4800a916 	blt	r9,zero,4030ec8 <___vfiprintf_internal_r+0x1314>
 4030c24:	00bfdfc4 	movi	r2,-129
 4030c28:	a096703a 	and	r11,r20,r2
 4030c2c:	5d000094 	ori	r20,r11,2
 4030c30:	0039883a 	mov	fp,zero
 4030c34:	003f9706 	br	4030a94 <_gp+0xfffef894>
 4030c38:	8025883a 	mov	r18,r16
 4030c3c:	003c2e06 	br	402fcf8 <_gp+0xfffeeaf8>
 4030c40:	008100f4 	movhi	r2,1027
 4030c44:	109d1204 	addi	r2,r2,29768
 4030c48:	0039883a 	mov	fp,zero
 4030c4c:	d8802615 	stw	r2,152(sp)
 4030c50:	003f9006 	br	4030a94 <_gp+0xfffef894>
 4030c54:	04a5c83a 	sub	r18,zero,r18
 4030c58:	07000b44 	movi	fp,45
 4030c5c:	9004c03a 	cmpne	r2,r18,zero
 4030c60:	04e7c83a 	sub	r19,zero,r19
 4030c64:	df001d85 	stb	fp,118(sp)
 4030c68:	98a7c83a 	sub	r19,r19,r2
 4030c6c:	48009f16 	blt	r9,zero,4030eec <___vfiprintf_internal_r+0x1338>
 4030c70:	00bfdfc4 	movi	r2,-129
 4030c74:	a0a8703a 	and	r20,r20,r2
 4030c78:	003dd006 	br	40303bc <_gp+0xfffef1bc>
 4030c7c:	70004c26 	beq	r14,zero,4030db0 <___vfiprintf_internal_r+0x11fc>
 4030c80:	00800084 	movi	r2,2
 4030c84:	d8c01d04 	addi	r3,sp,116
 4030c88:	d8c00015 	stw	r3,0(sp)
 4030c8c:	d8800115 	stw	r2,4(sp)
 4030c90:	01000044 	movi	r4,1
 4030c94:	d811883a 	mov	r8,sp
 4030c98:	003f7306 	br	4030a68 <_gp+0xfffef868>
 4030c9c:	a080100c 	andi	r2,r20,64
 4030ca0:	da802217 	ldw	r10,136(sp)
 4030ca4:	103e0626 	beq	r2,zero,40304c0 <_gp+0xfffef2c0>
 4030ca8:	5480000f 	ldh	r18,0(r10)
 4030cac:	52800104 	addi	r10,r10,4
 4030cb0:	da802215 	stw	r10,136(sp)
 4030cb4:	9027d7fa 	srai	r19,r18,31
 4030cb8:	9805883a 	mov	r2,r19
 4030cbc:	003db806 	br	40303a0 <_gp+0xfffef1a0>
 4030cc0:	a080040c 	andi	r2,r20,16
 4030cc4:	1000091e 	bne	r2,zero,4030cec <___vfiprintf_internal_r+0x1138>
 4030cc8:	a2c0100c 	andi	r11,r20,64
 4030ccc:	58000726 	beq	r11,zero,4030cec <___vfiprintf_internal_r+0x1138>
 4030cd0:	da802217 	ldw	r10,136(sp)
 4030cd4:	50800017 	ldw	r2,0(r10)
 4030cd8:	52800104 	addi	r10,r10,4
 4030cdc:	da802215 	stw	r10,136(sp)
 4030ce0:	da802317 	ldw	r10,140(sp)
 4030ce4:	1280000d 	sth	r10,0(r2)
 4030ce8:	003be706 	br	402fc88 <_gp+0xfffeea88>
 4030cec:	da802217 	ldw	r10,136(sp)
 4030cf0:	50800017 	ldw	r2,0(r10)
 4030cf4:	52800104 	addi	r10,r10,4
 4030cf8:	da802215 	stw	r10,136(sp)
 4030cfc:	da802317 	ldw	r10,140(sp)
 4030d00:	12800015 	stw	r10,0(r2)
 4030d04:	003be006 	br	402fc88 <_gp+0xfffeea88>
 4030d08:	a080100c 	andi	r2,r20,64
 4030d0c:	da802217 	ldw	r10,136(sp)
 4030d10:	10003026 	beq	r2,zero,4030dd4 <___vfiprintf_internal_r+0x1220>
 4030d14:	5480000b 	ldhu	r18,0(r10)
 4030d18:	52800104 	addi	r10,r10,4
 4030d1c:	0027883a 	mov	r19,zero
 4030d20:	da802215 	stw	r10,136(sp)
 4030d24:	003d8006 	br	4030328 <_gp+0xfffef128>
 4030d28:	80c00007 	ldb	r3,0(r16)
 4030d2c:	003c0006 	br	402fd30 <_gp+0xfffeeb30>
 4030d30:	a080100c 	andi	r2,r20,64
 4030d34:	d8001d85 	stb	zero,118(sp)
 4030d38:	da802217 	ldw	r10,136(sp)
 4030d3c:	1000201e 	bne	r2,zero,4030dc0 <___vfiprintf_internal_r+0x120c>
 4030d40:	50800104 	addi	r2,r10,4
 4030d44:	54800017 	ldw	r18,0(r10)
 4030d48:	0027883a 	mov	r19,zero
 4030d4c:	483def0e 	bge	r9,zero,403050c <_gp+0xfffef30c>
 4030d50:	94c6b03a 	or	r3,r18,r19
 4030d54:	d8802215 	stw	r2,136(sp)
 4030d58:	183d4e1e 	bne	r3,zero,4030294 <_gp+0xfffef094>
 4030d5c:	0039883a 	mov	fp,zero
 4030d60:	0005883a 	mov	r2,zero
 4030d64:	003e0606 	br	4030580 <_gp+0xfffef380>
 4030d68:	d9402117 	ldw	r5,132(sp)
 4030d6c:	d9002017 	ldw	r4,128(sp)
 4030d70:	d9801a04 	addi	r6,sp,104
 4030d74:	da402c15 	stw	r9,176(sp)
 4030d78:	db802a15 	stw	r14,168(sp)
 4030d7c:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030d80:	da402c17 	ldw	r9,176(sp)
 4030d84:	db802a17 	ldw	r14,168(sp)
 4030d88:	103ede1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030d8c:	d9401b17 	ldw	r5,108(sp)
 4030d90:	d8801c17 	ldw	r2,112(sp)
 4030d94:	d811883a 	mov	r8,sp
 4030d98:	29000044 	addi	r4,r5,1
 4030d9c:	003e7406 	br	4030770 <_gp+0xfffef570>
 4030da0:	00bfffc4 	movi	r2,-1
 4030da4:	003c5806 	br	402ff08 <_gp+0xfffeed08>
 4030da8:	d811883a 	mov	r8,sp
 4030dac:	003ee806 	br	4030950 <_gp+0xfffef750>
 4030db0:	000b883a 	mov	r5,zero
 4030db4:	01000044 	movi	r4,1
 4030db8:	d811883a 	mov	r8,sp
 4030dbc:	003e7c06 	br	40307b0 <_gp+0xfffef5b0>
 4030dc0:	50800104 	addi	r2,r10,4
 4030dc4:	5480000b 	ldhu	r18,0(r10)
 4030dc8:	0027883a 	mov	r19,zero
 4030dcc:	483dcf0e 	bge	r9,zero,403050c <_gp+0xfffef30c>
 4030dd0:	003fdf06 	br	4030d50 <_gp+0xfffefb50>
 4030dd4:	54800017 	ldw	r18,0(r10)
 4030dd8:	52800104 	addi	r10,r10,4
 4030ddc:	0027883a 	mov	r19,zero
 4030de0:	da802215 	stw	r10,136(sp)
 4030de4:	003d5006 	br	4030328 <_gp+0xfffef128>
 4030de8:	50800104 	addi	r2,r10,4
 4030dec:	5480000b 	ldhu	r18,0(r10)
 4030df0:	0027883a 	mov	r19,zero
 4030df4:	483f7d0e 	bge	r9,zero,4030bec <_gp+0xfffef9ec>
 4030df8:	003ddc06 	br	403056c <_gp+0xfffef36c>
 4030dfc:	d8c02215 	stw	r3,136(sp)
 4030e00:	0039883a 	mov	fp,zero
 4030e04:	003ddb06 	br	4030574 <_gp+0xfffef374>
 4030e08:	028100f4 	movhi	r10,1027
 4030e0c:	529d8204 	addi	r10,r10,30216
 4030e10:	da802415 	stw	r10,144(sp)
 4030e14:	003e8306 	br	4030824 <_gp+0xfffef624>
 4030e18:	d8801c17 	ldw	r2,112(sp)
 4030e1c:	dd002117 	ldw	r20,132(sp)
 4030e20:	103eb926 	beq	r2,zero,4030908 <_gp+0xfffef708>
 4030e24:	d9002017 	ldw	r4,128(sp)
 4030e28:	d9801a04 	addi	r6,sp,104
 4030e2c:	a00b883a 	mov	r5,r20
 4030e30:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030e34:	003eb406 	br	4030908 <_gp+0xfffef708>
 4030e38:	80c00043 	ldbu	r3,1(r16)
 4030e3c:	a5000814 	ori	r20,r20,32
 4030e40:	84000044 	addi	r16,r16,1
 4030e44:	18c03fcc 	andi	r3,r3,255
 4030e48:	18c0201c 	xori	r3,r3,128
 4030e4c:	18ffe004 	addi	r3,r3,-128
 4030e50:	003bb706 	br	402fd30 <_gp+0xfffeeb30>
 4030e54:	a809883a 	mov	r4,r21
 4030e58:	d8c02a15 	stw	r3,168(sp)
 4030e5c:	da002b15 	stw	r8,172(sp)
 4030e60:	40265340 	call	4026534 <strlen>
 4030e64:	d8c02a17 	ldw	r3,168(sp)
 4030e68:	1027883a 	mov	r19,r2
 4030e6c:	df001d83 	ldbu	fp,118(sp)
 4030e70:	d8c02215 	stw	r3,136(sp)
 4030e74:	0013883a 	mov	r9,zero
 4030e78:	da002b17 	ldw	r8,172(sp)
 4030e7c:	003c4d06 	br	402ffb4 <_gp+0xfffeedb4>
 4030e80:	d9402117 	ldw	r5,132(sp)
 4030e84:	d9002017 	ldw	r4,128(sp)
 4030e88:	d9801a04 	addi	r6,sp,104
 4030e8c:	da402c15 	stw	r9,176(sp)
 4030e90:	402faa00 	call	402faa0 <__sprint_r.part.0>
 4030e94:	da402c17 	ldw	r9,176(sp)
 4030e98:	103e9a1e 	bne	r2,zero,4030904 <_gp+0xfffef704>
 4030e9c:	d9401b17 	ldw	r5,108(sp)
 4030ea0:	d8801c17 	ldw	r2,112(sp)
 4030ea4:	d811883a 	mov	r8,sp
 4030ea8:	29000044 	addi	r4,r5,1
 4030eac:	003e4206 	br	40307b8 <_gp+0xfffef5b8>
 4030eb0:	d9401b17 	ldw	r5,108(sp)
 4030eb4:	010100f4 	movhi	r4,1027
 4030eb8:	211d8604 	addi	r4,r4,30232
 4030ebc:	d9002415 	stw	r4,144(sp)
 4030ec0:	29400044 	addi	r5,r5,1
 4030ec4:	003c6d06 	br	403007c <_gp+0xfffeee7c>
 4030ec8:	0039883a 	mov	fp,zero
 4030ecc:	00800084 	movi	r2,2
 4030ed0:	10803fcc 	andi	r2,r2,255
 4030ed4:	01000044 	movi	r4,1
 4030ed8:	11001e26 	beq	r2,r4,4030f54 <___vfiprintf_internal_r+0x13a0>
 4030edc:	01000084 	movi	r4,2
 4030ee0:	11001e1e 	bne	r2,r4,4030f5c <___vfiprintf_internal_r+0x13a8>
 4030ee4:	1829883a 	mov	r20,r3
 4030ee8:	003eea06 	br	4030a94 <_gp+0xfffef894>
 4030eec:	a007883a 	mov	r3,r20
 4030ef0:	00800044 	movi	r2,1
 4030ef4:	003ff606 	br	4030ed0 <_gp+0xfffefcd0>
 4030ef8:	00800184 	movi	r2,6
 4030efc:	1240012e 	bgeu	r2,r9,4030f04 <___vfiprintf_internal_r+0x1350>
 4030f00:	1013883a 	mov	r9,r2
 4030f04:	4827883a 	mov	r19,r9
 4030f08:	4825883a 	mov	r18,r9
 4030f0c:	48001516 	blt	r9,zero,4030f64 <___vfiprintf_internal_r+0x13b0>
 4030f10:	054100f4 	movhi	r21,1027
 4030f14:	d8c02215 	stw	r3,136(sp)
 4030f18:	ad5d1704 	addi	r21,r21,29788
 4030f1c:	003d1406 	br	4030370 <_gp+0xfffef170>
 4030f20:	028100f4 	movhi	r10,1027
 4030f24:	529d8204 	addi	r10,r10,30216
 4030f28:	da802415 	stw	r10,144(sp)
 4030f2c:	200d883a 	mov	r6,r4
 4030f30:	003c9106 	br	4030178 <_gp+0xfffeef78>
 4030f34:	5021883a 	mov	r16,r10
 4030f38:	0013883a 	mov	r9,zero
 4030f3c:	003b7d06 	br	402fd34 <_gp+0xfffeeb34>
 4030f40:	4827883a 	mov	r19,r9
 4030f44:	df001d83 	ldbu	fp,118(sp)
 4030f48:	d8c02215 	stw	r3,136(sp)
 4030f4c:	0013883a 	mov	r9,zero
 4030f50:	003c1806 	br	402ffb4 <_gp+0xfffeedb4>
 4030f54:	1829883a 	mov	r20,r3
 4030f58:	003d1806 	br	40303bc <_gp+0xfffef1bc>
 4030f5c:	1829883a 	mov	r20,r3
 4030f60:	003ccd06 	br	4030298 <_gp+0xfffef098>
 4030f64:	0025883a 	mov	r18,zero
 4030f68:	003fe906 	br	4030f10 <_gp+0xfffefd10>
 4030f6c:	d8802217 	ldw	r2,136(sp)
 4030f70:	80c00043 	ldbu	r3,1(r16)
 4030f74:	5021883a 	mov	r16,r10
 4030f78:	12400017 	ldw	r9,0(r2)
 4030f7c:	10800104 	addi	r2,r2,4
 4030f80:	d8802215 	stw	r2,136(sp)
 4030f84:	483faf0e 	bge	r9,zero,4030e44 <_gp+0xfffefc44>
 4030f88:	18c03fcc 	andi	r3,r3,255
 4030f8c:	18c0201c 	xori	r3,r3,128
 4030f90:	027fffc4 	movi	r9,-1
 4030f94:	18ffe004 	addi	r3,r3,-128
 4030f98:	003b6506 	br	402fd30 <_gp+0xfffeeb30>
 4030f9c:	d9c01d85 	stb	r7,118(sp)
 4030fa0:	003ca006 	br	4030224 <_gp+0xfffef024>
 4030fa4:	d9c01d85 	stb	r7,118(sp)
 4030fa8:	003cad06 	br	4030260 <_gp+0xfffef060>
 4030fac:	d9c01d85 	stb	r7,118(sp)
 4030fb0:	003d7d06 	br	40305a8 <_gp+0xfffef3a8>
 4030fb4:	d9c01d85 	stb	r7,118(sp)
 4030fb8:	003d5f06 	br	4030538 <_gp+0xfffef338>
 4030fbc:	a080004c 	andi	r2,r20,1
 4030fc0:	0039883a 	mov	fp,zero
 4030fc4:	10000526 	beq	r2,zero,4030fdc <___vfiprintf_internal_r+0x1428>
 4030fc8:	00800c04 	movi	r2,48
 4030fcc:	d88019c5 	stb	r2,103(sp)
 4030fd0:	dcc02717 	ldw	r19,156(sp)
 4030fd4:	dd4019c4 	addi	r21,sp,103
 4030fd8:	003bf606 	br	402ffb4 <_gp+0xfffeedb4>
 4030fdc:	0027883a 	mov	r19,zero
 4030fe0:	dd401a04 	addi	r21,sp,104
 4030fe4:	003bf306 	br	402ffb4 <_gp+0xfffeedb4>
 4030fe8:	d9c01d85 	stb	r7,118(sp)
 4030fec:	003dc806 	br	4030710 <_gp+0xfffef510>
 4030ff0:	d9c01d85 	stb	r7,118(sp)
 4030ff4:	003d3a06 	br	40304e0 <_gp+0xfffef2e0>
 4030ff8:	d9c01d85 	stb	r7,118(sp)
 4030ffc:	003d2a06 	br	40304a8 <_gp+0xfffef2a8>
 4031000:	d9c01d85 	stb	r7,118(sp)
 4031004:	003cde06 	br	4030380 <_gp+0xfffef180>
 4031008:	d9c01d85 	stb	r7,118(sp)
 403100c:	003cbc06 	br	4030300 <_gp+0xfffef100>

04031010 <__vfiprintf_internal>:
 4031010:	00810134 	movhi	r2,1028
 4031014:	10a48104 	addi	r2,r2,-28156
 4031018:	300f883a 	mov	r7,r6
 403101c:	280d883a 	mov	r6,r5
 4031020:	200b883a 	mov	r5,r4
 4031024:	11000017 	ldw	r4,0(r2)
 4031028:	402fbb41 	jmpi	402fbb4 <___vfiprintf_internal_r>

0403102c <__sbprintf>:
 403102c:	2880030b 	ldhu	r2,12(r5)
 4031030:	2ac01917 	ldw	r11,100(r5)
 4031034:	2a80038b 	ldhu	r10,14(r5)
 4031038:	2a400717 	ldw	r9,28(r5)
 403103c:	2a000917 	ldw	r8,36(r5)
 4031040:	defee204 	addi	sp,sp,-1144
 4031044:	00c10004 	movi	r3,1024
 4031048:	dc011a15 	stw	r16,1128(sp)
 403104c:	10bfff4c 	andi	r2,r2,65533
 4031050:	2821883a 	mov	r16,r5
 4031054:	d8cb883a 	add	r5,sp,r3
 4031058:	dc811c15 	stw	r18,1136(sp)
 403105c:	dc411b15 	stw	r17,1132(sp)
 4031060:	dfc11d15 	stw	ra,1140(sp)
 4031064:	2025883a 	mov	r18,r4
 4031068:	d881030d 	sth	r2,1036(sp)
 403106c:	dac11915 	stw	r11,1124(sp)
 4031070:	da81038d 	sth	r10,1038(sp)
 4031074:	da410715 	stw	r9,1052(sp)
 4031078:	da010915 	stw	r8,1060(sp)
 403107c:	dec10015 	stw	sp,1024(sp)
 4031080:	dec10415 	stw	sp,1040(sp)
 4031084:	d8c10215 	stw	r3,1032(sp)
 4031088:	d8c10515 	stw	r3,1044(sp)
 403108c:	d8010615 	stw	zero,1048(sp)
 4031090:	402fbb40 	call	402fbb4 <___vfiprintf_internal_r>
 4031094:	1023883a 	mov	r17,r2
 4031098:	10000416 	blt	r2,zero,40310ac <__sbprintf+0x80>
 403109c:	d9410004 	addi	r5,sp,1024
 40310a0:	9009883a 	mov	r4,r18
 40310a4:	40243440 	call	4024344 <_fflush_r>
 40310a8:	10000d1e 	bne	r2,zero,40310e0 <__sbprintf+0xb4>
 40310ac:	d881030b 	ldhu	r2,1036(sp)
 40310b0:	1080100c 	andi	r2,r2,64
 40310b4:	10000326 	beq	r2,zero,40310c4 <__sbprintf+0x98>
 40310b8:	8080030b 	ldhu	r2,12(r16)
 40310bc:	10801014 	ori	r2,r2,64
 40310c0:	8080030d 	sth	r2,12(r16)
 40310c4:	8805883a 	mov	r2,r17
 40310c8:	dfc11d17 	ldw	ra,1140(sp)
 40310cc:	dc811c17 	ldw	r18,1136(sp)
 40310d0:	dc411b17 	ldw	r17,1132(sp)
 40310d4:	dc011a17 	ldw	r16,1128(sp)
 40310d8:	dec11e04 	addi	sp,sp,1144
 40310dc:	f800283a 	ret
 40310e0:	047fffc4 	movi	r17,-1
 40310e4:	003ff106 	br	40310ac <_gp+0xfffefeac>

040310e8 <_calloc_r>:
 40310e8:	298b383a 	mul	r5,r5,r6
 40310ec:	defffe04 	addi	sp,sp,-8
 40310f0:	dfc00115 	stw	ra,4(sp)
 40310f4:	dc000015 	stw	r16,0(sp)
 40310f8:	402561c0 	call	402561c <_malloc_r>
 40310fc:	10002926 	beq	r2,zero,40311a4 <_calloc_r+0xbc>
 4031100:	11bfff17 	ldw	r6,-4(r2)
 4031104:	1021883a 	mov	r16,r2
 4031108:	00bfff04 	movi	r2,-4
 403110c:	308c703a 	and	r6,r6,r2
 4031110:	00c00904 	movi	r3,36
 4031114:	308d883a 	add	r6,r6,r2
 4031118:	19801636 	bltu	r3,r6,4031174 <_calloc_r+0x8c>
 403111c:	008004c4 	movi	r2,19
 4031120:	11800b2e 	bgeu	r2,r6,4031150 <_calloc_r+0x68>
 4031124:	80000015 	stw	zero,0(r16)
 4031128:	80000115 	stw	zero,4(r16)
 403112c:	008006c4 	movi	r2,27
 4031130:	11801a2e 	bgeu	r2,r6,403119c <_calloc_r+0xb4>
 4031134:	80000215 	stw	zero,8(r16)
 4031138:	80000315 	stw	zero,12(r16)
 403113c:	30c0151e 	bne	r6,r3,4031194 <_calloc_r+0xac>
 4031140:	80000415 	stw	zero,16(r16)
 4031144:	80800604 	addi	r2,r16,24
 4031148:	80000515 	stw	zero,20(r16)
 403114c:	00000106 	br	4031154 <_calloc_r+0x6c>
 4031150:	8005883a 	mov	r2,r16
 4031154:	10000015 	stw	zero,0(r2)
 4031158:	10000115 	stw	zero,4(r2)
 403115c:	10000215 	stw	zero,8(r2)
 4031160:	8005883a 	mov	r2,r16
 4031164:	dfc00117 	ldw	ra,4(sp)
 4031168:	dc000017 	ldw	r16,0(sp)
 403116c:	dec00204 	addi	sp,sp,8
 4031170:	f800283a 	ret
 4031174:	000b883a 	mov	r5,zero
 4031178:	8009883a 	mov	r4,r16
 403117c:	4025e280 	call	4025e28 <memset>
 4031180:	8005883a 	mov	r2,r16
 4031184:	dfc00117 	ldw	ra,4(sp)
 4031188:	dc000017 	ldw	r16,0(sp)
 403118c:	dec00204 	addi	sp,sp,8
 4031190:	f800283a 	ret
 4031194:	80800404 	addi	r2,r16,16
 4031198:	003fee06 	br	4031154 <_gp+0xfffeff54>
 403119c:	80800204 	addi	r2,r16,8
 40311a0:	003fec06 	br	4031154 <_gp+0xfffeff54>
 40311a4:	0005883a 	mov	r2,zero
 40311a8:	003fee06 	br	4031164 <_gp+0xfffeff64>

040311ac <__fputwc>:
 40311ac:	defff804 	addi	sp,sp,-32
 40311b0:	dcc00415 	stw	r19,16(sp)
 40311b4:	dc800315 	stw	r18,12(sp)
 40311b8:	dc000115 	stw	r16,4(sp)
 40311bc:	dfc00715 	stw	ra,28(sp)
 40311c0:	dd400615 	stw	r21,24(sp)
 40311c4:	dd000515 	stw	r20,20(sp)
 40311c8:	dc400215 	stw	r17,8(sp)
 40311cc:	2027883a 	mov	r19,r4
 40311d0:	2825883a 	mov	r18,r5
 40311d4:	3021883a 	mov	r16,r6
 40311d8:	402cb480 	call	402cb48 <__locale_mb_cur_max>
 40311dc:	00c00044 	movi	r3,1
 40311e0:	10c03e26 	beq	r2,r3,40312dc <__fputwc+0x130>
 40311e4:	81c01704 	addi	r7,r16,92
 40311e8:	900d883a 	mov	r6,r18
 40311ec:	d80b883a 	mov	r5,sp
 40311f0:	9809883a 	mov	r4,r19
 40311f4:	403150c0 	call	403150c <_wcrtomb_r>
 40311f8:	1029883a 	mov	r20,r2
 40311fc:	00bfffc4 	movi	r2,-1
 4031200:	a0802026 	beq	r20,r2,4031284 <__fputwc+0xd8>
 4031204:	d9400003 	ldbu	r5,0(sp)
 4031208:	a0001c26 	beq	r20,zero,403127c <__fputwc+0xd0>
 403120c:	0023883a 	mov	r17,zero
 4031210:	05400284 	movi	r21,10
 4031214:	00000906 	br	403123c <__fputwc+0x90>
 4031218:	80800017 	ldw	r2,0(r16)
 403121c:	11400005 	stb	r5,0(r2)
 4031220:	80c00017 	ldw	r3,0(r16)
 4031224:	18c00044 	addi	r3,r3,1
 4031228:	80c00015 	stw	r3,0(r16)
 403122c:	8c400044 	addi	r17,r17,1
 4031230:	dc45883a 	add	r2,sp,r17
 4031234:	8d00112e 	bgeu	r17,r20,403127c <__fputwc+0xd0>
 4031238:	11400003 	ldbu	r5,0(r2)
 403123c:	80c00217 	ldw	r3,8(r16)
 4031240:	18ffffc4 	addi	r3,r3,-1
 4031244:	80c00215 	stw	r3,8(r16)
 4031248:	183ff30e 	bge	r3,zero,4031218 <_gp+0xffff0018>
 403124c:	80800617 	ldw	r2,24(r16)
 4031250:	18801916 	blt	r3,r2,40312b8 <__fputwc+0x10c>
 4031254:	80800017 	ldw	r2,0(r16)
 4031258:	11400005 	stb	r5,0(r2)
 403125c:	80800017 	ldw	r2,0(r16)
 4031260:	10c00003 	ldbu	r3,0(r2)
 4031264:	10800044 	addi	r2,r2,1
 4031268:	1d402326 	beq	r3,r21,40312f8 <__fputwc+0x14c>
 403126c:	80800015 	stw	r2,0(r16)
 4031270:	8c400044 	addi	r17,r17,1
 4031274:	dc45883a 	add	r2,sp,r17
 4031278:	8d3fef36 	bltu	r17,r20,4031238 <_gp+0xffff0038>
 403127c:	9005883a 	mov	r2,r18
 4031280:	00000406 	br	4031294 <__fputwc+0xe8>
 4031284:	80c0030b 	ldhu	r3,12(r16)
 4031288:	a005883a 	mov	r2,r20
 403128c:	18c01014 	ori	r3,r3,64
 4031290:	80c0030d 	sth	r3,12(r16)
 4031294:	dfc00717 	ldw	ra,28(sp)
 4031298:	dd400617 	ldw	r21,24(sp)
 403129c:	dd000517 	ldw	r20,20(sp)
 40312a0:	dcc00417 	ldw	r19,16(sp)
 40312a4:	dc800317 	ldw	r18,12(sp)
 40312a8:	dc400217 	ldw	r17,8(sp)
 40312ac:	dc000117 	ldw	r16,4(sp)
 40312b0:	dec00804 	addi	sp,sp,32
 40312b4:	f800283a 	ret
 40312b8:	800d883a 	mov	r6,r16
 40312bc:	29403fcc 	andi	r5,r5,255
 40312c0:	9809883a 	mov	r4,r19
 40312c4:	40313b40 	call	40313b4 <__swbuf_r>
 40312c8:	10bfffe0 	cmpeqi	r2,r2,-1
 40312cc:	10803fcc 	andi	r2,r2,255
 40312d0:	103fd626 	beq	r2,zero,403122c <_gp+0xffff002c>
 40312d4:	00bfffc4 	movi	r2,-1
 40312d8:	003fee06 	br	4031294 <_gp+0xffff0094>
 40312dc:	90ffffc4 	addi	r3,r18,-1
 40312e0:	01003f84 	movi	r4,254
 40312e4:	20ffbf36 	bltu	r4,r3,40311e4 <_gp+0xfffeffe4>
 40312e8:	900b883a 	mov	r5,r18
 40312ec:	dc800005 	stb	r18,0(sp)
 40312f0:	1029883a 	mov	r20,r2
 40312f4:	003fc506 	br	403120c <_gp+0xffff000c>
 40312f8:	800d883a 	mov	r6,r16
 40312fc:	a80b883a 	mov	r5,r21
 4031300:	9809883a 	mov	r4,r19
 4031304:	40313b40 	call	40313b4 <__swbuf_r>
 4031308:	10bfffe0 	cmpeqi	r2,r2,-1
 403130c:	003fef06 	br	40312cc <_gp+0xffff00cc>

04031310 <_fputwc_r>:
 4031310:	3080030b 	ldhu	r2,12(r6)
 4031314:	10c8000c 	andi	r3,r2,8192
 4031318:	1800051e 	bne	r3,zero,4031330 <_fputwc_r+0x20>
 403131c:	30c01917 	ldw	r3,100(r6)
 4031320:	10880014 	ori	r2,r2,8192
 4031324:	3080030d 	sth	r2,12(r6)
 4031328:	18880014 	ori	r2,r3,8192
 403132c:	30801915 	stw	r2,100(r6)
 4031330:	40311ac1 	jmpi	40311ac <__fputwc>

04031334 <fputwc>:
 4031334:	00810134 	movhi	r2,1028
 4031338:	defffc04 	addi	sp,sp,-16
 403133c:	10a48104 	addi	r2,r2,-28156
 4031340:	dc000115 	stw	r16,4(sp)
 4031344:	14000017 	ldw	r16,0(r2)
 4031348:	dc400215 	stw	r17,8(sp)
 403134c:	dfc00315 	stw	ra,12(sp)
 4031350:	2023883a 	mov	r17,r4
 4031354:	80000226 	beq	r16,zero,4031360 <fputwc+0x2c>
 4031358:	80800e17 	ldw	r2,56(r16)
 403135c:	10001026 	beq	r2,zero,40313a0 <fputwc+0x6c>
 4031360:	2880030b 	ldhu	r2,12(r5)
 4031364:	10c8000c 	andi	r3,r2,8192
 4031368:	1800051e 	bne	r3,zero,4031380 <fputwc+0x4c>
 403136c:	28c01917 	ldw	r3,100(r5)
 4031370:	10880014 	ori	r2,r2,8192
 4031374:	2880030d 	sth	r2,12(r5)
 4031378:	18880014 	ori	r2,r3,8192
 403137c:	28801915 	stw	r2,100(r5)
 4031380:	280d883a 	mov	r6,r5
 4031384:	8009883a 	mov	r4,r16
 4031388:	880b883a 	mov	r5,r17
 403138c:	dfc00317 	ldw	ra,12(sp)
 4031390:	dc400217 	ldw	r17,8(sp)
 4031394:	dc000117 	ldw	r16,4(sp)
 4031398:	dec00404 	addi	sp,sp,16
 403139c:	40311ac1 	jmpi	40311ac <__fputwc>
 40313a0:	8009883a 	mov	r4,r16
 40313a4:	d9400015 	stw	r5,0(sp)
 40313a8:	40247200 	call	4024720 <__sinit>
 40313ac:	d9400017 	ldw	r5,0(sp)
 40313b0:	003feb06 	br	4031360 <_gp+0xffff0160>

040313b4 <__swbuf_r>:
 40313b4:	defffb04 	addi	sp,sp,-20
 40313b8:	dcc00315 	stw	r19,12(sp)
 40313bc:	dc800215 	stw	r18,8(sp)
 40313c0:	dc000015 	stw	r16,0(sp)
 40313c4:	dfc00415 	stw	ra,16(sp)
 40313c8:	dc400115 	stw	r17,4(sp)
 40313cc:	2025883a 	mov	r18,r4
 40313d0:	2827883a 	mov	r19,r5
 40313d4:	3021883a 	mov	r16,r6
 40313d8:	20000226 	beq	r4,zero,40313e4 <__swbuf_r+0x30>
 40313dc:	20800e17 	ldw	r2,56(r4)
 40313e0:	10004226 	beq	r2,zero,40314ec <__swbuf_r+0x138>
 40313e4:	80800617 	ldw	r2,24(r16)
 40313e8:	8100030b 	ldhu	r4,12(r16)
 40313ec:	80800215 	stw	r2,8(r16)
 40313f0:	2080020c 	andi	r2,r4,8
 40313f4:	10003626 	beq	r2,zero,40314d0 <__swbuf_r+0x11c>
 40313f8:	80c00417 	ldw	r3,16(r16)
 40313fc:	18003426 	beq	r3,zero,40314d0 <__swbuf_r+0x11c>
 4031400:	2088000c 	andi	r2,r4,8192
 4031404:	9c403fcc 	andi	r17,r19,255
 4031408:	10001a26 	beq	r2,zero,4031474 <__swbuf_r+0xc0>
 403140c:	80800017 	ldw	r2,0(r16)
 4031410:	81000517 	ldw	r4,20(r16)
 4031414:	10c7c83a 	sub	r3,r2,r3
 4031418:	1900200e 	bge	r3,r4,403149c <__swbuf_r+0xe8>
 403141c:	18c00044 	addi	r3,r3,1
 4031420:	81000217 	ldw	r4,8(r16)
 4031424:	11400044 	addi	r5,r2,1
 4031428:	81400015 	stw	r5,0(r16)
 403142c:	213fffc4 	addi	r4,r4,-1
 4031430:	81000215 	stw	r4,8(r16)
 4031434:	14c00005 	stb	r19,0(r2)
 4031438:	80800517 	ldw	r2,20(r16)
 403143c:	10c01e26 	beq	r2,r3,40314b8 <__swbuf_r+0x104>
 4031440:	8080030b 	ldhu	r2,12(r16)
 4031444:	1080004c 	andi	r2,r2,1
 4031448:	10000226 	beq	r2,zero,4031454 <__swbuf_r+0xa0>
 403144c:	00800284 	movi	r2,10
 4031450:	88801926 	beq	r17,r2,40314b8 <__swbuf_r+0x104>
 4031454:	8805883a 	mov	r2,r17
 4031458:	dfc00417 	ldw	ra,16(sp)
 403145c:	dcc00317 	ldw	r19,12(sp)
 4031460:	dc800217 	ldw	r18,8(sp)
 4031464:	dc400117 	ldw	r17,4(sp)
 4031468:	dc000017 	ldw	r16,0(sp)
 403146c:	dec00504 	addi	sp,sp,20
 4031470:	f800283a 	ret
 4031474:	81401917 	ldw	r5,100(r16)
 4031478:	00b7ffc4 	movi	r2,-8193
 403147c:	21080014 	ori	r4,r4,8192
 4031480:	2884703a 	and	r2,r5,r2
 4031484:	80801915 	stw	r2,100(r16)
 4031488:	80800017 	ldw	r2,0(r16)
 403148c:	8100030d 	sth	r4,12(r16)
 4031490:	81000517 	ldw	r4,20(r16)
 4031494:	10c7c83a 	sub	r3,r2,r3
 4031498:	193fe016 	blt	r3,r4,403141c <_gp+0xffff021c>
 403149c:	800b883a 	mov	r5,r16
 40314a0:	9009883a 	mov	r4,r18
 40314a4:	40243440 	call	4024344 <_fflush_r>
 40314a8:	1000071e 	bne	r2,zero,40314c8 <__swbuf_r+0x114>
 40314ac:	80800017 	ldw	r2,0(r16)
 40314b0:	00c00044 	movi	r3,1
 40314b4:	003fda06 	br	4031420 <_gp+0xffff0220>
 40314b8:	800b883a 	mov	r5,r16
 40314bc:	9009883a 	mov	r4,r18
 40314c0:	40243440 	call	4024344 <_fflush_r>
 40314c4:	103fe326 	beq	r2,zero,4031454 <_gp+0xffff0254>
 40314c8:	00bfffc4 	movi	r2,-1
 40314cc:	003fe206 	br	4031458 <_gp+0xffff0258>
 40314d0:	800b883a 	mov	r5,r16
 40314d4:	9009883a 	mov	r4,r18
 40314d8:	402aad40 	call	402aad4 <__swsetup_r>
 40314dc:	103ffa1e 	bne	r2,zero,40314c8 <_gp+0xffff02c8>
 40314e0:	8100030b 	ldhu	r4,12(r16)
 40314e4:	80c00417 	ldw	r3,16(r16)
 40314e8:	003fc506 	br	4031400 <_gp+0xffff0200>
 40314ec:	40247200 	call	4024720 <__sinit>
 40314f0:	003fbc06 	br	40313e4 <_gp+0xffff01e4>

040314f4 <__swbuf>:
 40314f4:	00810134 	movhi	r2,1028
 40314f8:	10a48104 	addi	r2,r2,-28156
 40314fc:	280d883a 	mov	r6,r5
 4031500:	200b883a 	mov	r5,r4
 4031504:	11000017 	ldw	r4,0(r2)
 4031508:	40313b41 	jmpi	40313b4 <__swbuf_r>

0403150c <_wcrtomb_r>:
 403150c:	defff604 	addi	sp,sp,-40
 4031510:	00810134 	movhi	r2,1028
 4031514:	dc800815 	stw	r18,32(sp)
 4031518:	dc400715 	stw	r17,28(sp)
 403151c:	dc000615 	stw	r16,24(sp)
 4031520:	10a48504 	addi	r2,r2,-28140
 4031524:	dfc00915 	stw	ra,36(sp)
 4031528:	2021883a 	mov	r16,r4
 403152c:	3823883a 	mov	r17,r7
 4031530:	14800017 	ldw	r18,0(r2)
 4031534:	28001426 	beq	r5,zero,4031588 <_wcrtomb_r+0x7c>
 4031538:	d9400415 	stw	r5,16(sp)
 403153c:	d9800515 	stw	r6,20(sp)
 4031540:	402cb3c0 	call	402cb3c <__locale_charset>
 4031544:	d9800517 	ldw	r6,20(sp)
 4031548:	d9400417 	ldw	r5,16(sp)
 403154c:	100f883a 	mov	r7,r2
 4031550:	dc400015 	stw	r17,0(sp)
 4031554:	8009883a 	mov	r4,r16
 4031558:	903ee83a 	callr	r18
 403155c:	00ffffc4 	movi	r3,-1
 4031560:	10c0031e 	bne	r2,r3,4031570 <_wcrtomb_r+0x64>
 4031564:	88000015 	stw	zero,0(r17)
 4031568:	00c02284 	movi	r3,138
 403156c:	80c00015 	stw	r3,0(r16)
 4031570:	dfc00917 	ldw	ra,36(sp)
 4031574:	dc800817 	ldw	r18,32(sp)
 4031578:	dc400717 	ldw	r17,28(sp)
 403157c:	dc000617 	ldw	r16,24(sp)
 4031580:	dec00a04 	addi	sp,sp,40
 4031584:	f800283a 	ret
 4031588:	402cb3c0 	call	402cb3c <__locale_charset>
 403158c:	100f883a 	mov	r7,r2
 4031590:	dc400015 	stw	r17,0(sp)
 4031594:	000d883a 	mov	r6,zero
 4031598:	d9400104 	addi	r5,sp,4
 403159c:	8009883a 	mov	r4,r16
 40315a0:	903ee83a 	callr	r18
 40315a4:	003fed06 	br	403155c <_gp+0xffff035c>

040315a8 <wcrtomb>:
 40315a8:	defff604 	addi	sp,sp,-40
 40315ac:	00810134 	movhi	r2,1028
 40315b0:	dc800615 	stw	r18,24(sp)
 40315b4:	dc400515 	stw	r17,20(sp)
 40315b8:	10a48104 	addi	r2,r2,-28156
 40315bc:	dfc00915 	stw	ra,36(sp)
 40315c0:	dd000815 	stw	r20,32(sp)
 40315c4:	dcc00715 	stw	r19,28(sp)
 40315c8:	dc000415 	stw	r16,16(sp)
 40315cc:	3025883a 	mov	r18,r6
 40315d0:	14400017 	ldw	r17,0(r2)
 40315d4:	20001926 	beq	r4,zero,403163c <wcrtomb+0x94>
 40315d8:	00810134 	movhi	r2,1028
 40315dc:	10a48504 	addi	r2,r2,-28140
 40315e0:	15000017 	ldw	r20,0(r2)
 40315e4:	2021883a 	mov	r16,r4
 40315e8:	2827883a 	mov	r19,r5
 40315ec:	402cb3c0 	call	402cb3c <__locale_charset>
 40315f0:	100f883a 	mov	r7,r2
 40315f4:	dc800015 	stw	r18,0(sp)
 40315f8:	980d883a 	mov	r6,r19
 40315fc:	800b883a 	mov	r5,r16
 4031600:	8809883a 	mov	r4,r17
 4031604:	a03ee83a 	callr	r20
 4031608:	00ffffc4 	movi	r3,-1
 403160c:	10c0031e 	bne	r2,r3,403161c <wcrtomb+0x74>
 4031610:	90000015 	stw	zero,0(r18)
 4031614:	00c02284 	movi	r3,138
 4031618:	88c00015 	stw	r3,0(r17)
 403161c:	dfc00917 	ldw	ra,36(sp)
 4031620:	dd000817 	ldw	r20,32(sp)
 4031624:	dcc00717 	ldw	r19,28(sp)
 4031628:	dc800617 	ldw	r18,24(sp)
 403162c:	dc400517 	ldw	r17,20(sp)
 4031630:	dc000417 	ldw	r16,16(sp)
 4031634:	dec00a04 	addi	sp,sp,40
 4031638:	f800283a 	ret
 403163c:	00810134 	movhi	r2,1028
 4031640:	10a48504 	addi	r2,r2,-28140
 4031644:	14000017 	ldw	r16,0(r2)
 4031648:	402cb3c0 	call	402cb3c <__locale_charset>
 403164c:	100f883a 	mov	r7,r2
 4031650:	dc800015 	stw	r18,0(sp)
 4031654:	000d883a 	mov	r6,zero
 4031658:	d9400104 	addi	r5,sp,4
 403165c:	8809883a 	mov	r4,r17
 4031660:	803ee83a 	callr	r16
 4031664:	003fe806 	br	4031608 <_gp+0xffff0408>

04031668 <__ascii_wctomb>:
 4031668:	28000526 	beq	r5,zero,4031680 <__ascii_wctomb+0x18>
 403166c:	00803fc4 	movi	r2,255
 4031670:	11800536 	bltu	r2,r6,4031688 <__ascii_wctomb+0x20>
 4031674:	29800005 	stb	r6,0(r5)
 4031678:	00800044 	movi	r2,1
 403167c:	f800283a 	ret
 4031680:	0005883a 	mov	r2,zero
 4031684:	f800283a 	ret
 4031688:	00802284 	movi	r2,138
 403168c:	20800015 	stw	r2,0(r4)
 4031690:	00bfffc4 	movi	r2,-1
 4031694:	f800283a 	ret

04031698 <_wctomb_r>:
 4031698:	00810134 	movhi	r2,1028
 403169c:	defff904 	addi	sp,sp,-28
 40316a0:	10a48504 	addi	r2,r2,-28140
 40316a4:	dfc00615 	stw	ra,24(sp)
 40316a8:	dc400515 	stw	r17,20(sp)
 40316ac:	dc000415 	stw	r16,16(sp)
 40316b0:	3823883a 	mov	r17,r7
 40316b4:	14000017 	ldw	r16,0(r2)
 40316b8:	d9000115 	stw	r4,4(sp)
 40316bc:	d9400215 	stw	r5,8(sp)
 40316c0:	d9800315 	stw	r6,12(sp)
 40316c4:	402cb3c0 	call	402cb3c <__locale_charset>
 40316c8:	d9800317 	ldw	r6,12(sp)
 40316cc:	d9400217 	ldw	r5,8(sp)
 40316d0:	d9000117 	ldw	r4,4(sp)
 40316d4:	100f883a 	mov	r7,r2
 40316d8:	dc400015 	stw	r17,0(sp)
 40316dc:	803ee83a 	callr	r16
 40316e0:	dfc00617 	ldw	ra,24(sp)
 40316e4:	dc400517 	ldw	r17,20(sp)
 40316e8:	dc000417 	ldw	r16,16(sp)
 40316ec:	dec00704 	addi	sp,sp,28
 40316f0:	f800283a 	ret

040316f4 <__udivdi3>:
 40316f4:	defff504 	addi	sp,sp,-44
 40316f8:	dcc00415 	stw	r19,16(sp)
 40316fc:	dc000115 	stw	r16,4(sp)
 4031700:	dfc00a15 	stw	ra,40(sp)
 4031704:	df000915 	stw	fp,36(sp)
 4031708:	ddc00815 	stw	r23,32(sp)
 403170c:	dd800715 	stw	r22,28(sp)
 4031710:	dd400615 	stw	r21,24(sp)
 4031714:	dd000515 	stw	r20,20(sp)
 4031718:	dc800315 	stw	r18,12(sp)
 403171c:	dc400215 	stw	r17,8(sp)
 4031720:	2027883a 	mov	r19,r4
 4031724:	2821883a 	mov	r16,r5
 4031728:	3800411e 	bne	r7,zero,4031830 <__udivdi3+0x13c>
 403172c:	3023883a 	mov	r17,r6
 4031730:	2025883a 	mov	r18,r4
 4031734:	2980522e 	bgeu	r5,r6,4031880 <__udivdi3+0x18c>
 4031738:	00bfffd4 	movui	r2,65535
 403173c:	282d883a 	mov	r22,r5
 4031740:	1180a836 	bltu	r2,r6,40319e4 <__udivdi3+0x2f0>
 4031744:	00803fc4 	movi	r2,255
 4031748:	1185803a 	cmpltu	r2,r2,r6
 403174c:	100490fa 	slli	r2,r2,3
 4031750:	3086d83a 	srl	r3,r6,r2
 4031754:	010100f4 	movhi	r4,1027
 4031758:	211cc684 	addi	r4,r4,29466
 403175c:	20c7883a 	add	r3,r4,r3
 4031760:	18c00003 	ldbu	r3,0(r3)
 4031764:	1885883a 	add	r2,r3,r2
 4031768:	00c00804 	movi	r3,32
 403176c:	1887c83a 	sub	r3,r3,r2
 4031770:	18000526 	beq	r3,zero,4031788 <__udivdi3+0x94>
 4031774:	80e0983a 	sll	r16,r16,r3
 4031778:	9884d83a 	srl	r2,r19,r2
 403177c:	30e2983a 	sll	r17,r6,r3
 4031780:	98e4983a 	sll	r18,r19,r3
 4031784:	142cb03a 	or	r22,r2,r16
 4031788:	882ad43a 	srli	r21,r17,16
 403178c:	b009883a 	mov	r4,r22
 4031790:	8d3fffcc 	andi	r20,r17,65535
 4031794:	a80b883a 	mov	r5,r21
 4031798:	40229d00 	call	40229d0 <__umodsi3>
 403179c:	b009883a 	mov	r4,r22
 40317a0:	a80b883a 	mov	r5,r21
 40317a4:	1027883a 	mov	r19,r2
 40317a8:	402296c0 	call	402296c <__udivsi3>
 40317ac:	102d883a 	mov	r22,r2
 40317b0:	9826943a 	slli	r19,r19,16
 40317b4:	9004d43a 	srli	r2,r18,16
 40317b8:	a5a1383a 	mul	r16,r20,r22
 40317bc:	14c4b03a 	or	r2,r2,r19
 40317c0:	1400052e 	bgeu	r2,r16,40317d8 <__udivdi3+0xe4>
 40317c4:	1445883a 	add	r2,r2,r17
 40317c8:	b0ffffc4 	addi	r3,r22,-1
 40317cc:	14400136 	bltu	r2,r17,40317d4 <__udivdi3+0xe0>
 40317d0:	14012336 	bltu	r2,r16,4031c60 <__udivdi3+0x56c>
 40317d4:	182d883a 	mov	r22,r3
 40317d8:	1421c83a 	sub	r16,r2,r16
 40317dc:	a80b883a 	mov	r5,r21
 40317e0:	8009883a 	mov	r4,r16
 40317e4:	40229d00 	call	40229d0 <__umodsi3>
 40317e8:	1027883a 	mov	r19,r2
 40317ec:	a80b883a 	mov	r5,r21
 40317f0:	8009883a 	mov	r4,r16
 40317f4:	402296c0 	call	402296c <__udivsi3>
 40317f8:	9826943a 	slli	r19,r19,16
 40317fc:	a0a9383a 	mul	r20,r20,r2
 4031800:	94bfffcc 	andi	r18,r18,65535
 4031804:	94e4b03a 	or	r18,r18,r19
 4031808:	9500052e 	bgeu	r18,r20,4031820 <__udivdi3+0x12c>
 403180c:	8ca5883a 	add	r18,r17,r18
 4031810:	10ffffc4 	addi	r3,r2,-1
 4031814:	9440f136 	bltu	r18,r17,4031bdc <__udivdi3+0x4e8>
 4031818:	9500f02e 	bgeu	r18,r20,4031bdc <__udivdi3+0x4e8>
 403181c:	10bfff84 	addi	r2,r2,-2
 4031820:	b00c943a 	slli	r6,r22,16
 4031824:	0007883a 	mov	r3,zero
 4031828:	3084b03a 	or	r2,r6,r2
 403182c:	00005906 	br	4031994 <__udivdi3+0x2a0>
 4031830:	29c05636 	bltu	r5,r7,403198c <__udivdi3+0x298>
 4031834:	00bfffd4 	movui	r2,65535
 4031838:	11c0622e 	bgeu	r2,r7,40319c4 <__udivdi3+0x2d0>
 403183c:	00804034 	movhi	r2,256
 4031840:	10bfffc4 	addi	r2,r2,-1
 4031844:	11c0ee36 	bltu	r2,r7,4031c00 <__udivdi3+0x50c>
 4031848:	00800404 	movi	r2,16
 403184c:	3886d83a 	srl	r3,r7,r2
 4031850:	010100f4 	movhi	r4,1027
 4031854:	211cc684 	addi	r4,r4,29466
 4031858:	20c7883a 	add	r3,r4,r3
 403185c:	18c00003 	ldbu	r3,0(r3)
 4031860:	05400804 	movi	r21,32
 4031864:	1885883a 	add	r2,r3,r2
 4031868:	a8abc83a 	sub	r21,r21,r2
 403186c:	a800621e 	bne	r21,zero,40319f8 <__udivdi3+0x304>
 4031870:	3c00e936 	bltu	r7,r16,4031c18 <__udivdi3+0x524>
 4031874:	9985403a 	cmpgeu	r2,r19,r6
 4031878:	0007883a 	mov	r3,zero
 403187c:	00004506 	br	4031994 <__udivdi3+0x2a0>
 4031880:	3000041e 	bne	r6,zero,4031894 <__udivdi3+0x1a0>
 4031884:	000b883a 	mov	r5,zero
 4031888:	01000044 	movi	r4,1
 403188c:	402296c0 	call	402296c <__udivsi3>
 4031890:	1023883a 	mov	r17,r2
 4031894:	00bfffd4 	movui	r2,65535
 4031898:	14404e2e 	bgeu	r2,r17,40319d4 <__udivdi3+0x2e0>
 403189c:	00804034 	movhi	r2,256
 40318a0:	10bfffc4 	addi	r2,r2,-1
 40318a4:	1440d836 	bltu	r2,r17,4031c08 <__udivdi3+0x514>
 40318a8:	00800404 	movi	r2,16
 40318ac:	8886d83a 	srl	r3,r17,r2
 40318b0:	010100f4 	movhi	r4,1027
 40318b4:	211cc684 	addi	r4,r4,29466
 40318b8:	20c7883a 	add	r3,r4,r3
 40318bc:	18c00003 	ldbu	r3,0(r3)
 40318c0:	1885883a 	add	r2,r3,r2
 40318c4:	00c00804 	movi	r3,32
 40318c8:	1887c83a 	sub	r3,r3,r2
 40318cc:	18008f1e 	bne	r3,zero,4031b0c <__udivdi3+0x418>
 40318d0:	882ad43a 	srli	r21,r17,16
 40318d4:	8461c83a 	sub	r16,r16,r17
 40318d8:	8d3fffcc 	andi	r20,r17,65535
 40318dc:	00c00044 	movi	r3,1
 40318e0:	8009883a 	mov	r4,r16
 40318e4:	a80b883a 	mov	r5,r21
 40318e8:	d8c00015 	stw	r3,0(sp)
 40318ec:	40229d00 	call	40229d0 <__umodsi3>
 40318f0:	8009883a 	mov	r4,r16
 40318f4:	a80b883a 	mov	r5,r21
 40318f8:	1027883a 	mov	r19,r2
 40318fc:	402296c0 	call	402296c <__udivsi3>
 4031900:	9826943a 	slli	r19,r19,16
 4031904:	9008d43a 	srli	r4,r18,16
 4031908:	1521383a 	mul	r16,r2,r20
 403190c:	102d883a 	mov	r22,r2
 4031910:	24c8b03a 	or	r4,r4,r19
 4031914:	d8c00017 	ldw	r3,0(sp)
 4031918:	2400052e 	bgeu	r4,r16,4031930 <__udivdi3+0x23c>
 403191c:	2449883a 	add	r4,r4,r17
 4031920:	b0bfffc4 	addi	r2,r22,-1
 4031924:	24400136 	bltu	r4,r17,403192c <__udivdi3+0x238>
 4031928:	2400ca36 	bltu	r4,r16,4031c54 <__udivdi3+0x560>
 403192c:	102d883a 	mov	r22,r2
 4031930:	2421c83a 	sub	r16,r4,r16
 4031934:	a80b883a 	mov	r5,r21
 4031938:	8009883a 	mov	r4,r16
 403193c:	d8c00015 	stw	r3,0(sp)
 4031940:	40229d00 	call	40229d0 <__umodsi3>
 4031944:	1027883a 	mov	r19,r2
 4031948:	a80b883a 	mov	r5,r21
 403194c:	8009883a 	mov	r4,r16
 4031950:	402296c0 	call	402296c <__udivsi3>
 4031954:	9826943a 	slli	r19,r19,16
 4031958:	1529383a 	mul	r20,r2,r20
 403195c:	94bfffcc 	andi	r18,r18,65535
 4031960:	94e4b03a 	or	r18,r18,r19
 4031964:	d8c00017 	ldw	r3,0(sp)
 4031968:	9500052e 	bgeu	r18,r20,4031980 <__udivdi3+0x28c>
 403196c:	8ca5883a 	add	r18,r17,r18
 4031970:	113fffc4 	addi	r4,r2,-1
 4031974:	94409736 	bltu	r18,r17,4031bd4 <__udivdi3+0x4e0>
 4031978:	9500962e 	bgeu	r18,r20,4031bd4 <__udivdi3+0x4e0>
 403197c:	10bfff84 	addi	r2,r2,-2
 4031980:	b00c943a 	slli	r6,r22,16
 4031984:	3084b03a 	or	r2,r6,r2
 4031988:	00000206 	br	4031994 <__udivdi3+0x2a0>
 403198c:	0007883a 	mov	r3,zero
 4031990:	0005883a 	mov	r2,zero
 4031994:	dfc00a17 	ldw	ra,40(sp)
 4031998:	df000917 	ldw	fp,36(sp)
 403199c:	ddc00817 	ldw	r23,32(sp)
 40319a0:	dd800717 	ldw	r22,28(sp)
 40319a4:	dd400617 	ldw	r21,24(sp)
 40319a8:	dd000517 	ldw	r20,20(sp)
 40319ac:	dcc00417 	ldw	r19,16(sp)
 40319b0:	dc800317 	ldw	r18,12(sp)
 40319b4:	dc400217 	ldw	r17,8(sp)
 40319b8:	dc000117 	ldw	r16,4(sp)
 40319bc:	dec00b04 	addi	sp,sp,44
 40319c0:	f800283a 	ret
 40319c4:	00803fc4 	movi	r2,255
 40319c8:	11c5803a 	cmpltu	r2,r2,r7
 40319cc:	100490fa 	slli	r2,r2,3
 40319d0:	003f9e06 	br	403184c <_gp+0xffff064c>
 40319d4:	00803fc4 	movi	r2,255
 40319d8:	1445803a 	cmpltu	r2,r2,r17
 40319dc:	100490fa 	slli	r2,r2,3
 40319e0:	003fb206 	br	40318ac <_gp+0xffff06ac>
 40319e4:	00804034 	movhi	r2,256
 40319e8:	10bfffc4 	addi	r2,r2,-1
 40319ec:	11808836 	bltu	r2,r6,4031c10 <__udivdi3+0x51c>
 40319f0:	00800404 	movi	r2,16
 40319f4:	003f5606 	br	4031750 <_gp+0xffff0550>
 40319f8:	30aed83a 	srl	r23,r6,r2
 40319fc:	3d4e983a 	sll	r7,r7,r21
 4031a00:	80acd83a 	srl	r22,r16,r2
 4031a04:	9884d83a 	srl	r2,r19,r2
 4031a08:	3deeb03a 	or	r23,r7,r23
 4031a0c:	b824d43a 	srli	r18,r23,16
 4031a10:	8560983a 	sll	r16,r16,r21
 4031a14:	b009883a 	mov	r4,r22
 4031a18:	900b883a 	mov	r5,r18
 4031a1c:	3568983a 	sll	r20,r6,r21
 4031a20:	1420b03a 	or	r16,r2,r16
 4031a24:	40229d00 	call	40229d0 <__umodsi3>
 4031a28:	b009883a 	mov	r4,r22
 4031a2c:	900b883a 	mov	r5,r18
 4031a30:	1023883a 	mov	r17,r2
 4031a34:	402296c0 	call	402296c <__udivsi3>
 4031a38:	8808943a 	slli	r4,r17,16
 4031a3c:	bf3fffcc 	andi	fp,r23,65535
 4031a40:	8006d43a 	srli	r3,r16,16
 4031a44:	e0a3383a 	mul	r17,fp,r2
 4031a48:	100d883a 	mov	r6,r2
 4031a4c:	1906b03a 	or	r3,r3,r4
 4031a50:	1c40042e 	bgeu	r3,r17,4031a64 <__udivdi3+0x370>
 4031a54:	1dc7883a 	add	r3,r3,r23
 4031a58:	10bfffc4 	addi	r2,r2,-1
 4031a5c:	1dc0752e 	bgeu	r3,r23,4031c34 <__udivdi3+0x540>
 4031a60:	100d883a 	mov	r6,r2
 4031a64:	1c63c83a 	sub	r17,r3,r17
 4031a68:	900b883a 	mov	r5,r18
 4031a6c:	8809883a 	mov	r4,r17
 4031a70:	d9800015 	stw	r6,0(sp)
 4031a74:	40229d00 	call	40229d0 <__umodsi3>
 4031a78:	102d883a 	mov	r22,r2
 4031a7c:	8809883a 	mov	r4,r17
 4031a80:	900b883a 	mov	r5,r18
 4031a84:	402296c0 	call	402296c <__udivsi3>
 4031a88:	b02c943a 	slli	r22,r22,16
 4031a8c:	e089383a 	mul	r4,fp,r2
 4031a90:	843fffcc 	andi	r16,r16,65535
 4031a94:	85a0b03a 	or	r16,r16,r22
 4031a98:	d9800017 	ldw	r6,0(sp)
 4031a9c:	8100042e 	bgeu	r16,r4,4031ab0 <__udivdi3+0x3bc>
 4031aa0:	85e1883a 	add	r16,r16,r23
 4031aa4:	10ffffc4 	addi	r3,r2,-1
 4031aa8:	85c05e2e 	bgeu	r16,r23,4031c24 <__udivdi3+0x530>
 4031aac:	1805883a 	mov	r2,r3
 4031ab0:	300c943a 	slli	r6,r6,16
 4031ab4:	a17fffcc 	andi	r5,r20,65535
 4031ab8:	a028d43a 	srli	r20,r20,16
 4031abc:	3084b03a 	or	r2,r6,r2
 4031ac0:	10ffffcc 	andi	r3,r2,65535
 4031ac4:	100cd43a 	srli	r6,r2,16
 4031ac8:	194f383a 	mul	r7,r3,r5
 4031acc:	1d07383a 	mul	r3,r3,r20
 4031ad0:	314b383a 	mul	r5,r6,r5
 4031ad4:	3810d43a 	srli	r8,r7,16
 4031ad8:	8121c83a 	sub	r16,r16,r4
 4031adc:	1947883a 	add	r3,r3,r5
 4031ae0:	40c7883a 	add	r3,r8,r3
 4031ae4:	350d383a 	mul	r6,r6,r20
 4031ae8:	1940022e 	bgeu	r3,r5,4031af4 <__udivdi3+0x400>
 4031aec:	01000074 	movhi	r4,1
 4031af0:	310d883a 	add	r6,r6,r4
 4031af4:	1828d43a 	srli	r20,r3,16
 4031af8:	a18d883a 	add	r6,r20,r6
 4031afc:	81803e36 	bltu	r16,r6,4031bf8 <__udivdi3+0x504>
 4031b00:	81803826 	beq	r16,r6,4031be4 <__udivdi3+0x4f0>
 4031b04:	0007883a 	mov	r3,zero
 4031b08:	003fa206 	br	4031994 <_gp+0xffff0794>
 4031b0c:	88e2983a 	sll	r17,r17,r3
 4031b10:	80a8d83a 	srl	r20,r16,r2
 4031b14:	80e0983a 	sll	r16,r16,r3
 4031b18:	882ad43a 	srli	r21,r17,16
 4031b1c:	9884d83a 	srl	r2,r19,r2
 4031b20:	a009883a 	mov	r4,r20
 4031b24:	a80b883a 	mov	r5,r21
 4031b28:	142eb03a 	or	r23,r2,r16
 4031b2c:	98e4983a 	sll	r18,r19,r3
 4031b30:	40229d00 	call	40229d0 <__umodsi3>
 4031b34:	a009883a 	mov	r4,r20
 4031b38:	a80b883a 	mov	r5,r21
 4031b3c:	1021883a 	mov	r16,r2
 4031b40:	402296c0 	call	402296c <__udivsi3>
 4031b44:	1039883a 	mov	fp,r2
 4031b48:	8d3fffcc 	andi	r20,r17,65535
 4031b4c:	8020943a 	slli	r16,r16,16
 4031b50:	b804d43a 	srli	r2,r23,16
 4031b54:	a72d383a 	mul	r22,r20,fp
 4031b58:	1404b03a 	or	r2,r2,r16
 4031b5c:	1580062e 	bgeu	r2,r22,4031b78 <__udivdi3+0x484>
 4031b60:	1445883a 	add	r2,r2,r17
 4031b64:	e0ffffc4 	addi	r3,fp,-1
 4031b68:	14403836 	bltu	r2,r17,4031c4c <__udivdi3+0x558>
 4031b6c:	1580372e 	bgeu	r2,r22,4031c4c <__udivdi3+0x558>
 4031b70:	e73fff84 	addi	fp,fp,-2
 4031b74:	1445883a 	add	r2,r2,r17
 4031b78:	15adc83a 	sub	r22,r2,r22
 4031b7c:	a80b883a 	mov	r5,r21
 4031b80:	b009883a 	mov	r4,r22
 4031b84:	40229d00 	call	40229d0 <__umodsi3>
 4031b88:	1027883a 	mov	r19,r2
 4031b8c:	b009883a 	mov	r4,r22
 4031b90:	a80b883a 	mov	r5,r21
 4031b94:	402296c0 	call	402296c <__udivsi3>
 4031b98:	9826943a 	slli	r19,r19,16
 4031b9c:	a0a1383a 	mul	r16,r20,r2
 4031ba0:	b93fffcc 	andi	r4,r23,65535
 4031ba4:	24c8b03a 	or	r4,r4,r19
 4031ba8:	2400062e 	bgeu	r4,r16,4031bc4 <__udivdi3+0x4d0>
 4031bac:	2449883a 	add	r4,r4,r17
 4031bb0:	10ffffc4 	addi	r3,r2,-1
 4031bb4:	24402336 	bltu	r4,r17,4031c44 <__udivdi3+0x550>
 4031bb8:	2400222e 	bgeu	r4,r16,4031c44 <__udivdi3+0x550>
 4031bbc:	10bfff84 	addi	r2,r2,-2
 4031bc0:	2449883a 	add	r4,r4,r17
 4031bc4:	e038943a 	slli	fp,fp,16
 4031bc8:	2421c83a 	sub	r16,r4,r16
 4031bcc:	e086b03a 	or	r3,fp,r2
 4031bd0:	003f4306 	br	40318e0 <_gp+0xffff06e0>
 4031bd4:	2005883a 	mov	r2,r4
 4031bd8:	003f6906 	br	4031980 <_gp+0xffff0780>
 4031bdc:	1805883a 	mov	r2,r3
 4031be0:	003f0f06 	br	4031820 <_gp+0xffff0620>
 4031be4:	1806943a 	slli	r3,r3,16
 4031be8:	9d66983a 	sll	r19,r19,r21
 4031bec:	39ffffcc 	andi	r7,r7,65535
 4031bf0:	19c7883a 	add	r3,r3,r7
 4031bf4:	98ffc32e 	bgeu	r19,r3,4031b04 <_gp+0xffff0904>
 4031bf8:	10bfffc4 	addi	r2,r2,-1
 4031bfc:	003fc106 	br	4031b04 <_gp+0xffff0904>
 4031c00:	00800604 	movi	r2,24
 4031c04:	003f1106 	br	403184c <_gp+0xffff064c>
 4031c08:	00800604 	movi	r2,24
 4031c0c:	003f2706 	br	40318ac <_gp+0xffff06ac>
 4031c10:	00800604 	movi	r2,24
 4031c14:	003ece06 	br	4031750 <_gp+0xffff0550>
 4031c18:	0007883a 	mov	r3,zero
 4031c1c:	00800044 	movi	r2,1
 4031c20:	003f5c06 	br	4031994 <_gp+0xffff0794>
 4031c24:	813fa12e 	bgeu	r16,r4,4031aac <_gp+0xffff08ac>
 4031c28:	10bfff84 	addi	r2,r2,-2
 4031c2c:	85e1883a 	add	r16,r16,r23
 4031c30:	003f9f06 	br	4031ab0 <_gp+0xffff08b0>
 4031c34:	1c7f8a2e 	bgeu	r3,r17,4031a60 <_gp+0xffff0860>
 4031c38:	31bfff84 	addi	r6,r6,-2
 4031c3c:	1dc7883a 	add	r3,r3,r23
 4031c40:	003f8806 	br	4031a64 <_gp+0xffff0864>
 4031c44:	1805883a 	mov	r2,r3
 4031c48:	003fde06 	br	4031bc4 <_gp+0xffff09c4>
 4031c4c:	1839883a 	mov	fp,r3
 4031c50:	003fc906 	br	4031b78 <_gp+0xffff0978>
 4031c54:	b5bfff84 	addi	r22,r22,-2
 4031c58:	2449883a 	add	r4,r4,r17
 4031c5c:	003f3406 	br	4031930 <_gp+0xffff0730>
 4031c60:	b5bfff84 	addi	r22,r22,-2
 4031c64:	1445883a 	add	r2,r2,r17
 4031c68:	003edb06 	br	40317d8 <_gp+0xffff05d8>

04031c6c <__umoddi3>:
 4031c6c:	defff404 	addi	sp,sp,-48
 4031c70:	df000a15 	stw	fp,40(sp)
 4031c74:	dc400315 	stw	r17,12(sp)
 4031c78:	dc000215 	stw	r16,8(sp)
 4031c7c:	dfc00b15 	stw	ra,44(sp)
 4031c80:	ddc00915 	stw	r23,36(sp)
 4031c84:	dd800815 	stw	r22,32(sp)
 4031c88:	dd400715 	stw	r21,28(sp)
 4031c8c:	dd000615 	stw	r20,24(sp)
 4031c90:	dcc00515 	stw	r19,20(sp)
 4031c94:	dc800415 	stw	r18,16(sp)
 4031c98:	2021883a 	mov	r16,r4
 4031c9c:	2823883a 	mov	r17,r5
 4031ca0:	2839883a 	mov	fp,r5
 4031ca4:	38003c1e 	bne	r7,zero,4031d98 <__umoddi3+0x12c>
 4031ca8:	3027883a 	mov	r19,r6
 4031cac:	2029883a 	mov	r20,r4
 4031cb0:	2980512e 	bgeu	r5,r6,4031df8 <__umoddi3+0x18c>
 4031cb4:	00bfffd4 	movui	r2,65535
 4031cb8:	11809a36 	bltu	r2,r6,4031f24 <__umoddi3+0x2b8>
 4031cbc:	01003fc4 	movi	r4,255
 4031cc0:	2189803a 	cmpltu	r4,r4,r6
 4031cc4:	200890fa 	slli	r4,r4,3
 4031cc8:	3104d83a 	srl	r2,r6,r4
 4031ccc:	00c100f4 	movhi	r3,1027
 4031cd0:	18dcc684 	addi	r3,r3,29466
 4031cd4:	1885883a 	add	r2,r3,r2
 4031cd8:	10c00003 	ldbu	r3,0(r2)
 4031cdc:	00800804 	movi	r2,32
 4031ce0:	1909883a 	add	r4,r3,r4
 4031ce4:	1125c83a 	sub	r18,r2,r4
 4031ce8:	90000526 	beq	r18,zero,4031d00 <__umoddi3+0x94>
 4031cec:	8ca2983a 	sll	r17,r17,r18
 4031cf0:	8108d83a 	srl	r4,r16,r4
 4031cf4:	34a6983a 	sll	r19,r6,r18
 4031cf8:	84a8983a 	sll	r20,r16,r18
 4031cfc:	2478b03a 	or	fp,r4,r17
 4031d00:	982ed43a 	srli	r23,r19,16
 4031d04:	e009883a 	mov	r4,fp
 4031d08:	9dbfffcc 	andi	r22,r19,65535
 4031d0c:	b80b883a 	mov	r5,r23
 4031d10:	40229d00 	call	40229d0 <__umodsi3>
 4031d14:	e009883a 	mov	r4,fp
 4031d18:	b80b883a 	mov	r5,r23
 4031d1c:	102b883a 	mov	r21,r2
 4031d20:	402296c0 	call	402296c <__udivsi3>
 4031d24:	a806943a 	slli	r3,r21,16
 4031d28:	a008d43a 	srli	r4,r20,16
 4031d2c:	b085383a 	mul	r2,r22,r2
 4031d30:	20c8b03a 	or	r4,r4,r3
 4031d34:	2080032e 	bgeu	r4,r2,4031d44 <__umoddi3+0xd8>
 4031d38:	24c9883a 	add	r4,r4,r19
 4031d3c:	24c00136 	bltu	r4,r19,4031d44 <__umoddi3+0xd8>
 4031d40:	20811036 	bltu	r4,r2,4032184 <__umoddi3+0x518>
 4031d44:	20abc83a 	sub	r21,r4,r2
 4031d48:	b80b883a 	mov	r5,r23
 4031d4c:	a809883a 	mov	r4,r21
 4031d50:	40229d00 	call	40229d0 <__umodsi3>
 4031d54:	1023883a 	mov	r17,r2
 4031d58:	b80b883a 	mov	r5,r23
 4031d5c:	a809883a 	mov	r4,r21
 4031d60:	402296c0 	call	402296c <__udivsi3>
 4031d64:	8822943a 	slli	r17,r17,16
 4031d68:	b085383a 	mul	r2,r22,r2
 4031d6c:	a0ffffcc 	andi	r3,r20,65535
 4031d70:	1c46b03a 	or	r3,r3,r17
 4031d74:	1880042e 	bgeu	r3,r2,4031d88 <__umoddi3+0x11c>
 4031d78:	1cc7883a 	add	r3,r3,r19
 4031d7c:	1cc00236 	bltu	r3,r19,4031d88 <__umoddi3+0x11c>
 4031d80:	1880012e 	bgeu	r3,r2,4031d88 <__umoddi3+0x11c>
 4031d84:	1cc7883a 	add	r3,r3,r19
 4031d88:	1885c83a 	sub	r2,r3,r2
 4031d8c:	1484d83a 	srl	r2,r2,r18
 4031d90:	0007883a 	mov	r3,zero
 4031d94:	00004f06 	br	4031ed4 <__umoddi3+0x268>
 4031d98:	29c04c36 	bltu	r5,r7,4031ecc <__umoddi3+0x260>
 4031d9c:	00bfffd4 	movui	r2,65535
 4031da0:	11c0582e 	bgeu	r2,r7,4031f04 <__umoddi3+0x298>
 4031da4:	00804034 	movhi	r2,256
 4031da8:	10bfffc4 	addi	r2,r2,-1
 4031dac:	11c0e736 	bltu	r2,r7,403214c <__umoddi3+0x4e0>
 4031db0:	01000404 	movi	r4,16
 4031db4:	3904d83a 	srl	r2,r7,r4
 4031db8:	00c100f4 	movhi	r3,1027
 4031dbc:	18dcc684 	addi	r3,r3,29466
 4031dc0:	1885883a 	add	r2,r3,r2
 4031dc4:	14c00003 	ldbu	r19,0(r2)
 4031dc8:	00c00804 	movi	r3,32
 4031dcc:	9927883a 	add	r19,r19,r4
 4031dd0:	1ce9c83a 	sub	r20,r3,r19
 4031dd4:	a000581e 	bne	r20,zero,4031f38 <__umoddi3+0x2cc>
 4031dd8:	3c400136 	bltu	r7,r17,4031de0 <__umoddi3+0x174>
 4031ddc:	8180eb36 	bltu	r16,r6,403218c <__umoddi3+0x520>
 4031de0:	8185c83a 	sub	r2,r16,r6
 4031de4:	89e3c83a 	sub	r17,r17,r7
 4031de8:	8089803a 	cmpltu	r4,r16,r2
 4031dec:	8939c83a 	sub	fp,r17,r4
 4031df0:	e007883a 	mov	r3,fp
 4031df4:	00003706 	br	4031ed4 <__umoddi3+0x268>
 4031df8:	3000041e 	bne	r6,zero,4031e0c <__umoddi3+0x1a0>
 4031dfc:	000b883a 	mov	r5,zero
 4031e00:	01000044 	movi	r4,1
 4031e04:	402296c0 	call	402296c <__udivsi3>
 4031e08:	1027883a 	mov	r19,r2
 4031e0c:	00bfffd4 	movui	r2,65535
 4031e10:	14c0402e 	bgeu	r2,r19,4031f14 <__umoddi3+0x2a8>
 4031e14:	00804034 	movhi	r2,256
 4031e18:	10bfffc4 	addi	r2,r2,-1
 4031e1c:	14c0cd36 	bltu	r2,r19,4032154 <__umoddi3+0x4e8>
 4031e20:	00800404 	movi	r2,16
 4031e24:	9886d83a 	srl	r3,r19,r2
 4031e28:	010100f4 	movhi	r4,1027
 4031e2c:	211cc684 	addi	r4,r4,29466
 4031e30:	20c7883a 	add	r3,r4,r3
 4031e34:	18c00003 	ldbu	r3,0(r3)
 4031e38:	1887883a 	add	r3,r3,r2
 4031e3c:	00800804 	movi	r2,32
 4031e40:	10e5c83a 	sub	r18,r2,r3
 4031e44:	9000901e 	bne	r18,zero,4032088 <__umoddi3+0x41c>
 4031e48:	982cd43a 	srli	r22,r19,16
 4031e4c:	8ce3c83a 	sub	r17,r17,r19
 4031e50:	9d7fffcc 	andi	r21,r19,65535
 4031e54:	b00b883a 	mov	r5,r22
 4031e58:	8809883a 	mov	r4,r17
 4031e5c:	40229d00 	call	40229d0 <__umodsi3>
 4031e60:	8809883a 	mov	r4,r17
 4031e64:	b00b883a 	mov	r5,r22
 4031e68:	1021883a 	mov	r16,r2
 4031e6c:	402296c0 	call	402296c <__udivsi3>
 4031e70:	8006943a 	slli	r3,r16,16
 4031e74:	a008d43a 	srli	r4,r20,16
 4031e78:	1545383a 	mul	r2,r2,r21
 4031e7c:	20c8b03a 	or	r4,r4,r3
 4031e80:	2080042e 	bgeu	r4,r2,4031e94 <__umoddi3+0x228>
 4031e84:	24c9883a 	add	r4,r4,r19
 4031e88:	24c00236 	bltu	r4,r19,4031e94 <__umoddi3+0x228>
 4031e8c:	2080012e 	bgeu	r4,r2,4031e94 <__umoddi3+0x228>
 4031e90:	24c9883a 	add	r4,r4,r19
 4031e94:	20a1c83a 	sub	r16,r4,r2
 4031e98:	b00b883a 	mov	r5,r22
 4031e9c:	8009883a 	mov	r4,r16
 4031ea0:	40229d00 	call	40229d0 <__umodsi3>
 4031ea4:	1023883a 	mov	r17,r2
 4031ea8:	b00b883a 	mov	r5,r22
 4031eac:	8009883a 	mov	r4,r16
 4031eb0:	402296c0 	call	402296c <__udivsi3>
 4031eb4:	8822943a 	slli	r17,r17,16
 4031eb8:	1545383a 	mul	r2,r2,r21
 4031ebc:	a53fffcc 	andi	r20,r20,65535
 4031ec0:	a446b03a 	or	r3,r20,r17
 4031ec4:	18bfb02e 	bgeu	r3,r2,4031d88 <_gp+0xffff0b88>
 4031ec8:	003fab06 	br	4031d78 <_gp+0xffff0b78>
 4031ecc:	2005883a 	mov	r2,r4
 4031ed0:	2807883a 	mov	r3,r5
 4031ed4:	dfc00b17 	ldw	ra,44(sp)
 4031ed8:	df000a17 	ldw	fp,40(sp)
 4031edc:	ddc00917 	ldw	r23,36(sp)
 4031ee0:	dd800817 	ldw	r22,32(sp)
 4031ee4:	dd400717 	ldw	r21,28(sp)
 4031ee8:	dd000617 	ldw	r20,24(sp)
 4031eec:	dcc00517 	ldw	r19,20(sp)
 4031ef0:	dc800417 	ldw	r18,16(sp)
 4031ef4:	dc400317 	ldw	r17,12(sp)
 4031ef8:	dc000217 	ldw	r16,8(sp)
 4031efc:	dec00c04 	addi	sp,sp,48
 4031f00:	f800283a 	ret
 4031f04:	04c03fc4 	movi	r19,255
 4031f08:	99c9803a 	cmpltu	r4,r19,r7
 4031f0c:	200890fa 	slli	r4,r4,3
 4031f10:	003fa806 	br	4031db4 <_gp+0xffff0bb4>
 4031f14:	00803fc4 	movi	r2,255
 4031f18:	14c5803a 	cmpltu	r2,r2,r19
 4031f1c:	100490fa 	slli	r2,r2,3
 4031f20:	003fc006 	br	4031e24 <_gp+0xffff0c24>
 4031f24:	00804034 	movhi	r2,256
 4031f28:	10bfffc4 	addi	r2,r2,-1
 4031f2c:	11808b36 	bltu	r2,r6,403215c <__umoddi3+0x4f0>
 4031f30:	01000404 	movi	r4,16
 4031f34:	003f6406 	br	4031cc8 <_gp+0xffff0ac8>
 4031f38:	34c4d83a 	srl	r2,r6,r19
 4031f3c:	3d0e983a 	sll	r7,r7,r20
 4031f40:	8cf8d83a 	srl	fp,r17,r19
 4031f44:	8d10983a 	sll	r8,r17,r20
 4031f48:	38aab03a 	or	r21,r7,r2
 4031f4c:	a82cd43a 	srli	r22,r21,16
 4031f50:	84e2d83a 	srl	r17,r16,r19
 4031f54:	e009883a 	mov	r4,fp
 4031f58:	b00b883a 	mov	r5,r22
 4031f5c:	8a22b03a 	or	r17,r17,r8
 4031f60:	3524983a 	sll	r18,r6,r20
 4031f64:	40229d00 	call	40229d0 <__umodsi3>
 4031f68:	e009883a 	mov	r4,fp
 4031f6c:	b00b883a 	mov	r5,r22
 4031f70:	102f883a 	mov	r23,r2
 4031f74:	402296c0 	call	402296c <__udivsi3>
 4031f78:	100d883a 	mov	r6,r2
 4031f7c:	b808943a 	slli	r4,r23,16
 4031f80:	aa3fffcc 	andi	r8,r21,65535
 4031f84:	8804d43a 	srli	r2,r17,16
 4031f88:	41af383a 	mul	r23,r8,r6
 4031f8c:	8520983a 	sll	r16,r16,r20
 4031f90:	1104b03a 	or	r2,r2,r4
 4031f94:	15c0042e 	bgeu	r2,r23,4031fa8 <__umoddi3+0x33c>
 4031f98:	1545883a 	add	r2,r2,r21
 4031f9c:	30ffffc4 	addi	r3,r6,-1
 4031fa0:	1540742e 	bgeu	r2,r21,4032174 <__umoddi3+0x508>
 4031fa4:	180d883a 	mov	r6,r3
 4031fa8:	15efc83a 	sub	r23,r2,r23
 4031fac:	b00b883a 	mov	r5,r22
 4031fb0:	b809883a 	mov	r4,r23
 4031fb4:	d9800115 	stw	r6,4(sp)
 4031fb8:	da000015 	stw	r8,0(sp)
 4031fbc:	40229d00 	call	40229d0 <__umodsi3>
 4031fc0:	b00b883a 	mov	r5,r22
 4031fc4:	b809883a 	mov	r4,r23
 4031fc8:	1039883a 	mov	fp,r2
 4031fcc:	402296c0 	call	402296c <__udivsi3>
 4031fd0:	da000017 	ldw	r8,0(sp)
 4031fd4:	e038943a 	slli	fp,fp,16
 4031fd8:	100b883a 	mov	r5,r2
 4031fdc:	4089383a 	mul	r4,r8,r2
 4031fe0:	8a3fffcc 	andi	r8,r17,65535
 4031fe4:	4710b03a 	or	r8,r8,fp
 4031fe8:	d9800117 	ldw	r6,4(sp)
 4031fec:	4100042e 	bgeu	r8,r4,4032000 <__umoddi3+0x394>
 4031ff0:	4551883a 	add	r8,r8,r21
 4031ff4:	10bfffc4 	addi	r2,r2,-1
 4031ff8:	45405a2e 	bgeu	r8,r21,4032164 <__umoddi3+0x4f8>
 4031ffc:	100b883a 	mov	r5,r2
 4032000:	300c943a 	slli	r6,r6,16
 4032004:	91ffffcc 	andi	r7,r18,65535
 4032008:	9004d43a 	srli	r2,r18,16
 403200c:	314cb03a 	or	r6,r6,r5
 4032010:	317fffcc 	andi	r5,r6,65535
 4032014:	300cd43a 	srli	r6,r6,16
 4032018:	29d3383a 	mul	r9,r5,r7
 403201c:	288b383a 	mul	r5,r5,r2
 4032020:	31cf383a 	mul	r7,r6,r7
 4032024:	4806d43a 	srli	r3,r9,16
 4032028:	4111c83a 	sub	r8,r8,r4
 403202c:	29cb883a 	add	r5,r5,r7
 4032030:	194b883a 	add	r5,r3,r5
 4032034:	3085383a 	mul	r2,r6,r2
 4032038:	29c0022e 	bgeu	r5,r7,4032044 <__umoddi3+0x3d8>
 403203c:	00c00074 	movhi	r3,1
 4032040:	10c5883a 	add	r2,r2,r3
 4032044:	2808d43a 	srli	r4,r5,16
 4032048:	280a943a 	slli	r5,r5,16
 403204c:	4a7fffcc 	andi	r9,r9,65535
 4032050:	2085883a 	add	r2,r4,r2
 4032054:	2a4b883a 	add	r5,r5,r9
 4032058:	40803636 	bltu	r8,r2,4032134 <__umoddi3+0x4c8>
 403205c:	40804d26 	beq	r8,r2,4032194 <__umoddi3+0x528>
 4032060:	4089c83a 	sub	r4,r8,r2
 4032064:	280f883a 	mov	r7,r5
 4032068:	81cfc83a 	sub	r7,r16,r7
 403206c:	81c7803a 	cmpltu	r3,r16,r7
 4032070:	20c7c83a 	sub	r3,r4,r3
 4032074:	1cc4983a 	sll	r2,r3,r19
 4032078:	3d0ed83a 	srl	r7,r7,r20
 403207c:	1d06d83a 	srl	r3,r3,r20
 4032080:	11c4b03a 	or	r2,r2,r7
 4032084:	003f9306 	br	4031ed4 <_gp+0xffff0cd4>
 4032088:	9ca6983a 	sll	r19,r19,r18
 403208c:	88e8d83a 	srl	r20,r17,r3
 4032090:	80c4d83a 	srl	r2,r16,r3
 4032094:	982cd43a 	srli	r22,r19,16
 4032098:	8ca2983a 	sll	r17,r17,r18
 403209c:	a009883a 	mov	r4,r20
 40320a0:	b00b883a 	mov	r5,r22
 40320a4:	1478b03a 	or	fp,r2,r17
 40320a8:	40229d00 	call	40229d0 <__umodsi3>
 40320ac:	a009883a 	mov	r4,r20
 40320b0:	b00b883a 	mov	r5,r22
 40320b4:	1023883a 	mov	r17,r2
 40320b8:	402296c0 	call	402296c <__udivsi3>
 40320bc:	9d7fffcc 	andi	r21,r19,65535
 40320c0:	880a943a 	slli	r5,r17,16
 40320c4:	e008d43a 	srli	r4,fp,16
 40320c8:	a885383a 	mul	r2,r21,r2
 40320cc:	84a8983a 	sll	r20,r16,r18
 40320d0:	2148b03a 	or	r4,r4,r5
 40320d4:	2080042e 	bgeu	r4,r2,40320e8 <__umoddi3+0x47c>
 40320d8:	24c9883a 	add	r4,r4,r19
 40320dc:	24c00236 	bltu	r4,r19,40320e8 <__umoddi3+0x47c>
 40320e0:	2080012e 	bgeu	r4,r2,40320e8 <__umoddi3+0x47c>
 40320e4:	24c9883a 	add	r4,r4,r19
 40320e8:	20a3c83a 	sub	r17,r4,r2
 40320ec:	b00b883a 	mov	r5,r22
 40320f0:	8809883a 	mov	r4,r17
 40320f4:	40229d00 	call	40229d0 <__umodsi3>
 40320f8:	102f883a 	mov	r23,r2
 40320fc:	8809883a 	mov	r4,r17
 4032100:	b00b883a 	mov	r5,r22
 4032104:	402296c0 	call	402296c <__udivsi3>
 4032108:	b82e943a 	slli	r23,r23,16
 403210c:	a885383a 	mul	r2,r21,r2
 4032110:	e13fffcc 	andi	r4,fp,65535
 4032114:	25c8b03a 	or	r4,r4,r23
 4032118:	2080042e 	bgeu	r4,r2,403212c <__umoddi3+0x4c0>
 403211c:	24c9883a 	add	r4,r4,r19
 4032120:	24c00236 	bltu	r4,r19,403212c <__umoddi3+0x4c0>
 4032124:	2080012e 	bgeu	r4,r2,403212c <__umoddi3+0x4c0>
 4032128:	24c9883a 	add	r4,r4,r19
 403212c:	20a3c83a 	sub	r17,r4,r2
 4032130:	003f4806 	br	4031e54 <_gp+0xffff0c54>
 4032134:	2c8fc83a 	sub	r7,r5,r18
 4032138:	1545c83a 	sub	r2,r2,r21
 403213c:	29cb803a 	cmpltu	r5,r5,r7
 4032140:	1145c83a 	sub	r2,r2,r5
 4032144:	4089c83a 	sub	r4,r8,r2
 4032148:	003fc706 	br	4032068 <_gp+0xffff0e68>
 403214c:	01000604 	movi	r4,24
 4032150:	003f1806 	br	4031db4 <_gp+0xffff0bb4>
 4032154:	00800604 	movi	r2,24
 4032158:	003f3206 	br	4031e24 <_gp+0xffff0c24>
 403215c:	01000604 	movi	r4,24
 4032160:	003ed906 	br	4031cc8 <_gp+0xffff0ac8>
 4032164:	413fa52e 	bgeu	r8,r4,4031ffc <_gp+0xffff0dfc>
 4032168:	297fff84 	addi	r5,r5,-2
 403216c:	4551883a 	add	r8,r8,r21
 4032170:	003fa306 	br	4032000 <_gp+0xffff0e00>
 4032174:	15ff8b2e 	bgeu	r2,r23,4031fa4 <_gp+0xffff0da4>
 4032178:	31bfff84 	addi	r6,r6,-2
 403217c:	1545883a 	add	r2,r2,r21
 4032180:	003f8906 	br	4031fa8 <_gp+0xffff0da8>
 4032184:	24c9883a 	add	r4,r4,r19
 4032188:	003eee06 	br	4031d44 <_gp+0xffff0b44>
 403218c:	8005883a 	mov	r2,r16
 4032190:	003f1706 	br	4031df0 <_gp+0xffff0bf0>
 4032194:	817fe736 	bltu	r16,r5,4032134 <_gp+0xffff0f34>
 4032198:	280f883a 	mov	r7,r5
 403219c:	0009883a 	mov	r4,zero
 40321a0:	003fb106 	br	4032068 <_gp+0xffff0e68>

040321a4 <__adddf3>:
 40321a4:	02c00434 	movhi	r11,16
 40321a8:	5affffc4 	addi	r11,r11,-1
 40321ac:	2806d7fa 	srli	r3,r5,31
 40321b0:	2ad4703a 	and	r10,r5,r11
 40321b4:	3ad2703a 	and	r9,r7,r11
 40321b8:	3804d53a 	srli	r2,r7,20
 40321bc:	3018d77a 	srli	r12,r6,29
 40321c0:	280ad53a 	srli	r5,r5,20
 40321c4:	501490fa 	slli	r10,r10,3
 40321c8:	2010d77a 	srli	r8,r4,29
 40321cc:	481290fa 	slli	r9,r9,3
 40321d0:	380ed7fa 	srli	r7,r7,31
 40321d4:	defffb04 	addi	sp,sp,-20
 40321d8:	dc800215 	stw	r18,8(sp)
 40321dc:	dc400115 	stw	r17,4(sp)
 40321e0:	dc000015 	stw	r16,0(sp)
 40321e4:	dfc00415 	stw	ra,16(sp)
 40321e8:	dcc00315 	stw	r19,12(sp)
 40321ec:	1c803fcc 	andi	r18,r3,255
 40321f0:	2c01ffcc 	andi	r16,r5,2047
 40321f4:	5210b03a 	or	r8,r10,r8
 40321f8:	202290fa 	slli	r17,r4,3
 40321fc:	1081ffcc 	andi	r2,r2,2047
 4032200:	4b12b03a 	or	r9,r9,r12
 4032204:	300c90fa 	slli	r6,r6,3
 4032208:	91c07526 	beq	r18,r7,40323e0 <__adddf3+0x23c>
 403220c:	8087c83a 	sub	r3,r16,r2
 4032210:	00c0ab0e 	bge	zero,r3,40324c0 <__adddf3+0x31c>
 4032214:	10002a1e 	bne	r2,zero,40322c0 <__adddf3+0x11c>
 4032218:	4984b03a 	or	r2,r9,r6
 403221c:	1000961e 	bne	r2,zero,4032478 <__adddf3+0x2d4>
 4032220:	888001cc 	andi	r2,r17,7
 4032224:	10000726 	beq	r2,zero,4032244 <__adddf3+0xa0>
 4032228:	888003cc 	andi	r2,r17,15
 403222c:	00c00104 	movi	r3,4
 4032230:	10c00426 	beq	r2,r3,4032244 <__adddf3+0xa0>
 4032234:	88c7883a 	add	r3,r17,r3
 4032238:	1c63803a 	cmpltu	r17,r3,r17
 403223c:	4451883a 	add	r8,r8,r17
 4032240:	1823883a 	mov	r17,r3
 4032244:	4080202c 	andhi	r2,r8,128
 4032248:	10005926 	beq	r2,zero,40323b0 <__adddf3+0x20c>
 403224c:	84000044 	addi	r16,r16,1
 4032250:	0081ffc4 	movi	r2,2047
 4032254:	8080ba26 	beq	r16,r2,4032540 <__adddf3+0x39c>
 4032258:	00bfe034 	movhi	r2,65408
 403225c:	10bfffc4 	addi	r2,r2,-1
 4032260:	4090703a 	and	r8,r8,r2
 4032264:	4004977a 	slli	r2,r8,29
 4032268:	4010927a 	slli	r8,r8,9
 403226c:	8822d0fa 	srli	r17,r17,3
 4032270:	8401ffcc 	andi	r16,r16,2047
 4032274:	4010d33a 	srli	r8,r8,12
 4032278:	9007883a 	mov	r3,r18
 403227c:	1444b03a 	or	r2,r2,r17
 4032280:	8401ffcc 	andi	r16,r16,2047
 4032284:	8020953a 	slli	r16,r16,20
 4032288:	18c03fcc 	andi	r3,r3,255
 403228c:	01000434 	movhi	r4,16
 4032290:	213fffc4 	addi	r4,r4,-1
 4032294:	180697fa 	slli	r3,r3,31
 4032298:	4110703a 	and	r8,r8,r4
 403229c:	4410b03a 	or	r8,r8,r16
 40322a0:	40c6b03a 	or	r3,r8,r3
 40322a4:	dfc00417 	ldw	ra,16(sp)
 40322a8:	dcc00317 	ldw	r19,12(sp)
 40322ac:	dc800217 	ldw	r18,8(sp)
 40322b0:	dc400117 	ldw	r17,4(sp)
 40322b4:	dc000017 	ldw	r16,0(sp)
 40322b8:	dec00504 	addi	sp,sp,20
 40322bc:	f800283a 	ret
 40322c0:	0081ffc4 	movi	r2,2047
 40322c4:	80bfd626 	beq	r16,r2,4032220 <_gp+0xffff1020>
 40322c8:	4a402034 	orhi	r9,r9,128
 40322cc:	00800e04 	movi	r2,56
 40322d0:	10c09f16 	blt	r2,r3,4032550 <__adddf3+0x3ac>
 40322d4:	008007c4 	movi	r2,31
 40322d8:	10c0c216 	blt	r2,r3,40325e4 <__adddf3+0x440>
 40322dc:	00800804 	movi	r2,32
 40322e0:	10c5c83a 	sub	r2,r2,r3
 40322e4:	488a983a 	sll	r5,r9,r2
 40322e8:	30c8d83a 	srl	r4,r6,r3
 40322ec:	3084983a 	sll	r2,r6,r2
 40322f0:	48c6d83a 	srl	r3,r9,r3
 40322f4:	290cb03a 	or	r6,r5,r4
 40322f8:	1004c03a 	cmpne	r2,r2,zero
 40322fc:	308cb03a 	or	r6,r6,r2
 4032300:	898dc83a 	sub	r6,r17,r6
 4032304:	89a3803a 	cmpltu	r17,r17,r6
 4032308:	40d1c83a 	sub	r8,r8,r3
 403230c:	4451c83a 	sub	r8,r8,r17
 4032310:	3023883a 	mov	r17,r6
 4032314:	4080202c 	andhi	r2,r8,128
 4032318:	10002326 	beq	r2,zero,40323a8 <__adddf3+0x204>
 403231c:	04c02034 	movhi	r19,128
 4032320:	9cffffc4 	addi	r19,r19,-1
 4032324:	44e6703a 	and	r19,r8,r19
 4032328:	98007626 	beq	r19,zero,4032504 <__adddf3+0x360>
 403232c:	9809883a 	mov	r4,r19
 4032330:	4023fc00 	call	4023fc0 <__clzsi2>
 4032334:	10fffe04 	addi	r3,r2,-8
 4032338:	010007c4 	movi	r4,31
 403233c:	20c07716 	blt	r4,r3,403251c <__adddf3+0x378>
 4032340:	00800804 	movi	r2,32
 4032344:	10c5c83a 	sub	r2,r2,r3
 4032348:	8884d83a 	srl	r2,r17,r2
 403234c:	98d0983a 	sll	r8,r19,r3
 4032350:	88e2983a 	sll	r17,r17,r3
 4032354:	1204b03a 	or	r2,r2,r8
 4032358:	1c007416 	blt	r3,r16,403252c <__adddf3+0x388>
 403235c:	1c21c83a 	sub	r16,r3,r16
 4032360:	82000044 	addi	r8,r16,1
 4032364:	00c007c4 	movi	r3,31
 4032368:	1a009116 	blt	r3,r8,40325b0 <__adddf3+0x40c>
 403236c:	00c00804 	movi	r3,32
 4032370:	1a07c83a 	sub	r3,r3,r8
 4032374:	8a08d83a 	srl	r4,r17,r8
 4032378:	88e2983a 	sll	r17,r17,r3
 403237c:	10c6983a 	sll	r3,r2,r3
 4032380:	1210d83a 	srl	r8,r2,r8
 4032384:	8804c03a 	cmpne	r2,r17,zero
 4032388:	1906b03a 	or	r3,r3,r4
 403238c:	18a2b03a 	or	r17,r3,r2
 4032390:	0021883a 	mov	r16,zero
 4032394:	003fa206 	br	4032220 <_gp+0xffff1020>
 4032398:	1890b03a 	or	r8,r3,r2
 403239c:	40017d26 	beq	r8,zero,4032994 <__adddf3+0x7f0>
 40323a0:	1011883a 	mov	r8,r2
 40323a4:	1823883a 	mov	r17,r3
 40323a8:	888001cc 	andi	r2,r17,7
 40323ac:	103f9e1e 	bne	r2,zero,4032228 <_gp+0xffff1028>
 40323b0:	4004977a 	slli	r2,r8,29
 40323b4:	8822d0fa 	srli	r17,r17,3
 40323b8:	4010d0fa 	srli	r8,r8,3
 40323bc:	9007883a 	mov	r3,r18
 40323c0:	1444b03a 	or	r2,r2,r17
 40323c4:	0101ffc4 	movi	r4,2047
 40323c8:	81002426 	beq	r16,r4,403245c <__adddf3+0x2b8>
 40323cc:	8120703a 	and	r16,r16,r4
 40323d0:	01000434 	movhi	r4,16
 40323d4:	213fffc4 	addi	r4,r4,-1
 40323d8:	4110703a 	and	r8,r8,r4
 40323dc:	003fa806 	br	4032280 <_gp+0xffff1080>
 40323e0:	8089c83a 	sub	r4,r16,r2
 40323e4:	01005e0e 	bge	zero,r4,4032560 <__adddf3+0x3bc>
 40323e8:	10002b26 	beq	r2,zero,4032498 <__adddf3+0x2f4>
 40323ec:	0081ffc4 	movi	r2,2047
 40323f0:	80bf8b26 	beq	r16,r2,4032220 <_gp+0xffff1020>
 40323f4:	4a402034 	orhi	r9,r9,128
 40323f8:	00800e04 	movi	r2,56
 40323fc:	1100a40e 	bge	r2,r4,4032690 <__adddf3+0x4ec>
 4032400:	498cb03a 	or	r6,r9,r6
 4032404:	300ac03a 	cmpne	r5,r6,zero
 4032408:	0013883a 	mov	r9,zero
 403240c:	2c4b883a 	add	r5,r5,r17
 4032410:	2c63803a 	cmpltu	r17,r5,r17
 4032414:	4a11883a 	add	r8,r9,r8
 4032418:	8a11883a 	add	r8,r17,r8
 403241c:	2823883a 	mov	r17,r5
 4032420:	4080202c 	andhi	r2,r8,128
 4032424:	103fe026 	beq	r2,zero,40323a8 <_gp+0xffff11a8>
 4032428:	84000044 	addi	r16,r16,1
 403242c:	0081ffc4 	movi	r2,2047
 4032430:	8080d226 	beq	r16,r2,403277c <__adddf3+0x5d8>
 4032434:	00bfe034 	movhi	r2,65408
 4032438:	10bfffc4 	addi	r2,r2,-1
 403243c:	4090703a 	and	r8,r8,r2
 4032440:	880ad07a 	srli	r5,r17,1
 4032444:	400897fa 	slli	r4,r8,31
 4032448:	88c0004c 	andi	r3,r17,1
 403244c:	28e2b03a 	or	r17,r5,r3
 4032450:	4010d07a 	srli	r8,r8,1
 4032454:	2462b03a 	or	r17,r4,r17
 4032458:	003f7106 	br	4032220 <_gp+0xffff1020>
 403245c:	4088b03a 	or	r4,r8,r2
 4032460:	20014526 	beq	r4,zero,4032978 <__adddf3+0x7d4>
 4032464:	01000434 	movhi	r4,16
 4032468:	42000234 	orhi	r8,r8,8
 403246c:	213fffc4 	addi	r4,r4,-1
 4032470:	4110703a 	and	r8,r8,r4
 4032474:	003f8206 	br	4032280 <_gp+0xffff1080>
 4032478:	18ffffc4 	addi	r3,r3,-1
 403247c:	1800491e 	bne	r3,zero,40325a4 <__adddf3+0x400>
 4032480:	898bc83a 	sub	r5,r17,r6
 4032484:	8963803a 	cmpltu	r17,r17,r5
 4032488:	4251c83a 	sub	r8,r8,r9
 403248c:	4451c83a 	sub	r8,r8,r17
 4032490:	2823883a 	mov	r17,r5
 4032494:	003f9f06 	br	4032314 <_gp+0xffff1114>
 4032498:	4984b03a 	or	r2,r9,r6
 403249c:	103f6026 	beq	r2,zero,4032220 <_gp+0xffff1020>
 40324a0:	213fffc4 	addi	r4,r4,-1
 40324a4:	2000931e 	bne	r4,zero,40326f4 <__adddf3+0x550>
 40324a8:	898d883a 	add	r6,r17,r6
 40324ac:	3463803a 	cmpltu	r17,r6,r17
 40324b0:	4251883a 	add	r8,r8,r9
 40324b4:	8a11883a 	add	r8,r17,r8
 40324b8:	3023883a 	mov	r17,r6
 40324bc:	003fd806 	br	4032420 <_gp+0xffff1220>
 40324c0:	1800541e 	bne	r3,zero,4032614 <__adddf3+0x470>
 40324c4:	80800044 	addi	r2,r16,1
 40324c8:	1081ffcc 	andi	r2,r2,2047
 40324cc:	00c00044 	movi	r3,1
 40324d0:	1880a00e 	bge	r3,r2,4032754 <__adddf3+0x5b0>
 40324d4:	8989c83a 	sub	r4,r17,r6
 40324d8:	8905803a 	cmpltu	r2,r17,r4
 40324dc:	4267c83a 	sub	r19,r8,r9
 40324e0:	98a7c83a 	sub	r19,r19,r2
 40324e4:	9880202c 	andhi	r2,r19,128
 40324e8:	10006326 	beq	r2,zero,4032678 <__adddf3+0x4d4>
 40324ec:	3463c83a 	sub	r17,r6,r17
 40324f0:	4a07c83a 	sub	r3,r9,r8
 40324f4:	344d803a 	cmpltu	r6,r6,r17
 40324f8:	19a7c83a 	sub	r19,r3,r6
 40324fc:	3825883a 	mov	r18,r7
 4032500:	983f8a1e 	bne	r19,zero,403232c <_gp+0xffff112c>
 4032504:	8809883a 	mov	r4,r17
 4032508:	4023fc00 	call	4023fc0 <__clzsi2>
 403250c:	10800804 	addi	r2,r2,32
 4032510:	10fffe04 	addi	r3,r2,-8
 4032514:	010007c4 	movi	r4,31
 4032518:	20ff890e 	bge	r4,r3,4032340 <_gp+0xffff1140>
 403251c:	10bff604 	addi	r2,r2,-40
 4032520:	8884983a 	sll	r2,r17,r2
 4032524:	0023883a 	mov	r17,zero
 4032528:	1c3f8c0e 	bge	r3,r16,403235c <_gp+0xffff115c>
 403252c:	023fe034 	movhi	r8,65408
 4032530:	423fffc4 	addi	r8,r8,-1
 4032534:	80e1c83a 	sub	r16,r16,r3
 4032538:	1210703a 	and	r8,r2,r8
 403253c:	003f3806 	br	4032220 <_gp+0xffff1020>
 4032540:	9007883a 	mov	r3,r18
 4032544:	0011883a 	mov	r8,zero
 4032548:	0005883a 	mov	r2,zero
 403254c:	003f4c06 	br	4032280 <_gp+0xffff1080>
 4032550:	498cb03a 	or	r6,r9,r6
 4032554:	300cc03a 	cmpne	r6,r6,zero
 4032558:	0007883a 	mov	r3,zero
 403255c:	003f6806 	br	4032300 <_gp+0xffff1100>
 4032560:	20009c1e 	bne	r4,zero,40327d4 <__adddf3+0x630>
 4032564:	80800044 	addi	r2,r16,1
 4032568:	1141ffcc 	andi	r5,r2,2047
 403256c:	01000044 	movi	r4,1
 4032570:	2140670e 	bge	r4,r5,4032710 <__adddf3+0x56c>
 4032574:	0101ffc4 	movi	r4,2047
 4032578:	11007f26 	beq	r2,r4,4032778 <__adddf3+0x5d4>
 403257c:	898d883a 	add	r6,r17,r6
 4032580:	4247883a 	add	r3,r8,r9
 4032584:	3451803a 	cmpltu	r8,r6,r17
 4032588:	40d1883a 	add	r8,r8,r3
 403258c:	402297fa 	slli	r17,r8,31
 4032590:	300cd07a 	srli	r6,r6,1
 4032594:	4010d07a 	srli	r8,r8,1
 4032598:	1021883a 	mov	r16,r2
 403259c:	89a2b03a 	or	r17,r17,r6
 40325a0:	003f1f06 	br	4032220 <_gp+0xffff1020>
 40325a4:	0081ffc4 	movi	r2,2047
 40325a8:	80bf481e 	bne	r16,r2,40322cc <_gp+0xffff10cc>
 40325ac:	003f1c06 	br	4032220 <_gp+0xffff1020>
 40325b0:	843ff844 	addi	r16,r16,-31
 40325b4:	01000804 	movi	r4,32
 40325b8:	1406d83a 	srl	r3,r2,r16
 40325bc:	41005026 	beq	r8,r4,4032700 <__adddf3+0x55c>
 40325c0:	01001004 	movi	r4,64
 40325c4:	2211c83a 	sub	r8,r4,r8
 40325c8:	1204983a 	sll	r2,r2,r8
 40325cc:	88a2b03a 	or	r17,r17,r2
 40325d0:	8822c03a 	cmpne	r17,r17,zero
 40325d4:	1c62b03a 	or	r17,r3,r17
 40325d8:	0011883a 	mov	r8,zero
 40325dc:	0021883a 	mov	r16,zero
 40325e0:	003f7106 	br	40323a8 <_gp+0xffff11a8>
 40325e4:	193ff804 	addi	r4,r3,-32
 40325e8:	00800804 	movi	r2,32
 40325ec:	4908d83a 	srl	r4,r9,r4
 40325f0:	18804526 	beq	r3,r2,4032708 <__adddf3+0x564>
 40325f4:	00801004 	movi	r2,64
 40325f8:	10c5c83a 	sub	r2,r2,r3
 40325fc:	4886983a 	sll	r3,r9,r2
 4032600:	198cb03a 	or	r6,r3,r6
 4032604:	300cc03a 	cmpne	r6,r6,zero
 4032608:	218cb03a 	or	r6,r4,r6
 403260c:	0007883a 	mov	r3,zero
 4032610:	003f3b06 	br	4032300 <_gp+0xffff1100>
 4032614:	80002a26 	beq	r16,zero,40326c0 <__adddf3+0x51c>
 4032618:	0101ffc4 	movi	r4,2047
 403261c:	11006826 	beq	r2,r4,40327c0 <__adddf3+0x61c>
 4032620:	00c7c83a 	sub	r3,zero,r3
 4032624:	42002034 	orhi	r8,r8,128
 4032628:	01000e04 	movi	r4,56
 403262c:	20c07c16 	blt	r4,r3,4032820 <__adddf3+0x67c>
 4032630:	010007c4 	movi	r4,31
 4032634:	20c0da16 	blt	r4,r3,40329a0 <__adddf3+0x7fc>
 4032638:	01000804 	movi	r4,32
 403263c:	20c9c83a 	sub	r4,r4,r3
 4032640:	4114983a 	sll	r10,r8,r4
 4032644:	88cad83a 	srl	r5,r17,r3
 4032648:	8908983a 	sll	r4,r17,r4
 403264c:	40c6d83a 	srl	r3,r8,r3
 4032650:	5162b03a 	or	r17,r10,r5
 4032654:	2008c03a 	cmpne	r4,r4,zero
 4032658:	8922b03a 	or	r17,r17,r4
 403265c:	3463c83a 	sub	r17,r6,r17
 4032660:	48c7c83a 	sub	r3,r9,r3
 4032664:	344d803a 	cmpltu	r6,r6,r17
 4032668:	1991c83a 	sub	r8,r3,r6
 403266c:	1021883a 	mov	r16,r2
 4032670:	3825883a 	mov	r18,r7
 4032674:	003f2706 	br	4032314 <_gp+0xffff1114>
 4032678:	24d0b03a 	or	r8,r4,r19
 403267c:	40001b1e 	bne	r8,zero,40326ec <__adddf3+0x548>
 4032680:	0005883a 	mov	r2,zero
 4032684:	0007883a 	mov	r3,zero
 4032688:	0021883a 	mov	r16,zero
 403268c:	003f4d06 	br	40323c4 <_gp+0xffff11c4>
 4032690:	008007c4 	movi	r2,31
 4032694:	11003c16 	blt	r2,r4,4032788 <__adddf3+0x5e4>
 4032698:	00800804 	movi	r2,32
 403269c:	1105c83a 	sub	r2,r2,r4
 40326a0:	488e983a 	sll	r7,r9,r2
 40326a4:	310ad83a 	srl	r5,r6,r4
 40326a8:	3084983a 	sll	r2,r6,r2
 40326ac:	4912d83a 	srl	r9,r9,r4
 40326b0:	394ab03a 	or	r5,r7,r5
 40326b4:	1004c03a 	cmpne	r2,r2,zero
 40326b8:	288ab03a 	or	r5,r5,r2
 40326bc:	003f5306 	br	403240c <_gp+0xffff120c>
 40326c0:	4448b03a 	or	r4,r8,r17
 40326c4:	20003e26 	beq	r4,zero,40327c0 <__adddf3+0x61c>
 40326c8:	00c6303a 	nor	r3,zero,r3
 40326cc:	18003a1e 	bne	r3,zero,40327b8 <__adddf3+0x614>
 40326d0:	3463c83a 	sub	r17,r6,r17
 40326d4:	4a07c83a 	sub	r3,r9,r8
 40326d8:	344d803a 	cmpltu	r6,r6,r17
 40326dc:	1991c83a 	sub	r8,r3,r6
 40326e0:	1021883a 	mov	r16,r2
 40326e4:	3825883a 	mov	r18,r7
 40326e8:	003f0a06 	br	4032314 <_gp+0xffff1114>
 40326ec:	2023883a 	mov	r17,r4
 40326f0:	003f0d06 	br	4032328 <_gp+0xffff1128>
 40326f4:	0081ffc4 	movi	r2,2047
 40326f8:	80bf3f1e 	bne	r16,r2,40323f8 <_gp+0xffff11f8>
 40326fc:	003ec806 	br	4032220 <_gp+0xffff1020>
 4032700:	0005883a 	mov	r2,zero
 4032704:	003fb106 	br	40325cc <_gp+0xffff13cc>
 4032708:	0007883a 	mov	r3,zero
 403270c:	003fbc06 	br	4032600 <_gp+0xffff1400>
 4032710:	4444b03a 	or	r2,r8,r17
 4032714:	8000871e 	bne	r16,zero,4032934 <__adddf3+0x790>
 4032718:	1000ba26 	beq	r2,zero,4032a04 <__adddf3+0x860>
 403271c:	4984b03a 	or	r2,r9,r6
 4032720:	103ebf26 	beq	r2,zero,4032220 <_gp+0xffff1020>
 4032724:	8985883a 	add	r2,r17,r6
 4032728:	4247883a 	add	r3,r8,r9
 403272c:	1451803a 	cmpltu	r8,r2,r17
 4032730:	40d1883a 	add	r8,r8,r3
 4032734:	40c0202c 	andhi	r3,r8,128
 4032738:	1023883a 	mov	r17,r2
 403273c:	183f1a26 	beq	r3,zero,40323a8 <_gp+0xffff11a8>
 4032740:	00bfe034 	movhi	r2,65408
 4032744:	10bfffc4 	addi	r2,r2,-1
 4032748:	2021883a 	mov	r16,r4
 403274c:	4090703a 	and	r8,r8,r2
 4032750:	003eb306 	br	4032220 <_gp+0xffff1020>
 4032754:	4444b03a 	or	r2,r8,r17
 4032758:	8000291e 	bne	r16,zero,4032800 <__adddf3+0x65c>
 403275c:	10004b1e 	bne	r2,zero,403288c <__adddf3+0x6e8>
 4032760:	4990b03a 	or	r8,r9,r6
 4032764:	40008b26 	beq	r8,zero,4032994 <__adddf3+0x7f0>
 4032768:	4811883a 	mov	r8,r9
 403276c:	3023883a 	mov	r17,r6
 4032770:	3825883a 	mov	r18,r7
 4032774:	003eaa06 	br	4032220 <_gp+0xffff1020>
 4032778:	1021883a 	mov	r16,r2
 403277c:	0011883a 	mov	r8,zero
 4032780:	0005883a 	mov	r2,zero
 4032784:	003f0f06 	br	40323c4 <_gp+0xffff11c4>
 4032788:	217ff804 	addi	r5,r4,-32
 403278c:	00800804 	movi	r2,32
 4032790:	494ad83a 	srl	r5,r9,r5
 4032794:	20807d26 	beq	r4,r2,403298c <__adddf3+0x7e8>
 4032798:	00801004 	movi	r2,64
 403279c:	1109c83a 	sub	r4,r2,r4
 40327a0:	4912983a 	sll	r9,r9,r4
 40327a4:	498cb03a 	or	r6,r9,r6
 40327a8:	300cc03a 	cmpne	r6,r6,zero
 40327ac:	298ab03a 	or	r5,r5,r6
 40327b0:	0013883a 	mov	r9,zero
 40327b4:	003f1506 	br	403240c <_gp+0xffff120c>
 40327b8:	0101ffc4 	movi	r4,2047
 40327bc:	113f9a1e 	bne	r2,r4,4032628 <_gp+0xffff1428>
 40327c0:	4811883a 	mov	r8,r9
 40327c4:	3023883a 	mov	r17,r6
 40327c8:	1021883a 	mov	r16,r2
 40327cc:	3825883a 	mov	r18,r7
 40327d0:	003e9306 	br	4032220 <_gp+0xffff1020>
 40327d4:	8000161e 	bne	r16,zero,4032830 <__adddf3+0x68c>
 40327d8:	444ab03a 	or	r5,r8,r17
 40327dc:	28005126 	beq	r5,zero,4032924 <__adddf3+0x780>
 40327e0:	0108303a 	nor	r4,zero,r4
 40327e4:	20004d1e 	bne	r4,zero,403291c <__adddf3+0x778>
 40327e8:	89a3883a 	add	r17,r17,r6
 40327ec:	4253883a 	add	r9,r8,r9
 40327f0:	898d803a 	cmpltu	r6,r17,r6
 40327f4:	3251883a 	add	r8,r6,r9
 40327f8:	1021883a 	mov	r16,r2
 40327fc:	003f0806 	br	4032420 <_gp+0xffff1220>
 4032800:	1000301e 	bne	r2,zero,40328c4 <__adddf3+0x720>
 4032804:	4984b03a 	or	r2,r9,r6
 4032808:	10007126 	beq	r2,zero,40329d0 <__adddf3+0x82c>
 403280c:	4811883a 	mov	r8,r9
 4032810:	3023883a 	mov	r17,r6
 4032814:	3825883a 	mov	r18,r7
 4032818:	0401ffc4 	movi	r16,2047
 403281c:	003e8006 	br	4032220 <_gp+0xffff1020>
 4032820:	4462b03a 	or	r17,r8,r17
 4032824:	8822c03a 	cmpne	r17,r17,zero
 4032828:	0007883a 	mov	r3,zero
 403282c:	003f8b06 	br	403265c <_gp+0xffff145c>
 4032830:	0141ffc4 	movi	r5,2047
 4032834:	11403b26 	beq	r2,r5,4032924 <__adddf3+0x780>
 4032838:	0109c83a 	sub	r4,zero,r4
 403283c:	42002034 	orhi	r8,r8,128
 4032840:	01400e04 	movi	r5,56
 4032844:	29006716 	blt	r5,r4,40329e4 <__adddf3+0x840>
 4032848:	014007c4 	movi	r5,31
 403284c:	29007016 	blt	r5,r4,4032a10 <__adddf3+0x86c>
 4032850:	01400804 	movi	r5,32
 4032854:	290bc83a 	sub	r5,r5,r4
 4032858:	4154983a 	sll	r10,r8,r5
 403285c:	890ed83a 	srl	r7,r17,r4
 4032860:	894a983a 	sll	r5,r17,r5
 4032864:	4108d83a 	srl	r4,r8,r4
 4032868:	51e2b03a 	or	r17,r10,r7
 403286c:	280ac03a 	cmpne	r5,r5,zero
 4032870:	8962b03a 	or	r17,r17,r5
 4032874:	89a3883a 	add	r17,r17,r6
 4032878:	2253883a 	add	r9,r4,r9
 403287c:	898d803a 	cmpltu	r6,r17,r6
 4032880:	3251883a 	add	r8,r6,r9
 4032884:	1021883a 	mov	r16,r2
 4032888:	003ee506 	br	4032420 <_gp+0xffff1220>
 403288c:	4984b03a 	or	r2,r9,r6
 4032890:	103e6326 	beq	r2,zero,4032220 <_gp+0xffff1020>
 4032894:	8987c83a 	sub	r3,r17,r6
 4032898:	88c9803a 	cmpltu	r4,r17,r3
 403289c:	4245c83a 	sub	r2,r8,r9
 40328a0:	1105c83a 	sub	r2,r2,r4
 40328a4:	1100202c 	andhi	r4,r2,128
 40328a8:	203ebb26 	beq	r4,zero,4032398 <_gp+0xffff1198>
 40328ac:	3463c83a 	sub	r17,r6,r17
 40328b0:	4a07c83a 	sub	r3,r9,r8
 40328b4:	344d803a 	cmpltu	r6,r6,r17
 40328b8:	1991c83a 	sub	r8,r3,r6
 40328bc:	3825883a 	mov	r18,r7
 40328c0:	003e5706 	br	4032220 <_gp+0xffff1020>
 40328c4:	4984b03a 	or	r2,r9,r6
 40328c8:	10002e26 	beq	r2,zero,4032984 <__adddf3+0x7e0>
 40328cc:	4004d0fa 	srli	r2,r8,3
 40328d0:	8822d0fa 	srli	r17,r17,3
 40328d4:	4010977a 	slli	r8,r8,29
 40328d8:	10c0022c 	andhi	r3,r2,8
 40328dc:	4462b03a 	or	r17,r8,r17
 40328e0:	18000826 	beq	r3,zero,4032904 <__adddf3+0x760>
 40328e4:	4808d0fa 	srli	r4,r9,3
 40328e8:	20c0022c 	andhi	r3,r4,8
 40328ec:	1800051e 	bne	r3,zero,4032904 <__adddf3+0x760>
 40328f0:	300cd0fa 	srli	r6,r6,3
 40328f4:	4806977a 	slli	r3,r9,29
 40328f8:	2005883a 	mov	r2,r4
 40328fc:	3825883a 	mov	r18,r7
 4032900:	19a2b03a 	or	r17,r3,r6
 4032904:	8810d77a 	srli	r8,r17,29
 4032908:	100490fa 	slli	r2,r2,3
 403290c:	882290fa 	slli	r17,r17,3
 4032910:	0401ffc4 	movi	r16,2047
 4032914:	4090b03a 	or	r8,r8,r2
 4032918:	003e4106 	br	4032220 <_gp+0xffff1020>
 403291c:	0141ffc4 	movi	r5,2047
 4032920:	117fc71e 	bne	r2,r5,4032840 <_gp+0xffff1640>
 4032924:	4811883a 	mov	r8,r9
 4032928:	3023883a 	mov	r17,r6
 403292c:	1021883a 	mov	r16,r2
 4032930:	003e3b06 	br	4032220 <_gp+0xffff1020>
 4032934:	10002f26 	beq	r2,zero,40329f4 <__adddf3+0x850>
 4032938:	4984b03a 	or	r2,r9,r6
 403293c:	10001126 	beq	r2,zero,4032984 <__adddf3+0x7e0>
 4032940:	4004d0fa 	srli	r2,r8,3
 4032944:	8822d0fa 	srli	r17,r17,3
 4032948:	4010977a 	slli	r8,r8,29
 403294c:	10c0022c 	andhi	r3,r2,8
 4032950:	4462b03a 	or	r17,r8,r17
 4032954:	183feb26 	beq	r3,zero,4032904 <_gp+0xffff1704>
 4032958:	4808d0fa 	srli	r4,r9,3
 403295c:	20c0022c 	andhi	r3,r4,8
 4032960:	183fe81e 	bne	r3,zero,4032904 <_gp+0xffff1704>
 4032964:	300cd0fa 	srli	r6,r6,3
 4032968:	4806977a 	slli	r3,r9,29
 403296c:	2005883a 	mov	r2,r4
 4032970:	19a2b03a 	or	r17,r3,r6
 4032974:	003fe306 	br	4032904 <_gp+0xffff1704>
 4032978:	0011883a 	mov	r8,zero
 403297c:	0005883a 	mov	r2,zero
 4032980:	003e3f06 	br	4032280 <_gp+0xffff1080>
 4032984:	0401ffc4 	movi	r16,2047
 4032988:	003e2506 	br	4032220 <_gp+0xffff1020>
 403298c:	0013883a 	mov	r9,zero
 4032990:	003f8406 	br	40327a4 <_gp+0xffff15a4>
 4032994:	0005883a 	mov	r2,zero
 4032998:	0007883a 	mov	r3,zero
 403299c:	003e8906 	br	40323c4 <_gp+0xffff11c4>
 40329a0:	197ff804 	addi	r5,r3,-32
 40329a4:	01000804 	movi	r4,32
 40329a8:	414ad83a 	srl	r5,r8,r5
 40329ac:	19002426 	beq	r3,r4,4032a40 <__adddf3+0x89c>
 40329b0:	01001004 	movi	r4,64
 40329b4:	20c7c83a 	sub	r3,r4,r3
 40329b8:	40c6983a 	sll	r3,r8,r3
 40329bc:	1c46b03a 	or	r3,r3,r17
 40329c0:	1806c03a 	cmpne	r3,r3,zero
 40329c4:	28e2b03a 	or	r17,r5,r3
 40329c8:	0007883a 	mov	r3,zero
 40329cc:	003f2306 	br	403265c <_gp+0xffff145c>
 40329d0:	0007883a 	mov	r3,zero
 40329d4:	5811883a 	mov	r8,r11
 40329d8:	00bfffc4 	movi	r2,-1
 40329dc:	0401ffc4 	movi	r16,2047
 40329e0:	003e7806 	br	40323c4 <_gp+0xffff11c4>
 40329e4:	4462b03a 	or	r17,r8,r17
 40329e8:	8822c03a 	cmpne	r17,r17,zero
 40329ec:	0009883a 	mov	r4,zero
 40329f0:	003fa006 	br	4032874 <_gp+0xffff1674>
 40329f4:	4811883a 	mov	r8,r9
 40329f8:	3023883a 	mov	r17,r6
 40329fc:	0401ffc4 	movi	r16,2047
 4032a00:	003e0706 	br	4032220 <_gp+0xffff1020>
 4032a04:	4811883a 	mov	r8,r9
 4032a08:	3023883a 	mov	r17,r6
 4032a0c:	003e0406 	br	4032220 <_gp+0xffff1020>
 4032a10:	21fff804 	addi	r7,r4,-32
 4032a14:	01400804 	movi	r5,32
 4032a18:	41ced83a 	srl	r7,r8,r7
 4032a1c:	21400a26 	beq	r4,r5,4032a48 <__adddf3+0x8a4>
 4032a20:	01401004 	movi	r5,64
 4032a24:	2909c83a 	sub	r4,r5,r4
 4032a28:	4108983a 	sll	r4,r8,r4
 4032a2c:	2448b03a 	or	r4,r4,r17
 4032a30:	2008c03a 	cmpne	r4,r4,zero
 4032a34:	3922b03a 	or	r17,r7,r4
 4032a38:	0009883a 	mov	r4,zero
 4032a3c:	003f8d06 	br	4032874 <_gp+0xffff1674>
 4032a40:	0007883a 	mov	r3,zero
 4032a44:	003fdd06 	br	40329bc <_gp+0xffff17bc>
 4032a48:	0009883a 	mov	r4,zero
 4032a4c:	003ff706 	br	4032a2c <_gp+0xffff182c>

04032a50 <__divdf3>:
 4032a50:	defff204 	addi	sp,sp,-56
 4032a54:	dd400915 	stw	r21,36(sp)
 4032a58:	282ad53a 	srli	r21,r5,20
 4032a5c:	dd000815 	stw	r20,32(sp)
 4032a60:	2828d7fa 	srli	r20,r5,31
 4032a64:	dc000415 	stw	r16,16(sp)
 4032a68:	04000434 	movhi	r16,16
 4032a6c:	df000c15 	stw	fp,48(sp)
 4032a70:	843fffc4 	addi	r16,r16,-1
 4032a74:	dfc00d15 	stw	ra,52(sp)
 4032a78:	ddc00b15 	stw	r23,44(sp)
 4032a7c:	dd800a15 	stw	r22,40(sp)
 4032a80:	dcc00715 	stw	r19,28(sp)
 4032a84:	dc800615 	stw	r18,24(sp)
 4032a88:	dc400515 	stw	r17,20(sp)
 4032a8c:	ad41ffcc 	andi	r21,r21,2047
 4032a90:	2c20703a 	and	r16,r5,r16
 4032a94:	a7003fcc 	andi	fp,r20,255
 4032a98:	a8006126 	beq	r21,zero,4032c20 <__divdf3+0x1d0>
 4032a9c:	0081ffc4 	movi	r2,2047
 4032aa0:	2025883a 	mov	r18,r4
 4032aa4:	a8803726 	beq	r21,r2,4032b84 <__divdf3+0x134>
 4032aa8:	80800434 	orhi	r2,r16,16
 4032aac:	100490fa 	slli	r2,r2,3
 4032ab0:	2020d77a 	srli	r16,r4,29
 4032ab4:	202490fa 	slli	r18,r4,3
 4032ab8:	ad7f0044 	addi	r21,r21,-1023
 4032abc:	80a0b03a 	or	r16,r16,r2
 4032ac0:	0027883a 	mov	r19,zero
 4032ac4:	0013883a 	mov	r9,zero
 4032ac8:	3804d53a 	srli	r2,r7,20
 4032acc:	382cd7fa 	srli	r22,r7,31
 4032ad0:	04400434 	movhi	r17,16
 4032ad4:	8c7fffc4 	addi	r17,r17,-1
 4032ad8:	1081ffcc 	andi	r2,r2,2047
 4032adc:	3011883a 	mov	r8,r6
 4032ae0:	3c62703a 	and	r17,r7,r17
 4032ae4:	b5c03fcc 	andi	r23,r22,255
 4032ae8:	10006c26 	beq	r2,zero,4032c9c <__divdf3+0x24c>
 4032aec:	00c1ffc4 	movi	r3,2047
 4032af0:	10c06426 	beq	r2,r3,4032c84 <__divdf3+0x234>
 4032af4:	88c00434 	orhi	r3,r17,16
 4032af8:	180690fa 	slli	r3,r3,3
 4032afc:	3022d77a 	srli	r17,r6,29
 4032b00:	301090fa 	slli	r8,r6,3
 4032b04:	10bf0044 	addi	r2,r2,-1023
 4032b08:	88e2b03a 	or	r17,r17,r3
 4032b0c:	000f883a 	mov	r7,zero
 4032b10:	a58cf03a 	xor	r6,r20,r22
 4032b14:	3cc8b03a 	or	r4,r7,r19
 4032b18:	a8abc83a 	sub	r21,r21,r2
 4032b1c:	008003c4 	movi	r2,15
 4032b20:	3007883a 	mov	r3,r6
 4032b24:	34c03fcc 	andi	r19,r6,255
 4032b28:	11009036 	bltu	r2,r4,4032d6c <__divdf3+0x31c>
 4032b2c:	200890ba 	slli	r4,r4,2
 4032b30:	008100f4 	movhi	r2,1027
 4032b34:	108ad104 	addi	r2,r2,11076
 4032b38:	2089883a 	add	r4,r4,r2
 4032b3c:	20800017 	ldw	r2,0(r4)
 4032b40:	1000683a 	jmp	r2
 4032b44:	04032d6c 	andhi	r16,zero,3253
 4032b48:	04032bbc 	xorhi	r16,zero,3246
 4032b4c:	04032d5c 	xori	r16,zero,3253
 4032b50:	04032bb0 	cmpltui	r16,zero,3246
 4032b54:	04032d5c 	xori	r16,zero,3253
 4032b58:	04032d30 	cmpltui	r16,zero,3252
 4032b5c:	04032d5c 	xori	r16,zero,3253
 4032b60:	04032bb0 	cmpltui	r16,zero,3246
 4032b64:	04032bbc 	xorhi	r16,zero,3246
 4032b68:	04032bbc 	xorhi	r16,zero,3246
 4032b6c:	04032d30 	cmpltui	r16,zero,3252
 4032b70:	04032bb0 	cmpltui	r16,zero,3246
 4032b74:	04032ba0 	cmpeqi	r16,zero,3246
 4032b78:	04032ba0 	cmpeqi	r16,zero,3246
 4032b7c:	04032ba0 	cmpeqi	r16,zero,3246
 4032b80:	04033050 	cmplti	r16,zero,3265
 4032b84:	2404b03a 	or	r2,r4,r16
 4032b88:	1000661e 	bne	r2,zero,4032d24 <__divdf3+0x2d4>
 4032b8c:	04c00204 	movi	r19,8
 4032b90:	0021883a 	mov	r16,zero
 4032b94:	0025883a 	mov	r18,zero
 4032b98:	02400084 	movi	r9,2
 4032b9c:	003fca06 	br	4032ac8 <_gp+0xffff18c8>
 4032ba0:	8023883a 	mov	r17,r16
 4032ba4:	9011883a 	mov	r8,r18
 4032ba8:	e02f883a 	mov	r23,fp
 4032bac:	480f883a 	mov	r7,r9
 4032bb0:	00800084 	movi	r2,2
 4032bb4:	3881311e 	bne	r7,r2,403307c <__divdf3+0x62c>
 4032bb8:	b827883a 	mov	r19,r23
 4032bbc:	98c0004c 	andi	r3,r19,1
 4032bc0:	0081ffc4 	movi	r2,2047
 4032bc4:	000b883a 	mov	r5,zero
 4032bc8:	0025883a 	mov	r18,zero
 4032bcc:	1004953a 	slli	r2,r2,20
 4032bd0:	18c03fcc 	andi	r3,r3,255
 4032bd4:	04400434 	movhi	r17,16
 4032bd8:	8c7fffc4 	addi	r17,r17,-1
 4032bdc:	180697fa 	slli	r3,r3,31
 4032be0:	2c4a703a 	and	r5,r5,r17
 4032be4:	288ab03a 	or	r5,r5,r2
 4032be8:	28c6b03a 	or	r3,r5,r3
 4032bec:	9005883a 	mov	r2,r18
 4032bf0:	dfc00d17 	ldw	ra,52(sp)
 4032bf4:	df000c17 	ldw	fp,48(sp)
 4032bf8:	ddc00b17 	ldw	r23,44(sp)
 4032bfc:	dd800a17 	ldw	r22,40(sp)
 4032c00:	dd400917 	ldw	r21,36(sp)
 4032c04:	dd000817 	ldw	r20,32(sp)
 4032c08:	dcc00717 	ldw	r19,28(sp)
 4032c0c:	dc800617 	ldw	r18,24(sp)
 4032c10:	dc400517 	ldw	r17,20(sp)
 4032c14:	dc000417 	ldw	r16,16(sp)
 4032c18:	dec00e04 	addi	sp,sp,56
 4032c1c:	f800283a 	ret
 4032c20:	2404b03a 	or	r2,r4,r16
 4032c24:	2027883a 	mov	r19,r4
 4032c28:	10003926 	beq	r2,zero,4032d10 <__divdf3+0x2c0>
 4032c2c:	80012e26 	beq	r16,zero,40330e8 <__divdf3+0x698>
 4032c30:	8009883a 	mov	r4,r16
 4032c34:	d9800315 	stw	r6,12(sp)
 4032c38:	d9c00215 	stw	r7,8(sp)
 4032c3c:	4023fc00 	call	4023fc0 <__clzsi2>
 4032c40:	d9800317 	ldw	r6,12(sp)
 4032c44:	d9c00217 	ldw	r7,8(sp)
 4032c48:	113ffd44 	addi	r4,r2,-11
 4032c4c:	00c00704 	movi	r3,28
 4032c50:	19012116 	blt	r3,r4,40330d8 <__divdf3+0x688>
 4032c54:	00c00744 	movi	r3,29
 4032c58:	147ffe04 	addi	r17,r2,-8
 4032c5c:	1907c83a 	sub	r3,r3,r4
 4032c60:	8460983a 	sll	r16,r16,r17
 4032c64:	98c6d83a 	srl	r3,r19,r3
 4032c68:	9c64983a 	sll	r18,r19,r17
 4032c6c:	1c20b03a 	or	r16,r3,r16
 4032c70:	1080fcc4 	addi	r2,r2,1011
 4032c74:	00abc83a 	sub	r21,zero,r2
 4032c78:	0027883a 	mov	r19,zero
 4032c7c:	0013883a 	mov	r9,zero
 4032c80:	003f9106 	br	4032ac8 <_gp+0xffff18c8>
 4032c84:	3446b03a 	or	r3,r6,r17
 4032c88:	18001f1e 	bne	r3,zero,4032d08 <__divdf3+0x2b8>
 4032c8c:	0023883a 	mov	r17,zero
 4032c90:	0011883a 	mov	r8,zero
 4032c94:	01c00084 	movi	r7,2
 4032c98:	003f9d06 	br	4032b10 <_gp+0xffff1910>
 4032c9c:	3446b03a 	or	r3,r6,r17
 4032ca0:	18001526 	beq	r3,zero,4032cf8 <__divdf3+0x2a8>
 4032ca4:	88011b26 	beq	r17,zero,4033114 <__divdf3+0x6c4>
 4032ca8:	8809883a 	mov	r4,r17
 4032cac:	d9800315 	stw	r6,12(sp)
 4032cb0:	da400115 	stw	r9,4(sp)
 4032cb4:	4023fc00 	call	4023fc0 <__clzsi2>
 4032cb8:	d9800317 	ldw	r6,12(sp)
 4032cbc:	da400117 	ldw	r9,4(sp)
 4032cc0:	113ffd44 	addi	r4,r2,-11
 4032cc4:	00c00704 	movi	r3,28
 4032cc8:	19010e16 	blt	r3,r4,4033104 <__divdf3+0x6b4>
 4032ccc:	00c00744 	movi	r3,29
 4032cd0:	123ffe04 	addi	r8,r2,-8
 4032cd4:	1907c83a 	sub	r3,r3,r4
 4032cd8:	8a22983a 	sll	r17,r17,r8
 4032cdc:	30c6d83a 	srl	r3,r6,r3
 4032ce0:	3210983a 	sll	r8,r6,r8
 4032ce4:	1c62b03a 	or	r17,r3,r17
 4032ce8:	1080fcc4 	addi	r2,r2,1011
 4032cec:	0085c83a 	sub	r2,zero,r2
 4032cf0:	000f883a 	mov	r7,zero
 4032cf4:	003f8606 	br	4032b10 <_gp+0xffff1910>
 4032cf8:	0023883a 	mov	r17,zero
 4032cfc:	0011883a 	mov	r8,zero
 4032d00:	01c00044 	movi	r7,1
 4032d04:	003f8206 	br	4032b10 <_gp+0xffff1910>
 4032d08:	01c000c4 	movi	r7,3
 4032d0c:	003f8006 	br	4032b10 <_gp+0xffff1910>
 4032d10:	04c00104 	movi	r19,4
 4032d14:	0021883a 	mov	r16,zero
 4032d18:	0025883a 	mov	r18,zero
 4032d1c:	02400044 	movi	r9,1
 4032d20:	003f6906 	br	4032ac8 <_gp+0xffff18c8>
 4032d24:	04c00304 	movi	r19,12
 4032d28:	024000c4 	movi	r9,3
 4032d2c:	003f6606 	br	4032ac8 <_gp+0xffff18c8>
 4032d30:	01400434 	movhi	r5,16
 4032d34:	0007883a 	mov	r3,zero
 4032d38:	297fffc4 	addi	r5,r5,-1
 4032d3c:	04bfffc4 	movi	r18,-1
 4032d40:	0081ffc4 	movi	r2,2047
 4032d44:	003fa106 	br	4032bcc <_gp+0xffff19cc>
 4032d48:	00c00044 	movi	r3,1
 4032d4c:	1887c83a 	sub	r3,r3,r2
 4032d50:	01000e04 	movi	r4,56
 4032d54:	20c1210e 	bge	r4,r3,40331dc <__divdf3+0x78c>
 4032d58:	98c0004c 	andi	r3,r19,1
 4032d5c:	0005883a 	mov	r2,zero
 4032d60:	000b883a 	mov	r5,zero
 4032d64:	0025883a 	mov	r18,zero
 4032d68:	003f9806 	br	4032bcc <_gp+0xffff19cc>
 4032d6c:	8c00fd36 	bltu	r17,r16,4033164 <__divdf3+0x714>
 4032d70:	8440fb26 	beq	r16,r17,4033160 <__divdf3+0x710>
 4032d74:	8007883a 	mov	r3,r16
 4032d78:	ad7fffc4 	addi	r21,r21,-1
 4032d7c:	0021883a 	mov	r16,zero
 4032d80:	4004d63a 	srli	r2,r8,24
 4032d84:	8822923a 	slli	r17,r17,8
 4032d88:	1809883a 	mov	r4,r3
 4032d8c:	402c923a 	slli	r22,r8,8
 4032d90:	88b8b03a 	or	fp,r17,r2
 4032d94:	e028d43a 	srli	r20,fp,16
 4032d98:	d8c00015 	stw	r3,0(sp)
 4032d9c:	e5ffffcc 	andi	r23,fp,65535
 4032da0:	a00b883a 	mov	r5,r20
 4032da4:	402296c0 	call	402296c <__udivsi3>
 4032da8:	d8c00017 	ldw	r3,0(sp)
 4032dac:	a00b883a 	mov	r5,r20
 4032db0:	d8800315 	stw	r2,12(sp)
 4032db4:	1809883a 	mov	r4,r3
 4032db8:	40229d00 	call	40229d0 <__umodsi3>
 4032dbc:	d9800317 	ldw	r6,12(sp)
 4032dc0:	1006943a 	slli	r3,r2,16
 4032dc4:	9004d43a 	srli	r2,r18,16
 4032dc8:	b9a3383a 	mul	r17,r23,r6
 4032dcc:	10c4b03a 	or	r2,r2,r3
 4032dd0:	1440062e 	bgeu	r2,r17,4032dec <__divdf3+0x39c>
 4032dd4:	1705883a 	add	r2,r2,fp
 4032dd8:	30ffffc4 	addi	r3,r6,-1
 4032ddc:	1700ee36 	bltu	r2,fp,4033198 <__divdf3+0x748>
 4032de0:	1440ed2e 	bgeu	r2,r17,4033198 <__divdf3+0x748>
 4032de4:	31bfff84 	addi	r6,r6,-2
 4032de8:	1705883a 	add	r2,r2,fp
 4032dec:	1463c83a 	sub	r17,r2,r17
 4032df0:	a00b883a 	mov	r5,r20
 4032df4:	8809883a 	mov	r4,r17
 4032df8:	d9800315 	stw	r6,12(sp)
 4032dfc:	402296c0 	call	402296c <__udivsi3>
 4032e00:	a00b883a 	mov	r5,r20
 4032e04:	8809883a 	mov	r4,r17
 4032e08:	d8800215 	stw	r2,8(sp)
 4032e0c:	40229d00 	call	40229d0 <__umodsi3>
 4032e10:	d9c00217 	ldw	r7,8(sp)
 4032e14:	1004943a 	slli	r2,r2,16
 4032e18:	94bfffcc 	andi	r18,r18,65535
 4032e1c:	b9d1383a 	mul	r8,r23,r7
 4032e20:	90a4b03a 	or	r18,r18,r2
 4032e24:	d9800317 	ldw	r6,12(sp)
 4032e28:	9200062e 	bgeu	r18,r8,4032e44 <__divdf3+0x3f4>
 4032e2c:	9725883a 	add	r18,r18,fp
 4032e30:	38bfffc4 	addi	r2,r7,-1
 4032e34:	9700d636 	bltu	r18,fp,4033190 <__divdf3+0x740>
 4032e38:	9200d52e 	bgeu	r18,r8,4033190 <__divdf3+0x740>
 4032e3c:	39ffff84 	addi	r7,r7,-2
 4032e40:	9725883a 	add	r18,r18,fp
 4032e44:	3004943a 	slli	r2,r6,16
 4032e48:	b012d43a 	srli	r9,r22,16
 4032e4c:	b1bfffcc 	andi	r6,r22,65535
 4032e50:	11e2b03a 	or	r17,r2,r7
 4032e54:	8806d43a 	srli	r3,r17,16
 4032e58:	893fffcc 	andi	r4,r17,65535
 4032e5c:	218b383a 	mul	r5,r4,r6
 4032e60:	30c5383a 	mul	r2,r6,r3
 4032e64:	2249383a 	mul	r4,r4,r9
 4032e68:	280ed43a 	srli	r7,r5,16
 4032e6c:	9225c83a 	sub	r18,r18,r8
 4032e70:	2089883a 	add	r4,r4,r2
 4032e74:	3909883a 	add	r4,r7,r4
 4032e78:	1a47383a 	mul	r3,r3,r9
 4032e7c:	2080022e 	bgeu	r4,r2,4032e88 <__divdf3+0x438>
 4032e80:	00800074 	movhi	r2,1
 4032e84:	1887883a 	add	r3,r3,r2
 4032e88:	2004d43a 	srli	r2,r4,16
 4032e8c:	2008943a 	slli	r4,r4,16
 4032e90:	297fffcc 	andi	r5,r5,65535
 4032e94:	10c7883a 	add	r3,r2,r3
 4032e98:	2149883a 	add	r4,r4,r5
 4032e9c:	90c0a536 	bltu	r18,r3,4033134 <__divdf3+0x6e4>
 4032ea0:	90c0bf26 	beq	r18,r3,40331a0 <__divdf3+0x750>
 4032ea4:	90c7c83a 	sub	r3,r18,r3
 4032ea8:	810fc83a 	sub	r7,r16,r4
 4032eac:	81e5803a 	cmpltu	r18,r16,r7
 4032eb0:	1ca5c83a 	sub	r18,r3,r18
 4032eb4:	e480c126 	beq	fp,r18,40331bc <__divdf3+0x76c>
 4032eb8:	a00b883a 	mov	r5,r20
 4032ebc:	9009883a 	mov	r4,r18
 4032ec0:	d9800315 	stw	r6,12(sp)
 4032ec4:	d9c00215 	stw	r7,8(sp)
 4032ec8:	da400115 	stw	r9,4(sp)
 4032ecc:	402296c0 	call	402296c <__udivsi3>
 4032ed0:	a00b883a 	mov	r5,r20
 4032ed4:	9009883a 	mov	r4,r18
 4032ed8:	d8800015 	stw	r2,0(sp)
 4032edc:	40229d00 	call	40229d0 <__umodsi3>
 4032ee0:	d9c00217 	ldw	r7,8(sp)
 4032ee4:	da000017 	ldw	r8,0(sp)
 4032ee8:	1006943a 	slli	r3,r2,16
 4032eec:	3804d43a 	srli	r2,r7,16
 4032ef0:	ba21383a 	mul	r16,r23,r8
 4032ef4:	d9800317 	ldw	r6,12(sp)
 4032ef8:	10c4b03a 	or	r2,r2,r3
 4032efc:	da400117 	ldw	r9,4(sp)
 4032f00:	1400062e 	bgeu	r2,r16,4032f1c <__divdf3+0x4cc>
 4032f04:	1705883a 	add	r2,r2,fp
 4032f08:	40ffffc4 	addi	r3,r8,-1
 4032f0c:	1700ad36 	bltu	r2,fp,40331c4 <__divdf3+0x774>
 4032f10:	1400ac2e 	bgeu	r2,r16,40331c4 <__divdf3+0x774>
 4032f14:	423fff84 	addi	r8,r8,-2
 4032f18:	1705883a 	add	r2,r2,fp
 4032f1c:	1421c83a 	sub	r16,r2,r16
 4032f20:	a00b883a 	mov	r5,r20
 4032f24:	8009883a 	mov	r4,r16
 4032f28:	d9800315 	stw	r6,12(sp)
 4032f2c:	d9c00215 	stw	r7,8(sp)
 4032f30:	da000015 	stw	r8,0(sp)
 4032f34:	da400115 	stw	r9,4(sp)
 4032f38:	402296c0 	call	402296c <__udivsi3>
 4032f3c:	8009883a 	mov	r4,r16
 4032f40:	a00b883a 	mov	r5,r20
 4032f44:	1025883a 	mov	r18,r2
 4032f48:	40229d00 	call	40229d0 <__umodsi3>
 4032f4c:	d9c00217 	ldw	r7,8(sp)
 4032f50:	1004943a 	slli	r2,r2,16
 4032f54:	bcaf383a 	mul	r23,r23,r18
 4032f58:	393fffcc 	andi	r4,r7,65535
 4032f5c:	2088b03a 	or	r4,r4,r2
 4032f60:	d9800317 	ldw	r6,12(sp)
 4032f64:	da000017 	ldw	r8,0(sp)
 4032f68:	da400117 	ldw	r9,4(sp)
 4032f6c:	25c0062e 	bgeu	r4,r23,4032f88 <__divdf3+0x538>
 4032f70:	2709883a 	add	r4,r4,fp
 4032f74:	90bfffc4 	addi	r2,r18,-1
 4032f78:	27009436 	bltu	r4,fp,40331cc <__divdf3+0x77c>
 4032f7c:	25c0932e 	bgeu	r4,r23,40331cc <__divdf3+0x77c>
 4032f80:	94bfff84 	addi	r18,r18,-2
 4032f84:	2709883a 	add	r4,r4,fp
 4032f88:	4004943a 	slli	r2,r8,16
 4032f8c:	25efc83a 	sub	r23,r4,r23
 4032f90:	1490b03a 	or	r8,r2,r18
 4032f94:	4008d43a 	srli	r4,r8,16
 4032f98:	40ffffcc 	andi	r3,r8,65535
 4032f9c:	30c5383a 	mul	r2,r6,r3
 4032fa0:	1a47383a 	mul	r3,r3,r9
 4032fa4:	310d383a 	mul	r6,r6,r4
 4032fa8:	100ad43a 	srli	r5,r2,16
 4032fac:	4913383a 	mul	r9,r9,r4
 4032fb0:	1987883a 	add	r3,r3,r6
 4032fb4:	28c7883a 	add	r3,r5,r3
 4032fb8:	1980022e 	bgeu	r3,r6,4032fc4 <__divdf3+0x574>
 4032fbc:	01000074 	movhi	r4,1
 4032fc0:	4913883a 	add	r9,r9,r4
 4032fc4:	1808d43a 	srli	r4,r3,16
 4032fc8:	1806943a 	slli	r3,r3,16
 4032fcc:	10bfffcc 	andi	r2,r2,65535
 4032fd0:	2253883a 	add	r9,r4,r9
 4032fd4:	1887883a 	add	r3,r3,r2
 4032fd8:	ba403836 	bltu	r23,r9,40330bc <__divdf3+0x66c>
 4032fdc:	ba403626 	beq	r23,r9,40330b8 <__divdf3+0x668>
 4032fe0:	42000054 	ori	r8,r8,1
 4032fe4:	a880ffc4 	addi	r2,r21,1023
 4032fe8:	00bf570e 	bge	zero,r2,4032d48 <_gp+0xffff1b48>
 4032fec:	40c001cc 	andi	r3,r8,7
 4032ff0:	18000726 	beq	r3,zero,4033010 <__divdf3+0x5c0>
 4032ff4:	40c003cc 	andi	r3,r8,15
 4032ff8:	01000104 	movi	r4,4
 4032ffc:	19000426 	beq	r3,r4,4033010 <__divdf3+0x5c0>
 4033000:	4107883a 	add	r3,r8,r4
 4033004:	1a11803a 	cmpltu	r8,r3,r8
 4033008:	8a23883a 	add	r17,r17,r8
 403300c:	1811883a 	mov	r8,r3
 4033010:	88c0402c 	andhi	r3,r17,256
 4033014:	18000426 	beq	r3,zero,4033028 <__divdf3+0x5d8>
 4033018:	00ffc034 	movhi	r3,65280
 403301c:	18ffffc4 	addi	r3,r3,-1
 4033020:	a8810004 	addi	r2,r21,1024
 4033024:	88e2703a 	and	r17,r17,r3
 4033028:	00c1ff84 	movi	r3,2046
 403302c:	18bee316 	blt	r3,r2,4032bbc <_gp+0xffff19bc>
 4033030:	8824977a 	slli	r18,r17,29
 4033034:	4010d0fa 	srli	r8,r8,3
 4033038:	8822927a 	slli	r17,r17,9
 403303c:	1081ffcc 	andi	r2,r2,2047
 4033040:	9224b03a 	or	r18,r18,r8
 4033044:	880ad33a 	srli	r5,r17,12
 4033048:	98c0004c 	andi	r3,r19,1
 403304c:	003edf06 	br	4032bcc <_gp+0xffff19cc>
 4033050:	8080022c 	andhi	r2,r16,8
 4033054:	10001226 	beq	r2,zero,40330a0 <__divdf3+0x650>
 4033058:	8880022c 	andhi	r2,r17,8
 403305c:	1000101e 	bne	r2,zero,40330a0 <__divdf3+0x650>
 4033060:	00800434 	movhi	r2,16
 4033064:	89400234 	orhi	r5,r17,8
 4033068:	10bfffc4 	addi	r2,r2,-1
 403306c:	b007883a 	mov	r3,r22
 4033070:	288a703a 	and	r5,r5,r2
 4033074:	4025883a 	mov	r18,r8
 4033078:	003f3106 	br	4032d40 <_gp+0xffff1b40>
 403307c:	008000c4 	movi	r2,3
 4033080:	3880a626 	beq	r7,r2,403331c <__divdf3+0x8cc>
 4033084:	00800044 	movi	r2,1
 4033088:	3880521e 	bne	r7,r2,40331d4 <__divdf3+0x784>
 403308c:	b807883a 	mov	r3,r23
 4033090:	0005883a 	mov	r2,zero
 4033094:	000b883a 	mov	r5,zero
 4033098:	0025883a 	mov	r18,zero
 403309c:	003ecb06 	br	4032bcc <_gp+0xffff19cc>
 40330a0:	00800434 	movhi	r2,16
 40330a4:	81400234 	orhi	r5,r16,8
 40330a8:	10bfffc4 	addi	r2,r2,-1
 40330ac:	a007883a 	mov	r3,r20
 40330b0:	288a703a 	and	r5,r5,r2
 40330b4:	003f2206 	br	4032d40 <_gp+0xffff1b40>
 40330b8:	183fca26 	beq	r3,zero,4032fe4 <_gp+0xffff1de4>
 40330bc:	e5ef883a 	add	r23,fp,r23
 40330c0:	40bfffc4 	addi	r2,r8,-1
 40330c4:	bf00392e 	bgeu	r23,fp,40331ac <__divdf3+0x75c>
 40330c8:	1011883a 	mov	r8,r2
 40330cc:	ba7fc41e 	bne	r23,r9,4032fe0 <_gp+0xffff1de0>
 40330d0:	b0ffc31e 	bne	r22,r3,4032fe0 <_gp+0xffff1de0>
 40330d4:	003fc306 	br	4032fe4 <_gp+0xffff1de4>
 40330d8:	143ff604 	addi	r16,r2,-40
 40330dc:	9c20983a 	sll	r16,r19,r16
 40330e0:	0025883a 	mov	r18,zero
 40330e4:	003ee206 	br	4032c70 <_gp+0xffff1a70>
 40330e8:	d9800315 	stw	r6,12(sp)
 40330ec:	d9c00215 	stw	r7,8(sp)
 40330f0:	4023fc00 	call	4023fc0 <__clzsi2>
 40330f4:	10800804 	addi	r2,r2,32
 40330f8:	d9c00217 	ldw	r7,8(sp)
 40330fc:	d9800317 	ldw	r6,12(sp)
 4033100:	003ed106 	br	4032c48 <_gp+0xffff1a48>
 4033104:	147ff604 	addi	r17,r2,-40
 4033108:	3462983a 	sll	r17,r6,r17
 403310c:	0011883a 	mov	r8,zero
 4033110:	003ef506 	br	4032ce8 <_gp+0xffff1ae8>
 4033114:	3009883a 	mov	r4,r6
 4033118:	d9800315 	stw	r6,12(sp)
 403311c:	da400115 	stw	r9,4(sp)
 4033120:	4023fc00 	call	4023fc0 <__clzsi2>
 4033124:	10800804 	addi	r2,r2,32
 4033128:	da400117 	ldw	r9,4(sp)
 403312c:	d9800317 	ldw	r6,12(sp)
 4033130:	003ee306 	br	4032cc0 <_gp+0xffff1ac0>
 4033134:	85a1883a 	add	r16,r16,r22
 4033138:	8585803a 	cmpltu	r2,r16,r22
 403313c:	1705883a 	add	r2,r2,fp
 4033140:	14a5883a 	add	r18,r2,r18
 4033144:	88bfffc4 	addi	r2,r17,-1
 4033148:	e4800c2e 	bgeu	fp,r18,403317c <__divdf3+0x72c>
 403314c:	90c03e36 	bltu	r18,r3,4033248 <__divdf3+0x7f8>
 4033150:	1c806926 	beq	r3,r18,40332f8 <__divdf3+0x8a8>
 4033154:	90c7c83a 	sub	r3,r18,r3
 4033158:	1023883a 	mov	r17,r2
 403315c:	003f5206 	br	4032ea8 <_gp+0xffff1ca8>
 4033160:	923f0436 	bltu	r18,r8,4032d74 <_gp+0xffff1b74>
 4033164:	800897fa 	slli	r4,r16,31
 4033168:	9004d07a 	srli	r2,r18,1
 403316c:	8006d07a 	srli	r3,r16,1
 4033170:	902097fa 	slli	r16,r18,31
 4033174:	20a4b03a 	or	r18,r4,r2
 4033178:	003f0106 	br	4032d80 <_gp+0xffff1b80>
 403317c:	e4bff51e 	bne	fp,r18,4033154 <_gp+0xffff1f54>
 4033180:	85bff22e 	bgeu	r16,r22,403314c <_gp+0xffff1f4c>
 4033184:	e0c7c83a 	sub	r3,fp,r3
 4033188:	1023883a 	mov	r17,r2
 403318c:	003f4606 	br	4032ea8 <_gp+0xffff1ca8>
 4033190:	100f883a 	mov	r7,r2
 4033194:	003f2b06 	br	4032e44 <_gp+0xffff1c44>
 4033198:	180d883a 	mov	r6,r3
 403319c:	003f1306 	br	4032dec <_gp+0xffff1bec>
 40331a0:	813fe436 	bltu	r16,r4,4033134 <_gp+0xffff1f34>
 40331a4:	0007883a 	mov	r3,zero
 40331a8:	003f3f06 	br	4032ea8 <_gp+0xffff1ca8>
 40331ac:	ba402c36 	bltu	r23,r9,4033260 <__divdf3+0x810>
 40331b0:	4dc05426 	beq	r9,r23,4033304 <__divdf3+0x8b4>
 40331b4:	1011883a 	mov	r8,r2
 40331b8:	003f8906 	br	4032fe0 <_gp+0xffff1de0>
 40331bc:	023fffc4 	movi	r8,-1
 40331c0:	003f8806 	br	4032fe4 <_gp+0xffff1de4>
 40331c4:	1811883a 	mov	r8,r3
 40331c8:	003f5406 	br	4032f1c <_gp+0xffff1d1c>
 40331cc:	1025883a 	mov	r18,r2
 40331d0:	003f6d06 	br	4032f88 <_gp+0xffff1d88>
 40331d4:	b827883a 	mov	r19,r23
 40331d8:	003f8206 	br	4032fe4 <_gp+0xffff1de4>
 40331dc:	010007c4 	movi	r4,31
 40331e0:	20c02616 	blt	r4,r3,403327c <__divdf3+0x82c>
 40331e4:	00800804 	movi	r2,32
 40331e8:	10c5c83a 	sub	r2,r2,r3
 40331ec:	888a983a 	sll	r5,r17,r2
 40331f0:	40c8d83a 	srl	r4,r8,r3
 40331f4:	4084983a 	sll	r2,r8,r2
 40331f8:	88e2d83a 	srl	r17,r17,r3
 40331fc:	2906b03a 	or	r3,r5,r4
 4033200:	1004c03a 	cmpne	r2,r2,zero
 4033204:	1886b03a 	or	r3,r3,r2
 4033208:	188001cc 	andi	r2,r3,7
 403320c:	10000726 	beq	r2,zero,403322c <__divdf3+0x7dc>
 4033210:	188003cc 	andi	r2,r3,15
 4033214:	01000104 	movi	r4,4
 4033218:	11000426 	beq	r2,r4,403322c <__divdf3+0x7dc>
 403321c:	1805883a 	mov	r2,r3
 4033220:	10c00104 	addi	r3,r2,4
 4033224:	1885803a 	cmpltu	r2,r3,r2
 4033228:	88a3883a 	add	r17,r17,r2
 403322c:	8880202c 	andhi	r2,r17,128
 4033230:	10002726 	beq	r2,zero,40332d0 <__divdf3+0x880>
 4033234:	98c0004c 	andi	r3,r19,1
 4033238:	00800044 	movi	r2,1
 403323c:	000b883a 	mov	r5,zero
 4033240:	0025883a 	mov	r18,zero
 4033244:	003e6106 	br	4032bcc <_gp+0xffff19cc>
 4033248:	85a1883a 	add	r16,r16,r22
 403324c:	8585803a 	cmpltu	r2,r16,r22
 4033250:	1705883a 	add	r2,r2,fp
 4033254:	14a5883a 	add	r18,r2,r18
 4033258:	8c7fff84 	addi	r17,r17,-2
 403325c:	003f1106 	br	4032ea4 <_gp+0xffff1ca4>
 4033260:	b589883a 	add	r4,r22,r22
 4033264:	25ad803a 	cmpltu	r22,r4,r22
 4033268:	b739883a 	add	fp,r22,fp
 403326c:	40bfff84 	addi	r2,r8,-2
 4033270:	bf2f883a 	add	r23,r23,fp
 4033274:	202d883a 	mov	r22,r4
 4033278:	003f9306 	br	40330c8 <_gp+0xffff1ec8>
 403327c:	013ff844 	movi	r4,-31
 4033280:	2085c83a 	sub	r2,r4,r2
 4033284:	8888d83a 	srl	r4,r17,r2
 4033288:	00800804 	movi	r2,32
 403328c:	18802126 	beq	r3,r2,4033314 <__divdf3+0x8c4>
 4033290:	00801004 	movi	r2,64
 4033294:	10c5c83a 	sub	r2,r2,r3
 4033298:	8884983a 	sll	r2,r17,r2
 403329c:	1204b03a 	or	r2,r2,r8
 40332a0:	1004c03a 	cmpne	r2,r2,zero
 40332a4:	2084b03a 	or	r2,r4,r2
 40332a8:	144001cc 	andi	r17,r2,7
 40332ac:	88000d1e 	bne	r17,zero,40332e4 <__divdf3+0x894>
 40332b0:	000b883a 	mov	r5,zero
 40332b4:	1024d0fa 	srli	r18,r2,3
 40332b8:	98c0004c 	andi	r3,r19,1
 40332bc:	0005883a 	mov	r2,zero
 40332c0:	9464b03a 	or	r18,r18,r17
 40332c4:	003e4106 	br	4032bcc <_gp+0xffff19cc>
 40332c8:	1007883a 	mov	r3,r2
 40332cc:	0023883a 	mov	r17,zero
 40332d0:	880a927a 	slli	r5,r17,9
 40332d4:	1805883a 	mov	r2,r3
 40332d8:	8822977a 	slli	r17,r17,29
 40332dc:	280ad33a 	srli	r5,r5,12
 40332e0:	003ff406 	br	40332b4 <_gp+0xffff20b4>
 40332e4:	10c003cc 	andi	r3,r2,15
 40332e8:	01000104 	movi	r4,4
 40332ec:	193ff626 	beq	r3,r4,40332c8 <_gp+0xffff20c8>
 40332f0:	0023883a 	mov	r17,zero
 40332f4:	003fca06 	br	4033220 <_gp+0xffff2020>
 40332f8:	813fd336 	bltu	r16,r4,4033248 <_gp+0xffff2048>
 40332fc:	1023883a 	mov	r17,r2
 4033300:	003fa806 	br	40331a4 <_gp+0xffff1fa4>
 4033304:	b0ffd636 	bltu	r22,r3,4033260 <_gp+0xffff2060>
 4033308:	1011883a 	mov	r8,r2
 403330c:	b0ff341e 	bne	r22,r3,4032fe0 <_gp+0xffff1de0>
 4033310:	003f3406 	br	4032fe4 <_gp+0xffff1de4>
 4033314:	0005883a 	mov	r2,zero
 4033318:	003fe006 	br	403329c <_gp+0xffff209c>
 403331c:	00800434 	movhi	r2,16
 4033320:	89400234 	orhi	r5,r17,8
 4033324:	10bfffc4 	addi	r2,r2,-1
 4033328:	b807883a 	mov	r3,r23
 403332c:	288a703a 	and	r5,r5,r2
 4033330:	4025883a 	mov	r18,r8
 4033334:	003e8206 	br	4032d40 <_gp+0xffff1b40>

04033338 <__eqdf2>:
 4033338:	2804d53a 	srli	r2,r5,20
 403333c:	3806d53a 	srli	r3,r7,20
 4033340:	02000434 	movhi	r8,16
 4033344:	423fffc4 	addi	r8,r8,-1
 4033348:	1081ffcc 	andi	r2,r2,2047
 403334c:	0281ffc4 	movi	r10,2047
 4033350:	2a12703a 	and	r9,r5,r8
 4033354:	18c1ffcc 	andi	r3,r3,2047
 4033358:	3a10703a 	and	r8,r7,r8
 403335c:	280ad7fa 	srli	r5,r5,31
 4033360:	380ed7fa 	srli	r7,r7,31
 4033364:	12801026 	beq	r2,r10,40333a8 <__eqdf2+0x70>
 4033368:	0281ffc4 	movi	r10,2047
 403336c:	1a800a26 	beq	r3,r10,4033398 <__eqdf2+0x60>
 4033370:	10c00226 	beq	r2,r3,403337c <__eqdf2+0x44>
 4033374:	00800044 	movi	r2,1
 4033378:	f800283a 	ret
 403337c:	4a3ffd1e 	bne	r9,r8,4033374 <_gp+0xffff2174>
 4033380:	21bffc1e 	bne	r4,r6,4033374 <_gp+0xffff2174>
 4033384:	29c00c26 	beq	r5,r7,40333b8 <__eqdf2+0x80>
 4033388:	103ffa1e 	bne	r2,zero,4033374 <_gp+0xffff2174>
 403338c:	2244b03a 	or	r2,r4,r9
 4033390:	1004c03a 	cmpne	r2,r2,zero
 4033394:	f800283a 	ret
 4033398:	3214b03a 	or	r10,r6,r8
 403339c:	503ff426 	beq	r10,zero,4033370 <_gp+0xffff2170>
 40333a0:	00800044 	movi	r2,1
 40333a4:	f800283a 	ret
 40333a8:	2254b03a 	or	r10,r4,r9
 40333ac:	503fee26 	beq	r10,zero,4033368 <_gp+0xffff2168>
 40333b0:	00800044 	movi	r2,1
 40333b4:	f800283a 	ret
 40333b8:	0005883a 	mov	r2,zero
 40333bc:	f800283a 	ret

040333c0 <__gedf2>:
 40333c0:	2804d53a 	srli	r2,r5,20
 40333c4:	3806d53a 	srli	r3,r7,20
 40333c8:	02000434 	movhi	r8,16
 40333cc:	423fffc4 	addi	r8,r8,-1
 40333d0:	1081ffcc 	andi	r2,r2,2047
 40333d4:	0241ffc4 	movi	r9,2047
 40333d8:	2a14703a 	and	r10,r5,r8
 40333dc:	18c1ffcc 	andi	r3,r3,2047
 40333e0:	3a10703a 	and	r8,r7,r8
 40333e4:	280ad7fa 	srli	r5,r5,31
 40333e8:	380ed7fa 	srli	r7,r7,31
 40333ec:	12401d26 	beq	r2,r9,4033464 <__gedf2+0xa4>
 40333f0:	0241ffc4 	movi	r9,2047
 40333f4:	1a401226 	beq	r3,r9,4033440 <__gedf2+0x80>
 40333f8:	1000081e 	bne	r2,zero,403341c <__gedf2+0x5c>
 40333fc:	2296b03a 	or	r11,r4,r10
 4033400:	5813003a 	cmpeq	r9,r11,zero
 4033404:	1800091e 	bne	r3,zero,403342c <__gedf2+0x6c>
 4033408:	3218b03a 	or	r12,r6,r8
 403340c:	6000071e 	bne	r12,zero,403342c <__gedf2+0x6c>
 4033410:	0005883a 	mov	r2,zero
 4033414:	5800101e 	bne	r11,zero,4033458 <__gedf2+0x98>
 4033418:	f800283a 	ret
 403341c:	18000c1e 	bne	r3,zero,4033450 <__gedf2+0x90>
 4033420:	3212b03a 	or	r9,r6,r8
 4033424:	48000c26 	beq	r9,zero,4033458 <__gedf2+0x98>
 4033428:	0013883a 	mov	r9,zero
 403342c:	39c03fcc 	andi	r7,r7,255
 4033430:	48000826 	beq	r9,zero,4033454 <__gedf2+0x94>
 4033434:	38000926 	beq	r7,zero,403345c <__gedf2+0x9c>
 4033438:	00800044 	movi	r2,1
 403343c:	f800283a 	ret
 4033440:	3212b03a 	or	r9,r6,r8
 4033444:	483fec26 	beq	r9,zero,40333f8 <_gp+0xffff21f8>
 4033448:	00bfff84 	movi	r2,-2
 403344c:	f800283a 	ret
 4033450:	39c03fcc 	andi	r7,r7,255
 4033454:	29c00626 	beq	r5,r7,4033470 <__gedf2+0xb0>
 4033458:	283ff726 	beq	r5,zero,4033438 <_gp+0xffff2238>
 403345c:	00bfffc4 	movi	r2,-1
 4033460:	f800283a 	ret
 4033464:	2292b03a 	or	r9,r4,r10
 4033468:	483fe126 	beq	r9,zero,40333f0 <_gp+0xffff21f0>
 403346c:	003ff606 	br	4033448 <_gp+0xffff2248>
 4033470:	18bff916 	blt	r3,r2,4033458 <_gp+0xffff2258>
 4033474:	10c00316 	blt	r2,r3,4033484 <__gedf2+0xc4>
 4033478:	42bff736 	bltu	r8,r10,4033458 <_gp+0xffff2258>
 403347c:	52000326 	beq	r10,r8,403348c <__gedf2+0xcc>
 4033480:	5200042e 	bgeu	r10,r8,4033494 <__gedf2+0xd4>
 4033484:	283fec1e 	bne	r5,zero,4033438 <_gp+0xffff2238>
 4033488:	003ff406 	br	403345c <_gp+0xffff225c>
 403348c:	313ff236 	bltu	r6,r4,4033458 <_gp+0xffff2258>
 4033490:	21bffc36 	bltu	r4,r6,4033484 <_gp+0xffff2284>
 4033494:	0005883a 	mov	r2,zero
 4033498:	f800283a 	ret

0403349c <__ledf2>:
 403349c:	2804d53a 	srli	r2,r5,20
 40334a0:	3810d53a 	srli	r8,r7,20
 40334a4:	00c00434 	movhi	r3,16
 40334a8:	18ffffc4 	addi	r3,r3,-1
 40334ac:	1081ffcc 	andi	r2,r2,2047
 40334b0:	0241ffc4 	movi	r9,2047
 40334b4:	28d4703a 	and	r10,r5,r3
 40334b8:	4201ffcc 	andi	r8,r8,2047
 40334bc:	38c6703a 	and	r3,r7,r3
 40334c0:	280ad7fa 	srli	r5,r5,31
 40334c4:	380ed7fa 	srli	r7,r7,31
 40334c8:	12401f26 	beq	r2,r9,4033548 <__ledf2+0xac>
 40334cc:	0241ffc4 	movi	r9,2047
 40334d0:	42401426 	beq	r8,r9,4033524 <__ledf2+0x88>
 40334d4:	1000091e 	bne	r2,zero,40334fc <__ledf2+0x60>
 40334d8:	2296b03a 	or	r11,r4,r10
 40334dc:	5813003a 	cmpeq	r9,r11,zero
 40334e0:	29403fcc 	andi	r5,r5,255
 40334e4:	40000a1e 	bne	r8,zero,4033510 <__ledf2+0x74>
 40334e8:	30d8b03a 	or	r12,r6,r3
 40334ec:	6000081e 	bne	r12,zero,4033510 <__ledf2+0x74>
 40334f0:	0005883a 	mov	r2,zero
 40334f4:	5800111e 	bne	r11,zero,403353c <__ledf2+0xa0>
 40334f8:	f800283a 	ret
 40334fc:	29403fcc 	andi	r5,r5,255
 4033500:	40000c1e 	bne	r8,zero,4033534 <__ledf2+0x98>
 4033504:	30d2b03a 	or	r9,r6,r3
 4033508:	48000c26 	beq	r9,zero,403353c <__ledf2+0xa0>
 403350c:	0013883a 	mov	r9,zero
 4033510:	39c03fcc 	andi	r7,r7,255
 4033514:	48000826 	beq	r9,zero,4033538 <__ledf2+0x9c>
 4033518:	38001126 	beq	r7,zero,4033560 <__ledf2+0xc4>
 403351c:	00800044 	movi	r2,1
 4033520:	f800283a 	ret
 4033524:	30d2b03a 	or	r9,r6,r3
 4033528:	483fea26 	beq	r9,zero,40334d4 <_gp+0xffff22d4>
 403352c:	00800084 	movi	r2,2
 4033530:	f800283a 	ret
 4033534:	39c03fcc 	andi	r7,r7,255
 4033538:	39400726 	beq	r7,r5,4033558 <__ledf2+0xbc>
 403353c:	2800081e 	bne	r5,zero,4033560 <__ledf2+0xc4>
 4033540:	00800044 	movi	r2,1
 4033544:	f800283a 	ret
 4033548:	2292b03a 	or	r9,r4,r10
 403354c:	483fdf26 	beq	r9,zero,40334cc <_gp+0xffff22cc>
 4033550:	00800084 	movi	r2,2
 4033554:	f800283a 	ret
 4033558:	4080030e 	bge	r8,r2,4033568 <__ledf2+0xcc>
 403355c:	383fef26 	beq	r7,zero,403351c <_gp+0xffff231c>
 4033560:	00bfffc4 	movi	r2,-1
 4033564:	f800283a 	ret
 4033568:	123feb16 	blt	r2,r8,4033518 <_gp+0xffff2318>
 403356c:	1abff336 	bltu	r3,r10,403353c <_gp+0xffff233c>
 4033570:	50c00326 	beq	r10,r3,4033580 <__ledf2+0xe4>
 4033574:	50c0042e 	bgeu	r10,r3,4033588 <__ledf2+0xec>
 4033578:	283fe81e 	bne	r5,zero,403351c <_gp+0xffff231c>
 403357c:	003ff806 	br	4033560 <_gp+0xffff2360>
 4033580:	313fee36 	bltu	r6,r4,403353c <_gp+0xffff233c>
 4033584:	21bffc36 	bltu	r4,r6,4033578 <_gp+0xffff2378>
 4033588:	0005883a 	mov	r2,zero
 403358c:	f800283a 	ret

04033590 <__subdf3>:
 4033590:	02000434 	movhi	r8,16
 4033594:	423fffc4 	addi	r8,r8,-1
 4033598:	defffb04 	addi	sp,sp,-20
 403359c:	2a14703a 	and	r10,r5,r8
 40335a0:	3812d53a 	srli	r9,r7,20
 40335a4:	3a10703a 	and	r8,r7,r8
 40335a8:	2006d77a 	srli	r3,r4,29
 40335ac:	3004d77a 	srli	r2,r6,29
 40335b0:	dc000015 	stw	r16,0(sp)
 40335b4:	501490fa 	slli	r10,r10,3
 40335b8:	2820d53a 	srli	r16,r5,20
 40335bc:	401090fa 	slli	r8,r8,3
 40335c0:	dc800215 	stw	r18,8(sp)
 40335c4:	dc400115 	stw	r17,4(sp)
 40335c8:	dfc00415 	stw	ra,16(sp)
 40335cc:	202290fa 	slli	r17,r4,3
 40335d0:	dcc00315 	stw	r19,12(sp)
 40335d4:	4a41ffcc 	andi	r9,r9,2047
 40335d8:	0101ffc4 	movi	r4,2047
 40335dc:	2824d7fa 	srli	r18,r5,31
 40335e0:	8401ffcc 	andi	r16,r16,2047
 40335e4:	50c6b03a 	or	r3,r10,r3
 40335e8:	380ed7fa 	srli	r7,r7,31
 40335ec:	408ab03a 	or	r5,r8,r2
 40335f0:	300c90fa 	slli	r6,r6,3
 40335f4:	49009626 	beq	r9,r4,4033850 <__subdf3+0x2c0>
 40335f8:	39c0005c 	xori	r7,r7,1
 40335fc:	8245c83a 	sub	r2,r16,r9
 4033600:	3c807426 	beq	r7,r18,40337d4 <__subdf3+0x244>
 4033604:	0080af0e 	bge	zero,r2,40338c4 <__subdf3+0x334>
 4033608:	48002a1e 	bne	r9,zero,40336b4 <__subdf3+0x124>
 403360c:	2988b03a 	or	r4,r5,r6
 4033610:	20009a1e 	bne	r4,zero,403387c <__subdf3+0x2ec>
 4033614:	888001cc 	andi	r2,r17,7
 4033618:	10000726 	beq	r2,zero,4033638 <__subdf3+0xa8>
 403361c:	888003cc 	andi	r2,r17,15
 4033620:	01000104 	movi	r4,4
 4033624:	11000426 	beq	r2,r4,4033638 <__subdf3+0xa8>
 4033628:	890b883a 	add	r5,r17,r4
 403362c:	2c63803a 	cmpltu	r17,r5,r17
 4033630:	1c47883a 	add	r3,r3,r17
 4033634:	2823883a 	mov	r17,r5
 4033638:	1880202c 	andhi	r2,r3,128
 403363c:	10005926 	beq	r2,zero,40337a4 <__subdf3+0x214>
 4033640:	84000044 	addi	r16,r16,1
 4033644:	0081ffc4 	movi	r2,2047
 4033648:	8080be26 	beq	r16,r2,4033944 <__subdf3+0x3b4>
 403364c:	017fe034 	movhi	r5,65408
 4033650:	297fffc4 	addi	r5,r5,-1
 4033654:	1946703a 	and	r3,r3,r5
 4033658:	1804977a 	slli	r2,r3,29
 403365c:	1806927a 	slli	r3,r3,9
 4033660:	8822d0fa 	srli	r17,r17,3
 4033664:	8401ffcc 	andi	r16,r16,2047
 4033668:	180ad33a 	srli	r5,r3,12
 403366c:	9100004c 	andi	r4,r18,1
 4033670:	1444b03a 	or	r2,r2,r17
 4033674:	80c1ffcc 	andi	r3,r16,2047
 4033678:	1820953a 	slli	r16,r3,20
 403367c:	20c03fcc 	andi	r3,r4,255
 4033680:	180897fa 	slli	r4,r3,31
 4033684:	00c00434 	movhi	r3,16
 4033688:	18ffffc4 	addi	r3,r3,-1
 403368c:	28c6703a 	and	r3,r5,r3
 4033690:	1c06b03a 	or	r3,r3,r16
 4033694:	1906b03a 	or	r3,r3,r4
 4033698:	dfc00417 	ldw	ra,16(sp)
 403369c:	dcc00317 	ldw	r19,12(sp)
 40336a0:	dc800217 	ldw	r18,8(sp)
 40336a4:	dc400117 	ldw	r17,4(sp)
 40336a8:	dc000017 	ldw	r16,0(sp)
 40336ac:	dec00504 	addi	sp,sp,20
 40336b0:	f800283a 	ret
 40336b4:	0101ffc4 	movi	r4,2047
 40336b8:	813fd626 	beq	r16,r4,4033614 <_gp+0xffff2414>
 40336bc:	29402034 	orhi	r5,r5,128
 40336c0:	01000e04 	movi	r4,56
 40336c4:	2080a316 	blt	r4,r2,4033954 <__subdf3+0x3c4>
 40336c8:	010007c4 	movi	r4,31
 40336cc:	2080c616 	blt	r4,r2,40339e8 <__subdf3+0x458>
 40336d0:	01000804 	movi	r4,32
 40336d4:	2089c83a 	sub	r4,r4,r2
 40336d8:	2910983a 	sll	r8,r5,r4
 40336dc:	308ed83a 	srl	r7,r6,r2
 40336e0:	3108983a 	sll	r4,r6,r4
 40336e4:	2884d83a 	srl	r2,r5,r2
 40336e8:	41ccb03a 	or	r6,r8,r7
 40336ec:	2008c03a 	cmpne	r4,r4,zero
 40336f0:	310cb03a 	or	r6,r6,r4
 40336f4:	898dc83a 	sub	r6,r17,r6
 40336f8:	89a3803a 	cmpltu	r17,r17,r6
 40336fc:	1887c83a 	sub	r3,r3,r2
 4033700:	1c47c83a 	sub	r3,r3,r17
 4033704:	3023883a 	mov	r17,r6
 4033708:	1880202c 	andhi	r2,r3,128
 403370c:	10002326 	beq	r2,zero,403379c <__subdf3+0x20c>
 4033710:	04c02034 	movhi	r19,128
 4033714:	9cffffc4 	addi	r19,r19,-1
 4033718:	1ce6703a 	and	r19,r3,r19
 403371c:	98007a26 	beq	r19,zero,4033908 <__subdf3+0x378>
 4033720:	9809883a 	mov	r4,r19
 4033724:	4023fc00 	call	4023fc0 <__clzsi2>
 4033728:	113ffe04 	addi	r4,r2,-8
 403372c:	00c007c4 	movi	r3,31
 4033730:	19007b16 	blt	r3,r4,4033920 <__subdf3+0x390>
 4033734:	00800804 	movi	r2,32
 4033738:	1105c83a 	sub	r2,r2,r4
 403373c:	8884d83a 	srl	r2,r17,r2
 4033740:	9906983a 	sll	r3,r19,r4
 4033744:	8922983a 	sll	r17,r17,r4
 4033748:	10c4b03a 	or	r2,r2,r3
 403374c:	24007816 	blt	r4,r16,4033930 <__subdf3+0x3a0>
 4033750:	2421c83a 	sub	r16,r4,r16
 4033754:	80c00044 	addi	r3,r16,1
 4033758:	010007c4 	movi	r4,31
 403375c:	20c09516 	blt	r4,r3,40339b4 <__subdf3+0x424>
 4033760:	01400804 	movi	r5,32
 4033764:	28cbc83a 	sub	r5,r5,r3
 4033768:	88c8d83a 	srl	r4,r17,r3
 403376c:	8962983a 	sll	r17,r17,r5
 4033770:	114a983a 	sll	r5,r2,r5
 4033774:	10c6d83a 	srl	r3,r2,r3
 4033778:	8804c03a 	cmpne	r2,r17,zero
 403377c:	290ab03a 	or	r5,r5,r4
 4033780:	28a2b03a 	or	r17,r5,r2
 4033784:	0021883a 	mov	r16,zero
 4033788:	003fa206 	br	4033614 <_gp+0xffff2414>
 403378c:	2090b03a 	or	r8,r4,r2
 4033790:	40018e26 	beq	r8,zero,4033dcc <__subdf3+0x83c>
 4033794:	1007883a 	mov	r3,r2
 4033798:	2023883a 	mov	r17,r4
 403379c:	888001cc 	andi	r2,r17,7
 40337a0:	103f9e1e 	bne	r2,zero,403361c <_gp+0xffff241c>
 40337a4:	1804977a 	slli	r2,r3,29
 40337a8:	8822d0fa 	srli	r17,r17,3
 40337ac:	1810d0fa 	srli	r8,r3,3
 40337b0:	9100004c 	andi	r4,r18,1
 40337b4:	1444b03a 	or	r2,r2,r17
 40337b8:	00c1ffc4 	movi	r3,2047
 40337bc:	80c02826 	beq	r16,r3,4033860 <__subdf3+0x2d0>
 40337c0:	01400434 	movhi	r5,16
 40337c4:	297fffc4 	addi	r5,r5,-1
 40337c8:	80e0703a 	and	r16,r16,r3
 40337cc:	414a703a 	and	r5,r8,r5
 40337d0:	003fa806 	br	4033674 <_gp+0xffff2474>
 40337d4:	0080630e 	bge	zero,r2,4033964 <__subdf3+0x3d4>
 40337d8:	48003026 	beq	r9,zero,403389c <__subdf3+0x30c>
 40337dc:	0101ffc4 	movi	r4,2047
 40337e0:	813f8c26 	beq	r16,r4,4033614 <_gp+0xffff2414>
 40337e4:	29402034 	orhi	r5,r5,128
 40337e8:	01000e04 	movi	r4,56
 40337ec:	2080a90e 	bge	r4,r2,4033a94 <__subdf3+0x504>
 40337f0:	298cb03a 	or	r6,r5,r6
 40337f4:	3012c03a 	cmpne	r9,r6,zero
 40337f8:	0005883a 	mov	r2,zero
 40337fc:	4c53883a 	add	r9,r9,r17
 4033800:	4c63803a 	cmpltu	r17,r9,r17
 4033804:	10c7883a 	add	r3,r2,r3
 4033808:	88c7883a 	add	r3,r17,r3
 403380c:	4823883a 	mov	r17,r9
 4033810:	1880202c 	andhi	r2,r3,128
 4033814:	1000d026 	beq	r2,zero,4033b58 <__subdf3+0x5c8>
 4033818:	84000044 	addi	r16,r16,1
 403381c:	0081ffc4 	movi	r2,2047
 4033820:	8080fe26 	beq	r16,r2,4033c1c <__subdf3+0x68c>
 4033824:	00bfe034 	movhi	r2,65408
 4033828:	10bfffc4 	addi	r2,r2,-1
 403382c:	1886703a 	and	r3,r3,r2
 4033830:	880ad07a 	srli	r5,r17,1
 4033834:	180497fa 	slli	r2,r3,31
 4033838:	8900004c 	andi	r4,r17,1
 403383c:	2922b03a 	or	r17,r5,r4
 4033840:	1806d07a 	srli	r3,r3,1
 4033844:	1462b03a 	or	r17,r2,r17
 4033848:	3825883a 	mov	r18,r7
 403384c:	003f7106 	br	4033614 <_gp+0xffff2414>
 4033850:	2984b03a 	or	r2,r5,r6
 4033854:	103f6826 	beq	r2,zero,40335f8 <_gp+0xffff23f8>
 4033858:	39c03fcc 	andi	r7,r7,255
 403385c:	003f6706 	br	40335fc <_gp+0xffff23fc>
 4033860:	4086b03a 	or	r3,r8,r2
 4033864:	18015226 	beq	r3,zero,4033db0 <__subdf3+0x820>
 4033868:	00c00434 	movhi	r3,16
 403386c:	41400234 	orhi	r5,r8,8
 4033870:	18ffffc4 	addi	r3,r3,-1
 4033874:	28ca703a 	and	r5,r5,r3
 4033878:	003f7e06 	br	4033674 <_gp+0xffff2474>
 403387c:	10bfffc4 	addi	r2,r2,-1
 4033880:	1000491e 	bne	r2,zero,40339a8 <__subdf3+0x418>
 4033884:	898fc83a 	sub	r7,r17,r6
 4033888:	89e3803a 	cmpltu	r17,r17,r7
 403388c:	1947c83a 	sub	r3,r3,r5
 4033890:	1c47c83a 	sub	r3,r3,r17
 4033894:	3823883a 	mov	r17,r7
 4033898:	003f9b06 	br	4033708 <_gp+0xffff2508>
 403389c:	2988b03a 	or	r4,r5,r6
 40338a0:	203f5c26 	beq	r4,zero,4033614 <_gp+0xffff2414>
 40338a4:	10bfffc4 	addi	r2,r2,-1
 40338a8:	1000931e 	bne	r2,zero,4033af8 <__subdf3+0x568>
 40338ac:	898d883a 	add	r6,r17,r6
 40338b0:	3463803a 	cmpltu	r17,r6,r17
 40338b4:	1947883a 	add	r3,r3,r5
 40338b8:	88c7883a 	add	r3,r17,r3
 40338bc:	3023883a 	mov	r17,r6
 40338c0:	003fd306 	br	4033810 <_gp+0xffff2610>
 40338c4:	1000541e 	bne	r2,zero,4033a18 <__subdf3+0x488>
 40338c8:	80800044 	addi	r2,r16,1
 40338cc:	1081ffcc 	andi	r2,r2,2047
 40338d0:	01000044 	movi	r4,1
 40338d4:	2080a20e 	bge	r4,r2,4033b60 <__subdf3+0x5d0>
 40338d8:	8989c83a 	sub	r4,r17,r6
 40338dc:	8905803a 	cmpltu	r2,r17,r4
 40338e0:	1967c83a 	sub	r19,r3,r5
 40338e4:	98a7c83a 	sub	r19,r19,r2
 40338e8:	9880202c 	andhi	r2,r19,128
 40338ec:	10006326 	beq	r2,zero,4033a7c <__subdf3+0x4ec>
 40338f0:	3463c83a 	sub	r17,r6,r17
 40338f4:	28c7c83a 	sub	r3,r5,r3
 40338f8:	344d803a 	cmpltu	r6,r6,r17
 40338fc:	19a7c83a 	sub	r19,r3,r6
 4033900:	3825883a 	mov	r18,r7
 4033904:	983f861e 	bne	r19,zero,4033720 <_gp+0xffff2520>
 4033908:	8809883a 	mov	r4,r17
 403390c:	4023fc00 	call	4023fc0 <__clzsi2>
 4033910:	10800804 	addi	r2,r2,32
 4033914:	113ffe04 	addi	r4,r2,-8
 4033918:	00c007c4 	movi	r3,31
 403391c:	193f850e 	bge	r3,r4,4033734 <_gp+0xffff2534>
 4033920:	10bff604 	addi	r2,r2,-40
 4033924:	8884983a 	sll	r2,r17,r2
 4033928:	0023883a 	mov	r17,zero
 403392c:	243f880e 	bge	r4,r16,4033750 <_gp+0xffff2550>
 4033930:	00ffe034 	movhi	r3,65408
 4033934:	18ffffc4 	addi	r3,r3,-1
 4033938:	8121c83a 	sub	r16,r16,r4
 403393c:	10c6703a 	and	r3,r2,r3
 4033940:	003f3406 	br	4033614 <_gp+0xffff2414>
 4033944:	9100004c 	andi	r4,r18,1
 4033948:	000b883a 	mov	r5,zero
 403394c:	0005883a 	mov	r2,zero
 4033950:	003f4806 	br	4033674 <_gp+0xffff2474>
 4033954:	298cb03a 	or	r6,r5,r6
 4033958:	300cc03a 	cmpne	r6,r6,zero
 403395c:	0005883a 	mov	r2,zero
 4033960:	003f6406 	br	40336f4 <_gp+0xffff24f4>
 4033964:	10009a1e 	bne	r2,zero,4033bd0 <__subdf3+0x640>
 4033968:	82400044 	addi	r9,r16,1
 403396c:	4881ffcc 	andi	r2,r9,2047
 4033970:	02800044 	movi	r10,1
 4033974:	5080670e 	bge	r10,r2,4033b14 <__subdf3+0x584>
 4033978:	0081ffc4 	movi	r2,2047
 403397c:	4880af26 	beq	r9,r2,4033c3c <__subdf3+0x6ac>
 4033980:	898d883a 	add	r6,r17,r6
 4033984:	1945883a 	add	r2,r3,r5
 4033988:	3447803a 	cmpltu	r3,r6,r17
 403398c:	1887883a 	add	r3,r3,r2
 4033990:	182297fa 	slli	r17,r3,31
 4033994:	300cd07a 	srli	r6,r6,1
 4033998:	1806d07a 	srli	r3,r3,1
 403399c:	4821883a 	mov	r16,r9
 40339a0:	89a2b03a 	or	r17,r17,r6
 40339a4:	003f1b06 	br	4033614 <_gp+0xffff2414>
 40339a8:	0101ffc4 	movi	r4,2047
 40339ac:	813f441e 	bne	r16,r4,40336c0 <_gp+0xffff24c0>
 40339b0:	003f1806 	br	4033614 <_gp+0xffff2414>
 40339b4:	843ff844 	addi	r16,r16,-31
 40339b8:	01400804 	movi	r5,32
 40339bc:	1408d83a 	srl	r4,r2,r16
 40339c0:	19405026 	beq	r3,r5,4033b04 <__subdf3+0x574>
 40339c4:	01401004 	movi	r5,64
 40339c8:	28c7c83a 	sub	r3,r5,r3
 40339cc:	10c4983a 	sll	r2,r2,r3
 40339d0:	88a2b03a 	or	r17,r17,r2
 40339d4:	8822c03a 	cmpne	r17,r17,zero
 40339d8:	2462b03a 	or	r17,r4,r17
 40339dc:	0007883a 	mov	r3,zero
 40339e0:	0021883a 	mov	r16,zero
 40339e4:	003f6d06 	br	403379c <_gp+0xffff259c>
 40339e8:	11fff804 	addi	r7,r2,-32
 40339ec:	01000804 	movi	r4,32
 40339f0:	29ced83a 	srl	r7,r5,r7
 40339f4:	11004526 	beq	r2,r4,4033b0c <__subdf3+0x57c>
 40339f8:	01001004 	movi	r4,64
 40339fc:	2089c83a 	sub	r4,r4,r2
 4033a00:	2904983a 	sll	r2,r5,r4
 4033a04:	118cb03a 	or	r6,r2,r6
 4033a08:	300cc03a 	cmpne	r6,r6,zero
 4033a0c:	398cb03a 	or	r6,r7,r6
 4033a10:	0005883a 	mov	r2,zero
 4033a14:	003f3706 	br	40336f4 <_gp+0xffff24f4>
 4033a18:	80002a26 	beq	r16,zero,4033ac4 <__subdf3+0x534>
 4033a1c:	0101ffc4 	movi	r4,2047
 4033a20:	49006626 	beq	r9,r4,4033bbc <__subdf3+0x62c>
 4033a24:	0085c83a 	sub	r2,zero,r2
 4033a28:	18c02034 	orhi	r3,r3,128
 4033a2c:	01000e04 	movi	r4,56
 4033a30:	20807e16 	blt	r4,r2,4033c2c <__subdf3+0x69c>
 4033a34:	010007c4 	movi	r4,31
 4033a38:	2080e716 	blt	r4,r2,4033dd8 <__subdf3+0x848>
 4033a3c:	01000804 	movi	r4,32
 4033a40:	2089c83a 	sub	r4,r4,r2
 4033a44:	1914983a 	sll	r10,r3,r4
 4033a48:	8890d83a 	srl	r8,r17,r2
 4033a4c:	8908983a 	sll	r4,r17,r4
 4033a50:	1884d83a 	srl	r2,r3,r2
 4033a54:	5222b03a 	or	r17,r10,r8
 4033a58:	2006c03a 	cmpne	r3,r4,zero
 4033a5c:	88e2b03a 	or	r17,r17,r3
 4033a60:	3463c83a 	sub	r17,r6,r17
 4033a64:	2885c83a 	sub	r2,r5,r2
 4033a68:	344d803a 	cmpltu	r6,r6,r17
 4033a6c:	1187c83a 	sub	r3,r2,r6
 4033a70:	4821883a 	mov	r16,r9
 4033a74:	3825883a 	mov	r18,r7
 4033a78:	003f2306 	br	4033708 <_gp+0xffff2508>
 4033a7c:	24d0b03a 	or	r8,r4,r19
 4033a80:	40001b1e 	bne	r8,zero,4033af0 <__subdf3+0x560>
 4033a84:	0005883a 	mov	r2,zero
 4033a88:	0009883a 	mov	r4,zero
 4033a8c:	0021883a 	mov	r16,zero
 4033a90:	003f4906 	br	40337b8 <_gp+0xffff25b8>
 4033a94:	010007c4 	movi	r4,31
 4033a98:	20803a16 	blt	r4,r2,4033b84 <__subdf3+0x5f4>
 4033a9c:	01000804 	movi	r4,32
 4033aa0:	2089c83a 	sub	r4,r4,r2
 4033aa4:	2912983a 	sll	r9,r5,r4
 4033aa8:	3090d83a 	srl	r8,r6,r2
 4033aac:	3108983a 	sll	r4,r6,r4
 4033ab0:	2884d83a 	srl	r2,r5,r2
 4033ab4:	4a12b03a 	or	r9,r9,r8
 4033ab8:	2008c03a 	cmpne	r4,r4,zero
 4033abc:	4912b03a 	or	r9,r9,r4
 4033ac0:	003f4e06 	br	40337fc <_gp+0xffff25fc>
 4033ac4:	1c48b03a 	or	r4,r3,r17
 4033ac8:	20003c26 	beq	r4,zero,4033bbc <__subdf3+0x62c>
 4033acc:	0084303a 	nor	r2,zero,r2
 4033ad0:	1000381e 	bne	r2,zero,4033bb4 <__subdf3+0x624>
 4033ad4:	3463c83a 	sub	r17,r6,r17
 4033ad8:	28c5c83a 	sub	r2,r5,r3
 4033adc:	344d803a 	cmpltu	r6,r6,r17
 4033ae0:	1187c83a 	sub	r3,r2,r6
 4033ae4:	4821883a 	mov	r16,r9
 4033ae8:	3825883a 	mov	r18,r7
 4033aec:	003f0606 	br	4033708 <_gp+0xffff2508>
 4033af0:	2023883a 	mov	r17,r4
 4033af4:	003f0906 	br	403371c <_gp+0xffff251c>
 4033af8:	0101ffc4 	movi	r4,2047
 4033afc:	813f3a1e 	bne	r16,r4,40337e8 <_gp+0xffff25e8>
 4033b00:	003ec406 	br	4033614 <_gp+0xffff2414>
 4033b04:	0005883a 	mov	r2,zero
 4033b08:	003fb106 	br	40339d0 <_gp+0xffff27d0>
 4033b0c:	0005883a 	mov	r2,zero
 4033b10:	003fbc06 	br	4033a04 <_gp+0xffff2804>
 4033b14:	1c44b03a 	or	r2,r3,r17
 4033b18:	80008e1e 	bne	r16,zero,4033d54 <__subdf3+0x7c4>
 4033b1c:	1000c826 	beq	r2,zero,4033e40 <__subdf3+0x8b0>
 4033b20:	2984b03a 	or	r2,r5,r6
 4033b24:	103ebb26 	beq	r2,zero,4033614 <_gp+0xffff2414>
 4033b28:	8989883a 	add	r4,r17,r6
 4033b2c:	1945883a 	add	r2,r3,r5
 4033b30:	2447803a 	cmpltu	r3,r4,r17
 4033b34:	1887883a 	add	r3,r3,r2
 4033b38:	1880202c 	andhi	r2,r3,128
 4033b3c:	2023883a 	mov	r17,r4
 4033b40:	103f1626 	beq	r2,zero,403379c <_gp+0xffff259c>
 4033b44:	00bfe034 	movhi	r2,65408
 4033b48:	10bfffc4 	addi	r2,r2,-1
 4033b4c:	5021883a 	mov	r16,r10
 4033b50:	1886703a 	and	r3,r3,r2
 4033b54:	003eaf06 	br	4033614 <_gp+0xffff2414>
 4033b58:	3825883a 	mov	r18,r7
 4033b5c:	003f0f06 	br	403379c <_gp+0xffff259c>
 4033b60:	1c44b03a 	or	r2,r3,r17
 4033b64:	8000251e 	bne	r16,zero,4033bfc <__subdf3+0x66c>
 4033b68:	1000661e 	bne	r2,zero,4033d04 <__subdf3+0x774>
 4033b6c:	2990b03a 	or	r8,r5,r6
 4033b70:	40009626 	beq	r8,zero,4033dcc <__subdf3+0x83c>
 4033b74:	2807883a 	mov	r3,r5
 4033b78:	3023883a 	mov	r17,r6
 4033b7c:	3825883a 	mov	r18,r7
 4033b80:	003ea406 	br	4033614 <_gp+0xffff2414>
 4033b84:	127ff804 	addi	r9,r2,-32
 4033b88:	01000804 	movi	r4,32
 4033b8c:	2a52d83a 	srl	r9,r5,r9
 4033b90:	11008c26 	beq	r2,r4,4033dc4 <__subdf3+0x834>
 4033b94:	01001004 	movi	r4,64
 4033b98:	2085c83a 	sub	r2,r4,r2
 4033b9c:	2884983a 	sll	r2,r5,r2
 4033ba0:	118cb03a 	or	r6,r2,r6
 4033ba4:	300cc03a 	cmpne	r6,r6,zero
 4033ba8:	4992b03a 	or	r9,r9,r6
 4033bac:	0005883a 	mov	r2,zero
 4033bb0:	003f1206 	br	40337fc <_gp+0xffff25fc>
 4033bb4:	0101ffc4 	movi	r4,2047
 4033bb8:	493f9c1e 	bne	r9,r4,4033a2c <_gp+0xffff282c>
 4033bbc:	2807883a 	mov	r3,r5
 4033bc0:	3023883a 	mov	r17,r6
 4033bc4:	4821883a 	mov	r16,r9
 4033bc8:	3825883a 	mov	r18,r7
 4033bcc:	003e9106 	br	4033614 <_gp+0xffff2414>
 4033bd0:	80001f1e 	bne	r16,zero,4033c50 <__subdf3+0x6c0>
 4033bd4:	1c48b03a 	or	r4,r3,r17
 4033bd8:	20005a26 	beq	r4,zero,4033d44 <__subdf3+0x7b4>
 4033bdc:	0084303a 	nor	r2,zero,r2
 4033be0:	1000561e 	bne	r2,zero,4033d3c <__subdf3+0x7ac>
 4033be4:	89a3883a 	add	r17,r17,r6
 4033be8:	1945883a 	add	r2,r3,r5
 4033bec:	898d803a 	cmpltu	r6,r17,r6
 4033bf0:	3087883a 	add	r3,r6,r2
 4033bf4:	4821883a 	mov	r16,r9
 4033bf8:	003f0506 	br	4033810 <_gp+0xffff2610>
 4033bfc:	10002b1e 	bne	r2,zero,4033cac <__subdf3+0x71c>
 4033c00:	2984b03a 	or	r2,r5,r6
 4033c04:	10008026 	beq	r2,zero,4033e08 <__subdf3+0x878>
 4033c08:	2807883a 	mov	r3,r5
 4033c0c:	3023883a 	mov	r17,r6
 4033c10:	3825883a 	mov	r18,r7
 4033c14:	0401ffc4 	movi	r16,2047
 4033c18:	003e7e06 	br	4033614 <_gp+0xffff2414>
 4033c1c:	3809883a 	mov	r4,r7
 4033c20:	0011883a 	mov	r8,zero
 4033c24:	0005883a 	mov	r2,zero
 4033c28:	003ee306 	br	40337b8 <_gp+0xffff25b8>
 4033c2c:	1c62b03a 	or	r17,r3,r17
 4033c30:	8822c03a 	cmpne	r17,r17,zero
 4033c34:	0005883a 	mov	r2,zero
 4033c38:	003f8906 	br	4033a60 <_gp+0xffff2860>
 4033c3c:	3809883a 	mov	r4,r7
 4033c40:	4821883a 	mov	r16,r9
 4033c44:	0011883a 	mov	r8,zero
 4033c48:	0005883a 	mov	r2,zero
 4033c4c:	003eda06 	br	40337b8 <_gp+0xffff25b8>
 4033c50:	0101ffc4 	movi	r4,2047
 4033c54:	49003b26 	beq	r9,r4,4033d44 <__subdf3+0x7b4>
 4033c58:	0085c83a 	sub	r2,zero,r2
 4033c5c:	18c02034 	orhi	r3,r3,128
 4033c60:	01000e04 	movi	r4,56
 4033c64:	20806e16 	blt	r4,r2,4033e20 <__subdf3+0x890>
 4033c68:	010007c4 	movi	r4,31
 4033c6c:	20807716 	blt	r4,r2,4033e4c <__subdf3+0x8bc>
 4033c70:	01000804 	movi	r4,32
 4033c74:	2089c83a 	sub	r4,r4,r2
 4033c78:	1914983a 	sll	r10,r3,r4
 4033c7c:	8890d83a 	srl	r8,r17,r2
 4033c80:	8908983a 	sll	r4,r17,r4
 4033c84:	1884d83a 	srl	r2,r3,r2
 4033c88:	5222b03a 	or	r17,r10,r8
 4033c8c:	2006c03a 	cmpne	r3,r4,zero
 4033c90:	88e2b03a 	or	r17,r17,r3
 4033c94:	89a3883a 	add	r17,r17,r6
 4033c98:	1145883a 	add	r2,r2,r5
 4033c9c:	898d803a 	cmpltu	r6,r17,r6
 4033ca0:	3087883a 	add	r3,r6,r2
 4033ca4:	4821883a 	mov	r16,r9
 4033ca8:	003ed906 	br	4033810 <_gp+0xffff2610>
 4033cac:	2984b03a 	or	r2,r5,r6
 4033cb0:	10004226 	beq	r2,zero,4033dbc <__subdf3+0x82c>
 4033cb4:	1808d0fa 	srli	r4,r3,3
 4033cb8:	8822d0fa 	srli	r17,r17,3
 4033cbc:	1806977a 	slli	r3,r3,29
 4033cc0:	2080022c 	andhi	r2,r4,8
 4033cc4:	1c62b03a 	or	r17,r3,r17
 4033cc8:	10000826 	beq	r2,zero,4033cec <__subdf3+0x75c>
 4033ccc:	2812d0fa 	srli	r9,r5,3
 4033cd0:	4880022c 	andhi	r2,r9,8
 4033cd4:	1000051e 	bne	r2,zero,4033cec <__subdf3+0x75c>
 4033cd8:	300cd0fa 	srli	r6,r6,3
 4033cdc:	2804977a 	slli	r2,r5,29
 4033ce0:	4809883a 	mov	r4,r9
 4033ce4:	3825883a 	mov	r18,r7
 4033ce8:	11a2b03a 	or	r17,r2,r6
 4033cec:	8806d77a 	srli	r3,r17,29
 4033cf0:	200890fa 	slli	r4,r4,3
 4033cf4:	882290fa 	slli	r17,r17,3
 4033cf8:	0401ffc4 	movi	r16,2047
 4033cfc:	1906b03a 	or	r3,r3,r4
 4033d00:	003e4406 	br	4033614 <_gp+0xffff2414>
 4033d04:	2984b03a 	or	r2,r5,r6
 4033d08:	103e4226 	beq	r2,zero,4033614 <_gp+0xffff2414>
 4033d0c:	8989c83a 	sub	r4,r17,r6
 4033d10:	8911803a 	cmpltu	r8,r17,r4
 4033d14:	1945c83a 	sub	r2,r3,r5
 4033d18:	1205c83a 	sub	r2,r2,r8
 4033d1c:	1200202c 	andhi	r8,r2,128
 4033d20:	403e9a26 	beq	r8,zero,403378c <_gp+0xffff258c>
 4033d24:	3463c83a 	sub	r17,r6,r17
 4033d28:	28c5c83a 	sub	r2,r5,r3
 4033d2c:	344d803a 	cmpltu	r6,r6,r17
 4033d30:	1187c83a 	sub	r3,r2,r6
 4033d34:	3825883a 	mov	r18,r7
 4033d38:	003e3606 	br	4033614 <_gp+0xffff2414>
 4033d3c:	0101ffc4 	movi	r4,2047
 4033d40:	493fc71e 	bne	r9,r4,4033c60 <_gp+0xffff2a60>
 4033d44:	2807883a 	mov	r3,r5
 4033d48:	3023883a 	mov	r17,r6
 4033d4c:	4821883a 	mov	r16,r9
 4033d50:	003e3006 	br	4033614 <_gp+0xffff2414>
 4033d54:	10003626 	beq	r2,zero,4033e30 <__subdf3+0x8a0>
 4033d58:	2984b03a 	or	r2,r5,r6
 4033d5c:	10001726 	beq	r2,zero,4033dbc <__subdf3+0x82c>
 4033d60:	1808d0fa 	srli	r4,r3,3
 4033d64:	8822d0fa 	srli	r17,r17,3
 4033d68:	1806977a 	slli	r3,r3,29
 4033d6c:	2080022c 	andhi	r2,r4,8
 4033d70:	1c62b03a 	or	r17,r3,r17
 4033d74:	10000726 	beq	r2,zero,4033d94 <__subdf3+0x804>
 4033d78:	2812d0fa 	srli	r9,r5,3
 4033d7c:	4880022c 	andhi	r2,r9,8
 4033d80:	1000041e 	bne	r2,zero,4033d94 <__subdf3+0x804>
 4033d84:	300cd0fa 	srli	r6,r6,3
 4033d88:	2804977a 	slli	r2,r5,29
 4033d8c:	4809883a 	mov	r4,r9
 4033d90:	11a2b03a 	or	r17,r2,r6
 4033d94:	8806d77a 	srli	r3,r17,29
 4033d98:	200890fa 	slli	r4,r4,3
 4033d9c:	882290fa 	slli	r17,r17,3
 4033da0:	3825883a 	mov	r18,r7
 4033da4:	1906b03a 	or	r3,r3,r4
 4033da8:	0401ffc4 	movi	r16,2047
 4033dac:	003e1906 	br	4033614 <_gp+0xffff2414>
 4033db0:	000b883a 	mov	r5,zero
 4033db4:	0005883a 	mov	r2,zero
 4033db8:	003e2e06 	br	4033674 <_gp+0xffff2474>
 4033dbc:	0401ffc4 	movi	r16,2047
 4033dc0:	003e1406 	br	4033614 <_gp+0xffff2414>
 4033dc4:	0005883a 	mov	r2,zero
 4033dc8:	003f7506 	br	4033ba0 <_gp+0xffff29a0>
 4033dcc:	0005883a 	mov	r2,zero
 4033dd0:	0009883a 	mov	r4,zero
 4033dd4:	003e7806 	br	40337b8 <_gp+0xffff25b8>
 4033dd8:	123ff804 	addi	r8,r2,-32
 4033ddc:	01000804 	movi	r4,32
 4033de0:	1a10d83a 	srl	r8,r3,r8
 4033de4:	11002526 	beq	r2,r4,4033e7c <__subdf3+0x8ec>
 4033de8:	01001004 	movi	r4,64
 4033dec:	2085c83a 	sub	r2,r4,r2
 4033df0:	1884983a 	sll	r2,r3,r2
 4033df4:	1444b03a 	or	r2,r2,r17
 4033df8:	1004c03a 	cmpne	r2,r2,zero
 4033dfc:	40a2b03a 	or	r17,r8,r2
 4033e00:	0005883a 	mov	r2,zero
 4033e04:	003f1606 	br	4033a60 <_gp+0xffff2860>
 4033e08:	02000434 	movhi	r8,16
 4033e0c:	0009883a 	mov	r4,zero
 4033e10:	423fffc4 	addi	r8,r8,-1
 4033e14:	00bfffc4 	movi	r2,-1
 4033e18:	0401ffc4 	movi	r16,2047
 4033e1c:	003e6606 	br	40337b8 <_gp+0xffff25b8>
 4033e20:	1c62b03a 	or	r17,r3,r17
 4033e24:	8822c03a 	cmpne	r17,r17,zero
 4033e28:	0005883a 	mov	r2,zero
 4033e2c:	003f9906 	br	4033c94 <_gp+0xffff2a94>
 4033e30:	2807883a 	mov	r3,r5
 4033e34:	3023883a 	mov	r17,r6
 4033e38:	0401ffc4 	movi	r16,2047
 4033e3c:	003df506 	br	4033614 <_gp+0xffff2414>
 4033e40:	2807883a 	mov	r3,r5
 4033e44:	3023883a 	mov	r17,r6
 4033e48:	003df206 	br	4033614 <_gp+0xffff2414>
 4033e4c:	123ff804 	addi	r8,r2,-32
 4033e50:	01000804 	movi	r4,32
 4033e54:	1a10d83a 	srl	r8,r3,r8
 4033e58:	11000a26 	beq	r2,r4,4033e84 <__subdf3+0x8f4>
 4033e5c:	01001004 	movi	r4,64
 4033e60:	2085c83a 	sub	r2,r4,r2
 4033e64:	1884983a 	sll	r2,r3,r2
 4033e68:	1444b03a 	or	r2,r2,r17
 4033e6c:	1004c03a 	cmpne	r2,r2,zero
 4033e70:	40a2b03a 	or	r17,r8,r2
 4033e74:	0005883a 	mov	r2,zero
 4033e78:	003f8606 	br	4033c94 <_gp+0xffff2a94>
 4033e7c:	0005883a 	mov	r2,zero
 4033e80:	003fdc06 	br	4033df4 <_gp+0xffff2bf4>
 4033e84:	0005883a 	mov	r2,zero
 4033e88:	003ff706 	br	4033e68 <_gp+0xffff2c68>

04033e8c <__fixdfsi>:
 4033e8c:	280cd53a 	srli	r6,r5,20
 4033e90:	00c00434 	movhi	r3,16
 4033e94:	18ffffc4 	addi	r3,r3,-1
 4033e98:	3181ffcc 	andi	r6,r6,2047
 4033e9c:	01c0ff84 	movi	r7,1022
 4033ea0:	28c6703a 	and	r3,r5,r3
 4033ea4:	280ad7fa 	srli	r5,r5,31
 4033ea8:	3980120e 	bge	r7,r6,4033ef4 <__fixdfsi+0x68>
 4033eac:	00810744 	movi	r2,1053
 4033eb0:	11800c16 	blt	r2,r6,4033ee4 <__fixdfsi+0x58>
 4033eb4:	00810cc4 	movi	r2,1075
 4033eb8:	1185c83a 	sub	r2,r2,r6
 4033ebc:	01c007c4 	movi	r7,31
 4033ec0:	18c00434 	orhi	r3,r3,16
 4033ec4:	38800d16 	blt	r7,r2,4033efc <__fixdfsi+0x70>
 4033ec8:	31befb44 	addi	r6,r6,-1043
 4033ecc:	2084d83a 	srl	r2,r4,r2
 4033ed0:	1986983a 	sll	r3,r3,r6
 4033ed4:	1884b03a 	or	r2,r3,r2
 4033ed8:	28000726 	beq	r5,zero,4033ef8 <__fixdfsi+0x6c>
 4033edc:	0085c83a 	sub	r2,zero,r2
 4033ee0:	f800283a 	ret
 4033ee4:	00a00034 	movhi	r2,32768
 4033ee8:	10bfffc4 	addi	r2,r2,-1
 4033eec:	2885883a 	add	r2,r5,r2
 4033ef0:	f800283a 	ret
 4033ef4:	0005883a 	mov	r2,zero
 4033ef8:	f800283a 	ret
 4033efc:	008104c4 	movi	r2,1043
 4033f00:	1185c83a 	sub	r2,r2,r6
 4033f04:	1884d83a 	srl	r2,r3,r2
 4033f08:	003ff306 	br	4033ed8 <_gp+0xffff2cd8>

04033f0c <__floatunsidf>:
 4033f0c:	defffe04 	addi	sp,sp,-8
 4033f10:	dc000015 	stw	r16,0(sp)
 4033f14:	dfc00115 	stw	ra,4(sp)
 4033f18:	2021883a 	mov	r16,r4
 4033f1c:	20002226 	beq	r4,zero,4033fa8 <__floatunsidf+0x9c>
 4033f20:	4023fc00 	call	4023fc0 <__clzsi2>
 4033f24:	01010784 	movi	r4,1054
 4033f28:	2089c83a 	sub	r4,r4,r2
 4033f2c:	01810cc4 	movi	r6,1075
 4033f30:	310dc83a 	sub	r6,r6,r4
 4033f34:	00c007c4 	movi	r3,31
 4033f38:	1980120e 	bge	r3,r6,4033f84 <__floatunsidf+0x78>
 4033f3c:	00c104c4 	movi	r3,1043
 4033f40:	1907c83a 	sub	r3,r3,r4
 4033f44:	80ca983a 	sll	r5,r16,r3
 4033f48:	00800434 	movhi	r2,16
 4033f4c:	10bfffc4 	addi	r2,r2,-1
 4033f50:	2101ffcc 	andi	r4,r4,2047
 4033f54:	0021883a 	mov	r16,zero
 4033f58:	288a703a 	and	r5,r5,r2
 4033f5c:	2008953a 	slli	r4,r4,20
 4033f60:	00c00434 	movhi	r3,16
 4033f64:	18ffffc4 	addi	r3,r3,-1
 4033f68:	28c6703a 	and	r3,r5,r3
 4033f6c:	8005883a 	mov	r2,r16
 4033f70:	1906b03a 	or	r3,r3,r4
 4033f74:	dfc00117 	ldw	ra,4(sp)
 4033f78:	dc000017 	ldw	r16,0(sp)
 4033f7c:	dec00204 	addi	sp,sp,8
 4033f80:	f800283a 	ret
 4033f84:	00c002c4 	movi	r3,11
 4033f88:	188bc83a 	sub	r5,r3,r2
 4033f8c:	814ad83a 	srl	r5,r16,r5
 4033f90:	00c00434 	movhi	r3,16
 4033f94:	18ffffc4 	addi	r3,r3,-1
 4033f98:	81a0983a 	sll	r16,r16,r6
 4033f9c:	2101ffcc 	andi	r4,r4,2047
 4033fa0:	28ca703a 	and	r5,r5,r3
 4033fa4:	003fed06 	br	4033f5c <_gp+0xffff2d5c>
 4033fa8:	0009883a 	mov	r4,zero
 4033fac:	000b883a 	mov	r5,zero
 4033fb0:	003fea06 	br	4033f5c <_gp+0xffff2d5c>

04033fb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4033fb4:	defffe04 	addi	sp,sp,-8
 4033fb8:	dfc00115 	stw	ra,4(sp)
 4033fbc:	df000015 	stw	fp,0(sp)
 4033fc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4033fc4:	d0a00b17 	ldw	r2,-32724(gp)
 4033fc8:	10000326 	beq	r2,zero,4033fd8 <alt_get_errno+0x24>
 4033fcc:	d0a00b17 	ldw	r2,-32724(gp)
 4033fd0:	103ee83a 	callr	r2
 4033fd4:	00000106 	br	4033fdc <alt_get_errno+0x28>
 4033fd8:	d0a6cc04 	addi	r2,gp,-25808
}
 4033fdc:	e037883a 	mov	sp,fp
 4033fe0:	dfc00117 	ldw	ra,4(sp)
 4033fe4:	df000017 	ldw	fp,0(sp)
 4033fe8:	dec00204 	addi	sp,sp,8
 4033fec:	f800283a 	ret

04033ff0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 4033ff0:	defffb04 	addi	sp,sp,-20
 4033ff4:	dfc00415 	stw	ra,16(sp)
 4033ff8:	df000315 	stw	fp,12(sp)
 4033ffc:	df000304 	addi	fp,sp,12
 4034000:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 4034004:	e0bfff17 	ldw	r2,-4(fp)
 4034008:	10000616 	blt	r2,zero,4034024 <close+0x34>
 403400c:	e0bfff17 	ldw	r2,-4(fp)
 4034010:	10c00324 	muli	r3,r2,12
 4034014:	00810134 	movhi	r2,1028
 4034018:	10a00804 	addi	r2,r2,-32736
 403401c:	1885883a 	add	r2,r3,r2
 4034020:	00000106 	br	4034028 <close+0x38>
 4034024:	0005883a 	mov	r2,zero
 4034028:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 403402c:	e0bffd17 	ldw	r2,-12(fp)
 4034030:	10001926 	beq	r2,zero,4034098 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 4034034:	e0bffd17 	ldw	r2,-12(fp)
 4034038:	10800017 	ldw	r2,0(r2)
 403403c:	10800417 	ldw	r2,16(r2)
 4034040:	10000626 	beq	r2,zero,403405c <close+0x6c>
 4034044:	e0bffd17 	ldw	r2,-12(fp)
 4034048:	10800017 	ldw	r2,0(r2)
 403404c:	10800417 	ldw	r2,16(r2)
 4034050:	e13ffd17 	ldw	r4,-12(fp)
 4034054:	103ee83a 	callr	r2
 4034058:	00000106 	br	4034060 <close+0x70>
 403405c:	0005883a 	mov	r2,zero
 4034060:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 4034064:	e13fff17 	ldw	r4,-4(fp)
 4034068:	4034b6c0 	call	4034b6c <alt_release_fd>
    if (rval < 0)
 403406c:	e0bffe17 	ldw	r2,-8(fp)
 4034070:	1000070e 	bge	r2,zero,4034090 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 4034074:	4033fb40 	call	4033fb4 <alt_get_errno>
 4034078:	1007883a 	mov	r3,r2
 403407c:	e0bffe17 	ldw	r2,-8(fp)
 4034080:	0085c83a 	sub	r2,zero,r2
 4034084:	18800015 	stw	r2,0(r3)
      return -1;
 4034088:	00bfffc4 	movi	r2,-1
 403408c:	00000706 	br	40340ac <close+0xbc>
    }
    return 0;
 4034090:	0005883a 	mov	r2,zero
 4034094:	00000506 	br	40340ac <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4034098:	4033fb40 	call	4033fb4 <alt_get_errno>
 403409c:	1007883a 	mov	r3,r2
 40340a0:	00801444 	movi	r2,81
 40340a4:	18800015 	stw	r2,0(r3)
    return -1;
 40340a8:	00bfffc4 	movi	r2,-1
  }
}
 40340ac:	e037883a 	mov	sp,fp
 40340b0:	dfc00117 	ldw	ra,4(sp)
 40340b4:	df000017 	ldw	fp,0(sp)
 40340b8:	dec00204 	addi	sp,sp,8
 40340bc:	f800283a 	ret

040340c0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 40340c0:	defffc04 	addi	sp,sp,-16
 40340c4:	df000315 	stw	fp,12(sp)
 40340c8:	df000304 	addi	fp,sp,12
 40340cc:	e13ffd15 	stw	r4,-12(fp)
 40340d0:	e17ffe15 	stw	r5,-8(fp)
 40340d4:	e1bfff15 	stw	r6,-4(fp)
  return len;
 40340d8:	e0bfff17 	ldw	r2,-4(fp)
}
 40340dc:	e037883a 	mov	sp,fp
 40340e0:	df000017 	ldw	fp,0(sp)
 40340e4:	dec00104 	addi	sp,sp,4
 40340e8:	f800283a 	ret

040340ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40340ec:	defffe04 	addi	sp,sp,-8
 40340f0:	dfc00115 	stw	ra,4(sp)
 40340f4:	df000015 	stw	fp,0(sp)
 40340f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40340fc:	d0a00b17 	ldw	r2,-32724(gp)
 4034100:	10000326 	beq	r2,zero,4034110 <alt_get_errno+0x24>
 4034104:	d0a00b17 	ldw	r2,-32724(gp)
 4034108:	103ee83a 	callr	r2
 403410c:	00000106 	br	4034114 <alt_get_errno+0x28>
 4034110:	d0a6cc04 	addi	r2,gp,-25808
}
 4034114:	e037883a 	mov	sp,fp
 4034118:	dfc00117 	ldw	ra,4(sp)
 403411c:	df000017 	ldw	fp,0(sp)
 4034120:	dec00204 	addi	sp,sp,8
 4034124:	f800283a 	ret

04034128 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 4034128:	defffb04 	addi	sp,sp,-20
 403412c:	dfc00415 	stw	ra,16(sp)
 4034130:	df000315 	stw	fp,12(sp)
 4034134:	df000304 	addi	fp,sp,12
 4034138:	e13ffe15 	stw	r4,-8(fp)
 403413c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4034140:	e0bffe17 	ldw	r2,-8(fp)
 4034144:	10000616 	blt	r2,zero,4034160 <fstat+0x38>
 4034148:	e0bffe17 	ldw	r2,-8(fp)
 403414c:	10c00324 	muli	r3,r2,12
 4034150:	00810134 	movhi	r2,1028
 4034154:	10a00804 	addi	r2,r2,-32736
 4034158:	1885883a 	add	r2,r3,r2
 403415c:	00000106 	br	4034164 <fstat+0x3c>
 4034160:	0005883a 	mov	r2,zero
 4034164:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 4034168:	e0bffd17 	ldw	r2,-12(fp)
 403416c:	10001026 	beq	r2,zero,40341b0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 4034170:	e0bffd17 	ldw	r2,-12(fp)
 4034174:	10800017 	ldw	r2,0(r2)
 4034178:	10800817 	ldw	r2,32(r2)
 403417c:	10000726 	beq	r2,zero,403419c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 4034180:	e0bffd17 	ldw	r2,-12(fp)
 4034184:	10800017 	ldw	r2,0(r2)
 4034188:	10800817 	ldw	r2,32(r2)
 403418c:	e17fff17 	ldw	r5,-4(fp)
 4034190:	e13ffd17 	ldw	r4,-12(fp)
 4034194:	103ee83a 	callr	r2
 4034198:	00000a06 	br	40341c4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 403419c:	e0bfff17 	ldw	r2,-4(fp)
 40341a0:	00c80004 	movi	r3,8192
 40341a4:	10c00115 	stw	r3,4(r2)
      return 0;
 40341a8:	0005883a 	mov	r2,zero
 40341ac:	00000506 	br	40341c4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 40341b0:	40340ec0 	call	40340ec <alt_get_errno>
 40341b4:	1007883a 	mov	r3,r2
 40341b8:	00801444 	movi	r2,81
 40341bc:	18800015 	stw	r2,0(r3)
    return -1;
 40341c0:	00bfffc4 	movi	r2,-1
  }
}
 40341c4:	e037883a 	mov	sp,fp
 40341c8:	dfc00117 	ldw	ra,4(sp)
 40341cc:	df000017 	ldw	fp,0(sp)
 40341d0:	dec00204 	addi	sp,sp,8
 40341d4:	f800283a 	ret

040341d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40341d8:	defffe04 	addi	sp,sp,-8
 40341dc:	dfc00115 	stw	ra,4(sp)
 40341e0:	df000015 	stw	fp,0(sp)
 40341e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40341e8:	d0a00b17 	ldw	r2,-32724(gp)
 40341ec:	10000326 	beq	r2,zero,40341fc <alt_get_errno+0x24>
 40341f0:	d0a00b17 	ldw	r2,-32724(gp)
 40341f4:	103ee83a 	callr	r2
 40341f8:	00000106 	br	4034200 <alt_get_errno+0x28>
 40341fc:	d0a6cc04 	addi	r2,gp,-25808
}
 4034200:	e037883a 	mov	sp,fp
 4034204:	dfc00117 	ldw	ra,4(sp)
 4034208:	df000017 	ldw	fp,0(sp)
 403420c:	dec00204 	addi	sp,sp,8
 4034210:	f800283a 	ret

04034214 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 4034214:	deffed04 	addi	sp,sp,-76
 4034218:	dfc01215 	stw	ra,72(sp)
 403421c:	df001115 	stw	fp,68(sp)
 4034220:	df001104 	addi	fp,sp,68
 4034224:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4034228:	e0bfff17 	ldw	r2,-4(fp)
 403422c:	10000616 	blt	r2,zero,4034248 <isatty+0x34>
 4034230:	e0bfff17 	ldw	r2,-4(fp)
 4034234:	10c00324 	muli	r3,r2,12
 4034238:	00810134 	movhi	r2,1028
 403423c:	10a00804 	addi	r2,r2,-32736
 4034240:	1885883a 	add	r2,r3,r2
 4034244:	00000106 	br	403424c <isatty+0x38>
 4034248:	0005883a 	mov	r2,zero
 403424c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 4034250:	e0bfef17 	ldw	r2,-68(fp)
 4034254:	10000e26 	beq	r2,zero,4034290 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 4034258:	e0bfef17 	ldw	r2,-68(fp)
 403425c:	10800017 	ldw	r2,0(r2)
 4034260:	10800817 	ldw	r2,32(r2)
 4034264:	1000021e 	bne	r2,zero,4034270 <isatty+0x5c>
    {
      return 1;
 4034268:	00800044 	movi	r2,1
 403426c:	00000d06 	br	40342a4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 4034270:	e0bff004 	addi	r2,fp,-64
 4034274:	100b883a 	mov	r5,r2
 4034278:	e13fff17 	ldw	r4,-4(fp)
 403427c:	40341280 	call	4034128 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 4034280:	e0bff117 	ldw	r2,-60(fp)
 4034284:	10880020 	cmpeqi	r2,r2,8192
 4034288:	10803fcc 	andi	r2,r2,255
 403428c:	00000506 	br	40342a4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 4034290:	40341d80 	call	40341d8 <alt_get_errno>
 4034294:	1007883a 	mov	r3,r2
 4034298:	00801444 	movi	r2,81
 403429c:	18800015 	stw	r2,0(r3)
    return 0;
 40342a0:	0005883a 	mov	r2,zero
  }
}
 40342a4:	e037883a 	mov	sp,fp
 40342a8:	dfc00117 	ldw	ra,4(sp)
 40342ac:	df000017 	ldw	fp,0(sp)
 40342b0:	dec00204 	addi	sp,sp,8
 40342b4:	f800283a 	ret

040342b8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 40342b8:	defffc04 	addi	sp,sp,-16
 40342bc:	df000315 	stw	fp,12(sp)
 40342c0:	df000304 	addi	fp,sp,12
 40342c4:	e13ffd15 	stw	r4,-12(fp)
 40342c8:	e17ffe15 	stw	r5,-8(fp)
 40342cc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 40342d0:	e0fffe17 	ldw	r3,-8(fp)
 40342d4:	e0bffd17 	ldw	r2,-12(fp)
 40342d8:	18800c26 	beq	r3,r2,403430c <alt_load_section+0x54>
  {
    while( to != end )
 40342dc:	00000806 	br	4034300 <alt_load_section+0x48>
    {
      *to++ = *from++;
 40342e0:	e0bffe17 	ldw	r2,-8(fp)
 40342e4:	10c00104 	addi	r3,r2,4
 40342e8:	e0fffe15 	stw	r3,-8(fp)
 40342ec:	e0fffd17 	ldw	r3,-12(fp)
 40342f0:	19000104 	addi	r4,r3,4
 40342f4:	e13ffd15 	stw	r4,-12(fp)
 40342f8:	18c00017 	ldw	r3,0(r3)
 40342fc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 4034300:	e0fffe17 	ldw	r3,-8(fp)
 4034304:	e0bfff17 	ldw	r2,-4(fp)
 4034308:	18bff51e 	bne	r3,r2,40342e0 <_gp+0xffff30e0>
    {
      *to++ = *from++;
    }
  }
}
 403430c:	0001883a 	nop
 4034310:	e037883a 	mov	sp,fp
 4034314:	df000017 	ldw	fp,0(sp)
 4034318:	dec00104 	addi	sp,sp,4
 403431c:	f800283a 	ret

04034320 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 4034320:	defffe04 	addi	sp,sp,-8
 4034324:	dfc00115 	stw	ra,4(sp)
 4034328:	df000015 	stw	fp,0(sp)
 403432c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 4034330:	01810134 	movhi	r6,1028
 4034334:	31a49004 	addi	r6,r6,-28096
 4034338:	014100f4 	movhi	r5,1027
 403433c:	295dd504 	addi	r5,r5,30548
 4034340:	01010134 	movhi	r4,1028
 4034344:	21249004 	addi	r4,r4,-28096
 4034348:	40342b80 	call	40342b8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 403434c:	018100b4 	movhi	r6,1026
 4034350:	31809104 	addi	r6,r6,580
 4034354:	014100b4 	movhi	r5,1026
 4034358:	29400804 	addi	r5,r5,32
 403435c:	010100b4 	movhi	r4,1026
 4034360:	21000804 	addi	r4,r4,32
 4034364:	40342b80 	call	40342b8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 4034368:	018100f4 	movhi	r6,1027
 403436c:	319dd504 	addi	r6,r6,30548
 4034370:	014100f4 	movhi	r5,1027
 4034374:	295c0e04 	addi	r5,r5,28728
 4034378:	010100f4 	movhi	r4,1027
 403437c:	211c0e04 	addi	r4,r4,28728
 4034380:	40342b80 	call	40342b8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 4034384:	4035fa00 	call	4035fa0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 4034388:	40363c40 	call	40363c4 <alt_icache_flush_all>
}
 403438c:	0001883a 	nop
 4034390:	e037883a 	mov	sp,fp
 4034394:	dfc00117 	ldw	ra,4(sp)
 4034398:	df000017 	ldw	fp,0(sp)
 403439c:	dec00204 	addi	sp,sp,8
 40343a0:	f800283a 	ret

040343a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40343a4:	defffe04 	addi	sp,sp,-8
 40343a8:	dfc00115 	stw	ra,4(sp)
 40343ac:	df000015 	stw	fp,0(sp)
 40343b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40343b4:	d0a00b17 	ldw	r2,-32724(gp)
 40343b8:	10000326 	beq	r2,zero,40343c8 <alt_get_errno+0x24>
 40343bc:	d0a00b17 	ldw	r2,-32724(gp)
 40343c0:	103ee83a 	callr	r2
 40343c4:	00000106 	br	40343cc <alt_get_errno+0x28>
 40343c8:	d0a6cc04 	addi	r2,gp,-25808
}
 40343cc:	e037883a 	mov	sp,fp
 40343d0:	dfc00117 	ldw	ra,4(sp)
 40343d4:	df000017 	ldw	fp,0(sp)
 40343d8:	dec00204 	addi	sp,sp,8
 40343dc:	f800283a 	ret

040343e0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 40343e0:	defff904 	addi	sp,sp,-28
 40343e4:	dfc00615 	stw	ra,24(sp)
 40343e8:	df000515 	stw	fp,20(sp)
 40343ec:	df000504 	addi	fp,sp,20
 40343f0:	e13ffd15 	stw	r4,-12(fp)
 40343f4:	e17ffe15 	stw	r5,-8(fp)
 40343f8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 40343fc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4034400:	e0bffd17 	ldw	r2,-12(fp)
 4034404:	10000616 	blt	r2,zero,4034420 <lseek+0x40>
 4034408:	e0bffd17 	ldw	r2,-12(fp)
 403440c:	10c00324 	muli	r3,r2,12
 4034410:	00810134 	movhi	r2,1028
 4034414:	10a00804 	addi	r2,r2,-32736
 4034418:	1885883a 	add	r2,r3,r2
 403441c:	00000106 	br	4034424 <lseek+0x44>
 4034420:	0005883a 	mov	r2,zero
 4034424:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 4034428:	e0bffc17 	ldw	r2,-16(fp)
 403442c:	10001026 	beq	r2,zero,4034470 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 4034430:	e0bffc17 	ldw	r2,-16(fp)
 4034434:	10800017 	ldw	r2,0(r2)
 4034438:	10800717 	ldw	r2,28(r2)
 403443c:	10000926 	beq	r2,zero,4034464 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 4034440:	e0bffc17 	ldw	r2,-16(fp)
 4034444:	10800017 	ldw	r2,0(r2)
 4034448:	10800717 	ldw	r2,28(r2)
 403444c:	e1bfff17 	ldw	r6,-4(fp)
 4034450:	e17ffe17 	ldw	r5,-8(fp)
 4034454:	e13ffc17 	ldw	r4,-16(fp)
 4034458:	103ee83a 	callr	r2
 403445c:	e0bffb15 	stw	r2,-20(fp)
 4034460:	00000506 	br	4034478 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 4034464:	00bfde84 	movi	r2,-134
 4034468:	e0bffb15 	stw	r2,-20(fp)
 403446c:	00000206 	br	4034478 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 4034470:	00bfebc4 	movi	r2,-81
 4034474:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 4034478:	e0bffb17 	ldw	r2,-20(fp)
 403447c:	1000070e 	bge	r2,zero,403449c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 4034480:	40343a40 	call	40343a4 <alt_get_errno>
 4034484:	1007883a 	mov	r3,r2
 4034488:	e0bffb17 	ldw	r2,-20(fp)
 403448c:	0085c83a 	sub	r2,zero,r2
 4034490:	18800015 	stw	r2,0(r3)
    rc = -1;
 4034494:	00bfffc4 	movi	r2,-1
 4034498:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 403449c:	e0bffb17 	ldw	r2,-20(fp)
}
 40344a0:	e037883a 	mov	sp,fp
 40344a4:	dfc00117 	ldw	ra,4(sp)
 40344a8:	df000017 	ldw	fp,0(sp)
 40344ac:	dec00204 	addi	sp,sp,8
 40344b0:	f800283a 	ret

040344b4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 40344b4:	defffd04 	addi	sp,sp,-12
 40344b8:	dfc00215 	stw	ra,8(sp)
 40344bc:	df000115 	stw	fp,4(sp)
 40344c0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 40344c4:	0009883a 	mov	r4,zero
 40344c8:	4034e180 	call	4034e18 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 40344cc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 40344d0:	4034e500 	call	4034e50 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 40344d4:	018100f4 	movhi	r6,1027
 40344d8:	319d8d04 	addi	r6,r6,30260
 40344dc:	014100f4 	movhi	r5,1027
 40344e0:	295d8d04 	addi	r5,r5,30260
 40344e4:	010100f4 	movhi	r4,1027
 40344e8:	211d8d04 	addi	r4,r4,30260
 40344ec:	403675c0 	call	403675c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 40344f0:	40360c80 	call	40360c8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 40344f4:	010100f4 	movhi	r4,1027
 40344f8:	21184a04 	addi	r4,r4,24872
 40344fc:	4036acc0 	call	4036acc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 4034500:	d0a6d317 	ldw	r2,-25780(gp)
 4034504:	d0e6d417 	ldw	r3,-25776(gp)
 4034508:	d126d517 	ldw	r4,-25772(gp)
 403450c:	200d883a 	mov	r6,r4
 4034510:	180b883a 	mov	r5,r3
 4034514:	1009883a 	mov	r4,r2
 4034518:	4021d780 	call	4021d78 <main>
 403451c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 4034520:	01000044 	movi	r4,1
 4034524:	4033ff00 	call	4033ff0 <close>
  exit (result);
 4034528:	e13fff17 	ldw	r4,-4(fp)
 403452c:	4036ae00 	call	4036ae0 <exit>

04034530 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 4034530:	defffe04 	addi	sp,sp,-8
 4034534:	df000115 	stw	fp,4(sp)
 4034538:	df000104 	addi	fp,sp,4
 403453c:	e13fff15 	stw	r4,-4(fp)
}
 4034540:	0001883a 	nop
 4034544:	e037883a 	mov	sp,fp
 4034548:	df000017 	ldw	fp,0(sp)
 403454c:	dec00104 	addi	sp,sp,4
 4034550:	f800283a 	ret

04034554 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 4034554:	defffe04 	addi	sp,sp,-8
 4034558:	df000115 	stw	fp,4(sp)
 403455c:	df000104 	addi	fp,sp,4
 4034560:	e13fff15 	stw	r4,-4(fp)
}
 4034564:	0001883a 	nop
 4034568:	e037883a 	mov	sp,fp
 403456c:	df000017 	ldw	fp,0(sp)
 4034570:	dec00104 	addi	sp,sp,4
 4034574:	f800283a 	ret

04034578 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4034578:	defffe04 	addi	sp,sp,-8
 403457c:	dfc00115 	stw	ra,4(sp)
 4034580:	df000015 	stw	fp,0(sp)
 4034584:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4034588:	d0a00b17 	ldw	r2,-32724(gp)
 403458c:	10000326 	beq	r2,zero,403459c <alt_get_errno+0x24>
 4034590:	d0a00b17 	ldw	r2,-32724(gp)
 4034594:	103ee83a 	callr	r2
 4034598:	00000106 	br	40345a0 <alt_get_errno+0x28>
 403459c:	d0a6cc04 	addi	r2,gp,-25808
}
 40345a0:	e037883a 	mov	sp,fp
 40345a4:	dfc00117 	ldw	ra,4(sp)
 40345a8:	df000017 	ldw	fp,0(sp)
 40345ac:	dec00204 	addi	sp,sp,8
 40345b0:	f800283a 	ret

040345b4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 40345b4:	defffd04 	addi	sp,sp,-12
 40345b8:	df000215 	stw	fp,8(sp)
 40345bc:	df000204 	addi	fp,sp,8
 40345c0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 40345c4:	e0bfff17 	ldw	r2,-4(fp)
 40345c8:	10800217 	ldw	r2,8(r2)
 40345cc:	10d00034 	orhi	r3,r2,16384
 40345d0:	e0bfff17 	ldw	r2,-4(fp)
 40345d4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 40345d8:	e03ffe15 	stw	zero,-8(fp)
 40345dc:	00001d06 	br	4034654 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 40345e0:	00810134 	movhi	r2,1028
 40345e4:	10a00804 	addi	r2,r2,-32736
 40345e8:	e0fffe17 	ldw	r3,-8(fp)
 40345ec:	18c00324 	muli	r3,r3,12
 40345f0:	10c5883a 	add	r2,r2,r3
 40345f4:	10c00017 	ldw	r3,0(r2)
 40345f8:	e0bfff17 	ldw	r2,-4(fp)
 40345fc:	10800017 	ldw	r2,0(r2)
 4034600:	1880111e 	bne	r3,r2,4034648 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4034604:	00810134 	movhi	r2,1028
 4034608:	10a00804 	addi	r2,r2,-32736
 403460c:	e0fffe17 	ldw	r3,-8(fp)
 4034610:	18c00324 	muli	r3,r3,12
 4034614:	10c5883a 	add	r2,r2,r3
 4034618:	10800204 	addi	r2,r2,8
 403461c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4034620:	1000090e 	bge	r2,zero,4034648 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 4034624:	e0bffe17 	ldw	r2,-8(fp)
 4034628:	10c00324 	muli	r3,r2,12
 403462c:	00810134 	movhi	r2,1028
 4034630:	10a00804 	addi	r2,r2,-32736
 4034634:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4034638:	e0bfff17 	ldw	r2,-4(fp)
 403463c:	18800226 	beq	r3,r2,4034648 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 4034640:	00bffcc4 	movi	r2,-13
 4034644:	00000806 	br	4034668 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4034648:	e0bffe17 	ldw	r2,-8(fp)
 403464c:	10800044 	addi	r2,r2,1
 4034650:	e0bffe15 	stw	r2,-8(fp)
 4034654:	d0a00a17 	ldw	r2,-32728(gp)
 4034658:	1007883a 	mov	r3,r2
 403465c:	e0bffe17 	ldw	r2,-8(fp)
 4034660:	18bfdf2e 	bgeu	r3,r2,40345e0 <_gp+0xffff33e0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 4034664:	0005883a 	mov	r2,zero
}
 4034668:	e037883a 	mov	sp,fp
 403466c:	df000017 	ldw	fp,0(sp)
 4034670:	dec00104 	addi	sp,sp,4
 4034674:	f800283a 	ret

04034678 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4034678:	defff604 	addi	sp,sp,-40
 403467c:	dfc00915 	stw	ra,36(sp)
 4034680:	df000815 	stw	fp,32(sp)
 4034684:	df000804 	addi	fp,sp,32
 4034688:	e13ffd15 	stw	r4,-12(fp)
 403468c:	e17ffe15 	stw	r5,-8(fp)
 4034690:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4034694:	00bfffc4 	movi	r2,-1
 4034698:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 403469c:	00bffb44 	movi	r2,-19
 40346a0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 40346a4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 40346a8:	d1600804 	addi	r5,gp,-32736
 40346ac:	e13ffd17 	ldw	r4,-12(fp)
 40346b0:	40361880 	call	4036188 <alt_find_dev>
 40346b4:	e0bff815 	stw	r2,-32(fp)
 40346b8:	e0bff817 	ldw	r2,-32(fp)
 40346bc:	1000051e 	bne	r2,zero,40346d4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 40346c0:	e13ffd17 	ldw	r4,-12(fp)
 40346c4:	40362180 	call	4036218 <alt_find_file>
 40346c8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 40346cc:	00800044 	movi	r2,1
 40346d0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 40346d4:	e0bff817 	ldw	r2,-32(fp)
 40346d8:	10002926 	beq	r2,zero,4034780 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 40346dc:	e13ff817 	ldw	r4,-32(fp)
 40346e0:	40363200 	call	4036320 <alt_get_fd>
 40346e4:	e0bff915 	stw	r2,-28(fp)
 40346e8:	e0bff917 	ldw	r2,-28(fp)
 40346ec:	1000030e 	bge	r2,zero,40346fc <open+0x84>
    {
      status = index;
 40346f0:	e0bff917 	ldw	r2,-28(fp)
 40346f4:	e0bffa15 	stw	r2,-24(fp)
 40346f8:	00002306 	br	4034788 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 40346fc:	e0bff917 	ldw	r2,-28(fp)
 4034700:	10c00324 	muli	r3,r2,12
 4034704:	00810134 	movhi	r2,1028
 4034708:	10a00804 	addi	r2,r2,-32736
 403470c:	1885883a 	add	r2,r3,r2
 4034710:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 4034714:	e0fffe17 	ldw	r3,-8(fp)
 4034718:	00900034 	movhi	r2,16384
 403471c:	10bfffc4 	addi	r2,r2,-1
 4034720:	1886703a 	and	r3,r3,r2
 4034724:	e0bffc17 	ldw	r2,-16(fp)
 4034728:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 403472c:	e0bffb17 	ldw	r2,-20(fp)
 4034730:	1000051e 	bne	r2,zero,4034748 <open+0xd0>
 4034734:	e13ffc17 	ldw	r4,-16(fp)
 4034738:	40345b40 	call	40345b4 <alt_file_locked>
 403473c:	e0bffa15 	stw	r2,-24(fp)
 4034740:	e0bffa17 	ldw	r2,-24(fp)
 4034744:	10001016 	blt	r2,zero,4034788 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4034748:	e0bff817 	ldw	r2,-32(fp)
 403474c:	10800317 	ldw	r2,12(r2)
 4034750:	10000826 	beq	r2,zero,4034774 <open+0xfc>
 4034754:	e0bff817 	ldw	r2,-32(fp)
 4034758:	10800317 	ldw	r2,12(r2)
 403475c:	e1ffff17 	ldw	r7,-4(fp)
 4034760:	e1bffe17 	ldw	r6,-8(fp)
 4034764:	e17ffd17 	ldw	r5,-12(fp)
 4034768:	e13ffc17 	ldw	r4,-16(fp)
 403476c:	103ee83a 	callr	r2
 4034770:	00000106 	br	4034778 <open+0x100>
 4034774:	0005883a 	mov	r2,zero
 4034778:	e0bffa15 	stw	r2,-24(fp)
 403477c:	00000206 	br	4034788 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 4034780:	00bffb44 	movi	r2,-19
 4034784:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4034788:	e0bffa17 	ldw	r2,-24(fp)
 403478c:	1000090e 	bge	r2,zero,40347b4 <open+0x13c>
  {
    alt_release_fd (index);  
 4034790:	e13ff917 	ldw	r4,-28(fp)
 4034794:	4034b6c0 	call	4034b6c <alt_release_fd>
    ALT_ERRNO = -status;
 4034798:	40345780 	call	4034578 <alt_get_errno>
 403479c:	1007883a 	mov	r3,r2
 40347a0:	e0bffa17 	ldw	r2,-24(fp)
 40347a4:	0085c83a 	sub	r2,zero,r2
 40347a8:	18800015 	stw	r2,0(r3)
    return -1;
 40347ac:	00bfffc4 	movi	r2,-1
 40347b0:	00000106 	br	40347b8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 40347b4:	e0bff917 	ldw	r2,-28(fp)
}
 40347b8:	e037883a 	mov	sp,fp
 40347bc:	dfc00117 	ldw	ra,4(sp)
 40347c0:	df000017 	ldw	fp,0(sp)
 40347c4:	dec00204 	addi	sp,sp,8
 40347c8:	f800283a 	ret

040347cc <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
 40347cc:	defff204 	addi	sp,sp,-56
 40347d0:	dfc00a15 	stw	ra,40(sp)
 40347d4:	df000915 	stw	fp,36(sp)
 40347d8:	df000904 	addi	fp,sp,36
 40347dc:	e13fff15 	stw	r4,-4(fp)
 40347e0:	e1400215 	stw	r5,8(fp)
 40347e4:	e1800315 	stw	r6,12(fp)
 40347e8:	e1c00415 	stw	r7,16(fp)
	va_list args;
	va_start(args, fmt);
 40347ec:	e0800204 	addi	r2,fp,8
 40347f0:	e0bffe15 	stw	r2,-8(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
 40347f4:	e0bfff17 	ldw	r2,-4(fp)
 40347f8:	e0bff715 	stw	r2,-36(fp)
    while ((c = *w++) != 0)
 40347fc:	00006f06 	br	40349bc <alt_printf+0x1f0>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
 4034800:	e0bff807 	ldb	r2,-32(fp)
 4034804:	10800960 	cmpeqi	r2,r2,37
 4034808:	1000041e 	bne	r2,zero,403481c <alt_printf+0x50>
        {
            alt_putchar(c);
 403480c:	e0bff807 	ldb	r2,-32(fp)
 4034810:	1009883a 	mov	r4,r2
 4034814:	40349f80 	call	40349f8 <alt_putchar>
 4034818:	00006806 	br	40349bc <alt_printf+0x1f0>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
 403481c:	e0bff717 	ldw	r2,-36(fp)
 4034820:	10c00044 	addi	r3,r2,1
 4034824:	e0fff715 	stw	r3,-36(fp)
 4034828:	10800003 	ldbu	r2,0(r2)
 403482c:	e0bff805 	stb	r2,-32(fp)
 4034830:	e0bff807 	ldb	r2,-32(fp)
 4034834:	10006926 	beq	r2,zero,40349dc <alt_printf+0x210>
            {
                if (c == '%')
 4034838:	e0bff807 	ldb	r2,-32(fp)
 403483c:	10800958 	cmpnei	r2,r2,37
 4034840:	1000041e 	bne	r2,zero,4034854 <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
 4034844:	e0bff807 	ldb	r2,-32(fp)
 4034848:	1009883a 	mov	r4,r2
 403484c:	40349f80 	call	40349f8 <alt_putchar>
 4034850:	00005a06 	br	40349bc <alt_printf+0x1f0>
                } 
                else if (c == 'c')
 4034854:	e0bff807 	ldb	r2,-32(fp)
 4034858:	108018d8 	cmpnei	r2,r2,99
 403485c:	1000081e 	bne	r2,zero,4034880 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
 4034860:	e0bffe17 	ldw	r2,-8(fp)
 4034864:	10c00104 	addi	r3,r2,4
 4034868:	e0fffe15 	stw	r3,-8(fp)
 403486c:	10800017 	ldw	r2,0(r2)
 4034870:	e0bffd15 	stw	r2,-12(fp)
                    alt_putchar(v);
 4034874:	e13ffd17 	ldw	r4,-12(fp)
 4034878:	40349f80 	call	40349f8 <alt_putchar>
 403487c:	00004f06 	br	40349bc <alt_printf+0x1f0>
                }
                else if (c == 'x')
 4034880:	e0bff807 	ldb	r2,-32(fp)
 4034884:	10801e18 	cmpnei	r2,r2,120
 4034888:	1000341e 	bne	r2,zero,403495c <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
 403488c:	e0bffe17 	ldw	r2,-8(fp)
 4034890:	10c00104 	addi	r3,r2,4
 4034894:	e0fffe15 	stw	r3,-8(fp)
 4034898:	10800017 	ldw	r2,0(r2)
 403489c:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
 40348a0:	e0bffb17 	ldw	r2,-20(fp)
 40348a4:	1000031e 	bne	r2,zero,40348b4 <alt_printf+0xe8>
                    {
                        alt_putchar('0');
 40348a8:	01000c04 	movi	r4,48
 40348ac:	40349f80 	call	40349f8 <alt_putchar>
                        continue;
 40348b0:	00004206 	br	40349bc <alt_printf+0x1f0>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
 40348b4:	00800704 	movi	r2,28
 40348b8:	e0bff915 	stw	r2,-28(fp)
                    while (!(v & (0xF << digit_shift)))
 40348bc:	00000306 	br	40348cc <alt_printf+0x100>
                        digit_shift -= 4;
 40348c0:	e0bff917 	ldw	r2,-28(fp)
 40348c4:	10bfff04 	addi	r2,r2,-4
 40348c8:	e0bff915 	stw	r2,-28(fp)
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
 40348cc:	00c003c4 	movi	r3,15
 40348d0:	e0bff917 	ldw	r2,-28(fp)
 40348d4:	1884983a 	sll	r2,r3,r2
 40348d8:	1007883a 	mov	r3,r2
 40348dc:	e0bffb17 	ldw	r2,-20(fp)
 40348e0:	1884703a 	and	r2,r3,r2
 40348e4:	103ff626 	beq	r2,zero,40348c0 <_gp+0xffff36c0>
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 40348e8:	00001906 	br	4034950 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
 40348ec:	00c003c4 	movi	r3,15
 40348f0:	e0bff917 	ldw	r2,-28(fp)
 40348f4:	1884983a 	sll	r2,r3,r2
 40348f8:	1007883a 	mov	r3,r2
 40348fc:	e0bffb17 	ldw	r2,-20(fp)
 4034900:	1886703a 	and	r3,r3,r2
 4034904:	e0bff917 	ldw	r2,-28(fp)
 4034908:	1884d83a 	srl	r2,r3,r2
 403490c:	e0bffc15 	stw	r2,-16(fp)
                        if (digit <= 9)
 4034910:	e0bffc17 	ldw	r2,-16(fp)
 4034914:	108002a8 	cmpgeui	r2,r2,10
 4034918:	1000041e 	bne	r2,zero,403492c <alt_printf+0x160>
                            c = '0' + digit;
 403491c:	e0bffc17 	ldw	r2,-16(fp)
 4034920:	10800c04 	addi	r2,r2,48
 4034924:	e0bff805 	stb	r2,-32(fp)
 4034928:	00000306 	br	4034938 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
 403492c:	e0bffc17 	ldw	r2,-16(fp)
 4034930:	108015c4 	addi	r2,r2,87
 4034934:	e0bff805 	stb	r2,-32(fp)
                        alt_putchar(c);
 4034938:	e0bff807 	ldb	r2,-32(fp)
 403493c:	1009883a 	mov	r4,r2
 4034940:	40349f80 	call	40349f8 <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 4034944:	e0bff917 	ldw	r2,-28(fp)
 4034948:	10bfff04 	addi	r2,r2,-4
 403494c:	e0bff915 	stw	r2,-28(fp)
 4034950:	e0bff917 	ldw	r2,-28(fp)
 4034954:	103fe50e 	bge	r2,zero,40348ec <_gp+0xffff36ec>
 4034958:	00001806 	br	40349bc <alt_printf+0x1f0>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
 403495c:	e0bff807 	ldb	r2,-32(fp)
 4034960:	10801cd8 	cmpnei	r2,r2,115
 4034964:	1000151e 	bne	r2,zero,40349bc <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
 4034968:	e0bffe17 	ldw	r2,-8(fp)
 403496c:	10c00104 	addi	r3,r2,4
 4034970:	e0fffe15 	stw	r3,-8(fp)
 4034974:	10800017 	ldw	r2,0(r2)
 4034978:	e0bffa15 	stw	r2,-24(fp)

                    while(*s)
 403497c:	00000906 	br	40349a4 <alt_printf+0x1d8>
                      alt_putchar(*s++);
 4034980:	e0bffa17 	ldw	r2,-24(fp)
 4034984:	10c00044 	addi	r3,r2,1
 4034988:	e0fffa15 	stw	r3,-24(fp)
 403498c:	10800003 	ldbu	r2,0(r2)
 4034990:	10803fcc 	andi	r2,r2,255
 4034994:	1080201c 	xori	r2,r2,128
 4034998:	10bfe004 	addi	r2,r2,-128
 403499c:	1009883a 	mov	r4,r2
 40349a0:	40349f80 	call	40349f8 <alt_putchar>
                else if (c == 's')
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);

                    while(*s)
 40349a4:	e0bffa17 	ldw	r2,-24(fp)
 40349a8:	10800003 	ldbu	r2,0(r2)
 40349ac:	10803fcc 	andi	r2,r2,255
 40349b0:	1080201c 	xori	r2,r2,128
 40349b4:	10bfe004 	addi	r2,r2,-128
 40349b8:	103ff11e 	bne	r2,zero,4034980 <_gp+0xffff3780>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
 40349bc:	e0bff717 	ldw	r2,-36(fp)
 40349c0:	10c00044 	addi	r3,r2,1
 40349c4:	e0fff715 	stw	r3,-36(fp)
 40349c8:	10800003 	ldbu	r2,0(r2)
 40349cc:	e0bff805 	stb	r2,-32(fp)
 40349d0:	e0bff807 	ldb	r2,-32(fp)
 40349d4:	103f8a1e 	bne	r2,zero,4034800 <_gp+0xffff3600>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
 40349d8:	00000106 	br	40349e0 <alt_printf+0x214>
                      alt_putchar(*s++);
                }
            }
            else
            {
                break;
 40349dc:	0001883a 	nop
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
 40349e0:	0001883a 	nop
 40349e4:	e037883a 	mov	sp,fp
 40349e8:	dfc00117 	ldw	ra,4(sp)
 40349ec:	df000017 	ldw	fp,0(sp)
 40349f0:	dec00504 	addi	sp,sp,20
 40349f4:	f800283a 	ret

040349f8 <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
 40349f8:	defffd04 	addi	sp,sp,-12
 40349fc:	dfc00215 	stw	ra,8(sp)
 4034a00:	df000115 	stw	fp,4(sp)
 4034a04:	df000104 	addi	fp,sp,4
 4034a08:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
 4034a0c:	d0a00117 	ldw	r2,-32764(gp)
 4034a10:	10800217 	ldw	r2,8(r2)
 4034a14:	100b883a 	mov	r5,r2
 4034a18:	e13fff17 	ldw	r4,-4(fp)
 4034a1c:	4036c340 	call	4036c34 <putc>
#endif
#endif
}
 4034a20:	e037883a 	mov	sp,fp
 4034a24:	dfc00117 	ldw	ra,4(sp)
 4034a28:	df000017 	ldw	fp,0(sp)
 4034a2c:	dec00204 	addi	sp,sp,8
 4034a30:	f800283a 	ret

04034a34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4034a34:	defffe04 	addi	sp,sp,-8
 4034a38:	dfc00115 	stw	ra,4(sp)
 4034a3c:	df000015 	stw	fp,0(sp)
 4034a40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4034a44:	d0a00b17 	ldw	r2,-32724(gp)
 4034a48:	10000326 	beq	r2,zero,4034a58 <alt_get_errno+0x24>
 4034a4c:	d0a00b17 	ldw	r2,-32724(gp)
 4034a50:	103ee83a 	callr	r2
 4034a54:	00000106 	br	4034a5c <alt_get_errno+0x28>
 4034a58:	d0a6cc04 	addi	r2,gp,-25808
}
 4034a5c:	e037883a 	mov	sp,fp
 4034a60:	dfc00117 	ldw	ra,4(sp)
 4034a64:	df000017 	ldw	fp,0(sp)
 4034a68:	dec00204 	addi	sp,sp,8
 4034a6c:	f800283a 	ret

04034a70 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 4034a70:	defff904 	addi	sp,sp,-28
 4034a74:	dfc00615 	stw	ra,24(sp)
 4034a78:	df000515 	stw	fp,20(sp)
 4034a7c:	df000504 	addi	fp,sp,20
 4034a80:	e13ffd15 	stw	r4,-12(fp)
 4034a84:	e17ffe15 	stw	r5,-8(fp)
 4034a88:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4034a8c:	e0bffd17 	ldw	r2,-12(fp)
 4034a90:	10000616 	blt	r2,zero,4034aac <read+0x3c>
 4034a94:	e0bffd17 	ldw	r2,-12(fp)
 4034a98:	10c00324 	muli	r3,r2,12
 4034a9c:	00810134 	movhi	r2,1028
 4034aa0:	10a00804 	addi	r2,r2,-32736
 4034aa4:	1885883a 	add	r2,r3,r2
 4034aa8:	00000106 	br	4034ab0 <read+0x40>
 4034aac:	0005883a 	mov	r2,zero
 4034ab0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4034ab4:	e0bffb17 	ldw	r2,-20(fp)
 4034ab8:	10002226 	beq	r2,zero,4034b44 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4034abc:	e0bffb17 	ldw	r2,-20(fp)
 4034ac0:	10800217 	ldw	r2,8(r2)
 4034ac4:	108000cc 	andi	r2,r2,3
 4034ac8:	10800060 	cmpeqi	r2,r2,1
 4034acc:	1000181e 	bne	r2,zero,4034b30 <read+0xc0>
        (fd->dev->read))
 4034ad0:	e0bffb17 	ldw	r2,-20(fp)
 4034ad4:	10800017 	ldw	r2,0(r2)
 4034ad8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4034adc:	10001426 	beq	r2,zero,4034b30 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 4034ae0:	e0bffb17 	ldw	r2,-20(fp)
 4034ae4:	10800017 	ldw	r2,0(r2)
 4034ae8:	10800517 	ldw	r2,20(r2)
 4034aec:	e0ffff17 	ldw	r3,-4(fp)
 4034af0:	180d883a 	mov	r6,r3
 4034af4:	e17ffe17 	ldw	r5,-8(fp)
 4034af8:	e13ffb17 	ldw	r4,-20(fp)
 4034afc:	103ee83a 	callr	r2
 4034b00:	e0bffc15 	stw	r2,-16(fp)
 4034b04:	e0bffc17 	ldw	r2,-16(fp)
 4034b08:	1000070e 	bge	r2,zero,4034b28 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 4034b0c:	4034a340 	call	4034a34 <alt_get_errno>
 4034b10:	1007883a 	mov	r3,r2
 4034b14:	e0bffc17 	ldw	r2,-16(fp)
 4034b18:	0085c83a 	sub	r2,zero,r2
 4034b1c:	18800015 	stw	r2,0(r3)
          return -1;
 4034b20:	00bfffc4 	movi	r2,-1
 4034b24:	00000c06 	br	4034b58 <read+0xe8>
        }
        return rval;
 4034b28:	e0bffc17 	ldw	r2,-16(fp)
 4034b2c:	00000a06 	br	4034b58 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 4034b30:	4034a340 	call	4034a34 <alt_get_errno>
 4034b34:	1007883a 	mov	r3,r2
 4034b38:	00800344 	movi	r2,13
 4034b3c:	18800015 	stw	r2,0(r3)
 4034b40:	00000406 	br	4034b54 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 4034b44:	4034a340 	call	4034a34 <alt_get_errno>
 4034b48:	1007883a 	mov	r3,r2
 4034b4c:	00801444 	movi	r2,81
 4034b50:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4034b54:	00bfffc4 	movi	r2,-1
}
 4034b58:	e037883a 	mov	sp,fp
 4034b5c:	dfc00117 	ldw	ra,4(sp)
 4034b60:	df000017 	ldw	fp,0(sp)
 4034b64:	dec00204 	addi	sp,sp,8
 4034b68:	f800283a 	ret

04034b6c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 4034b6c:	defffe04 	addi	sp,sp,-8
 4034b70:	df000115 	stw	fp,4(sp)
 4034b74:	df000104 	addi	fp,sp,4
 4034b78:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 4034b7c:	e0bfff17 	ldw	r2,-4(fp)
 4034b80:	108000d0 	cmplti	r2,r2,3
 4034b84:	10000d1e 	bne	r2,zero,4034bbc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 4034b88:	00810134 	movhi	r2,1028
 4034b8c:	10a00804 	addi	r2,r2,-32736
 4034b90:	e0ffff17 	ldw	r3,-4(fp)
 4034b94:	18c00324 	muli	r3,r3,12
 4034b98:	10c5883a 	add	r2,r2,r3
 4034b9c:	10800204 	addi	r2,r2,8
 4034ba0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 4034ba4:	00810134 	movhi	r2,1028
 4034ba8:	10a00804 	addi	r2,r2,-32736
 4034bac:	e0ffff17 	ldw	r3,-4(fp)
 4034bb0:	18c00324 	muli	r3,r3,12
 4034bb4:	10c5883a 	add	r2,r2,r3
 4034bb8:	10000015 	stw	zero,0(r2)
  }
}
 4034bbc:	0001883a 	nop
 4034bc0:	e037883a 	mov	sp,fp
 4034bc4:	df000017 	ldw	fp,0(sp)
 4034bc8:	dec00104 	addi	sp,sp,4
 4034bcc:	f800283a 	ret

04034bd0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 4034bd0:	defff904 	addi	sp,sp,-28
 4034bd4:	df000615 	stw	fp,24(sp)
 4034bd8:	df000604 	addi	fp,sp,24
 4034bdc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4034be0:	0005303a 	rdctl	r2,status
 4034be4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4034be8:	e0fffe17 	ldw	r3,-8(fp)
 4034bec:	00bfff84 	movi	r2,-2
 4034bf0:	1884703a 	and	r2,r3,r2
 4034bf4:	1001703a 	wrctl	status,r2
  
  return context;
 4034bf8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 4034bfc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 4034c00:	d0a00c17 	ldw	r2,-32720(gp)
 4034c04:	10c000c4 	addi	r3,r2,3
 4034c08:	00bfff04 	movi	r2,-4
 4034c0c:	1884703a 	and	r2,r3,r2
 4034c10:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 4034c14:	d0e00c17 	ldw	r3,-32720(gp)
 4034c18:	e0bfff17 	ldw	r2,-4(fp)
 4034c1c:	1887883a 	add	r3,r3,r2
 4034c20:	00810134 	movhi	r2,1028
 4034c24:	10800004 	addi	r2,r2,0
 4034c28:	10c0062e 	bgeu	r2,r3,4034c44 <sbrk+0x74>
 4034c2c:	e0bffb17 	ldw	r2,-20(fp)
 4034c30:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4034c34:	e0bffa17 	ldw	r2,-24(fp)
 4034c38:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 4034c3c:	00bfffc4 	movi	r2,-1
 4034c40:	00000b06 	br	4034c70 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 4034c44:	d0a00c17 	ldw	r2,-32720(gp)
 4034c48:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 4034c4c:	d0e00c17 	ldw	r3,-32720(gp)
 4034c50:	e0bfff17 	ldw	r2,-4(fp)
 4034c54:	1885883a 	add	r2,r3,r2
 4034c58:	d0a00c15 	stw	r2,-32720(gp)
 4034c5c:	e0bffb17 	ldw	r2,-20(fp)
 4034c60:	e0bffc15 	stw	r2,-16(fp)
 4034c64:	e0bffc17 	ldw	r2,-16(fp)
 4034c68:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 4034c6c:	e0bffd17 	ldw	r2,-12(fp)
} 
 4034c70:	e037883a 	mov	sp,fp
 4034c74:	df000017 	ldw	fp,0(sp)
 4034c78:	dec00104 	addi	sp,sp,4
 4034c7c:	f800283a 	ret

04034c80 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 4034c80:	defffd04 	addi	sp,sp,-12
 4034c84:	dfc00215 	stw	ra,8(sp)
 4034c88:	df000115 	stw	fp,4(sp)
 4034c8c:	df000104 	addi	fp,sp,4
 4034c90:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 4034c94:	e13fff17 	ldw	r4,-4(fp)
 4034c98:	4035e480 	call	4035e48 <alt_busy_sleep>
}
 4034c9c:	e037883a 	mov	sp,fp
 4034ca0:	dfc00117 	ldw	ra,4(sp)
 4034ca4:	df000017 	ldw	fp,0(sp)
 4034ca8:	dec00204 	addi	sp,sp,8
 4034cac:	f800283a 	ret

04034cb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4034cb0:	defffe04 	addi	sp,sp,-8
 4034cb4:	dfc00115 	stw	ra,4(sp)
 4034cb8:	df000015 	stw	fp,0(sp)
 4034cbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4034cc0:	d0a00b17 	ldw	r2,-32724(gp)
 4034cc4:	10000326 	beq	r2,zero,4034cd4 <alt_get_errno+0x24>
 4034cc8:	d0a00b17 	ldw	r2,-32724(gp)
 4034ccc:	103ee83a 	callr	r2
 4034cd0:	00000106 	br	4034cd8 <alt_get_errno+0x28>
 4034cd4:	d0a6cc04 	addi	r2,gp,-25808
}
 4034cd8:	e037883a 	mov	sp,fp
 4034cdc:	dfc00117 	ldw	ra,4(sp)
 4034ce0:	df000017 	ldw	fp,0(sp)
 4034ce4:	dec00204 	addi	sp,sp,8
 4034ce8:	f800283a 	ret

04034cec <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 4034cec:	defff904 	addi	sp,sp,-28
 4034cf0:	dfc00615 	stw	ra,24(sp)
 4034cf4:	df000515 	stw	fp,20(sp)
 4034cf8:	df000504 	addi	fp,sp,20
 4034cfc:	e13ffd15 	stw	r4,-12(fp)
 4034d00:	e17ffe15 	stw	r5,-8(fp)
 4034d04:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4034d08:	e0bffd17 	ldw	r2,-12(fp)
 4034d0c:	10000616 	blt	r2,zero,4034d28 <write+0x3c>
 4034d10:	e0bffd17 	ldw	r2,-12(fp)
 4034d14:	10c00324 	muli	r3,r2,12
 4034d18:	00810134 	movhi	r2,1028
 4034d1c:	10a00804 	addi	r2,r2,-32736
 4034d20:	1885883a 	add	r2,r3,r2
 4034d24:	00000106 	br	4034d2c <write+0x40>
 4034d28:	0005883a 	mov	r2,zero
 4034d2c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4034d30:	e0bffb17 	ldw	r2,-20(fp)
 4034d34:	10002126 	beq	r2,zero,4034dbc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 4034d38:	e0bffb17 	ldw	r2,-20(fp)
 4034d3c:	10800217 	ldw	r2,8(r2)
 4034d40:	108000cc 	andi	r2,r2,3
 4034d44:	10001826 	beq	r2,zero,4034da8 <write+0xbc>
 4034d48:	e0bffb17 	ldw	r2,-20(fp)
 4034d4c:	10800017 	ldw	r2,0(r2)
 4034d50:	10800617 	ldw	r2,24(r2)
 4034d54:	10001426 	beq	r2,zero,4034da8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 4034d58:	e0bffb17 	ldw	r2,-20(fp)
 4034d5c:	10800017 	ldw	r2,0(r2)
 4034d60:	10800617 	ldw	r2,24(r2)
 4034d64:	e0ffff17 	ldw	r3,-4(fp)
 4034d68:	180d883a 	mov	r6,r3
 4034d6c:	e17ffe17 	ldw	r5,-8(fp)
 4034d70:	e13ffb17 	ldw	r4,-20(fp)
 4034d74:	103ee83a 	callr	r2
 4034d78:	e0bffc15 	stw	r2,-16(fp)
 4034d7c:	e0bffc17 	ldw	r2,-16(fp)
 4034d80:	1000070e 	bge	r2,zero,4034da0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 4034d84:	4034cb00 	call	4034cb0 <alt_get_errno>
 4034d88:	1007883a 	mov	r3,r2
 4034d8c:	e0bffc17 	ldw	r2,-16(fp)
 4034d90:	0085c83a 	sub	r2,zero,r2
 4034d94:	18800015 	stw	r2,0(r3)
        return -1;
 4034d98:	00bfffc4 	movi	r2,-1
 4034d9c:	00000c06 	br	4034dd0 <write+0xe4>
      }
      return rval;
 4034da0:	e0bffc17 	ldw	r2,-16(fp)
 4034da4:	00000a06 	br	4034dd0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 4034da8:	4034cb00 	call	4034cb0 <alt_get_errno>
 4034dac:	1007883a 	mov	r3,r2
 4034db0:	00800344 	movi	r2,13
 4034db4:	18800015 	stw	r2,0(r3)
 4034db8:	00000406 	br	4034dcc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 4034dbc:	4034cb00 	call	4034cb0 <alt_get_errno>
 4034dc0:	1007883a 	mov	r3,r2
 4034dc4:	00801444 	movi	r2,81
 4034dc8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4034dcc:	00bfffc4 	movi	r2,-1
}
 4034dd0:	e037883a 	mov	sp,fp
 4034dd4:	dfc00117 	ldw	ra,4(sp)
 4034dd8:	df000017 	ldw	fp,0(sp)
 4034ddc:	dec00204 	addi	sp,sp,8
 4034de0:	f800283a 	ret

04034de4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 4034de4:	defffd04 	addi	sp,sp,-12
 4034de8:	dfc00215 	stw	ra,8(sp)
 4034dec:	df000115 	stw	fp,4(sp)
 4034df0:	df000104 	addi	fp,sp,4
 4034df4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 4034df8:	d1600804 	addi	r5,gp,-32736
 4034dfc:	e13fff17 	ldw	r4,-4(fp)
 4034e00:	40360240 	call	4036024 <alt_dev_llist_insert>
}
 4034e04:	e037883a 	mov	sp,fp
 4034e08:	dfc00117 	ldw	ra,4(sp)
 4034e0c:	df000017 	ldw	fp,0(sp)
 4034e10:	dec00204 	addi	sp,sp,8
 4034e14:	f800283a 	ret

04034e18 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 4034e18:	defffd04 	addi	sp,sp,-12
 4034e1c:	dfc00215 	stw	ra,8(sp)
 4034e20:	df000115 	stw	fp,4(sp)
 4034e24:	df000104 	addi	fp,sp,4
 4034e28:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS, Nios);
 4034e2c:	403697c0 	call	403697c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 4034e30:	00800044 	movi	r2,1
 4034e34:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 4034e38:	0001883a 	nop
 4034e3c:	e037883a 	mov	sp,fp
 4034e40:	dfc00117 	ldw	ra,4(sp)
 4034e44:	df000017 	ldw	fp,0(sp)
 4034e48:	dec00204 	addi	sp,sp,8
 4034e4c:	f800283a 	ret

04034e50 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 4034e50:	defffe04 	addi	sp,sp,-8
 4034e54:	dfc00115 	stw	ra,4(sp)
 4034e58:	df000015 	stw	fp,0(sp)
 4034e5c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
 4034e60:	01800044 	movi	r6,1
 4034e64:	000b883a 	mov	r5,zero
 4034e68:	01010134 	movhi	r4,1028
 4034e6c:	21207204 	addi	r4,r4,-32312
 4034e70:	403500c0 	call	403500c <altera_avalon_jtag_uart_init>
 4034e74:	01010134 	movhi	r4,1028
 4034e78:	21206804 	addi	r4,r4,-32352
 4034e7c:	4034de40 	call	4034de4 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER, Performance_Counter);
 4034e80:	00c00044 	movi	r3,1
 4034e84:	00810134 	movhi	r2,1028
 4034e88:	10840004 	addi	r2,r2,4096
 4034e8c:	10c00035 	stwio	r3,0(r2)
}
 4034e90:	0001883a 	nop
 4034e94:	e037883a 	mov	sp,fp
 4034e98:	dfc00117 	ldw	ra,4(sp)
 4034e9c:	df000017 	ldw	fp,0(sp)
 4034ea0:	dec00204 	addi	sp,sp,8
 4034ea4:	f800283a 	ret

04034ea8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 4034ea8:	defffa04 	addi	sp,sp,-24
 4034eac:	dfc00515 	stw	ra,20(sp)
 4034eb0:	df000415 	stw	fp,16(sp)
 4034eb4:	df000404 	addi	fp,sp,16
 4034eb8:	e13ffd15 	stw	r4,-12(fp)
 4034ebc:	e17ffe15 	stw	r5,-8(fp)
 4034ec0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4034ec4:	e0bffd17 	ldw	r2,-12(fp)
 4034ec8:	10800017 	ldw	r2,0(r2)
 4034ecc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 4034ed0:	e0bffc17 	ldw	r2,-16(fp)
 4034ed4:	10c00a04 	addi	r3,r2,40
 4034ed8:	e0bffd17 	ldw	r2,-12(fp)
 4034edc:	10800217 	ldw	r2,8(r2)
 4034ee0:	100f883a 	mov	r7,r2
 4034ee4:	e1bfff17 	ldw	r6,-4(fp)
 4034ee8:	e17ffe17 	ldw	r5,-8(fp)
 4034eec:	1809883a 	mov	r4,r3
 4034ef0:	40354d00 	call	40354d0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 4034ef4:	e037883a 	mov	sp,fp
 4034ef8:	dfc00117 	ldw	ra,4(sp)
 4034efc:	df000017 	ldw	fp,0(sp)
 4034f00:	dec00204 	addi	sp,sp,8
 4034f04:	f800283a 	ret

04034f08 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 4034f08:	defffa04 	addi	sp,sp,-24
 4034f0c:	dfc00515 	stw	ra,20(sp)
 4034f10:	df000415 	stw	fp,16(sp)
 4034f14:	df000404 	addi	fp,sp,16
 4034f18:	e13ffd15 	stw	r4,-12(fp)
 4034f1c:	e17ffe15 	stw	r5,-8(fp)
 4034f20:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4034f24:	e0bffd17 	ldw	r2,-12(fp)
 4034f28:	10800017 	ldw	r2,0(r2)
 4034f2c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 4034f30:	e0bffc17 	ldw	r2,-16(fp)
 4034f34:	10c00a04 	addi	r3,r2,40
 4034f38:	e0bffd17 	ldw	r2,-12(fp)
 4034f3c:	10800217 	ldw	r2,8(r2)
 4034f40:	100f883a 	mov	r7,r2
 4034f44:	e1bfff17 	ldw	r6,-4(fp)
 4034f48:	e17ffe17 	ldw	r5,-8(fp)
 4034f4c:	1809883a 	mov	r4,r3
 4034f50:	40356ec0 	call	40356ec <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 4034f54:	e037883a 	mov	sp,fp
 4034f58:	dfc00117 	ldw	ra,4(sp)
 4034f5c:	df000017 	ldw	fp,0(sp)
 4034f60:	dec00204 	addi	sp,sp,8
 4034f64:	f800283a 	ret

04034f68 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 4034f68:	defffc04 	addi	sp,sp,-16
 4034f6c:	dfc00315 	stw	ra,12(sp)
 4034f70:	df000215 	stw	fp,8(sp)
 4034f74:	df000204 	addi	fp,sp,8
 4034f78:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4034f7c:	e0bfff17 	ldw	r2,-4(fp)
 4034f80:	10800017 	ldw	r2,0(r2)
 4034f84:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 4034f88:	e0bffe17 	ldw	r2,-8(fp)
 4034f8c:	10c00a04 	addi	r3,r2,40
 4034f90:	e0bfff17 	ldw	r2,-4(fp)
 4034f94:	10800217 	ldw	r2,8(r2)
 4034f98:	100b883a 	mov	r5,r2
 4034f9c:	1809883a 	mov	r4,r3
 4034fa0:	40353780 	call	4035378 <altera_avalon_jtag_uart_close>
}
 4034fa4:	e037883a 	mov	sp,fp
 4034fa8:	dfc00117 	ldw	ra,4(sp)
 4034fac:	df000017 	ldw	fp,0(sp)
 4034fb0:	dec00204 	addi	sp,sp,8
 4034fb4:	f800283a 	ret

04034fb8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 4034fb8:	defffa04 	addi	sp,sp,-24
 4034fbc:	dfc00515 	stw	ra,20(sp)
 4034fc0:	df000415 	stw	fp,16(sp)
 4034fc4:	df000404 	addi	fp,sp,16
 4034fc8:	e13ffd15 	stw	r4,-12(fp)
 4034fcc:	e17ffe15 	stw	r5,-8(fp)
 4034fd0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 4034fd4:	e0bffd17 	ldw	r2,-12(fp)
 4034fd8:	10800017 	ldw	r2,0(r2)
 4034fdc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 4034fe0:	e0bffc17 	ldw	r2,-16(fp)
 4034fe4:	10800a04 	addi	r2,r2,40
 4034fe8:	e1bfff17 	ldw	r6,-4(fp)
 4034fec:	e17ffe17 	ldw	r5,-8(fp)
 4034ff0:	1009883a 	mov	r4,r2
 4034ff4:	40353e00 	call	40353e0 <altera_avalon_jtag_uart_ioctl>
}
 4034ff8:	e037883a 	mov	sp,fp
 4034ffc:	dfc00117 	ldw	ra,4(sp)
 4035000:	df000017 	ldw	fp,0(sp)
 4035004:	dec00204 	addi	sp,sp,8
 4035008:	f800283a 	ret

0403500c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 403500c:	defffa04 	addi	sp,sp,-24
 4035010:	dfc00515 	stw	ra,20(sp)
 4035014:	df000415 	stw	fp,16(sp)
 4035018:	df000404 	addi	fp,sp,16
 403501c:	e13ffd15 	stw	r4,-12(fp)
 4035020:	e17ffe15 	stw	r5,-8(fp)
 4035024:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 4035028:	e0bffd17 	ldw	r2,-12(fp)
 403502c:	00c00044 	movi	r3,1
 4035030:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 4035034:	e0bffd17 	ldw	r2,-12(fp)
 4035038:	10800017 	ldw	r2,0(r2)
 403503c:	10800104 	addi	r2,r2,4
 4035040:	1007883a 	mov	r3,r2
 4035044:	e0bffd17 	ldw	r2,-12(fp)
 4035048:	10800817 	ldw	r2,32(r2)
 403504c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 4035050:	e0bffe17 	ldw	r2,-8(fp)
 4035054:	e0ffff17 	ldw	r3,-4(fp)
 4035058:	d8000015 	stw	zero,0(sp)
 403505c:	e1fffd17 	ldw	r7,-12(fp)
 4035060:	018100f4 	movhi	r6,1027
 4035064:	31943304 	addi	r6,r6,20684
 4035068:	180b883a 	mov	r5,r3
 403506c:	1009883a 	mov	r4,r2
 4035070:	40363f80 	call	40363f8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 4035074:	e0bffd17 	ldw	r2,-12(fp)
 4035078:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 403507c:	e0bffd17 	ldw	r2,-12(fp)
 4035080:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 4035084:	d0e6d717 	ldw	r3,-25764(gp)
 4035088:	e1fffd17 	ldw	r7,-12(fp)
 403508c:	018100f4 	movhi	r6,1027
 4035090:	3194b604 	addi	r6,r6,21208
 4035094:	180b883a 	mov	r5,r3
 4035098:	1009883a 	mov	r4,r2
 403509c:	4035d1c0 	call	4035d1c <alt_alarm_start>
 40350a0:	1000040e 	bge	r2,zero,40350b4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 40350a4:	e0fffd17 	ldw	r3,-12(fp)
 40350a8:	00a00034 	movhi	r2,32768
 40350ac:	10bfffc4 	addi	r2,r2,-1
 40350b0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 40350b4:	0001883a 	nop
 40350b8:	e037883a 	mov	sp,fp
 40350bc:	dfc00117 	ldw	ra,4(sp)
 40350c0:	df000017 	ldw	fp,0(sp)
 40350c4:	dec00204 	addi	sp,sp,8
 40350c8:	f800283a 	ret

040350cc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 40350cc:	defff804 	addi	sp,sp,-32
 40350d0:	df000715 	stw	fp,28(sp)
 40350d4:	df000704 	addi	fp,sp,28
 40350d8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 40350dc:	e0bfff17 	ldw	r2,-4(fp)
 40350e0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 40350e4:	e0bffb17 	ldw	r2,-20(fp)
 40350e8:	10800017 	ldw	r2,0(r2)
 40350ec:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40350f0:	e0bffc17 	ldw	r2,-16(fp)
 40350f4:	10800104 	addi	r2,r2,4
 40350f8:	10800037 	ldwio	r2,0(r2)
 40350fc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 4035100:	e0bffd17 	ldw	r2,-12(fp)
 4035104:	1080c00c 	andi	r2,r2,768
 4035108:	10006d26 	beq	r2,zero,40352c0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 403510c:	e0bffd17 	ldw	r2,-12(fp)
 4035110:	1080400c 	andi	r2,r2,256
 4035114:	10003526 	beq	r2,zero,40351ec <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 4035118:	00800074 	movhi	r2,1
 403511c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4035120:	e0bffb17 	ldw	r2,-20(fp)
 4035124:	10800a17 	ldw	r2,40(r2)
 4035128:	10800044 	addi	r2,r2,1
 403512c:	1081ffcc 	andi	r2,r2,2047
 4035130:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 4035134:	e0bffb17 	ldw	r2,-20(fp)
 4035138:	10c00b17 	ldw	r3,44(r2)
 403513c:	e0bffe17 	ldw	r2,-8(fp)
 4035140:	18801526 	beq	r3,r2,4035198 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 4035144:	e0bffc17 	ldw	r2,-16(fp)
 4035148:	10800037 	ldwio	r2,0(r2)
 403514c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 4035150:	e0bff917 	ldw	r2,-28(fp)
 4035154:	10a0000c 	andi	r2,r2,32768
 4035158:	10001126 	beq	r2,zero,40351a0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 403515c:	e0bffb17 	ldw	r2,-20(fp)
 4035160:	10800a17 	ldw	r2,40(r2)
 4035164:	e0fff917 	ldw	r3,-28(fp)
 4035168:	1809883a 	mov	r4,r3
 403516c:	e0fffb17 	ldw	r3,-20(fp)
 4035170:	1885883a 	add	r2,r3,r2
 4035174:	10800e04 	addi	r2,r2,56
 4035178:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 403517c:	e0bffb17 	ldw	r2,-20(fp)
 4035180:	10800a17 	ldw	r2,40(r2)
 4035184:	10800044 	addi	r2,r2,1
 4035188:	10c1ffcc 	andi	r3,r2,2047
 403518c:	e0bffb17 	ldw	r2,-20(fp)
 4035190:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 4035194:	003fe206 	br	4035120 <_gp+0xffff3f20>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 4035198:	0001883a 	nop
 403519c:	00000106 	br	40351a4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 40351a0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 40351a4:	e0bff917 	ldw	r2,-28(fp)
 40351a8:	10bfffec 	andhi	r2,r2,65535
 40351ac:	10000f26 	beq	r2,zero,40351ec <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 40351b0:	e0bffb17 	ldw	r2,-20(fp)
 40351b4:	10c00817 	ldw	r3,32(r2)
 40351b8:	00bfff84 	movi	r2,-2
 40351bc:	1886703a 	and	r3,r3,r2
 40351c0:	e0bffb17 	ldw	r2,-20(fp)
 40351c4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 40351c8:	e0bffc17 	ldw	r2,-16(fp)
 40351cc:	10800104 	addi	r2,r2,4
 40351d0:	1007883a 	mov	r3,r2
 40351d4:	e0bffb17 	ldw	r2,-20(fp)
 40351d8:	10800817 	ldw	r2,32(r2)
 40351dc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40351e0:	e0bffc17 	ldw	r2,-16(fp)
 40351e4:	10800104 	addi	r2,r2,4
 40351e8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 40351ec:	e0bffd17 	ldw	r2,-12(fp)
 40351f0:	1080800c 	andi	r2,r2,512
 40351f4:	103fbe26 	beq	r2,zero,40350f0 <_gp+0xffff3ef0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 40351f8:	e0bffd17 	ldw	r2,-12(fp)
 40351fc:	1004d43a 	srli	r2,r2,16
 4035200:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 4035204:	00001406 	br	4035258 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 4035208:	e0bffc17 	ldw	r2,-16(fp)
 403520c:	e0fffb17 	ldw	r3,-20(fp)
 4035210:	18c00d17 	ldw	r3,52(r3)
 4035214:	e13ffb17 	ldw	r4,-20(fp)
 4035218:	20c7883a 	add	r3,r4,r3
 403521c:	18c20e04 	addi	r3,r3,2104
 4035220:	18c00003 	ldbu	r3,0(r3)
 4035224:	18c03fcc 	andi	r3,r3,255
 4035228:	18c0201c 	xori	r3,r3,128
 403522c:	18ffe004 	addi	r3,r3,-128
 4035230:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4035234:	e0bffb17 	ldw	r2,-20(fp)
 4035238:	10800d17 	ldw	r2,52(r2)
 403523c:	10800044 	addi	r2,r2,1
 4035240:	10c1ffcc 	andi	r3,r2,2047
 4035244:	e0bffb17 	ldw	r2,-20(fp)
 4035248:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 403524c:	e0bffa17 	ldw	r2,-24(fp)
 4035250:	10bfffc4 	addi	r2,r2,-1
 4035254:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 4035258:	e0bffa17 	ldw	r2,-24(fp)
 403525c:	10000526 	beq	r2,zero,4035274 <altera_avalon_jtag_uart_irq+0x1a8>
 4035260:	e0bffb17 	ldw	r2,-20(fp)
 4035264:	10c00d17 	ldw	r3,52(r2)
 4035268:	e0bffb17 	ldw	r2,-20(fp)
 403526c:	10800c17 	ldw	r2,48(r2)
 4035270:	18bfe51e 	bne	r3,r2,4035208 <_gp+0xffff4008>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 4035274:	e0bffa17 	ldw	r2,-24(fp)
 4035278:	103f9d26 	beq	r2,zero,40350f0 <_gp+0xffff3ef0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 403527c:	e0bffb17 	ldw	r2,-20(fp)
 4035280:	10c00817 	ldw	r3,32(r2)
 4035284:	00bfff44 	movi	r2,-3
 4035288:	1886703a 	and	r3,r3,r2
 403528c:	e0bffb17 	ldw	r2,-20(fp)
 4035290:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4035294:	e0bffb17 	ldw	r2,-20(fp)
 4035298:	10800017 	ldw	r2,0(r2)
 403529c:	10800104 	addi	r2,r2,4
 40352a0:	1007883a 	mov	r3,r2
 40352a4:	e0bffb17 	ldw	r2,-20(fp)
 40352a8:	10800817 	ldw	r2,32(r2)
 40352ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40352b0:	e0bffc17 	ldw	r2,-16(fp)
 40352b4:	10800104 	addi	r2,r2,4
 40352b8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 40352bc:	003f8c06 	br	40350f0 <_gp+0xffff3ef0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 40352c0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 40352c4:	0001883a 	nop
 40352c8:	e037883a 	mov	sp,fp
 40352cc:	df000017 	ldw	fp,0(sp)
 40352d0:	dec00104 	addi	sp,sp,4
 40352d4:	f800283a 	ret

040352d8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 40352d8:	defff804 	addi	sp,sp,-32
 40352dc:	df000715 	stw	fp,28(sp)
 40352e0:	df000704 	addi	fp,sp,28
 40352e4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 40352e8:	e0bffb17 	ldw	r2,-20(fp)
 40352ec:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 40352f0:	e0bff917 	ldw	r2,-28(fp)
 40352f4:	10800017 	ldw	r2,0(r2)
 40352f8:	10800104 	addi	r2,r2,4
 40352fc:	10800037 	ldwio	r2,0(r2)
 4035300:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 4035304:	e0bffa17 	ldw	r2,-24(fp)
 4035308:	1081000c 	andi	r2,r2,1024
 403530c:	10000b26 	beq	r2,zero,403533c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 4035310:	e0bff917 	ldw	r2,-28(fp)
 4035314:	10800017 	ldw	r2,0(r2)
 4035318:	10800104 	addi	r2,r2,4
 403531c:	1007883a 	mov	r3,r2
 4035320:	e0bff917 	ldw	r2,-28(fp)
 4035324:	10800817 	ldw	r2,32(r2)
 4035328:	10810014 	ori	r2,r2,1024
 403532c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 4035330:	e0bff917 	ldw	r2,-28(fp)
 4035334:	10000915 	stw	zero,36(r2)
 4035338:	00000a06 	br	4035364 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 403533c:	e0bff917 	ldw	r2,-28(fp)
 4035340:	10c00917 	ldw	r3,36(r2)
 4035344:	00a00034 	movhi	r2,32768
 4035348:	10bfff04 	addi	r2,r2,-4
 403534c:	10c00536 	bltu	r2,r3,4035364 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 4035350:	e0bff917 	ldw	r2,-28(fp)
 4035354:	10800917 	ldw	r2,36(r2)
 4035358:	10c00044 	addi	r3,r2,1
 403535c:	e0bff917 	ldw	r2,-28(fp)
 4035360:	10c00915 	stw	r3,36(r2)
 4035364:	d0a6d717 	ldw	r2,-25764(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 4035368:	e037883a 	mov	sp,fp
 403536c:	df000017 	ldw	fp,0(sp)
 4035370:	dec00104 	addi	sp,sp,4
 4035374:	f800283a 	ret

04035378 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 4035378:	defffd04 	addi	sp,sp,-12
 403537c:	df000215 	stw	fp,8(sp)
 4035380:	df000204 	addi	fp,sp,8
 4035384:	e13ffe15 	stw	r4,-8(fp)
 4035388:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 403538c:	00000506 	br	40353a4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 4035390:	e0bfff17 	ldw	r2,-4(fp)
 4035394:	1090000c 	andi	r2,r2,16384
 4035398:	10000226 	beq	r2,zero,40353a4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 403539c:	00bffd44 	movi	r2,-11
 40353a0:	00000b06 	br	40353d0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40353a4:	e0bffe17 	ldw	r2,-8(fp)
 40353a8:	10c00d17 	ldw	r3,52(r2)
 40353ac:	e0bffe17 	ldw	r2,-8(fp)
 40353b0:	10800c17 	ldw	r2,48(r2)
 40353b4:	18800526 	beq	r3,r2,40353cc <altera_avalon_jtag_uart_close+0x54>
 40353b8:	e0bffe17 	ldw	r2,-8(fp)
 40353bc:	10c00917 	ldw	r3,36(r2)
 40353c0:	e0bffe17 	ldw	r2,-8(fp)
 40353c4:	10800117 	ldw	r2,4(r2)
 40353c8:	18bff136 	bltu	r3,r2,4035390 <_gp+0xffff4190>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 40353cc:	0005883a 	mov	r2,zero
}
 40353d0:	e037883a 	mov	sp,fp
 40353d4:	df000017 	ldw	fp,0(sp)
 40353d8:	dec00104 	addi	sp,sp,4
 40353dc:	f800283a 	ret

040353e0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 40353e0:	defffa04 	addi	sp,sp,-24
 40353e4:	df000515 	stw	fp,20(sp)
 40353e8:	df000504 	addi	fp,sp,20
 40353ec:	e13ffd15 	stw	r4,-12(fp)
 40353f0:	e17ffe15 	stw	r5,-8(fp)
 40353f4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 40353f8:	00bff9c4 	movi	r2,-25
 40353fc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 4035400:	e0bffe17 	ldw	r2,-8(fp)
 4035404:	10da8060 	cmpeqi	r3,r2,27137
 4035408:	1800031e 	bne	r3,zero,4035418 <altera_avalon_jtag_uart_ioctl+0x38>
 403540c:	109a80a0 	cmpeqi	r2,r2,27138
 4035410:	1000181e 	bne	r2,zero,4035474 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 4035414:	00002906 	br	40354bc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 4035418:	e0bffd17 	ldw	r2,-12(fp)
 403541c:	10c00117 	ldw	r3,4(r2)
 4035420:	00a00034 	movhi	r2,32768
 4035424:	10bfffc4 	addi	r2,r2,-1
 4035428:	18802126 	beq	r3,r2,40354b0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 403542c:	e0bfff17 	ldw	r2,-4(fp)
 4035430:	10800017 	ldw	r2,0(r2)
 4035434:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 4035438:	e0bffc17 	ldw	r2,-16(fp)
 403543c:	10800090 	cmplti	r2,r2,2
 4035440:	1000061e 	bne	r2,zero,403545c <altera_avalon_jtag_uart_ioctl+0x7c>
 4035444:	e0fffc17 	ldw	r3,-16(fp)
 4035448:	00a00034 	movhi	r2,32768
 403544c:	10bfffc4 	addi	r2,r2,-1
 4035450:	18800226 	beq	r3,r2,403545c <altera_avalon_jtag_uart_ioctl+0x7c>
 4035454:	e0bffc17 	ldw	r2,-16(fp)
 4035458:	00000206 	br	4035464 <altera_avalon_jtag_uart_ioctl+0x84>
 403545c:	00a00034 	movhi	r2,32768
 4035460:	10bfff84 	addi	r2,r2,-2
 4035464:	e0fffd17 	ldw	r3,-12(fp)
 4035468:	18800115 	stw	r2,4(r3)
      rc = 0;
 403546c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 4035470:	00000f06 	br	40354b0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 4035474:	e0bffd17 	ldw	r2,-12(fp)
 4035478:	10c00117 	ldw	r3,4(r2)
 403547c:	00a00034 	movhi	r2,32768
 4035480:	10bfffc4 	addi	r2,r2,-1
 4035484:	18800c26 	beq	r3,r2,40354b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 4035488:	e0bffd17 	ldw	r2,-12(fp)
 403548c:	10c00917 	ldw	r3,36(r2)
 4035490:	e0bffd17 	ldw	r2,-12(fp)
 4035494:	10800117 	ldw	r2,4(r2)
 4035498:	1885803a 	cmpltu	r2,r3,r2
 403549c:	10c03fcc 	andi	r3,r2,255
 40354a0:	e0bfff17 	ldw	r2,-4(fp)
 40354a4:	10c00015 	stw	r3,0(r2)
      rc = 0;
 40354a8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 40354ac:	00000206 	br	40354b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 40354b0:	0001883a 	nop
 40354b4:	00000106 	br	40354bc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 40354b8:	0001883a 	nop

  default:
    break;
  }

  return rc;
 40354bc:	e0bffb17 	ldw	r2,-20(fp)
}
 40354c0:	e037883a 	mov	sp,fp
 40354c4:	df000017 	ldw	fp,0(sp)
 40354c8:	dec00104 	addi	sp,sp,4
 40354cc:	f800283a 	ret

040354d0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 40354d0:	defff304 	addi	sp,sp,-52
 40354d4:	dfc00c15 	stw	ra,48(sp)
 40354d8:	df000b15 	stw	fp,44(sp)
 40354dc:	df000b04 	addi	fp,sp,44
 40354e0:	e13ffc15 	stw	r4,-16(fp)
 40354e4:	e17ffd15 	stw	r5,-12(fp)
 40354e8:	e1bffe15 	stw	r6,-8(fp)
 40354ec:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 40354f0:	e0bffd17 	ldw	r2,-12(fp)
 40354f4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 40354f8:	00004706 	br	4035618 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 40354fc:	e0bffc17 	ldw	r2,-16(fp)
 4035500:	10800a17 	ldw	r2,40(r2)
 4035504:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 4035508:	e0bffc17 	ldw	r2,-16(fp)
 403550c:	10800b17 	ldw	r2,44(r2)
 4035510:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 4035514:	e0fff717 	ldw	r3,-36(fp)
 4035518:	e0bff817 	ldw	r2,-32(fp)
 403551c:	18800536 	bltu	r3,r2,4035534 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 4035520:	e0fff717 	ldw	r3,-36(fp)
 4035524:	e0bff817 	ldw	r2,-32(fp)
 4035528:	1885c83a 	sub	r2,r3,r2
 403552c:	e0bff615 	stw	r2,-40(fp)
 4035530:	00000406 	br	4035544 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 4035534:	00c20004 	movi	r3,2048
 4035538:	e0bff817 	ldw	r2,-32(fp)
 403553c:	1885c83a 	sub	r2,r3,r2
 4035540:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4035544:	e0bff617 	ldw	r2,-40(fp)
 4035548:	10001e26 	beq	r2,zero,40355c4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 403554c:	e0fffe17 	ldw	r3,-8(fp)
 4035550:	e0bff617 	ldw	r2,-40(fp)
 4035554:	1880022e 	bgeu	r3,r2,4035560 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 4035558:	e0bffe17 	ldw	r2,-8(fp)
 403555c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 4035560:	e0bffc17 	ldw	r2,-16(fp)
 4035564:	10c00e04 	addi	r3,r2,56
 4035568:	e0bff817 	ldw	r2,-32(fp)
 403556c:	1885883a 	add	r2,r3,r2
 4035570:	e1bff617 	ldw	r6,-40(fp)
 4035574:	100b883a 	mov	r5,r2
 4035578:	e13ff517 	ldw	r4,-44(fp)
 403557c:	402cce00 	call	402cce0 <memcpy>
      ptr   += n;
 4035580:	e0fff517 	ldw	r3,-44(fp)
 4035584:	e0bff617 	ldw	r2,-40(fp)
 4035588:	1885883a 	add	r2,r3,r2
 403558c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 4035590:	e0fffe17 	ldw	r3,-8(fp)
 4035594:	e0bff617 	ldw	r2,-40(fp)
 4035598:	1885c83a 	sub	r2,r3,r2
 403559c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40355a0:	e0fff817 	ldw	r3,-32(fp)
 40355a4:	e0bff617 	ldw	r2,-40(fp)
 40355a8:	1885883a 	add	r2,r3,r2
 40355ac:	10c1ffcc 	andi	r3,r2,2047
 40355b0:	e0bffc17 	ldw	r2,-16(fp)
 40355b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 40355b8:	e0bffe17 	ldw	r2,-8(fp)
 40355bc:	00bfcf16 	blt	zero,r2,40354fc <_gp+0xffff42fc>
 40355c0:	00000106 	br	40355c8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 40355c4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 40355c8:	e0fff517 	ldw	r3,-44(fp)
 40355cc:	e0bffd17 	ldw	r2,-12(fp)
 40355d0:	1880141e 	bne	r3,r2,4035624 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 40355d4:	e0bfff17 	ldw	r2,-4(fp)
 40355d8:	1090000c 	andi	r2,r2,16384
 40355dc:	1000131e 	bne	r2,zero,403562c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 40355e0:	0001883a 	nop
 40355e4:	e0bffc17 	ldw	r2,-16(fp)
 40355e8:	10c00a17 	ldw	r3,40(r2)
 40355ec:	e0bff717 	ldw	r2,-36(fp)
 40355f0:	1880051e 	bne	r3,r2,4035608 <altera_avalon_jtag_uart_read+0x138>
 40355f4:	e0bffc17 	ldw	r2,-16(fp)
 40355f8:	10c00917 	ldw	r3,36(r2)
 40355fc:	e0bffc17 	ldw	r2,-16(fp)
 4035600:	10800117 	ldw	r2,4(r2)
 4035604:	18bff736 	bltu	r3,r2,40355e4 <_gp+0xffff43e4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 4035608:	e0bffc17 	ldw	r2,-16(fp)
 403560c:	10c00a17 	ldw	r3,40(r2)
 4035610:	e0bff717 	ldw	r2,-36(fp)
 4035614:	18800726 	beq	r3,r2,4035634 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 4035618:	e0bffe17 	ldw	r2,-8(fp)
 403561c:	00bfb716 	blt	zero,r2,40354fc <_gp+0xffff42fc>
 4035620:	00000506 	br	4035638 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 4035624:	0001883a 	nop
 4035628:	00000306 	br	4035638 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 403562c:	0001883a 	nop
 4035630:	00000106 	br	4035638 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 4035634:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 4035638:	e0fff517 	ldw	r3,-44(fp)
 403563c:	e0bffd17 	ldw	r2,-12(fp)
 4035640:	18801826 	beq	r3,r2,40356a4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4035644:	0005303a 	rdctl	r2,status
 4035648:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 403564c:	e0fffb17 	ldw	r3,-20(fp)
 4035650:	00bfff84 	movi	r2,-2
 4035654:	1884703a 	and	r2,r3,r2
 4035658:	1001703a 	wrctl	status,r2
  
  return context;
 403565c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 4035660:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 4035664:	e0bffc17 	ldw	r2,-16(fp)
 4035668:	10800817 	ldw	r2,32(r2)
 403566c:	10c00054 	ori	r3,r2,1
 4035670:	e0bffc17 	ldw	r2,-16(fp)
 4035674:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4035678:	e0bffc17 	ldw	r2,-16(fp)
 403567c:	10800017 	ldw	r2,0(r2)
 4035680:	10800104 	addi	r2,r2,4
 4035684:	1007883a 	mov	r3,r2
 4035688:	e0bffc17 	ldw	r2,-16(fp)
 403568c:	10800817 	ldw	r2,32(r2)
 4035690:	18800035 	stwio	r2,0(r3)
 4035694:	e0bffa17 	ldw	r2,-24(fp)
 4035698:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 403569c:	e0bff917 	ldw	r2,-28(fp)
 40356a0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 40356a4:	e0fff517 	ldw	r3,-44(fp)
 40356a8:	e0bffd17 	ldw	r2,-12(fp)
 40356ac:	18800426 	beq	r3,r2,40356c0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 40356b0:	e0fff517 	ldw	r3,-44(fp)
 40356b4:	e0bffd17 	ldw	r2,-12(fp)
 40356b8:	1885c83a 	sub	r2,r3,r2
 40356bc:	00000606 	br	40356d8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 40356c0:	e0bfff17 	ldw	r2,-4(fp)
 40356c4:	1090000c 	andi	r2,r2,16384
 40356c8:	10000226 	beq	r2,zero,40356d4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 40356cc:	00bffd44 	movi	r2,-11
 40356d0:	00000106 	br	40356d8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 40356d4:	00bffec4 	movi	r2,-5
}
 40356d8:	e037883a 	mov	sp,fp
 40356dc:	dfc00117 	ldw	ra,4(sp)
 40356e0:	df000017 	ldw	fp,0(sp)
 40356e4:	dec00204 	addi	sp,sp,8
 40356e8:	f800283a 	ret

040356ec <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 40356ec:	defff304 	addi	sp,sp,-52
 40356f0:	dfc00c15 	stw	ra,48(sp)
 40356f4:	df000b15 	stw	fp,44(sp)
 40356f8:	df000b04 	addi	fp,sp,44
 40356fc:	e13ffc15 	stw	r4,-16(fp)
 4035700:	e17ffd15 	stw	r5,-12(fp)
 4035704:	e1bffe15 	stw	r6,-8(fp)
 4035708:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 403570c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 4035710:	e0bffd17 	ldw	r2,-12(fp)
 4035714:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 4035718:	00003706 	br	40357f8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 403571c:	e0bffc17 	ldw	r2,-16(fp)
 4035720:	10800c17 	ldw	r2,48(r2)
 4035724:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 4035728:	e0bffc17 	ldw	r2,-16(fp)
 403572c:	10800d17 	ldw	r2,52(r2)
 4035730:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 4035734:	e0fff917 	ldw	r3,-28(fp)
 4035738:	e0bff517 	ldw	r2,-44(fp)
 403573c:	1880062e 	bgeu	r3,r2,4035758 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 4035740:	e0fff517 	ldw	r3,-44(fp)
 4035744:	e0bff917 	ldw	r2,-28(fp)
 4035748:	1885c83a 	sub	r2,r3,r2
 403574c:	10bfffc4 	addi	r2,r2,-1
 4035750:	e0bff615 	stw	r2,-40(fp)
 4035754:	00000b06 	br	4035784 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 4035758:	e0bff517 	ldw	r2,-44(fp)
 403575c:	10000526 	beq	r2,zero,4035774 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 4035760:	00c20004 	movi	r3,2048
 4035764:	e0bff917 	ldw	r2,-28(fp)
 4035768:	1885c83a 	sub	r2,r3,r2
 403576c:	e0bff615 	stw	r2,-40(fp)
 4035770:	00000406 	br	4035784 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 4035774:	00c1ffc4 	movi	r3,2047
 4035778:	e0bff917 	ldw	r2,-28(fp)
 403577c:	1885c83a 	sub	r2,r3,r2
 4035780:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4035784:	e0bff617 	ldw	r2,-40(fp)
 4035788:	10001e26 	beq	r2,zero,4035804 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 403578c:	e0fffe17 	ldw	r3,-8(fp)
 4035790:	e0bff617 	ldw	r2,-40(fp)
 4035794:	1880022e 	bgeu	r3,r2,40357a0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 4035798:	e0bffe17 	ldw	r2,-8(fp)
 403579c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 40357a0:	e0bffc17 	ldw	r2,-16(fp)
 40357a4:	10c20e04 	addi	r3,r2,2104
 40357a8:	e0bff917 	ldw	r2,-28(fp)
 40357ac:	1885883a 	add	r2,r3,r2
 40357b0:	e1bff617 	ldw	r6,-40(fp)
 40357b4:	e17ffd17 	ldw	r5,-12(fp)
 40357b8:	1009883a 	mov	r4,r2
 40357bc:	402cce00 	call	402cce0 <memcpy>
      ptr   += n;
 40357c0:	e0fffd17 	ldw	r3,-12(fp)
 40357c4:	e0bff617 	ldw	r2,-40(fp)
 40357c8:	1885883a 	add	r2,r3,r2
 40357cc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 40357d0:	e0fffe17 	ldw	r3,-8(fp)
 40357d4:	e0bff617 	ldw	r2,-40(fp)
 40357d8:	1885c83a 	sub	r2,r3,r2
 40357dc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40357e0:	e0fff917 	ldw	r3,-28(fp)
 40357e4:	e0bff617 	ldw	r2,-40(fp)
 40357e8:	1885883a 	add	r2,r3,r2
 40357ec:	10c1ffcc 	andi	r3,r2,2047
 40357f0:	e0bffc17 	ldw	r2,-16(fp)
 40357f4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 40357f8:	e0bffe17 	ldw	r2,-8(fp)
 40357fc:	00bfc716 	blt	zero,r2,403571c <_gp+0xffff451c>
 4035800:	00000106 	br	4035808 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 4035804:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4035808:	0005303a 	rdctl	r2,status
 403580c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4035810:	e0fffb17 	ldw	r3,-20(fp)
 4035814:	00bfff84 	movi	r2,-2
 4035818:	1884703a 	and	r2,r3,r2
 403581c:	1001703a 	wrctl	status,r2
  
  return context;
 4035820:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 4035824:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 4035828:	e0bffc17 	ldw	r2,-16(fp)
 403582c:	10800817 	ldw	r2,32(r2)
 4035830:	10c00094 	ori	r3,r2,2
 4035834:	e0bffc17 	ldw	r2,-16(fp)
 4035838:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 403583c:	e0bffc17 	ldw	r2,-16(fp)
 4035840:	10800017 	ldw	r2,0(r2)
 4035844:	10800104 	addi	r2,r2,4
 4035848:	1007883a 	mov	r3,r2
 403584c:	e0bffc17 	ldw	r2,-16(fp)
 4035850:	10800817 	ldw	r2,32(r2)
 4035854:	18800035 	stwio	r2,0(r3)
 4035858:	e0bffa17 	ldw	r2,-24(fp)
 403585c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4035860:	e0bff817 	ldw	r2,-32(fp)
 4035864:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 4035868:	e0bffe17 	ldw	r2,-8(fp)
 403586c:	0080100e 	bge	zero,r2,40358b0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 4035870:	e0bfff17 	ldw	r2,-4(fp)
 4035874:	1090000c 	andi	r2,r2,16384
 4035878:	1000101e 	bne	r2,zero,40358bc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 403587c:	0001883a 	nop
 4035880:	e0bffc17 	ldw	r2,-16(fp)
 4035884:	10c00d17 	ldw	r3,52(r2)
 4035888:	e0bff517 	ldw	r2,-44(fp)
 403588c:	1880051e 	bne	r3,r2,40358a4 <altera_avalon_jtag_uart_write+0x1b8>
 4035890:	e0bffc17 	ldw	r2,-16(fp)
 4035894:	10c00917 	ldw	r3,36(r2)
 4035898:	e0bffc17 	ldw	r2,-16(fp)
 403589c:	10800117 	ldw	r2,4(r2)
 40358a0:	18bff736 	bltu	r3,r2,4035880 <_gp+0xffff4680>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 40358a4:	e0bffc17 	ldw	r2,-16(fp)
 40358a8:	10800917 	ldw	r2,36(r2)
 40358ac:	1000051e 	bne	r2,zero,40358c4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 40358b0:	e0bffe17 	ldw	r2,-8(fp)
 40358b4:	00bfd016 	blt	zero,r2,40357f8 <_gp+0xffff45f8>
 40358b8:	00000306 	br	40358c8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 40358bc:	0001883a 	nop
 40358c0:	00000106 	br	40358c8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 40358c4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 40358c8:	e0fffd17 	ldw	r3,-12(fp)
 40358cc:	e0bff717 	ldw	r2,-36(fp)
 40358d0:	18800426 	beq	r3,r2,40358e4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 40358d4:	e0fffd17 	ldw	r3,-12(fp)
 40358d8:	e0bff717 	ldw	r2,-36(fp)
 40358dc:	1885c83a 	sub	r2,r3,r2
 40358e0:	00000606 	br	40358fc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 40358e4:	e0bfff17 	ldw	r2,-4(fp)
 40358e8:	1090000c 	andi	r2,r2,16384
 40358ec:	10000226 	beq	r2,zero,40358f8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 40358f0:	00bffd44 	movi	r2,-11
 40358f4:	00000106 	br	40358fc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 40358f8:	00bffec4 	movi	r2,-5
}
 40358fc:	e037883a 	mov	sp,fp
 4035900:	dfc00117 	ldw	ra,4(sp)
 4035904:	df000017 	ldw	fp,0(sp)
 4035908:	dec00204 	addi	sp,sp,8
 403590c:	f800283a 	ret

04035910 <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
 4035910:	defff904 	addi	sp,sp,-28
 4035914:	df000615 	stw	fp,24(sp)
 4035918:	df000604 	addi	fp,sp,24
 403591c:	e13ffe15 	stw	r4,-8(fp)
 4035920:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
 4035924:	e03ffa15 	stw	zero,-24(fp)
 4035928:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
 403592c:	000b883a 	mov	r5,zero
 4035930:	e13ffe17 	ldw	r4,-8(fp)
 4035934:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
 4035938:	e13fff17 	ldw	r4,-4(fp)
 403593c:	2008913a 	slli	r4,r4,4
 4035940:	200b883a 	mov	r5,r4
 4035944:	e13ffe17 	ldw	r4,-8(fp)
 4035948:	2149883a 	add	r4,r4,r5
 403594c:	21000037 	ldwio	r4,0(r4)
 4035950:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
 4035954:	e13fff17 	ldw	r4,-4(fp)
 4035958:	2008913a 	slli	r4,r4,4
 403595c:	21000104 	addi	r4,r4,4
 4035960:	200b883a 	mov	r5,r4
 4035964:	e13ffe17 	ldw	r4,-8(fp)
 4035968:	2149883a 	add	r4,r4,r5
 403596c:	21000037 	ldwio	r4,0(r4)
 4035970:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
 4035974:	e13ffd17 	ldw	r4,-12(fp)
 4035978:	2011883a 	mov	r8,r4
 403597c:	0013883a 	mov	r9,zero
 4035980:	4006983a 	sll	r3,r8,zero
 4035984:	0005883a 	mov	r2,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
 4035988:	e13ffc17 	ldw	r4,-16(fp)
 403598c:	200d883a 	mov	r6,r4
 4035990:	000f883a 	mov	r7,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
 4035994:	1188b03a 	or	r4,r2,r6
 4035998:	e13ffa15 	stw	r4,-24(fp)
 403599c:	19c4b03a 	or	r2,r3,r7
 40359a0:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
 40359a4:	e0bffa17 	ldw	r2,-24(fp)
 40359a8:	e0fffb17 	ldw	r3,-20(fp)
 40359ac:	1009883a 	mov	r4,r2
 40359b0:	180b883a 	mov	r5,r3
}
 40359b4:	2005883a 	mov	r2,r4
 40359b8:	2807883a 	mov	r3,r5
 40359bc:	e037883a 	mov	sp,fp
 40359c0:	df000017 	ldw	fp,0(sp)
 40359c4:	dec00104 	addi	sp,sp,4
 40359c8:	f800283a 	ret

040359cc <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
 40359cc:	defffd04 	addi	sp,sp,-12
 40359d0:	dfc00215 	stw	ra,8(sp)
 40359d4:	df000115 	stw	fp,4(sp)
 40359d8:	df000104 	addi	fp,sp,4
 40359dc:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
 40359e0:	000b883a 	mov	r5,zero
 40359e4:	e13fff17 	ldw	r4,-4(fp)
 40359e8:	40359100 	call	4035910 <perf_get_section_time>
 40359ec:	100b883a 	mov	r5,r2
 40359f0:	180d883a 	mov	r6,r3
 40359f4:	2807883a 	mov	r3,r5
 40359f8:	3009883a 	mov	r4,r6
}
 40359fc:	1805883a 	mov	r2,r3
 4035a00:	2007883a 	mov	r3,r4
 4035a04:	e037883a 	mov	sp,fp
 4035a08:	dfc00117 	ldw	ra,4(sp)
 4035a0c:	df000017 	ldw	fp,0(sp)
 4035a10:	dec00204 	addi	sp,sp,8
 4035a14:	f800283a 	ret

04035a18 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
 4035a18:	defffd04 	addi	sp,sp,-12
 4035a1c:	df000215 	stw	fp,8(sp)
 4035a20:	df000204 	addi	fp,sp,8
 4035a24:	e13ffe15 	stw	r4,-8(fp)
 4035a28:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
 4035a2c:	e0bfff17 	ldw	r2,-4(fp)
 4035a30:	1004913a 	slli	r2,r2,4
 4035a34:	10800204 	addi	r2,r2,8
 4035a38:	1007883a 	mov	r3,r2
 4035a3c:	e0bffe17 	ldw	r2,-8(fp)
 4035a40:	10c5883a 	add	r2,r2,r3
 4035a44:	10800037 	ldwio	r2,0(r2)
}
 4035a48:	e037883a 	mov	sp,fp
 4035a4c:	df000017 	ldw	fp,0(sp)
 4035a50:	dec00104 	addi	sp,sp,4
 4035a54:	f800283a 	ret

04035a58 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
 4035a58:	deffff04 	addi	sp,sp,-4
 4035a5c:	df000015 	stw	fp,0(sp)
 4035a60:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
#else
    return (void*)0;
 4035a64:	0005883a 	mov	r2,zero
#endif
}
 4035a68:	e037883a 	mov	sp,fp
 4035a6c:	df000017 	ldw	fp,0(sp)
 4035a70:	dec00104 	addi	sp,sp,4
 4035a74:	f800283a 	ret

04035a78 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
 4035a78:	deffff04 	addi	sp,sp,-4
 4035a7c:	df000015 	stw	fp,0(sp)
 4035a80:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
 4035a84:	0080bef4 	movhi	r2,763
 4035a88:	10bc2004 	addi	r2,r2,-3968
}
 4035a8c:	e037883a 	mov	sp,fp
 4035a90:	df000017 	ldw	fp,0(sp)
 4035a94:	dec00104 	addi	sp,sp,4
 4035a98:	f800283a 	ret

04035a9c <perf_print_formatted_report>:

#ifndef SMALL_C_LIB 
int perf_print_formatted_report (void* perf_base, 
                                 alt_u32 clock_freq_hertz,
                                 int num_sections, ...)
{
 4035a9c:	deffe504 	addi	sp,sp,-108
 4035aa0:	dfc01915 	stw	ra,100(sp)
 4035aa4:	df001815 	stw	fp,96(sp)
 4035aa8:	dcc01715 	stw	r19,92(sp)
 4035aac:	dc801615 	stw	r18,88(sp)
 4035ab0:	dc401515 	stw	r17,84(sp)
 4035ab4:	dc001415 	stw	r16,80(sp)
 4035ab8:	df001804 	addi	fp,sp,96
 4035abc:	e13ff915 	stw	r4,-28(fp)
 4035ac0:	e17ffa15 	stw	r5,-24(fp)
 4035ac4:	e1bffb15 	stw	r6,-20(fp)
 4035ac8:	e1c00215 	stw	r7,8(fp)
  va_list name_args;
  double total_sec;
  alt_u64 total_clocks;
  alt_u64 section_clocks;
  char* section_name;
  int section_num = 1;
 4035acc:	00800044 	movi	r2,1
 4035ad0:	e0bfef15 	stw	r2,-68(fp)

  const char* separator = 
 4035ad4:	008100f4 	movhi	r2,1027
 4035ad8:	109d9504 	addi	r2,r2,30292
 4035adc:	e0bff015 	stw	r2,-64(fp)
    "+---------------+-----+-----------+---------------+-----------+\n";
  const char* column_header = 
 4035ae0:	008100f4 	movhi	r2,1027
 4035ae4:	109da604 	addi	r2,r2,30360
 4035ae8:	e0bff115 	stw	r2,-60(fp)
    "| Section       |  %  | Time (sec)|  Time (clocks)|Occurrences|\n";

  PERF_STOP_MEASURING (perf_base);
 4035aec:	0007883a 	mov	r3,zero
 4035af0:	e0bff917 	ldw	r2,-28(fp)
 4035af4:	10c00035 	stwio	r3,0(r2)

  va_start (name_args, num_sections);
 4035af8:	e0800204 	addi	r2,fp,8
 4035afc:	e0bff815 	stw	r2,-32(fp)

  total_clocks = perf_get_total_time (perf_base);
 4035b00:	e13ff917 	ldw	r4,-28(fp)
 4035b04:	40359cc0 	call	40359cc <perf_get_total_time>
 4035b08:	e0bff215 	stw	r2,-56(fp)
 4035b0c:	e0fff315 	stw	r3,-52(fp)
  total_sec    = ((double)total_clocks) / clock_freq_hertz;
 4035b10:	e13ff217 	ldw	r4,-56(fp)
 4035b14:	e17ff317 	ldw	r5,-52(fp)
 4035b18:	4036f940 	call	4036f94 <__floatundidf>
 4035b1c:	1021883a 	mov	r16,r2
 4035b20:	1823883a 	mov	r17,r3
 4035b24:	e13ffa17 	ldw	r4,-24(fp)
 4035b28:	4033f0c0 	call	4033f0c <__floatunsidf>
 4035b2c:	1009883a 	mov	r4,r2
 4035b30:	180b883a 	mov	r5,r3
 4035b34:	200d883a 	mov	r6,r4
 4035b38:	280f883a 	mov	r7,r5
 4035b3c:	8009883a 	mov	r4,r16
 4035b40:	880b883a 	mov	r5,r17
 4035b44:	4032a500 	call	4032a50 <__divdf3>
 4035b48:	1009883a 	mov	r4,r2
 4035b4c:	180b883a 	mov	r5,r3
 4035b50:	e13ff415 	stw	r4,-48(fp)
 4035b54:	e17ff515 	stw	r5,-44(fp)

  // Print the total at the top:
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
 4035b58:	e0bff017 	ldw	r2,-64(fp)
 4035b5c:	d8800315 	stw	r2,12(sp)
 4035b60:	e0bff117 	ldw	r2,-60(fp)
 4035b64:	d8800215 	stw	r2,8(sp)
 4035b68:	e0bff017 	ldw	r2,-64(fp)
 4035b6c:	d8800115 	stw	r2,4(sp)
 4035b70:	e0bff317 	ldw	r2,-52(fp)
 4035b74:	d8800015 	stw	r2,0(sp)
 4035b78:	e1fff217 	ldw	r7,-56(fp)
 4035b7c:	e17ff417 	ldw	r5,-48(fp)
 4035b80:	e1bff517 	ldw	r6,-44(fp)
 4035b84:	010100f4 	movhi	r4,1027
 4035b88:	211db704 	addi	r4,r4,30428
 4035b8c:	4025fe00 	call	4025fe0 <printf>
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);
 4035b90:	e0bff817 	ldw	r2,-32(fp)
 4035b94:	10c00104 	addi	r3,r2,4
 4035b98:	e0fff815 	stw	r3,-32(fp)
 4035b9c:	10800017 	ldw	r2,0(r2)
 4035ba0:	e0bfee15 	stw	r2,-72(fp)

  for (section_num = 1; section_num <= num_sections; section_num++)
 4035ba4:	00800044 	movi	r2,1
 4035ba8:	e0bfef15 	stw	r2,-68(fp)
 4035bac:	00004e06 	br	4035ce8 <perf_print_formatted_report+0x24c>
    {
      section_clocks = perf_get_section_time (perf_base, section_num);
 4035bb0:	e17fef17 	ldw	r5,-68(fp)
 4035bb4:	e13ff917 	ldw	r4,-28(fp)
 4035bb8:	40359100 	call	4035910 <perf_get_section_time>
 4035bbc:	e0bff615 	stw	r2,-40(fp)
 4035bc0:	e0fff715 	stw	r3,-36(fp)

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
              section_name,
              ((((double) section_clocks)) * 100) / total_clocks,
 4035bc4:	e13ff617 	ldw	r4,-40(fp)
 4035bc8:	e17ff717 	ldw	r5,-36(fp)
 4035bcc:	4036f940 	call	4036f94 <__floatundidf>
 4035bd0:	1011883a 	mov	r8,r2
 4035bd4:	1813883a 	mov	r9,r3
 4035bd8:	000d883a 	mov	r6,zero
 4035bdc:	01d01674 	movhi	r7,16473
 4035be0:	4009883a 	mov	r4,r8
 4035be4:	480b883a 	mov	r5,r9
 4035be8:	40236240 	call	4023624 <__muldf3>
 4035bec:	1009883a 	mov	r4,r2
 4035bf0:	180b883a 	mov	r5,r3
 4035bf4:	2021883a 	mov	r16,r4
 4035bf8:	2823883a 	mov	r17,r5

  for (section_num = 1; section_num <= num_sections; section_num++)
    {
      section_clocks = perf_get_section_time (perf_base, section_num);

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
 4035bfc:	e13ff217 	ldw	r4,-56(fp)
 4035c00:	e17ff317 	ldw	r5,-52(fp)
 4035c04:	4036f940 	call	4036f94 <__floatundidf>
 4035c08:	1009883a 	mov	r4,r2
 4035c0c:	180b883a 	mov	r5,r3
 4035c10:	200d883a 	mov	r6,r4
 4035c14:	280f883a 	mov	r7,r5
 4035c18:	8009883a 	mov	r4,r16
 4035c1c:	880b883a 	mov	r5,r17
 4035c20:	4032a500 	call	4032a50 <__divdf3>
 4035c24:	1009883a 	mov	r4,r2
 4035c28:	180b883a 	mov	r5,r3
 4035c2c:	2025883a 	mov	r18,r4
 4035c30:	2827883a 	mov	r19,r5
              section_name,
              ((((double) section_clocks)) * 100) / total_clocks,
              (((double) section_clocks)) / clock_freq_hertz,
 4035c34:	e13ff617 	ldw	r4,-40(fp)
 4035c38:	e17ff717 	ldw	r5,-36(fp)
 4035c3c:	4036f940 	call	4036f94 <__floatundidf>
 4035c40:	1021883a 	mov	r16,r2
 4035c44:	1823883a 	mov	r17,r3

  for (section_num = 1; section_num <= num_sections; section_num++)
    {
      section_clocks = perf_get_section_time (perf_base, section_num);

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
 4035c48:	e13ffa17 	ldw	r4,-24(fp)
 4035c4c:	4033f0c0 	call	4033f0c <__floatunsidf>
 4035c50:	1009883a 	mov	r4,r2
 4035c54:	180b883a 	mov	r5,r3
 4035c58:	200d883a 	mov	r6,r4
 4035c5c:	280f883a 	mov	r7,r5
 4035c60:	8009883a 	mov	r4,r16
 4035c64:	880b883a 	mov	r5,r17
 4035c68:	4032a500 	call	4032a50 <__divdf3>
 4035c6c:	1009883a 	mov	r4,r2
 4035c70:	180b883a 	mov	r5,r3
 4035c74:	2021883a 	mov	r16,r4
 4035c78:	2823883a 	mov	r17,r5
              section_name,
              ((((double) section_clocks)) * 100) / total_clocks,
              (((double) section_clocks)) / clock_freq_hertz,
              section_clocks,
              (unsigned int) perf_get_num_starts (perf_base, section_num),
 4035c7c:	e17fef17 	ldw	r5,-68(fp)
 4035c80:	e13ff917 	ldw	r4,-28(fp)
 4035c84:	4035a180 	call	4035a18 <perf_get_num_starts>
 4035c88:	1007883a 	mov	r3,r2

  for (section_num = 1; section_num <= num_sections; section_num++)
    {
      section_clocks = perf_get_section_time (perf_base, section_num);

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
 4035c8c:	e0bff017 	ldw	r2,-64(fp)
 4035c90:	d8800515 	stw	r2,20(sp)
 4035c94:	d8c00415 	stw	r3,16(sp)
 4035c98:	e0bff617 	ldw	r2,-40(fp)
 4035c9c:	d8800215 	stw	r2,8(sp)
 4035ca0:	e0bff717 	ldw	r2,-36(fp)
 4035ca4:	d8800315 	stw	r2,12(sp)
 4035ca8:	dc000015 	stw	r16,0(sp)
 4035cac:	dc400115 	stw	r17,4(sp)
 4035cb0:	900d883a 	mov	r6,r18
 4035cb4:	980f883a 	mov	r7,r19
 4035cb8:	e17fee17 	ldw	r5,-72(fp)
 4035cbc:	010100f4 	movhi	r4,1027
 4035cc0:	211dcc04 	addi	r4,r4,30512
 4035cc4:	4025fe00 	call	4025fe0 <printf>
              section_clocks,
              (unsigned int) perf_get_num_starts (perf_base, section_num),
              separator
              );

      section_name = va_arg(name_args, char*);
 4035cc8:	e0bff817 	ldw	r2,-32(fp)
 4035ccc:	10c00104 	addi	r3,r2,4
 4035cd0:	e0fff815 	stw	r3,-32(fp)
 4035cd4:	10800017 	ldw	r2,0(r2)
 4035cd8:	e0bfee15 	stw	r2,-72(fp)
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);

  for (section_num = 1; section_num <= num_sections; section_num++)
 4035cdc:	e0bfef17 	ldw	r2,-68(fp)
 4035ce0:	10800044 	addi	r2,r2,1
 4035ce4:	e0bfef15 	stw	r2,-68(fp)
 4035ce8:	e0bfef17 	ldw	r2,-68(fp)
 4035cec:	e0fffb17 	ldw	r3,-20(fp)
 4035cf0:	18bfaf0e 	bge	r3,r2,4035bb0 <_gp+0xffff49b0>
      section_name = va_arg(name_args, char*);
    }

  va_end (name_args);

  return 0;
 4035cf4:	0005883a 	mov	r2,zero
}
 4035cf8:	e6fffc04 	addi	sp,fp,-16
 4035cfc:	dfc00517 	ldw	ra,20(sp)
 4035d00:	df000417 	ldw	fp,16(sp)
 4035d04:	dcc00317 	ldw	r19,12(sp)
 4035d08:	dc800217 	ldw	r18,8(sp)
 4035d0c:	dc400117 	ldw	r17,4(sp)
 4035d10:	dc000017 	ldw	r16,0(sp)
 4035d14:	dec00704 	addi	sp,sp,28
 4035d18:	f800283a 	ret

04035d1c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 4035d1c:	defff504 	addi	sp,sp,-44
 4035d20:	df000a15 	stw	fp,40(sp)
 4035d24:	df000a04 	addi	fp,sp,40
 4035d28:	e13ffc15 	stw	r4,-16(fp)
 4035d2c:	e17ffd15 	stw	r5,-12(fp)
 4035d30:	e1bffe15 	stw	r6,-8(fp)
 4035d34:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 4035d38:	e03ff615 	stw	zero,-40(fp)
 4035d3c:	d0a6d717 	ldw	r2,-25764(gp)
  
  if (alt_ticks_per_second ())
 4035d40:	10003c26 	beq	r2,zero,4035e34 <alt_alarm_start+0x118>
  {
    if (alarm)
 4035d44:	e0bffc17 	ldw	r2,-16(fp)
 4035d48:	10003826 	beq	r2,zero,4035e2c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 4035d4c:	e0bffc17 	ldw	r2,-16(fp)
 4035d50:	e0fffe17 	ldw	r3,-8(fp)
 4035d54:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 4035d58:	e0bffc17 	ldw	r2,-16(fp)
 4035d5c:	e0ffff17 	ldw	r3,-4(fp)
 4035d60:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4035d64:	0005303a 	rdctl	r2,status
 4035d68:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4035d6c:	e0fff917 	ldw	r3,-28(fp)
 4035d70:	00bfff84 	movi	r2,-2
 4035d74:	1884703a 	and	r2,r3,r2
 4035d78:	1001703a 	wrctl	status,r2
  
  return context;
 4035d7c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 4035d80:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4035d84:	d0a6d817 	ldw	r2,-25760(gp)
      
      current_nticks = alt_nticks();
 4035d88:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 4035d8c:	e0fffd17 	ldw	r3,-12(fp)
 4035d90:	e0bff617 	ldw	r2,-40(fp)
 4035d94:	1885883a 	add	r2,r3,r2
 4035d98:	10c00044 	addi	r3,r2,1
 4035d9c:	e0bffc17 	ldw	r2,-16(fp)
 4035da0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 4035da4:	e0bffc17 	ldw	r2,-16(fp)
 4035da8:	10c00217 	ldw	r3,8(r2)
 4035dac:	e0bff617 	ldw	r2,-40(fp)
 4035db0:	1880042e 	bgeu	r3,r2,4035dc4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 4035db4:	e0bffc17 	ldw	r2,-16(fp)
 4035db8:	00c00044 	movi	r3,1
 4035dbc:	10c00405 	stb	r3,16(r2)
 4035dc0:	00000206 	br	4035dcc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 4035dc4:	e0bffc17 	ldw	r2,-16(fp)
 4035dc8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 4035dcc:	e0bffc17 	ldw	r2,-16(fp)
 4035dd0:	d0e00e04 	addi	r3,gp,-32712
 4035dd4:	e0fffa15 	stw	r3,-24(fp)
 4035dd8:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4035ddc:	e0bffb17 	ldw	r2,-20(fp)
 4035de0:	e0fffa17 	ldw	r3,-24(fp)
 4035de4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 4035de8:	e0bffa17 	ldw	r2,-24(fp)
 4035dec:	10c00017 	ldw	r3,0(r2)
 4035df0:	e0bffb17 	ldw	r2,-20(fp)
 4035df4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 4035df8:	e0bffa17 	ldw	r2,-24(fp)
 4035dfc:	10800017 	ldw	r2,0(r2)
 4035e00:	e0fffb17 	ldw	r3,-20(fp)
 4035e04:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 4035e08:	e0bffa17 	ldw	r2,-24(fp)
 4035e0c:	e0fffb17 	ldw	r3,-20(fp)
 4035e10:	10c00015 	stw	r3,0(r2)
 4035e14:	e0bff817 	ldw	r2,-32(fp)
 4035e18:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4035e1c:	e0bff717 	ldw	r2,-36(fp)
 4035e20:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 4035e24:	0005883a 	mov	r2,zero
 4035e28:	00000306 	br	4035e38 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 4035e2c:	00bffa84 	movi	r2,-22
 4035e30:	00000106 	br	4035e38 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 4035e34:	00bfde84 	movi	r2,-134
  }
}
 4035e38:	e037883a 	mov	sp,fp
 4035e3c:	df000017 	ldw	fp,0(sp)
 4035e40:	dec00104 	addi	sp,sp,4
 4035e44:	f800283a 	ret

04035e48 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 4035e48:	defffa04 	addi	sp,sp,-24
 4035e4c:	dfc00515 	stw	ra,20(sp)
 4035e50:	df000415 	stw	fp,16(sp)
 4035e54:	df000404 	addi	fp,sp,16
 4035e58:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 4035e5c:	008000c4 	movi	r2,3
 4035e60:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 4035e64:	e0fffd17 	ldw	r3,-12(fp)
 4035e68:	008003f4 	movhi	r2,15
 4035e6c:	10909004 	addi	r2,r2,16960
 4035e70:	1885383a 	mul	r2,r3,r2
 4035e74:	100b883a 	mov	r5,r2
 4035e78:	0100bef4 	movhi	r4,763
 4035e7c:	213c2004 	addi	r4,r4,-3968
 4035e80:	402296c0 	call	402296c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 4035e84:	100b883a 	mov	r5,r2
 4035e88:	01200034 	movhi	r4,32768
 4035e8c:	213fffc4 	addi	r4,r4,-1
 4035e90:	402296c0 	call	402296c <__udivsi3>
 4035e94:	100b883a 	mov	r5,r2
 4035e98:	e13fff17 	ldw	r4,-4(fp)
 4035e9c:	402296c0 	call	402296c <__udivsi3>
 4035ea0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 4035ea4:	e0bffe17 	ldw	r2,-8(fp)
 4035ea8:	10002a26 	beq	r2,zero,4035f54 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 4035eac:	e03ffc15 	stw	zero,-16(fp)
 4035eb0:	00001706 	br	4035f10 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 4035eb4:	00a00034 	movhi	r2,32768
 4035eb8:	10bfffc4 	addi	r2,r2,-1
 4035ebc:	10bfffc4 	addi	r2,r2,-1
 4035ec0:	103ffe1e 	bne	r2,zero,4035ebc <_gp+0xffff4cbc>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 4035ec4:	e0fffd17 	ldw	r3,-12(fp)
 4035ec8:	008003f4 	movhi	r2,15
 4035ecc:	10909004 	addi	r2,r2,16960
 4035ed0:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 4035ed4:	100b883a 	mov	r5,r2
 4035ed8:	0100bef4 	movhi	r4,763
 4035edc:	213c2004 	addi	r4,r4,-3968
 4035ee0:	402296c0 	call	402296c <__udivsi3>
 4035ee4:	100b883a 	mov	r5,r2
 4035ee8:	01200034 	movhi	r4,32768
 4035eec:	213fffc4 	addi	r4,r4,-1
 4035ef0:	402296c0 	call	402296c <__udivsi3>
 4035ef4:	1007883a 	mov	r3,r2
 4035ef8:	e0bfff17 	ldw	r2,-4(fp)
 4035efc:	10c5c83a 	sub	r2,r2,r3
 4035f00:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 4035f04:	e0bffc17 	ldw	r2,-16(fp)
 4035f08:	10800044 	addi	r2,r2,1
 4035f0c:	e0bffc15 	stw	r2,-16(fp)
 4035f10:	e0fffc17 	ldw	r3,-16(fp)
 4035f14:	e0bffe17 	ldw	r2,-8(fp)
 4035f18:	18bfe616 	blt	r3,r2,4035eb4 <_gp+0xffff4cb4>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 4035f1c:	e0fffd17 	ldw	r3,-12(fp)
 4035f20:	008003f4 	movhi	r2,15
 4035f24:	10909004 	addi	r2,r2,16960
 4035f28:	1885383a 	mul	r2,r3,r2
 4035f2c:	100b883a 	mov	r5,r2
 4035f30:	0100bef4 	movhi	r4,763
 4035f34:	213c2004 	addi	r4,r4,-3968
 4035f38:	402296c0 	call	402296c <__udivsi3>
 4035f3c:	1007883a 	mov	r3,r2
 4035f40:	e0bfff17 	ldw	r2,-4(fp)
 4035f44:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 4035f48:	10bfffc4 	addi	r2,r2,-1
 4035f4c:	103ffe1e 	bne	r2,zero,4035f48 <_gp+0xffff4d48>
 4035f50:	00000d06 	br	4035f88 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 4035f54:	e0fffd17 	ldw	r3,-12(fp)
 4035f58:	008003f4 	movhi	r2,15
 4035f5c:	10909004 	addi	r2,r2,16960
 4035f60:	1885383a 	mul	r2,r3,r2
 4035f64:	100b883a 	mov	r5,r2
 4035f68:	0100bef4 	movhi	r4,763
 4035f6c:	213c2004 	addi	r4,r4,-3968
 4035f70:	402296c0 	call	402296c <__udivsi3>
 4035f74:	1007883a 	mov	r3,r2
 4035f78:	e0bfff17 	ldw	r2,-4(fp)
 4035f7c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 4035f80:	10bfffc4 	addi	r2,r2,-1
 4035f84:	00bffe16 	blt	zero,r2,4035f80 <_gp+0xffff4d80>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 4035f88:	0005883a 	mov	r2,zero
}
 4035f8c:	e037883a 	mov	sp,fp
 4035f90:	dfc00117 	ldw	ra,4(sp)
 4035f94:	df000017 	ldw	fp,0(sp)
 4035f98:	dec00204 	addi	sp,sp,8
 4035f9c:	f800283a 	ret

04035fa0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 4035fa0:	defffe04 	addi	sp,sp,-8
 4035fa4:	df000115 	stw	fp,4(sp)
 4035fa8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4035fac:	e03fff15 	stw	zero,-4(fp)
 4035fb0:	00000506 	br	4035fc8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 4035fb4:	e0bfff17 	ldw	r2,-4(fp)
 4035fb8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 4035fbc:	e0bfff17 	ldw	r2,-4(fp)
 4035fc0:	10800804 	addi	r2,r2,32
 4035fc4:	e0bfff15 	stw	r2,-4(fp)
 4035fc8:	e0bfff17 	ldw	r2,-4(fp)
 4035fcc:	10820030 	cmpltui	r2,r2,2048
 4035fd0:	103ff81e 	bne	r2,zero,4035fb4 <_gp+0xffff4db4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 4035fd4:	0001883a 	nop
 4035fd8:	e037883a 	mov	sp,fp
 4035fdc:	df000017 	ldw	fp,0(sp)
 4035fe0:	dec00104 	addi	sp,sp,4
 4035fe4:	f800283a 	ret

04035fe8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4035fe8:	defffe04 	addi	sp,sp,-8
 4035fec:	dfc00115 	stw	ra,4(sp)
 4035ff0:	df000015 	stw	fp,0(sp)
 4035ff4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4035ff8:	d0a00b17 	ldw	r2,-32724(gp)
 4035ffc:	10000326 	beq	r2,zero,403600c <alt_get_errno+0x24>
 4036000:	d0a00b17 	ldw	r2,-32724(gp)
 4036004:	103ee83a 	callr	r2
 4036008:	00000106 	br	4036010 <alt_get_errno+0x28>
 403600c:	d0a6cc04 	addi	r2,gp,-25808
}
 4036010:	e037883a 	mov	sp,fp
 4036014:	dfc00117 	ldw	ra,4(sp)
 4036018:	df000017 	ldw	fp,0(sp)
 403601c:	dec00204 	addi	sp,sp,8
 4036020:	f800283a 	ret

04036024 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 4036024:	defffa04 	addi	sp,sp,-24
 4036028:	dfc00515 	stw	ra,20(sp)
 403602c:	df000415 	stw	fp,16(sp)
 4036030:	df000404 	addi	fp,sp,16
 4036034:	e13ffe15 	stw	r4,-8(fp)
 4036038:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 403603c:	e0bffe17 	ldw	r2,-8(fp)
 4036040:	10000326 	beq	r2,zero,4036050 <alt_dev_llist_insert+0x2c>
 4036044:	e0bffe17 	ldw	r2,-8(fp)
 4036048:	10800217 	ldw	r2,8(r2)
 403604c:	1000061e 	bne	r2,zero,4036068 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 4036050:	4035fe80 	call	4035fe8 <alt_get_errno>
 4036054:	1007883a 	mov	r3,r2
 4036058:	00800584 	movi	r2,22
 403605c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 4036060:	00bffa84 	movi	r2,-22
 4036064:	00001306 	br	40360b4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 4036068:	e0bffe17 	ldw	r2,-8(fp)
 403606c:	e0ffff17 	ldw	r3,-4(fp)
 4036070:	e0fffc15 	stw	r3,-16(fp)
 4036074:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4036078:	e0bffd17 	ldw	r2,-12(fp)
 403607c:	e0fffc17 	ldw	r3,-16(fp)
 4036080:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 4036084:	e0bffc17 	ldw	r2,-16(fp)
 4036088:	10c00017 	ldw	r3,0(r2)
 403608c:	e0bffd17 	ldw	r2,-12(fp)
 4036090:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 4036094:	e0bffc17 	ldw	r2,-16(fp)
 4036098:	10800017 	ldw	r2,0(r2)
 403609c:	e0fffd17 	ldw	r3,-12(fp)
 40360a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 40360a4:	e0bffc17 	ldw	r2,-16(fp)
 40360a8:	e0fffd17 	ldw	r3,-12(fp)
 40360ac:	10c00015 	stw	r3,0(r2)

  return 0;  
 40360b0:	0005883a 	mov	r2,zero
}
 40360b4:	e037883a 	mov	sp,fp
 40360b8:	dfc00117 	ldw	ra,4(sp)
 40360bc:	df000017 	ldw	fp,0(sp)
 40360c0:	dec00204 	addi	sp,sp,8
 40360c4:	f800283a 	ret

040360c8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 40360c8:	defffd04 	addi	sp,sp,-12
 40360cc:	dfc00215 	stw	ra,8(sp)
 40360d0:	df000115 	stw	fp,4(sp)
 40360d4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 40360d8:	008100f4 	movhi	r2,1027
 40360dc:	109c0d04 	addi	r2,r2,28724
 40360e0:	e0bfff15 	stw	r2,-4(fp)
 40360e4:	00000606 	br	4036100 <_do_ctors+0x38>
        (*ctor) (); 
 40360e8:	e0bfff17 	ldw	r2,-4(fp)
 40360ec:	10800017 	ldw	r2,0(r2)
 40360f0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 40360f4:	e0bfff17 	ldw	r2,-4(fp)
 40360f8:	10bfff04 	addi	r2,r2,-4
 40360fc:	e0bfff15 	stw	r2,-4(fp)
 4036100:	e0ffff17 	ldw	r3,-4(fp)
 4036104:	008100f4 	movhi	r2,1027
 4036108:	109c0e04 	addi	r2,r2,28728
 403610c:	18bff62e 	bgeu	r3,r2,40360e8 <_gp+0xffff4ee8>
        (*ctor) (); 
}
 4036110:	0001883a 	nop
 4036114:	e037883a 	mov	sp,fp
 4036118:	dfc00117 	ldw	ra,4(sp)
 403611c:	df000017 	ldw	fp,0(sp)
 4036120:	dec00204 	addi	sp,sp,8
 4036124:	f800283a 	ret

04036128 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 4036128:	defffd04 	addi	sp,sp,-12
 403612c:	dfc00215 	stw	ra,8(sp)
 4036130:	df000115 	stw	fp,4(sp)
 4036134:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4036138:	008100f4 	movhi	r2,1027
 403613c:	109c0d04 	addi	r2,r2,28724
 4036140:	e0bfff15 	stw	r2,-4(fp)
 4036144:	00000606 	br	4036160 <_do_dtors+0x38>
        (*dtor) (); 
 4036148:	e0bfff17 	ldw	r2,-4(fp)
 403614c:	10800017 	ldw	r2,0(r2)
 4036150:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4036154:	e0bfff17 	ldw	r2,-4(fp)
 4036158:	10bfff04 	addi	r2,r2,-4
 403615c:	e0bfff15 	stw	r2,-4(fp)
 4036160:	e0ffff17 	ldw	r3,-4(fp)
 4036164:	008100f4 	movhi	r2,1027
 4036168:	109c0e04 	addi	r2,r2,28728
 403616c:	18bff62e 	bgeu	r3,r2,4036148 <_gp+0xffff4f48>
        (*dtor) (); 
}
 4036170:	0001883a 	nop
 4036174:	e037883a 	mov	sp,fp
 4036178:	dfc00117 	ldw	ra,4(sp)
 403617c:	df000017 	ldw	fp,0(sp)
 4036180:	dec00204 	addi	sp,sp,8
 4036184:	f800283a 	ret

04036188 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 4036188:	defffa04 	addi	sp,sp,-24
 403618c:	dfc00515 	stw	ra,20(sp)
 4036190:	df000415 	stw	fp,16(sp)
 4036194:	df000404 	addi	fp,sp,16
 4036198:	e13ffe15 	stw	r4,-8(fp)
 403619c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40361a0:	e0bfff17 	ldw	r2,-4(fp)
 40361a4:	10800017 	ldw	r2,0(r2)
 40361a8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40361ac:	e13ffe17 	ldw	r4,-8(fp)
 40361b0:	40265340 	call	4026534 <strlen>
 40361b4:	10800044 	addi	r2,r2,1
 40361b8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40361bc:	00000d06 	br	40361f4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 40361c0:	e0bffc17 	ldw	r2,-16(fp)
 40361c4:	10800217 	ldw	r2,8(r2)
 40361c8:	e0fffd17 	ldw	r3,-12(fp)
 40361cc:	180d883a 	mov	r6,r3
 40361d0:	e17ffe17 	ldw	r5,-8(fp)
 40361d4:	1009883a 	mov	r4,r2
 40361d8:	4036b180 	call	4036b18 <memcmp>
 40361dc:	1000021e 	bne	r2,zero,40361e8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 40361e0:	e0bffc17 	ldw	r2,-16(fp)
 40361e4:	00000706 	br	4036204 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 40361e8:	e0bffc17 	ldw	r2,-16(fp)
 40361ec:	10800017 	ldw	r2,0(r2)
 40361f0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40361f4:	e0fffc17 	ldw	r3,-16(fp)
 40361f8:	e0bfff17 	ldw	r2,-4(fp)
 40361fc:	18bff01e 	bne	r3,r2,40361c0 <_gp+0xffff4fc0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4036200:	0005883a 	mov	r2,zero
}
 4036204:	e037883a 	mov	sp,fp
 4036208:	dfc00117 	ldw	ra,4(sp)
 403620c:	df000017 	ldw	fp,0(sp)
 4036210:	dec00204 	addi	sp,sp,8
 4036214:	f800283a 	ret

04036218 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 4036218:	defffb04 	addi	sp,sp,-20
 403621c:	dfc00415 	stw	ra,16(sp)
 4036220:	df000315 	stw	fp,12(sp)
 4036224:	df000304 	addi	fp,sp,12
 4036228:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 403622c:	d0a00617 	ldw	r2,-32744(gp)
 4036230:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4036234:	00003106 	br	40362fc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 4036238:	e0bffd17 	ldw	r2,-12(fp)
 403623c:	10800217 	ldw	r2,8(r2)
 4036240:	1009883a 	mov	r4,r2
 4036244:	40265340 	call	4026534 <strlen>
 4036248:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 403624c:	e0bffd17 	ldw	r2,-12(fp)
 4036250:	10c00217 	ldw	r3,8(r2)
 4036254:	e0bffe17 	ldw	r2,-8(fp)
 4036258:	10bfffc4 	addi	r2,r2,-1
 403625c:	1885883a 	add	r2,r3,r2
 4036260:	10800003 	ldbu	r2,0(r2)
 4036264:	10803fcc 	andi	r2,r2,255
 4036268:	1080201c 	xori	r2,r2,128
 403626c:	10bfe004 	addi	r2,r2,-128
 4036270:	10800bd8 	cmpnei	r2,r2,47
 4036274:	1000031e 	bne	r2,zero,4036284 <alt_find_file+0x6c>
    {
      len -= 1;
 4036278:	e0bffe17 	ldw	r2,-8(fp)
 403627c:	10bfffc4 	addi	r2,r2,-1
 4036280:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4036284:	e0bffe17 	ldw	r2,-8(fp)
 4036288:	e0ffff17 	ldw	r3,-4(fp)
 403628c:	1885883a 	add	r2,r3,r2
 4036290:	10800003 	ldbu	r2,0(r2)
 4036294:	10803fcc 	andi	r2,r2,255
 4036298:	1080201c 	xori	r2,r2,128
 403629c:	10bfe004 	addi	r2,r2,-128
 40362a0:	10800be0 	cmpeqi	r2,r2,47
 40362a4:	1000081e 	bne	r2,zero,40362c8 <alt_find_file+0xb0>
 40362a8:	e0bffe17 	ldw	r2,-8(fp)
 40362ac:	e0ffff17 	ldw	r3,-4(fp)
 40362b0:	1885883a 	add	r2,r3,r2
 40362b4:	10800003 	ldbu	r2,0(r2)
 40362b8:	10803fcc 	andi	r2,r2,255
 40362bc:	1080201c 	xori	r2,r2,128
 40362c0:	10bfe004 	addi	r2,r2,-128
 40362c4:	10000a1e 	bne	r2,zero,40362f0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 40362c8:	e0bffd17 	ldw	r2,-12(fp)
 40362cc:	10800217 	ldw	r2,8(r2)
 40362d0:	e0fffe17 	ldw	r3,-8(fp)
 40362d4:	180d883a 	mov	r6,r3
 40362d8:	e17fff17 	ldw	r5,-4(fp)
 40362dc:	1009883a 	mov	r4,r2
 40362e0:	4036b180 	call	4036b18 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40362e4:	1000021e 	bne	r2,zero,40362f0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 40362e8:	e0bffd17 	ldw	r2,-12(fp)
 40362ec:	00000706 	br	403630c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 40362f0:	e0bffd17 	ldw	r2,-12(fp)
 40362f4:	10800017 	ldw	r2,0(r2)
 40362f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 40362fc:	e0fffd17 	ldw	r3,-12(fp)
 4036300:	d0a00604 	addi	r2,gp,-32744
 4036304:	18bfcc1e 	bne	r3,r2,4036238 <_gp+0xffff5038>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 4036308:	0005883a 	mov	r2,zero
}
 403630c:	e037883a 	mov	sp,fp
 4036310:	dfc00117 	ldw	ra,4(sp)
 4036314:	df000017 	ldw	fp,0(sp)
 4036318:	dec00204 	addi	sp,sp,8
 403631c:	f800283a 	ret

04036320 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4036320:	defffc04 	addi	sp,sp,-16
 4036324:	df000315 	stw	fp,12(sp)
 4036328:	df000304 	addi	fp,sp,12
 403632c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4036330:	00bffa04 	movi	r2,-24
 4036334:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4036338:	e03ffd15 	stw	zero,-12(fp)
 403633c:	00001906 	br	40363a4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4036340:	00810134 	movhi	r2,1028
 4036344:	10a00804 	addi	r2,r2,-32736
 4036348:	e0fffd17 	ldw	r3,-12(fp)
 403634c:	18c00324 	muli	r3,r3,12
 4036350:	10c5883a 	add	r2,r2,r3
 4036354:	10800017 	ldw	r2,0(r2)
 4036358:	10000f1e 	bne	r2,zero,4036398 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 403635c:	00810134 	movhi	r2,1028
 4036360:	10a00804 	addi	r2,r2,-32736
 4036364:	e0fffd17 	ldw	r3,-12(fp)
 4036368:	18c00324 	muli	r3,r3,12
 403636c:	10c5883a 	add	r2,r2,r3
 4036370:	e0ffff17 	ldw	r3,-4(fp)
 4036374:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 4036378:	d0e00a17 	ldw	r3,-32728(gp)
 403637c:	e0bffd17 	ldw	r2,-12(fp)
 4036380:	1880020e 	bge	r3,r2,403638c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 4036384:	e0bffd17 	ldw	r2,-12(fp)
 4036388:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 403638c:	e0bffd17 	ldw	r2,-12(fp)
 4036390:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 4036394:	00000606 	br	40363b0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4036398:	e0bffd17 	ldw	r2,-12(fp)
 403639c:	10800044 	addi	r2,r2,1
 40363a0:	e0bffd15 	stw	r2,-12(fp)
 40363a4:	e0bffd17 	ldw	r2,-12(fp)
 40363a8:	10800810 	cmplti	r2,r2,32
 40363ac:	103fe41e 	bne	r2,zero,4036340 <_gp+0xffff5140>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40363b0:	e0bffe17 	ldw	r2,-8(fp)
}
 40363b4:	e037883a 	mov	sp,fp
 40363b8:	df000017 	ldw	fp,0(sp)
 40363bc:	dec00104 	addi	sp,sp,4
 40363c0:	f800283a 	ret

040363c4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 40363c4:	defffe04 	addi	sp,sp,-8
 40363c8:	dfc00115 	stw	ra,4(sp)
 40363cc:	df000015 	stw	fp,0(sp)
 40363d0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 40363d4:	01440004 	movi	r5,4096
 40363d8:	0009883a 	mov	r4,zero
 40363dc:	40369a00 	call	40369a0 <alt_icache_flush>
#endif
}
 40363e0:	0001883a 	nop
 40363e4:	e037883a 	mov	sp,fp
 40363e8:	dfc00117 	ldw	ra,4(sp)
 40363ec:	df000017 	ldw	fp,0(sp)
 40363f0:	dec00204 	addi	sp,sp,8
 40363f4:	f800283a 	ret

040363f8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 40363f8:	defff904 	addi	sp,sp,-28
 40363fc:	dfc00615 	stw	ra,24(sp)
 4036400:	df000515 	stw	fp,20(sp)
 4036404:	df000504 	addi	fp,sp,20
 4036408:	e13ffc15 	stw	r4,-16(fp)
 403640c:	e17ffd15 	stw	r5,-12(fp)
 4036410:	e1bffe15 	stw	r6,-8(fp)
 4036414:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 4036418:	e0800217 	ldw	r2,8(fp)
 403641c:	d8800015 	stw	r2,0(sp)
 4036420:	e1ffff17 	ldw	r7,-4(fp)
 4036424:	e1bffe17 	ldw	r6,-8(fp)
 4036428:	e17ffd17 	ldw	r5,-12(fp)
 403642c:	e13ffc17 	ldw	r4,-16(fp)
 4036430:	40365a80 	call	40365a8 <alt_iic_isr_register>
}  
 4036434:	e037883a 	mov	sp,fp
 4036438:	dfc00117 	ldw	ra,4(sp)
 403643c:	df000017 	ldw	fp,0(sp)
 4036440:	dec00204 	addi	sp,sp,8
 4036444:	f800283a 	ret

04036448 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 4036448:	defff904 	addi	sp,sp,-28
 403644c:	df000615 	stw	fp,24(sp)
 4036450:	df000604 	addi	fp,sp,24
 4036454:	e13ffe15 	stw	r4,-8(fp)
 4036458:	e17fff15 	stw	r5,-4(fp)
 403645c:	e0bfff17 	ldw	r2,-4(fp)
 4036460:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4036464:	0005303a 	rdctl	r2,status
 4036468:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 403646c:	e0fffb17 	ldw	r3,-20(fp)
 4036470:	00bfff84 	movi	r2,-2
 4036474:	1884703a 	and	r2,r3,r2
 4036478:	1001703a 	wrctl	status,r2
  
  return context;
 403647c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4036480:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 4036484:	00c00044 	movi	r3,1
 4036488:	e0bffa17 	ldw	r2,-24(fp)
 403648c:	1884983a 	sll	r2,r3,r2
 4036490:	1007883a 	mov	r3,r2
 4036494:	d0a6d617 	ldw	r2,-25768(gp)
 4036498:	1884b03a 	or	r2,r3,r2
 403649c:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 40364a0:	d0a6d617 	ldw	r2,-25768(gp)
 40364a4:	100170fa 	wrctl	ienable,r2
 40364a8:	e0bffc17 	ldw	r2,-16(fp)
 40364ac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 40364b0:	e0bffd17 	ldw	r2,-12(fp)
 40364b4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 40364b8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 40364bc:	0001883a 	nop
}
 40364c0:	e037883a 	mov	sp,fp
 40364c4:	df000017 	ldw	fp,0(sp)
 40364c8:	dec00104 	addi	sp,sp,4
 40364cc:	f800283a 	ret

040364d0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 40364d0:	defff904 	addi	sp,sp,-28
 40364d4:	df000615 	stw	fp,24(sp)
 40364d8:	df000604 	addi	fp,sp,24
 40364dc:	e13ffe15 	stw	r4,-8(fp)
 40364e0:	e17fff15 	stw	r5,-4(fp)
 40364e4:	e0bfff17 	ldw	r2,-4(fp)
 40364e8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 40364ec:	0005303a 	rdctl	r2,status
 40364f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40364f4:	e0fffb17 	ldw	r3,-20(fp)
 40364f8:	00bfff84 	movi	r2,-2
 40364fc:	1884703a 	and	r2,r3,r2
 4036500:	1001703a 	wrctl	status,r2
  
  return context;
 4036504:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4036508:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 403650c:	00c00044 	movi	r3,1
 4036510:	e0bffa17 	ldw	r2,-24(fp)
 4036514:	1884983a 	sll	r2,r3,r2
 4036518:	0084303a 	nor	r2,zero,r2
 403651c:	1007883a 	mov	r3,r2
 4036520:	d0a6d617 	ldw	r2,-25768(gp)
 4036524:	1884703a 	and	r2,r3,r2
 4036528:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 403652c:	d0a6d617 	ldw	r2,-25768(gp)
 4036530:	100170fa 	wrctl	ienable,r2
 4036534:	e0bffc17 	ldw	r2,-16(fp)
 4036538:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 403653c:	e0bffd17 	ldw	r2,-12(fp)
 4036540:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 4036544:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 4036548:	0001883a 	nop
}
 403654c:	e037883a 	mov	sp,fp
 4036550:	df000017 	ldw	fp,0(sp)
 4036554:	dec00104 	addi	sp,sp,4
 4036558:	f800283a 	ret

0403655c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 403655c:	defffc04 	addi	sp,sp,-16
 4036560:	df000315 	stw	fp,12(sp)
 4036564:	df000304 	addi	fp,sp,12
 4036568:	e13ffe15 	stw	r4,-8(fp)
 403656c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 4036570:	000530fa 	rdctl	r2,ienable
 4036574:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 4036578:	00c00044 	movi	r3,1
 403657c:	e0bfff17 	ldw	r2,-4(fp)
 4036580:	1884983a 	sll	r2,r3,r2
 4036584:	1007883a 	mov	r3,r2
 4036588:	e0bffd17 	ldw	r2,-12(fp)
 403658c:	1884703a 	and	r2,r3,r2
 4036590:	1004c03a 	cmpne	r2,r2,zero
 4036594:	10803fcc 	andi	r2,r2,255
}
 4036598:	e037883a 	mov	sp,fp
 403659c:	df000017 	ldw	fp,0(sp)
 40365a0:	dec00104 	addi	sp,sp,4
 40365a4:	f800283a 	ret

040365a8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 40365a8:	defff504 	addi	sp,sp,-44
 40365ac:	dfc00a15 	stw	ra,40(sp)
 40365b0:	df000915 	stw	fp,36(sp)
 40365b4:	df000904 	addi	fp,sp,36
 40365b8:	e13ffc15 	stw	r4,-16(fp)
 40365bc:	e17ffd15 	stw	r5,-12(fp)
 40365c0:	e1bffe15 	stw	r6,-8(fp)
 40365c4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 40365c8:	00bffa84 	movi	r2,-22
 40365cc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 40365d0:	e0bffd17 	ldw	r2,-12(fp)
 40365d4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 40365d8:	e0bff817 	ldw	r2,-32(fp)
 40365dc:	10800808 	cmpgei	r2,r2,32
 40365e0:	1000271e 	bne	r2,zero,4036680 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 40365e4:	0005303a 	rdctl	r2,status
 40365e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40365ec:	e0fffb17 	ldw	r3,-20(fp)
 40365f0:	00bfff84 	movi	r2,-2
 40365f4:	1884703a 	and	r2,r3,r2
 40365f8:	1001703a 	wrctl	status,r2
  
  return context;
 40365fc:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 4036600:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 4036604:	00810134 	movhi	r2,1028
 4036608:	10ab6404 	addi	r2,r2,-21104
 403660c:	e0fff817 	ldw	r3,-32(fp)
 4036610:	180690fa 	slli	r3,r3,3
 4036614:	10c5883a 	add	r2,r2,r3
 4036618:	e0fffe17 	ldw	r3,-8(fp)
 403661c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 4036620:	00810134 	movhi	r2,1028
 4036624:	10ab6404 	addi	r2,r2,-21104
 4036628:	e0fff817 	ldw	r3,-32(fp)
 403662c:	180690fa 	slli	r3,r3,3
 4036630:	10c5883a 	add	r2,r2,r3
 4036634:	10800104 	addi	r2,r2,4
 4036638:	e0ffff17 	ldw	r3,-4(fp)
 403663c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 4036640:	e0bffe17 	ldw	r2,-8(fp)
 4036644:	10000526 	beq	r2,zero,403665c <alt_iic_isr_register+0xb4>
 4036648:	e0bff817 	ldw	r2,-32(fp)
 403664c:	100b883a 	mov	r5,r2
 4036650:	e13ffc17 	ldw	r4,-16(fp)
 4036654:	40364480 	call	4036448 <alt_ic_irq_enable>
 4036658:	00000406 	br	403666c <alt_iic_isr_register+0xc4>
 403665c:	e0bff817 	ldw	r2,-32(fp)
 4036660:	100b883a 	mov	r5,r2
 4036664:	e13ffc17 	ldw	r4,-16(fp)
 4036668:	40364d00 	call	40364d0 <alt_ic_irq_disable>
 403666c:	e0bff715 	stw	r2,-36(fp)
 4036670:	e0bffa17 	ldw	r2,-24(fp)
 4036674:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4036678:	e0bff917 	ldw	r2,-28(fp)
 403667c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 4036680:	e0bff717 	ldw	r2,-36(fp)
}
 4036684:	e037883a 	mov	sp,fp
 4036688:	dfc00117 	ldw	ra,4(sp)
 403668c:	df000017 	ldw	fp,0(sp)
 4036690:	dec00204 	addi	sp,sp,8
 4036694:	f800283a 	ret

04036698 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 4036698:	defff904 	addi	sp,sp,-28
 403669c:	dfc00615 	stw	ra,24(sp)
 40366a0:	df000515 	stw	fp,20(sp)
 40366a4:	df000504 	addi	fp,sp,20
 40366a8:	e13ffc15 	stw	r4,-16(fp)
 40366ac:	e17ffd15 	stw	r5,-12(fp)
 40366b0:	e1bffe15 	stw	r6,-8(fp)
 40366b4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 40366b8:	e1bfff17 	ldw	r6,-4(fp)
 40366bc:	e17ffe17 	ldw	r5,-8(fp)
 40366c0:	e13ffd17 	ldw	r4,-12(fp)
 40366c4:	40346780 	call	4034678 <open>
 40366c8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 40366cc:	e0bffb17 	ldw	r2,-20(fp)
 40366d0:	10001c16 	blt	r2,zero,4036744 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 40366d4:	00810134 	movhi	r2,1028
 40366d8:	10a00804 	addi	r2,r2,-32736
 40366dc:	e0fffb17 	ldw	r3,-20(fp)
 40366e0:	18c00324 	muli	r3,r3,12
 40366e4:	10c5883a 	add	r2,r2,r3
 40366e8:	10c00017 	ldw	r3,0(r2)
 40366ec:	e0bffc17 	ldw	r2,-16(fp)
 40366f0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 40366f4:	00810134 	movhi	r2,1028
 40366f8:	10a00804 	addi	r2,r2,-32736
 40366fc:	e0fffb17 	ldw	r3,-20(fp)
 4036700:	18c00324 	muli	r3,r3,12
 4036704:	10c5883a 	add	r2,r2,r3
 4036708:	10800104 	addi	r2,r2,4
 403670c:	10c00017 	ldw	r3,0(r2)
 4036710:	e0bffc17 	ldw	r2,-16(fp)
 4036714:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 4036718:	00810134 	movhi	r2,1028
 403671c:	10a00804 	addi	r2,r2,-32736
 4036720:	e0fffb17 	ldw	r3,-20(fp)
 4036724:	18c00324 	muli	r3,r3,12
 4036728:	10c5883a 	add	r2,r2,r3
 403672c:	10800204 	addi	r2,r2,8
 4036730:	10c00017 	ldw	r3,0(r2)
 4036734:	e0bffc17 	ldw	r2,-16(fp)
 4036738:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 403673c:	e13ffb17 	ldw	r4,-20(fp)
 4036740:	4034b6c0 	call	4034b6c <alt_release_fd>
  }
} 
 4036744:	0001883a 	nop
 4036748:	e037883a 	mov	sp,fp
 403674c:	dfc00117 	ldw	ra,4(sp)
 4036750:	df000017 	ldw	fp,0(sp)
 4036754:	dec00204 	addi	sp,sp,8
 4036758:	f800283a 	ret

0403675c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 403675c:	defffb04 	addi	sp,sp,-20
 4036760:	dfc00415 	stw	ra,16(sp)
 4036764:	df000315 	stw	fp,12(sp)
 4036768:	df000304 	addi	fp,sp,12
 403676c:	e13ffd15 	stw	r4,-12(fp)
 4036770:	e17ffe15 	stw	r5,-8(fp)
 4036774:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 4036778:	01c07fc4 	movi	r7,511
 403677c:	01800044 	movi	r6,1
 4036780:	e17ffd17 	ldw	r5,-12(fp)
 4036784:	01010134 	movhi	r4,1028
 4036788:	21200b04 	addi	r4,r4,-32724
 403678c:	40366980 	call	4036698 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 4036790:	01c07fc4 	movi	r7,511
 4036794:	000d883a 	mov	r6,zero
 4036798:	e17ffe17 	ldw	r5,-8(fp)
 403679c:	01010134 	movhi	r4,1028
 40367a0:	21200804 	addi	r4,r4,-32736
 40367a4:	40366980 	call	4036698 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 40367a8:	01c07fc4 	movi	r7,511
 40367ac:	01800044 	movi	r6,1
 40367b0:	e17fff17 	ldw	r5,-4(fp)
 40367b4:	01010134 	movhi	r4,1028
 40367b8:	21200e04 	addi	r4,r4,-32712
 40367bc:	40366980 	call	4036698 <alt_open_fd>
}  
 40367c0:	0001883a 	nop
 40367c4:	e037883a 	mov	sp,fp
 40367c8:	dfc00117 	ldw	ra,4(sp)
 40367cc:	df000017 	ldw	fp,0(sp)
 40367d0:	dec00204 	addi	sp,sp,8
 40367d4:	f800283a 	ret

040367d8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 40367d8:	defffa04 	addi	sp,sp,-24
 40367dc:	df000515 	stw	fp,20(sp)
 40367e0:	df000504 	addi	fp,sp,20
 40367e4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 40367e8:	0005303a 	rdctl	r2,status
 40367ec:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40367f0:	e0fffc17 	ldw	r3,-16(fp)
 40367f4:	00bfff84 	movi	r2,-2
 40367f8:	1884703a 	and	r2,r3,r2
 40367fc:	1001703a 	wrctl	status,r2
  
  return context;
 4036800:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 4036804:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 4036808:	e0bfff17 	ldw	r2,-4(fp)
 403680c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 4036810:	e0bffd17 	ldw	r2,-12(fp)
 4036814:	10800017 	ldw	r2,0(r2)
 4036818:	e0fffd17 	ldw	r3,-12(fp)
 403681c:	18c00117 	ldw	r3,4(r3)
 4036820:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 4036824:	e0bffd17 	ldw	r2,-12(fp)
 4036828:	10800117 	ldw	r2,4(r2)
 403682c:	e0fffd17 	ldw	r3,-12(fp)
 4036830:	18c00017 	ldw	r3,0(r3)
 4036834:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 4036838:	e0bffd17 	ldw	r2,-12(fp)
 403683c:	e0fffd17 	ldw	r3,-12(fp)
 4036840:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 4036844:	e0bffd17 	ldw	r2,-12(fp)
 4036848:	e0fffd17 	ldw	r3,-12(fp)
 403684c:	10c00015 	stw	r3,0(r2)
 4036850:	e0bffb17 	ldw	r2,-20(fp)
 4036854:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4036858:	e0bffe17 	ldw	r2,-8(fp)
 403685c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 4036860:	0001883a 	nop
 4036864:	e037883a 	mov	sp,fp
 4036868:	df000017 	ldw	fp,0(sp)
 403686c:	dec00104 	addi	sp,sp,4
 4036870:	f800283a 	ret

04036874 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 4036874:	defffb04 	addi	sp,sp,-20
 4036878:	dfc00415 	stw	ra,16(sp)
 403687c:	df000315 	stw	fp,12(sp)
 4036880:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 4036884:	d0a00e17 	ldw	r2,-32712(gp)
 4036888:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 403688c:	d0a6d817 	ldw	r2,-25760(gp)
 4036890:	10800044 	addi	r2,r2,1
 4036894:	d0a6d815 	stw	r2,-25760(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4036898:	00002e06 	br	4036954 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 403689c:	e0bffd17 	ldw	r2,-12(fp)
 40368a0:	10800017 	ldw	r2,0(r2)
 40368a4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 40368a8:	e0bffd17 	ldw	r2,-12(fp)
 40368ac:	10800403 	ldbu	r2,16(r2)
 40368b0:	10803fcc 	andi	r2,r2,255
 40368b4:	10000426 	beq	r2,zero,40368c8 <alt_tick+0x54>
 40368b8:	d0a6d817 	ldw	r2,-25760(gp)
 40368bc:	1000021e 	bne	r2,zero,40368c8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 40368c0:	e0bffd17 	ldw	r2,-12(fp)
 40368c4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 40368c8:	e0bffd17 	ldw	r2,-12(fp)
 40368cc:	10800217 	ldw	r2,8(r2)
 40368d0:	d0e6d817 	ldw	r3,-25760(gp)
 40368d4:	18801d36 	bltu	r3,r2,403694c <alt_tick+0xd8>
 40368d8:	e0bffd17 	ldw	r2,-12(fp)
 40368dc:	10800403 	ldbu	r2,16(r2)
 40368e0:	10803fcc 	andi	r2,r2,255
 40368e4:	1000191e 	bne	r2,zero,403694c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 40368e8:	e0bffd17 	ldw	r2,-12(fp)
 40368ec:	10800317 	ldw	r2,12(r2)
 40368f0:	e0fffd17 	ldw	r3,-12(fp)
 40368f4:	18c00517 	ldw	r3,20(r3)
 40368f8:	1809883a 	mov	r4,r3
 40368fc:	103ee83a 	callr	r2
 4036900:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 4036904:	e0bfff17 	ldw	r2,-4(fp)
 4036908:	1000031e 	bne	r2,zero,4036918 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 403690c:	e13ffd17 	ldw	r4,-12(fp)
 4036910:	40367d80 	call	40367d8 <alt_alarm_stop>
 4036914:	00000d06 	br	403694c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 4036918:	e0bffd17 	ldw	r2,-12(fp)
 403691c:	10c00217 	ldw	r3,8(r2)
 4036920:	e0bfff17 	ldw	r2,-4(fp)
 4036924:	1887883a 	add	r3,r3,r2
 4036928:	e0bffd17 	ldw	r2,-12(fp)
 403692c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 4036930:	e0bffd17 	ldw	r2,-12(fp)
 4036934:	10c00217 	ldw	r3,8(r2)
 4036938:	d0a6d817 	ldw	r2,-25760(gp)
 403693c:	1880032e 	bgeu	r3,r2,403694c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 4036940:	e0bffd17 	ldw	r2,-12(fp)
 4036944:	00c00044 	movi	r3,1
 4036948:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 403694c:	e0bffe17 	ldw	r2,-8(fp)
 4036950:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4036954:	e0fffd17 	ldw	r3,-12(fp)
 4036958:	d0a00e04 	addi	r2,gp,-32712
 403695c:	18bfcf1e 	bne	r3,r2,403689c <_gp+0xffff569c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 4036960:	0001883a 	nop
}
 4036964:	0001883a 	nop
 4036968:	e037883a 	mov	sp,fp
 403696c:	dfc00117 	ldw	ra,4(sp)
 4036970:	df000017 	ldw	fp,0(sp)
 4036974:	dec00204 	addi	sp,sp,8
 4036978:	f800283a 	ret

0403697c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 403697c:	deffff04 	addi	sp,sp,-4
 4036980:	df000015 	stw	fp,0(sp)
 4036984:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 4036988:	000170fa 	wrctl	ienable,zero
}
 403698c:	0001883a 	nop
 4036990:	e037883a 	mov	sp,fp
 4036994:	df000017 	ldw	fp,0(sp)
 4036998:	dec00104 	addi	sp,sp,4
 403699c:	f800283a 	ret

040369a0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 40369a0:	defffb04 	addi	sp,sp,-20
 40369a4:	df000415 	stw	fp,16(sp)
 40369a8:	df000404 	addi	fp,sp,16
 40369ac:	e13ffe15 	stw	r4,-8(fp)
 40369b0:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 40369b4:	e0bfff17 	ldw	r2,-4(fp)
 40369b8:	10840070 	cmpltui	r2,r2,4097
 40369bc:	1000021e 	bne	r2,zero,40369c8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 40369c0:	00840004 	movi	r2,4096
 40369c4:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 40369c8:	e0fffe17 	ldw	r3,-8(fp)
 40369cc:	e0bfff17 	ldw	r2,-4(fp)
 40369d0:	1885883a 	add	r2,r3,r2
 40369d4:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 40369d8:	e0bffe17 	ldw	r2,-8(fp)
 40369dc:	e0bffc15 	stw	r2,-16(fp)
 40369e0:	00000506 	br	40369f8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 40369e4:	e0bffc17 	ldw	r2,-16(fp)
 40369e8:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 40369ec:	e0bffc17 	ldw	r2,-16(fp)
 40369f0:	10800804 	addi	r2,r2,32
 40369f4:	e0bffc15 	stw	r2,-16(fp)
 40369f8:	e0fffc17 	ldw	r3,-16(fp)
 40369fc:	e0bffd17 	ldw	r2,-12(fp)
 4036a00:	18bff836 	bltu	r3,r2,40369e4 <_gp+0xffff57e4>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 4036a04:	e0bffe17 	ldw	r2,-8(fp)
 4036a08:	108007cc 	andi	r2,r2,31
 4036a0c:	10000226 	beq	r2,zero,4036a18 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 4036a10:	e0bffc17 	ldw	r2,-16(fp)
 4036a14:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 4036a18:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 4036a1c:	0001883a 	nop
 4036a20:	e037883a 	mov	sp,fp
 4036a24:	df000017 	ldw	fp,0(sp)
 4036a28:	dec00104 	addi	sp,sp,4
 4036a2c:	f800283a 	ret

04036a30 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4036a30:	defffe04 	addi	sp,sp,-8
 4036a34:	df000115 	stw	fp,4(sp)
 4036a38:	df000104 	addi	fp,sp,4
 4036a3c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 4036a40:	e0bfff17 	ldw	r2,-4(fp)
 4036a44:	10bffe84 	addi	r2,r2,-6
 4036a48:	10c00428 	cmpgeui	r3,r2,16
 4036a4c:	18001a1e 	bne	r3,zero,4036ab8 <alt_exception_cause_generated_bad_addr+0x88>
 4036a50:	100690ba 	slli	r3,r2,2
 4036a54:	008100f4 	movhi	r2,1027
 4036a58:	109a9a04 	addi	r2,r2,27240
 4036a5c:	1885883a 	add	r2,r3,r2
 4036a60:	10800017 	ldw	r2,0(r2)
 4036a64:	1000683a 	jmp	r2
 4036a68:	04036aa8 	cmpgeui	r16,zero,3498
 4036a6c:	04036aa8 	cmpgeui	r16,zero,3498
 4036a70:	04036ab8 	rdprs	r16,zero,3498
 4036a74:	04036ab8 	rdprs	r16,zero,3498
 4036a78:	04036ab8 	rdprs	r16,zero,3498
 4036a7c:	04036aa8 	cmpgeui	r16,zero,3498
 4036a80:	04036ab0 	cmpltui	r16,zero,3498
 4036a84:	04036ab8 	rdprs	r16,zero,3498
 4036a88:	04036aa8 	cmpgeui	r16,zero,3498
 4036a8c:	04036aa8 	cmpgeui	r16,zero,3498
 4036a90:	04036ab8 	rdprs	r16,zero,3498
 4036a94:	04036aa8 	cmpgeui	r16,zero,3498
 4036a98:	04036ab0 	cmpltui	r16,zero,3498
 4036a9c:	04036ab8 	rdprs	r16,zero,3498
 4036aa0:	04036ab8 	rdprs	r16,zero,3498
 4036aa4:	04036aa8 	cmpgeui	r16,zero,3498
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 4036aa8:	00800044 	movi	r2,1
 4036aac:	00000306 	br	4036abc <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 4036ab0:	0005883a 	mov	r2,zero
 4036ab4:	00000106 	br	4036abc <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 4036ab8:	0005883a 	mov	r2,zero
  }
}
 4036abc:	e037883a 	mov	sp,fp
 4036ac0:	df000017 	ldw	fp,0(sp)
 4036ac4:	dec00104 	addi	sp,sp,4
 4036ac8:	f800283a 	ret

04036acc <atexit>:
 4036acc:	200b883a 	mov	r5,r4
 4036ad0:	000f883a 	mov	r7,zero
 4036ad4:	000d883a 	mov	r6,zero
 4036ad8:	0009883a 	mov	r4,zero
 4036adc:	4036cfc1 	jmpi	4036cfc <__register_exitproc>

04036ae0 <exit>:
 4036ae0:	defffe04 	addi	sp,sp,-8
 4036ae4:	000b883a 	mov	r5,zero
 4036ae8:	dc000015 	stw	r16,0(sp)
 4036aec:	dfc00115 	stw	ra,4(sp)
 4036af0:	2021883a 	mov	r16,r4
 4036af4:	4036e140 	call	4036e14 <__call_exitprocs>
 4036af8:	00810134 	movhi	r2,1028
 4036afc:	10a48004 	addi	r2,r2,-28160
 4036b00:	11000017 	ldw	r4,0(r2)
 4036b04:	20800f17 	ldw	r2,60(r4)
 4036b08:	10000126 	beq	r2,zero,4036b10 <exit+0x30>
 4036b0c:	103ee83a 	callr	r2
 4036b10:	8009883a 	mov	r4,r16
 4036b14:	40370040 	call	4037004 <_exit>

04036b18 <memcmp>:
 4036b18:	01c000c4 	movi	r7,3
 4036b1c:	3980192e 	bgeu	r7,r6,4036b84 <memcmp+0x6c>
 4036b20:	2144b03a 	or	r2,r4,r5
 4036b24:	11c4703a 	and	r2,r2,r7
 4036b28:	10000f26 	beq	r2,zero,4036b68 <memcmp+0x50>
 4036b2c:	20800003 	ldbu	r2,0(r4)
 4036b30:	28c00003 	ldbu	r3,0(r5)
 4036b34:	10c0151e 	bne	r2,r3,4036b8c <memcmp+0x74>
 4036b38:	31bfff84 	addi	r6,r6,-2
 4036b3c:	01ffffc4 	movi	r7,-1
 4036b40:	00000406 	br	4036b54 <memcmp+0x3c>
 4036b44:	20800003 	ldbu	r2,0(r4)
 4036b48:	28c00003 	ldbu	r3,0(r5)
 4036b4c:	31bfffc4 	addi	r6,r6,-1
 4036b50:	10c00e1e 	bne	r2,r3,4036b8c <memcmp+0x74>
 4036b54:	21000044 	addi	r4,r4,1
 4036b58:	29400044 	addi	r5,r5,1
 4036b5c:	31fff91e 	bne	r6,r7,4036b44 <_gp+0xffff5944>
 4036b60:	0005883a 	mov	r2,zero
 4036b64:	f800283a 	ret
 4036b68:	20c00017 	ldw	r3,0(r4)
 4036b6c:	28800017 	ldw	r2,0(r5)
 4036b70:	18bfee1e 	bne	r3,r2,4036b2c <_gp+0xffff592c>
 4036b74:	31bfff04 	addi	r6,r6,-4
 4036b78:	21000104 	addi	r4,r4,4
 4036b7c:	29400104 	addi	r5,r5,4
 4036b80:	39bff936 	bltu	r7,r6,4036b68 <_gp+0xffff5968>
 4036b84:	303fe91e 	bne	r6,zero,4036b2c <_gp+0xffff592c>
 4036b88:	003ff506 	br	4036b60 <_gp+0xffff5960>
 4036b8c:	10c5c83a 	sub	r2,r2,r3
 4036b90:	f800283a 	ret

04036b94 <_putc_r>:
 4036b94:	defffc04 	addi	sp,sp,-16
 4036b98:	dc000215 	stw	r16,8(sp)
 4036b9c:	dfc00315 	stw	ra,12(sp)
 4036ba0:	2021883a 	mov	r16,r4
 4036ba4:	20000226 	beq	r4,zero,4036bb0 <_putc_r+0x1c>
 4036ba8:	20800e17 	ldw	r2,56(r4)
 4036bac:	10001b26 	beq	r2,zero,4036c1c <_putc_r+0x88>
 4036bb0:	30800217 	ldw	r2,8(r6)
 4036bb4:	10bfffc4 	addi	r2,r2,-1
 4036bb8:	30800215 	stw	r2,8(r6)
 4036bbc:	10000a16 	blt	r2,zero,4036be8 <_putc_r+0x54>
 4036bc0:	30800017 	ldw	r2,0(r6)
 4036bc4:	11400005 	stb	r5,0(r2)
 4036bc8:	30800017 	ldw	r2,0(r6)
 4036bcc:	10c00044 	addi	r3,r2,1
 4036bd0:	30c00015 	stw	r3,0(r6)
 4036bd4:	10800003 	ldbu	r2,0(r2)
 4036bd8:	dfc00317 	ldw	ra,12(sp)
 4036bdc:	dc000217 	ldw	r16,8(sp)
 4036be0:	dec00404 	addi	sp,sp,16
 4036be4:	f800283a 	ret
 4036be8:	30c00617 	ldw	r3,24(r6)
 4036bec:	10c00616 	blt	r2,r3,4036c08 <_putc_r+0x74>
 4036bf0:	30800017 	ldw	r2,0(r6)
 4036bf4:	00c00284 	movi	r3,10
 4036bf8:	11400005 	stb	r5,0(r2)
 4036bfc:	30800017 	ldw	r2,0(r6)
 4036c00:	11400003 	ldbu	r5,0(r2)
 4036c04:	28fff11e 	bne	r5,r3,4036bcc <_gp+0xffff59cc>
 4036c08:	8009883a 	mov	r4,r16
 4036c0c:	dfc00317 	ldw	ra,12(sp)
 4036c10:	dc000217 	ldw	r16,8(sp)
 4036c14:	dec00404 	addi	sp,sp,16
 4036c18:	40313b41 	jmpi	40313b4 <__swbuf_r>
 4036c1c:	d9400015 	stw	r5,0(sp)
 4036c20:	d9800115 	stw	r6,4(sp)
 4036c24:	40247200 	call	4024720 <__sinit>
 4036c28:	d9800117 	ldw	r6,4(sp)
 4036c2c:	d9400017 	ldw	r5,0(sp)
 4036c30:	003fdf06 	br	4036bb0 <_gp+0xffff59b0>

04036c34 <putc>:
 4036c34:	00810134 	movhi	r2,1028
 4036c38:	defffc04 	addi	sp,sp,-16
 4036c3c:	10a48104 	addi	r2,r2,-28156
 4036c40:	dc000115 	stw	r16,4(sp)
 4036c44:	14000017 	ldw	r16,0(r2)
 4036c48:	dc400215 	stw	r17,8(sp)
 4036c4c:	dfc00315 	stw	ra,12(sp)
 4036c50:	2023883a 	mov	r17,r4
 4036c54:	80000226 	beq	r16,zero,4036c60 <putc+0x2c>
 4036c58:	80800e17 	ldw	r2,56(r16)
 4036c5c:	10001a26 	beq	r2,zero,4036cc8 <putc+0x94>
 4036c60:	28800217 	ldw	r2,8(r5)
 4036c64:	10bfffc4 	addi	r2,r2,-1
 4036c68:	28800215 	stw	r2,8(r5)
 4036c6c:	10000b16 	blt	r2,zero,4036c9c <putc+0x68>
 4036c70:	28800017 	ldw	r2,0(r5)
 4036c74:	14400005 	stb	r17,0(r2)
 4036c78:	28800017 	ldw	r2,0(r5)
 4036c7c:	10c00044 	addi	r3,r2,1
 4036c80:	28c00015 	stw	r3,0(r5)
 4036c84:	10800003 	ldbu	r2,0(r2)
 4036c88:	dfc00317 	ldw	ra,12(sp)
 4036c8c:	dc400217 	ldw	r17,8(sp)
 4036c90:	dc000117 	ldw	r16,4(sp)
 4036c94:	dec00404 	addi	sp,sp,16
 4036c98:	f800283a 	ret
 4036c9c:	28c00617 	ldw	r3,24(r5)
 4036ca0:	10c00e16 	blt	r2,r3,4036cdc <putc+0xa8>
 4036ca4:	28800017 	ldw	r2,0(r5)
 4036ca8:	01000284 	movi	r4,10
 4036cac:	14400005 	stb	r17,0(r2)
 4036cb0:	28800017 	ldw	r2,0(r5)
 4036cb4:	10c00003 	ldbu	r3,0(r2)
 4036cb8:	193ff01e 	bne	r3,r4,4036c7c <_gp+0xffff5a7c>
 4036cbc:	280d883a 	mov	r6,r5
 4036cc0:	180b883a 	mov	r5,r3
 4036cc4:	00000706 	br	4036ce4 <putc+0xb0>
 4036cc8:	8009883a 	mov	r4,r16
 4036ccc:	d9400015 	stw	r5,0(sp)
 4036cd0:	40247200 	call	4024720 <__sinit>
 4036cd4:	d9400017 	ldw	r5,0(sp)
 4036cd8:	003fe106 	br	4036c60 <_gp+0xffff5a60>
 4036cdc:	280d883a 	mov	r6,r5
 4036ce0:	880b883a 	mov	r5,r17
 4036ce4:	8009883a 	mov	r4,r16
 4036ce8:	dfc00317 	ldw	ra,12(sp)
 4036cec:	dc400217 	ldw	r17,8(sp)
 4036cf0:	dc000117 	ldw	r16,4(sp)
 4036cf4:	dec00404 	addi	sp,sp,16
 4036cf8:	40313b41 	jmpi	40313b4 <__swbuf_r>

04036cfc <__register_exitproc>:
 4036cfc:	defffa04 	addi	sp,sp,-24
 4036d00:	dc000315 	stw	r16,12(sp)
 4036d04:	04010134 	movhi	r16,1028
 4036d08:	84248004 	addi	r16,r16,-28160
 4036d0c:	80c00017 	ldw	r3,0(r16)
 4036d10:	dc400415 	stw	r17,16(sp)
 4036d14:	dfc00515 	stw	ra,20(sp)
 4036d18:	18805217 	ldw	r2,328(r3)
 4036d1c:	2023883a 	mov	r17,r4
 4036d20:	10003726 	beq	r2,zero,4036e00 <__register_exitproc+0x104>
 4036d24:	10c00117 	ldw	r3,4(r2)
 4036d28:	010007c4 	movi	r4,31
 4036d2c:	20c00e16 	blt	r4,r3,4036d68 <__register_exitproc+0x6c>
 4036d30:	1a000044 	addi	r8,r3,1
 4036d34:	8800221e 	bne	r17,zero,4036dc0 <__register_exitproc+0xc4>
 4036d38:	18c00084 	addi	r3,r3,2
 4036d3c:	18c7883a 	add	r3,r3,r3
 4036d40:	18c7883a 	add	r3,r3,r3
 4036d44:	12000115 	stw	r8,4(r2)
 4036d48:	10c7883a 	add	r3,r2,r3
 4036d4c:	19400015 	stw	r5,0(r3)
 4036d50:	0005883a 	mov	r2,zero
 4036d54:	dfc00517 	ldw	ra,20(sp)
 4036d58:	dc400417 	ldw	r17,16(sp)
 4036d5c:	dc000317 	ldw	r16,12(sp)
 4036d60:	dec00604 	addi	sp,sp,24
 4036d64:	f800283a 	ret
 4036d68:	00800034 	movhi	r2,0
 4036d6c:	10800004 	addi	r2,r2,0
 4036d70:	10002626 	beq	r2,zero,4036e0c <__register_exitproc+0x110>
 4036d74:	01006404 	movi	r4,400
 4036d78:	d9400015 	stw	r5,0(sp)
 4036d7c:	d9800115 	stw	r6,4(sp)
 4036d80:	d9c00215 	stw	r7,8(sp)
 4036d84:	00000000 	call	0 <__alt_mem_SDRAM_Controller>
 4036d88:	d9400017 	ldw	r5,0(sp)
 4036d8c:	d9800117 	ldw	r6,4(sp)
 4036d90:	d9c00217 	ldw	r7,8(sp)
 4036d94:	10001d26 	beq	r2,zero,4036e0c <__register_exitproc+0x110>
 4036d98:	81000017 	ldw	r4,0(r16)
 4036d9c:	10000115 	stw	zero,4(r2)
 4036da0:	02000044 	movi	r8,1
 4036da4:	22405217 	ldw	r9,328(r4)
 4036da8:	0007883a 	mov	r3,zero
 4036dac:	12400015 	stw	r9,0(r2)
 4036db0:	20805215 	stw	r2,328(r4)
 4036db4:	10006215 	stw	zero,392(r2)
 4036db8:	10006315 	stw	zero,396(r2)
 4036dbc:	883fde26 	beq	r17,zero,4036d38 <_gp+0xffff5b38>
 4036dc0:	18c9883a 	add	r4,r3,r3
 4036dc4:	2109883a 	add	r4,r4,r4
 4036dc8:	1109883a 	add	r4,r2,r4
 4036dcc:	21802215 	stw	r6,136(r4)
 4036dd0:	01800044 	movi	r6,1
 4036dd4:	12406217 	ldw	r9,392(r2)
 4036dd8:	30cc983a 	sll	r6,r6,r3
 4036ddc:	4992b03a 	or	r9,r9,r6
 4036de0:	12406215 	stw	r9,392(r2)
 4036de4:	21c04215 	stw	r7,264(r4)
 4036de8:	01000084 	movi	r4,2
 4036dec:	893fd21e 	bne	r17,r4,4036d38 <_gp+0xffff5b38>
 4036df0:	11006317 	ldw	r4,396(r2)
 4036df4:	218cb03a 	or	r6,r4,r6
 4036df8:	11806315 	stw	r6,396(r2)
 4036dfc:	003fce06 	br	4036d38 <_gp+0xffff5b38>
 4036e00:	18805304 	addi	r2,r3,332
 4036e04:	18805215 	stw	r2,328(r3)
 4036e08:	003fc606 	br	4036d24 <_gp+0xffff5b24>
 4036e0c:	00bfffc4 	movi	r2,-1
 4036e10:	003fd006 	br	4036d54 <_gp+0xffff5b54>

04036e14 <__call_exitprocs>:
 4036e14:	defff504 	addi	sp,sp,-44
 4036e18:	df000915 	stw	fp,36(sp)
 4036e1c:	dd400615 	stw	r21,24(sp)
 4036e20:	dc800315 	stw	r18,12(sp)
 4036e24:	dfc00a15 	stw	ra,40(sp)
 4036e28:	ddc00815 	stw	r23,32(sp)
 4036e2c:	dd800715 	stw	r22,28(sp)
 4036e30:	dd000515 	stw	r20,20(sp)
 4036e34:	dcc00415 	stw	r19,16(sp)
 4036e38:	dc400215 	stw	r17,8(sp)
 4036e3c:	dc000115 	stw	r16,4(sp)
 4036e40:	d9000015 	stw	r4,0(sp)
 4036e44:	2839883a 	mov	fp,r5
 4036e48:	04800044 	movi	r18,1
 4036e4c:	057fffc4 	movi	r21,-1
 4036e50:	00810134 	movhi	r2,1028
 4036e54:	10a48004 	addi	r2,r2,-28160
 4036e58:	12000017 	ldw	r8,0(r2)
 4036e5c:	45005217 	ldw	r20,328(r8)
 4036e60:	44c05204 	addi	r19,r8,328
 4036e64:	a0001c26 	beq	r20,zero,4036ed8 <__call_exitprocs+0xc4>
 4036e68:	a0800117 	ldw	r2,4(r20)
 4036e6c:	15ffffc4 	addi	r23,r2,-1
 4036e70:	b8000d16 	blt	r23,zero,4036ea8 <__call_exitprocs+0x94>
 4036e74:	14000044 	addi	r16,r2,1
 4036e78:	8421883a 	add	r16,r16,r16
 4036e7c:	8421883a 	add	r16,r16,r16
 4036e80:	84402004 	addi	r17,r16,128
 4036e84:	a463883a 	add	r17,r20,r17
 4036e88:	a421883a 	add	r16,r20,r16
 4036e8c:	e0001e26 	beq	fp,zero,4036f08 <__call_exitprocs+0xf4>
 4036e90:	80804017 	ldw	r2,256(r16)
 4036e94:	e0801c26 	beq	fp,r2,4036f08 <__call_exitprocs+0xf4>
 4036e98:	bdffffc4 	addi	r23,r23,-1
 4036e9c:	843fff04 	addi	r16,r16,-4
 4036ea0:	8c7fff04 	addi	r17,r17,-4
 4036ea4:	bd7ff91e 	bne	r23,r21,4036e8c <_gp+0xffff5c8c>
 4036ea8:	00800034 	movhi	r2,0
 4036eac:	10800004 	addi	r2,r2,0
 4036eb0:	10000926 	beq	r2,zero,4036ed8 <__call_exitprocs+0xc4>
 4036eb4:	a0800117 	ldw	r2,4(r20)
 4036eb8:	1000301e 	bne	r2,zero,4036f7c <__call_exitprocs+0x168>
 4036ebc:	a0800017 	ldw	r2,0(r20)
 4036ec0:	10003226 	beq	r2,zero,4036f8c <__call_exitprocs+0x178>
 4036ec4:	a009883a 	mov	r4,r20
 4036ec8:	98800015 	stw	r2,0(r19)
 4036ecc:	00000000 	call	0 <__alt_mem_SDRAM_Controller>
 4036ed0:	9d000017 	ldw	r20,0(r19)
 4036ed4:	a03fe41e 	bne	r20,zero,4036e68 <_gp+0xffff5c68>
 4036ed8:	dfc00a17 	ldw	ra,40(sp)
 4036edc:	df000917 	ldw	fp,36(sp)
 4036ee0:	ddc00817 	ldw	r23,32(sp)
 4036ee4:	dd800717 	ldw	r22,28(sp)
 4036ee8:	dd400617 	ldw	r21,24(sp)
 4036eec:	dd000517 	ldw	r20,20(sp)
 4036ef0:	dcc00417 	ldw	r19,16(sp)
 4036ef4:	dc800317 	ldw	r18,12(sp)
 4036ef8:	dc400217 	ldw	r17,8(sp)
 4036efc:	dc000117 	ldw	r16,4(sp)
 4036f00:	dec00b04 	addi	sp,sp,44
 4036f04:	f800283a 	ret
 4036f08:	a0800117 	ldw	r2,4(r20)
 4036f0c:	80c00017 	ldw	r3,0(r16)
 4036f10:	10bfffc4 	addi	r2,r2,-1
 4036f14:	15c01426 	beq	r2,r23,4036f68 <__call_exitprocs+0x154>
 4036f18:	80000015 	stw	zero,0(r16)
 4036f1c:	183fde26 	beq	r3,zero,4036e98 <_gp+0xffff5c98>
 4036f20:	95c8983a 	sll	r4,r18,r23
 4036f24:	a0806217 	ldw	r2,392(r20)
 4036f28:	a5800117 	ldw	r22,4(r20)
 4036f2c:	2084703a 	and	r2,r4,r2
 4036f30:	10000b26 	beq	r2,zero,4036f60 <__call_exitprocs+0x14c>
 4036f34:	a0806317 	ldw	r2,396(r20)
 4036f38:	2088703a 	and	r4,r4,r2
 4036f3c:	20000c1e 	bne	r4,zero,4036f70 <__call_exitprocs+0x15c>
 4036f40:	89400017 	ldw	r5,0(r17)
 4036f44:	d9000017 	ldw	r4,0(sp)
 4036f48:	183ee83a 	callr	r3
 4036f4c:	a0800117 	ldw	r2,4(r20)
 4036f50:	15bfbf1e 	bne	r2,r22,4036e50 <_gp+0xffff5c50>
 4036f54:	98800017 	ldw	r2,0(r19)
 4036f58:	153fcf26 	beq	r2,r20,4036e98 <_gp+0xffff5c98>
 4036f5c:	003fbc06 	br	4036e50 <_gp+0xffff5c50>
 4036f60:	183ee83a 	callr	r3
 4036f64:	003ff906 	br	4036f4c <_gp+0xffff5d4c>
 4036f68:	a5c00115 	stw	r23,4(r20)
 4036f6c:	003feb06 	br	4036f1c <_gp+0xffff5d1c>
 4036f70:	89000017 	ldw	r4,0(r17)
 4036f74:	183ee83a 	callr	r3
 4036f78:	003ff406 	br	4036f4c <_gp+0xffff5d4c>
 4036f7c:	a0800017 	ldw	r2,0(r20)
 4036f80:	a027883a 	mov	r19,r20
 4036f84:	1029883a 	mov	r20,r2
 4036f88:	003fb606 	br	4036e64 <_gp+0xffff5c64>
 4036f8c:	0005883a 	mov	r2,zero
 4036f90:	003ffb06 	br	4036f80 <_gp+0xffff5d80>

04036f94 <__floatundidf>:
 4036f94:	defffc04 	addi	sp,sp,-16
 4036f98:	dc800215 	stw	r18,8(sp)
 4036f9c:	2025883a 	mov	r18,r4
 4036fa0:	2809883a 	mov	r4,r5
 4036fa4:	dfc00315 	stw	ra,12(sp)
 4036fa8:	dc400115 	stw	r17,4(sp)
 4036fac:	dc000015 	stw	r16,0(sp)
 4036fb0:	4033f0c0 	call	4033f0c <__floatunsidf>
 4036fb4:	000d883a 	mov	r6,zero
 4036fb8:	01d07c34 	movhi	r7,16880
 4036fbc:	180b883a 	mov	r5,r3
 4036fc0:	1009883a 	mov	r4,r2
 4036fc4:	40236240 	call	4023624 <__muldf3>
 4036fc8:	9009883a 	mov	r4,r18
 4036fcc:	1023883a 	mov	r17,r2
 4036fd0:	1821883a 	mov	r16,r3
 4036fd4:	4033f0c0 	call	4033f0c <__floatunsidf>
 4036fd8:	880d883a 	mov	r6,r17
 4036fdc:	800f883a 	mov	r7,r16
 4036fe0:	1009883a 	mov	r4,r2
 4036fe4:	180b883a 	mov	r5,r3
 4036fe8:	40321a40 	call	40321a4 <__adddf3>
 4036fec:	dfc00317 	ldw	ra,12(sp)
 4036ff0:	dc800217 	ldw	r18,8(sp)
 4036ff4:	dc400117 	ldw	r17,4(sp)
 4036ff8:	dc000017 	ldw	r16,0(sp)
 4036ffc:	dec00404 	addi	sp,sp,16
 4037000:	f800283a 	ret

04037004 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4037004:	defffd04 	addi	sp,sp,-12
 4037008:	df000215 	stw	fp,8(sp)
 403700c:	df000204 	addi	fp,sp,8
 4037010:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 4037014:	0001883a 	nop
 4037018:	e0bfff17 	ldw	r2,-4(fp)
 403701c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4037020:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 4037024:	10000226 	beq	r2,zero,4037030 <_exit+0x2c>
    ALT_SIM_FAIL();
 4037028:	002af070 	cmpltui	zero,zero,43969
 403702c:	00000106 	br	4037034 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4037030:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 4037034:	003fff06 	br	4037034 <_gp+0xffff5e34>
