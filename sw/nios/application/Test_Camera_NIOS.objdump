
Test_Camera_NIOS.elf:     file format elf32-littlenios2
Test_Camera_NIOS.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00016624 memsz 0x00016624 flags r-x
    LOAD off    0x00017644 vaddr 0x00036644 paddr 0x00038130 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00019c1c vaddr 0x00039c1c paddr 0x00039c1c align 2**12
         filesz 0x00000000 memsz 0x00000184 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00015dac  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000654  00035ff0  00035ff0  00016ff0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00036644  00038130  00017644  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000184  00039c1c  00039c1c  00019c1c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00039da0  00039da0  00019130  2**0
                  CONTENTS
  7 .sdram_controller_0 00000000  40000000  40000000  00019130  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00019130  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001310  00000000  00000000  00019158  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000321f6  00000000  00000000  0001a468  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000c4c5  00000000  00000000  0004c65e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000ff80  00000000  00000000  00058b23  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000309c  00000000  00000000  00068aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000045d6  00000000  00000000  0006bb40  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001dc17  00000000  00000000  00070116  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0008dd30  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001cd0  00000000  00000000  0008dd90  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00093bf2  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00093bf5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00093c01  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00093c02  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00093c03  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00093c07  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00093c0b  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00093c0f  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  00093c1a  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00093c25  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000a  00000000  00000000  00093c30  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000037  00000000  00000000  00093c3a  2**0
                  CONTENTS, READONLY
 30 .jdi          000055c5  00000000  00000000  00093c71  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     002ba001  00000000  00000000  00099236  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
00035ff0 l    d  .rodata	00000000 .rodata
00036644 l    d  .rwdata	00000000 .rwdata
00039c1c l    d  .bss	00000000 .bss
00039da0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
40000000 l    d  .sdram_controller_0	00000000 .sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/EPFL_CycloneV_Cortex_A9_Camera_Web_Server/sw/nios/Test_Camera_NIOS_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 cmos_sensor_output_generator.c
00020290 l     F .text	0000003c max
000202cc l     F .text	000000c8 write_frame_width_reg
000208ac l     F .text	00000034 is_idle
00020394 l     F .text	000000cc write_frame_height_reg
00020460 l     F .text	000000cc write_frame_frame_blank_reg
0002052c l     F .text	000000cc write_frame_line_blank_reg
000205f8 l     F .text	000000cc write_line_line_blank_reg
000206c4 l     F .text	000000cc write_line_frame_blank_reg
00020790 l     F .text	0000002c read_frame_width_reg
000207bc l     F .text	00000030 read_frame_height_reg
000207ec l     F .text	00000030 read_frame_frame_blank_reg
0002081c l     F .text	00000030 read_frame_line_blank_reg
0002084c l     F .text	00000030 read_line_line_blank_reg
0002087c l     F .text	00000030 read_line_frame_blank_reg
00000000 l    df *ABS*	00000000 Camera_function.c
00000000 l    df *ABS*	00000000 Memory_Access.c
000361e8 l     O .rodata	00000010 __func__.3796
000361f8 l     O .rodata	00000016 __func__.3808
00000000 l    df *ABS*	00000000 function_i2c.c
0002133c l     F .text	00000154 TRDB_D5M_log2
00021490 l     F .text	0000004c TRDB_D5M_shift_amount
000214dc l     F .text	00000060 TRDB_D5M_READ
0002153c l     F .text	0000007c TRDB_D5M_WRITE
00000000 l    df *ABS*	00000000 i2c.c
00021a3c l     F .text	00000034 i2c_usleep
00021a70 l     F .text	00000044 wait_end_of_transfer
00021ab4 l     F .text	00000070 set_data_control
00021b24 l     F .text	00000064 get_data_set_control
00000000 l    df *ABS*	00000000 main.c
00022248 l     F .text	00000154 TRDB_D5M_log2
0002239c l     F .text	0000004c TRDB_D5M_shift_amount
000223e8 l     F .text	00000060 TRDB_D5M_READ
00022448 l     F .text	0000007c TRDB_D5M_WRITE
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00022af0 l     F .text	00000008 __fp_unlock
00022b04 l     F .text	0000019c __sinit.part.1
00022ca0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
00036644 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
000248e8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0003634e l     O .rodata	00000010 zeroes.4389
0003635e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 vfprintf.c
0003636e l     O .rodata	00000010 zeroes.4404
00029218 l     F .text	000000bc __sbprintf
0003637e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 dtoa.c
000294f4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00036e90 l     O .rwdata	00000020 lc_ctype_charset
00036e70 l     O .rwdata	00000020 lc_message_charset
00036eb0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
000363ac l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000364e0 l     O .rodata	00000010 blanks.4332
000364d0 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
0002e678 l     F .text	000000fc __sprint_r.part.0
00036500 l     O .rodata	00000010 blanks.4348
000364f0 l     O .rodata	00000010 zeroes.4349
0002fc04 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00033444 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00033550 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
000335b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
000338b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
00033990 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00033afc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00033be8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
00033dbc l     F .text	0000003c alt_get_errno
00033df8 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
00034010 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00038120 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00034430 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00034564 l     F .text	00000034 alt_dev_reg
00037090 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00034840 l     F .text	0000020c altera_avalon_jtag_uart_irq
00034a4c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00035350 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00035a00 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00039c64 g     O .bss	00000004 alt_instruction_exception_handler
00020ba0 g     F .text	0000006c Camera_Acquisition_Module_SETUP_Length_Frame
0002c6dc g     F .text	00000074 _mprec_log10
0002c7c8 g     F .text	0000008c __any_on
0002b340 g     F .text	00000054 _isatty_r
000363b8 g     O .rodata	00000028 __mprec_tinytens
00033cf8 g     F .text	0000007c alt_main
00024798 g     F .text	000000c0 _puts_r
00039ca0 g     O .bss	00000100 alt_irq
0002b470 g     F .text	00000060 _lseek_r
00038130 g       *ABS*	00000000 __flash_rwdata_start
0002ad7c g     F .text	000000ac __sflags
00031f70 g     F .text	00000088 .hidden __eqdf2
0002b2e4 g     F .text	0000005c _gettimeofday_r
00039da0 g       *ABS*	00000000 __alt_heap_start
0002d130 g     F .text	0000005c _kill_r
0002475c g     F .text	0000003c printf
000300e4 g     F .text	0000009c _wcrtomb_r
0002cef8 g     F .text	00000084 _signal_r
00024cc8 g     F .text	0000005c __sseek
00022e40 g     F .text	00000010 __sinit
0002ff8c g     F .text	00000140 __swbuf_r
0002b394 g     F .text	0000007c _setlocale_r
00022ca8 g     F .text	00000068 __sfmoreglue
00033d98 g     F .text	00000024 __malloc_unlock
0002b6fc g     F .text	0000015c memmove
00020db0 g     F .text	000001cc Capture_Image_Computer
00022e28 g     F .text	00000018 _cleanup
0002b858 g     F .text	000000a8 _Balloc
00031ff8 g     F .text	000000dc .hidden __gtdf2
00035b40 g     F .text	00000024 altera_nios2_gen2_irq_init
00021c98 g     F .text	0000012c i2c_write
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
00021228 g     F .text	00000114 Quick_Test_Memory_Map
000238f8 g     F .text	0000005c _fstat_r
00039c20 g     O .bss	00000004 errno
00024c44 g     F .text	00000008 __seofread
00021744 g     F .text	00000044 init_I2C
0002d43c g     F .text	0000123c ___svfiprintf_internal_r
00021034 g     F .text	00000118 Extract_Colors
00039c50 g     O .bss	00000004 alt_argv
000400f0 g       *ABS*	00000000 _gp
00034400 g     F .text	00000030 usleep
0003369c g     F .text	00000020 getpid
00039c90 g     O .bss	00000010 cmos_sensor_output_generator
00036f10 g     O .rwdata	00000180 alt_fd_list
000354f0 g     F .text	00000090 alt_find_dev
0002b5b4 g     F .text	00000148 memcpy
00022af8 g     F .text	0000000c _cleanup_r
0003325c g     F .text	000000dc .hidden __floatsidf
00021f0c g     F .text	00000194 i2c_write_array
00035ac4 g     F .text	0000007c alt_io_redirect
000320d4 g     F .text	000000f4 .hidden __ltdf2
00035ff0 g       *ABS*	00000000 __DTOR_END__
00024858 g     F .text	00000014 puts
00035bf4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0002ce18 g     F .text	00000074 __fpclassifyd
0002c638 g     F .text	000000a4 __ratio
0002fbe8 g     F .text	0000001c __vfiprintf_internal
00034c44 g     F .text	0000021c altera_avalon_jtag_uart_read
0002472c g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
000209d4 g     F .text	00000108 cmos_sensor_output_generator_configure
0002260c g     F .text	00000064 .hidden __udivsi3
000338ec g     F .text	000000a4 isatty
0002cf7c g     F .text	000000bc _raise_r
000226c8 g     F .text	00000068 __assert_func
00036408 g     O .rodata	000000c8 __mprec_tens
00020cac g     F .text	000000b8 Camera_Acquisition_Module_Display_Registers
0002b410 g     F .text	0000000c __locale_charset
00039c3c g     O .bss	00000008 alt_timezone
00035b64 g     F .text	00000090 alt_icache_flush
00039c2c g     O .bss	00000004 __malloc_top_pad
0002d18c g     F .text	00000004 _getpid_r
00038100 g     O .rwdata	00000004 __mb_cur_max
00021848 g     F .text	000001f4 Camera_Configuration
0002b440 g     F .text	0000000c _localeconv_r
0002bc64 g     F .text	0000003c __i2b
0002ae28 g     F .text	000004bc __sfvwrite_r
0002d038 g     F .text	000000a8 __sigtramp_r
00024ad8 g     F .text	00000054 _sbrk_r
0002c854 g     F .text	00000060 _read_r
00038118 g     O .rwdata	00000004 alt_max_fd
00022744 g     F .text	000000f0 _fclose_r
00022ac0 g     F .text	00000030 fflush
00039c28 g     O .bss	00000004 __malloc_max_sbrked_mem
00030ddc g     F .text	000008ac .hidden __adddf3
0002c3e0 g     F .text	0000010c __b2d
000308a4 g     F .text	00000538 .hidden __umoddi3
00033c24 g     F .text	000000d4 lseek
40000000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
000380f0 g     O .rwdata	00000004 _global_impure_ptr
0002c8b4 g     F .text	00000564 _realloc_r
00039da0 g       *ABS*	00000000 __bss_end
00035910 g     F .text	000000f0 alt_iic_isr_register
000342f8 g     F .text	00000108 alt_tick
0003032c g     F .text	00000578 .hidden __udivdi3
0002fee8 g     F .text	00000024 _fputwc_r
000363e0 g     O .rodata	00000028 __mprec_bigtens
0002ba48 g     F .text	00000104 __s2b
000294dc g     F .text	00000018 abort
00033338 g     F .text	000000a8 .hidden __floatunsidf
0002c120 g     F .text	00000060 __mcmp
00022e60 g     F .text	00000018 __fp_lock_all
000358c4 g     F .text	0000004c alt_ic_irq_enabled
0003425c g     F .text	0000009c alt_alarm_stop
00020b14 g     F .text	00000038 cmos_sensor_output_generator_stop
00039c60 g     O .bss	00000004 alt_irq_active
00023498 g     F .text	00000444 _fseeko_r
000200fc g     F .exceptions	000000d4 alt_irq_handler
00036ee8 g     O .rwdata	00000028 alt_dev_null
00020b4c g     F .text	00000054 Camera_Acquisition_Module_SETUP_Address_Memory
00035308 g     F .text	00000048 alt_dcache_flush_all
0002bb4c g     F .text	00000068 __hi0bits
000331dc g     F .text	00000080 .hidden __fixdfsi
00020adc g     F .text	00000038 cmos_sensor_output_generator_start
00038130 g       *ABS*	00000000 __ram_rwdata_end
00038110 g     O .rwdata	00000008 alt_dev_list
0003446c g     F .text	000000f8 write
00036644 g       *ABS*	00000000 __ram_rodata_end
000335ec g     F .text	000000b0 fstat
00023020 g     F .text	00000024 fprintf
000339cc g     F .text	00000130 kill
00021b88 g     F .text	0000002c i2c_inst
000320d4 g     F .text	000000f4 .hidden __ledf2
0002be98 g     F .text	00000140 __pow5mult
00039c38 g     O .bss	00000004 __nlocale_changed
0002e78c g     F .text	0000145c ___vfiprintf_internal_r
00022670 g     F .text	00000058 .hidden __umodsi3
00039da0 g       *ABS*	00000000 end
000238dc g     F .text	0000001c fseeko
0002347c g     F .text	0000001c fseek
00034780 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00035ff0 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
000333e0 g     F .text	00000064 .hidden __clzsi2
00034e60 g     F .text	00000224 altera_avalon_jtag_uart_write
00022e50 g     F .text	00000004 __sfp_lock_acquire
0002b4d0 g     F .text	000000e4 memchr
00027004 g     F .text	000021f8 ___vfprintf_internal_r
00024b2c g     F .text	00000058 _sprintf_r
00023168 g     F .text	00000310 _free_r
000208e0 g     F .text	00000078 cmos_sensor_output_generator_inst
0002b41c g     F .text	00000010 __locale_mb_cur_max
00035e70 g     F .text	00000180 __call_exitprocs
00039c34 g     O .bss	00000004 __mlocale_changed
000380f8 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00039c58 g     O .bss	00000004 _alt_tick_rate
00024884 g     F .text	00000064 rand
00020fc0 g     F .text	00000074 Convert_Pixels
0002bfd8 g     F .text	00000148 __lshift
00039c5c g     O .bss	00000004 _alt_nticks
0002d0f4 g     F .text	00000018 signal
0003404c g     F .text	000000fc read
000345d0 g     F .text	0000004c alt_sys_init
0002d26c g     F .text	000001d0 __ssprint_r
000246cc g     F .text	00000060 _open_r
00021c18 g     F .text	00000080 i2c_configure
00035d58 g     F .text	00000118 __register_exitproc
0002bca0 g     F .text	000001f8 __multiply
00034aec g     F .text	00000068 altera_avalon_jtag_uart_close
00036644 g       *ABS*	00000000 __ram_rwdata_start
00035ff0 g       *ABS*	00000000 __ram_rodata_start
00039c68 g     O .bss	00000028 __malloc_current_mallinfo
0002c4ec g     F .text	0000014c __d2b
00021788 g     F .text	000000c0 Write_and_Read_I2C
0003461c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00035688 g     F .text	000000a4 alt_get_fd
000351b0 g     F .text	00000158 alt_busy_sleep
00039c1c g     O .bss	00000004 i2c
00029488 g     F .text	00000054 _close_r
00020c5c g     F .text	00000050 Camera_Acquisition_Module_Stop
00035cdc g     F .text	0000007c memcmp
000346dc g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00039da0 g       *ABS*	00000000 __alt_stack_base
0003472c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00023adc g     F .text	000000cc _fwrite_r
00029334 g     F .text	00000154 __swsetup_r
00031688 g     F .text	000008e8 .hidden __divdf3
00022d10 g     F .text	00000118 __sfp
0002c750 g     F .text	00000078 __copybits
00036a68 g     O .rwdata	00000408 __malloc_av_
00022e5c g     F .text	00000004 __sinit_lock_release
000321c8 g     F .text	00000718 .hidden __muldf3
00024bf0 g     F .text	00000054 __sread
00035580 g     F .text	00000108 alt_find_file
0003538c g     F .text	000000a4 alt_dev_llist_insert
000215b8 g     F .text	00000088 trdb_d5m_write
00033d74 g     F .text	00000024 __malloc_lock
00022ff8 g     F .text	00000028 _fprintf_r
000341ac g     F .text	000000b0 sbrk
00024dc4 g     F .text	000021d8 ___svfprintf_internal_r
00022a64 g     F .text	0000005c _fflush_r
0002fcc0 g     F .text	000000c4 _calloc_r
000336bc g     F .text	000001f4 gettimeofday
00020d64 g     F .text	0000004c Test_Camera_Memory
00022fe0 g     F .text	00000018 fopen
00039c1c g       *ABS*	00000000 __bss_start
000245a4 g     F .text	00000128 memset
000224c4 g     F .text	00000050 main
00039c54 g     O .bss	00000004 alt_envp
00039c24 g     O .bss	00000004 __malloc_max_total_mem
0003467c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00021dc4 g     F .text	00000148 i2c_read
000300cc g     F .text	00000018 __swbuf
0002486c g     F .text	00000018 srand
00024d24 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00022834 g     F .text	00000014 fclose
000296f4 g     F .text	00001688 _dtoa_r
00023d98 g     F .text	0000080c _malloc_r
00030240 g     F .text	00000030 __ascii_wctomb
00026f9c g     F .text	00000050 time
0003811c g     O .rwdata	00000004 alt_errno
00022e90 g     F .text	00000020 _fiprintf_r
0002d10c g     F .text	00000010 _init_signal
00023954 g     F .text	000000c4 _fwalk
00022514 g     F .text	00000084 .hidden __divsi3
00023044 g     F .text	00000124 _malloc_trim_r
00035ff0 g       *ABS*	00000000 __CTOR_END__
0002d190 g     F .text	000000dc strcmp
00035ff0 g       *ABS*	00000000 __flash_rodata_start
00035ff0 g       *ABS*	00000000 __DTOR_LIST__
00020f7c g     F .text	00000044 delay
00031f70 g     F .text	00000088 .hidden __nedf2
0002114c g     F .text	000000dc Test_Memory_Map
00034598 g     F .text	00000038 alt_irq_init
00034148 g     F .text	00000064 alt_release_fd
00024b84 g     F .text	0000006c sprintf
00036510 g     O .rodata	00000100 .hidden __clz_tab
00039c30 g     O .bss	00000004 _PathLocale
00035c90 g     F .text	00000014 atexit
000292d4 g     F .text	00000060 _write_r
0002b44c g     F .text	00000018 setlocale
000380f4 g     O .rwdata	00000004 _impure_ptr
00039c4c g     O .bss	00000004 alt_argc
00022848 g     F .text	0000021c __sflush_r
00035490 g     F .text	00000060 _do_dtors
0002b438 g     F .text	00000008 __locale_cjk_lang
00023478 g     F .text	00000004 _fseek_r
00021bb4 g     F .text	00000064 i2c_init
00024904 g     F .text	000001d4 __srefill_r
00020020 g       .exceptions	00000000 alt_irq_entry
0002c37c g     F .text	00000064 __ulp
00022e78 g     F .text	00000018 __fp_unlock_all
00038108 g     O .rwdata	00000008 alt_fs_list
00039c44 g     O .bss	00000008 alt_resettime
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002b464 g     F .text	0000000c localeconv
00035760 g     F .text	00000050 alt_ic_isr_register
00023ba8 g     F .text	00000034 fwrite
00038130 g       *ABS*	00000000 _edata
00039da0 g       *ABS*	00000000 _end
0002fd84 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
00020958 g     F .text	0000007c cmos_sensor_output_generator_init
00034b54 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00021640 g     F .text	000000a0 trdb_d5m_read
00035838 g     F .text	0000008c alt_ic_irq_disable
00024c4c g     F .text	0000007c __swrite
000380fc g     O .rwdata	00000004 __malloc_trim_threshold
0002b42c g     F .text	0000000c __locale_msgcharset
00035ca4 g     F .text	00000038 exit
00022eb0 g     F .text	0000003c fiprintf
00026fec g     F .text	00000018 _vfiprintf_r
00023a18 g     F .text	000000c4 _fwalk_reent
0002c180 g     F .text	000001fc __mdiff
00022598 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00022e54 g     F .text	00000004 __sfp_lock_release
00022eec g     F .text	000000f4 _fopen_r
0003357c g     F .text	00000034 _exit
00035084 g     F .text	0000012c alt_alarm_start
000302cc g     F .text	00000060 .hidden __muldi3
00023bdc g     F .text	000001bc __smakebuf_r
000220a0 g     F .text	000001a8 i2c_read_array
00024d2c g     F .text	00000098 strlen
0002ce8c g     F .text	0000006c _init_signal_r
00033ebc g     F .text	00000154 open
00031ff8 g     F .text	000000dc .hidden __gedf2
00022730 g     F .text	00000014 __assert
00038104 g     O .rwdata	00000004 __wctomb
0002e774 g     F .text	00000018 __sprint_r
0003572c g     F .text	00000034 alt_icache_flush_all
000216e0 g     F .text	00000064 Test_i2c
0003812c g     O .rwdata	00000004 alt_priority_mask
000357b0 g     F .text	00000088 alt_ic_irq_enable
000291fc g     F .text	0000001c __vfprintf_internal
00030270 g     F .text	0000005c _wctomb_r
000328e0 g     F .text	000008fc .hidden __subdf3
0002bbb4 g     F .text	000000b0 __lo0bits
00038124 g     O .rwdata	00000008 alt_alarm_list
00035430 g     F .text	00000060 _do_ctors
0002d11c g     F .text	00000014 __sigtramp
00030180 g     F .text	000000c0 wcrtomb
00020c0c g     F .text	00000050 Camera_Acquisition_Module_Start
00033480 g     F .text	000000d0 close
00033b64 g     F .text	00000084 alt_load
0002ff0c g     F .text	00000080 fputwc
0002d0e0 g     F .text	00000014 raise
00022e58 g     F .text	00000004 __sinit_lock_acquire
0002b928 g     F .text	00000120 __multadd
0002b900 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_mem_sdram_controller_0+0xc0020004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	00800134 	movhi	r2,4
   20140:	10a72804 	addi	r2,r2,-25440
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	00800134 	movhi	r2,4
   20158:	10a72804 	addi	r2,r2,-25440
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_mem_sdram_controller_0+0xc002012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_mem_sdram_controller_0+0xc0020120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6dd17 	ldw	r2,-25740(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6dd17 	ldw	r2,-25740(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_mem_sdram_controller_0+0xc0020248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	06800134 	movhi	gp,4
    ori gp, gp, %lo(_gp)
   20260:	d6803c14 	ori	gp,gp,240
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	10a70714 	ori	r2,r2,39964

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18e76814 	ori	r3,r3,40352

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_mem_sdram_controller_0+0xc0020278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	0033b640 	call	33b64 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	0033cf80 	call	33cf8 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_mem_sdram_controller_0+0xc002028c>

00020290 <max>:
/*
 * max
 *
 * Computes the max between two 32-bit unsigned numbers.
 */
static uint32_t max(uint32_t a, uint32_t b) {
   20290:	defffd04 	addi	sp,sp,-12
   20294:	df000215 	stw	fp,8(sp)
   20298:	df000204 	addi	fp,sp,8
   2029c:	e13ffe15 	stw	r4,-8(fp)
   202a0:	e17fff15 	stw	r5,-4(fp)
    if (a > b) {
   202a4:	e0bffe17 	ldw	r2,-8(fp)
   202a8:	e0ffff17 	ldw	r3,-4(fp)
   202ac:	1880022e 	bgeu	r3,r2,202b8 <max+0x28>
        return a;
   202b0:	e0bffe17 	ldw	r2,-8(fp)
   202b4:	00000106 	br	202bc <max+0x2c>
    } else {
        return b;
   202b8:	e0bfff17 	ldw	r2,-4(fp)
    }
}
   202bc:	e037883a 	mov	sp,fp
   202c0:	df000017 	ldw	fp,0(sp)
   202c4:	dec00104 	addi	sp,sp,4
   202c8:	f800283a 	ret

000202cc <write_frame_width_reg>:
 *
 * Writes the supplied value to the CONFIG_FRAME_WIDTH register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_frame_width_reg(cmos_sensor_output_generator_dev *dev, uint32_t frame_width) {
   202cc:	defffa04 	addi	sp,sp,-24
   202d0:	dfc00515 	stw	ra,20(sp)
   202d4:	df000415 	stw	fp,16(sp)
   202d8:	df000404 	addi	fp,sp,16
   202dc:	e13ffe15 	stw	r4,-8(fp)
   202e0:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   202e4:	e0bffe17 	ldw	r2,-8(fp)
   202e8:	10c00217 	ldw	r3,8(r2)
   202ec:	e0bffe17 	ldw	r2,-8(fp)
   202f0:	10800317 	ldw	r2,12(r2)
   202f4:	100b883a 	mov	r5,r2
   202f8:	1809883a 	mov	r4,r3
   202fc:	00202900 	call	20290 <max>
   20300:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_WIDTH_MIN <= frame_width;
   20304:	e0bfff17 	ldw	r2,-4(fp)
   20308:	108000e8 	cmpgeui	r2,r2,3
   2030c:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = frame_width <= max_reg_value;
   20310:	e0bfff17 	ldw	r2,-4(fp)
   20314:	e0fffc17 	ldw	r3,-16(fp)
   20318:	1885403a 	cmpgeu	r2,r3,r2
   2031c:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   20320:	e0bffd03 	ldbu	r2,-12(fp)
   20324:	10000826 	beq	r2,zero,20348 <write_frame_width_reg+0x7c>
   20328:	e0bffd43 	ldbu	r2,-11(fp)
   2032c:	10000626 	beq	r2,zero,20348 <write_frame_width_reg+0x7c>
   20330:	e13ffe17 	ldw	r4,-8(fp)
   20334:	00208ac0 	call	208ac <is_idle>
   20338:	10803fcc 	andi	r2,r2,255
   2033c:	10000226 	beq	r2,zero,20348 <write_frame_width_reg+0x7c>
   20340:	00800044 	movi	r2,1
   20344:	00000106 	br	2034c <write_frame_width_reg+0x80>
   20348:	0005883a 	mov	r2,zero
   2034c:	e0bffd85 	stb	r2,-10(fp)
   20350:	e0bffd83 	ldbu	r2,-10(fp)
   20354:	1080004c 	andi	r2,r2,1
   20358:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   2035c:	e0bffd83 	ldbu	r2,-10(fp)
   20360:	10000626 	beq	r2,zero,2037c <write_frame_width_reg+0xb0>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_FRAME_WIDTH(dev->base, frame_width);
   20364:	e0bffe17 	ldw	r2,-8(fp)
   20368:	10800017 	ldw	r2,0(r2)
   2036c:	e0ffff17 	ldw	r3,-4(fp)
   20370:	10c00035 	stwio	r3,0(r2)
        return true;
   20374:	00800044 	movi	r2,1
   20378:	00000106 	br	20380 <write_frame_width_reg+0xb4>
    } else {
        return false;
   2037c:	0005883a 	mov	r2,zero
    }
}
   20380:	e037883a 	mov	sp,fp
   20384:	dfc00117 	ldw	ra,4(sp)
   20388:	df000017 	ldw	fp,0(sp)
   2038c:	dec00204 	addi	sp,sp,8
   20390:	f800283a 	ret

00020394 <write_frame_height_reg>:
 *
 * Writes the supplied value to the CONFIG_FRAME_HEIGHT register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_frame_height_reg(cmos_sensor_output_generator_dev *dev, uint32_t frame_height) {
   20394:	defffa04 	addi	sp,sp,-24
   20398:	dfc00515 	stw	ra,20(sp)
   2039c:	df000415 	stw	fp,16(sp)
   203a0:	df000404 	addi	fp,sp,16
   203a4:	e13ffe15 	stw	r4,-8(fp)
   203a8:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   203ac:	e0bffe17 	ldw	r2,-8(fp)
   203b0:	10c00217 	ldw	r3,8(r2)
   203b4:	e0bffe17 	ldw	r2,-8(fp)
   203b8:	10800317 	ldw	r2,12(r2)
   203bc:	100b883a 	mov	r5,r2
   203c0:	1809883a 	mov	r4,r3
   203c4:	00202900 	call	20290 <max>
   203c8:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_HEIGHT_MIN <= frame_height;
   203cc:	e0bfff17 	ldw	r2,-4(fp)
   203d0:	108000e8 	cmpgeui	r2,r2,3
   203d4:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = frame_height <= max_reg_value;
   203d8:	e0bfff17 	ldw	r2,-4(fp)
   203dc:	e0fffc17 	ldw	r3,-16(fp)
   203e0:	1885403a 	cmpgeu	r2,r3,r2
   203e4:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   203e8:	e0bffd03 	ldbu	r2,-12(fp)
   203ec:	10000826 	beq	r2,zero,20410 <write_frame_height_reg+0x7c>
   203f0:	e0bffd43 	ldbu	r2,-11(fp)
   203f4:	10000626 	beq	r2,zero,20410 <write_frame_height_reg+0x7c>
   203f8:	e13ffe17 	ldw	r4,-8(fp)
   203fc:	00208ac0 	call	208ac <is_idle>
   20400:	10803fcc 	andi	r2,r2,255
   20404:	10000226 	beq	r2,zero,20410 <write_frame_height_reg+0x7c>
   20408:	00800044 	movi	r2,1
   2040c:	00000106 	br	20414 <write_frame_height_reg+0x80>
   20410:	0005883a 	mov	r2,zero
   20414:	e0bffd85 	stb	r2,-10(fp)
   20418:	e0bffd83 	ldbu	r2,-10(fp)
   2041c:	1080004c 	andi	r2,r2,1
   20420:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   20424:	e0bffd83 	ldbu	r2,-10(fp)
   20428:	10000726 	beq	r2,zero,20448 <write_frame_height_reg+0xb4>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_FRAME_HEIGHT(dev->base, frame_height);
   2042c:	e0bffe17 	ldw	r2,-8(fp)
   20430:	10800017 	ldw	r2,0(r2)
   20434:	10800104 	addi	r2,r2,4
   20438:	e0ffff17 	ldw	r3,-4(fp)
   2043c:	10c00035 	stwio	r3,0(r2)
        return true;
   20440:	00800044 	movi	r2,1
   20444:	00000106 	br	2044c <write_frame_height_reg+0xb8>
    } else {
        return false;
   20448:	0005883a 	mov	r2,zero
    }
}
   2044c:	e037883a 	mov	sp,fp
   20450:	dfc00117 	ldw	ra,4(sp)
   20454:	df000017 	ldw	fp,0(sp)
   20458:	dec00204 	addi	sp,sp,8
   2045c:	f800283a 	ret

00020460 <write_frame_frame_blank_reg>:
 *
 * Writes the supplied value to the CONFIG_FRAME_FRAME_BLANK register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_frame_frame_blank_reg(cmos_sensor_output_generator_dev *dev, uint32_t frame_frame_blank) {
   20460:	defffa04 	addi	sp,sp,-24
   20464:	dfc00515 	stw	ra,20(sp)
   20468:	df000415 	stw	fp,16(sp)
   2046c:	df000404 	addi	fp,sp,16
   20470:	e13ffe15 	stw	r4,-8(fp)
   20474:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   20478:	e0bffe17 	ldw	r2,-8(fp)
   2047c:	10c00217 	ldw	r3,8(r2)
   20480:	e0bffe17 	ldw	r2,-8(fp)
   20484:	10800317 	ldw	r2,12(r2)
   20488:	100b883a 	mov	r5,r2
   2048c:	1809883a 	mov	r4,r3
   20490:	00202900 	call	20290 <max>
   20494:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_FRAME_BLANK_MIN <= frame_frame_blank;
   20498:	e0bfff17 	ldw	r2,-4(fp)
   2049c:	108000e8 	cmpgeui	r2,r2,3
   204a0:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = frame_frame_blank <= max_reg_value;
   204a4:	e0bfff17 	ldw	r2,-4(fp)
   204a8:	e0fffc17 	ldw	r3,-16(fp)
   204ac:	1885403a 	cmpgeu	r2,r3,r2
   204b0:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   204b4:	e0bffd03 	ldbu	r2,-12(fp)
   204b8:	10000826 	beq	r2,zero,204dc <write_frame_frame_blank_reg+0x7c>
   204bc:	e0bffd43 	ldbu	r2,-11(fp)
   204c0:	10000626 	beq	r2,zero,204dc <write_frame_frame_blank_reg+0x7c>
   204c4:	e13ffe17 	ldw	r4,-8(fp)
   204c8:	00208ac0 	call	208ac <is_idle>
   204cc:	10803fcc 	andi	r2,r2,255
   204d0:	10000226 	beq	r2,zero,204dc <write_frame_frame_blank_reg+0x7c>
   204d4:	00800044 	movi	r2,1
   204d8:	00000106 	br	204e0 <write_frame_frame_blank_reg+0x80>
   204dc:	0005883a 	mov	r2,zero
   204e0:	e0bffd85 	stb	r2,-10(fp)
   204e4:	e0bffd83 	ldbu	r2,-10(fp)
   204e8:	1080004c 	andi	r2,r2,1
   204ec:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   204f0:	e0bffd83 	ldbu	r2,-10(fp)
   204f4:	10000726 	beq	r2,zero,20514 <write_frame_frame_blank_reg+0xb4>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_FRAME_FRAME_BLANK(dev->base, frame_frame_blank);
   204f8:	e0bffe17 	ldw	r2,-8(fp)
   204fc:	10800017 	ldw	r2,0(r2)
   20500:	10800204 	addi	r2,r2,8
   20504:	e0ffff17 	ldw	r3,-4(fp)
   20508:	10c00035 	stwio	r3,0(r2)
        return true;
   2050c:	00800044 	movi	r2,1
   20510:	00000106 	br	20518 <write_frame_frame_blank_reg+0xb8>
    } else {
        return false;
   20514:	0005883a 	mov	r2,zero
    }
}
   20518:	e037883a 	mov	sp,fp
   2051c:	dfc00117 	ldw	ra,4(sp)
   20520:	df000017 	ldw	fp,0(sp)
   20524:	dec00204 	addi	sp,sp,8
   20528:	f800283a 	ret

0002052c <write_frame_line_blank_reg>:
 *
 * Writes the supplied value to the CONFIG_FRAME_LINE_BLANK register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_frame_line_blank_reg(cmos_sensor_output_generator_dev *dev, uint32_t frame_line_blank) {
   2052c:	defffa04 	addi	sp,sp,-24
   20530:	dfc00515 	stw	ra,20(sp)
   20534:	df000415 	stw	fp,16(sp)
   20538:	df000404 	addi	fp,sp,16
   2053c:	e13ffe15 	stw	r4,-8(fp)
   20540:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   20544:	e0bffe17 	ldw	r2,-8(fp)
   20548:	10c00217 	ldw	r3,8(r2)
   2054c:	e0bffe17 	ldw	r2,-8(fp)
   20550:	10800317 	ldw	r2,12(r2)
   20554:	100b883a 	mov	r5,r2
   20558:	1809883a 	mov	r4,r3
   2055c:	00202900 	call	20290 <max>
   20560:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_LINE_BLANK_MIN <= frame_line_blank;
   20564:	e0bfff17 	ldw	r2,-4(fp)
   20568:	108000e8 	cmpgeui	r2,r2,3
   2056c:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = frame_line_blank <= max_reg_value;
   20570:	e0bfff17 	ldw	r2,-4(fp)
   20574:	e0fffc17 	ldw	r3,-16(fp)
   20578:	1885403a 	cmpgeu	r2,r3,r2
   2057c:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   20580:	e0bffd03 	ldbu	r2,-12(fp)
   20584:	10000826 	beq	r2,zero,205a8 <write_frame_line_blank_reg+0x7c>
   20588:	e0bffd43 	ldbu	r2,-11(fp)
   2058c:	10000626 	beq	r2,zero,205a8 <write_frame_line_blank_reg+0x7c>
   20590:	e13ffe17 	ldw	r4,-8(fp)
   20594:	00208ac0 	call	208ac <is_idle>
   20598:	10803fcc 	andi	r2,r2,255
   2059c:	10000226 	beq	r2,zero,205a8 <write_frame_line_blank_reg+0x7c>
   205a0:	00800044 	movi	r2,1
   205a4:	00000106 	br	205ac <write_frame_line_blank_reg+0x80>
   205a8:	0005883a 	mov	r2,zero
   205ac:	e0bffd85 	stb	r2,-10(fp)
   205b0:	e0bffd83 	ldbu	r2,-10(fp)
   205b4:	1080004c 	andi	r2,r2,1
   205b8:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   205bc:	e0bffd83 	ldbu	r2,-10(fp)
   205c0:	10000726 	beq	r2,zero,205e0 <write_frame_line_blank_reg+0xb4>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_FRAME_LINE_BLANK(dev->base, frame_line_blank);
   205c4:	e0bffe17 	ldw	r2,-8(fp)
   205c8:	10800017 	ldw	r2,0(r2)
   205cc:	10800304 	addi	r2,r2,12
   205d0:	e0ffff17 	ldw	r3,-4(fp)
   205d4:	10c00035 	stwio	r3,0(r2)
        return true;
   205d8:	00800044 	movi	r2,1
   205dc:	00000106 	br	205e4 <write_frame_line_blank_reg+0xb8>
    } else {
        return false;
   205e0:	0005883a 	mov	r2,zero
    }
}
   205e4:	e037883a 	mov	sp,fp
   205e8:	dfc00117 	ldw	ra,4(sp)
   205ec:	df000017 	ldw	fp,0(sp)
   205f0:	dec00204 	addi	sp,sp,8
   205f4:	f800283a 	ret

000205f8 <write_line_line_blank_reg>:
 *
 * Writes the supplied value to the CONFIG_LINE_LINE_BLANK register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_line_line_blank_reg(cmos_sensor_output_generator_dev *dev, uint32_t line_line_blank) {
   205f8:	defffa04 	addi	sp,sp,-24
   205fc:	dfc00515 	stw	ra,20(sp)
   20600:	df000415 	stw	fp,16(sp)
   20604:	df000404 	addi	fp,sp,16
   20608:	e13ffe15 	stw	r4,-8(fp)
   2060c:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   20610:	e0bffe17 	ldw	r2,-8(fp)
   20614:	10c00217 	ldw	r3,8(r2)
   20618:	e0bffe17 	ldw	r2,-8(fp)
   2061c:	10800317 	ldw	r2,12(r2)
   20620:	100b883a 	mov	r5,r2
   20624:	1809883a 	mov	r4,r3
   20628:	00202900 	call	20290 <max>
   2062c:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_LINE_LINE_BLANK_MIN <= line_line_blank;
   20630:	e0bfff17 	ldw	r2,-4(fp)
   20634:	108000e8 	cmpgeui	r2,r2,3
   20638:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = line_line_blank <= max_reg_value;
   2063c:	e0bfff17 	ldw	r2,-4(fp)
   20640:	e0fffc17 	ldw	r3,-16(fp)
   20644:	1885403a 	cmpgeu	r2,r3,r2
   20648:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   2064c:	e0bffd03 	ldbu	r2,-12(fp)
   20650:	10000826 	beq	r2,zero,20674 <write_line_line_blank_reg+0x7c>
   20654:	e0bffd43 	ldbu	r2,-11(fp)
   20658:	10000626 	beq	r2,zero,20674 <write_line_line_blank_reg+0x7c>
   2065c:	e13ffe17 	ldw	r4,-8(fp)
   20660:	00208ac0 	call	208ac <is_idle>
   20664:	10803fcc 	andi	r2,r2,255
   20668:	10000226 	beq	r2,zero,20674 <write_line_line_blank_reg+0x7c>
   2066c:	00800044 	movi	r2,1
   20670:	00000106 	br	20678 <write_line_line_blank_reg+0x80>
   20674:	0005883a 	mov	r2,zero
   20678:	e0bffd85 	stb	r2,-10(fp)
   2067c:	e0bffd83 	ldbu	r2,-10(fp)
   20680:	1080004c 	andi	r2,r2,1
   20684:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   20688:	e0bffd83 	ldbu	r2,-10(fp)
   2068c:	10000726 	beq	r2,zero,206ac <write_line_line_blank_reg+0xb4>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_LINE_LINE_BLANK(dev->base, line_line_blank);
   20690:	e0bffe17 	ldw	r2,-8(fp)
   20694:	10800017 	ldw	r2,0(r2)
   20698:	10800404 	addi	r2,r2,16
   2069c:	e0ffff17 	ldw	r3,-4(fp)
   206a0:	10c00035 	stwio	r3,0(r2)
        return true;
   206a4:	00800044 	movi	r2,1
   206a8:	00000106 	br	206b0 <write_line_line_blank_reg+0xb8>
    } else {
        return false;
   206ac:	0005883a 	mov	r2,zero
    }
}
   206b0:	e037883a 	mov	sp,fp
   206b4:	dfc00117 	ldw	ra,4(sp)
   206b8:	df000017 	ldw	fp,0(sp)
   206bc:	dec00204 	addi	sp,sp,8
   206c0:	f800283a 	ret

000206c4 <write_line_frame_blank_reg>:
 *
 * Writes the supplied value to the CONFIG_LINE_FRAME_BLANK register.
 *
 * Returns true if successful (value within legal bounds) and false otherwise.
 */
static bool write_line_frame_blank_reg(cmos_sensor_output_generator_dev *dev, uint32_t line_frame_blank) {
   206c4:	defffa04 	addi	sp,sp,-24
   206c8:	dfc00515 	stw	ra,20(sp)
   206cc:	df000415 	stw	fp,16(sp)
   206d0:	df000404 	addi	fp,sp,16
   206d4:	e13ffe15 	stw	r4,-8(fp)
   206d8:	e17fff15 	stw	r5,-4(fp)
    uint32_t max_reg_value = max(dev->max_width, dev->max_height);
   206dc:	e0bffe17 	ldw	r2,-8(fp)
   206e0:	10c00217 	ldw	r3,8(r2)
   206e4:	e0bffe17 	ldw	r2,-8(fp)
   206e8:	10800317 	ldw	r2,12(r2)
   206ec:	100b883a 	mov	r5,r2
   206f0:	1809883a 	mov	r4,r3
   206f4:	00202900 	call	20290 <max>
   206f8:	e0bffc15 	stw	r2,-16(fp)

    bool lower_bound_valid = CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_LINE_FRAME_BLANK_MIN <= line_frame_blank;
   206fc:	e0bfff17 	ldw	r2,-4(fp)
   20700:	108000e8 	cmpgeui	r2,r2,3
   20704:	e0bffd05 	stb	r2,-12(fp)
    bool upper_bound_valid = line_frame_blank <= max_reg_value;
   20708:	e0bfff17 	ldw	r2,-4(fp)
   2070c:	e0fffc17 	ldw	r3,-16(fp)
   20710:	1885403a 	cmpgeu	r2,r3,r2
   20714:	e0bffd45 	stb	r2,-11(fp)

    bool valid = lower_bound_valid && upper_bound_valid && is_idle(dev);
   20718:	e0bffd03 	ldbu	r2,-12(fp)
   2071c:	10000826 	beq	r2,zero,20740 <write_line_frame_blank_reg+0x7c>
   20720:	e0bffd43 	ldbu	r2,-11(fp)
   20724:	10000626 	beq	r2,zero,20740 <write_line_frame_blank_reg+0x7c>
   20728:	e13ffe17 	ldw	r4,-8(fp)
   2072c:	00208ac0 	call	208ac <is_idle>
   20730:	10803fcc 	andi	r2,r2,255
   20734:	10000226 	beq	r2,zero,20740 <write_line_frame_blank_reg+0x7c>
   20738:	00800044 	movi	r2,1
   2073c:	00000106 	br	20744 <write_line_frame_blank_reg+0x80>
   20740:	0005883a 	mov	r2,zero
   20744:	e0bffd85 	stb	r2,-10(fp)
   20748:	e0bffd83 	ldbu	r2,-10(fp)
   2074c:	1080004c 	andi	r2,r2,1
   20750:	e0bffd85 	stb	r2,-10(fp)

    if (valid) {
   20754:	e0bffd83 	ldbu	r2,-10(fp)
   20758:	10000726 	beq	r2,zero,20778 <write_line_frame_blank_reg+0xb4>
        CMOS_SENSOR_OUTPUT_GENERATOR_WR_CONFIG_LINE_FRAME_BLANK(dev->base, line_frame_blank);
   2075c:	e0bffe17 	ldw	r2,-8(fp)
   20760:	10800017 	ldw	r2,0(r2)
   20764:	10800504 	addi	r2,r2,20
   20768:	e0ffff17 	ldw	r3,-4(fp)
   2076c:	10c00035 	stwio	r3,0(r2)
        return true;
   20770:	00800044 	movi	r2,1
   20774:	00000106 	br	2077c <write_line_frame_blank_reg+0xb8>
    } else {
        return false;
   20778:	0005883a 	mov	r2,zero
    }
}
   2077c:	e037883a 	mov	sp,fp
   20780:	dfc00117 	ldw	ra,4(sp)
   20784:	df000017 	ldw	fp,0(sp)
   20788:	dec00204 	addi	sp,sp,8
   2078c:	f800283a 	ret

00020790 <read_frame_width_reg>:
/*
 * read_frame_width_reg
 *
 * Reads and returns the contents of the CONFIG_FRAME_WIDTH register
 */
static uint32_t read_frame_width_reg(cmos_sensor_output_generator_dev *dev) {
   20790:	defffe04 	addi	sp,sp,-8
   20794:	df000115 	stw	fp,4(sp)
   20798:	df000104 	addi	fp,sp,4
   2079c:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_FRAME_WIDTH(dev->base);
   207a0:	e0bfff17 	ldw	r2,-4(fp)
   207a4:	10800017 	ldw	r2,0(r2)
   207a8:	10800037 	ldwio	r2,0(r2)
}
   207ac:	e037883a 	mov	sp,fp
   207b0:	df000017 	ldw	fp,0(sp)
   207b4:	dec00104 	addi	sp,sp,4
   207b8:	f800283a 	ret

000207bc <read_frame_height_reg>:
/*
 * read_frame_height_reg
 *
 * Reads and returns the contents of the CONFIG_FRAME_HEIGHT register
 */
static uint32_t read_frame_height_reg(cmos_sensor_output_generator_dev *dev) {
   207bc:	defffe04 	addi	sp,sp,-8
   207c0:	df000115 	stw	fp,4(sp)
   207c4:	df000104 	addi	fp,sp,4
   207c8:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_FRAME_HEIGHT(dev->base);
   207cc:	e0bfff17 	ldw	r2,-4(fp)
   207d0:	10800017 	ldw	r2,0(r2)
   207d4:	10800104 	addi	r2,r2,4
   207d8:	10800037 	ldwio	r2,0(r2)
}
   207dc:	e037883a 	mov	sp,fp
   207e0:	df000017 	ldw	fp,0(sp)
   207e4:	dec00104 	addi	sp,sp,4
   207e8:	f800283a 	ret

000207ec <read_frame_frame_blank_reg>:
/*
 * read_frame_frame_blank_reg
 *
 * Reads and returns the contents of the CONFIG_FRAME_FRAME_BLANK register
 */
static uint32_t read_frame_frame_blank_reg(cmos_sensor_output_generator_dev *dev) {
   207ec:	defffe04 	addi	sp,sp,-8
   207f0:	df000115 	stw	fp,4(sp)
   207f4:	df000104 	addi	fp,sp,4
   207f8:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_FRAME_FRAME_BLANK(dev->base);
   207fc:	e0bfff17 	ldw	r2,-4(fp)
   20800:	10800017 	ldw	r2,0(r2)
   20804:	10800204 	addi	r2,r2,8
   20808:	10800037 	ldwio	r2,0(r2)
}
   2080c:	e037883a 	mov	sp,fp
   20810:	df000017 	ldw	fp,0(sp)
   20814:	dec00104 	addi	sp,sp,4
   20818:	f800283a 	ret

0002081c <read_frame_line_blank_reg>:
/*
 * read_frame_line_blank_reg
 *
 * Reads and returns the contents of the CONFIG_FRAME_LINE_BLANK register
 */
static uint32_t read_frame_line_blank_reg(cmos_sensor_output_generator_dev *dev) {
   2081c:	defffe04 	addi	sp,sp,-8
   20820:	df000115 	stw	fp,4(sp)
   20824:	df000104 	addi	fp,sp,4
   20828:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_FRAME_LINE_BLANK(dev->base);
   2082c:	e0bfff17 	ldw	r2,-4(fp)
   20830:	10800017 	ldw	r2,0(r2)
   20834:	10800304 	addi	r2,r2,12
   20838:	10800037 	ldwio	r2,0(r2)
}
   2083c:	e037883a 	mov	sp,fp
   20840:	df000017 	ldw	fp,0(sp)
   20844:	dec00104 	addi	sp,sp,4
   20848:	f800283a 	ret

0002084c <read_line_line_blank_reg>:
/*
 * read_line_line_blank_reg
 *
 * Reads and returns the contents of the CONFIG_LINE_LINE_BLANK register
 */
static uint32_t read_line_line_blank_reg(cmos_sensor_output_generator_dev *dev) {
   2084c:	defffe04 	addi	sp,sp,-8
   20850:	df000115 	stw	fp,4(sp)
   20854:	df000104 	addi	fp,sp,4
   20858:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_LINE_LINE_BLANK(dev->base);
   2085c:	e0bfff17 	ldw	r2,-4(fp)
   20860:	10800017 	ldw	r2,0(r2)
   20864:	10800404 	addi	r2,r2,16
   20868:	10800037 	ldwio	r2,0(r2)
}
   2086c:	e037883a 	mov	sp,fp
   20870:	df000017 	ldw	fp,0(sp)
   20874:	dec00104 	addi	sp,sp,4
   20878:	f800283a 	ret

0002087c <read_line_frame_blank_reg>:
/*
 * read_line_frame_blank_reg
 *
 * Reads and returns the contents of the CONFIG_LINE_FRAME_BLANK register
 */
static uint32_t read_line_frame_blank_reg(cmos_sensor_output_generator_dev *dev) {
   2087c:	defffe04 	addi	sp,sp,-8
   20880:	df000115 	stw	fp,4(sp)
   20884:	df000104 	addi	fp,sp,4
   20888:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_CONFIG_LINE_FRAME_BLANK(dev->base);
   2088c:	e0bfff17 	ldw	r2,-4(fp)
   20890:	10800017 	ldw	r2,0(r2)
   20894:	10800504 	addi	r2,r2,20
   20898:	10800037 	ldwio	r2,0(r2)
}
   2089c:	e037883a 	mov	sp,fp
   208a0:	df000017 	ldw	fp,0(sp)
   208a4:	dec00104 	addi	sp,sp,4
   208a8:	f800283a 	ret

000208ac <is_idle>:
/*
 * is_idle
 *
 * Returns true if the controller is idle, and false otherwise.
 */
static bool is_idle(cmos_sensor_output_generator_dev *dev) {
   208ac:	defffe04 	addi	sp,sp,-8
   208b0:	df000115 	stw	fp,4(sp)
   208b4:	df000104 	addi	fp,sp,4
   208b8:	e13fff15 	stw	r4,-4(fp)
    return CMOS_SENSOR_OUTPUT_GENERATOR_RD_STATUS(dev->base) == CMOS_SENSOR_OUTPUT_GENERATOR_STATUS_IDLE;
   208bc:	e0bfff17 	ldw	r2,-4(fp)
   208c0:	10800017 	ldw	r2,0(r2)
   208c4:	10800704 	addi	r2,r2,28
   208c8:	10800037 	ldwio	r2,0(r2)
   208cc:	10800060 	cmpeqi	r2,r2,1
}
   208d0:	e037883a 	mov	sp,fp
   208d4:	df000017 	ldw	fp,0(sp)
   208d8:	dec00104 	addi	sp,sp,4
   208dc:	f800283a 	ret

000208e0 <cmos_sensor_output_generator_inst>:
/*
 * cmos_sensor_output_generator_inst
 *
 * Constructs a device structure.
 */
cmos_sensor_output_generator_dev cmos_sensor_output_generator_inst(void *base, uint8_t pix_depth, uint32_t max_width, uint32_t max_height) {
   208e0:	defff704 	addi	sp,sp,-36
   208e4:	df000815 	stw	fp,32(sp)
   208e8:	df000804 	addi	fp,sp,32
   208ec:	e13ffc15 	stw	r4,-16(fp)
   208f0:	e17ffd15 	stw	r5,-12(fp)
   208f4:	3005883a 	mov	r2,r6
   208f8:	e1ffff15 	stw	r7,-4(fp)
   208fc:	e0bffe05 	stb	r2,-8(fp)
    cmos_sensor_output_generator_dev dev;

    dev.base = base;
   20900:	e0bffd17 	ldw	r2,-12(fp)
   20904:	e0bff815 	stw	r2,-32(fp)
    dev.pix_depth = pix_depth;
   20908:	e0bffe03 	ldbu	r2,-8(fp)
   2090c:	e0bff905 	stb	r2,-28(fp)
    dev.max_width = max_width;
   20910:	e0bfff17 	ldw	r2,-4(fp)
   20914:	e0bffa15 	stw	r2,-24(fp)
    dev.max_height = max_height;
   20918:	e0800117 	ldw	r2,4(fp)
   2091c:	e0bffb15 	stw	r2,-20(fp)

    return dev;
   20920:	e0bffc17 	ldw	r2,-16(fp)
   20924:	e0fff817 	ldw	r3,-32(fp)
   20928:	10c00015 	stw	r3,0(r2)
   2092c:	e0fff917 	ldw	r3,-28(fp)
   20930:	10c00115 	stw	r3,4(r2)
   20934:	e0fffa17 	ldw	r3,-24(fp)
   20938:	10c00215 	stw	r3,8(r2)
   2093c:	e0fffb17 	ldw	r3,-20(fp)
   20940:	10c00315 	stw	r3,12(r2)
}
   20944:	e0bffc17 	ldw	r2,-16(fp)
   20948:	e037883a 	mov	sp,fp
   2094c:	df000017 	ldw	fp,0(sp)
   20950:	dec00104 	addi	sp,sp,4
   20954:	f800283a 	ret

00020958 <cmos_sensor_output_generator_init>:
 * Initializes the CMOS Sensor Output Generator controller.
 *
 * This routine sets the values of all registers to the minimums defined in
 * cmos_sensor_output_generator_regs.h.
 */
void cmos_sensor_output_generator_init(cmos_sensor_output_generator_dev *dev) {
   20958:	defffd04 	addi	sp,sp,-12
   2095c:	dfc00215 	stw	ra,8(sp)
   20960:	df000115 	stw	fp,4(sp)
   20964:	df000104 	addi	fp,sp,4
   20968:	e13fff15 	stw	r4,-4(fp)
    cmos_sensor_output_generator_stop(dev);
   2096c:	e13fff17 	ldw	r4,-4(fp)
   20970:	0020b140 	call	20b14 <cmos_sensor_output_generator_stop>

    write_frame_width_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_WIDTH_MIN);
   20974:	014000c4 	movi	r5,3
   20978:	e13fff17 	ldw	r4,-4(fp)
   2097c:	00202cc0 	call	202cc <write_frame_width_reg>
    write_frame_height_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_HEIGHT_MIN);
   20980:	014000c4 	movi	r5,3
   20984:	e13fff17 	ldw	r4,-4(fp)
   20988:	00203940 	call	20394 <write_frame_height_reg>
    write_frame_frame_blank_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_FRAME_BLANK_MIN);
   2098c:	014000c4 	movi	r5,3
   20990:	e13fff17 	ldw	r4,-4(fp)
   20994:	00204600 	call	20460 <write_frame_frame_blank_reg>
    write_frame_line_blank_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_FRAME_LINE_BLANK_MIN);
   20998:	014000c4 	movi	r5,3
   2099c:	e13fff17 	ldw	r4,-4(fp)
   209a0:	002052c0 	call	2052c <write_frame_line_blank_reg>
    write_line_line_blank_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_LINE_LINE_BLANK_MIN);
   209a4:	014000c4 	movi	r5,3
   209a8:	e13fff17 	ldw	r4,-4(fp)
   209ac:	00205f80 	call	205f8 <write_line_line_blank_reg>
    write_line_frame_blank_reg(dev, CMOS_SENSOR_OUTPUT_GENERATOR_CONFIG_LINE_FRAME_BLANK_MIN);
   209b0:	014000c4 	movi	r5,3
   209b4:	e13fff17 	ldw	r4,-4(fp)
   209b8:	00206c40 	call	206c4 <write_line_frame_blank_reg>
}
   209bc:	0001883a 	nop
   209c0:	e037883a 	mov	sp,fp
   209c4:	dfc00117 	ldw	ra,4(sp)
   209c8:	df000017 	ldw	fp,0(sp)
   209cc:	dec00204 	addi	sp,sp,8
   209d0:	f800283a 	ret

000209d4 <cmos_sensor_output_generator_configure>:
 *
 * Configure the generator.
 *
 * Returns true if successful (values within bounds), and false otherwise.
 */
bool cmos_sensor_output_generator_configure(cmos_sensor_output_generator_dev *dev, uint32_t frame_width, uint32_t frame_height, uint32_t frame_frame_blank, uint32_t frame_line_blank, uint32_t line_line_blank, uint32_t line_frame_blank) {
   209d4:	defff904 	addi	sp,sp,-28
   209d8:	dfc00615 	stw	ra,24(sp)
   209dc:	df000515 	stw	fp,20(sp)
   209e0:	df000504 	addi	fp,sp,20
   209e4:	e13ffc15 	stw	r4,-16(fp)
   209e8:	e17ffd15 	stw	r5,-12(fp)
   209ec:	e1bffe15 	stw	r6,-8(fp)
   209f0:	e1ffff15 	stw	r7,-4(fp)
    bool success = true;
   209f4:	00800044 	movi	r2,1
   209f8:	e0bffb05 	stb	r2,-20(fp)

    cmos_sensor_output_generator_stop(dev);
   209fc:	e13ffc17 	ldw	r4,-16(fp)
   20a00:	0020b140 	call	20b14 <cmos_sensor_output_generator_stop>

    success &= write_frame_width_reg(dev, frame_width);
   20a04:	e17ffd17 	ldw	r5,-12(fp)
   20a08:	e13ffc17 	ldw	r4,-16(fp)
   20a0c:	00202cc0 	call	202cc <write_frame_width_reg>
   20a10:	e0fffb03 	ldbu	r3,-20(fp)
   20a14:	10803fcc 	andi	r2,r2,255
   20a18:	1884703a 	and	r2,r3,r2
   20a1c:	1004c03a 	cmpne	r2,r2,zero
   20a20:	e0bffb05 	stb	r2,-20(fp)
    success &= write_frame_height_reg(dev, frame_height);
   20a24:	e17ffe17 	ldw	r5,-8(fp)
   20a28:	e13ffc17 	ldw	r4,-16(fp)
   20a2c:	00203940 	call	20394 <write_frame_height_reg>
   20a30:	e0fffb03 	ldbu	r3,-20(fp)
   20a34:	10803fcc 	andi	r2,r2,255
   20a38:	1884703a 	and	r2,r3,r2
   20a3c:	1004c03a 	cmpne	r2,r2,zero
   20a40:	e0bffb05 	stb	r2,-20(fp)
    success &= write_frame_frame_blank_reg(dev, frame_frame_blank);
   20a44:	e17fff17 	ldw	r5,-4(fp)
   20a48:	e13ffc17 	ldw	r4,-16(fp)
   20a4c:	00204600 	call	20460 <write_frame_frame_blank_reg>
   20a50:	e0fffb03 	ldbu	r3,-20(fp)
   20a54:	10803fcc 	andi	r2,r2,255
   20a58:	1884703a 	and	r2,r3,r2
   20a5c:	1004c03a 	cmpne	r2,r2,zero
   20a60:	e0bffb05 	stb	r2,-20(fp)
    success &= write_frame_line_blank_reg(dev, frame_line_blank);
   20a64:	e1400217 	ldw	r5,8(fp)
   20a68:	e13ffc17 	ldw	r4,-16(fp)
   20a6c:	002052c0 	call	2052c <write_frame_line_blank_reg>
   20a70:	e0fffb03 	ldbu	r3,-20(fp)
   20a74:	10803fcc 	andi	r2,r2,255
   20a78:	1884703a 	and	r2,r3,r2
   20a7c:	1004c03a 	cmpne	r2,r2,zero
   20a80:	e0bffb05 	stb	r2,-20(fp)
    success &= write_line_line_blank_reg(dev, line_line_blank);
   20a84:	e1400317 	ldw	r5,12(fp)
   20a88:	e13ffc17 	ldw	r4,-16(fp)
   20a8c:	00205f80 	call	205f8 <write_line_line_blank_reg>
   20a90:	e0fffb03 	ldbu	r3,-20(fp)
   20a94:	10803fcc 	andi	r2,r2,255
   20a98:	1884703a 	and	r2,r3,r2
   20a9c:	1004c03a 	cmpne	r2,r2,zero
   20aa0:	e0bffb05 	stb	r2,-20(fp)
    success &= write_line_frame_blank_reg(dev, line_frame_blank);
   20aa4:	e1400417 	ldw	r5,16(fp)
   20aa8:	e13ffc17 	ldw	r4,-16(fp)
   20aac:	00206c40 	call	206c4 <write_line_frame_blank_reg>
   20ab0:	e0fffb03 	ldbu	r3,-20(fp)
   20ab4:	10803fcc 	andi	r2,r2,255
   20ab8:	1884703a 	and	r2,r3,r2
   20abc:	1004c03a 	cmpne	r2,r2,zero
   20ac0:	e0bffb05 	stb	r2,-20(fp)

    return success;
   20ac4:	e0bffb03 	ldbu	r2,-20(fp)
}
   20ac8:	e037883a 	mov	sp,fp
   20acc:	dfc00117 	ldw	ra,4(sp)
   20ad0:	df000017 	ldw	fp,0(sp)
   20ad4:	dec00204 	addi	sp,sp,8
   20ad8:	f800283a 	ret

00020adc <cmos_sensor_output_generator_start>:
 * Starts the generator.
 *
 * You must previously configure the controller by calling
 * cmos_sensor_output_generator_configure() before calling this function.
 */
void cmos_sensor_output_generator_start(cmos_sensor_output_generator_dev *dev) {
   20adc:	defffe04 	addi	sp,sp,-8
   20ae0:	df000115 	stw	fp,4(sp)
   20ae4:	df000104 	addi	fp,sp,4
   20ae8:	e13fff15 	stw	r4,-4(fp)
    CMOS_SENSOR_OUTPUT_GENERATOR_WR_COMMAND(dev->base, CMOS_SENSOR_OUTPUT_GENERATOR_COMMAND_START);
   20aec:	e0bfff17 	ldw	r2,-4(fp)
   20af0:	10800017 	ldw	r2,0(r2)
   20af4:	10800604 	addi	r2,r2,24
   20af8:	00c00044 	movi	r3,1
   20afc:	10c00035 	stwio	r3,0(r2)
}
   20b00:	0001883a 	nop
   20b04:	e037883a 	mov	sp,fp
   20b08:	df000017 	ldw	fp,0(sp)
   20b0c:	dec00104 	addi	sp,sp,4
   20b10:	f800283a 	ret

00020b14 <cmos_sensor_output_generator_stop>:
/*
 * cmos_sensor_output_generator_stop
 *
 * Stops the generator.
 */
void cmos_sensor_output_generator_stop(cmos_sensor_output_generator_dev *dev) {
   20b14:	defffe04 	addi	sp,sp,-8
   20b18:	df000115 	stw	fp,4(sp)
   20b1c:	df000104 	addi	fp,sp,4
   20b20:	e13fff15 	stw	r4,-4(fp)
    CMOS_SENSOR_OUTPUT_GENERATOR_WR_COMMAND(dev->base, CMOS_SENSOR_OUTPUT_GENERATOR_COMMAND_STOP);
   20b24:	e0bfff17 	ldw	r2,-4(fp)
   20b28:	10800017 	ldw	r2,0(r2)
   20b2c:	10800604 	addi	r2,r2,24
   20b30:	0007883a 	mov	r3,zero
   20b34:	10c00035 	stwio	r3,0(r2)
}
   20b38:	0001883a 	nop
   20b3c:	e037883a 	mov	sp,fp
   20b40:	df000017 	ldw	fp,0(sp)
   20b44:	dec00104 	addi	sp,sp,4
   20b48:	f800283a 	ret

00020b4c <Camera_Acquisition_Module_SETUP_Address_Memory>:
#define CAMERA_MODULE_REGISTER_STOP            (3 * 4) /* RW */
#define CAMERA_MODULE_REGISTER_SNAPSHOT             (4 * 4) /* RW */
#define CAMERA_MODULE_REGISTER_FLAG            (5 * 4) /* RW */

int Camera_Acquisition_Module_SETUP_Address_Memory(int Address)
{
   20b4c:	defffd04 	addi	sp,sp,-12
   20b50:	df000215 	stw	fp,8(sp)
   20b54:	df000204 	addi	fp,sp,8
   20b58:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(CAMERA_COMPONENT_0_BASE, CAMERA_MODULE_REGISTER_ADDRESS, Address);
   20b5c:	00800804 	movi	r2,32
   20b60:	e0ffff17 	ldw	r3,-4(fp)
   20b64:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
   20b68:	e03ffe15 	stw	zero,-8(fp)
   20b6c:	00000306 	br	20b7c <Camera_Acquisition_Module_SETUP_Address_Memory+0x30>
   20b70:	e0bffe17 	ldw	r2,-8(fp)
   20b74:	10800044 	addi	r2,r2,1
   20b78:	e0bffe15 	stw	r2,-8(fp)
   20b7c:	e0bffe17 	ldw	r2,-8(fp)
   20b80:	10800290 	cmplti	r2,r2,10
   20b84:	103ffa1e 	bne	r2,zero,20b70 <__alt_mem_sdram_controller_0+0xc0020b70>
	return IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_ADDRESS);
   20b88:	00800804 	movi	r2,32
   20b8c:	10800037 	ldwio	r2,0(r2)
}
   20b90:	e037883a 	mov	sp,fp
   20b94:	df000017 	ldw	fp,0(sp)
   20b98:	dec00104 	addi	sp,sp,4
   20b9c:	f800283a 	ret

00020ba0 <Camera_Acquisition_Module_SETUP_Length_Frame>:
// Length : Number of pixel to store. reminder : 1 Memory slot =2 pixels and 1 memory slot = 4 bytes
int Camera_Acquisition_Module_SETUP_Length_Frame(int Pixel_Number)
{
   20ba0:	defffd04 	addi	sp,sp,-12
   20ba4:	df000215 	stw	fp,8(sp)
   20ba8:	df000204 	addi	fp,sp,8
   20bac:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(CAMERA_COMPONENT_0_BASE, CAMERA_MODULE_REGISTER_LENGTH, Pixel_Number/2*4);//*4 because 32bits;
   20bb0:	e0bfff17 	ldw	r2,-4(fp)
   20bb4:	1006d7fa 	srli	r3,r2,31
   20bb8:	1885883a 	add	r2,r3,r2
   20bbc:	1005d07a 	srai	r2,r2,1
   20bc0:	1085883a 	add	r2,r2,r2
   20bc4:	1085883a 	add	r2,r2,r2
   20bc8:	1007883a 	mov	r3,r2
   20bcc:	00800904 	movi	r2,36
   20bd0:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
   20bd4:	e03ffe15 	stw	zero,-8(fp)
   20bd8:	00000306 	br	20be8 <Camera_Acquisition_Module_SETUP_Length_Frame+0x48>
   20bdc:	e0bffe17 	ldw	r2,-8(fp)
   20be0:	10800044 	addi	r2,r2,1
   20be4:	e0bffe15 	stw	r2,-8(fp)
   20be8:	e0bffe17 	ldw	r2,-8(fp)
   20bec:	10800290 	cmplti	r2,r2,10
   20bf0:	103ffa1e 	bne	r2,zero,20bdc <__alt_mem_sdram_controller_0+0xc0020bdc>
	return IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_LENGTH);
   20bf4:	00800904 	movi	r2,36
   20bf8:	10800037 	ldwio	r2,0(r2)
}
   20bfc:	e037883a 	mov	sp,fp
   20c00:	df000017 	ldw	fp,0(sp)
   20c04:	dec00104 	addi	sp,sp,4
   20c08:	f800283a 	ret

00020c0c <Camera_Acquisition_Module_Start>:
int Camera_Acquisition_Module_Start()
{
   20c0c:	defffe04 	addi	sp,sp,-8
   20c10:	df000115 	stw	fp,4(sp)
   20c14:	df000104 	addi	fp,sp,4
	IOWR_32DIRECT(CAMERA_COMPONENT_0_BASE, CAMERA_MODULE_REGISTER_START, 1);//*4 because 32bits;
   20c18:	00c00044 	movi	r3,1
   20c1c:	00800a04 	movi	r2,40
   20c20:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
   20c24:	e03fff15 	stw	zero,-4(fp)
   20c28:	00000306 	br	20c38 <Camera_Acquisition_Module_Start+0x2c>
   20c2c:	e0bfff17 	ldw	r2,-4(fp)
   20c30:	10800044 	addi	r2,r2,1
   20c34:	e0bfff15 	stw	r2,-4(fp)
   20c38:	e0bfff17 	ldw	r2,-4(fp)
   20c3c:	10800290 	cmplti	r2,r2,10
   20c40:	103ffa1e 	bne	r2,zero,20c2c <__alt_mem_sdram_controller_0+0xc0020c2c>
	return IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_START);
   20c44:	00800a04 	movi	r2,40
   20c48:	10800037 	ldwio	r2,0(r2)
}
   20c4c:	e037883a 	mov	sp,fp
   20c50:	df000017 	ldw	fp,0(sp)
   20c54:	dec00104 	addi	sp,sp,4
   20c58:	f800283a 	ret

00020c5c <Camera_Acquisition_Module_Stop>:
int Camera_Acquisition_Module_Stop()
{
   20c5c:	defffe04 	addi	sp,sp,-8
   20c60:	df000115 	stw	fp,4(sp)
   20c64:	df000104 	addi	fp,sp,4
	IOWR_32DIRECT(CAMERA_COMPONENT_0_BASE, CAMERA_MODULE_REGISTER_STOP, 1);//*4 because 32bits;
   20c68:	00c00044 	movi	r3,1
   20c6c:	00800b04 	movi	r2,44
   20c70:	10c00035 	stwio	r3,0(r2)
	for (int i=0;i<10;i++);
   20c74:	e03fff15 	stw	zero,-4(fp)
   20c78:	00000306 	br	20c88 <Camera_Acquisition_Module_Stop+0x2c>
   20c7c:	e0bfff17 	ldw	r2,-4(fp)
   20c80:	10800044 	addi	r2,r2,1
   20c84:	e0bfff15 	stw	r2,-4(fp)
   20c88:	e0bfff17 	ldw	r2,-4(fp)
   20c8c:	10800290 	cmplti	r2,r2,10
   20c90:	103ffa1e 	bne	r2,zero,20c7c <__alt_mem_sdram_controller_0+0xc0020c7c>
	return IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_STOP);
   20c94:	00800b04 	movi	r2,44
   20c98:	10800037 	ldwio	r2,0(r2)
}
   20c9c:	e037883a 	mov	sp,fp
   20ca0:	df000017 	ldw	fp,0(sp)
   20ca4:	dec00104 	addi	sp,sp,4
   20ca8:	f800283a 	ret

00020cac <Camera_Acquisition_Module_Display_Registers>:
void Camera_Acquisition_Module_Display_Registers()
{
   20cac:	defffe04 	addi	sp,sp,-8
   20cb0:	dfc00115 	stw	ra,4(sp)
   20cb4:	df000015 	stw	fp,0(sp)
   20cb8:	d839883a 	mov	fp,sp
	printf("CAMERA_MODULE_REGISTER_ADDRESS=0x%x\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_ADDRESS));
   20cbc:	00800804 	movi	r2,32
   20cc0:	10800037 	ldwio	r2,0(r2)
   20cc4:	100b883a 	mov	r5,r2
   20cc8:	010000f4 	movhi	r4,3
   20ccc:	2117fc04 	addi	r4,r4,24560
   20cd0:	002475c0 	call	2475c <printf>
	printf("CAMERA_MODULE_REGISTER_LENGTH=%d\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_LENGTH));
   20cd4:	00800904 	movi	r2,36
   20cd8:	10800037 	ldwio	r2,0(r2)
   20cdc:	100b883a 	mov	r5,r2
   20ce0:	010000f4 	movhi	r4,3
   20ce4:	21180604 	addi	r4,r4,24600
   20ce8:	002475c0 	call	2475c <printf>
	printf("CAMERA_MODULE_REGISTER_START=%d\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_START));
   20cec:	00800a04 	movi	r2,40
   20cf0:	10800037 	ldwio	r2,0(r2)
   20cf4:	100b883a 	mov	r5,r2
   20cf8:	010000f4 	movhi	r4,3
   20cfc:	21180f04 	addi	r4,r4,24636
   20d00:	002475c0 	call	2475c <printf>
	printf("CAMERA_MODULE_REGISTER_STOP=%d\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_STOP));
   20d04:	00800b04 	movi	r2,44
   20d08:	10800037 	ldwio	r2,0(r2)
   20d0c:	100b883a 	mov	r5,r2
   20d10:	010000f4 	movhi	r4,3
   20d14:	21181804 	addi	r4,r4,24672
   20d18:	002475c0 	call	2475c <printf>
	printf("CAMERA_MODULE_REGISTER_SNAPSHOT=%d\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_SNAPSHOT));
   20d1c:	00800c04 	movi	r2,48
   20d20:	10800037 	ldwio	r2,0(r2)
   20d24:	100b883a 	mov	r5,r2
   20d28:	010000f4 	movhi	r4,3
   20d2c:	21182104 	addi	r4,r4,24708
   20d30:	002475c0 	call	2475c <printf>
	printf("CAMERA_MODULE_REGISTER_FLAG=%d\r\n",IORD_32DIRECT(CAMERA_COMPONENT_0_BASE,CAMERA_MODULE_REGISTER_FLAG));
   20d34:	00800d04 	movi	r2,52
   20d38:	10800037 	ldwio	r2,0(r2)
   20d3c:	100b883a 	mov	r5,r2
   20d40:	010000f4 	movhi	r4,3
   20d44:	21182b04 	addi	r4,r4,24748
   20d48:	002475c0 	call	2475c <printf>
}
   20d4c:	0001883a 	nop
   20d50:	e037883a 	mov	sp,fp
   20d54:	dfc00117 	ldw	ra,4(sp)
   20d58:	df000017 	ldw	fp,0(sp)
   20d5c:	dec00204 	addi	sp,sp,8
   20d60:	f800283a 	ret

00020d64 <Test_Camera_Memory>:
	    printf("CMOS_SENSOR_OUTPUT_GENERATOR_STATUS=%d\r\n",IORD_32DIRECT(CMOS_SENSOR_OUTPUT_GENERATOR_0_BASE,CMOS_SENSOR_OUTPUT_GENERATOR_STATUS_OFST));
 }

#endif
 void Test_Camera_Memory()
 {
   20d64:	defffe04 	addi	sp,sp,-8
   20d68:	dfc00115 	stw	ra,4(sp)
   20d6c:	df000015 	stw	fp,0(sp)
   20d70:	d839883a 	mov	fp,sp
 	Camera_Acquisition_Module_Stop();
   20d74:	0020c5c0 	call	20c5c <Camera_Acquisition_Module_Stop>
 	delay(5000);
   20d78:	0104e204 	movi	r4,5000
   20d7c:	0020f7c0 	call	20f7c <delay>
 	Camera_Acquisition_Module_SETUP_Address_Memory(SDRAM_CONTROLLER_0_BASE);//Address of the HPC, 256 MB Available from it
   20d80:	01100034 	movhi	r4,16384
   20d84:	0020b4c0 	call	20b4c <Camera_Acquisition_Module_SETUP_Address_Memory>
 	Camera_Acquisition_Module_SETUP_Length_Frame(76800);//320*240
   20d88:	01000074 	movhi	r4,1
   20d8c:	210b0004 	addi	r4,r4,11264
   20d90:	0020ba00 	call	20ba0 <Camera_Acquisition_Module_SETUP_Length_Frame>
 	Camera_Acquisition_Module_Start();//Set a one in the start register
   20d94:	0020c0c0 	call	20c0c <Camera_Acquisition_Module_Start>
 			Capture_Image_Computer(HPS_0_BRIDGES_BASE,1);
 			Capture_Image_Computer(HPS_0_BRIDGES_BASE,0);
 		#endif


 }
   20d98:	0001883a 	nop
   20d9c:	e037883a 	mov	sp,fp
   20da0:	dfc00117 	ldw	ra,4(sp)
   20da4:	df000017 	ldw	fp,0(sp)
   20da8:	dec00204 	addi	sp,sp,8
   20dac:	f800283a 	ret

00020db0 <Capture_Image_Computer>:
 void Capture_Image_Computer(int Address, int Frame)
 {
   20db0:	deffda04 	addi	sp,sp,-152
   20db4:	dfc02515 	stw	ra,148(sp)
   20db8:	df002415 	stw	fp,144(sp)
   20dbc:	df002404 	addi	fp,sp,144
   20dc0:	e13ffe15 	stw	r4,-8(fp)
   20dc4:	e17fff15 	stw	r5,-4(fp)
 	char filename[80];
 	sprintf(filename, "/mnt/host/image%d.ppm",Frame);
   20dc8:	e0bfe404 	addi	r2,fp,-112
   20dcc:	e1bfff17 	ldw	r6,-4(fp)
   20dd0:	014000f4 	movhi	r5,3
   20dd4:	29583404 	addi	r5,r5,24784
   20dd8:	1009883a 	mov	r4,r2
   20ddc:	0024b840 	call	24b84 <sprintf>
 		FILE *foutput = fopen(filename, "w");
   20de0:	e0bfe404 	addi	r2,fp,-112
   20de4:	014000f4 	movhi	r5,3
   20de8:	29583a04 	addi	r5,r5,24808
   20dec:	1009883a 	mov	r4,r2
   20df0:	0022fe00 	call	22fe0 <fopen>
   20df4:	e0bfe215 	stw	r2,-120(fp)
 		if (foutput) {
   20df8:	e0bfe217 	ldw	r2,-120(fp)
   20dfc:	10005426 	beq	r2,zero,20f50 <Capture_Image_Computer+0x1a0>
 			/* Use fprintf function to write to file through file pointer */
 			fprintf(foutput, "P3\n320 240\n32\n");
   20e00:	e1ffe217 	ldw	r7,-120(fp)
   20e04:	01800384 	movi	r6,14
   20e08:	01400044 	movi	r5,1
   20e0c:	010000f4 	movhi	r4,3
   20e10:	21183b04 	addi	r4,r4,24812
   20e14:	0023ba80 	call	23ba8 <fwrite>
 			printf("Good: open \"%s\" for writing\n", filename);
   20e18:	e0bfe404 	addi	r2,fp,-112
   20e1c:	100b883a 	mov	r5,r2
   20e20:	010000f4 	movhi	r4,3
   20e24:	21183f04 	addi	r4,r4,24828
   20e28:	002475c0 	call	2475c <printf>
 			//
 			delay(5000000);
   20e2c:	01001334 	movhi	r4,76
   20e30:	2112d004 	addi	r4,r4,19264
   20e34:	0020f7c0 	call	20f7c <delay>
 			int Pixels[6];

 			for (int i=0;i<240;i++)
   20e38:	e03fe015 	stw	zero,-128(fp)
   20e3c:	00003e06 	br	20f38 <Capture_Image_Computer+0x188>
 			{
 				for(int j=0;j<160;j++)
   20e40:	e03fe115 	stw	zero,-124(fp)
   20e44:	00002406 	br	20ed8 <Capture_Image_Computer+0x128>
 				{
 					int32_t Data_Memory_Case=IORD_32DIRECT(Address, i*160*4+j*4+160*240*4*Frame);
   20e48:	e0bfe017 	ldw	r2,-128(fp)
   20e4c:	10c02824 	muli	r3,r2,160
   20e50:	e0bfe117 	ldw	r2,-124(fp)
   20e54:	1887883a 	add	r3,r3,r2
   20e58:	e13fff17 	ldw	r4,-4(fp)
   20e5c:	00a58014 	movui	r2,38400
   20e60:	2085383a 	mul	r2,r4,r2
   20e64:	1885883a 	add	r2,r3,r2
   20e68:	1085883a 	add	r2,r2,r2
   20e6c:	1085883a 	add	r2,r2,r2
   20e70:	1007883a 	mov	r3,r2
   20e74:	e0bffe17 	ldw	r2,-8(fp)
   20e78:	1885883a 	add	r2,r3,r2
   20e7c:	10800037 	ldwio	r2,0(r2)
   20e80:	e0bfe315 	stw	r2,-116(fp)
 					Convert_Pixels(Data_Memory_Case,Pixels);
   20e84:	e0bff804 	addi	r2,fp,-32
   20e88:	100b883a 	mov	r5,r2
   20e8c:	e13fe317 	ldw	r4,-116(fp)
   20e90:	0020fc00 	call	20fc0 <Convert_Pixels>
 					//printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0,Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 					fprintf(foutput, "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);
   20e94:	e1bff817 	ldw	r6,-32(fp)
   20e98:	e1fff917 	ldw	r7,-28(fp)
   20e9c:	e0bffa17 	ldw	r2,-24(fp)
   20ea0:	e0fffb17 	ldw	r3,-20(fp)
   20ea4:	e13ffc17 	ldw	r4,-16(fp)
   20ea8:	e17ffd17 	ldw	r5,-12(fp)
   20eac:	d9400315 	stw	r5,12(sp)
   20eb0:	d9000215 	stw	r4,8(sp)
   20eb4:	d8c00115 	stw	r3,4(sp)
   20eb8:	d8800015 	stw	r2,0(sp)
   20ebc:	014000f4 	movhi	r5,3
   20ec0:	29584704 	addi	r5,r5,24860
   20ec4:	e13fe217 	ldw	r4,-120(fp)
   20ec8:	00230200 	call	23020 <fprintf>
 			delay(5000000);
 			int Pixels[6];

 			for (int i=0;i<240;i++)
 			{
 				for(int j=0;j<160;j++)
   20ecc:	e0bfe117 	ldw	r2,-124(fp)
   20ed0:	10800044 	addi	r2,r2,1
   20ed4:	e0bfe115 	stw	r2,-124(fp)
   20ed8:	e0bfe117 	ldw	r2,-124(fp)
   20edc:	10802810 	cmplti	r2,r2,160
   20ee0:	103fd91e 	bne	r2,zero,20e48 <__alt_mem_sdram_controller_0+0xc0020e48>

 					fprintf(foutput, "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 				}
 				//printf( "\n");
 				printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);
   20ee4:	e17ff817 	ldw	r5,-32(fp)
   20ee8:	e1bff917 	ldw	r6,-28(fp)
   20eec:	e1fffa17 	ldw	r7,-24(fp)
   20ef0:	e0bffb17 	ldw	r2,-20(fp)
   20ef4:	e0fffc17 	ldw	r3,-16(fp)
   20ef8:	e13ffd17 	ldw	r4,-12(fp)
   20efc:	d9000215 	stw	r4,8(sp)
   20f00:	d8c00115 	stw	r3,4(sp)
   20f04:	d8800015 	stw	r2,0(sp)
   20f08:	010000f4 	movhi	r4,3
   20f0c:	21184704 	addi	r4,r4,24860
   20f10:	002475c0 	call	2475c <printf>

 				fprintf(foutput, "\r\n");
   20f14:	e1ffe217 	ldw	r7,-120(fp)
   20f18:	01800084 	movi	r6,2
   20f1c:	01400044 	movi	r5,1
   20f20:	010000f4 	movhi	r4,3
   20f24:	21184e04 	addi	r4,r4,24888
   20f28:	0023ba80 	call	23ba8 <fwrite>
 			printf("Good: open \"%s\" for writing\n", filename);
 			//
 			delay(5000000);
 			int Pixels[6];

 			for (int i=0;i<240;i++)
   20f2c:	e0bfe017 	ldw	r2,-128(fp)
   20f30:	10800044 	addi	r2,r2,1
   20f34:	e0bfe015 	stw	r2,-128(fp)
   20f38:	e0bfe017 	ldw	r2,-128(fp)
   20f3c:	10803c10 	cmplti	r2,r2,240
   20f40:	103fbf1e 	bne	r2,zero,20e40 <__alt_mem_sdram_controller_0+0xc0020e40>
 				printf( "%3d %3d %3d %3d %3d %3d ",Pixels[0],Pixels[1],Pixels[2],Pixels[3],Pixels[4],Pixels[5]);

 				fprintf(foutput, "\r\n");

 			}
 			fclose(foutput);
   20f44:	e13fe217 	ldw	r4,-120(fp)
   20f48:	00228340 	call	22834 <fclose>
 		else
 		{
 			printf("Error: could not open \"%s\" for writing\n", filename);

 		}
 }
   20f4c:	00000506 	br	20f64 <Capture_Image_Computer+0x1b4>
 			}
 			fclose(foutput);
 		}
 		else
 		{
 			printf("Error: could not open \"%s\" for writing\n", filename);
   20f50:	e0bfe404 	addi	r2,fp,-112
   20f54:	100b883a 	mov	r5,r2
   20f58:	010000f4 	movhi	r4,3
   20f5c:	21184f04 	addi	r4,r4,24892
   20f60:	002475c0 	call	2475c <printf>

 		}
 }
   20f64:	0001883a 	nop
   20f68:	e037883a 	mov	sp,fp
   20f6c:	dfc00117 	ldw	ra,4(sp)
   20f70:	df000017 	ldw	fp,0(sp)
   20f74:	dec00204 	addi	sp,sp,8
   20f78:	f800283a 	ret

00020f7c <delay>:

 void delay(int duration )
 {
   20f7c:	defffd04 	addi	sp,sp,-12
   20f80:	df000215 	stw	fp,8(sp)
   20f84:	df000204 	addi	fp,sp,8
   20f88:	e13fff15 	stw	r4,-4(fp)
 	int i;
 	for (i=0;i<duration;i++);
   20f8c:	e03ffe15 	stw	zero,-8(fp)
   20f90:	00000306 	br	20fa0 <delay+0x24>
   20f94:	e0bffe17 	ldw	r2,-8(fp)
   20f98:	10800044 	addi	r2,r2,1
   20f9c:	e0bffe15 	stw	r2,-8(fp)
   20fa0:	e0fffe17 	ldw	r3,-8(fp)
   20fa4:	e0bfff17 	ldw	r2,-4(fp)
   20fa8:	18bffa16 	blt	r3,r2,20f94 <__alt_mem_sdram_controller_0+0xc0020f94>
 }
   20fac:	0001883a 	nop
   20fb0:	e037883a 	mov	sp,fp
   20fb4:	df000017 	ldw	fp,0(sp)
   20fb8:	dec00104 	addi	sp,sp,4
   20fbc:	f800283a 	ret

00020fc0 <Convert_Pixels>:
 void Convert_Pixels(int32_t Data,int* Storage)
 {
   20fc0:	defffc04 	addi	sp,sp,-16
   20fc4:	dfc00315 	stw	ra,12(sp)
   20fc8:	df000215 	stw	fp,8(sp)
   20fcc:	df000204 	addi	fp,sp,8
   20fd0:	e13ffe15 	stw	r4,-8(fp)
   20fd4:	e17fff15 	stw	r5,-4(fp)
 	Extract_Colors(Data&0xFFFF,Storage);
   20fd8:	e0bffe17 	ldw	r2,-8(fp)
   20fdc:	10bfffcc 	andi	r2,r2,65535
   20fe0:	10a0001c 	xori	r2,r2,32768
   20fe4:	10a00004 	addi	r2,r2,-32768
   20fe8:	e17fff17 	ldw	r5,-4(fp)
   20fec:	1009883a 	mov	r4,r2
   20ff0:	00210340 	call	21034 <Extract_Colors>
 	Extract_Colors((Data&0xFFFF0000)>>16,Storage+3);
   20ff4:	e0bffe17 	ldw	r2,-8(fp)
   20ff8:	1004d43a 	srli	r2,r2,16
   20ffc:	10ffffcc 	andi	r3,r2,65535
   21000:	18e0001c 	xori	r3,r3,32768
   21004:	18e00004 	addi	r3,r3,-32768
   21008:	e0bfff17 	ldw	r2,-4(fp)
   2100c:	10800304 	addi	r2,r2,12
   21010:	100b883a 	mov	r5,r2
   21014:	1809883a 	mov	r4,r3
   21018:	00210340 	call	21034 <Extract_Colors>

 }
   2101c:	0001883a 	nop
   21020:	e037883a 	mov	sp,fp
   21024:	dfc00117 	ldw	ra,4(sp)
   21028:	df000017 	ldw	fp,0(sp)
   2102c:	dec00204 	addi	sp,sp,8
   21030:	f800283a 	ret

00021034 <Extract_Colors>:
 void Extract_Colors(int16_t Data,int* Storage)
 {
   21034:	defff904 	addi	sp,sp,-28
   21038:	df000615 	stw	fp,24(sp)
   2103c:	df000604 	addi	fp,sp,24
   21040:	2005883a 	mov	r2,r4
   21044:	e17fff15 	stw	r5,-4(fp)
   21048:	e0bffe0d 	sth	r2,-8(fp)
 	int Red=0, Blue=0, Green=0;
   2104c:	e03ffa15 	stw	zero,-24(fp)
   21050:	e03ffb15 	stw	zero,-20(fp)
   21054:	e03ffc15 	stw	zero,-16(fp)
 	Red=(Data & 0xF800)>>11;
   21058:	e0bffe0f 	ldh	r2,-8(fp)
   2105c:	10be000c 	andi	r2,r2,63488
   21060:	1005d2fa 	srai	r2,r2,11
   21064:	e0bffa15 	stw	r2,-24(fp)
 	Blue=(Data & 0x001F);
   21068:	e0bffe0b 	ldhu	r2,-8(fp)
   2106c:	10bfffcc 	andi	r2,r2,65535
   21070:	108007cc 	andi	r2,r2,31
   21074:	e0bffb15 	stw	r2,-20(fp)
 	Green=(Data & 0x07E0)>>5;
   21078:	e0bffe0b 	ldhu	r2,-8(fp)
   2107c:	10bfffcc 	andi	r2,r2,65535
   21080:	1081f80c 	andi	r2,r2,2016
   21084:	1005d17a 	srai	r2,r2,5
   21088:	e0bffc15 	stw	r2,-16(fp)
 	int Color=Red;
   2108c:	e0bffa17 	ldw	r2,-24(fp)
   21090:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
   21094:	e0bffd17 	ldw	r2,-12(fp)
   21098:	10800850 	cmplti	r2,r2,33
   2109c:	1000041e 	bne	r2,zero,210b0 <Extract_Colors+0x7c>
 		Storage[0]=32;
   210a0:	e0bfff17 	ldw	r2,-4(fp)
   210a4:	00c00804 	movi	r3,32
   210a8:	10c00015 	stw	r3,0(r2)
   210ac:	00000306 	br	210bc <Extract_Colors+0x88>
 	else
 		Storage[0]=Color;
   210b0:	e0bfff17 	ldw	r2,-4(fp)
   210b4:	e0fffd17 	ldw	r3,-12(fp)
   210b8:	10c00015 	stw	r3,0(r2)
 	Color=Green/2;
   210bc:	e0bffc17 	ldw	r2,-16(fp)
   210c0:	1006d7fa 	srli	r3,r2,31
   210c4:	1885883a 	add	r2,r3,r2
   210c8:	1005d07a 	srai	r2,r2,1
   210cc:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
   210d0:	e0bffd17 	ldw	r2,-12(fp)
   210d4:	10800850 	cmplti	r2,r2,33
   210d8:	1000051e 	bne	r2,zero,210f0 <Extract_Colors+0xbc>
 		Storage[1]=32;
   210dc:	e0bfff17 	ldw	r2,-4(fp)
   210e0:	10800104 	addi	r2,r2,4
   210e4:	00c00804 	movi	r3,32
   210e8:	10c00015 	stw	r3,0(r2)
   210ec:	00000406 	br	21100 <Extract_Colors+0xcc>
 	else
 		Storage[1]=Color;
   210f0:	e0bfff17 	ldw	r2,-4(fp)
   210f4:	10800104 	addi	r2,r2,4
   210f8:	e0fffd17 	ldw	r3,-12(fp)
   210fc:	10c00015 	stw	r3,0(r2)
 	Color=Blue;
   21100:	e0bffb17 	ldw	r2,-20(fp)
   21104:	e0bffd15 	stw	r2,-12(fp)
 	if(Color>32)
   21108:	e0bffd17 	ldw	r2,-12(fp)
   2110c:	10800850 	cmplti	r2,r2,33
   21110:	1000051e 	bne	r2,zero,21128 <Extract_Colors+0xf4>
 		Storage[2]=32;
   21114:	e0bfff17 	ldw	r2,-4(fp)
   21118:	10800204 	addi	r2,r2,8
   2111c:	00c00804 	movi	r3,32
   21120:	10c00015 	stw	r3,0(r2)
 	else
 		Storage[2]=Color;
 	return ;
   21124:	00000506 	br	2113c <Extract_Colors+0x108>
 		Storage[1]=Color;
 	Color=Blue;
 	if(Color>32)
 		Storage[2]=32;
 	else
 		Storage[2]=Color;
   21128:	e0bfff17 	ldw	r2,-4(fp)
   2112c:	10800204 	addi	r2,r2,8
   21130:	e0fffd17 	ldw	r3,-12(fp)
   21134:	10c00015 	stw	r3,0(r2)
 	return ;
   21138:	0001883a 	nop
 }
   2113c:	e037883a 	mov	sp,fp
   21140:	df000017 	ldw	fp,0(sp)
   21144:	dec00104 	addi	sp,sp,4
   21148:	f800283a 	ret

0002114c <Test_Memory_Map>:
#define HPS_0_BRIDGES_SPAN 268435456 /* address_span_expander span from system.h (ADAPT TO YOUR DESIGN) */
#define HPS_0_BRIDGES_BASE 0x0
#define ONE_MB (1024 * 1024) //

int Test_Memory_Map()
{
   2114c:	defff904 	addi	sp,sp,-28
   21150:	dfc00615 	stw	ra,24(sp)
   21154:	df000515 	stw	fp,20(sp)
   21158:	df000504 	addi	fp,sp,20
		uint32_t megabyte_count = 0;
   2115c:	e03ffb15 	stw	zero,-20(fp)

	    for (uint32_t i = 0; i < HPS_0_BRIDGES_SPAN; i += sizeof(uint32_t)) {
   21160:	e03ffc15 	stw	zero,-16(fp)
   21164:	00002406 	br	211f8 <Test_Memory_Map+0xac>

	        // Print progress through 256 MB memory available through address span expander
	        if ((i % ONE_MB) == 0) {
   21168:	e0fffc17 	ldw	r3,-16(fp)
   2116c:	00800434 	movhi	r2,16
   21170:	10bfffc4 	addi	r2,r2,-1
   21174:	1884703a 	and	r2,r3,r2
   21178:	1000071e 	bne	r2,zero,21198 <Test_Memory_Map+0x4c>
	            printf("megabyte_count = %" PRIu32 "\n", megabyte_count);
   2117c:	e17ffb17 	ldw	r5,-20(fp)
   21180:	010000f4 	movhi	r4,3
   21184:	21185904 	addi	r4,r4,24932
   21188:	002475c0 	call	2475c <printf>
	            megabyte_count++;
   2118c:	e0bffb17 	ldw	r2,-20(fp)
   21190:	10800044 	addi	r2,r2,1
   21194:	e0bffb15 	stw	r2,-20(fp)
	        }

	        uint32_t addr = HPS_0_BRIDGES_BASE + i;
   21198:	e0bffc17 	ldw	r2,-16(fp)
   2119c:	e0bffd15 	stw	r2,-12(fp)

	        // Write through address span expander
	        uint32_t writedata = i;
   211a0:	e0bffc17 	ldw	r2,-16(fp)
   211a4:	e0bffe15 	stw	r2,-8(fp)
	        IOWR_32DIRECT(addr, 0, writedata);
   211a8:	e0bffd17 	ldw	r2,-12(fp)
   211ac:	e0fffe17 	ldw	r3,-8(fp)
   211b0:	10c00035 	stwio	r3,0(r2)

	        // Read through address span expander
	        uint32_t readdata = IORD_32DIRECT(addr, 0);
   211b4:	e0bffd17 	ldw	r2,-12(fp)
   211b8:	10800037 	ldwio	r2,0(r2)
   211bc:	e0bfff15 	stw	r2,-4(fp)

	        // Check if read data is equal to written data
	        assert(writedata == readdata);
   211c0:	e0fffe17 	ldw	r3,-8(fp)
   211c4:	e0bfff17 	ldw	r2,-4(fp)
   211c8:	18800826 	beq	r3,r2,211ec <Test_Memory_Map+0xa0>
   211cc:	01c000f4 	movhi	r7,3
   211d0:	39d85f04 	addi	r7,r7,24956
   211d4:	018000f4 	movhi	r6,3
   211d8:	31987a04 	addi	r6,r6,25064
   211dc:	01400784 	movi	r5,30
   211e0:	010000f4 	movhi	r4,3
   211e4:	21186504 	addi	r4,r4,24980
   211e8:	00226c80 	call	226c8 <__assert_func>

int Test_Memory_Map()
{
		uint32_t megabyte_count = 0;

	    for (uint32_t i = 0; i < HPS_0_BRIDGES_SPAN; i += sizeof(uint32_t)) {
   211ec:	e0bffc17 	ldw	r2,-16(fp)
   211f0:	10800104 	addi	r2,r2,4
   211f4:	e0bffc15 	stw	r2,-16(fp)
   211f8:	e0fffc17 	ldw	r3,-16(fp)
   211fc:	00840034 	movhi	r2,4096
   21200:	18bfd936 	bltu	r3,r2,21168 <__alt_mem_sdram_controller_0+0xc0021168>
	        uint32_t readdata = IORD_32DIRECT(addr, 0);

	        // Check if read data is equal to written data
	        assert(writedata == readdata);
	    }
	    printf("Memory PASS\n");
   21204:	010000f4 	movhi	r4,3
   21208:	21186e04 	addi	r4,r4,25016
   2120c:	00248580 	call	24858 <puts>
	    return EXIT_SUCCESS;
   21210:	0005883a 	mov	r2,zero
}
   21214:	e037883a 	mov	sp,fp
   21218:	dfc00117 	ldw	ra,4(sp)
   2121c:	df000017 	ldw	fp,0(sp)
   21220:	dec00204 	addi	sp,sp,8
   21224:	f800283a 	ret

00021228 <Quick_Test_Memory_Map>:
int Quick_Test_Memory_Map()
{
   21228:	defff804 	addi	sp,sp,-32
   2122c:	dfc00715 	stw	ra,28(sp)
   21230:	df000615 	stw	fp,24(sp)
   21234:	df000604 	addi	fp,sp,24
		uint32_t megabyte_count = 0;
   21238:	e03ffa15 	stw	zero,-24(fp)
		srand(time(NULL));
   2123c:	0009883a 	mov	r4,zero
   21240:	0026f9c0 	call	26f9c <time>
   21244:	1009883a 	mov	r4,r2
   21248:	002486c0 	call	2486c <srand>
		int r = rand()%255;//0 to 255
   2124c:	00248840 	call	24884 <rand>
   21250:	01403fc4 	movi	r5,255
   21254:	1009883a 	mov	r4,r2
   21258:	00225980 	call	22598 <__modsi3>
   2125c:	e0bffc15 	stw	r2,-16(fp)
	    for (uint32_t i = r*ONE_MB; i < (r+1)*ONE_MB; i += sizeof(uint32_t)) {
   21260:	e0bffc17 	ldw	r2,-16(fp)
   21264:	1004953a 	slli	r2,r2,20
   21268:	e0bffb15 	stw	r2,-20(fp)
   2126c:	00002406 	br	21300 <Quick_Test_Memory_Map+0xd8>

	        // Print progress through 256 MB memory available through address span expander
	        if ((i % ONE_MB) == 0) {
   21270:	e0fffb17 	ldw	r3,-20(fp)
   21274:	00800434 	movhi	r2,16
   21278:	10bfffc4 	addi	r2,r2,-1
   2127c:	1884703a 	and	r2,r3,r2
   21280:	1000071e 	bne	r2,zero,212a0 <Quick_Test_Memory_Map+0x78>
	            printf("MB tested = %d\n", r);
   21284:	e17ffc17 	ldw	r5,-16(fp)
   21288:	010000f4 	movhi	r4,3
   2128c:	21187104 	addi	r4,r4,25028
   21290:	002475c0 	call	2475c <printf>
	            megabyte_count++;
   21294:	e0bffa17 	ldw	r2,-24(fp)
   21298:	10800044 	addi	r2,r2,1
   2129c:	e0bffa15 	stw	r2,-24(fp)
	        }
	        uint32_t addr = HPS_0_BRIDGES_BASE + i;
   212a0:	e0bffb17 	ldw	r2,-20(fp)
   212a4:	e0bffd15 	stw	r2,-12(fp)

	        // Write through address span expander
	        uint32_t writedata = i;
   212a8:	e0bffb17 	ldw	r2,-20(fp)
   212ac:	e0bffe15 	stw	r2,-8(fp)
	        IOWR_32DIRECT(addr, 0, writedata);
   212b0:	e0bffd17 	ldw	r2,-12(fp)
   212b4:	e0fffe17 	ldw	r3,-8(fp)
   212b8:	10c00035 	stwio	r3,0(r2)

	        // Read through address span expander
	        uint32_t readdata = IORD_32DIRECT(addr, 0);
   212bc:	e0bffd17 	ldw	r2,-12(fp)
   212c0:	10800037 	ldwio	r2,0(r2)
   212c4:	e0bfff15 	stw	r2,-4(fp)

	        // Check if read data is equal to written data
	        assert(writedata == readdata);
   212c8:	e0fffe17 	ldw	r3,-8(fp)
   212cc:	e0bfff17 	ldw	r2,-4(fp)
   212d0:	18800826 	beq	r3,r2,212f4 <Quick_Test_Memory_Map+0xcc>
   212d4:	01c000f4 	movhi	r7,3
   212d8:	39d85f04 	addi	r7,r7,24956
   212dc:	018000f4 	movhi	r6,3
   212e0:	31987e04 	addi	r6,r6,25080
   212e4:	01400e44 	movi	r5,57
   212e8:	010000f4 	movhi	r4,3
   212ec:	21186504 	addi	r4,r4,24980
   212f0:	00226c80 	call	226c8 <__assert_func>
int Quick_Test_Memory_Map()
{
		uint32_t megabyte_count = 0;
		srand(time(NULL));
		int r = rand()%255;//0 to 255
	    for (uint32_t i = r*ONE_MB; i < (r+1)*ONE_MB; i += sizeof(uint32_t)) {
   212f4:	e0bffb17 	ldw	r2,-20(fp)
   212f8:	10800104 	addi	r2,r2,4
   212fc:	e0bffb15 	stw	r2,-20(fp)
   21300:	e0bffc17 	ldw	r2,-16(fp)
   21304:	10800044 	addi	r2,r2,1
   21308:	1004953a 	slli	r2,r2,20
   2130c:	1007883a 	mov	r3,r2
   21310:	e0bffb17 	ldw	r2,-20(fp)
   21314:	10ffd636 	bltu	r2,r3,21270 <__alt_mem_sdram_controller_0+0xc0021270>
	        uint32_t readdata = IORD_32DIRECT(addr, 0);

	        // Check if read data is equal to written data
	        assert(writedata == readdata);
	    }
	    printf("Memory Quick PASS\r\n");
   21318:	010000f4 	movhi	r4,3
   2131c:	21187504 	addi	r4,r4,25044
   21320:	00248580 	call	24858 <puts>
	    return EXIT_SUCCESS;
   21324:	0005883a 	mov	r2,zero
}
   21328:	e037883a 	mov	sp,fp
   2132c:	dfc00117 	ldw	ra,4(sp)
   21330:	df000017 	ldw	fp,0(sp)
   21334:	dec00204 	addi	sp,sp,8
   21338:	f800283a 	ret

0002133c <TRDB_D5M_log2>:
///////////////////////
// GENERAL FUNCTIONS //
///////////////////////

// Calculates log2 of a number. Attention: the number must be a power of 2
static uint16_t TRDB_D5M_log2(uint16_t power_of_2) {
   2133c:	defffe04 	addi	sp,sp,-8
   21340:	df000115 	stw	fp,4(sp)
   21344:	df000104 	addi	fp,sp,4
   21348:	2005883a 	mov	r2,r4
   2134c:	e0bfff0d 	sth	r2,-4(fp)
    if      (power_of_2 == 0x0001) return 0;
   21350:	e0bfff0b 	ldhu	r2,-4(fp)
   21354:	10800058 	cmpnei	r2,r2,1
   21358:	1000021e 	bne	r2,zero,21364 <TRDB_D5M_log2+0x28>
   2135c:	0005883a 	mov	r2,zero
   21360:	00004706 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0002) return 1;
   21364:	e0bfff0b 	ldhu	r2,-4(fp)
   21368:	10800098 	cmpnei	r2,r2,2
   2136c:	1000021e 	bne	r2,zero,21378 <TRDB_D5M_log2+0x3c>
   21370:	00800044 	movi	r2,1
   21374:	00004206 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0004) return 2;
   21378:	e0bfff0b 	ldhu	r2,-4(fp)
   2137c:	10800118 	cmpnei	r2,r2,4
   21380:	1000021e 	bne	r2,zero,2138c <TRDB_D5M_log2+0x50>
   21384:	00800084 	movi	r2,2
   21388:	00003d06 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0008) return 3;
   2138c:	e0bfff0b 	ldhu	r2,-4(fp)
   21390:	10800218 	cmpnei	r2,r2,8
   21394:	1000021e 	bne	r2,zero,213a0 <TRDB_D5M_log2+0x64>
   21398:	008000c4 	movi	r2,3
   2139c:	00003806 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0010) return 4;
   213a0:	e0bfff0b 	ldhu	r2,-4(fp)
   213a4:	10800418 	cmpnei	r2,r2,16
   213a8:	1000021e 	bne	r2,zero,213b4 <TRDB_D5M_log2+0x78>
   213ac:	00800104 	movi	r2,4
   213b0:	00003306 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0020) return 5;
   213b4:	e0bfff0b 	ldhu	r2,-4(fp)
   213b8:	10800818 	cmpnei	r2,r2,32
   213bc:	1000021e 	bne	r2,zero,213c8 <TRDB_D5M_log2+0x8c>
   213c0:	00800144 	movi	r2,5
   213c4:	00002e06 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0040) return 6;
   213c8:	e0bfff0b 	ldhu	r2,-4(fp)
   213cc:	10801018 	cmpnei	r2,r2,64
   213d0:	1000021e 	bne	r2,zero,213dc <TRDB_D5M_log2+0xa0>
   213d4:	00800184 	movi	r2,6
   213d8:	00002906 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0080) return 7;
   213dc:	e0bfff0b 	ldhu	r2,-4(fp)
   213e0:	10802018 	cmpnei	r2,r2,128
   213e4:	1000021e 	bne	r2,zero,213f0 <TRDB_D5M_log2+0xb4>
   213e8:	008001c4 	movi	r2,7
   213ec:	00002406 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0100) return 8;
   213f0:	e0bfff0b 	ldhu	r2,-4(fp)
   213f4:	10804018 	cmpnei	r2,r2,256
   213f8:	1000021e 	bne	r2,zero,21404 <TRDB_D5M_log2+0xc8>
   213fc:	00800204 	movi	r2,8
   21400:	00001f06 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0200) return 9;
   21404:	e0bfff0b 	ldhu	r2,-4(fp)
   21408:	10808018 	cmpnei	r2,r2,512
   2140c:	1000021e 	bne	r2,zero,21418 <TRDB_D5M_log2+0xdc>
   21410:	00800244 	movi	r2,9
   21414:	00001a06 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0400) return 10;
   21418:	e0bfff0b 	ldhu	r2,-4(fp)
   2141c:	10810018 	cmpnei	r2,r2,1024
   21420:	1000021e 	bne	r2,zero,2142c <TRDB_D5M_log2+0xf0>
   21424:	00800284 	movi	r2,10
   21428:	00001506 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0800) return 11;
   2142c:	e0bfff0b 	ldhu	r2,-4(fp)
   21430:	10820018 	cmpnei	r2,r2,2048
   21434:	1000021e 	bne	r2,zero,21440 <TRDB_D5M_log2+0x104>
   21438:	008002c4 	movi	r2,11
   2143c:	00001006 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x1000) return 12;
   21440:	e0bfff0b 	ldhu	r2,-4(fp)
   21444:	10840018 	cmpnei	r2,r2,4096
   21448:	1000021e 	bne	r2,zero,21454 <TRDB_D5M_log2+0x118>
   2144c:	00800304 	movi	r2,12
   21450:	00000b06 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x2000) return 13;
   21454:	e0bfff0b 	ldhu	r2,-4(fp)
   21458:	10880018 	cmpnei	r2,r2,8192
   2145c:	1000021e 	bne	r2,zero,21468 <TRDB_D5M_log2+0x12c>
   21460:	00800344 	movi	r2,13
   21464:	00000606 	br	21480 <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x4000) return 14;
   21468:	e0bfff0b 	ldhu	r2,-4(fp)
   2146c:	10900018 	cmpnei	r2,r2,16384
   21470:	1000021e 	bne	r2,zero,2147c <TRDB_D5M_log2+0x140>
   21474:	00800384 	movi	r2,14
   21478:	00000106 	br	21480 <TRDB_D5M_log2+0x144>
    else                           return 15;
   2147c:	008003c4 	movi	r2,15
}
   21480:	e037883a 	mov	sp,fp
   21484:	df000017 	ldw	fp,0(sp)
   21488:	dec00104 	addi	sp,sp,4
   2148c:	f800283a 	ret

00021490 <TRDB_D5M_shift_amount>:

static uint16_t TRDB_D5M_shift_amount(uint16_t mask) {
   21490:	defffd04 	addi	sp,sp,-12
   21494:	dfc00215 	stw	ra,8(sp)
   21498:	df000115 	stw	fp,4(sp)
   2149c:	df000104 	addi	fp,sp,4
   214a0:	2005883a 	mov	r2,r4
   214a4:	e0bfff0d 	sth	r2,-4(fp)
    // (mask & -mask) clears all but the lowest bit of x
    return TRDB_D5M_log2(mask & (~mask + 1));
   214a8:	e0bfff0b 	ldhu	r2,-4(fp)
   214ac:	0085c83a 	sub	r2,zero,r2
   214b0:	1007883a 	mov	r3,r2
   214b4:	e0bfff0b 	ldhu	r2,-4(fp)
   214b8:	1884703a 	and	r2,r3,r2
   214bc:	10bfffcc 	andi	r2,r2,65535
   214c0:	1009883a 	mov	r4,r2
   214c4:	002133c0 	call	2133c <TRDB_D5M_log2>
}
   214c8:	e037883a 	mov	sp,fp
   214cc:	dfc00117 	ldw	ra,4(sp)
   214d0:	df000017 	ldw	fp,0(sp)
   214d4:	dec00204 	addi	sp,sp,8
   214d8:	f800283a 	ret

000214dc <TRDB_D5M_READ>:

static uint16_t TRDB_D5M_READ(uint16_t full_reg_value, uint16_t mask) {
   214dc:	defffb04 	addi	sp,sp,-20
   214e0:	dfc00415 	stw	ra,16(sp)
   214e4:	df000315 	stw	fp,12(sp)
   214e8:	dc000215 	stw	r16,8(sp)
   214ec:	df000304 	addi	fp,sp,12
   214f0:	2007883a 	mov	r3,r4
   214f4:	2805883a 	mov	r2,r5
   214f8:	e0fffd0d 	sth	r3,-12(fp)
   214fc:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & mask) >> TRDB_D5M_shift_amount(mask);
   21500:	e0fffd0b 	ldhu	r3,-12(fp)
   21504:	e0bffe0b 	ldhu	r2,-8(fp)
   21508:	1884703a 	and	r2,r3,r2
   2150c:	143fffcc 	andi	r16,r2,65535
   21510:	e0bffe0b 	ldhu	r2,-8(fp)
   21514:	1009883a 	mov	r4,r2
   21518:	00214900 	call	21490 <TRDB_D5M_shift_amount>
   2151c:	10bfffcc 	andi	r2,r2,65535
   21520:	8085d83a 	sra	r2,r16,r2
}
   21524:	e6ffff04 	addi	sp,fp,-4
   21528:	dfc00217 	ldw	ra,8(sp)
   2152c:	df000117 	ldw	fp,4(sp)
   21530:	dc000017 	ldw	r16,0(sp)
   21534:	dec00304 	addi	sp,sp,12
   21538:	f800283a 	ret

0002153c <TRDB_D5M_WRITE>:

static uint16_t TRDB_D5M_WRITE(uint16_t full_reg_value, uint16_t mask, uint16_t write_value) {
   2153c:	defffa04 	addi	sp,sp,-24
   21540:	dfc00515 	stw	ra,20(sp)
   21544:	df000415 	stw	fp,16(sp)
   21548:	dc000315 	stw	r16,12(sp)
   2154c:	df000404 	addi	fp,sp,16
   21550:	2807883a 	mov	r3,r5
   21554:	3005883a 	mov	r2,r6
   21558:	e13ffc0d 	sth	r4,-16(fp)
   2155c:	e0fffd0d 	sth	r3,-12(fp)
   21560:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & (~mask)) | ((write_value << TRDB_D5M_shift_amount(mask)) & mask);
   21564:	e43ffe0b 	ldhu	r16,-8(fp)
   21568:	e0bffd0b 	ldhu	r2,-12(fp)
   2156c:	1009883a 	mov	r4,r2
   21570:	00214900 	call	21490 <TRDB_D5M_shift_amount>
   21574:	10bfffcc 	andi	r2,r2,65535
   21578:	8084983a 	sll	r2,r16,r2
   2157c:	1007883a 	mov	r3,r2
   21580:	e0bffc0b 	ldhu	r2,-16(fp)
   21584:	1884f03a 	xor	r2,r3,r2
   21588:	1007883a 	mov	r3,r2
   2158c:	e0bffd0b 	ldhu	r2,-12(fp)
   21590:	1884703a 	and	r2,r3,r2
   21594:	1007883a 	mov	r3,r2
   21598:	e0bffc0b 	ldhu	r2,-16(fp)
   2159c:	1884f03a 	xor	r2,r3,r2
}
   215a0:	e6ffff04 	addi	sp,fp,-4
   215a4:	dfc00217 	ldw	ra,8(sp)
   215a8:	df000117 	ldw	fp,4(sp)
   215ac:	dc000017 	ldw	r16,0(sp)
   215b0:	dec00304 	addi	sp,sp,12
   215b4:	f800283a 	ret

000215b8 <trdb_d5m_write>:
#define I2C_FREQ              (50000000) /* Clock frequency driving the i2c core: 50 MHz in this example (ADAPT TO YOUR DESIGN) */
#define TRDB_D5M_I2C_ADDRESS  (0xca)

#define TRDB_D5M_0_I2C_0_BASE I2C_COMPONENT_BASE   /* i2c base address from system.h (ADAPT TO YOUR DESIGN) */
i2c_dev i2c;
bool trdb_d5m_write(i2c_dev *i2c, uint8_t register_offset, uint16_t data) {
   215b8:	defff804 	addi	sp,sp,-32
   215bc:	dfc00715 	stw	ra,28(sp)
   215c0:	df000615 	stw	fp,24(sp)
   215c4:	df000604 	addi	fp,sp,24
   215c8:	e13ffd15 	stw	r4,-12(fp)
   215cc:	2807883a 	mov	r3,r5
   215d0:	3005883a 	mov	r2,r6
   215d4:	e0fffe05 	stb	r3,-8(fp)
   215d8:	e0bfff0d 	sth	r2,-4(fp)
    uint8_t byte_data[2] = {(data >> 8) & 0xff, data & 0xff};
   215dc:	e0bfff0b 	ldhu	r2,-4(fp)
   215e0:	1004d23a 	srli	r2,r2,8
   215e4:	e0bffc05 	stb	r2,-16(fp)
   215e8:	e0bfff0b 	ldhu	r2,-4(fp)
   215ec:	e0bffc45 	stb	r2,-15(fp)

    int success = i2c_write_array(i2c, TRDB_D5M_I2C_ADDRESS, register_offset, byte_data, sizeof(byte_data));
   215f0:	e0fffe03 	ldbu	r3,-8(fp)
   215f4:	e13ffc04 	addi	r4,fp,-16
   215f8:	00800084 	movi	r2,2
   215fc:	d8800015 	stw	r2,0(sp)
   21600:	200f883a 	mov	r7,r4
   21604:	180d883a 	mov	r6,r3
   21608:	01403284 	movi	r5,202
   2160c:	e13ffd17 	ldw	r4,-12(fp)
   21610:	0021f0c0 	call	21f0c <i2c_write_array>
   21614:	e0bffb15 	stw	r2,-20(fp)

    if (success != I2C_SUCCESS) {
   21618:	e0bffb17 	ldw	r2,-20(fp)
   2161c:	10000226 	beq	r2,zero,21628 <trdb_d5m_write+0x70>
        return false;
   21620:	0005883a 	mov	r2,zero
   21624:	00000106 	br	2162c <trdb_d5m_write+0x74>
    } else {
        return true;
   21628:	00800044 	movi	r2,1
    }
}
   2162c:	e037883a 	mov	sp,fp
   21630:	dfc00117 	ldw	ra,4(sp)
   21634:	df000017 	ldw	fp,0(sp)
   21638:	dec00204 	addi	sp,sp,8
   2163c:	f800283a 	ret

00021640 <trdb_d5m_read>:

bool trdb_d5m_read(i2c_dev *i2c, uint8_t register_offset, uint16_t *data) {
   21640:	defff804 	addi	sp,sp,-32
   21644:	dfc00715 	stw	ra,28(sp)
   21648:	df000615 	stw	fp,24(sp)
   2164c:	df000604 	addi	fp,sp,24
   21650:	e13ffd15 	stw	r4,-12(fp)
   21654:	2805883a 	mov	r2,r5
   21658:	e1bfff15 	stw	r6,-4(fp)
   2165c:	e0bffe05 	stb	r2,-8(fp)
    uint8_t byte_data[2] = {0, 0};
   21660:	e03ffc05 	stb	zero,-16(fp)
   21664:	e03ffc45 	stb	zero,-15(fp)

    int success = i2c_read_array(i2c, TRDB_D5M_I2C_ADDRESS, register_offset, byte_data, sizeof(byte_data));
   21668:	e0fffe03 	ldbu	r3,-8(fp)
   2166c:	e13ffc04 	addi	r4,fp,-16
   21670:	00800084 	movi	r2,2
   21674:	d8800015 	stw	r2,0(sp)
   21678:	200f883a 	mov	r7,r4
   2167c:	180d883a 	mov	r6,r3
   21680:	01403284 	movi	r5,202
   21684:	e13ffd17 	ldw	r4,-12(fp)
   21688:	00220a00 	call	220a0 <i2c_read_array>
   2168c:	e0bffb15 	stw	r2,-20(fp)

    if (success != I2C_SUCCESS) {
   21690:	e0bffb17 	ldw	r2,-20(fp)
   21694:	10000226 	beq	r2,zero,216a0 <trdb_d5m_read+0x60>
        return false;
   21698:	0005883a 	mov	r2,zero
   2169c:	00000b06 	br	216cc <trdb_d5m_read+0x8c>
    } else {
        *data = ((uint16_t) byte_data[0] << 8) + byte_data[1];
   216a0:	e0bffc03 	ldbu	r2,-16(fp)
   216a4:	10803fcc 	andi	r2,r2,255
   216a8:	1004923a 	slli	r2,r2,8
   216ac:	1007883a 	mov	r3,r2
   216b0:	e0bffc43 	ldbu	r2,-15(fp)
   216b4:	10803fcc 	andi	r2,r2,255
   216b8:	1885883a 	add	r2,r3,r2
   216bc:	1007883a 	mov	r3,r2
   216c0:	e0bfff17 	ldw	r2,-4(fp)
   216c4:	10c0000d 	sth	r3,0(r2)
        return true;
   216c8:	00800044 	movi	r2,1
    }
}
   216cc:	e037883a 	mov	sp,fp
   216d0:	dfc00117 	ldw	ra,4(sp)
   216d4:	df000017 	ldw	fp,0(sp)
   216d8:	dec00204 	addi	sp,sp,8
   216dc:	f800283a 	ret

000216e0 <Test_i2c>:
bool Test_i2c()
{
   216e0:	defffe04 	addi	sp,sp,-8
   216e4:	dfc00115 	stw	ra,4(sp)
   216e8:	df000015 	stw	fp,0(sp)
   216ec:	d839883a 	mov	fp,sp
	init_I2C();
   216f0:	00217440 	call	21744 <init_I2C>
    if (Write_and_Read_I2C(&i2c,10,23)) {
   216f4:	018005c4 	movi	r6,23
   216f8:	01400284 	movi	r5,10
   216fc:	d126cb04 	addi	r4,gp,-25812
   21700:	00217880 	call	21788 <Write_and_Read_I2C>
   21704:	10803fcc 	andi	r2,r2,255
   21708:	10000526 	beq	r2,zero,21720 <Test_i2c+0x40>
    	printf("I2C PASS\r\n");
   2170c:	010000f4 	movhi	r4,3
   21710:	21188404 	addi	r4,r4,25104
   21714:	00248580 	call	24858 <puts>
        return EXIT_SUCCESS;
   21718:	0005883a 	mov	r2,zero
   2171c:	00000406 	br	21730 <Test_i2c+0x50>
    } else {
    	printf("I2C FAIL\r\n");
   21720:	010000f4 	movhi	r4,3
   21724:	21188704 	addi	r4,r4,25116
   21728:	00248580 	call	24858 <puts>
        return EXIT_FAILURE;
   2172c:	00800044 	movi	r2,1
    }
}
   21730:	e037883a 	mov	sp,fp
   21734:	dfc00117 	ldw	ra,4(sp)
   21738:	df000017 	ldw	fp,0(sp)
   2173c:	dec00204 	addi	sp,sp,8
   21740:	f800283a 	ret

00021744 <init_I2C>:
void init_I2C()
{
   21744:	defffe04 	addi	sp,sp,-8
   21748:	dfc00115 	stw	ra,4(sp)
   2174c:	df000015 	stw	fp,0(sp)
   21750:	d839883a 	mov	fp,sp
	i2c = i2c_inst((void *) TRDB_D5M_0_I2C_0_BASE);
   21754:	01001004 	movi	r4,64
   21758:	0021b880 	call	21b88 <i2c_inst>
   2175c:	d0a6cb15 	stw	r2,-25812(gp)
	i2c_init(&i2c, I2C_FREQ);
   21760:	0140bef4 	movhi	r5,763
   21764:	297c2004 	addi	r5,r5,-3968
   21768:	d126cb04 	addi	r4,gp,-25812
   2176c:	0021bb40 	call	21bb4 <i2c_init>
}
   21770:	0001883a 	nop
   21774:	e037883a 	mov	sp,fp
   21778:	dfc00117 	ldw	ra,4(sp)
   2177c:	df000017 	ldw	fp,0(sp)
   21780:	dec00204 	addi	sp,sp,8
   21784:	f800283a 	ret

00021788 <Write_and_Read_I2C>:
bool Write_and_Read_I2C(i2c_dev *i2c,uint8_t register_offset, uint16_t data)
{
   21788:	defffa04 	addi	sp,sp,-24
   2178c:	dfc00515 	stw	ra,20(sp)
   21790:	df000415 	stw	fp,16(sp)
   21794:	df000404 	addi	fp,sp,16
   21798:	e13ffd15 	stw	r4,-12(fp)
   2179c:	2807883a 	mov	r3,r5
   217a0:	3005883a 	mov	r2,r6
   217a4:	e0fffe05 	stb	r3,-8(fp)
   217a8:	e0bfff0d 	sth	r2,-4(fp)
	 	bool success = true;
   217ac:	00800044 	movi	r2,1
   217b0:	e0bffc05 	stb	r2,-16(fp)
	 	 /* write the 16-bit value 23 to register 10 */
	    success &= trdb_d5m_write(i2c, register_offset, data);
   217b4:	e0bffe03 	ldbu	r2,-8(fp)
   217b8:	e0ffff0b 	ldhu	r3,-4(fp)
   217bc:	180d883a 	mov	r6,r3
   217c0:	100b883a 	mov	r5,r2
   217c4:	e13ffd17 	ldw	r4,-12(fp)
   217c8:	00215b80 	call	215b8 <trdb_d5m_write>
   217cc:	e0fffc03 	ldbu	r3,-16(fp)
   217d0:	10803fcc 	andi	r2,r2,255
   217d4:	1884703a 	and	r2,r3,r2
   217d8:	1004c03a 	cmpne	r2,r2,zero
   217dc:	e0bffc05 	stb	r2,-16(fp)

	    /* read from register 10, put data in readdata */
	    uint16_t readdata = 0;
   217e0:	e03ffc8d 	sth	zero,-14(fp)
	    success &= trdb_d5m_read(i2c, register_offset, &readdata);
   217e4:	e0bffe03 	ldbu	r2,-8(fp)
   217e8:	e0fffc84 	addi	r3,fp,-14
   217ec:	180d883a 	mov	r6,r3
   217f0:	100b883a 	mov	r5,r2
   217f4:	e13ffd17 	ldw	r4,-12(fp)
   217f8:	00216400 	call	21640 <trdb_d5m_read>
   217fc:	e0fffc03 	ldbu	r3,-16(fp)
   21800:	10803fcc 	andi	r2,r2,255
   21804:	1884703a 	and	r2,r3,r2
   21808:	1004c03a 	cmpne	r2,r2,zero
   2180c:	e0bffc05 	stb	r2,-16(fp)

	    if (success && readdata==data ) {
   21810:	e0bffc03 	ldbu	r2,-16(fp)
   21814:	10000626 	beq	r2,zero,21830 <Write_and_Read_I2C+0xa8>
   21818:	e0bffc8b 	ldhu	r2,-14(fp)
   2181c:	10ffffcc 	andi	r3,r2,65535
   21820:	e0bfff0b 	ldhu	r2,-4(fp)
   21824:	1880021e 	bne	r3,r2,21830 <Write_and_Read_I2C+0xa8>
	        return true;
   21828:	00800044 	movi	r2,1
   2182c:	00000106 	br	21834 <Write_and_Read_I2C+0xac>
	    } else {
	        return false;
   21830:	0005883a 	mov	r2,zero
	    }
}
   21834:	e037883a 	mov	sp,fp
   21838:	dfc00117 	ldw	ra,4(sp)
   2183c:	df000017 	ldw	fp,0(sp)
   21840:	dec00204 	addi	sp,sp,8
   21844:	f800283a 	ret

00021848 <Camera_Configuration>:
bool Camera_Configuration()
{
   21848:	defffd04 	addi	sp,sp,-12
   2184c:	dfc00215 	stw	ra,8(sp)
   21850:	df000115 	stw	fp,4(sp)
   21854:	df000104 	addi	fp,sp,4
	init_I2C();
   21858:	00217440 	call	21744 <init_I2C>

    bool success = true;
   2185c:	00800044 	movi	r2,1
   21860:	e0bfff05 	stb	r2,-4(fp)
    uint16_t data=0;
   21864:	e03fff8d 	sth	zero,-2(fp)
    trdb_d5m_read(&i2c, 0, &data);
   21868:	e0bfff84 	addi	r2,fp,-2
   2186c:	100d883a 	mov	r6,r2
   21870:	000b883a 	mov	r5,zero
   21874:	d126cb04 	addi	r4,gp,-25812
   21878:	00216400 	call	21640 <trdb_d5m_read>
    printf("Camera version :  %d\r\n",data);
   2187c:	e0bfff8b 	ldhu	r2,-2(fp)
   21880:	10bfffcc 	andi	r2,r2,65535
   21884:	100b883a 	mov	r5,r2
   21888:	010000f4 	movhi	r4,3
   2188c:	21188a04 	addi	r4,r4,25128
   21890:	002475c0 	call	2475c <printf>
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_COLUMN_SIZE_REG,2559);//Resolution for lt24 with binning
   21894:	01827fc4 	movi	r6,2559
   21898:	01400104 	movi	r5,4
   2189c:	d126cb04 	addi	r4,gp,-25812
   218a0:	00217880 	call	21788 <Write_and_Read_I2C>
   218a4:	e0ffff03 	ldbu	r3,-4(fp)
   218a8:	10803fcc 	andi	r2,r2,255
   218ac:	1884703a 	and	r2,r3,r2
   218b0:	1004c03a 	cmpne	r2,r2,zero
   218b4:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_ROW_SIZE_REG,1919);// Resolution for lt24 with binning
   218b8:	0181dfc4 	movi	r6,1919
   218bc:	014000c4 	movi	r5,3
   218c0:	d126cb04 	addi	r4,gp,-25812
   218c4:	00217880 	call	21788 <Write_and_Read_I2C>
   218c8:	e0ffff03 	ldbu	r3,-4(fp)
   218cc:	10803fcc 	andi	r2,r2,255
   218d0:	1884703a 	and	r2,r3,r2
   218d4:	1004c03a 	cmpne	r2,r2,zero
   218d8:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_SHUTTER_WIDTH_UPPER_REG,0000);//Control light
   218dc:	000d883a 	mov	r6,zero
   218e0:	01400204 	movi	r5,8
   218e4:	d126cb04 	addi	r4,gp,-25812
   218e8:	00217880 	call	21788 <Write_and_Read_I2C>
   218ec:	e0ffff03 	ldbu	r3,-4(fp)
   218f0:	10803fcc 	andi	r2,r2,255
   218f4:	1884703a 	and	r2,r3,r2
   218f8:	1004c03a 	cmpne	r2,r2,zero
   218fc:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_SHUTTER_WIDTH_LOWER_REG,3500);//Control light
   21900:	01836b04 	movi	r6,3500
   21904:	01400244 	movi	r5,9
   21908:	d126cb04 	addi	r4,gp,-25812
   2190c:	00217880 	call	21788 <Write_and_Read_I2C>
   21910:	e0ffff03 	ldbu	r3,-4(fp)
   21914:	10803fcc 	andi	r2,r2,255
   21918:	1884703a 	and	r2,r3,r2
   2191c:	1004c03a 	cmpne	r2,r2,zero
   21920:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_ROW_ADDRESS_MODE_REG,0x0033);//Binning x4
   21924:	01800cc4 	movi	r6,51
   21928:	01400884 	movi	r5,34
   2192c:	d126cb04 	addi	r4,gp,-25812
   21930:	00217880 	call	21788 <Write_and_Read_I2C>
   21934:	e0ffff03 	ldbu	r3,-4(fp)
   21938:	10803fcc 	andi	r2,r2,255
   2193c:	1884703a 	and	r2,r3,r2
   21940:	1004c03a 	cmpne	r2,r2,zero
   21944:	e0bfff05 	stb	r2,-4(fp)
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_COLUMN_ADDRESS_MODE_REG,0x0033);//Binning x4
   21948:	01800cc4 	movi	r6,51
   2194c:	014008c4 	movi	r5,35
   21950:	d126cb04 	addi	r4,gp,-25812
   21954:	00217880 	call	21788 <Write_and_Read_I2C>
   21958:	e0ffff03 	ldbu	r3,-4(fp)
   2195c:	10803fcc 	andi	r2,r2,255
   21960:	1884703a 	and	r2,r3,r2
   21964:	1004c03a 	cmpne	r2,r2,zero
   21968:	e0bfff05 	stb	r2,-4(fp)
#if LCD_Connected
    success &= Write_and_Read_I2C(&i2c,TRDB_D5M_RED_GAIN_REG,15);//Binning x4
   2196c:	018003c4 	movi	r6,15
   21970:	01400b44 	movi	r5,45
   21974:	d126cb04 	addi	r4,gp,-25812
   21978:	00217880 	call	21788 <Write_and_Read_I2C>
   2197c:	e0ffff03 	ldbu	r3,-4(fp)
   21980:	10803fcc 	andi	r2,r2,255
   21984:	1884703a 	and	r2,r3,r2
   21988:	1004c03a 	cmpne	r2,r2,zero
   2198c:	e0bfff05 	stb	r2,-4(fp)
   success &= Write_and_Read_I2C(&i2c,TRDB_D5M_GREEN_1_GAIN_REG,12);//Binning x4
   21990:	01800304 	movi	r6,12
   21994:	01400ac4 	movi	r5,43
   21998:	d126cb04 	addi	r4,gp,-25812
   2199c:	00217880 	call	21788 <Write_and_Read_I2C>
   219a0:	e0ffff03 	ldbu	r3,-4(fp)
   219a4:	10803fcc 	andi	r2,r2,255
   219a8:	1884703a 	and	r2,r3,r2
   219ac:	1004c03a 	cmpne	r2,r2,zero
   219b0:	e0bfff05 	stb	r2,-4(fp)
   success &= Write_and_Read_I2C(&i2c,TRDB_D5M_GREEN_2_GAIN_REG,12);//Binning x4
   219b4:	01800304 	movi	r6,12
   219b8:	01400b84 	movi	r5,46
   219bc:	d126cb04 	addi	r4,gp,-25812
   219c0:	00217880 	call	21788 <Write_and_Read_I2C>
   219c4:	e0ffff03 	ldbu	r3,-4(fp)
   219c8:	10803fcc 	andi	r2,r2,255
   219cc:	1884703a 	and	r2,r3,r2
   219d0:	1004c03a 	cmpne	r2,r2,zero
   219d4:	e0bfff05 	stb	r2,-4(fp)
   success &= Write_and_Read_I2C(&i2c,TRDB_D5M_BLUE_GAIN_REG,14);//Binning x4
   219d8:	01800384 	movi	r6,14
   219dc:	01400b04 	movi	r5,44
   219e0:	d126cb04 	addi	r4,gp,-25812
   219e4:	00217880 	call	21788 <Write_and_Read_I2C>
   219e8:	e0ffff03 	ldbu	r3,-4(fp)
   219ec:	10803fcc 	andi	r2,r2,255
   219f0:	1884703a 	and	r2,r3,r2
   219f4:	1004c03a 	cmpne	r2,r2,zero
   219f8:	e0bfff05 	stb	r2,-4(fp)
     *success &= Write_and_Read_I2C(&i2c,TRDB_D5M_PLL_CONFIG_1_REG,0x4C14);//N=10, 0x14, M=76, 0x4C
     *success &= Write_and_Read_I2C(&i2c,TRDB_D5M_PLL_CONFIG_2_REG,0x0002);//P1=2 , 0x02
     */


    if (success  ) {
   219fc:	e0bfff03 	ldbu	r2,-4(fp)
   21a00:	10000526 	beq	r2,zero,21a18 <Camera_Configuration+0x1d0>
    	printf("I2C Configuration PASS\r\n");
   21a04:	010000f4 	movhi	r4,3
   21a08:	21189004 	addi	r4,r4,25152
   21a0c:	00248580 	call	24858 <puts>
        return true;
   21a10:	00800044 	movi	r2,1
   21a14:	00000406 	br	21a28 <Camera_Configuration+0x1e0>
    } else {
    	printf("I2C Configuration FAIL\r\n");
   21a18:	010000f4 	movhi	r4,3
   21a1c:	21189604 	addi	r4,r4,25176
   21a20:	00248580 	call	24858 <puts>
        return false;
   21a24:	0005883a 	mov	r2,zero
    }
}
   21a28:	e037883a 	mov	sp,fp
   21a2c:	dfc00117 	ldw	ra,4(sp)
   21a30:	df000017 	ldw	fp,0(sp)
   21a34:	dec00204 	addi	sp,sp,8
   21a38:	f800283a 	ret

00021a3c <i2c_usleep>:
static void wait_end_of_transfer(i2c_dev *dev);
static void set_data_control(i2c_dev *dev, uint8_t data, uint8_t control);
static uint8_t get_data_set_control(i2c_dev *dev, uint8_t control);

/* Function to put the host processor to sleep for microseconds */
static void i2c_usleep(unsigned int useconds) {
   21a3c:	defffd04 	addi	sp,sp,-12
   21a40:	dfc00215 	stw	ra,8(sp)
   21a44:	df000115 	stw	fp,4(sp)
   21a48:	df000104 	addi	fp,sp,4
   21a4c:	e13fff15 	stw	r4,-4(fp)
#if defined(__KERNEL__) || defined(MODULE)
    udelay(useconds);
#else
    usleep(useconds);
   21a50:	e13fff17 	ldw	r4,-4(fp)
   21a54:	00344000 	call	34400 <usleep>
#endif
}
   21a58:	0001883a 	nop
   21a5c:	e037883a 	mov	sp,fp
   21a60:	dfc00117 	ldw	ra,4(sp)
   21a64:	df000017 	ldw	fp,0(sp)
   21a68:	dec00204 	addi	sp,sp,8
   21a6c:	f800283a 	ret

00021a70 <wait_end_of_transfer>:
/*
 * wait_end_of_transfer
 *
 * Waits until the current i2c transfer is finished.
 */
static void wait_end_of_transfer(i2c_dev *dev) {
   21a70:	defffe04 	addi	sp,sp,-8
   21a74:	df000115 	stw	fp,4(sp)
   21a78:	df000104 	addi	fp,sp,4
   21a7c:	e13fff15 	stw	r4,-4(fp)
    while (I2C_RD_STATUS(dev->base) & I2C_STATUS_TRANSFER_IN_PROGRESS_MSK);
   21a80:	0001883a 	nop
   21a84:	e0bfff17 	ldw	r2,-4(fp)
   21a88:	10800017 	ldw	r2,0(r2)
   21a8c:	10800084 	addi	r2,r2,2
   21a90:	10800023 	ldbuio	r2,0(r2)
   21a94:	10803fcc 	andi	r2,r2,255
   21a98:	1080020c 	andi	r2,r2,8
   21a9c:	103ff91e 	bne	r2,zero,21a84 <__alt_mem_sdram_controller_0+0xc0021a84>
}
   21aa0:	0001883a 	nop
   21aa4:	e037883a 	mov	sp,fp
   21aa8:	df000017 	ldw	fp,0(sp)
   21aac:	dec00104 	addi	sp,sp,4
   21ab0:	f800283a 	ret

00021ab4 <set_data_control>:
 * set_data_control
 *
 * Writes the supplied "data" argument to SDA while using the control sequences
 * provided in argument "control".
 */
static void set_data_control(i2c_dev *dev, uint8_t data, uint8_t control) {
   21ab4:	defffb04 	addi	sp,sp,-20
   21ab8:	dfc00415 	stw	ra,16(sp)
   21abc:	df000315 	stw	fp,12(sp)
   21ac0:	df000304 	addi	fp,sp,12
   21ac4:	e13ffd15 	stw	r4,-12(fp)
   21ac8:	2807883a 	mov	r3,r5
   21acc:	3005883a 	mov	r2,r6
   21ad0:	e0fffe05 	stb	r3,-8(fp)
   21ad4:	e0bfff05 	stb	r2,-4(fp)
    wait_end_of_transfer(dev);
   21ad8:	e13ffd17 	ldw	r4,-12(fp)
   21adc:	0021a700 	call	21a70 <wait_end_of_transfer>
    I2C_WR_DATA(dev->base, data);
   21ae0:	e0bffd17 	ldw	r2,-12(fp)
   21ae4:	10800017 	ldw	r2,0(r2)
   21ae8:	e0fffe03 	ldbu	r3,-8(fp)
   21aec:	10c00025 	stbio	r3,0(r2)
    I2C_WR_CONTROL(dev->base, control);
   21af0:	e0bffd17 	ldw	r2,-12(fp)
   21af4:	10800017 	ldw	r2,0(r2)
   21af8:	10800044 	addi	r2,r2,1
   21afc:	e0ffff03 	ldbu	r3,-4(fp)
   21b00:	10c00025 	stbio	r3,0(r2)
    wait_end_of_transfer(dev);
   21b04:	e13ffd17 	ldw	r4,-12(fp)
   21b08:	0021a700 	call	21a70 <wait_end_of_transfer>
}
   21b0c:	0001883a 	nop
   21b10:	e037883a 	mov	sp,fp
   21b14:	dfc00117 	ldw	ra,4(sp)
   21b18:	df000017 	ldw	fp,0(sp)
   21b1c:	dec00204 	addi	sp,sp,8
   21b20:	f800283a 	ret

00021b24 <get_data_set_control>:
 * get_data_set_control
 *
 * Reads data from SDA while using the control sequences provided in argument
 * "control".
 */
static uint8_t get_data_set_control(i2c_dev *dev, uint8_t control) {
   21b24:	defffc04 	addi	sp,sp,-16
   21b28:	dfc00315 	stw	ra,12(sp)
   21b2c:	df000215 	stw	fp,8(sp)
   21b30:	df000204 	addi	fp,sp,8
   21b34:	e13ffe15 	stw	r4,-8(fp)
   21b38:	2805883a 	mov	r2,r5
   21b3c:	e0bfff05 	stb	r2,-4(fp)
    wait_end_of_transfer(dev);
   21b40:	e13ffe17 	ldw	r4,-8(fp)
   21b44:	0021a700 	call	21a70 <wait_end_of_transfer>
    I2C_WR_CONTROL(dev->base, control);
   21b48:	e0bffe17 	ldw	r2,-8(fp)
   21b4c:	10800017 	ldw	r2,0(r2)
   21b50:	10800044 	addi	r2,r2,1
   21b54:	e0ffff03 	ldbu	r3,-4(fp)
   21b58:	10c00025 	stbio	r3,0(r2)
    wait_end_of_transfer(dev);
   21b5c:	e13ffe17 	ldw	r4,-8(fp)
   21b60:	0021a700 	call	21a70 <wait_end_of_transfer>
    return I2C_RD_DATA(dev->base);
   21b64:	e0bffe17 	ldw	r2,-8(fp)
   21b68:	10800017 	ldw	r2,0(r2)
   21b6c:	10800023 	ldbuio	r2,0(r2)
   21b70:	10803fcc 	andi	r2,r2,255
}
   21b74:	e037883a 	mov	sp,fp
   21b78:	dfc00117 	ldw	ra,4(sp)
   21b7c:	df000017 	ldw	fp,0(sp)
   21b80:	dec00204 	addi	sp,sp,8
   21b84:	f800283a 	ret

00021b88 <i2c_inst>:
/*
 * i2c_inst
 *
 * Constructs a device structure.
 */
i2c_dev i2c_inst(void *base) {
   21b88:	defffd04 	addi	sp,sp,-12
   21b8c:	df000215 	stw	fp,8(sp)
   21b90:	df000204 	addi	fp,sp,8
   21b94:	e13fff15 	stw	r4,-4(fp)
    i2c_dev dev;

    dev.base = base;
   21b98:	e0bfff17 	ldw	r2,-4(fp)
   21b9c:	e0bffe15 	stw	r2,-8(fp)

    return dev;
   21ba0:	e0bffe17 	ldw	r2,-8(fp)
}
   21ba4:	e037883a 	mov	sp,fp
   21ba8:	df000017 	ldw	fp,0(sp)
   21bac:	dec00104 	addi	sp,sp,4
   21bb0:	f800283a 	ret

00021bb4 <i2c_init>:
 * standard data rate for an I2C transfer is 100 kbits/s. However, in order to
 * meet the timing constraints of the protocol, the I2C controller needs to
 * operate 4 times faster. Therefore, one must set the clock divisor register to
 * i2c_frequency / (4 * 100 KHz).
 */
void i2c_init(i2c_dev *dev, uint32_t i2c_frequency) {
   21bb4:	defffb04 	addi	sp,sp,-20
   21bb8:	dfc00415 	stw	ra,16(sp)
   21bbc:	df000315 	stw	fp,12(sp)
   21bc0:	dc000215 	stw	r16,8(sp)
   21bc4:	df000304 	addi	fp,sp,12
   21bc8:	e13ffd15 	stw	r4,-12(fp)
   21bcc:	e17ffe15 	stw	r5,-8(fp)
    I2C_WR_CLOCK_DIVISOR(dev->base, i2c_frequency / (4 * 100000));
   21bd0:	e0bffd17 	ldw	r2,-12(fp)
   21bd4:	10800017 	ldw	r2,0(r2)
   21bd8:	140000c4 	addi	r16,r2,3
   21bdc:	e0bffe17 	ldw	r2,-8(fp)
   21be0:	014001b4 	movhi	r5,6
   21be4:	2946a004 	addi	r5,r5,6784
   21be8:	1009883a 	mov	r4,r2
   21bec:	002260c0 	call	2260c <__udivsi3>
   21bf0:	80800025 	stbio	r2,0(r16)
    i2c_usleep(I2C_SLEEP_US);
   21bf4:	0104e204 	movi	r4,5000
   21bf8:	0021a3c0 	call	21a3c <i2c_usleep>
}
   21bfc:	0001883a 	nop
   21c00:	e6ffff04 	addi	sp,fp,-4
   21c04:	dfc00217 	ldw	ra,8(sp)
   21c08:	df000117 	ldw	fp,4(sp)
   21c0c:	dc000017 	ldw	r16,0(sp)
   21c10:	dec00304 	addi	sp,sp,12
   21c14:	f800283a 	ret

00021c18 <i2c_configure>:
 * Configure the controller.
 *
 * Setting the irq paramater to true enables interrupt generation at the end of
 * a read/write transfer, and false disables interrupt generation.
 */
void i2c_configure(i2c_dev *dev, bool irq) {
   21c18:	defffc04 	addi	sp,sp,-16
   21c1c:	df000315 	stw	fp,12(sp)
   21c20:	df000304 	addi	fp,sp,12
   21c24:	e13ffe15 	stw	r4,-8(fp)
   21c28:	2805883a 	mov	r2,r5
   21c2c:	e0bfff05 	stb	r2,-4(fp)
    uint32_t config = 0;
   21c30:	e03ffd15 	stw	zero,-12(fp)

    if (irq) {
   21c34:	e0bfff03 	ldbu	r2,-4(fp)
   21c38:	10000426 	beq	r2,zero,21c4c <i2c_configure+0x34>
        config |= I2C_CONTROL_INTERRUPT_ENABLE_MSK;
   21c3c:	e0bffd17 	ldw	r2,-12(fp)
   21c40:	10800814 	ori	r2,r2,32
   21c44:	e0bffd15 	stw	r2,-12(fp)
   21c48:	00000406 	br	21c5c <i2c_configure+0x44>
    } else {
        config &= ~I2C_CONTROL_INTERRUPT_ENABLE_MSK;
   21c4c:	e0fffd17 	ldw	r3,-12(fp)
   21c50:	00bff7c4 	movi	r2,-33
   21c54:	1884703a 	and	r2,r3,r2
   21c58:	e0bffd15 	stw	r2,-12(fp)
    }

    I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21c5c:	e0bffe17 	ldw	r2,-8(fp)
   21c60:	10800017 	ldw	r2,0(r2)
   21c64:	10800044 	addi	r2,r2,1
   21c68:	00c00084 	movi	r3,2
   21c6c:	10c00025 	stbio	r3,0(r2)
    I2C_WR_CONTROL(dev->base, config);
   21c70:	e0bffe17 	ldw	r2,-8(fp)
   21c74:	10800017 	ldw	r2,0(r2)
   21c78:	10800044 	addi	r2,r2,1
   21c7c:	e0fffd17 	ldw	r3,-12(fp)
   21c80:	10c00025 	stbio	r3,0(r2)
}
   21c84:	0001883a 	nop
   21c88:	e037883a 	mov	sp,fp
   21c8c:	df000017 	ldw	fp,0(sp)
   21c90:	dec00104 	addi	sp,sp,4
   21c94:	f800283a 	ret

00021c98 <i2c_write>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_write(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t value) {
   21c98:	defffa04 	addi	sp,sp,-24
   21c9c:	dfc00515 	stw	ra,20(sp)
   21ca0:	df000415 	stw	fp,16(sp)
   21ca4:	df000404 	addi	fp,sp,16
   21ca8:	e13ffc15 	stw	r4,-16(fp)
   21cac:	2809883a 	mov	r4,r5
   21cb0:	3007883a 	mov	r3,r6
   21cb4:	3805883a 	mov	r2,r7
   21cb8:	e13ffd05 	stb	r4,-12(fp)
   21cbc:	e0fffe05 	stb	r3,-8(fp)
   21cc0:	e0bfff05 	stb	r2,-4(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   21cc4:	e0bffd03 	ldbu	r2,-12(fp)
   21cc8:	10803f8c 	andi	r2,r2,254
   21ccc:	01800504 	movi	r6,20
   21cd0:	100b883a 	mov	r5,r2
   21cd4:	e13ffc17 	ldw	r4,-16(fp)
   21cd8:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21cdc:	e0bffc17 	ldw	r2,-16(fp)
   21ce0:	10800017 	ldw	r2,0(r2)
   21ce4:	10800084 	addi	r2,r2,2
   21ce8:	10800023 	ldbuio	r2,0(r2)
   21cec:	10803fcc 	andi	r2,r2,255
   21cf0:	1080004c 	andi	r2,r2,1
   21cf4:	10000726 	beq	r2,zero,21d14 <i2c_write+0x7c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21cf8:	e0bffc17 	ldw	r2,-16(fp)
   21cfc:	10800017 	ldw	r2,0(r2)
   21d00:	10800044 	addi	r2,r2,1
   21d04:	00c00084 	movi	r3,2
   21d08:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   21d0c:	00800044 	movi	r2,1
   21d10:	00002706 	br	21db0 <i2c_write+0x118>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
   21d14:	e0bffe03 	ldbu	r2,-8(fp)
   21d18:	01800404 	movi	r6,16
   21d1c:	100b883a 	mov	r5,r2
   21d20:	e13ffc17 	ldw	r4,-16(fp)
   21d24:	0021ab40 	call	21ab4 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21d28:	e0bffc17 	ldw	r2,-16(fp)
   21d2c:	10800017 	ldw	r2,0(r2)
   21d30:	10800084 	addi	r2,r2,2
   21d34:	10800023 	ldbuio	r2,0(r2)
   21d38:	10803fcc 	andi	r2,r2,255
   21d3c:	1080004c 	andi	r2,r2,1
   21d40:	10000726 	beq	r2,zero,21d60 <i2c_write+0xc8>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21d44:	e0bffc17 	ldw	r2,-16(fp)
   21d48:	10800017 	ldw	r2,0(r2)
   21d4c:	10800044 	addi	r2,r2,1
   21d50:	00c00084 	movi	r3,2
   21d54:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
   21d58:	00800084 	movi	r2,2
   21d5c:	00001406 	br	21db0 <i2c_write+0x118>
    }

    /* write register data to device */
    set_data_control(dev, value, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   21d60:	e0bfff03 	ldbu	r2,-4(fp)
   21d64:	01800484 	movi	r6,18
   21d68:	100b883a 	mov	r5,r2
   21d6c:	e13ffc17 	ldw	r4,-16(fp)
   21d70:	0021ab40 	call	21ab4 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21d74:	e0bffc17 	ldw	r2,-16(fp)
   21d78:	10800017 	ldw	r2,0(r2)
   21d7c:	10800084 	addi	r2,r2,2
   21d80:	10800023 	ldbuio	r2,0(r2)
   21d84:	10803fcc 	andi	r2,r2,255
   21d88:	1080004c 	andi	r2,r2,1
   21d8c:	10000726 	beq	r2,zero,21dac <i2c_write+0x114>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21d90:	e0bffc17 	ldw	r2,-16(fp)
   21d94:	10800017 	ldw	r2,0(r2)
   21d98:	10800044 	addi	r2,r2,1
   21d9c:	00c00084 	movi	r3,2
   21da0:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
   21da4:	00800084 	movi	r2,2
   21da8:	00000106 	br	21db0 <i2c_write+0x118>
    }

    return I2C_SUCCESS;
   21dac:	0005883a 	mov	r2,zero
}
   21db0:	e037883a 	mov	sp,fp
   21db4:	dfc00117 	ldw	ra,4(sp)
   21db8:	df000017 	ldw	fp,0(sp)
   21dbc:	dec00204 	addi	sp,sp,8
   21dc0:	f800283a 	ret

00021dc4 <i2c_read>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_read(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value) {
   21dc4:	defffa04 	addi	sp,sp,-24
   21dc8:	dfc00515 	stw	ra,20(sp)
   21dcc:	df000415 	stw	fp,16(sp)
   21dd0:	df000404 	addi	fp,sp,16
   21dd4:	e13ffc15 	stw	r4,-16(fp)
   21dd8:	2807883a 	mov	r3,r5
   21ddc:	3005883a 	mov	r2,r6
   21de0:	e1ffff15 	stw	r7,-4(fp)
   21de4:	e0fffd05 	stb	r3,-12(fp)
   21de8:	e0bffe05 	stb	r2,-8(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   21dec:	e0bffd03 	ldbu	r2,-12(fp)
   21df0:	10803f8c 	andi	r2,r2,254
   21df4:	01800504 	movi	r6,20
   21df8:	100b883a 	mov	r5,r2
   21dfc:	e13ffc17 	ldw	r4,-16(fp)
   21e00:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21e04:	e0bffc17 	ldw	r2,-16(fp)
   21e08:	10800017 	ldw	r2,0(r2)
   21e0c:	10800084 	addi	r2,r2,2
   21e10:	10800023 	ldbuio	r2,0(r2)
   21e14:	10803fcc 	andi	r2,r2,255
   21e18:	1080004c 	andi	r2,r2,1
   21e1c:	10000726 	beq	r2,zero,21e3c <i2c_read+0x78>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21e20:	e0bffc17 	ldw	r2,-16(fp)
   21e24:	10800017 	ldw	r2,0(r2)
   21e28:	10800044 	addi	r2,r2,1
   21e2c:	00c00084 	movi	r3,2
   21e30:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   21e34:	00800044 	movi	r2,1
   21e38:	00002f06 	br	21ef8 <i2c_read+0x134>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
   21e3c:	e0bffe03 	ldbu	r2,-8(fp)
   21e40:	01800404 	movi	r6,16
   21e44:	100b883a 	mov	r5,r2
   21e48:	e13ffc17 	ldw	r4,-16(fp)
   21e4c:	0021ab40 	call	21ab4 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21e50:	e0bffc17 	ldw	r2,-16(fp)
   21e54:	10800017 	ldw	r2,0(r2)
   21e58:	10800084 	addi	r2,r2,2
   21e5c:	10800023 	ldbuio	r2,0(r2)
   21e60:	10803fcc 	andi	r2,r2,255
   21e64:	1080004c 	andi	r2,r2,1
   21e68:	10000726 	beq	r2,zero,21e88 <i2c_read+0xc4>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21e6c:	e0bffc17 	ldw	r2,-16(fp)
   21e70:	10800017 	ldw	r2,0(r2)
   21e74:	10800044 	addi	r2,r2,1
   21e78:	00c00084 	movi	r3,2
   21e7c:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
   21e80:	00800084 	movi	r2,2
   21e84:	00001c06 	br	21ef8 <i2c_read+0x134>
    }

    /* write to the device with the R/W bit set to 1 (read mode) */
    set_data_control(dev, device | 0x01, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   21e88:	e0bffd03 	ldbu	r2,-12(fp)
   21e8c:	10800054 	ori	r2,r2,1
   21e90:	10803fcc 	andi	r2,r2,255
   21e94:	01800504 	movi	r6,20
   21e98:	100b883a 	mov	r5,r2
   21e9c:	e13ffc17 	ldw	r4,-16(fp)
   21ea0:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21ea4:	e0bffc17 	ldw	r2,-16(fp)
   21ea8:	10800017 	ldw	r2,0(r2)
   21eac:	10800084 	addi	r2,r2,2
   21eb0:	10800023 	ldbuio	r2,0(r2)
   21eb4:	10803fcc 	andi	r2,r2,255
   21eb8:	1080004c 	andi	r2,r2,1
   21ebc:	10000726 	beq	r2,zero,21edc <i2c_read+0x118>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21ec0:	e0bffc17 	ldw	r2,-16(fp)
   21ec4:	10800017 	ldw	r2,0(r2)
   21ec8:	10800044 	addi	r2,r2,1
   21ecc:	00c00084 	movi	r3,2
   21ed0:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   21ed4:	00800044 	movi	r2,1
   21ed8:	00000706 	br	21ef8 <i2c_read+0x134>
    }

    /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
    *value = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
   21edc:	014002c4 	movi	r5,11
   21ee0:	e13ffc17 	ldw	r4,-16(fp)
   21ee4:	0021b240 	call	21b24 <get_data_set_control>
   21ee8:	1007883a 	mov	r3,r2
   21eec:	e0bfff17 	ldw	r2,-4(fp)
   21ef0:	10c00005 	stb	r3,0(r2)

    return I2C_SUCCESS;
   21ef4:	0005883a 	mov	r2,zero
}
   21ef8:	e037883a 	mov	sp,fp
   21efc:	dfc00117 	ldw	ra,4(sp)
   21f00:	df000017 	ldw	fp,0(sp)
   21f04:	dec00204 	addi	sp,sp,8
   21f08:	f800283a 	ret

00021f0c <i2c_write_array>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_write_array(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value, unsigned int size) {
   21f0c:	defff904 	addi	sp,sp,-28
   21f10:	dfc00615 	stw	ra,24(sp)
   21f14:	df000515 	stw	fp,20(sp)
   21f18:	df000504 	addi	fp,sp,20
   21f1c:	e13ffc15 	stw	r4,-16(fp)
   21f20:	2807883a 	mov	r3,r5
   21f24:	3005883a 	mov	r2,r6
   21f28:	e1ffff15 	stw	r7,-4(fp)
   21f2c:	e0fffd05 	stb	r3,-12(fp)
   21f30:	e0bffe05 	stb	r2,-8(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   21f34:	e0bffd03 	ldbu	r2,-12(fp)
   21f38:	10803f8c 	andi	r2,r2,254
   21f3c:	01800504 	movi	r6,20
   21f40:	100b883a 	mov	r5,r2
   21f44:	e13ffc17 	ldw	r4,-16(fp)
   21f48:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21f4c:	e0bffc17 	ldw	r2,-16(fp)
   21f50:	10800017 	ldw	r2,0(r2)
   21f54:	10800084 	addi	r2,r2,2
   21f58:	10800023 	ldbuio	r2,0(r2)
   21f5c:	10803fcc 	andi	r2,r2,255
   21f60:	1080004c 	andi	r2,r2,1
   21f64:	10000726 	beq	r2,zero,21f84 <i2c_write_array+0x78>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21f68:	e0bffc17 	ldw	r2,-16(fp)
   21f6c:	10800017 	ldw	r2,0(r2)
   21f70:	10800044 	addi	r2,r2,1
   21f74:	00c00084 	movi	r3,2
   21f78:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   21f7c:	00800044 	movi	r2,1
   21f80:	00004206 	br	2208c <i2c_write_array+0x180>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
   21f84:	e0bffe03 	ldbu	r2,-8(fp)
   21f88:	01800404 	movi	r6,16
   21f8c:	100b883a 	mov	r5,r2
   21f90:	e13ffc17 	ldw	r4,-16(fp)
   21f94:	0021ab40 	call	21ab4 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   21f98:	e0bffc17 	ldw	r2,-16(fp)
   21f9c:	10800017 	ldw	r2,0(r2)
   21fa0:	10800084 	addi	r2,r2,2
   21fa4:	10800023 	ldbuio	r2,0(r2)
   21fa8:	10803fcc 	andi	r2,r2,255
   21fac:	1080004c 	andi	r2,r2,1
   21fb0:	10000726 	beq	r2,zero,21fd0 <i2c_write_array+0xc4>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   21fb4:	e0bffc17 	ldw	r2,-16(fp)
   21fb8:	10800017 	ldw	r2,0(r2)
   21fbc:	10800044 	addi	r2,r2,1
   21fc0:	00c00084 	movi	r3,2
   21fc4:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
   21fc8:	00800084 	movi	r2,2
   21fcc:	00002f06 	br	2208c <i2c_write_array+0x180>
    }

    unsigned int i = 0;
   21fd0:	e03ffb15 	stw	zero,-20(fp)
    for (i = 0; i < size; i++) {
   21fd4:	e03ffb15 	stw	zero,-20(fp)
   21fd8:	00002806 	br	2207c <i2c_write_array+0x170>
        /* write register data to device */
        if (i < size - 1) {
   21fdc:	e0800217 	ldw	r2,8(fp)
   21fe0:	10bfffc4 	addi	r2,r2,-1
   21fe4:	e0fffb17 	ldw	r3,-20(fp)
   21fe8:	18800a2e 	bgeu	r3,r2,22014 <i2c_write_array+0x108>
            set_data_control(dev, value[i], I2C_CONTROL_WRITE_COMMAND_MSK);
   21fec:	e0ffff17 	ldw	r3,-4(fp)
   21ff0:	e0bffb17 	ldw	r2,-20(fp)
   21ff4:	1885883a 	add	r2,r3,r2
   21ff8:	10800003 	ldbu	r2,0(r2)
   21ffc:	10803fcc 	andi	r2,r2,255
   22000:	01800404 	movi	r6,16
   22004:	100b883a 	mov	r5,r2
   22008:	e13ffc17 	ldw	r4,-16(fp)
   2200c:	0021ab40 	call	21ab4 <set_data_control>
   22010:	00000906 	br	22038 <i2c_write_array+0x12c>
        } else {
            set_data_control(dev, value[i], I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   22014:	e0ffff17 	ldw	r3,-4(fp)
   22018:	e0bffb17 	ldw	r2,-20(fp)
   2201c:	1885883a 	add	r2,r3,r2
   22020:	10800003 	ldbu	r2,0(r2)
   22024:	10803fcc 	andi	r2,r2,255
   22028:	01800484 	movi	r6,18
   2202c:	100b883a 	mov	r5,r2
   22030:	e13ffc17 	ldw	r4,-16(fp)
   22034:	0021ab40 	call	21ab4 <set_data_control>

        }

        /* error: bad acknowledge */
        if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   22038:	e0bffc17 	ldw	r2,-16(fp)
   2203c:	10800017 	ldw	r2,0(r2)
   22040:	10800084 	addi	r2,r2,2
   22044:	10800023 	ldbuio	r2,0(r2)
   22048:	10803fcc 	andi	r2,r2,255
   2204c:	1080004c 	andi	r2,r2,1
   22050:	10000726 	beq	r2,zero,22070 <i2c_write_array+0x164>
            I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   22054:	e0bffc17 	ldw	r2,-16(fp)
   22058:	10800017 	ldw	r2,0(r2)
   2205c:	10800044 	addi	r2,r2,1
   22060:	00c00084 	movi	r3,2
   22064:	10c00025 	stbio	r3,0(r2)
            return I2C_EBADACK;
   22068:	00800084 	movi	r2,2
   2206c:	00000706 	br	2208c <i2c_write_array+0x180>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
        return I2C_EBADACK;
    }

    unsigned int i = 0;
    for (i = 0; i < size; i++) {
   22070:	e0bffb17 	ldw	r2,-20(fp)
   22074:	10800044 	addi	r2,r2,1
   22078:	e0bffb15 	stw	r2,-20(fp)
   2207c:	e0fffb17 	ldw	r3,-20(fp)
   22080:	e0800217 	ldw	r2,8(fp)
   22084:	18bfd536 	bltu	r3,r2,21fdc <__alt_mem_sdram_controller_0+0xc0021fdc>
            I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
            return I2C_EBADACK;
        }
    }

    return I2C_SUCCESS;
   22088:	0005883a 	mov	r2,zero
}
   2208c:	e037883a 	mov	sp,fp
   22090:	dfc00117 	ldw	ra,4(sp)
   22094:	df000017 	ldw	fp,0(sp)
   22098:	dec00204 	addi	sp,sp,8
   2209c:	f800283a 	ret

000220a0 <i2c_read_array>:
 *
 * Returns: I2C_SUCCESS -> success
 *          I2C_ENODEV  -> device does not answer
 *          I2C_EBADACK -> bad acknowledge received
 */
int i2c_read_array(i2c_dev *dev, uint8_t device, uint8_t index, uint8_t *value, unsigned int size) {
   220a0:	defff804 	addi	sp,sp,-32
   220a4:	dfc00715 	stw	ra,28(sp)
   220a8:	df000615 	stw	fp,24(sp)
   220ac:	dc000515 	stw	r16,20(sp)
   220b0:	df000604 	addi	fp,sp,24
   220b4:	e13ffb15 	stw	r4,-20(fp)
   220b8:	2807883a 	mov	r3,r5
   220bc:	3005883a 	mov	r2,r6
   220c0:	e1fffe15 	stw	r7,-8(fp)
   220c4:	e0fffc05 	stb	r3,-16(fp)
   220c8:	e0bffd05 	stb	r2,-12(fp)
    /* write to the device with the R/W bit set to 0 (write mode) */
    set_data_control(dev, device & 0xFE, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   220cc:	e0bffc03 	ldbu	r2,-16(fp)
   220d0:	10803f8c 	andi	r2,r2,254
   220d4:	01800504 	movi	r6,20
   220d8:	100b883a 	mov	r5,r2
   220dc:	e13ffb17 	ldw	r4,-20(fp)
   220e0:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   220e4:	e0bffb17 	ldw	r2,-20(fp)
   220e8:	10800017 	ldw	r2,0(r2)
   220ec:	10800084 	addi	r2,r2,2
   220f0:	10800023 	ldbuio	r2,0(r2)
   220f4:	10803fcc 	andi	r2,r2,255
   220f8:	1080004c 	andi	r2,r2,1
   220fc:	10000726 	beq	r2,zero,2211c <i2c_read_array+0x7c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   22100:	e0bffb17 	ldw	r2,-20(fp)
   22104:	10800017 	ldw	r2,0(r2)
   22108:	10800044 	addi	r2,r2,1
   2210c:	00c00084 	movi	r3,2
   22110:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   22114:	00800044 	movi	r2,1
   22118:	00004506 	br	22230 <i2c_read_array+0x190>
    }

    /* write register index to device */
    set_data_control(dev, index, I2C_CONTROL_WRITE_COMMAND_MSK);
   2211c:	e0bffd03 	ldbu	r2,-12(fp)
   22120:	01800404 	movi	r6,16
   22124:	100b883a 	mov	r5,r2
   22128:	e13ffb17 	ldw	r4,-20(fp)
   2212c:	0021ab40 	call	21ab4 <set_data_control>

    /* error: bad acknowledge */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   22130:	e0bffb17 	ldw	r2,-20(fp)
   22134:	10800017 	ldw	r2,0(r2)
   22138:	10800084 	addi	r2,r2,2
   2213c:	10800023 	ldbuio	r2,0(r2)
   22140:	10803fcc 	andi	r2,r2,255
   22144:	1080004c 	andi	r2,r2,1
   22148:	10000726 	beq	r2,zero,22168 <i2c_read_array+0xc8>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   2214c:	e0bffb17 	ldw	r2,-20(fp)
   22150:	10800017 	ldw	r2,0(r2)
   22154:	10800044 	addi	r2,r2,1
   22158:	00c00084 	movi	r3,2
   2215c:	10c00025 	stbio	r3,0(r2)
        return I2C_EBADACK;
   22160:	00800084 	movi	r2,2
   22164:	00003206 	br	22230 <i2c_read_array+0x190>
    }

    /* write to the device with the R/W bit set to 1 (read mode) */
    set_data_control(dev, device | 0x01, I2C_CONTROL_GENERATE_START_SEQUENCE_MSK | I2C_CONTROL_WRITE_COMMAND_MSK);
   22168:	e0bffc03 	ldbu	r2,-16(fp)
   2216c:	10800054 	ori	r2,r2,1
   22170:	10803fcc 	andi	r2,r2,255
   22174:	01800504 	movi	r6,20
   22178:	100b883a 	mov	r5,r2
   2217c:	e13ffb17 	ldw	r4,-20(fp)
   22180:	0021ab40 	call	21ab4 <set_data_control>

    /* error: device does not answer */
    if (I2C_RD_STATUS(dev->base) & I2C_STATUS_LAST_ACKNOWLEDGE_RECEIVED_MSK) {
   22184:	e0bffb17 	ldw	r2,-20(fp)
   22188:	10800017 	ldw	r2,0(r2)
   2218c:	10800084 	addi	r2,r2,2
   22190:	10800023 	ldbuio	r2,0(r2)
   22194:	10803fcc 	andi	r2,r2,255
   22198:	1080004c 	andi	r2,r2,1
   2219c:	10000726 	beq	r2,zero,221bc <i2c_read_array+0x11c>
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
   221a0:	e0bffb17 	ldw	r2,-20(fp)
   221a4:	10800017 	ldw	r2,0(r2)
   221a8:	10800044 	addi	r2,r2,1
   221ac:	00c00084 	movi	r3,2
   221b0:	10c00025 	stbio	r3,0(r2)
        return I2C_ENODEV;
   221b4:	00800044 	movi	r2,1
   221b8:	00001d06 	br	22230 <i2c_read_array+0x190>
    }

    unsigned int i = 0;
   221bc:	e03ffa15 	stw	zero,-24(fp)
    for (i = 0; i < size; i++) {
   221c0:	e03ffa15 	stw	zero,-24(fp)
   221c4:	00001606 	br	22220 <i2c_read_array+0x180>
        if (i < size - 1) {
   221c8:	e0800217 	ldw	r2,8(fp)
   221cc:	10bfffc4 	addi	r2,r2,-1
   221d0:	e0fffa17 	ldw	r3,-24(fp)
   221d4:	1880082e 	bgeu	r3,r2,221f8 <i2c_read_array+0x158>
            value[i] = get_data_set_control(dev, I2C_CONTROL_READ_COMMAND_MSK);
   221d8:	e0fffe17 	ldw	r3,-8(fp)
   221dc:	e0bffa17 	ldw	r2,-24(fp)
   221e0:	18a1883a 	add	r16,r3,r2
   221e4:	01400204 	movi	r5,8
   221e8:	e13ffb17 	ldw	r4,-20(fp)
   221ec:	0021b240 	call	21b24 <get_data_set_control>
   221f0:	80800005 	stb	r2,0(r16)
   221f4:	00000706 	br	22214 <i2c_read_array+0x174>
        } else {
            /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
            value[i] = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
   221f8:	e0fffe17 	ldw	r3,-8(fp)
   221fc:	e0bffa17 	ldw	r2,-24(fp)
   22200:	18a1883a 	add	r16,r3,r2
   22204:	014002c4 	movi	r5,11
   22208:	e13ffb17 	ldw	r4,-20(fp)
   2220c:	0021b240 	call	21b24 <get_data_set_control>
   22210:	80800005 	stb	r2,0(r16)
        I2C_WR_CONTROL(dev->base, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK);
        return I2C_ENODEV;
    }

    unsigned int i = 0;
    for (i = 0; i < size; i++) {
   22214:	e0bffa17 	ldw	r2,-24(fp)
   22218:	10800044 	addi	r2,r2,1
   2221c:	e0bffa15 	stw	r2,-24(fp)
   22220:	e0fffa17 	ldw	r3,-24(fp)
   22224:	e0800217 	ldw	r2,8(fp)
   22228:	18bfe736 	bltu	r3,r2,221c8 <__alt_mem_sdram_controller_0+0xc00221c8>
            /* Read the data. Attention: write I2C_CONTROL_ACKNOWLEDGE_READ_MSK to control register to send a N0_ACK */
            value[i] = get_data_set_control(dev, I2C_CONTROL_GENERATE_STOP_SEQUENCE_MSK | I2C_CONTROL_READ_COMMAND_MSK | I2C_CONTROL_ACKNOWLEDGE_READ_MSK);
        }
    }

    return I2C_SUCCESS;
   2222c:	0005883a 	mov	r2,zero
}
   22230:	e6ffff04 	addi	sp,fp,-4
   22234:	dfc00217 	ldw	ra,8(sp)
   22238:	df000117 	ldw	fp,4(sp)
   2223c:	dc000017 	ldw	r16,0(sp)
   22240:	dec00304 	addi	sp,sp,12
   22244:	f800283a 	ret

00022248 <TRDB_D5M_log2>:
///////////////////////
// GENERAL FUNCTIONS //
///////////////////////

// Calculates log2 of a number. Attention: the number must be a power of 2
static uint16_t TRDB_D5M_log2(uint16_t power_of_2) {
   22248:	defffe04 	addi	sp,sp,-8
   2224c:	df000115 	stw	fp,4(sp)
   22250:	df000104 	addi	fp,sp,4
   22254:	2005883a 	mov	r2,r4
   22258:	e0bfff0d 	sth	r2,-4(fp)
    if      (power_of_2 == 0x0001) return 0;
   2225c:	e0bfff0b 	ldhu	r2,-4(fp)
   22260:	10800058 	cmpnei	r2,r2,1
   22264:	1000021e 	bne	r2,zero,22270 <TRDB_D5M_log2+0x28>
   22268:	0005883a 	mov	r2,zero
   2226c:	00004706 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0002) return 1;
   22270:	e0bfff0b 	ldhu	r2,-4(fp)
   22274:	10800098 	cmpnei	r2,r2,2
   22278:	1000021e 	bne	r2,zero,22284 <TRDB_D5M_log2+0x3c>
   2227c:	00800044 	movi	r2,1
   22280:	00004206 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0004) return 2;
   22284:	e0bfff0b 	ldhu	r2,-4(fp)
   22288:	10800118 	cmpnei	r2,r2,4
   2228c:	1000021e 	bne	r2,zero,22298 <TRDB_D5M_log2+0x50>
   22290:	00800084 	movi	r2,2
   22294:	00003d06 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0008) return 3;
   22298:	e0bfff0b 	ldhu	r2,-4(fp)
   2229c:	10800218 	cmpnei	r2,r2,8
   222a0:	1000021e 	bne	r2,zero,222ac <TRDB_D5M_log2+0x64>
   222a4:	008000c4 	movi	r2,3
   222a8:	00003806 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0010) return 4;
   222ac:	e0bfff0b 	ldhu	r2,-4(fp)
   222b0:	10800418 	cmpnei	r2,r2,16
   222b4:	1000021e 	bne	r2,zero,222c0 <TRDB_D5M_log2+0x78>
   222b8:	00800104 	movi	r2,4
   222bc:	00003306 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0020) return 5;
   222c0:	e0bfff0b 	ldhu	r2,-4(fp)
   222c4:	10800818 	cmpnei	r2,r2,32
   222c8:	1000021e 	bne	r2,zero,222d4 <TRDB_D5M_log2+0x8c>
   222cc:	00800144 	movi	r2,5
   222d0:	00002e06 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0040) return 6;
   222d4:	e0bfff0b 	ldhu	r2,-4(fp)
   222d8:	10801018 	cmpnei	r2,r2,64
   222dc:	1000021e 	bne	r2,zero,222e8 <TRDB_D5M_log2+0xa0>
   222e0:	00800184 	movi	r2,6
   222e4:	00002906 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0080) return 7;
   222e8:	e0bfff0b 	ldhu	r2,-4(fp)
   222ec:	10802018 	cmpnei	r2,r2,128
   222f0:	1000021e 	bne	r2,zero,222fc <TRDB_D5M_log2+0xb4>
   222f4:	008001c4 	movi	r2,7
   222f8:	00002406 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0100) return 8;
   222fc:	e0bfff0b 	ldhu	r2,-4(fp)
   22300:	10804018 	cmpnei	r2,r2,256
   22304:	1000021e 	bne	r2,zero,22310 <TRDB_D5M_log2+0xc8>
   22308:	00800204 	movi	r2,8
   2230c:	00001f06 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0200) return 9;
   22310:	e0bfff0b 	ldhu	r2,-4(fp)
   22314:	10808018 	cmpnei	r2,r2,512
   22318:	1000021e 	bne	r2,zero,22324 <TRDB_D5M_log2+0xdc>
   2231c:	00800244 	movi	r2,9
   22320:	00001a06 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0400) return 10;
   22324:	e0bfff0b 	ldhu	r2,-4(fp)
   22328:	10810018 	cmpnei	r2,r2,1024
   2232c:	1000021e 	bne	r2,zero,22338 <TRDB_D5M_log2+0xf0>
   22330:	00800284 	movi	r2,10
   22334:	00001506 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x0800) return 11;
   22338:	e0bfff0b 	ldhu	r2,-4(fp)
   2233c:	10820018 	cmpnei	r2,r2,2048
   22340:	1000021e 	bne	r2,zero,2234c <TRDB_D5M_log2+0x104>
   22344:	008002c4 	movi	r2,11
   22348:	00001006 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x1000) return 12;
   2234c:	e0bfff0b 	ldhu	r2,-4(fp)
   22350:	10840018 	cmpnei	r2,r2,4096
   22354:	1000021e 	bne	r2,zero,22360 <TRDB_D5M_log2+0x118>
   22358:	00800304 	movi	r2,12
   2235c:	00000b06 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x2000) return 13;
   22360:	e0bfff0b 	ldhu	r2,-4(fp)
   22364:	10880018 	cmpnei	r2,r2,8192
   22368:	1000021e 	bne	r2,zero,22374 <TRDB_D5M_log2+0x12c>
   2236c:	00800344 	movi	r2,13
   22370:	00000606 	br	2238c <TRDB_D5M_log2+0x144>
    else if (power_of_2 == 0x4000) return 14;
   22374:	e0bfff0b 	ldhu	r2,-4(fp)
   22378:	10900018 	cmpnei	r2,r2,16384
   2237c:	1000021e 	bne	r2,zero,22388 <TRDB_D5M_log2+0x140>
   22380:	00800384 	movi	r2,14
   22384:	00000106 	br	2238c <TRDB_D5M_log2+0x144>
    else                           return 15;
   22388:	008003c4 	movi	r2,15
}
   2238c:	e037883a 	mov	sp,fp
   22390:	df000017 	ldw	fp,0(sp)
   22394:	dec00104 	addi	sp,sp,4
   22398:	f800283a 	ret

0002239c <TRDB_D5M_shift_amount>:

static uint16_t TRDB_D5M_shift_amount(uint16_t mask) {
   2239c:	defffd04 	addi	sp,sp,-12
   223a0:	dfc00215 	stw	ra,8(sp)
   223a4:	df000115 	stw	fp,4(sp)
   223a8:	df000104 	addi	fp,sp,4
   223ac:	2005883a 	mov	r2,r4
   223b0:	e0bfff0d 	sth	r2,-4(fp)
    // (mask & -mask) clears all but the lowest bit of x
    return TRDB_D5M_log2(mask & (~mask + 1));
   223b4:	e0bfff0b 	ldhu	r2,-4(fp)
   223b8:	0085c83a 	sub	r2,zero,r2
   223bc:	1007883a 	mov	r3,r2
   223c0:	e0bfff0b 	ldhu	r2,-4(fp)
   223c4:	1884703a 	and	r2,r3,r2
   223c8:	10bfffcc 	andi	r2,r2,65535
   223cc:	1009883a 	mov	r4,r2
   223d0:	00222480 	call	22248 <TRDB_D5M_log2>
}
   223d4:	e037883a 	mov	sp,fp
   223d8:	dfc00117 	ldw	ra,4(sp)
   223dc:	df000017 	ldw	fp,0(sp)
   223e0:	dec00204 	addi	sp,sp,8
   223e4:	f800283a 	ret

000223e8 <TRDB_D5M_READ>:

static uint16_t TRDB_D5M_READ(uint16_t full_reg_value, uint16_t mask) {
   223e8:	defffb04 	addi	sp,sp,-20
   223ec:	dfc00415 	stw	ra,16(sp)
   223f0:	df000315 	stw	fp,12(sp)
   223f4:	dc000215 	stw	r16,8(sp)
   223f8:	df000304 	addi	fp,sp,12
   223fc:	2007883a 	mov	r3,r4
   22400:	2805883a 	mov	r2,r5
   22404:	e0fffd0d 	sth	r3,-12(fp)
   22408:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & mask) >> TRDB_D5M_shift_amount(mask);
   2240c:	e0fffd0b 	ldhu	r3,-12(fp)
   22410:	e0bffe0b 	ldhu	r2,-8(fp)
   22414:	1884703a 	and	r2,r3,r2
   22418:	143fffcc 	andi	r16,r2,65535
   2241c:	e0bffe0b 	ldhu	r2,-8(fp)
   22420:	1009883a 	mov	r4,r2
   22424:	002239c0 	call	2239c <TRDB_D5M_shift_amount>
   22428:	10bfffcc 	andi	r2,r2,65535
   2242c:	8085d83a 	sra	r2,r16,r2
}
   22430:	e6ffff04 	addi	sp,fp,-4
   22434:	dfc00217 	ldw	ra,8(sp)
   22438:	df000117 	ldw	fp,4(sp)
   2243c:	dc000017 	ldw	r16,0(sp)
   22440:	dec00304 	addi	sp,sp,12
   22444:	f800283a 	ret

00022448 <TRDB_D5M_WRITE>:

static uint16_t TRDB_D5M_WRITE(uint16_t full_reg_value, uint16_t mask, uint16_t write_value) {
   22448:	defffa04 	addi	sp,sp,-24
   2244c:	dfc00515 	stw	ra,20(sp)
   22450:	df000415 	stw	fp,16(sp)
   22454:	dc000315 	stw	r16,12(sp)
   22458:	df000404 	addi	fp,sp,16
   2245c:	2807883a 	mov	r3,r5
   22460:	3005883a 	mov	r2,r6
   22464:	e13ffc0d 	sth	r4,-16(fp)
   22468:	e0fffd0d 	sth	r3,-12(fp)
   2246c:	e0bffe0d 	sth	r2,-8(fp)
    return (full_reg_value & (~mask)) | ((write_value << TRDB_D5M_shift_amount(mask)) & mask);
   22470:	e43ffe0b 	ldhu	r16,-8(fp)
   22474:	e0bffd0b 	ldhu	r2,-12(fp)
   22478:	1009883a 	mov	r4,r2
   2247c:	002239c0 	call	2239c <TRDB_D5M_shift_amount>
   22480:	10bfffcc 	andi	r2,r2,65535
   22484:	8084983a 	sll	r2,r16,r2
   22488:	1007883a 	mov	r3,r2
   2248c:	e0bffc0b 	ldhu	r2,-16(fp)
   22490:	1884f03a 	xor	r2,r3,r2
   22494:	1007883a 	mov	r3,r2
   22498:	e0bffd0b 	ldhu	r2,-12(fp)
   2249c:	1884703a 	and	r2,r3,r2
   224a0:	1007883a 	mov	r3,r2
   224a4:	e0bffc0b 	ldhu	r2,-16(fp)
   224a8:	1884f03a 	xor	r2,r3,r2
}
   224ac:	e6ffff04 	addi	sp,fp,-4
   224b0:	dfc00217 	ldw	ra,8(sp)
   224b4:	df000117 	ldw	fp,4(sp)
   224b8:	dc000017 	ldw	r16,0(sp)
   224bc:	dec00304 	addi	sp,sp,12
   224c0:	f800283a 	ret

000224c4 <main>:
#include "custom_functions/Memory_Access.h"
#include "custom_functions/function_i2c.h"



int main(void) {
   224c4:	defffe04 	addi	sp,sp,-8
   224c8:	dfc00115 	stw	ra,4(sp)
   224cc:	df000015 	stw	fp,0(sp)
   224d0:	d839883a 	mov	fp,sp
	printf("Hello from Nios II and Camera Generator!\n");
   224d4:	010000f4 	movhi	r4,3
   224d8:	21189c04 	addi	r4,r4,25200
   224dc:	00248580 	call	24858 <puts>
	printf("Compiled %s %s\n", __DATE__, __TIME__);
   224e0:	018000f4 	movhi	r6,3
   224e4:	3198a704 	addi	r6,r6,25244
   224e8:	014000f4 	movhi	r5,3
   224ec:	2958aa04 	addi	r5,r5,25256
   224f0:	010000f4 	movhi	r4,3
   224f4:	2118ad04 	addi	r4,r4,25268
   224f8:	002475c0 	call	2475c <printf>
	delay(1000);
   224fc:	0100fa04 	movi	r4,1000
   22500:	0020f7c0 	call	20f7c <delay>
//	Test_Camera_Memory();
//#endif

	while(1)
	{	//LCD_Configuration();
		Test_i2c();
   22504:	00216e00 	call	216e0 <Test_i2c>
		delay(1000);
   22508:	0100fa04 	movi	r4,1000
   2250c:	0020f7c0 	call	20f7c <delay>

	}
   22510:	003ffc06 	br	22504 <__alt_mem_sdram_controller_0+0xc0022504>

00022514 <__divsi3>:
   22514:	20001b16 	blt	r4,zero,22584 <__divsi3+0x70>
   22518:	000f883a 	mov	r7,zero
   2251c:	28001616 	blt	r5,zero,22578 <__divsi3+0x64>
   22520:	200d883a 	mov	r6,r4
   22524:	29001a2e 	bgeu	r5,r4,22590 <__divsi3+0x7c>
   22528:	00800804 	movi	r2,32
   2252c:	00c00044 	movi	r3,1
   22530:	00000106 	br	22538 <__divsi3+0x24>
   22534:	10000d26 	beq	r2,zero,2256c <__divsi3+0x58>
   22538:	294b883a 	add	r5,r5,r5
   2253c:	10bfffc4 	addi	r2,r2,-1
   22540:	18c7883a 	add	r3,r3,r3
   22544:	293ffb36 	bltu	r5,r4,22534 <__alt_mem_sdram_controller_0+0xc0022534>
   22548:	0005883a 	mov	r2,zero
   2254c:	18000726 	beq	r3,zero,2256c <__divsi3+0x58>
   22550:	0005883a 	mov	r2,zero
   22554:	31400236 	bltu	r6,r5,22560 <__divsi3+0x4c>
   22558:	314dc83a 	sub	r6,r6,r5
   2255c:	10c4b03a 	or	r2,r2,r3
   22560:	1806d07a 	srli	r3,r3,1
   22564:	280ad07a 	srli	r5,r5,1
   22568:	183ffa1e 	bne	r3,zero,22554 <__alt_mem_sdram_controller_0+0xc0022554>
   2256c:	38000126 	beq	r7,zero,22574 <__divsi3+0x60>
   22570:	0085c83a 	sub	r2,zero,r2
   22574:	f800283a 	ret
   22578:	014bc83a 	sub	r5,zero,r5
   2257c:	39c0005c 	xori	r7,r7,1
   22580:	003fe706 	br	22520 <__alt_mem_sdram_controller_0+0xc0022520>
   22584:	0109c83a 	sub	r4,zero,r4
   22588:	01c00044 	movi	r7,1
   2258c:	003fe306 	br	2251c <__alt_mem_sdram_controller_0+0xc002251c>
   22590:	00c00044 	movi	r3,1
   22594:	003fee06 	br	22550 <__alt_mem_sdram_controller_0+0xc0022550>

00022598 <__modsi3>:
   22598:	20001716 	blt	r4,zero,225f8 <__modsi3+0x60>
   2259c:	000f883a 	mov	r7,zero
   225a0:	2005883a 	mov	r2,r4
   225a4:	28001216 	blt	r5,zero,225f0 <__modsi3+0x58>
   225a8:	2900162e 	bgeu	r5,r4,22604 <__modsi3+0x6c>
   225ac:	01800804 	movi	r6,32
   225b0:	00c00044 	movi	r3,1
   225b4:	00000106 	br	225bc <__modsi3+0x24>
   225b8:	30000a26 	beq	r6,zero,225e4 <__modsi3+0x4c>
   225bc:	294b883a 	add	r5,r5,r5
   225c0:	31bfffc4 	addi	r6,r6,-1
   225c4:	18c7883a 	add	r3,r3,r3
   225c8:	293ffb36 	bltu	r5,r4,225b8 <__alt_mem_sdram_controller_0+0xc00225b8>
   225cc:	18000526 	beq	r3,zero,225e4 <__modsi3+0x4c>
   225d0:	1806d07a 	srli	r3,r3,1
   225d4:	11400136 	bltu	r2,r5,225dc <__modsi3+0x44>
   225d8:	1145c83a 	sub	r2,r2,r5
   225dc:	280ad07a 	srli	r5,r5,1
   225e0:	183ffb1e 	bne	r3,zero,225d0 <__alt_mem_sdram_controller_0+0xc00225d0>
   225e4:	38000126 	beq	r7,zero,225ec <__modsi3+0x54>
   225e8:	0085c83a 	sub	r2,zero,r2
   225ec:	f800283a 	ret
   225f0:	014bc83a 	sub	r5,zero,r5
   225f4:	003fec06 	br	225a8 <__alt_mem_sdram_controller_0+0xc00225a8>
   225f8:	0109c83a 	sub	r4,zero,r4
   225fc:	01c00044 	movi	r7,1
   22600:	003fe706 	br	225a0 <__alt_mem_sdram_controller_0+0xc00225a0>
   22604:	00c00044 	movi	r3,1
   22608:	003ff106 	br	225d0 <__alt_mem_sdram_controller_0+0xc00225d0>

0002260c <__udivsi3>:
   2260c:	200d883a 	mov	r6,r4
   22610:	2900152e 	bgeu	r5,r4,22668 <__udivsi3+0x5c>
   22614:	28001416 	blt	r5,zero,22668 <__udivsi3+0x5c>
   22618:	00800804 	movi	r2,32
   2261c:	00c00044 	movi	r3,1
   22620:	00000206 	br	2262c <__udivsi3+0x20>
   22624:	10000e26 	beq	r2,zero,22660 <__udivsi3+0x54>
   22628:	28000516 	blt	r5,zero,22640 <__udivsi3+0x34>
   2262c:	294b883a 	add	r5,r5,r5
   22630:	10bfffc4 	addi	r2,r2,-1
   22634:	18c7883a 	add	r3,r3,r3
   22638:	293ffa36 	bltu	r5,r4,22624 <__alt_mem_sdram_controller_0+0xc0022624>
   2263c:	18000826 	beq	r3,zero,22660 <__udivsi3+0x54>
   22640:	0005883a 	mov	r2,zero
   22644:	31400236 	bltu	r6,r5,22650 <__udivsi3+0x44>
   22648:	314dc83a 	sub	r6,r6,r5
   2264c:	10c4b03a 	or	r2,r2,r3
   22650:	1806d07a 	srli	r3,r3,1
   22654:	280ad07a 	srli	r5,r5,1
   22658:	183ffa1e 	bne	r3,zero,22644 <__alt_mem_sdram_controller_0+0xc0022644>
   2265c:	f800283a 	ret
   22660:	0005883a 	mov	r2,zero
   22664:	f800283a 	ret
   22668:	00c00044 	movi	r3,1
   2266c:	003ff406 	br	22640 <__alt_mem_sdram_controller_0+0xc0022640>

00022670 <__umodsi3>:
   22670:	2005883a 	mov	r2,r4
   22674:	2900122e 	bgeu	r5,r4,226c0 <__umodsi3+0x50>
   22678:	28001116 	blt	r5,zero,226c0 <__umodsi3+0x50>
   2267c:	01800804 	movi	r6,32
   22680:	00c00044 	movi	r3,1
   22684:	00000206 	br	22690 <__umodsi3+0x20>
   22688:	30000c26 	beq	r6,zero,226bc <__umodsi3+0x4c>
   2268c:	28000516 	blt	r5,zero,226a4 <__umodsi3+0x34>
   22690:	294b883a 	add	r5,r5,r5
   22694:	31bfffc4 	addi	r6,r6,-1
   22698:	18c7883a 	add	r3,r3,r3
   2269c:	293ffa36 	bltu	r5,r4,22688 <__alt_mem_sdram_controller_0+0xc0022688>
   226a0:	18000626 	beq	r3,zero,226bc <__umodsi3+0x4c>
   226a4:	1806d07a 	srli	r3,r3,1
   226a8:	11400136 	bltu	r2,r5,226b0 <__umodsi3+0x40>
   226ac:	1145c83a 	sub	r2,r2,r5
   226b0:	280ad07a 	srli	r5,r5,1
   226b4:	183ffb1e 	bne	r3,zero,226a4 <__alt_mem_sdram_controller_0+0xc00226a4>
   226b8:	f800283a 	ret
   226bc:	f800283a 	ret
   226c0:	00c00044 	movi	r3,1
   226c4:	003ff706 	br	226a4 <__alt_mem_sdram_controller_0+0xc00226a4>

000226c8 <__assert_func>:
   226c8:	00800134 	movhi	r2,4
   226cc:	10a03d04 	addi	r2,r2,-32524
   226d0:	10800017 	ldw	r2,0(r2)
   226d4:	defffc04 	addi	sp,sp,-16
   226d8:	dfc00315 	stw	ra,12(sp)
   226dc:	2015883a 	mov	r10,r4
   226e0:	2811883a 	mov	r8,r5
   226e4:	3813883a 	mov	r9,r7
   226e8:	11000317 	ldw	r4,12(r2)
   226ec:	30000c26 	beq	r6,zero,22720 <__assert_func+0x58>
   226f0:	00c000f4 	movhi	r3,3
   226f4:	18d8b104 	addi	r3,r3,25284
   226f8:	3005883a 	mov	r2,r6
   226fc:	014000f4 	movhi	r5,3
   22700:	2958b504 	addi	r5,r5,25300
   22704:	500f883a 	mov	r7,r10
   22708:	480d883a 	mov	r6,r9
   2270c:	d8c00115 	stw	r3,4(sp)
   22710:	da000015 	stw	r8,0(sp)
   22714:	d8800215 	stw	r2,8(sp)
   22718:	0022eb00 	call	22eb0 <fiprintf>
   2271c:	00294dc0 	call	294dc <abort>
   22720:	00c000f4 	movhi	r3,3
   22724:	18d8b404 	addi	r3,r3,25296
   22728:	1805883a 	mov	r2,r3
   2272c:	003ff306 	br	226fc <__alt_mem_sdram_controller_0+0xc00226fc>

00022730 <__assert>:
   22730:	deffff04 	addi	sp,sp,-4
   22734:	300f883a 	mov	r7,r6
   22738:	000d883a 	mov	r6,zero
   2273c:	dfc00015 	stw	ra,0(sp)
   22740:	00226c80 	call	226c8 <__assert_func>

00022744 <_fclose_r>:
   22744:	28003926 	beq	r5,zero,2282c <_fclose_r+0xe8>
   22748:	defffc04 	addi	sp,sp,-16
   2274c:	dc400115 	stw	r17,4(sp)
   22750:	dc000015 	stw	r16,0(sp)
   22754:	dfc00315 	stw	ra,12(sp)
   22758:	dc800215 	stw	r18,8(sp)
   2275c:	2023883a 	mov	r17,r4
   22760:	2821883a 	mov	r16,r5
   22764:	20000226 	beq	r4,zero,22770 <_fclose_r+0x2c>
   22768:	20800e17 	ldw	r2,56(r4)
   2276c:	10002726 	beq	r2,zero,2280c <_fclose_r+0xc8>
   22770:	8080030f 	ldh	r2,12(r16)
   22774:	1000071e 	bne	r2,zero,22794 <_fclose_r+0x50>
   22778:	0005883a 	mov	r2,zero
   2277c:	dfc00317 	ldw	ra,12(sp)
   22780:	dc800217 	ldw	r18,8(sp)
   22784:	dc400117 	ldw	r17,4(sp)
   22788:	dc000017 	ldw	r16,0(sp)
   2278c:	dec00404 	addi	sp,sp,16
   22790:	f800283a 	ret
   22794:	800b883a 	mov	r5,r16
   22798:	8809883a 	mov	r4,r17
   2279c:	00228480 	call	22848 <__sflush_r>
   227a0:	1025883a 	mov	r18,r2
   227a4:	80800b17 	ldw	r2,44(r16)
   227a8:	10000426 	beq	r2,zero,227bc <_fclose_r+0x78>
   227ac:	81400717 	ldw	r5,28(r16)
   227b0:	8809883a 	mov	r4,r17
   227b4:	103ee83a 	callr	r2
   227b8:	10001616 	blt	r2,zero,22814 <_fclose_r+0xd0>
   227bc:	8080030b 	ldhu	r2,12(r16)
   227c0:	1080200c 	andi	r2,r2,128
   227c4:	1000151e 	bne	r2,zero,2281c <_fclose_r+0xd8>
   227c8:	81400c17 	ldw	r5,48(r16)
   227cc:	28000526 	beq	r5,zero,227e4 <_fclose_r+0xa0>
   227d0:	80801004 	addi	r2,r16,64
   227d4:	28800226 	beq	r5,r2,227e0 <_fclose_r+0x9c>
   227d8:	8809883a 	mov	r4,r17
   227dc:	00231680 	call	23168 <_free_r>
   227e0:	80000c15 	stw	zero,48(r16)
   227e4:	81401117 	ldw	r5,68(r16)
   227e8:	28000326 	beq	r5,zero,227f8 <_fclose_r+0xb4>
   227ec:	8809883a 	mov	r4,r17
   227f0:	00231680 	call	23168 <_free_r>
   227f4:	80001115 	stw	zero,68(r16)
   227f8:	0022e500 	call	22e50 <__sfp_lock_acquire>
   227fc:	8000030d 	sth	zero,12(r16)
   22800:	0022e540 	call	22e54 <__sfp_lock_release>
   22804:	9005883a 	mov	r2,r18
   22808:	003fdc06 	br	2277c <__alt_mem_sdram_controller_0+0xc002277c>
   2280c:	0022e400 	call	22e40 <__sinit>
   22810:	003fd706 	br	22770 <__alt_mem_sdram_controller_0+0xc0022770>
   22814:	04bfffc4 	movi	r18,-1
   22818:	003fe806 	br	227bc <__alt_mem_sdram_controller_0+0xc00227bc>
   2281c:	81400417 	ldw	r5,16(r16)
   22820:	8809883a 	mov	r4,r17
   22824:	00231680 	call	23168 <_free_r>
   22828:	003fe706 	br	227c8 <__alt_mem_sdram_controller_0+0xc00227c8>
   2282c:	0005883a 	mov	r2,zero
   22830:	f800283a 	ret

00022834 <fclose>:
   22834:	00800134 	movhi	r2,4
   22838:	10a03d04 	addi	r2,r2,-32524
   2283c:	200b883a 	mov	r5,r4
   22840:	11000017 	ldw	r4,0(r2)
   22844:	00227441 	jmpi	22744 <_fclose_r>

00022848 <__sflush_r>:
   22848:	2880030b 	ldhu	r2,12(r5)
   2284c:	defffb04 	addi	sp,sp,-20
   22850:	dcc00315 	stw	r19,12(sp)
   22854:	dc400115 	stw	r17,4(sp)
   22858:	dfc00415 	stw	ra,16(sp)
   2285c:	dc800215 	stw	r18,8(sp)
   22860:	dc000015 	stw	r16,0(sp)
   22864:	10c0020c 	andi	r3,r2,8
   22868:	2823883a 	mov	r17,r5
   2286c:	2027883a 	mov	r19,r4
   22870:	1800311e 	bne	r3,zero,22938 <__sflush_r+0xf0>
   22874:	28c00117 	ldw	r3,4(r5)
   22878:	10820014 	ori	r2,r2,2048
   2287c:	2880030d 	sth	r2,12(r5)
   22880:	00c04b0e 	bge	zero,r3,229b0 <__sflush_r+0x168>
   22884:	8a000a17 	ldw	r8,40(r17)
   22888:	40002326 	beq	r8,zero,22918 <__sflush_r+0xd0>
   2288c:	9c000017 	ldw	r16,0(r19)
   22890:	10c4000c 	andi	r3,r2,4096
   22894:	98000015 	stw	zero,0(r19)
   22898:	18004826 	beq	r3,zero,229bc <__sflush_r+0x174>
   2289c:	89801417 	ldw	r6,80(r17)
   228a0:	10c0010c 	andi	r3,r2,4
   228a4:	18000626 	beq	r3,zero,228c0 <__sflush_r+0x78>
   228a8:	88c00117 	ldw	r3,4(r17)
   228ac:	88800c17 	ldw	r2,48(r17)
   228b0:	30cdc83a 	sub	r6,r6,r3
   228b4:	10000226 	beq	r2,zero,228c0 <__sflush_r+0x78>
   228b8:	88800f17 	ldw	r2,60(r17)
   228bc:	308dc83a 	sub	r6,r6,r2
   228c0:	89400717 	ldw	r5,28(r17)
   228c4:	000f883a 	mov	r7,zero
   228c8:	9809883a 	mov	r4,r19
   228cc:	403ee83a 	callr	r8
   228d0:	00ffffc4 	movi	r3,-1
   228d4:	10c04426 	beq	r2,r3,229e8 <__sflush_r+0x1a0>
   228d8:	88c0030b 	ldhu	r3,12(r17)
   228dc:	89000417 	ldw	r4,16(r17)
   228e0:	88000115 	stw	zero,4(r17)
   228e4:	197dffcc 	andi	r5,r3,63487
   228e8:	8940030d 	sth	r5,12(r17)
   228ec:	89000015 	stw	r4,0(r17)
   228f0:	18c4000c 	andi	r3,r3,4096
   228f4:	18002c1e 	bne	r3,zero,229a8 <__sflush_r+0x160>
   228f8:	89400c17 	ldw	r5,48(r17)
   228fc:	9c000015 	stw	r16,0(r19)
   22900:	28000526 	beq	r5,zero,22918 <__sflush_r+0xd0>
   22904:	88801004 	addi	r2,r17,64
   22908:	28800226 	beq	r5,r2,22914 <__sflush_r+0xcc>
   2290c:	9809883a 	mov	r4,r19
   22910:	00231680 	call	23168 <_free_r>
   22914:	88000c15 	stw	zero,48(r17)
   22918:	0005883a 	mov	r2,zero
   2291c:	dfc00417 	ldw	ra,16(sp)
   22920:	dcc00317 	ldw	r19,12(sp)
   22924:	dc800217 	ldw	r18,8(sp)
   22928:	dc400117 	ldw	r17,4(sp)
   2292c:	dc000017 	ldw	r16,0(sp)
   22930:	dec00504 	addi	sp,sp,20
   22934:	f800283a 	ret
   22938:	2c800417 	ldw	r18,16(r5)
   2293c:	903ff626 	beq	r18,zero,22918 <__alt_mem_sdram_controller_0+0xc0022918>
   22940:	2c000017 	ldw	r16,0(r5)
   22944:	108000cc 	andi	r2,r2,3
   22948:	2c800015 	stw	r18,0(r5)
   2294c:	84a1c83a 	sub	r16,r16,r18
   22950:	1000131e 	bne	r2,zero,229a0 <__sflush_r+0x158>
   22954:	28800517 	ldw	r2,20(r5)
   22958:	88800215 	stw	r2,8(r17)
   2295c:	04000316 	blt	zero,r16,2296c <__sflush_r+0x124>
   22960:	003fed06 	br	22918 <__alt_mem_sdram_controller_0+0xc0022918>
   22964:	90a5883a 	add	r18,r18,r2
   22968:	043feb0e 	bge	zero,r16,22918 <__alt_mem_sdram_controller_0+0xc0022918>
   2296c:	88800917 	ldw	r2,36(r17)
   22970:	89400717 	ldw	r5,28(r17)
   22974:	800f883a 	mov	r7,r16
   22978:	900d883a 	mov	r6,r18
   2297c:	9809883a 	mov	r4,r19
   22980:	103ee83a 	callr	r2
   22984:	80a1c83a 	sub	r16,r16,r2
   22988:	00bff616 	blt	zero,r2,22964 <__alt_mem_sdram_controller_0+0xc0022964>
   2298c:	88c0030b 	ldhu	r3,12(r17)
   22990:	00bfffc4 	movi	r2,-1
   22994:	18c01014 	ori	r3,r3,64
   22998:	88c0030d 	sth	r3,12(r17)
   2299c:	003fdf06 	br	2291c <__alt_mem_sdram_controller_0+0xc002291c>
   229a0:	0005883a 	mov	r2,zero
   229a4:	003fec06 	br	22958 <__alt_mem_sdram_controller_0+0xc0022958>
   229a8:	88801415 	stw	r2,80(r17)
   229ac:	003fd206 	br	228f8 <__alt_mem_sdram_controller_0+0xc00228f8>
   229b0:	28c00f17 	ldw	r3,60(r5)
   229b4:	00ffb316 	blt	zero,r3,22884 <__alt_mem_sdram_controller_0+0xc0022884>
   229b8:	003fd706 	br	22918 <__alt_mem_sdram_controller_0+0xc0022918>
   229bc:	89400717 	ldw	r5,28(r17)
   229c0:	000d883a 	mov	r6,zero
   229c4:	01c00044 	movi	r7,1
   229c8:	9809883a 	mov	r4,r19
   229cc:	403ee83a 	callr	r8
   229d0:	100d883a 	mov	r6,r2
   229d4:	00bfffc4 	movi	r2,-1
   229d8:	30801426 	beq	r6,r2,22a2c <__sflush_r+0x1e4>
   229dc:	8880030b 	ldhu	r2,12(r17)
   229e0:	8a000a17 	ldw	r8,40(r17)
   229e4:	003fae06 	br	228a0 <__alt_mem_sdram_controller_0+0xc00228a0>
   229e8:	98c00017 	ldw	r3,0(r19)
   229ec:	183fba26 	beq	r3,zero,228d8 <__alt_mem_sdram_controller_0+0xc00228d8>
   229f0:	01000744 	movi	r4,29
   229f4:	19000626 	beq	r3,r4,22a10 <__sflush_r+0x1c8>
   229f8:	01000584 	movi	r4,22
   229fc:	19000426 	beq	r3,r4,22a10 <__sflush_r+0x1c8>
   22a00:	88c0030b 	ldhu	r3,12(r17)
   22a04:	18c01014 	ori	r3,r3,64
   22a08:	88c0030d 	sth	r3,12(r17)
   22a0c:	003fc306 	br	2291c <__alt_mem_sdram_controller_0+0xc002291c>
   22a10:	8880030b 	ldhu	r2,12(r17)
   22a14:	88c00417 	ldw	r3,16(r17)
   22a18:	88000115 	stw	zero,4(r17)
   22a1c:	10bdffcc 	andi	r2,r2,63487
   22a20:	8880030d 	sth	r2,12(r17)
   22a24:	88c00015 	stw	r3,0(r17)
   22a28:	003fb306 	br	228f8 <__alt_mem_sdram_controller_0+0xc00228f8>
   22a2c:	98800017 	ldw	r2,0(r19)
   22a30:	103fea26 	beq	r2,zero,229dc <__alt_mem_sdram_controller_0+0xc00229dc>
   22a34:	00c00744 	movi	r3,29
   22a38:	10c00226 	beq	r2,r3,22a44 <__sflush_r+0x1fc>
   22a3c:	00c00584 	movi	r3,22
   22a40:	10c0031e 	bne	r2,r3,22a50 <__sflush_r+0x208>
   22a44:	9c000015 	stw	r16,0(r19)
   22a48:	0005883a 	mov	r2,zero
   22a4c:	003fb306 	br	2291c <__alt_mem_sdram_controller_0+0xc002291c>
   22a50:	88c0030b 	ldhu	r3,12(r17)
   22a54:	3005883a 	mov	r2,r6
   22a58:	18c01014 	ori	r3,r3,64
   22a5c:	88c0030d 	sth	r3,12(r17)
   22a60:	003fae06 	br	2291c <__alt_mem_sdram_controller_0+0xc002291c>

00022a64 <_fflush_r>:
   22a64:	defffd04 	addi	sp,sp,-12
   22a68:	dc000115 	stw	r16,4(sp)
   22a6c:	dfc00215 	stw	ra,8(sp)
   22a70:	2021883a 	mov	r16,r4
   22a74:	20000226 	beq	r4,zero,22a80 <_fflush_r+0x1c>
   22a78:	20800e17 	ldw	r2,56(r4)
   22a7c:	10000c26 	beq	r2,zero,22ab0 <_fflush_r+0x4c>
   22a80:	2880030f 	ldh	r2,12(r5)
   22a84:	1000051e 	bne	r2,zero,22a9c <_fflush_r+0x38>
   22a88:	0005883a 	mov	r2,zero
   22a8c:	dfc00217 	ldw	ra,8(sp)
   22a90:	dc000117 	ldw	r16,4(sp)
   22a94:	dec00304 	addi	sp,sp,12
   22a98:	f800283a 	ret
   22a9c:	8009883a 	mov	r4,r16
   22aa0:	dfc00217 	ldw	ra,8(sp)
   22aa4:	dc000117 	ldw	r16,4(sp)
   22aa8:	dec00304 	addi	sp,sp,12
   22aac:	00228481 	jmpi	22848 <__sflush_r>
   22ab0:	d9400015 	stw	r5,0(sp)
   22ab4:	0022e400 	call	22e40 <__sinit>
   22ab8:	d9400017 	ldw	r5,0(sp)
   22abc:	003ff006 	br	22a80 <__alt_mem_sdram_controller_0+0xc0022a80>

00022ac0 <fflush>:
   22ac0:	20000526 	beq	r4,zero,22ad8 <fflush+0x18>
   22ac4:	00800134 	movhi	r2,4
   22ac8:	10a03d04 	addi	r2,r2,-32524
   22acc:	200b883a 	mov	r5,r4
   22ad0:	11000017 	ldw	r4,0(r2)
   22ad4:	0022a641 	jmpi	22a64 <_fflush_r>
   22ad8:	00800134 	movhi	r2,4
   22adc:	10a03c04 	addi	r2,r2,-32528
   22ae0:	11000017 	ldw	r4,0(r2)
   22ae4:	014000b4 	movhi	r5,2
   22ae8:	294a9904 	addi	r5,r5,10852
   22aec:	0023a181 	jmpi	23a18 <_fwalk_reent>

00022af0 <__fp_unlock>:
   22af0:	0005883a 	mov	r2,zero
   22af4:	f800283a 	ret

00022af8 <_cleanup_r>:
   22af8:	014000b4 	movhi	r5,2
   22afc:	2949d104 	addi	r5,r5,10052
   22b00:	0023a181 	jmpi	23a18 <_fwalk_reent>

00022b04 <__sinit.part.1>:
   22b04:	defff704 	addi	sp,sp,-36
   22b08:	00c000b4 	movhi	r3,2
   22b0c:	dfc00815 	stw	ra,32(sp)
   22b10:	ddc00715 	stw	r23,28(sp)
   22b14:	dd800615 	stw	r22,24(sp)
   22b18:	dd400515 	stw	r21,20(sp)
   22b1c:	dd000415 	stw	r20,16(sp)
   22b20:	dcc00315 	stw	r19,12(sp)
   22b24:	dc800215 	stw	r18,8(sp)
   22b28:	dc400115 	stw	r17,4(sp)
   22b2c:	dc000015 	stw	r16,0(sp)
   22b30:	18cabe04 	addi	r3,r3,11000
   22b34:	24000117 	ldw	r16,4(r4)
   22b38:	20c00f15 	stw	r3,60(r4)
   22b3c:	2080bb04 	addi	r2,r4,748
   22b40:	00c000c4 	movi	r3,3
   22b44:	20c0b915 	stw	r3,740(r4)
   22b48:	2080ba15 	stw	r2,744(r4)
   22b4c:	2000b815 	stw	zero,736(r4)
   22b50:	05c00204 	movi	r23,8
   22b54:	00800104 	movi	r2,4
   22b58:	2025883a 	mov	r18,r4
   22b5c:	b80d883a 	mov	r6,r23
   22b60:	81001704 	addi	r4,r16,92
   22b64:	000b883a 	mov	r5,zero
   22b68:	80000015 	stw	zero,0(r16)
   22b6c:	80000115 	stw	zero,4(r16)
   22b70:	80000215 	stw	zero,8(r16)
   22b74:	8080030d 	sth	r2,12(r16)
   22b78:	80001915 	stw	zero,100(r16)
   22b7c:	8000038d 	sth	zero,14(r16)
   22b80:	80000415 	stw	zero,16(r16)
   22b84:	80000515 	stw	zero,20(r16)
   22b88:	80000615 	stw	zero,24(r16)
   22b8c:	00245a40 	call	245a4 <memset>
   22b90:	058000b4 	movhi	r22,2
   22b94:	94400217 	ldw	r17,8(r18)
   22b98:	054000b4 	movhi	r21,2
   22b9c:	050000b4 	movhi	r20,2
   22ba0:	04c000b4 	movhi	r19,2
   22ba4:	b592fc04 	addi	r22,r22,19440
   22ba8:	ad531304 	addi	r21,r21,19532
   22bac:	a5133204 	addi	r20,r20,19656
   22bb0:	9cd34904 	addi	r19,r19,19748
   22bb4:	85800815 	stw	r22,32(r16)
   22bb8:	85400915 	stw	r21,36(r16)
   22bbc:	85000a15 	stw	r20,40(r16)
   22bc0:	84c00b15 	stw	r19,44(r16)
   22bc4:	84000715 	stw	r16,28(r16)
   22bc8:	00800284 	movi	r2,10
   22bcc:	8880030d 	sth	r2,12(r17)
   22bd0:	00800044 	movi	r2,1
   22bd4:	b80d883a 	mov	r6,r23
   22bd8:	89001704 	addi	r4,r17,92
   22bdc:	000b883a 	mov	r5,zero
   22be0:	88000015 	stw	zero,0(r17)
   22be4:	88000115 	stw	zero,4(r17)
   22be8:	88000215 	stw	zero,8(r17)
   22bec:	88001915 	stw	zero,100(r17)
   22bf0:	8880038d 	sth	r2,14(r17)
   22bf4:	88000415 	stw	zero,16(r17)
   22bf8:	88000515 	stw	zero,20(r17)
   22bfc:	88000615 	stw	zero,24(r17)
   22c00:	00245a40 	call	245a4 <memset>
   22c04:	94000317 	ldw	r16,12(r18)
   22c08:	00800484 	movi	r2,18
   22c0c:	8c400715 	stw	r17,28(r17)
   22c10:	8d800815 	stw	r22,32(r17)
   22c14:	8d400915 	stw	r21,36(r17)
   22c18:	8d000a15 	stw	r20,40(r17)
   22c1c:	8cc00b15 	stw	r19,44(r17)
   22c20:	8080030d 	sth	r2,12(r16)
   22c24:	00800084 	movi	r2,2
   22c28:	80000015 	stw	zero,0(r16)
   22c2c:	80000115 	stw	zero,4(r16)
   22c30:	80000215 	stw	zero,8(r16)
   22c34:	80001915 	stw	zero,100(r16)
   22c38:	8080038d 	sth	r2,14(r16)
   22c3c:	80000415 	stw	zero,16(r16)
   22c40:	80000515 	stw	zero,20(r16)
   22c44:	80000615 	stw	zero,24(r16)
   22c48:	b80d883a 	mov	r6,r23
   22c4c:	000b883a 	mov	r5,zero
   22c50:	81001704 	addi	r4,r16,92
   22c54:	00245a40 	call	245a4 <memset>
   22c58:	00800044 	movi	r2,1
   22c5c:	84000715 	stw	r16,28(r16)
   22c60:	85800815 	stw	r22,32(r16)
   22c64:	85400915 	stw	r21,36(r16)
   22c68:	85000a15 	stw	r20,40(r16)
   22c6c:	84c00b15 	stw	r19,44(r16)
   22c70:	90800e15 	stw	r2,56(r18)
   22c74:	dfc00817 	ldw	ra,32(sp)
   22c78:	ddc00717 	ldw	r23,28(sp)
   22c7c:	dd800617 	ldw	r22,24(sp)
   22c80:	dd400517 	ldw	r21,20(sp)
   22c84:	dd000417 	ldw	r20,16(sp)
   22c88:	dcc00317 	ldw	r19,12(sp)
   22c8c:	dc800217 	ldw	r18,8(sp)
   22c90:	dc400117 	ldw	r17,4(sp)
   22c94:	dc000017 	ldw	r16,0(sp)
   22c98:	dec00904 	addi	sp,sp,36
   22c9c:	f800283a 	ret

00022ca0 <__fp_lock>:
   22ca0:	0005883a 	mov	r2,zero
   22ca4:	f800283a 	ret

00022ca8 <__sfmoreglue>:
   22ca8:	defffc04 	addi	sp,sp,-16
   22cac:	dc400115 	stw	r17,4(sp)
   22cb0:	2c7fffc4 	addi	r17,r5,-1
   22cb4:	8c401a24 	muli	r17,r17,104
   22cb8:	dc800215 	stw	r18,8(sp)
   22cbc:	2825883a 	mov	r18,r5
   22cc0:	89401d04 	addi	r5,r17,116
   22cc4:	dc000015 	stw	r16,0(sp)
   22cc8:	dfc00315 	stw	ra,12(sp)
   22ccc:	0023d980 	call	23d98 <_malloc_r>
   22cd0:	1021883a 	mov	r16,r2
   22cd4:	10000726 	beq	r2,zero,22cf4 <__sfmoreglue+0x4c>
   22cd8:	11000304 	addi	r4,r2,12
   22cdc:	10000015 	stw	zero,0(r2)
   22ce0:	14800115 	stw	r18,4(r2)
   22ce4:	11000215 	stw	r4,8(r2)
   22ce8:	89801a04 	addi	r6,r17,104
   22cec:	000b883a 	mov	r5,zero
   22cf0:	00245a40 	call	245a4 <memset>
   22cf4:	8005883a 	mov	r2,r16
   22cf8:	dfc00317 	ldw	ra,12(sp)
   22cfc:	dc800217 	ldw	r18,8(sp)
   22d00:	dc400117 	ldw	r17,4(sp)
   22d04:	dc000017 	ldw	r16,0(sp)
   22d08:	dec00404 	addi	sp,sp,16
   22d0c:	f800283a 	ret

00022d10 <__sfp>:
   22d10:	defffb04 	addi	sp,sp,-20
   22d14:	dc000015 	stw	r16,0(sp)
   22d18:	04000134 	movhi	r16,4
   22d1c:	84203c04 	addi	r16,r16,-32528
   22d20:	dcc00315 	stw	r19,12(sp)
   22d24:	2027883a 	mov	r19,r4
   22d28:	81000017 	ldw	r4,0(r16)
   22d2c:	dfc00415 	stw	ra,16(sp)
   22d30:	dc800215 	stw	r18,8(sp)
   22d34:	20800e17 	ldw	r2,56(r4)
   22d38:	dc400115 	stw	r17,4(sp)
   22d3c:	1000021e 	bne	r2,zero,22d48 <__sfp+0x38>
   22d40:	0022b040 	call	22b04 <__sinit.part.1>
   22d44:	81000017 	ldw	r4,0(r16)
   22d48:	2480b804 	addi	r18,r4,736
   22d4c:	047fffc4 	movi	r17,-1
   22d50:	91000117 	ldw	r4,4(r18)
   22d54:	94000217 	ldw	r16,8(r18)
   22d58:	213fffc4 	addi	r4,r4,-1
   22d5c:	20000a16 	blt	r4,zero,22d88 <__sfp+0x78>
   22d60:	8080030f 	ldh	r2,12(r16)
   22d64:	10000c26 	beq	r2,zero,22d98 <__sfp+0x88>
   22d68:	80c01d04 	addi	r3,r16,116
   22d6c:	00000206 	br	22d78 <__sfp+0x68>
   22d70:	18bfe60f 	ldh	r2,-104(r3)
   22d74:	10000826 	beq	r2,zero,22d98 <__sfp+0x88>
   22d78:	213fffc4 	addi	r4,r4,-1
   22d7c:	1c3ffd04 	addi	r16,r3,-12
   22d80:	18c01a04 	addi	r3,r3,104
   22d84:	247ffa1e 	bne	r4,r17,22d70 <__alt_mem_sdram_controller_0+0xc0022d70>
   22d88:	90800017 	ldw	r2,0(r18)
   22d8c:	10001d26 	beq	r2,zero,22e04 <__sfp+0xf4>
   22d90:	1025883a 	mov	r18,r2
   22d94:	003fee06 	br	22d50 <__alt_mem_sdram_controller_0+0xc0022d50>
   22d98:	00bfffc4 	movi	r2,-1
   22d9c:	8080038d 	sth	r2,14(r16)
   22da0:	00800044 	movi	r2,1
   22da4:	8080030d 	sth	r2,12(r16)
   22da8:	80001915 	stw	zero,100(r16)
   22dac:	80000015 	stw	zero,0(r16)
   22db0:	80000215 	stw	zero,8(r16)
   22db4:	80000115 	stw	zero,4(r16)
   22db8:	80000415 	stw	zero,16(r16)
   22dbc:	80000515 	stw	zero,20(r16)
   22dc0:	80000615 	stw	zero,24(r16)
   22dc4:	01800204 	movi	r6,8
   22dc8:	000b883a 	mov	r5,zero
   22dcc:	81001704 	addi	r4,r16,92
   22dd0:	00245a40 	call	245a4 <memset>
   22dd4:	8005883a 	mov	r2,r16
   22dd8:	80000c15 	stw	zero,48(r16)
   22ddc:	80000d15 	stw	zero,52(r16)
   22de0:	80001115 	stw	zero,68(r16)
   22de4:	80001215 	stw	zero,72(r16)
   22de8:	dfc00417 	ldw	ra,16(sp)
   22dec:	dcc00317 	ldw	r19,12(sp)
   22df0:	dc800217 	ldw	r18,8(sp)
   22df4:	dc400117 	ldw	r17,4(sp)
   22df8:	dc000017 	ldw	r16,0(sp)
   22dfc:	dec00504 	addi	sp,sp,20
   22e00:	f800283a 	ret
   22e04:	01400104 	movi	r5,4
   22e08:	9809883a 	mov	r4,r19
   22e0c:	0022ca80 	call	22ca8 <__sfmoreglue>
   22e10:	90800015 	stw	r2,0(r18)
   22e14:	103fde1e 	bne	r2,zero,22d90 <__alt_mem_sdram_controller_0+0xc0022d90>
   22e18:	00800304 	movi	r2,12
   22e1c:	98800015 	stw	r2,0(r19)
   22e20:	0005883a 	mov	r2,zero
   22e24:	003ff006 	br	22de8 <__alt_mem_sdram_controller_0+0xc0022de8>

00022e28 <_cleanup>:
   22e28:	00800134 	movhi	r2,4
   22e2c:	10a03c04 	addi	r2,r2,-32528
   22e30:	11000017 	ldw	r4,0(r2)
   22e34:	014000b4 	movhi	r5,2
   22e38:	2949d104 	addi	r5,r5,10052
   22e3c:	0023a181 	jmpi	23a18 <_fwalk_reent>

00022e40 <__sinit>:
   22e40:	20800e17 	ldw	r2,56(r4)
   22e44:	10000126 	beq	r2,zero,22e4c <__sinit+0xc>
   22e48:	f800283a 	ret
   22e4c:	0022b041 	jmpi	22b04 <__sinit.part.1>

00022e50 <__sfp_lock_acquire>:
   22e50:	f800283a 	ret

00022e54 <__sfp_lock_release>:
   22e54:	f800283a 	ret

00022e58 <__sinit_lock_acquire>:
   22e58:	f800283a 	ret

00022e5c <__sinit_lock_release>:
   22e5c:	f800283a 	ret

00022e60 <__fp_lock_all>:
   22e60:	00800134 	movhi	r2,4
   22e64:	10a03d04 	addi	r2,r2,-32524
   22e68:	11000017 	ldw	r4,0(r2)
   22e6c:	014000b4 	movhi	r5,2
   22e70:	294b2804 	addi	r5,r5,11424
   22e74:	00239541 	jmpi	23954 <_fwalk>

00022e78 <__fp_unlock_all>:
   22e78:	00800134 	movhi	r2,4
   22e7c:	10a03d04 	addi	r2,r2,-32524
   22e80:	11000017 	ldw	r4,0(r2)
   22e84:	014000b4 	movhi	r5,2
   22e88:	294abc04 	addi	r5,r5,10992
   22e8c:	00239541 	jmpi	23954 <_fwalk>

00022e90 <_fiprintf_r>:
   22e90:	defffe04 	addi	sp,sp,-8
   22e94:	dfc00015 	stw	ra,0(sp)
   22e98:	d9c00115 	stw	r7,4(sp)
   22e9c:	d9c00104 	addi	r7,sp,4
   22ea0:	0026fec0 	call	26fec <_vfiprintf_r>
   22ea4:	dfc00017 	ldw	ra,0(sp)
   22ea8:	dec00204 	addi	sp,sp,8
   22eac:	f800283a 	ret

00022eb0 <fiprintf>:
   22eb0:	defffd04 	addi	sp,sp,-12
   22eb4:	2005883a 	mov	r2,r4
   22eb8:	dfc00015 	stw	ra,0(sp)
   22ebc:	d9800115 	stw	r6,4(sp)
   22ec0:	d9c00215 	stw	r7,8(sp)
   22ec4:	00c00134 	movhi	r3,4
   22ec8:	18e03d04 	addi	r3,r3,-32524
   22ecc:	19000017 	ldw	r4,0(r3)
   22ed0:	280d883a 	mov	r6,r5
   22ed4:	d9c00104 	addi	r7,sp,4
   22ed8:	100b883a 	mov	r5,r2
   22edc:	0026fec0 	call	26fec <_vfiprintf_r>
   22ee0:	dfc00017 	ldw	ra,0(sp)
   22ee4:	dec00304 	addi	sp,sp,12
   22ee8:	f800283a 	ret

00022eec <_fopen_r>:
   22eec:	defffa04 	addi	sp,sp,-24
   22ef0:	3005883a 	mov	r2,r6
   22ef4:	dcc00415 	stw	r19,16(sp)
   22ef8:	d80d883a 	mov	r6,sp
   22efc:	2827883a 	mov	r19,r5
   22f00:	100b883a 	mov	r5,r2
   22f04:	dc800315 	stw	r18,12(sp)
   22f08:	dfc00515 	stw	ra,20(sp)
   22f0c:	dc400215 	stw	r17,8(sp)
   22f10:	dc000115 	stw	r16,4(sp)
   22f14:	2025883a 	mov	r18,r4
   22f18:	002ad7c0 	call	2ad7c <__sflags>
   22f1c:	10002726 	beq	r2,zero,22fbc <_fopen_r+0xd0>
   22f20:	9009883a 	mov	r4,r18
   22f24:	1023883a 	mov	r17,r2
   22f28:	0022d100 	call	22d10 <__sfp>
   22f2c:	1021883a 	mov	r16,r2
   22f30:	10002226 	beq	r2,zero,22fbc <_fopen_r+0xd0>
   22f34:	d9800017 	ldw	r6,0(sp)
   22f38:	01c06d84 	movi	r7,438
   22f3c:	980b883a 	mov	r5,r19
   22f40:	9009883a 	mov	r4,r18
   22f44:	00246cc0 	call	246cc <_open_r>
   22f48:	10001916 	blt	r2,zero,22fb0 <_fopen_r+0xc4>
   22f4c:	8080038d 	sth	r2,14(r16)
   22f50:	008000b4 	movhi	r2,2
   22f54:	1092fc04 	addi	r2,r2,19440
   22f58:	80800815 	stw	r2,32(r16)
   22f5c:	008000b4 	movhi	r2,2
   22f60:	10931304 	addi	r2,r2,19532
   22f64:	80800915 	stw	r2,36(r16)
   22f68:	008000b4 	movhi	r2,2
   22f6c:	10933204 	addi	r2,r2,19656
   22f70:	80800a15 	stw	r2,40(r16)
   22f74:	008000b4 	movhi	r2,2
   22f78:	10934904 	addi	r2,r2,19748
   22f7c:	8440030d 	sth	r17,12(r16)
   22f80:	84000715 	stw	r16,28(r16)
   22f84:	80800b15 	stw	r2,44(r16)
   22f88:	8c40400c 	andi	r17,r17,256
   22f8c:	88000d1e 	bne	r17,zero,22fc4 <_fopen_r+0xd8>
   22f90:	8005883a 	mov	r2,r16
   22f94:	dfc00517 	ldw	ra,20(sp)
   22f98:	dcc00417 	ldw	r19,16(sp)
   22f9c:	dc800317 	ldw	r18,12(sp)
   22fa0:	dc400217 	ldw	r17,8(sp)
   22fa4:	dc000117 	ldw	r16,4(sp)
   22fa8:	dec00604 	addi	sp,sp,24
   22fac:	f800283a 	ret
   22fb0:	0022e500 	call	22e50 <__sfp_lock_acquire>
   22fb4:	8000030d 	sth	zero,12(r16)
   22fb8:	0022e540 	call	22e54 <__sfp_lock_release>
   22fbc:	0005883a 	mov	r2,zero
   22fc0:	003ff406 	br	22f94 <__alt_mem_sdram_controller_0+0xc0022f94>
   22fc4:	01c00084 	movi	r7,2
   22fc8:	000d883a 	mov	r6,zero
   22fcc:	800b883a 	mov	r5,r16
   22fd0:	9009883a 	mov	r4,r18
   22fd4:	00234780 	call	23478 <_fseek_r>
   22fd8:	8005883a 	mov	r2,r16
   22fdc:	003fed06 	br	22f94 <__alt_mem_sdram_controller_0+0xc0022f94>

00022fe0 <fopen>:
   22fe0:	00800134 	movhi	r2,4
   22fe4:	10a03d04 	addi	r2,r2,-32524
   22fe8:	280d883a 	mov	r6,r5
   22fec:	200b883a 	mov	r5,r4
   22ff0:	11000017 	ldw	r4,0(r2)
   22ff4:	0022eec1 	jmpi	22eec <_fopen_r>

00022ff8 <_fprintf_r>:
   22ff8:	defffe04 	addi	sp,sp,-8
   22ffc:	2809883a 	mov	r4,r5
   23000:	300b883a 	mov	r5,r6
   23004:	dfc00015 	stw	ra,0(sp)
   23008:	d9c00115 	stw	r7,4(sp)
   2300c:	d9800104 	addi	r6,sp,4
   23010:	00291fc0 	call	291fc <__vfprintf_internal>
   23014:	dfc00017 	ldw	ra,0(sp)
   23018:	dec00204 	addi	sp,sp,8
   2301c:	f800283a 	ret

00023020 <fprintf>:
   23020:	defffd04 	addi	sp,sp,-12
   23024:	dfc00015 	stw	ra,0(sp)
   23028:	d9800115 	stw	r6,4(sp)
   2302c:	d9c00215 	stw	r7,8(sp)
   23030:	d9800104 	addi	r6,sp,4
   23034:	00291fc0 	call	291fc <__vfprintf_internal>
   23038:	dfc00017 	ldw	ra,0(sp)
   2303c:	dec00304 	addi	sp,sp,12
   23040:	f800283a 	ret

00023044 <_malloc_trim_r>:
   23044:	defffb04 	addi	sp,sp,-20
   23048:	dcc00315 	stw	r19,12(sp)
   2304c:	04c000f4 	movhi	r19,3
   23050:	dc800215 	stw	r18,8(sp)
   23054:	dc400115 	stw	r17,4(sp)
   23058:	dc000015 	stw	r16,0(sp)
   2305c:	dfc00415 	stw	ra,16(sp)
   23060:	2821883a 	mov	r16,r5
   23064:	9cda9a04 	addi	r19,r19,27240
   23068:	2025883a 	mov	r18,r4
   2306c:	0033d740 	call	33d74 <__malloc_lock>
   23070:	98800217 	ldw	r2,8(r19)
   23074:	14400117 	ldw	r17,4(r2)
   23078:	00bfff04 	movi	r2,-4
   2307c:	88a2703a 	and	r17,r17,r2
   23080:	8c21c83a 	sub	r16,r17,r16
   23084:	8403fbc4 	addi	r16,r16,4079
   23088:	8020d33a 	srli	r16,r16,12
   2308c:	0083ffc4 	movi	r2,4095
   23090:	843fffc4 	addi	r16,r16,-1
   23094:	8020933a 	slli	r16,r16,12
   23098:	1400060e 	bge	r2,r16,230b4 <_malloc_trim_r+0x70>
   2309c:	000b883a 	mov	r5,zero
   230a0:	9009883a 	mov	r4,r18
   230a4:	0024ad80 	call	24ad8 <_sbrk_r>
   230a8:	98c00217 	ldw	r3,8(r19)
   230ac:	1c47883a 	add	r3,r3,r17
   230b0:	10c00a26 	beq	r2,r3,230dc <_malloc_trim_r+0x98>
   230b4:	9009883a 	mov	r4,r18
   230b8:	0033d980 	call	33d98 <__malloc_unlock>
   230bc:	0005883a 	mov	r2,zero
   230c0:	dfc00417 	ldw	ra,16(sp)
   230c4:	dcc00317 	ldw	r19,12(sp)
   230c8:	dc800217 	ldw	r18,8(sp)
   230cc:	dc400117 	ldw	r17,4(sp)
   230d0:	dc000017 	ldw	r16,0(sp)
   230d4:	dec00504 	addi	sp,sp,20
   230d8:	f800283a 	ret
   230dc:	040bc83a 	sub	r5,zero,r16
   230e0:	9009883a 	mov	r4,r18
   230e4:	0024ad80 	call	24ad8 <_sbrk_r>
   230e8:	00ffffc4 	movi	r3,-1
   230ec:	10c00d26 	beq	r2,r3,23124 <_malloc_trim_r+0xe0>
   230f0:	00c00134 	movhi	r3,4
   230f4:	18e71a04 	addi	r3,r3,-25496
   230f8:	18800017 	ldw	r2,0(r3)
   230fc:	99000217 	ldw	r4,8(r19)
   23100:	8c23c83a 	sub	r17,r17,r16
   23104:	8c400054 	ori	r17,r17,1
   23108:	1421c83a 	sub	r16,r2,r16
   2310c:	24400115 	stw	r17,4(r4)
   23110:	9009883a 	mov	r4,r18
   23114:	1c000015 	stw	r16,0(r3)
   23118:	0033d980 	call	33d98 <__malloc_unlock>
   2311c:	00800044 	movi	r2,1
   23120:	003fe706 	br	230c0 <__alt_mem_sdram_controller_0+0xc00230c0>
   23124:	000b883a 	mov	r5,zero
   23128:	9009883a 	mov	r4,r18
   2312c:	0024ad80 	call	24ad8 <_sbrk_r>
   23130:	99000217 	ldw	r4,8(r19)
   23134:	014003c4 	movi	r5,15
   23138:	1107c83a 	sub	r3,r2,r4
   2313c:	28ffdd0e 	bge	r5,r3,230b4 <__alt_mem_sdram_controller_0+0xc00230b4>
   23140:	01400134 	movhi	r5,4
   23144:	29603e04 	addi	r5,r5,-32520
   23148:	29400017 	ldw	r5,0(r5)
   2314c:	18c00054 	ori	r3,r3,1
   23150:	20c00115 	stw	r3,4(r4)
   23154:	00c00134 	movhi	r3,4
   23158:	1145c83a 	sub	r2,r2,r5
   2315c:	18e71a04 	addi	r3,r3,-25496
   23160:	18800015 	stw	r2,0(r3)
   23164:	003fd306 	br	230b4 <__alt_mem_sdram_controller_0+0xc00230b4>

00023168 <_free_r>:
   23168:	28004126 	beq	r5,zero,23270 <_free_r+0x108>
   2316c:	defffd04 	addi	sp,sp,-12
   23170:	dc400115 	stw	r17,4(sp)
   23174:	dc000015 	stw	r16,0(sp)
   23178:	2023883a 	mov	r17,r4
   2317c:	2821883a 	mov	r16,r5
   23180:	dfc00215 	stw	ra,8(sp)
   23184:	0033d740 	call	33d74 <__malloc_lock>
   23188:	81ffff17 	ldw	r7,-4(r16)
   2318c:	00bfff84 	movi	r2,-2
   23190:	010000f4 	movhi	r4,3
   23194:	81bffe04 	addi	r6,r16,-8
   23198:	3884703a 	and	r2,r7,r2
   2319c:	211a9a04 	addi	r4,r4,27240
   231a0:	308b883a 	add	r5,r6,r2
   231a4:	2a400117 	ldw	r9,4(r5)
   231a8:	22000217 	ldw	r8,8(r4)
   231ac:	00ffff04 	movi	r3,-4
   231b0:	48c6703a 	and	r3,r9,r3
   231b4:	2a005726 	beq	r5,r8,23314 <_free_r+0x1ac>
   231b8:	28c00115 	stw	r3,4(r5)
   231bc:	39c0004c 	andi	r7,r7,1
   231c0:	3800091e 	bne	r7,zero,231e8 <_free_r+0x80>
   231c4:	823ffe17 	ldw	r8,-8(r16)
   231c8:	22400204 	addi	r9,r4,8
   231cc:	320dc83a 	sub	r6,r6,r8
   231d0:	31c00217 	ldw	r7,8(r6)
   231d4:	1205883a 	add	r2,r2,r8
   231d8:	3a406526 	beq	r7,r9,23370 <_free_r+0x208>
   231dc:	32000317 	ldw	r8,12(r6)
   231e0:	3a000315 	stw	r8,12(r7)
   231e4:	41c00215 	stw	r7,8(r8)
   231e8:	28cf883a 	add	r7,r5,r3
   231ec:	39c00117 	ldw	r7,4(r7)
   231f0:	39c0004c 	andi	r7,r7,1
   231f4:	38003a26 	beq	r7,zero,232e0 <_free_r+0x178>
   231f8:	10c00054 	ori	r3,r2,1
   231fc:	30c00115 	stw	r3,4(r6)
   23200:	3087883a 	add	r3,r6,r2
   23204:	18800015 	stw	r2,0(r3)
   23208:	00c07fc4 	movi	r3,511
   2320c:	18801936 	bltu	r3,r2,23274 <_free_r+0x10c>
   23210:	1004d0fa 	srli	r2,r2,3
   23214:	01c00044 	movi	r7,1
   23218:	21400117 	ldw	r5,4(r4)
   2321c:	10c00044 	addi	r3,r2,1
   23220:	18c7883a 	add	r3,r3,r3
   23224:	1005d0ba 	srai	r2,r2,2
   23228:	18c7883a 	add	r3,r3,r3
   2322c:	18c7883a 	add	r3,r3,r3
   23230:	1907883a 	add	r3,r3,r4
   23234:	3884983a 	sll	r2,r7,r2
   23238:	19c00017 	ldw	r7,0(r3)
   2323c:	1a3ffe04 	addi	r8,r3,-8
   23240:	1144b03a 	or	r2,r2,r5
   23244:	32000315 	stw	r8,12(r6)
   23248:	31c00215 	stw	r7,8(r6)
   2324c:	20800115 	stw	r2,4(r4)
   23250:	19800015 	stw	r6,0(r3)
   23254:	39800315 	stw	r6,12(r7)
   23258:	8809883a 	mov	r4,r17
   2325c:	dfc00217 	ldw	ra,8(sp)
   23260:	dc400117 	ldw	r17,4(sp)
   23264:	dc000017 	ldw	r16,0(sp)
   23268:	dec00304 	addi	sp,sp,12
   2326c:	0033d981 	jmpi	33d98 <__malloc_unlock>
   23270:	f800283a 	ret
   23274:	100ad27a 	srli	r5,r2,9
   23278:	00c00104 	movi	r3,4
   2327c:	19404a36 	bltu	r3,r5,233a8 <_free_r+0x240>
   23280:	100ad1ba 	srli	r5,r2,6
   23284:	28c00e44 	addi	r3,r5,57
   23288:	18c7883a 	add	r3,r3,r3
   2328c:	29400e04 	addi	r5,r5,56
   23290:	18c7883a 	add	r3,r3,r3
   23294:	18c7883a 	add	r3,r3,r3
   23298:	1909883a 	add	r4,r3,r4
   2329c:	20c00017 	ldw	r3,0(r4)
   232a0:	01c000f4 	movhi	r7,3
   232a4:	213ffe04 	addi	r4,r4,-8
   232a8:	39da9a04 	addi	r7,r7,27240
   232ac:	20c04426 	beq	r4,r3,233c0 <_free_r+0x258>
   232b0:	01ffff04 	movi	r7,-4
   232b4:	19400117 	ldw	r5,4(r3)
   232b8:	29ca703a 	and	r5,r5,r7
   232bc:	1140022e 	bgeu	r2,r5,232c8 <_free_r+0x160>
   232c0:	18c00217 	ldw	r3,8(r3)
   232c4:	20fffb1e 	bne	r4,r3,232b4 <__alt_mem_sdram_controller_0+0xc00232b4>
   232c8:	19000317 	ldw	r4,12(r3)
   232cc:	31000315 	stw	r4,12(r6)
   232d0:	30c00215 	stw	r3,8(r6)
   232d4:	21800215 	stw	r6,8(r4)
   232d8:	19800315 	stw	r6,12(r3)
   232dc:	003fde06 	br	23258 <__alt_mem_sdram_controller_0+0xc0023258>
   232e0:	29c00217 	ldw	r7,8(r5)
   232e4:	10c5883a 	add	r2,r2,r3
   232e8:	00c000f4 	movhi	r3,3
   232ec:	18da9c04 	addi	r3,r3,27248
   232f0:	38c03b26 	beq	r7,r3,233e0 <_free_r+0x278>
   232f4:	2a000317 	ldw	r8,12(r5)
   232f8:	11400054 	ori	r5,r2,1
   232fc:	3087883a 	add	r3,r6,r2
   23300:	3a000315 	stw	r8,12(r7)
   23304:	41c00215 	stw	r7,8(r8)
   23308:	31400115 	stw	r5,4(r6)
   2330c:	18800015 	stw	r2,0(r3)
   23310:	003fbd06 	br	23208 <__alt_mem_sdram_controller_0+0xc0023208>
   23314:	39c0004c 	andi	r7,r7,1
   23318:	10c5883a 	add	r2,r2,r3
   2331c:	3800071e 	bne	r7,zero,2333c <_free_r+0x1d4>
   23320:	81fffe17 	ldw	r7,-8(r16)
   23324:	31cdc83a 	sub	r6,r6,r7
   23328:	30c00317 	ldw	r3,12(r6)
   2332c:	31400217 	ldw	r5,8(r6)
   23330:	11c5883a 	add	r2,r2,r7
   23334:	28c00315 	stw	r3,12(r5)
   23338:	19400215 	stw	r5,8(r3)
   2333c:	10c00054 	ori	r3,r2,1
   23340:	30c00115 	stw	r3,4(r6)
   23344:	00c00134 	movhi	r3,4
   23348:	18e03f04 	addi	r3,r3,-32516
   2334c:	18c00017 	ldw	r3,0(r3)
   23350:	21800215 	stw	r6,8(r4)
   23354:	10ffc036 	bltu	r2,r3,23258 <__alt_mem_sdram_controller_0+0xc0023258>
   23358:	00800134 	movhi	r2,4
   2335c:	10a70b04 	addi	r2,r2,-25556
   23360:	11400017 	ldw	r5,0(r2)
   23364:	8809883a 	mov	r4,r17
   23368:	00230440 	call	23044 <_malloc_trim_r>
   2336c:	003fba06 	br	23258 <__alt_mem_sdram_controller_0+0xc0023258>
   23370:	28c9883a 	add	r4,r5,r3
   23374:	21000117 	ldw	r4,4(r4)
   23378:	2100004c 	andi	r4,r4,1
   2337c:	2000391e 	bne	r4,zero,23464 <_free_r+0x2fc>
   23380:	29c00217 	ldw	r7,8(r5)
   23384:	29000317 	ldw	r4,12(r5)
   23388:	1885883a 	add	r2,r3,r2
   2338c:	10c00054 	ori	r3,r2,1
   23390:	39000315 	stw	r4,12(r7)
   23394:	21c00215 	stw	r7,8(r4)
   23398:	30c00115 	stw	r3,4(r6)
   2339c:	308d883a 	add	r6,r6,r2
   233a0:	30800015 	stw	r2,0(r6)
   233a4:	003fac06 	br	23258 <__alt_mem_sdram_controller_0+0xc0023258>
   233a8:	00c00504 	movi	r3,20
   233ac:	19401536 	bltu	r3,r5,23404 <_free_r+0x29c>
   233b0:	28c01704 	addi	r3,r5,92
   233b4:	18c7883a 	add	r3,r3,r3
   233b8:	294016c4 	addi	r5,r5,91
   233bc:	003fb406 	br	23290 <__alt_mem_sdram_controller_0+0xc0023290>
   233c0:	280bd0ba 	srai	r5,r5,2
   233c4:	00c00044 	movi	r3,1
   233c8:	38800117 	ldw	r2,4(r7)
   233cc:	194a983a 	sll	r5,r3,r5
   233d0:	2007883a 	mov	r3,r4
   233d4:	2884b03a 	or	r2,r5,r2
   233d8:	38800115 	stw	r2,4(r7)
   233dc:	003fbb06 	br	232cc <__alt_mem_sdram_controller_0+0xc00232cc>
   233e0:	21800515 	stw	r6,20(r4)
   233e4:	21800415 	stw	r6,16(r4)
   233e8:	10c00054 	ori	r3,r2,1
   233ec:	31c00315 	stw	r7,12(r6)
   233f0:	31c00215 	stw	r7,8(r6)
   233f4:	30c00115 	stw	r3,4(r6)
   233f8:	308d883a 	add	r6,r6,r2
   233fc:	30800015 	stw	r2,0(r6)
   23400:	003f9506 	br	23258 <__alt_mem_sdram_controller_0+0xc0023258>
   23404:	00c01504 	movi	r3,84
   23408:	19400536 	bltu	r3,r5,23420 <_free_r+0x2b8>
   2340c:	100ad33a 	srli	r5,r2,12
   23410:	28c01bc4 	addi	r3,r5,111
   23414:	18c7883a 	add	r3,r3,r3
   23418:	29401b84 	addi	r5,r5,110
   2341c:	003f9c06 	br	23290 <__alt_mem_sdram_controller_0+0xc0023290>
   23420:	00c05504 	movi	r3,340
   23424:	19400536 	bltu	r3,r5,2343c <_free_r+0x2d4>
   23428:	100ad3fa 	srli	r5,r2,15
   2342c:	28c01e04 	addi	r3,r5,120
   23430:	18c7883a 	add	r3,r3,r3
   23434:	29401dc4 	addi	r5,r5,119
   23438:	003f9506 	br	23290 <__alt_mem_sdram_controller_0+0xc0023290>
   2343c:	00c15504 	movi	r3,1364
   23440:	19400536 	bltu	r3,r5,23458 <_free_r+0x2f0>
   23444:	100ad4ba 	srli	r5,r2,18
   23448:	28c01f44 	addi	r3,r5,125
   2344c:	18c7883a 	add	r3,r3,r3
   23450:	29401f04 	addi	r5,r5,124
   23454:	003f8e06 	br	23290 <__alt_mem_sdram_controller_0+0xc0023290>
   23458:	00c03f84 	movi	r3,254
   2345c:	01401f84 	movi	r5,126
   23460:	003f8b06 	br	23290 <__alt_mem_sdram_controller_0+0xc0023290>
   23464:	10c00054 	ori	r3,r2,1
   23468:	30c00115 	stw	r3,4(r6)
   2346c:	308d883a 	add	r6,r6,r2
   23470:	30800015 	stw	r2,0(r6)
   23474:	003f7806 	br	23258 <__alt_mem_sdram_controller_0+0xc0023258>

00023478 <_fseek_r>:
   23478:	00234981 	jmpi	23498 <_fseeko_r>

0002347c <fseek>:
   2347c:	00800134 	movhi	r2,4
   23480:	10a03d04 	addi	r2,r2,-32524
   23484:	300f883a 	mov	r7,r6
   23488:	280d883a 	mov	r6,r5
   2348c:	200b883a 	mov	r5,r4
   23490:	11000017 	ldw	r4,0(r2)
   23494:	00234981 	jmpi	23498 <_fseeko_r>

00023498 <_fseeko_r>:
   23498:	deffe804 	addi	sp,sp,-96
   2349c:	dd401415 	stw	r21,80(sp)
   234a0:	dc801115 	stw	r18,68(sp)
   234a4:	dc401015 	stw	r17,64(sp)
   234a8:	dc000f15 	stw	r16,60(sp)
   234ac:	dfc01715 	stw	ra,92(sp)
   234b0:	ddc01615 	stw	r23,88(sp)
   234b4:	dd801515 	stw	r22,84(sp)
   234b8:	dd001315 	stw	r20,76(sp)
   234bc:	dcc01215 	stw	r19,72(sp)
   234c0:	2023883a 	mov	r17,r4
   234c4:	2821883a 	mov	r16,r5
   234c8:	302b883a 	mov	r21,r6
   234cc:	3825883a 	mov	r18,r7
   234d0:	20000226 	beq	r4,zero,234dc <_fseeko_r+0x44>
   234d4:	20800e17 	ldw	r2,56(r4)
   234d8:	10005a26 	beq	r2,zero,23644 <_fseeko_r+0x1ac>
   234dc:	8080030b 	ldhu	r2,12(r16)
   234e0:	00c04204 	movi	r3,264
   234e4:	1080420c 	andi	r2,r2,264
   234e8:	10c05b26 	beq	r2,r3,23658 <_fseeko_r+0x1c0>
   234ec:	85000a17 	ldw	r20,40(r16)
   234f0:	a000f626 	beq	r20,zero,238cc <_fseeko_r+0x434>
   234f4:	00800044 	movi	r2,1
   234f8:	90803e26 	beq	r18,r2,235f4 <_fseeko_r+0x15c>
   234fc:	00800084 	movi	r2,2
   23500:	90801026 	beq	r18,r2,23544 <_fseeko_r+0xac>
   23504:	90000f26 	beq	r18,zero,23544 <_fseeko_r+0xac>
   23508:	00800584 	movi	r2,22
   2350c:	88800015 	stw	r2,0(r17)
   23510:	04ffffc4 	movi	r19,-1
   23514:	9805883a 	mov	r2,r19
   23518:	dfc01717 	ldw	ra,92(sp)
   2351c:	ddc01617 	ldw	r23,88(sp)
   23520:	dd801517 	ldw	r22,84(sp)
   23524:	dd401417 	ldw	r21,80(sp)
   23528:	dd001317 	ldw	r20,76(sp)
   2352c:	dcc01217 	ldw	r19,72(sp)
   23530:	dc801117 	ldw	r18,68(sp)
   23534:	dc401017 	ldw	r17,64(sp)
   23538:	dc000f17 	ldw	r16,60(sp)
   2353c:	dec01804 	addi	sp,sp,96
   23540:	f800283a 	ret
   23544:	80800417 	ldw	r2,16(r16)
   23548:	002f883a 	mov	r23,zero
   2354c:	0027883a 	mov	r19,zero
   23550:	1000cb26 	beq	r2,zero,23880 <_fseeko_r+0x3e8>
   23554:	8080030b 	ldhu	r2,12(r16)
   23558:	10c2068c 	andi	r3,r2,2074
   2355c:	1800071e 	bne	r3,zero,2357c <_fseeko_r+0xe4>
   23560:	10c1000c 	andi	r3,r2,1024
   23564:	1800451e 	bne	r3,zero,2367c <_fseeko_r+0x1e4>
   23568:	00c000b4 	movhi	r3,2
   2356c:	18d33204 	addi	r3,r3,19656
   23570:	a0c0b726 	beq	r20,r3,23850 <_fseeko_r+0x3b8>
   23574:	10820014 	ori	r2,r2,2048
   23578:	8080030d 	sth	r2,12(r16)
   2357c:	800b883a 	mov	r5,r16
   23580:	8809883a 	mov	r4,r17
   23584:	0022a640 	call	22a64 <_fflush_r>
   23588:	1027883a 	mov	r19,r2
   2358c:	103fe01e 	bne	r2,zero,23510 <__alt_mem_sdram_controller_0+0xc0023510>
   23590:	81400717 	ldw	r5,28(r16)
   23594:	900f883a 	mov	r7,r18
   23598:	a80d883a 	mov	r6,r21
   2359c:	8809883a 	mov	r4,r17
   235a0:	a03ee83a 	callr	r20
   235a4:	00ffffc4 	movi	r3,-1
   235a8:	10ffd926 	beq	r2,r3,23510 <__alt_mem_sdram_controller_0+0xc0023510>
   235ac:	81400c17 	ldw	r5,48(r16)
   235b0:	28000526 	beq	r5,zero,235c8 <_fseeko_r+0x130>
   235b4:	80801004 	addi	r2,r16,64
   235b8:	28800226 	beq	r5,r2,235c4 <_fseeko_r+0x12c>
   235bc:	8809883a 	mov	r4,r17
   235c0:	00231680 	call	23168 <_free_r>
   235c4:	80000c15 	stw	zero,48(r16)
   235c8:	8080030b 	ldhu	r2,12(r16)
   235cc:	80c00417 	ldw	r3,16(r16)
   235d0:	80000115 	stw	zero,4(r16)
   235d4:	10bdf7cc 	andi	r2,r2,63455
   235d8:	80c00015 	stw	r3,0(r16)
   235dc:	8080030d 	sth	r2,12(r16)
   235e0:	01800204 	movi	r6,8
   235e4:	000b883a 	mov	r5,zero
   235e8:	81001704 	addi	r4,r16,92
   235ec:	00245a40 	call	245a4 <memset>
   235f0:	003fc806 	br	23514 <__alt_mem_sdram_controller_0+0xc0023514>
   235f4:	800b883a 	mov	r5,r16
   235f8:	8809883a 	mov	r4,r17
   235fc:	0022a640 	call	22a64 <_fflush_r>
   23600:	8080030b 	ldhu	r2,12(r16)
   23604:	10c4000c 	andi	r3,r2,4096
   23608:	18008726 	beq	r3,zero,23828 <_fseeko_r+0x390>
   2360c:	84c01417 	ldw	r19,80(r16)
   23610:	10c0010c 	andi	r3,r2,4
   23614:	1800431e 	bne	r3,zero,23724 <_fseeko_r+0x28c>
   23618:	1080020c 	andi	r2,r2,8
   2361c:	10008026 	beq	r2,zero,23820 <_fseeko_r+0x388>
   23620:	80c00017 	ldw	r3,0(r16)
   23624:	80800417 	ldw	r2,16(r16)
   23628:	18000226 	beq	r3,zero,23634 <_fseeko_r+0x19c>
   2362c:	1887c83a 	sub	r3,r3,r2
   23630:	98e7883a 	add	r19,r19,r3
   23634:	aceb883a 	add	r21,r21,r19
   23638:	05c00044 	movi	r23,1
   2363c:	0025883a 	mov	r18,zero
   23640:	003fc306 	br	23550 <__alt_mem_sdram_controller_0+0xc0023550>
   23644:	0022e400 	call	22e40 <__sinit>
   23648:	8080030b 	ldhu	r2,12(r16)
   2364c:	00c04204 	movi	r3,264
   23650:	1080420c 	andi	r2,r2,264
   23654:	10ffa51e 	bne	r2,r3,234ec <__alt_mem_sdram_controller_0+0xc00234ec>
   23658:	800b883a 	mov	r5,r16
   2365c:	8809883a 	mov	r4,r17
   23660:	0022a640 	call	22a64 <_fflush_r>
   23664:	003fa106 	br	234ec <__alt_mem_sdram_controller_0+0xc00234ec>
   23668:	8080030b 	ldhu	r2,12(r16)
   2366c:	00c10004 	movi	r3,1024
   23670:	80c01315 	stw	r3,76(r16)
   23674:	10c4b03a 	or	r2,r2,r3
   23678:	8080030d 	sth	r2,12(r16)
   2367c:	9000311e 	bne	r18,zero,23744 <_fseeko_r+0x2ac>
   23680:	a82d883a 	mov	r22,r21
   23684:	b800371e 	bne	r23,zero,23764 <_fseeko_r+0x2cc>
   23688:	8080030b 	ldhu	r2,12(r16)
   2368c:	1084000c 	andi	r2,r2,4096
   23690:	10007f26 	beq	r2,zero,23890 <_fseeko_r+0x3f8>
   23694:	80801417 	ldw	r2,80(r16)
   23698:	81800117 	ldw	r6,4(r16)
   2369c:	81400c17 	ldw	r5,48(r16)
   236a0:	11a7c83a 	sub	r19,r2,r6
   236a4:	28008226 	beq	r5,zero,238b0 <_fseeko_r+0x418>
   236a8:	81c00f17 	ldw	r7,60(r16)
   236ac:	99e7c83a 	sub	r19,r19,r7
   236b0:	81000e17 	ldw	r4,56(r16)
   236b4:	80800417 	ldw	r2,16(r16)
   236b8:	99a7883a 	add	r19,r19,r6
   236bc:	2087c83a 	sub	r3,r4,r2
   236c0:	98e7c83a 	sub	r19,r19,r3
   236c4:	38c7883a 	add	r3,r7,r3
   236c8:	b4c02b16 	blt	r22,r19,23778 <_fseeko_r+0x2e0>
   236cc:	98c9883a 	add	r4,r19,r3
   236d0:	b100292e 	bgeu	r22,r4,23778 <_fseeko_r+0x2e0>
   236d4:	b4e7c83a 	sub	r19,r22,r19
   236d8:	14c5883a 	add	r2,r2,r19
   236dc:	1ce7c83a 	sub	r19,r3,r19
   236e0:	80800015 	stw	r2,0(r16)
   236e4:	84c00115 	stw	r19,4(r16)
   236e8:	28000526 	beq	r5,zero,23700 <_fseeko_r+0x268>
   236ec:	80801004 	addi	r2,r16,64
   236f0:	28800226 	beq	r5,r2,236fc <_fseeko_r+0x264>
   236f4:	8809883a 	mov	r4,r17
   236f8:	00231680 	call	23168 <_free_r>
   236fc:	80000c15 	stw	zero,48(r16)
   23700:	8080030b 	ldhu	r2,12(r16)
   23704:	01800204 	movi	r6,8
   23708:	000b883a 	mov	r5,zero
   2370c:	10bff7cc 	andi	r2,r2,65503
   23710:	8080030d 	sth	r2,12(r16)
   23714:	81001704 	addi	r4,r16,92
   23718:	00245a40 	call	245a4 <memset>
   2371c:	0027883a 	mov	r19,zero
   23720:	003f7c06 	br	23514 <__alt_mem_sdram_controller_0+0xc0023514>
   23724:	80c00117 	ldw	r3,4(r16)
   23728:	80800c17 	ldw	r2,48(r16)
   2372c:	98e7c83a 	sub	r19,r19,r3
   23730:	10003b26 	beq	r2,zero,23820 <_fseeko_r+0x388>
   23734:	80c00f17 	ldw	r3,60(r16)
   23738:	80800417 	ldw	r2,16(r16)
   2373c:	98e7c83a 	sub	r19,r19,r3
   23740:	003fbc06 	br	23634 <__alt_mem_sdram_controller_0+0xc0023634>
   23744:	8140038f 	ldh	r5,14(r16)
   23748:	d80d883a 	mov	r6,sp
   2374c:	8809883a 	mov	r4,r17
   23750:	00238f80 	call	238f8 <_fstat_r>
   23754:	103f891e 	bne	r2,zero,2357c <__alt_mem_sdram_controller_0+0xc002357c>
   23758:	dd800417 	ldw	r22,16(sp)
   2375c:	adad883a 	add	r22,r21,r22
   23760:	b83fc926 	beq	r23,zero,23688 <__alt_mem_sdram_controller_0+0xc0023688>
   23764:	81400c17 	ldw	r5,48(r16)
   23768:	81800117 	ldw	r6,4(r16)
   2376c:	28005026 	beq	r5,zero,238b0 <_fseeko_r+0x418>
   23770:	81c00f17 	ldw	r7,60(r16)
   23774:	003fce06 	br	236b0 <__alt_mem_sdram_controller_0+0xc00236b0>
   23778:	84c01317 	ldw	r19,76(r16)
   2377c:	81400717 	ldw	r5,28(r16)
   23780:	000f883a 	mov	r7,zero
   23784:	04e7c83a 	sub	r19,zero,r19
   23788:	9da6703a 	and	r19,r19,r22
   2378c:	980d883a 	mov	r6,r19
   23790:	8809883a 	mov	r4,r17
   23794:	a03ee83a 	callr	r20
   23798:	00ffffc4 	movi	r3,-1
   2379c:	10ff7726 	beq	r2,r3,2357c <__alt_mem_sdram_controller_0+0xc002357c>
   237a0:	80800417 	ldw	r2,16(r16)
   237a4:	81400c17 	ldw	r5,48(r16)
   237a8:	80000115 	stw	zero,4(r16)
   237ac:	80800015 	stw	r2,0(r16)
   237b0:	28000526 	beq	r5,zero,237c8 <_fseeko_r+0x330>
   237b4:	80801004 	addi	r2,r16,64
   237b8:	28800226 	beq	r5,r2,237c4 <_fseeko_r+0x32c>
   237bc:	8809883a 	mov	r4,r17
   237c0:	00231680 	call	23168 <_free_r>
   237c4:	80000c15 	stw	zero,48(r16)
   237c8:	8080030b 	ldhu	r2,12(r16)
   237cc:	b4e7c83a 	sub	r19,r22,r19
   237d0:	10bff7cc 	andi	r2,r2,65503
   237d4:	8080030d 	sth	r2,12(r16)
   237d8:	98000b26 	beq	r19,zero,23808 <_fseeko_r+0x370>
   237dc:	800b883a 	mov	r5,r16
   237e0:	8809883a 	mov	r4,r17
   237e4:	00249040 	call	24904 <__srefill_r>
   237e8:	103f641e 	bne	r2,zero,2357c <__alt_mem_sdram_controller_0+0xc002357c>
   237ec:	80800117 	ldw	r2,4(r16)
   237f0:	14ff6236 	bltu	r2,r19,2357c <__alt_mem_sdram_controller_0+0xc002357c>
   237f4:	80c00017 	ldw	r3,0(r16)
   237f8:	14c5c83a 	sub	r2,r2,r19
   237fc:	80800115 	stw	r2,4(r16)
   23800:	1ce7883a 	add	r19,r3,r19
   23804:	84c00015 	stw	r19,0(r16)
   23808:	01800204 	movi	r6,8
   2380c:	000b883a 	mov	r5,zero
   23810:	81001704 	addi	r4,r16,92
   23814:	00245a40 	call	245a4 <memset>
   23818:	0027883a 	mov	r19,zero
   2381c:	003f3d06 	br	23514 <__alt_mem_sdram_controller_0+0xc0023514>
   23820:	80800417 	ldw	r2,16(r16)
   23824:	003f8306 	br	23634 <__alt_mem_sdram_controller_0+0xc0023634>
   23828:	81400717 	ldw	r5,28(r16)
   2382c:	900f883a 	mov	r7,r18
   23830:	000d883a 	mov	r6,zero
   23834:	8809883a 	mov	r4,r17
   23838:	a03ee83a 	callr	r20
   2383c:	1027883a 	mov	r19,r2
   23840:	00bfffc4 	movi	r2,-1
   23844:	98bf3226 	beq	r19,r2,23510 <__alt_mem_sdram_controller_0+0xc0023510>
   23848:	8080030b 	ldhu	r2,12(r16)
   2384c:	003f7006 	br	23610 <__alt_mem_sdram_controller_0+0xc0023610>
   23850:	8140038f 	ldh	r5,14(r16)
   23854:	283f4716 	blt	r5,zero,23574 <__alt_mem_sdram_controller_0+0xc0023574>
   23858:	d80d883a 	mov	r6,sp
   2385c:	8809883a 	mov	r4,r17
   23860:	00238f80 	call	238f8 <_fstat_r>
   23864:	1000041e 	bne	r2,zero,23878 <_fseeko_r+0x3e0>
   23868:	d8800117 	ldw	r2,4(sp)
   2386c:	00e00014 	movui	r3,32768
   23870:	10bc000c 	andi	r2,r2,61440
   23874:	10ff7c26 	beq	r2,r3,23668 <__alt_mem_sdram_controller_0+0xc0023668>
   23878:	8080030b 	ldhu	r2,12(r16)
   2387c:	003f3d06 	br	23574 <__alt_mem_sdram_controller_0+0xc0023574>
   23880:	800b883a 	mov	r5,r16
   23884:	8809883a 	mov	r4,r17
   23888:	0023bdc0 	call	23bdc <__smakebuf_r>
   2388c:	003f3106 	br	23554 <__alt_mem_sdram_controller_0+0xc0023554>
   23890:	81400717 	ldw	r5,28(r16)
   23894:	01c00044 	movi	r7,1
   23898:	000d883a 	mov	r6,zero
   2389c:	8809883a 	mov	r4,r17
   238a0:	a03ee83a 	callr	r20
   238a4:	00ffffc4 	movi	r3,-1
   238a8:	10ff7b1e 	bne	r2,r3,23698 <__alt_mem_sdram_controller_0+0xc0023698>
   238ac:	003f3306 	br	2357c <__alt_mem_sdram_controller_0+0xc002357c>
   238b0:	80c00017 	ldw	r3,0(r16)
   238b4:	80800417 	ldw	r2,16(r16)
   238b8:	000b883a 	mov	r5,zero
   238bc:	1887c83a 	sub	r3,r3,r2
   238c0:	98e7c83a 	sub	r19,r19,r3
   238c4:	30c7883a 	add	r3,r6,r3
   238c8:	003f7f06 	br	236c8 <__alt_mem_sdram_controller_0+0xc00236c8>
   238cc:	00800744 	movi	r2,29
   238d0:	88800015 	stw	r2,0(r17)
   238d4:	04ffffc4 	movi	r19,-1
   238d8:	003f0e06 	br	23514 <__alt_mem_sdram_controller_0+0xc0023514>

000238dc <fseeko>:
   238dc:	00800134 	movhi	r2,4
   238e0:	10a03d04 	addi	r2,r2,-32524
   238e4:	300f883a 	mov	r7,r6
   238e8:	280d883a 	mov	r6,r5
   238ec:	200b883a 	mov	r5,r4
   238f0:	11000017 	ldw	r4,0(r2)
   238f4:	00234981 	jmpi	23498 <_fseeko_r>

000238f8 <_fstat_r>:
   238f8:	defffd04 	addi	sp,sp,-12
   238fc:	2805883a 	mov	r2,r5
   23900:	dc000015 	stw	r16,0(sp)
   23904:	04000134 	movhi	r16,4
   23908:	dc400115 	stw	r17,4(sp)
   2390c:	84270804 	addi	r16,r16,-25568
   23910:	2023883a 	mov	r17,r4
   23914:	300b883a 	mov	r5,r6
   23918:	1009883a 	mov	r4,r2
   2391c:	dfc00215 	stw	ra,8(sp)
   23920:	80000015 	stw	zero,0(r16)
   23924:	00335ec0 	call	335ec <fstat>
   23928:	00ffffc4 	movi	r3,-1
   2392c:	10c00526 	beq	r2,r3,23944 <_fstat_r+0x4c>
   23930:	dfc00217 	ldw	ra,8(sp)
   23934:	dc400117 	ldw	r17,4(sp)
   23938:	dc000017 	ldw	r16,0(sp)
   2393c:	dec00304 	addi	sp,sp,12
   23940:	f800283a 	ret
   23944:	80c00017 	ldw	r3,0(r16)
   23948:	183ff926 	beq	r3,zero,23930 <__alt_mem_sdram_controller_0+0xc0023930>
   2394c:	88c00015 	stw	r3,0(r17)
   23950:	003ff706 	br	23930 <__alt_mem_sdram_controller_0+0xc0023930>

00023954 <_fwalk>:
   23954:	defff704 	addi	sp,sp,-36
   23958:	dd000415 	stw	r20,16(sp)
   2395c:	dfc00815 	stw	ra,32(sp)
   23960:	ddc00715 	stw	r23,28(sp)
   23964:	dd800615 	stw	r22,24(sp)
   23968:	dd400515 	stw	r21,20(sp)
   2396c:	dcc00315 	stw	r19,12(sp)
   23970:	dc800215 	stw	r18,8(sp)
   23974:	dc400115 	stw	r17,4(sp)
   23978:	dc000015 	stw	r16,0(sp)
   2397c:	2500b804 	addi	r20,r4,736
   23980:	a0002326 	beq	r20,zero,23a10 <_fwalk+0xbc>
   23984:	282b883a 	mov	r21,r5
   23988:	002f883a 	mov	r23,zero
   2398c:	05800044 	movi	r22,1
   23990:	04ffffc4 	movi	r19,-1
   23994:	a4400117 	ldw	r17,4(r20)
   23998:	a4800217 	ldw	r18,8(r20)
   2399c:	8c7fffc4 	addi	r17,r17,-1
   239a0:	88000d16 	blt	r17,zero,239d8 <_fwalk+0x84>
   239a4:	94000304 	addi	r16,r18,12
   239a8:	94800384 	addi	r18,r18,14
   239ac:	8080000b 	ldhu	r2,0(r16)
   239b0:	8c7fffc4 	addi	r17,r17,-1
   239b4:	813ffd04 	addi	r4,r16,-12
   239b8:	b080042e 	bgeu	r22,r2,239cc <_fwalk+0x78>
   239bc:	9080000f 	ldh	r2,0(r18)
   239c0:	14c00226 	beq	r2,r19,239cc <_fwalk+0x78>
   239c4:	a83ee83a 	callr	r21
   239c8:	b8aeb03a 	or	r23,r23,r2
   239cc:	84001a04 	addi	r16,r16,104
   239d0:	94801a04 	addi	r18,r18,104
   239d4:	8cfff51e 	bne	r17,r19,239ac <__alt_mem_sdram_controller_0+0xc00239ac>
   239d8:	a5000017 	ldw	r20,0(r20)
   239dc:	a03fed1e 	bne	r20,zero,23994 <__alt_mem_sdram_controller_0+0xc0023994>
   239e0:	b805883a 	mov	r2,r23
   239e4:	dfc00817 	ldw	ra,32(sp)
   239e8:	ddc00717 	ldw	r23,28(sp)
   239ec:	dd800617 	ldw	r22,24(sp)
   239f0:	dd400517 	ldw	r21,20(sp)
   239f4:	dd000417 	ldw	r20,16(sp)
   239f8:	dcc00317 	ldw	r19,12(sp)
   239fc:	dc800217 	ldw	r18,8(sp)
   23a00:	dc400117 	ldw	r17,4(sp)
   23a04:	dc000017 	ldw	r16,0(sp)
   23a08:	dec00904 	addi	sp,sp,36
   23a0c:	f800283a 	ret
   23a10:	002f883a 	mov	r23,zero
   23a14:	003ff206 	br	239e0 <__alt_mem_sdram_controller_0+0xc00239e0>

00023a18 <_fwalk_reent>:
   23a18:	defff704 	addi	sp,sp,-36
   23a1c:	dd000415 	stw	r20,16(sp)
   23a20:	dfc00815 	stw	ra,32(sp)
   23a24:	ddc00715 	stw	r23,28(sp)
   23a28:	dd800615 	stw	r22,24(sp)
   23a2c:	dd400515 	stw	r21,20(sp)
   23a30:	dcc00315 	stw	r19,12(sp)
   23a34:	dc800215 	stw	r18,8(sp)
   23a38:	dc400115 	stw	r17,4(sp)
   23a3c:	dc000015 	stw	r16,0(sp)
   23a40:	2500b804 	addi	r20,r4,736
   23a44:	a0002326 	beq	r20,zero,23ad4 <_fwalk_reent+0xbc>
   23a48:	282b883a 	mov	r21,r5
   23a4c:	2027883a 	mov	r19,r4
   23a50:	002f883a 	mov	r23,zero
   23a54:	05800044 	movi	r22,1
   23a58:	04bfffc4 	movi	r18,-1
   23a5c:	a4400117 	ldw	r17,4(r20)
   23a60:	a4000217 	ldw	r16,8(r20)
   23a64:	8c7fffc4 	addi	r17,r17,-1
   23a68:	88000c16 	blt	r17,zero,23a9c <_fwalk_reent+0x84>
   23a6c:	84000304 	addi	r16,r16,12
   23a70:	8080000b 	ldhu	r2,0(r16)
   23a74:	8c7fffc4 	addi	r17,r17,-1
   23a78:	817ffd04 	addi	r5,r16,-12
   23a7c:	b080052e 	bgeu	r22,r2,23a94 <_fwalk_reent+0x7c>
   23a80:	8080008f 	ldh	r2,2(r16)
   23a84:	9809883a 	mov	r4,r19
   23a88:	14800226 	beq	r2,r18,23a94 <_fwalk_reent+0x7c>
   23a8c:	a83ee83a 	callr	r21
   23a90:	b8aeb03a 	or	r23,r23,r2
   23a94:	84001a04 	addi	r16,r16,104
   23a98:	8cbff51e 	bne	r17,r18,23a70 <__alt_mem_sdram_controller_0+0xc0023a70>
   23a9c:	a5000017 	ldw	r20,0(r20)
   23aa0:	a03fee1e 	bne	r20,zero,23a5c <__alt_mem_sdram_controller_0+0xc0023a5c>
   23aa4:	b805883a 	mov	r2,r23
   23aa8:	dfc00817 	ldw	ra,32(sp)
   23aac:	ddc00717 	ldw	r23,28(sp)
   23ab0:	dd800617 	ldw	r22,24(sp)
   23ab4:	dd400517 	ldw	r21,20(sp)
   23ab8:	dd000417 	ldw	r20,16(sp)
   23abc:	dcc00317 	ldw	r19,12(sp)
   23ac0:	dc800217 	ldw	r18,8(sp)
   23ac4:	dc400117 	ldw	r17,4(sp)
   23ac8:	dc000017 	ldw	r16,0(sp)
   23acc:	dec00904 	addi	sp,sp,36
   23ad0:	f800283a 	ret
   23ad4:	002f883a 	mov	r23,zero
   23ad8:	003ff206 	br	23aa4 <__alt_mem_sdram_controller_0+0xc0023aa4>

00023adc <_fwrite_r>:
   23adc:	defff504 	addi	sp,sp,-44
   23ae0:	dc800815 	stw	r18,32(sp)
   23ae4:	39a5383a 	mul	r18,r7,r6
   23ae8:	d8800304 	addi	r2,sp,12
   23aec:	d8800015 	stw	r2,0(sp)
   23af0:	00800044 	movi	r2,1
   23af4:	dcc00915 	stw	r19,36(sp)
   23af8:	dc400715 	stw	r17,28(sp)
   23afc:	dc000615 	stw	r16,24(sp)
   23b00:	d9400315 	stw	r5,12(sp)
   23b04:	dfc00a15 	stw	ra,40(sp)
   23b08:	dc800415 	stw	r18,16(sp)
   23b0c:	dc800215 	stw	r18,8(sp)
   23b10:	d8800115 	stw	r2,4(sp)
   23b14:	3027883a 	mov	r19,r6
   23b18:	3821883a 	mov	r16,r7
   23b1c:	2023883a 	mov	r17,r4
   23b20:	d9400b17 	ldw	r5,44(sp)
   23b24:	20000226 	beq	r4,zero,23b30 <_fwrite_r+0x54>
   23b28:	20800e17 	ldw	r2,56(r4)
   23b2c:	10001a26 	beq	r2,zero,23b98 <_fwrite_r+0xbc>
   23b30:	2880030b 	ldhu	r2,12(r5)
   23b34:	10c8000c 	andi	r3,r2,8192
   23b38:	1800061e 	bne	r3,zero,23b54 <_fwrite_r+0x78>
   23b3c:	29001917 	ldw	r4,100(r5)
   23b40:	00f7ffc4 	movi	r3,-8193
   23b44:	10880014 	ori	r2,r2,8192
   23b48:	20c6703a 	and	r3,r4,r3
   23b4c:	2880030d 	sth	r2,12(r5)
   23b50:	28c01915 	stw	r3,100(r5)
   23b54:	d80d883a 	mov	r6,sp
   23b58:	8809883a 	mov	r4,r17
   23b5c:	002ae280 	call	2ae28 <__sfvwrite_r>
   23b60:	10000b26 	beq	r2,zero,23b90 <_fwrite_r+0xb4>
   23b64:	d9000217 	ldw	r4,8(sp)
   23b68:	980b883a 	mov	r5,r19
   23b6c:	9109c83a 	sub	r4,r18,r4
   23b70:	002260c0 	call	2260c <__udivsi3>
   23b74:	dfc00a17 	ldw	ra,40(sp)
   23b78:	dcc00917 	ldw	r19,36(sp)
   23b7c:	dc800817 	ldw	r18,32(sp)
   23b80:	dc400717 	ldw	r17,28(sp)
   23b84:	dc000617 	ldw	r16,24(sp)
   23b88:	dec00b04 	addi	sp,sp,44
   23b8c:	f800283a 	ret
   23b90:	8005883a 	mov	r2,r16
   23b94:	003ff706 	br	23b74 <__alt_mem_sdram_controller_0+0xc0023b74>
   23b98:	d9400515 	stw	r5,20(sp)
   23b9c:	0022e400 	call	22e40 <__sinit>
   23ba0:	d9400517 	ldw	r5,20(sp)
   23ba4:	003fe206 	br	23b30 <__alt_mem_sdram_controller_0+0xc0023b30>

00023ba8 <fwrite>:
   23ba8:	defffe04 	addi	sp,sp,-8
   23bac:	00800134 	movhi	r2,4
   23bb0:	d9c00015 	stw	r7,0(sp)
   23bb4:	10a03d04 	addi	r2,r2,-32524
   23bb8:	300f883a 	mov	r7,r6
   23bbc:	280d883a 	mov	r6,r5
   23bc0:	200b883a 	mov	r5,r4
   23bc4:	11000017 	ldw	r4,0(r2)
   23bc8:	dfc00115 	stw	ra,4(sp)
   23bcc:	0023adc0 	call	23adc <_fwrite_r>
   23bd0:	dfc00117 	ldw	ra,4(sp)
   23bd4:	dec00204 	addi	sp,sp,8
   23bd8:	f800283a 	ret

00023bdc <__smakebuf_r>:
   23bdc:	2880030b 	ldhu	r2,12(r5)
   23be0:	10c0008c 	andi	r3,r2,2
   23be4:	1800411e 	bne	r3,zero,23cec <__smakebuf_r+0x110>
   23be8:	deffec04 	addi	sp,sp,-80
   23bec:	dc000f15 	stw	r16,60(sp)
   23bf0:	2821883a 	mov	r16,r5
   23bf4:	2940038f 	ldh	r5,14(r5)
   23bf8:	dc401015 	stw	r17,64(sp)
   23bfc:	dfc01315 	stw	ra,76(sp)
   23c00:	dcc01215 	stw	r19,72(sp)
   23c04:	dc801115 	stw	r18,68(sp)
   23c08:	2023883a 	mov	r17,r4
   23c0c:	28001c16 	blt	r5,zero,23c80 <__smakebuf_r+0xa4>
   23c10:	d80d883a 	mov	r6,sp
   23c14:	00238f80 	call	238f8 <_fstat_r>
   23c18:	10001816 	blt	r2,zero,23c7c <__smakebuf_r+0xa0>
   23c1c:	d8800117 	ldw	r2,4(sp)
   23c20:	00e00014 	movui	r3,32768
   23c24:	10bc000c 	andi	r2,r2,61440
   23c28:	14c80020 	cmpeqi	r19,r2,8192
   23c2c:	10c03726 	beq	r2,r3,23d0c <__smakebuf_r+0x130>
   23c30:	80c0030b 	ldhu	r3,12(r16)
   23c34:	18c20014 	ori	r3,r3,2048
   23c38:	80c0030d 	sth	r3,12(r16)
   23c3c:	00c80004 	movi	r3,8192
   23c40:	10c0521e 	bne	r2,r3,23d8c <__smakebuf_r+0x1b0>
   23c44:	8140038f 	ldh	r5,14(r16)
   23c48:	8809883a 	mov	r4,r17
   23c4c:	002b3400 	call	2b340 <_isatty_r>
   23c50:	10004c26 	beq	r2,zero,23d84 <__smakebuf_r+0x1a8>
   23c54:	8080030b 	ldhu	r2,12(r16)
   23c58:	80c010c4 	addi	r3,r16,67
   23c5c:	80c00015 	stw	r3,0(r16)
   23c60:	10800054 	ori	r2,r2,1
   23c64:	8080030d 	sth	r2,12(r16)
   23c68:	00800044 	movi	r2,1
   23c6c:	80c00415 	stw	r3,16(r16)
   23c70:	80800515 	stw	r2,20(r16)
   23c74:	04810004 	movi	r18,1024
   23c78:	00000706 	br	23c98 <__smakebuf_r+0xbc>
   23c7c:	8080030b 	ldhu	r2,12(r16)
   23c80:	10c0200c 	andi	r3,r2,128
   23c84:	18001f1e 	bne	r3,zero,23d04 <__smakebuf_r+0x128>
   23c88:	04810004 	movi	r18,1024
   23c8c:	10820014 	ori	r2,r2,2048
   23c90:	8080030d 	sth	r2,12(r16)
   23c94:	0027883a 	mov	r19,zero
   23c98:	900b883a 	mov	r5,r18
   23c9c:	8809883a 	mov	r4,r17
   23ca0:	0023d980 	call	23d98 <_malloc_r>
   23ca4:	10002c26 	beq	r2,zero,23d58 <__smakebuf_r+0x17c>
   23ca8:	80c0030b 	ldhu	r3,12(r16)
   23cac:	010000b4 	movhi	r4,2
   23cb0:	210abe04 	addi	r4,r4,11000
   23cb4:	89000f15 	stw	r4,60(r17)
   23cb8:	18c02014 	ori	r3,r3,128
   23cbc:	80c0030d 	sth	r3,12(r16)
   23cc0:	80800015 	stw	r2,0(r16)
   23cc4:	80800415 	stw	r2,16(r16)
   23cc8:	84800515 	stw	r18,20(r16)
   23ccc:	98001a1e 	bne	r19,zero,23d38 <__smakebuf_r+0x15c>
   23cd0:	dfc01317 	ldw	ra,76(sp)
   23cd4:	dcc01217 	ldw	r19,72(sp)
   23cd8:	dc801117 	ldw	r18,68(sp)
   23cdc:	dc401017 	ldw	r17,64(sp)
   23ce0:	dc000f17 	ldw	r16,60(sp)
   23ce4:	dec01404 	addi	sp,sp,80
   23ce8:	f800283a 	ret
   23cec:	288010c4 	addi	r2,r5,67
   23cf0:	28800015 	stw	r2,0(r5)
   23cf4:	28800415 	stw	r2,16(r5)
   23cf8:	00800044 	movi	r2,1
   23cfc:	28800515 	stw	r2,20(r5)
   23d00:	f800283a 	ret
   23d04:	04801004 	movi	r18,64
   23d08:	003fe006 	br	23c8c <__alt_mem_sdram_controller_0+0xc0023c8c>
   23d0c:	81000a17 	ldw	r4,40(r16)
   23d10:	00c000b4 	movhi	r3,2
   23d14:	18d33204 	addi	r3,r3,19656
   23d18:	20ffc51e 	bne	r4,r3,23c30 <__alt_mem_sdram_controller_0+0xc0023c30>
   23d1c:	8080030b 	ldhu	r2,12(r16)
   23d20:	04810004 	movi	r18,1024
   23d24:	84801315 	stw	r18,76(r16)
   23d28:	1484b03a 	or	r2,r2,r18
   23d2c:	8080030d 	sth	r2,12(r16)
   23d30:	0027883a 	mov	r19,zero
   23d34:	003fd806 	br	23c98 <__alt_mem_sdram_controller_0+0xc0023c98>
   23d38:	8140038f 	ldh	r5,14(r16)
   23d3c:	8809883a 	mov	r4,r17
   23d40:	002b3400 	call	2b340 <_isatty_r>
   23d44:	103fe226 	beq	r2,zero,23cd0 <__alt_mem_sdram_controller_0+0xc0023cd0>
   23d48:	8080030b 	ldhu	r2,12(r16)
   23d4c:	10800054 	ori	r2,r2,1
   23d50:	8080030d 	sth	r2,12(r16)
   23d54:	003fde06 	br	23cd0 <__alt_mem_sdram_controller_0+0xc0023cd0>
   23d58:	8080030b 	ldhu	r2,12(r16)
   23d5c:	10c0800c 	andi	r3,r2,512
   23d60:	183fdb1e 	bne	r3,zero,23cd0 <__alt_mem_sdram_controller_0+0xc0023cd0>
   23d64:	10800094 	ori	r2,r2,2
   23d68:	80c010c4 	addi	r3,r16,67
   23d6c:	8080030d 	sth	r2,12(r16)
   23d70:	00800044 	movi	r2,1
   23d74:	80c00015 	stw	r3,0(r16)
   23d78:	80c00415 	stw	r3,16(r16)
   23d7c:	80800515 	stw	r2,20(r16)
   23d80:	003fd306 	br	23cd0 <__alt_mem_sdram_controller_0+0xc0023cd0>
   23d84:	04810004 	movi	r18,1024
   23d88:	003fc306 	br	23c98 <__alt_mem_sdram_controller_0+0xc0023c98>
   23d8c:	0027883a 	mov	r19,zero
   23d90:	04810004 	movi	r18,1024
   23d94:	003fc006 	br	23c98 <__alt_mem_sdram_controller_0+0xc0023c98>

00023d98 <_malloc_r>:
   23d98:	defff504 	addi	sp,sp,-44
   23d9c:	dc800315 	stw	r18,12(sp)
   23da0:	dfc00a15 	stw	ra,40(sp)
   23da4:	df000915 	stw	fp,36(sp)
   23da8:	ddc00815 	stw	r23,32(sp)
   23dac:	dd800715 	stw	r22,28(sp)
   23db0:	dd400615 	stw	r21,24(sp)
   23db4:	dd000515 	stw	r20,20(sp)
   23db8:	dcc00415 	stw	r19,16(sp)
   23dbc:	dc400215 	stw	r17,8(sp)
   23dc0:	dc000115 	stw	r16,4(sp)
   23dc4:	288002c4 	addi	r2,r5,11
   23dc8:	00c00584 	movi	r3,22
   23dcc:	2025883a 	mov	r18,r4
   23dd0:	18807f2e 	bgeu	r3,r2,23fd0 <_malloc_r+0x238>
   23dd4:	047ffe04 	movi	r17,-8
   23dd8:	1462703a 	and	r17,r2,r17
   23ddc:	8800a316 	blt	r17,zero,2406c <_malloc_r+0x2d4>
   23de0:	8940a236 	bltu	r17,r5,2406c <_malloc_r+0x2d4>
   23de4:	0033d740 	call	33d74 <__malloc_lock>
   23de8:	00807dc4 	movi	r2,503
   23dec:	1441e92e 	bgeu	r2,r17,24594 <_malloc_r+0x7fc>
   23df0:	8804d27a 	srli	r2,r17,9
   23df4:	1000a126 	beq	r2,zero,2407c <_malloc_r+0x2e4>
   23df8:	00c00104 	movi	r3,4
   23dfc:	18811e36 	bltu	r3,r2,24278 <_malloc_r+0x4e0>
   23e00:	8804d1ba 	srli	r2,r17,6
   23e04:	12000e44 	addi	r8,r2,57
   23e08:	11c00e04 	addi	r7,r2,56
   23e0c:	4209883a 	add	r4,r8,r8
   23e10:	04c000f4 	movhi	r19,3
   23e14:	2109883a 	add	r4,r4,r4
   23e18:	9cda9a04 	addi	r19,r19,27240
   23e1c:	2109883a 	add	r4,r4,r4
   23e20:	9909883a 	add	r4,r19,r4
   23e24:	24000117 	ldw	r16,4(r4)
   23e28:	213ffe04 	addi	r4,r4,-8
   23e2c:	24009726 	beq	r4,r16,2408c <_malloc_r+0x2f4>
   23e30:	80800117 	ldw	r2,4(r16)
   23e34:	01bfff04 	movi	r6,-4
   23e38:	014003c4 	movi	r5,15
   23e3c:	1184703a 	and	r2,r2,r6
   23e40:	1447c83a 	sub	r3,r2,r17
   23e44:	28c00716 	blt	r5,r3,23e64 <_malloc_r+0xcc>
   23e48:	1800920e 	bge	r3,zero,24094 <_malloc_r+0x2fc>
   23e4c:	84000317 	ldw	r16,12(r16)
   23e50:	24008e26 	beq	r4,r16,2408c <_malloc_r+0x2f4>
   23e54:	80800117 	ldw	r2,4(r16)
   23e58:	1184703a 	and	r2,r2,r6
   23e5c:	1447c83a 	sub	r3,r2,r17
   23e60:	28fff90e 	bge	r5,r3,23e48 <__alt_mem_sdram_controller_0+0xc0023e48>
   23e64:	3809883a 	mov	r4,r7
   23e68:	018000f4 	movhi	r6,3
   23e6c:	9c000417 	ldw	r16,16(r19)
   23e70:	319a9a04 	addi	r6,r6,27240
   23e74:	32000204 	addi	r8,r6,8
   23e78:	82013426 	beq	r16,r8,2434c <_malloc_r+0x5b4>
   23e7c:	80c00117 	ldw	r3,4(r16)
   23e80:	00bfff04 	movi	r2,-4
   23e84:	188e703a 	and	r7,r3,r2
   23e88:	3c45c83a 	sub	r2,r7,r17
   23e8c:	00c003c4 	movi	r3,15
   23e90:	18811f16 	blt	r3,r2,24310 <_malloc_r+0x578>
   23e94:	32000515 	stw	r8,20(r6)
   23e98:	32000415 	stw	r8,16(r6)
   23e9c:	10007f0e 	bge	r2,zero,2409c <_malloc_r+0x304>
   23ea0:	00807fc4 	movi	r2,511
   23ea4:	11c0fd36 	bltu	r2,r7,2429c <_malloc_r+0x504>
   23ea8:	3806d0fa 	srli	r3,r7,3
   23eac:	01c00044 	movi	r7,1
   23eb0:	30800117 	ldw	r2,4(r6)
   23eb4:	19400044 	addi	r5,r3,1
   23eb8:	294b883a 	add	r5,r5,r5
   23ebc:	1807d0ba 	srai	r3,r3,2
   23ec0:	294b883a 	add	r5,r5,r5
   23ec4:	294b883a 	add	r5,r5,r5
   23ec8:	298b883a 	add	r5,r5,r6
   23ecc:	38c6983a 	sll	r3,r7,r3
   23ed0:	29c00017 	ldw	r7,0(r5)
   23ed4:	2a7ffe04 	addi	r9,r5,-8
   23ed8:	1886b03a 	or	r3,r3,r2
   23edc:	82400315 	stw	r9,12(r16)
   23ee0:	81c00215 	stw	r7,8(r16)
   23ee4:	30c00115 	stw	r3,4(r6)
   23ee8:	2c000015 	stw	r16,0(r5)
   23eec:	3c000315 	stw	r16,12(r7)
   23ef0:	2005d0ba 	srai	r2,r4,2
   23ef4:	01400044 	movi	r5,1
   23ef8:	288a983a 	sll	r5,r5,r2
   23efc:	19406f36 	bltu	r3,r5,240bc <_malloc_r+0x324>
   23f00:	28c4703a 	and	r2,r5,r3
   23f04:	10000a1e 	bne	r2,zero,23f30 <_malloc_r+0x198>
   23f08:	00bfff04 	movi	r2,-4
   23f0c:	294b883a 	add	r5,r5,r5
   23f10:	2088703a 	and	r4,r4,r2
   23f14:	28c4703a 	and	r2,r5,r3
   23f18:	21000104 	addi	r4,r4,4
   23f1c:	1000041e 	bne	r2,zero,23f30 <_malloc_r+0x198>
   23f20:	294b883a 	add	r5,r5,r5
   23f24:	28c4703a 	and	r2,r5,r3
   23f28:	21000104 	addi	r4,r4,4
   23f2c:	103ffc26 	beq	r2,zero,23f20 <__alt_mem_sdram_controller_0+0xc0023f20>
   23f30:	02bfff04 	movi	r10,-4
   23f34:	024003c4 	movi	r9,15
   23f38:	21800044 	addi	r6,r4,1
   23f3c:	318d883a 	add	r6,r6,r6
   23f40:	318d883a 	add	r6,r6,r6
   23f44:	318d883a 	add	r6,r6,r6
   23f48:	998d883a 	add	r6,r19,r6
   23f4c:	333ffe04 	addi	r12,r6,-8
   23f50:	2017883a 	mov	r11,r4
   23f54:	31800104 	addi	r6,r6,4
   23f58:	34000017 	ldw	r16,0(r6)
   23f5c:	31fffd04 	addi	r7,r6,-12
   23f60:	81c0041e 	bne	r16,r7,23f74 <_malloc_r+0x1dc>
   23f64:	0000fb06 	br	24354 <_malloc_r+0x5bc>
   23f68:	1801030e 	bge	r3,zero,24378 <_malloc_r+0x5e0>
   23f6c:	84000317 	ldw	r16,12(r16)
   23f70:	81c0f826 	beq	r16,r7,24354 <_malloc_r+0x5bc>
   23f74:	80800117 	ldw	r2,4(r16)
   23f78:	1284703a 	and	r2,r2,r10
   23f7c:	1447c83a 	sub	r3,r2,r17
   23f80:	48fff90e 	bge	r9,r3,23f68 <__alt_mem_sdram_controller_0+0xc0023f68>
   23f84:	80800317 	ldw	r2,12(r16)
   23f88:	81000217 	ldw	r4,8(r16)
   23f8c:	89400054 	ori	r5,r17,1
   23f90:	81400115 	stw	r5,4(r16)
   23f94:	20800315 	stw	r2,12(r4)
   23f98:	11000215 	stw	r4,8(r2)
   23f9c:	8463883a 	add	r17,r16,r17
   23fa0:	9c400515 	stw	r17,20(r19)
   23fa4:	9c400415 	stw	r17,16(r19)
   23fa8:	18800054 	ori	r2,r3,1
   23fac:	88800115 	stw	r2,4(r17)
   23fb0:	8a000315 	stw	r8,12(r17)
   23fb4:	8a000215 	stw	r8,8(r17)
   23fb8:	88e3883a 	add	r17,r17,r3
   23fbc:	88c00015 	stw	r3,0(r17)
   23fc0:	9009883a 	mov	r4,r18
   23fc4:	0033d980 	call	33d98 <__malloc_unlock>
   23fc8:	80800204 	addi	r2,r16,8
   23fcc:	00001b06 	br	2403c <_malloc_r+0x2a4>
   23fd0:	04400404 	movi	r17,16
   23fd4:	89402536 	bltu	r17,r5,2406c <_malloc_r+0x2d4>
   23fd8:	0033d740 	call	33d74 <__malloc_lock>
   23fdc:	00800184 	movi	r2,6
   23fe0:	01000084 	movi	r4,2
   23fe4:	04c000f4 	movhi	r19,3
   23fe8:	1085883a 	add	r2,r2,r2
   23fec:	9cda9a04 	addi	r19,r19,27240
   23ff0:	1085883a 	add	r2,r2,r2
   23ff4:	9885883a 	add	r2,r19,r2
   23ff8:	14000117 	ldw	r16,4(r2)
   23ffc:	10fffe04 	addi	r3,r2,-8
   24000:	80c0d926 	beq	r16,r3,24368 <_malloc_r+0x5d0>
   24004:	80c00117 	ldw	r3,4(r16)
   24008:	81000317 	ldw	r4,12(r16)
   2400c:	00bfff04 	movi	r2,-4
   24010:	1884703a 	and	r2,r3,r2
   24014:	81400217 	ldw	r5,8(r16)
   24018:	8085883a 	add	r2,r16,r2
   2401c:	10c00117 	ldw	r3,4(r2)
   24020:	29000315 	stw	r4,12(r5)
   24024:	21400215 	stw	r5,8(r4)
   24028:	18c00054 	ori	r3,r3,1
   2402c:	10c00115 	stw	r3,4(r2)
   24030:	9009883a 	mov	r4,r18
   24034:	0033d980 	call	33d98 <__malloc_unlock>
   24038:	80800204 	addi	r2,r16,8
   2403c:	dfc00a17 	ldw	ra,40(sp)
   24040:	df000917 	ldw	fp,36(sp)
   24044:	ddc00817 	ldw	r23,32(sp)
   24048:	dd800717 	ldw	r22,28(sp)
   2404c:	dd400617 	ldw	r21,24(sp)
   24050:	dd000517 	ldw	r20,20(sp)
   24054:	dcc00417 	ldw	r19,16(sp)
   24058:	dc800317 	ldw	r18,12(sp)
   2405c:	dc400217 	ldw	r17,8(sp)
   24060:	dc000117 	ldw	r16,4(sp)
   24064:	dec00b04 	addi	sp,sp,44
   24068:	f800283a 	ret
   2406c:	00800304 	movi	r2,12
   24070:	90800015 	stw	r2,0(r18)
   24074:	0005883a 	mov	r2,zero
   24078:	003ff006 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   2407c:	01002004 	movi	r4,128
   24080:	02001004 	movi	r8,64
   24084:	01c00fc4 	movi	r7,63
   24088:	003f6106 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   2408c:	4009883a 	mov	r4,r8
   24090:	003f7506 	br	23e68 <__alt_mem_sdram_controller_0+0xc0023e68>
   24094:	81000317 	ldw	r4,12(r16)
   24098:	003fde06 	br	24014 <__alt_mem_sdram_controller_0+0xc0024014>
   2409c:	81c5883a 	add	r2,r16,r7
   240a0:	11400117 	ldw	r5,4(r2)
   240a4:	9009883a 	mov	r4,r18
   240a8:	29400054 	ori	r5,r5,1
   240ac:	11400115 	stw	r5,4(r2)
   240b0:	0033d980 	call	33d98 <__malloc_unlock>
   240b4:	80800204 	addi	r2,r16,8
   240b8:	003fe006 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   240bc:	9c000217 	ldw	r16,8(r19)
   240c0:	00bfff04 	movi	r2,-4
   240c4:	85800117 	ldw	r22,4(r16)
   240c8:	b0ac703a 	and	r22,r22,r2
   240cc:	b4400336 	bltu	r22,r17,240dc <_malloc_r+0x344>
   240d0:	b445c83a 	sub	r2,r22,r17
   240d4:	00c003c4 	movi	r3,15
   240d8:	18805d16 	blt	r3,r2,24250 <_malloc_r+0x4b8>
   240dc:	05c00134 	movhi	r23,4
   240e0:	00800134 	movhi	r2,4
   240e4:	10a70b04 	addi	r2,r2,-25556
   240e8:	bde03e04 	addi	r23,r23,-32520
   240ec:	15400017 	ldw	r21,0(r2)
   240f0:	b8c00017 	ldw	r3,0(r23)
   240f4:	00bfffc4 	movi	r2,-1
   240f8:	858d883a 	add	r6,r16,r22
   240fc:	8d6b883a 	add	r21,r17,r21
   24100:	1880ea26 	beq	r3,r2,244ac <_malloc_r+0x714>
   24104:	ad4403c4 	addi	r21,r21,4111
   24108:	00bc0004 	movi	r2,-4096
   2410c:	a8aa703a 	and	r21,r21,r2
   24110:	a80b883a 	mov	r5,r21
   24114:	9009883a 	mov	r4,r18
   24118:	d9800015 	stw	r6,0(sp)
   2411c:	0024ad80 	call	24ad8 <_sbrk_r>
   24120:	1029883a 	mov	r20,r2
   24124:	00bfffc4 	movi	r2,-1
   24128:	d9800017 	ldw	r6,0(sp)
   2412c:	a080e826 	beq	r20,r2,244d0 <_malloc_r+0x738>
   24130:	a180a636 	bltu	r20,r6,243cc <_malloc_r+0x634>
   24134:	07000134 	movhi	fp,4
   24138:	e7271a04 	addi	fp,fp,-25496
   2413c:	e0800017 	ldw	r2,0(fp)
   24140:	a887883a 	add	r3,r21,r2
   24144:	e0c00015 	stw	r3,0(fp)
   24148:	3500e626 	beq	r6,r20,244e4 <_malloc_r+0x74c>
   2414c:	b9000017 	ldw	r4,0(r23)
   24150:	00bfffc4 	movi	r2,-1
   24154:	2080ee26 	beq	r4,r2,24510 <_malloc_r+0x778>
   24158:	a185c83a 	sub	r2,r20,r6
   2415c:	10c5883a 	add	r2,r2,r3
   24160:	e0800015 	stw	r2,0(fp)
   24164:	a0c001cc 	andi	r3,r20,7
   24168:	1800bc26 	beq	r3,zero,2445c <_malloc_r+0x6c4>
   2416c:	a0e9c83a 	sub	r20,r20,r3
   24170:	00840204 	movi	r2,4104
   24174:	a5000204 	addi	r20,r20,8
   24178:	10c7c83a 	sub	r3,r2,r3
   2417c:	a545883a 	add	r2,r20,r21
   24180:	1083ffcc 	andi	r2,r2,4095
   24184:	18abc83a 	sub	r21,r3,r2
   24188:	a80b883a 	mov	r5,r21
   2418c:	9009883a 	mov	r4,r18
   24190:	0024ad80 	call	24ad8 <_sbrk_r>
   24194:	00ffffc4 	movi	r3,-1
   24198:	10c0e126 	beq	r2,r3,24520 <_malloc_r+0x788>
   2419c:	1505c83a 	sub	r2,r2,r20
   241a0:	1545883a 	add	r2,r2,r21
   241a4:	10800054 	ori	r2,r2,1
   241a8:	e0c00017 	ldw	r3,0(fp)
   241ac:	9d000215 	stw	r20,8(r19)
   241b0:	a0800115 	stw	r2,4(r20)
   241b4:	a8c7883a 	add	r3,r21,r3
   241b8:	e0c00015 	stw	r3,0(fp)
   241bc:	84c00e26 	beq	r16,r19,241f8 <_malloc_r+0x460>
   241c0:	018003c4 	movi	r6,15
   241c4:	3580a72e 	bgeu	r6,r22,24464 <_malloc_r+0x6cc>
   241c8:	81400117 	ldw	r5,4(r16)
   241cc:	013ffe04 	movi	r4,-8
   241d0:	b0bffd04 	addi	r2,r22,-12
   241d4:	1104703a 	and	r2,r2,r4
   241d8:	2900004c 	andi	r4,r5,1
   241dc:	2088b03a 	or	r4,r4,r2
   241e0:	81000115 	stw	r4,4(r16)
   241e4:	01400144 	movi	r5,5
   241e8:	8089883a 	add	r4,r16,r2
   241ec:	21400115 	stw	r5,4(r4)
   241f0:	21400215 	stw	r5,8(r4)
   241f4:	3080cd36 	bltu	r6,r2,2452c <_malloc_r+0x794>
   241f8:	00800134 	movhi	r2,4
   241fc:	10a70a04 	addi	r2,r2,-25560
   24200:	11000017 	ldw	r4,0(r2)
   24204:	20c0012e 	bgeu	r4,r3,2420c <_malloc_r+0x474>
   24208:	10c00015 	stw	r3,0(r2)
   2420c:	00800134 	movhi	r2,4
   24210:	10a70904 	addi	r2,r2,-25564
   24214:	11000017 	ldw	r4,0(r2)
   24218:	9c000217 	ldw	r16,8(r19)
   2421c:	20c0012e 	bgeu	r4,r3,24224 <_malloc_r+0x48c>
   24220:	10c00015 	stw	r3,0(r2)
   24224:	80c00117 	ldw	r3,4(r16)
   24228:	00bfff04 	movi	r2,-4
   2422c:	1886703a 	and	r3,r3,r2
   24230:	1c45c83a 	sub	r2,r3,r17
   24234:	1c400236 	bltu	r3,r17,24240 <_malloc_r+0x4a8>
   24238:	00c003c4 	movi	r3,15
   2423c:	18800416 	blt	r3,r2,24250 <_malloc_r+0x4b8>
   24240:	9009883a 	mov	r4,r18
   24244:	0033d980 	call	33d98 <__malloc_unlock>
   24248:	0005883a 	mov	r2,zero
   2424c:	003f7b06 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   24250:	88c00054 	ori	r3,r17,1
   24254:	80c00115 	stw	r3,4(r16)
   24258:	8463883a 	add	r17,r16,r17
   2425c:	10800054 	ori	r2,r2,1
   24260:	9c400215 	stw	r17,8(r19)
   24264:	88800115 	stw	r2,4(r17)
   24268:	9009883a 	mov	r4,r18
   2426c:	0033d980 	call	33d98 <__malloc_unlock>
   24270:	80800204 	addi	r2,r16,8
   24274:	003f7106 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   24278:	00c00504 	movi	r3,20
   2427c:	18804a2e 	bgeu	r3,r2,243a8 <_malloc_r+0x610>
   24280:	00c01504 	movi	r3,84
   24284:	18806e36 	bltu	r3,r2,24440 <_malloc_r+0x6a8>
   24288:	8804d33a 	srli	r2,r17,12
   2428c:	12001bc4 	addi	r8,r2,111
   24290:	11c01b84 	addi	r7,r2,110
   24294:	4209883a 	add	r4,r8,r8
   24298:	003edd06 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   2429c:	3804d27a 	srli	r2,r7,9
   242a0:	00c00104 	movi	r3,4
   242a4:	1880442e 	bgeu	r3,r2,243b8 <_malloc_r+0x620>
   242a8:	00c00504 	movi	r3,20
   242ac:	18808136 	bltu	r3,r2,244b4 <_malloc_r+0x71c>
   242b0:	11401704 	addi	r5,r2,92
   242b4:	10c016c4 	addi	r3,r2,91
   242b8:	294b883a 	add	r5,r5,r5
   242bc:	294b883a 	add	r5,r5,r5
   242c0:	294b883a 	add	r5,r5,r5
   242c4:	994b883a 	add	r5,r19,r5
   242c8:	28800017 	ldw	r2,0(r5)
   242cc:	018000f4 	movhi	r6,3
   242d0:	297ffe04 	addi	r5,r5,-8
   242d4:	319a9a04 	addi	r6,r6,27240
   242d8:	28806526 	beq	r5,r2,24470 <_malloc_r+0x6d8>
   242dc:	01bfff04 	movi	r6,-4
   242e0:	10c00117 	ldw	r3,4(r2)
   242e4:	1986703a 	and	r3,r3,r6
   242e8:	38c0022e 	bgeu	r7,r3,242f4 <_malloc_r+0x55c>
   242ec:	10800217 	ldw	r2,8(r2)
   242f0:	28bffb1e 	bne	r5,r2,242e0 <__alt_mem_sdram_controller_0+0xc00242e0>
   242f4:	11400317 	ldw	r5,12(r2)
   242f8:	98c00117 	ldw	r3,4(r19)
   242fc:	81400315 	stw	r5,12(r16)
   24300:	80800215 	stw	r2,8(r16)
   24304:	2c000215 	stw	r16,8(r5)
   24308:	14000315 	stw	r16,12(r2)
   2430c:	003ef806 	br	23ef0 <__alt_mem_sdram_controller_0+0xc0023ef0>
   24310:	88c00054 	ori	r3,r17,1
   24314:	80c00115 	stw	r3,4(r16)
   24318:	8463883a 	add	r17,r16,r17
   2431c:	34400515 	stw	r17,20(r6)
   24320:	34400415 	stw	r17,16(r6)
   24324:	10c00054 	ori	r3,r2,1
   24328:	8a000315 	stw	r8,12(r17)
   2432c:	8a000215 	stw	r8,8(r17)
   24330:	88c00115 	stw	r3,4(r17)
   24334:	88a3883a 	add	r17,r17,r2
   24338:	88800015 	stw	r2,0(r17)
   2433c:	9009883a 	mov	r4,r18
   24340:	0033d980 	call	33d98 <__malloc_unlock>
   24344:	80800204 	addi	r2,r16,8
   24348:	003f3c06 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   2434c:	30c00117 	ldw	r3,4(r6)
   24350:	003ee706 	br	23ef0 <__alt_mem_sdram_controller_0+0xc0023ef0>
   24354:	5ac00044 	addi	r11,r11,1
   24358:	588000cc 	andi	r2,r11,3
   2435c:	31800204 	addi	r6,r6,8
   24360:	103efd1e 	bne	r2,zero,23f58 <__alt_mem_sdram_controller_0+0xc0023f58>
   24364:	00002406 	br	243f8 <_malloc_r+0x660>
   24368:	14000317 	ldw	r16,12(r2)
   2436c:	143f251e 	bne	r2,r16,24004 <__alt_mem_sdram_controller_0+0xc0024004>
   24370:	21000084 	addi	r4,r4,2
   24374:	003ebc06 	br	23e68 <__alt_mem_sdram_controller_0+0xc0023e68>
   24378:	8085883a 	add	r2,r16,r2
   2437c:	10c00117 	ldw	r3,4(r2)
   24380:	81000317 	ldw	r4,12(r16)
   24384:	81400217 	ldw	r5,8(r16)
   24388:	18c00054 	ori	r3,r3,1
   2438c:	10c00115 	stw	r3,4(r2)
   24390:	29000315 	stw	r4,12(r5)
   24394:	21400215 	stw	r5,8(r4)
   24398:	9009883a 	mov	r4,r18
   2439c:	0033d980 	call	33d98 <__malloc_unlock>
   243a0:	80800204 	addi	r2,r16,8
   243a4:	003f2506 	br	2403c <__alt_mem_sdram_controller_0+0xc002403c>
   243a8:	12001704 	addi	r8,r2,92
   243ac:	11c016c4 	addi	r7,r2,91
   243b0:	4209883a 	add	r4,r8,r8
   243b4:	003e9606 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   243b8:	3804d1ba 	srli	r2,r7,6
   243bc:	11400e44 	addi	r5,r2,57
   243c0:	10c00e04 	addi	r3,r2,56
   243c4:	294b883a 	add	r5,r5,r5
   243c8:	003fbc06 	br	242bc <__alt_mem_sdram_controller_0+0xc00242bc>
   243cc:	84ff5926 	beq	r16,r19,24134 <__alt_mem_sdram_controller_0+0xc0024134>
   243d0:	008000f4 	movhi	r2,3
   243d4:	109a9a04 	addi	r2,r2,27240
   243d8:	14000217 	ldw	r16,8(r2)
   243dc:	00bfff04 	movi	r2,-4
   243e0:	80c00117 	ldw	r3,4(r16)
   243e4:	1886703a 	and	r3,r3,r2
   243e8:	003f9106 	br	24230 <__alt_mem_sdram_controller_0+0xc0024230>
   243ec:	60800217 	ldw	r2,8(r12)
   243f0:	213fffc4 	addi	r4,r4,-1
   243f4:	1300651e 	bne	r2,r12,2458c <_malloc_r+0x7f4>
   243f8:	208000cc 	andi	r2,r4,3
   243fc:	633ffe04 	addi	r12,r12,-8
   24400:	103ffa1e 	bne	r2,zero,243ec <__alt_mem_sdram_controller_0+0xc00243ec>
   24404:	98800117 	ldw	r2,4(r19)
   24408:	0146303a 	nor	r3,zero,r5
   2440c:	1884703a 	and	r2,r3,r2
   24410:	98800115 	stw	r2,4(r19)
   24414:	294b883a 	add	r5,r5,r5
   24418:	117f2836 	bltu	r2,r5,240bc <__alt_mem_sdram_controller_0+0xc00240bc>
   2441c:	283f2726 	beq	r5,zero,240bc <__alt_mem_sdram_controller_0+0xc00240bc>
   24420:	2886703a 	and	r3,r5,r2
   24424:	5809883a 	mov	r4,r11
   24428:	183ec31e 	bne	r3,zero,23f38 <__alt_mem_sdram_controller_0+0xc0023f38>
   2442c:	294b883a 	add	r5,r5,r5
   24430:	2886703a 	and	r3,r5,r2
   24434:	21000104 	addi	r4,r4,4
   24438:	183ffc26 	beq	r3,zero,2442c <__alt_mem_sdram_controller_0+0xc002442c>
   2443c:	003ebe06 	br	23f38 <__alt_mem_sdram_controller_0+0xc0023f38>
   24440:	00c05504 	movi	r3,340
   24444:	18801236 	bltu	r3,r2,24490 <_malloc_r+0x6f8>
   24448:	8804d3fa 	srli	r2,r17,15
   2444c:	12001e04 	addi	r8,r2,120
   24450:	11c01dc4 	addi	r7,r2,119
   24454:	4209883a 	add	r4,r8,r8
   24458:	003e6d06 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   2445c:	00c40004 	movi	r3,4096
   24460:	003f4606 	br	2417c <__alt_mem_sdram_controller_0+0xc002417c>
   24464:	00800044 	movi	r2,1
   24468:	a0800115 	stw	r2,4(r20)
   2446c:	003f7406 	br	24240 <__alt_mem_sdram_controller_0+0xc0024240>
   24470:	1805d0ba 	srai	r2,r3,2
   24474:	01c00044 	movi	r7,1
   24478:	30c00117 	ldw	r3,4(r6)
   2447c:	388e983a 	sll	r7,r7,r2
   24480:	2805883a 	mov	r2,r5
   24484:	38c6b03a 	or	r3,r7,r3
   24488:	30c00115 	stw	r3,4(r6)
   2448c:	003f9b06 	br	242fc <__alt_mem_sdram_controller_0+0xc00242fc>
   24490:	00c15504 	movi	r3,1364
   24494:	18801a36 	bltu	r3,r2,24500 <_malloc_r+0x768>
   24498:	8804d4ba 	srli	r2,r17,18
   2449c:	12001f44 	addi	r8,r2,125
   244a0:	11c01f04 	addi	r7,r2,124
   244a4:	4209883a 	add	r4,r8,r8
   244a8:	003e5906 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   244ac:	ad400404 	addi	r21,r21,16
   244b0:	003f1706 	br	24110 <__alt_mem_sdram_controller_0+0xc0024110>
   244b4:	00c01504 	movi	r3,84
   244b8:	18802336 	bltu	r3,r2,24548 <_malloc_r+0x7b0>
   244bc:	3804d33a 	srli	r2,r7,12
   244c0:	11401bc4 	addi	r5,r2,111
   244c4:	10c01b84 	addi	r3,r2,110
   244c8:	294b883a 	add	r5,r5,r5
   244cc:	003f7b06 	br	242bc <__alt_mem_sdram_controller_0+0xc00242bc>
   244d0:	9c000217 	ldw	r16,8(r19)
   244d4:	00bfff04 	movi	r2,-4
   244d8:	80c00117 	ldw	r3,4(r16)
   244dc:	1886703a 	and	r3,r3,r2
   244e0:	003f5306 	br	24230 <__alt_mem_sdram_controller_0+0xc0024230>
   244e4:	3083ffcc 	andi	r2,r6,4095
   244e8:	103f181e 	bne	r2,zero,2414c <__alt_mem_sdram_controller_0+0xc002414c>
   244ec:	99000217 	ldw	r4,8(r19)
   244f0:	b545883a 	add	r2,r22,r21
   244f4:	10800054 	ori	r2,r2,1
   244f8:	20800115 	stw	r2,4(r4)
   244fc:	003f3e06 	br	241f8 <__alt_mem_sdram_controller_0+0xc00241f8>
   24500:	01003f84 	movi	r4,254
   24504:	02001fc4 	movi	r8,127
   24508:	01c01f84 	movi	r7,126
   2450c:	003e4006 	br	23e10 <__alt_mem_sdram_controller_0+0xc0023e10>
   24510:	00800134 	movhi	r2,4
   24514:	10a03e04 	addi	r2,r2,-32520
   24518:	15000015 	stw	r20,0(r2)
   2451c:	003f1106 	br	24164 <__alt_mem_sdram_controller_0+0xc0024164>
   24520:	00800044 	movi	r2,1
   24524:	002b883a 	mov	r21,zero
   24528:	003f1f06 	br	241a8 <__alt_mem_sdram_controller_0+0xc00241a8>
   2452c:	81400204 	addi	r5,r16,8
   24530:	9009883a 	mov	r4,r18
   24534:	00231680 	call	23168 <_free_r>
   24538:	00800134 	movhi	r2,4
   2453c:	10a71a04 	addi	r2,r2,-25496
   24540:	10c00017 	ldw	r3,0(r2)
   24544:	003f2c06 	br	241f8 <__alt_mem_sdram_controller_0+0xc00241f8>
   24548:	00c05504 	movi	r3,340
   2454c:	18800536 	bltu	r3,r2,24564 <_malloc_r+0x7cc>
   24550:	3804d3fa 	srli	r2,r7,15
   24554:	11401e04 	addi	r5,r2,120
   24558:	10c01dc4 	addi	r3,r2,119
   2455c:	294b883a 	add	r5,r5,r5
   24560:	003f5606 	br	242bc <__alt_mem_sdram_controller_0+0xc00242bc>
   24564:	00c15504 	movi	r3,1364
   24568:	18800536 	bltu	r3,r2,24580 <_malloc_r+0x7e8>
   2456c:	3804d4ba 	srli	r2,r7,18
   24570:	11401f44 	addi	r5,r2,125
   24574:	10c01f04 	addi	r3,r2,124
   24578:	294b883a 	add	r5,r5,r5
   2457c:	003f4f06 	br	242bc <__alt_mem_sdram_controller_0+0xc00242bc>
   24580:	01403f84 	movi	r5,254
   24584:	00c01f84 	movi	r3,126
   24588:	003f4c06 	br	242bc <__alt_mem_sdram_controller_0+0xc00242bc>
   2458c:	98800117 	ldw	r2,4(r19)
   24590:	003fa006 	br	24414 <__alt_mem_sdram_controller_0+0xc0024414>
   24594:	8808d0fa 	srli	r4,r17,3
   24598:	20800044 	addi	r2,r4,1
   2459c:	1085883a 	add	r2,r2,r2
   245a0:	003e9006 	br	23fe4 <__alt_mem_sdram_controller_0+0xc0023fe4>

000245a4 <memset>:
   245a4:	20c000cc 	andi	r3,r4,3
   245a8:	2005883a 	mov	r2,r4
   245ac:	18004426 	beq	r3,zero,246c0 <memset+0x11c>
   245b0:	31ffffc4 	addi	r7,r6,-1
   245b4:	30004026 	beq	r6,zero,246b8 <memset+0x114>
   245b8:	2813883a 	mov	r9,r5
   245bc:	200d883a 	mov	r6,r4
   245c0:	2007883a 	mov	r3,r4
   245c4:	00000406 	br	245d8 <memset+0x34>
   245c8:	3a3fffc4 	addi	r8,r7,-1
   245cc:	31800044 	addi	r6,r6,1
   245d0:	38003926 	beq	r7,zero,246b8 <memset+0x114>
   245d4:	400f883a 	mov	r7,r8
   245d8:	18c00044 	addi	r3,r3,1
   245dc:	32400005 	stb	r9,0(r6)
   245e0:	1a0000cc 	andi	r8,r3,3
   245e4:	403ff81e 	bne	r8,zero,245c8 <__alt_mem_sdram_controller_0+0xc00245c8>
   245e8:	010000c4 	movi	r4,3
   245ec:	21c02d2e 	bgeu	r4,r7,246a4 <memset+0x100>
   245f0:	29003fcc 	andi	r4,r5,255
   245f4:	200c923a 	slli	r6,r4,8
   245f8:	3108b03a 	or	r4,r6,r4
   245fc:	200c943a 	slli	r6,r4,16
   24600:	218cb03a 	or	r6,r4,r6
   24604:	010003c4 	movi	r4,15
   24608:	21c0182e 	bgeu	r4,r7,2466c <memset+0xc8>
   2460c:	3b3ffc04 	addi	r12,r7,-16
   24610:	6018d13a 	srli	r12,r12,4
   24614:	1a000104 	addi	r8,r3,4
   24618:	1ac00204 	addi	r11,r3,8
   2461c:	6008913a 	slli	r4,r12,4
   24620:	1a800304 	addi	r10,r3,12
   24624:	1813883a 	mov	r9,r3
   24628:	21000504 	addi	r4,r4,20
   2462c:	1909883a 	add	r4,r3,r4
   24630:	49800015 	stw	r6,0(r9)
   24634:	41800015 	stw	r6,0(r8)
   24638:	59800015 	stw	r6,0(r11)
   2463c:	51800015 	stw	r6,0(r10)
   24640:	42000404 	addi	r8,r8,16
   24644:	4a400404 	addi	r9,r9,16
   24648:	5ac00404 	addi	r11,r11,16
   2464c:	52800404 	addi	r10,r10,16
   24650:	413ff71e 	bne	r8,r4,24630 <__alt_mem_sdram_controller_0+0xc0024630>
   24654:	63000044 	addi	r12,r12,1
   24658:	6018913a 	slli	r12,r12,4
   2465c:	39c003cc 	andi	r7,r7,15
   24660:	010000c4 	movi	r4,3
   24664:	1b07883a 	add	r3,r3,r12
   24668:	21c00e2e 	bgeu	r4,r7,246a4 <memset+0x100>
   2466c:	1813883a 	mov	r9,r3
   24670:	3811883a 	mov	r8,r7
   24674:	010000c4 	movi	r4,3
   24678:	49800015 	stw	r6,0(r9)
   2467c:	423fff04 	addi	r8,r8,-4
   24680:	4a400104 	addi	r9,r9,4
   24684:	223ffc36 	bltu	r4,r8,24678 <__alt_mem_sdram_controller_0+0xc0024678>
   24688:	393fff04 	addi	r4,r7,-4
   2468c:	2008d0ba 	srli	r4,r4,2
   24690:	39c000cc 	andi	r7,r7,3
   24694:	21000044 	addi	r4,r4,1
   24698:	2109883a 	add	r4,r4,r4
   2469c:	2109883a 	add	r4,r4,r4
   246a0:	1907883a 	add	r3,r3,r4
   246a4:	38000526 	beq	r7,zero,246bc <memset+0x118>
   246a8:	19cf883a 	add	r7,r3,r7
   246ac:	19400005 	stb	r5,0(r3)
   246b0:	18c00044 	addi	r3,r3,1
   246b4:	38fffd1e 	bne	r7,r3,246ac <__alt_mem_sdram_controller_0+0xc00246ac>
   246b8:	f800283a 	ret
   246bc:	f800283a 	ret
   246c0:	2007883a 	mov	r3,r4
   246c4:	300f883a 	mov	r7,r6
   246c8:	003fc706 	br	245e8 <__alt_mem_sdram_controller_0+0xc00245e8>

000246cc <_open_r>:
   246cc:	defffd04 	addi	sp,sp,-12
   246d0:	2805883a 	mov	r2,r5
   246d4:	dc000015 	stw	r16,0(sp)
   246d8:	04000134 	movhi	r16,4
   246dc:	dc400115 	stw	r17,4(sp)
   246e0:	300b883a 	mov	r5,r6
   246e4:	84270804 	addi	r16,r16,-25568
   246e8:	2023883a 	mov	r17,r4
   246ec:	380d883a 	mov	r6,r7
   246f0:	1009883a 	mov	r4,r2
   246f4:	dfc00215 	stw	ra,8(sp)
   246f8:	80000015 	stw	zero,0(r16)
   246fc:	0033ebc0 	call	33ebc <open>
   24700:	00ffffc4 	movi	r3,-1
   24704:	10c00526 	beq	r2,r3,2471c <_open_r+0x50>
   24708:	dfc00217 	ldw	ra,8(sp)
   2470c:	dc400117 	ldw	r17,4(sp)
   24710:	dc000017 	ldw	r16,0(sp)
   24714:	dec00304 	addi	sp,sp,12
   24718:	f800283a 	ret
   2471c:	80c00017 	ldw	r3,0(r16)
   24720:	183ff926 	beq	r3,zero,24708 <__alt_mem_sdram_controller_0+0xc0024708>
   24724:	88c00015 	stw	r3,0(r17)
   24728:	003ff706 	br	24708 <__alt_mem_sdram_controller_0+0xc0024708>

0002472c <_printf_r>:
   2472c:	defffd04 	addi	sp,sp,-12
   24730:	2805883a 	mov	r2,r5
   24734:	dfc00015 	stw	ra,0(sp)
   24738:	d9800115 	stw	r6,4(sp)
   2473c:	d9c00215 	stw	r7,8(sp)
   24740:	21400217 	ldw	r5,8(r4)
   24744:	d9c00104 	addi	r7,sp,4
   24748:	100d883a 	mov	r6,r2
   2474c:	00270040 	call	27004 <___vfprintf_internal_r>
   24750:	dfc00017 	ldw	ra,0(sp)
   24754:	dec00304 	addi	sp,sp,12
   24758:	f800283a 	ret

0002475c <printf>:
   2475c:	defffc04 	addi	sp,sp,-16
   24760:	dfc00015 	stw	ra,0(sp)
   24764:	d9400115 	stw	r5,4(sp)
   24768:	d9800215 	stw	r6,8(sp)
   2476c:	d9c00315 	stw	r7,12(sp)
   24770:	00800134 	movhi	r2,4
   24774:	10a03d04 	addi	r2,r2,-32524
   24778:	10800017 	ldw	r2,0(r2)
   2477c:	200b883a 	mov	r5,r4
   24780:	d9800104 	addi	r6,sp,4
   24784:	11000217 	ldw	r4,8(r2)
   24788:	00291fc0 	call	291fc <__vfprintf_internal>
   2478c:	dfc00017 	ldw	ra,0(sp)
   24790:	dec00404 	addi	sp,sp,16
   24794:	f800283a 	ret

00024798 <_puts_r>:
   24798:	defff604 	addi	sp,sp,-40
   2479c:	dc000715 	stw	r16,28(sp)
   247a0:	2021883a 	mov	r16,r4
   247a4:	2809883a 	mov	r4,r5
   247a8:	dc400815 	stw	r17,32(sp)
   247ac:	dfc00915 	stw	ra,36(sp)
   247b0:	2823883a 	mov	r17,r5
   247b4:	0024d2c0 	call	24d2c <strlen>
   247b8:	10c00044 	addi	r3,r2,1
   247bc:	d8800115 	stw	r2,4(sp)
   247c0:	008000f4 	movhi	r2,3
   247c4:	1098c204 	addi	r2,r2,25352
   247c8:	d8800215 	stw	r2,8(sp)
   247cc:	00800044 	movi	r2,1
   247d0:	d8800315 	stw	r2,12(sp)
   247d4:	00800084 	movi	r2,2
   247d8:	dc400015 	stw	r17,0(sp)
   247dc:	d8c00615 	stw	r3,24(sp)
   247e0:	dec00415 	stw	sp,16(sp)
   247e4:	d8800515 	stw	r2,20(sp)
   247e8:	80000226 	beq	r16,zero,247f4 <_puts_r+0x5c>
   247ec:	80800e17 	ldw	r2,56(r16)
   247f0:	10001426 	beq	r2,zero,24844 <_puts_r+0xac>
   247f4:	81400217 	ldw	r5,8(r16)
   247f8:	2880030b 	ldhu	r2,12(r5)
   247fc:	10c8000c 	andi	r3,r2,8192
   24800:	1800061e 	bne	r3,zero,2481c <_puts_r+0x84>
   24804:	29001917 	ldw	r4,100(r5)
   24808:	00f7ffc4 	movi	r3,-8193
   2480c:	10880014 	ori	r2,r2,8192
   24810:	20c6703a 	and	r3,r4,r3
   24814:	2880030d 	sth	r2,12(r5)
   24818:	28c01915 	stw	r3,100(r5)
   2481c:	d9800404 	addi	r6,sp,16
   24820:	8009883a 	mov	r4,r16
   24824:	002ae280 	call	2ae28 <__sfvwrite_r>
   24828:	1000091e 	bne	r2,zero,24850 <_puts_r+0xb8>
   2482c:	00800284 	movi	r2,10
   24830:	dfc00917 	ldw	ra,36(sp)
   24834:	dc400817 	ldw	r17,32(sp)
   24838:	dc000717 	ldw	r16,28(sp)
   2483c:	dec00a04 	addi	sp,sp,40
   24840:	f800283a 	ret
   24844:	8009883a 	mov	r4,r16
   24848:	0022e400 	call	22e40 <__sinit>
   2484c:	003fe906 	br	247f4 <__alt_mem_sdram_controller_0+0xc00247f4>
   24850:	00bfffc4 	movi	r2,-1
   24854:	003ff606 	br	24830 <__alt_mem_sdram_controller_0+0xc0024830>

00024858 <puts>:
   24858:	00800134 	movhi	r2,4
   2485c:	10a03d04 	addi	r2,r2,-32524
   24860:	200b883a 	mov	r5,r4
   24864:	11000017 	ldw	r4,0(r2)
   24868:	00247981 	jmpi	24798 <_puts_r>

0002486c <srand>:
   2486c:	00800134 	movhi	r2,4
   24870:	10a03d04 	addi	r2,r2,-32524
   24874:	10800017 	ldw	r2,0(r2)
   24878:	11002915 	stw	r4,164(r2)
   2487c:	10002a15 	stw	zero,168(r2)
   24880:	f800283a 	ret

00024884 <rand>:
   24884:	00800134 	movhi	r2,4
   24888:	defffe04 	addi	sp,sp,-8
   2488c:	10a03d04 	addi	r2,r2,-32524
   24890:	dc000015 	stw	r16,0(sp)
   24894:	14000017 	ldw	r16,0(r2)
   24898:	dfc00115 	stw	ra,4(sp)
   2489c:	01932574 	movhi	r6,19605
   248a0:	81002917 	ldw	r4,164(r16)
   248a4:	81402a17 	ldw	r5,168(r16)
   248a8:	01d614b4 	movhi	r7,22610
   248ac:	319fcb44 	addi	r6,r6,32557
   248b0:	39fd0b44 	addi	r7,r7,-3027
   248b4:	00302cc0 	call	302cc <__muldi3>
   248b8:	11000044 	addi	r4,r2,1
   248bc:	2085803a 	cmpltu	r2,r4,r2
   248c0:	10c7883a 	add	r3,r2,r3
   248c4:	00a00034 	movhi	r2,32768
   248c8:	10bfffc4 	addi	r2,r2,-1
   248cc:	1884703a 	and	r2,r3,r2
   248d0:	81002915 	stw	r4,164(r16)
   248d4:	80c02a15 	stw	r3,168(r16)
   248d8:	dfc00117 	ldw	ra,4(sp)
   248dc:	dc000017 	ldw	r16,0(sp)
   248e0:	dec00204 	addi	sp,sp,8
   248e4:	f800283a 	ret

000248e8 <lflush>:
   248e8:	2080030b 	ldhu	r2,12(r4)
   248ec:	00c00244 	movi	r3,9
   248f0:	1080024c 	andi	r2,r2,9
   248f4:	10c00226 	beq	r2,r3,24900 <lflush+0x18>
   248f8:	0005883a 	mov	r2,zero
   248fc:	f800283a 	ret
   24900:	0022ac01 	jmpi	22ac0 <fflush>

00024904 <__srefill_r>:
   24904:	defffc04 	addi	sp,sp,-16
   24908:	dc400115 	stw	r17,4(sp)
   2490c:	dc000015 	stw	r16,0(sp)
   24910:	dfc00315 	stw	ra,12(sp)
   24914:	dc800215 	stw	r18,8(sp)
   24918:	2023883a 	mov	r17,r4
   2491c:	2821883a 	mov	r16,r5
   24920:	20000226 	beq	r4,zero,2492c <__srefill_r+0x28>
   24924:	20800e17 	ldw	r2,56(r4)
   24928:	10003c26 	beq	r2,zero,24a1c <__srefill_r+0x118>
   2492c:	80c0030b 	ldhu	r3,12(r16)
   24930:	1908000c 	andi	r4,r3,8192
   24934:	1805883a 	mov	r2,r3
   24938:	2000071e 	bne	r4,zero,24958 <__srefill_r+0x54>
   2493c:	81001917 	ldw	r4,100(r16)
   24940:	18880014 	ori	r2,r3,8192
   24944:	00f7ffc4 	movi	r3,-8193
   24948:	20c8703a 	and	r4,r4,r3
   2494c:	8080030d 	sth	r2,12(r16)
   24950:	1007883a 	mov	r3,r2
   24954:	81001915 	stw	r4,100(r16)
   24958:	80000115 	stw	zero,4(r16)
   2495c:	1100080c 	andi	r4,r2,32
   24960:	2000571e 	bne	r4,zero,24ac0 <__srefill_r+0x1bc>
   24964:	1100010c 	andi	r4,r2,4
   24968:	20001f26 	beq	r4,zero,249e8 <__srefill_r+0xe4>
   2496c:	81400c17 	ldw	r5,48(r16)
   24970:	28000826 	beq	r5,zero,24994 <__srefill_r+0x90>
   24974:	80801004 	addi	r2,r16,64
   24978:	28800226 	beq	r5,r2,24984 <__srefill_r+0x80>
   2497c:	8809883a 	mov	r4,r17
   24980:	00231680 	call	23168 <_free_r>
   24984:	80800f17 	ldw	r2,60(r16)
   24988:	80000c15 	stw	zero,48(r16)
   2498c:	80800115 	stw	r2,4(r16)
   24990:	1000391e 	bne	r2,zero,24a78 <__srefill_r+0x174>
   24994:	80800417 	ldw	r2,16(r16)
   24998:	10004b26 	beq	r2,zero,24ac8 <__srefill_r+0x1c4>
   2499c:	8480030b 	ldhu	r18,12(r16)
   249a0:	908000cc 	andi	r2,r18,3
   249a4:	10001f1e 	bne	r2,zero,24a24 <__srefill_r+0x120>
   249a8:	81800417 	ldw	r6,16(r16)
   249ac:	80800817 	ldw	r2,32(r16)
   249b0:	81c00517 	ldw	r7,20(r16)
   249b4:	81400717 	ldw	r5,28(r16)
   249b8:	81800015 	stw	r6,0(r16)
   249bc:	8809883a 	mov	r4,r17
   249c0:	103ee83a 	callr	r2
   249c4:	80800115 	stw	r2,4(r16)
   249c8:	00800e0e 	bge	zero,r2,24a04 <__srefill_r+0x100>
   249cc:	0005883a 	mov	r2,zero
   249d0:	dfc00317 	ldw	ra,12(sp)
   249d4:	dc800217 	ldw	r18,8(sp)
   249d8:	dc400117 	ldw	r17,4(sp)
   249dc:	dc000017 	ldw	r16,0(sp)
   249e0:	dec00404 	addi	sp,sp,16
   249e4:	f800283a 	ret
   249e8:	1100040c 	andi	r4,r2,16
   249ec:	20003026 	beq	r4,zero,24ab0 <__srefill_r+0x1ac>
   249f0:	1080020c 	andi	r2,r2,8
   249f4:	1000241e 	bne	r2,zero,24a88 <__srefill_r+0x184>
   249f8:	18c00114 	ori	r3,r3,4
   249fc:	80c0030d 	sth	r3,12(r16)
   24a00:	003fe406 	br	24994 <__alt_mem_sdram_controller_0+0xc0024994>
   24a04:	80c0030b 	ldhu	r3,12(r16)
   24a08:	1000161e 	bne	r2,zero,24a64 <__srefill_r+0x160>
   24a0c:	18c00814 	ori	r3,r3,32
   24a10:	00bfffc4 	movi	r2,-1
   24a14:	80c0030d 	sth	r3,12(r16)
   24a18:	003fed06 	br	249d0 <__alt_mem_sdram_controller_0+0xc00249d0>
   24a1c:	0022e400 	call	22e40 <__sinit>
   24a20:	003fc206 	br	2492c <__alt_mem_sdram_controller_0+0xc002492c>
   24a24:	00800134 	movhi	r2,4
   24a28:	10a03c04 	addi	r2,r2,-32528
   24a2c:	11000017 	ldw	r4,0(r2)
   24a30:	014000b4 	movhi	r5,2
   24a34:	00800044 	movi	r2,1
   24a38:	29523a04 	addi	r5,r5,18664
   24a3c:	8080030d 	sth	r2,12(r16)
   24a40:	00239540 	call	23954 <_fwalk>
   24a44:	00800244 	movi	r2,9
   24a48:	8480030d 	sth	r18,12(r16)
   24a4c:	9480024c 	andi	r18,r18,9
   24a50:	90bfd51e 	bne	r18,r2,249a8 <__alt_mem_sdram_controller_0+0xc00249a8>
   24a54:	800b883a 	mov	r5,r16
   24a58:	8809883a 	mov	r4,r17
   24a5c:	00228480 	call	22848 <__sflush_r>
   24a60:	003fd106 	br	249a8 <__alt_mem_sdram_controller_0+0xc00249a8>
   24a64:	18c01014 	ori	r3,r3,64
   24a68:	80000115 	stw	zero,4(r16)
   24a6c:	00bfffc4 	movi	r2,-1
   24a70:	80c0030d 	sth	r3,12(r16)
   24a74:	003fd606 	br	249d0 <__alt_mem_sdram_controller_0+0xc00249d0>
   24a78:	80c00e17 	ldw	r3,56(r16)
   24a7c:	0005883a 	mov	r2,zero
   24a80:	80c00015 	stw	r3,0(r16)
   24a84:	003fd206 	br	249d0 <__alt_mem_sdram_controller_0+0xc00249d0>
   24a88:	800b883a 	mov	r5,r16
   24a8c:	8809883a 	mov	r4,r17
   24a90:	0022a640 	call	22a64 <_fflush_r>
   24a94:	10000a1e 	bne	r2,zero,24ac0 <__srefill_r+0x1bc>
   24a98:	8080030b 	ldhu	r2,12(r16)
   24a9c:	00fffdc4 	movi	r3,-9
   24aa0:	80000215 	stw	zero,8(r16)
   24aa4:	1886703a 	and	r3,r3,r2
   24aa8:	80000615 	stw	zero,24(r16)
   24aac:	003fd206 	br	249f8 <__alt_mem_sdram_controller_0+0xc00249f8>
   24ab0:	00800244 	movi	r2,9
   24ab4:	88800015 	stw	r2,0(r17)
   24ab8:	18c01014 	ori	r3,r3,64
   24abc:	80c0030d 	sth	r3,12(r16)
   24ac0:	00bfffc4 	movi	r2,-1
   24ac4:	003fc206 	br	249d0 <__alt_mem_sdram_controller_0+0xc00249d0>
   24ac8:	800b883a 	mov	r5,r16
   24acc:	8809883a 	mov	r4,r17
   24ad0:	0023bdc0 	call	23bdc <__smakebuf_r>
   24ad4:	003fb106 	br	2499c <__alt_mem_sdram_controller_0+0xc002499c>

00024ad8 <_sbrk_r>:
   24ad8:	defffd04 	addi	sp,sp,-12
   24adc:	dc000015 	stw	r16,0(sp)
   24ae0:	04000134 	movhi	r16,4
   24ae4:	dc400115 	stw	r17,4(sp)
   24ae8:	84270804 	addi	r16,r16,-25568
   24aec:	2023883a 	mov	r17,r4
   24af0:	2809883a 	mov	r4,r5
   24af4:	dfc00215 	stw	ra,8(sp)
   24af8:	80000015 	stw	zero,0(r16)
   24afc:	00341ac0 	call	341ac <sbrk>
   24b00:	00ffffc4 	movi	r3,-1
   24b04:	10c00526 	beq	r2,r3,24b1c <_sbrk_r+0x44>
   24b08:	dfc00217 	ldw	ra,8(sp)
   24b0c:	dc400117 	ldw	r17,4(sp)
   24b10:	dc000017 	ldw	r16,0(sp)
   24b14:	dec00304 	addi	sp,sp,12
   24b18:	f800283a 	ret
   24b1c:	80c00017 	ldw	r3,0(r16)
   24b20:	183ff926 	beq	r3,zero,24b08 <__alt_mem_sdram_controller_0+0xc0024b08>
   24b24:	88c00015 	stw	r3,0(r17)
   24b28:	003ff706 	br	24b08 <__alt_mem_sdram_controller_0+0xc0024b08>

00024b2c <_sprintf_r>:
   24b2c:	deffe404 	addi	sp,sp,-112
   24b30:	2807883a 	mov	r3,r5
   24b34:	dfc01a15 	stw	ra,104(sp)
   24b38:	d9c01b15 	stw	r7,108(sp)
   24b3c:	00a00034 	movhi	r2,32768
   24b40:	10bfffc4 	addi	r2,r2,-1
   24b44:	02008204 	movi	r8,520
   24b48:	d8800215 	stw	r2,8(sp)
   24b4c:	d8800515 	stw	r2,20(sp)
   24b50:	d9c01b04 	addi	r7,sp,108
   24b54:	d80b883a 	mov	r5,sp
   24b58:	00bfffc4 	movi	r2,-1
   24b5c:	d8c00015 	stw	r3,0(sp)
   24b60:	d8c00415 	stw	r3,16(sp)
   24b64:	da00030d 	sth	r8,12(sp)
   24b68:	d880038d 	sth	r2,14(sp)
   24b6c:	0024dc40 	call	24dc4 <___svfprintf_internal_r>
   24b70:	d8c00017 	ldw	r3,0(sp)
   24b74:	18000005 	stb	zero,0(r3)
   24b78:	dfc01a17 	ldw	ra,104(sp)
   24b7c:	dec01c04 	addi	sp,sp,112
   24b80:	f800283a 	ret

00024b84 <sprintf>:
   24b84:	deffe304 	addi	sp,sp,-116
   24b88:	2007883a 	mov	r3,r4
   24b8c:	dfc01a15 	stw	ra,104(sp)
   24b90:	d9801b15 	stw	r6,108(sp)
   24b94:	d9c01c15 	stw	r7,112(sp)
   24b98:	01000134 	movhi	r4,4
   24b9c:	21203d04 	addi	r4,r4,-32524
   24ba0:	21000017 	ldw	r4,0(r4)
   24ba4:	00a00034 	movhi	r2,32768
   24ba8:	10bfffc4 	addi	r2,r2,-1
   24bac:	280d883a 	mov	r6,r5
   24bb0:	02008204 	movi	r8,520
   24bb4:	d8800215 	stw	r2,8(sp)
   24bb8:	d8800515 	stw	r2,20(sp)
   24bbc:	d9c01b04 	addi	r7,sp,108
   24bc0:	d80b883a 	mov	r5,sp
   24bc4:	00bfffc4 	movi	r2,-1
   24bc8:	d8c00015 	stw	r3,0(sp)
   24bcc:	d8c00415 	stw	r3,16(sp)
   24bd0:	da00030d 	sth	r8,12(sp)
   24bd4:	d880038d 	sth	r2,14(sp)
   24bd8:	0024dc40 	call	24dc4 <___svfprintf_internal_r>
   24bdc:	d8c00017 	ldw	r3,0(sp)
   24be0:	18000005 	stb	zero,0(r3)
   24be4:	dfc01a17 	ldw	ra,104(sp)
   24be8:	dec01d04 	addi	sp,sp,116
   24bec:	f800283a 	ret

00024bf0 <__sread>:
   24bf0:	defffe04 	addi	sp,sp,-8
   24bf4:	dc000015 	stw	r16,0(sp)
   24bf8:	2821883a 	mov	r16,r5
   24bfc:	2940038f 	ldh	r5,14(r5)
   24c00:	dfc00115 	stw	ra,4(sp)
   24c04:	002c8540 	call	2c854 <_read_r>
   24c08:	10000716 	blt	r2,zero,24c28 <__sread+0x38>
   24c0c:	80c01417 	ldw	r3,80(r16)
   24c10:	1887883a 	add	r3,r3,r2
   24c14:	80c01415 	stw	r3,80(r16)
   24c18:	dfc00117 	ldw	ra,4(sp)
   24c1c:	dc000017 	ldw	r16,0(sp)
   24c20:	dec00204 	addi	sp,sp,8
   24c24:	f800283a 	ret
   24c28:	80c0030b 	ldhu	r3,12(r16)
   24c2c:	18fbffcc 	andi	r3,r3,61439
   24c30:	80c0030d 	sth	r3,12(r16)
   24c34:	dfc00117 	ldw	ra,4(sp)
   24c38:	dc000017 	ldw	r16,0(sp)
   24c3c:	dec00204 	addi	sp,sp,8
   24c40:	f800283a 	ret

00024c44 <__seofread>:
   24c44:	0005883a 	mov	r2,zero
   24c48:	f800283a 	ret

00024c4c <__swrite>:
   24c4c:	2880030b 	ldhu	r2,12(r5)
   24c50:	defffb04 	addi	sp,sp,-20
   24c54:	dcc00315 	stw	r19,12(sp)
   24c58:	dc800215 	stw	r18,8(sp)
   24c5c:	dc400115 	stw	r17,4(sp)
   24c60:	dc000015 	stw	r16,0(sp)
   24c64:	dfc00415 	stw	ra,16(sp)
   24c68:	10c0400c 	andi	r3,r2,256
   24c6c:	2821883a 	mov	r16,r5
   24c70:	2023883a 	mov	r17,r4
   24c74:	3025883a 	mov	r18,r6
   24c78:	3827883a 	mov	r19,r7
   24c7c:	18000526 	beq	r3,zero,24c94 <__swrite+0x48>
   24c80:	2940038f 	ldh	r5,14(r5)
   24c84:	01c00084 	movi	r7,2
   24c88:	000d883a 	mov	r6,zero
   24c8c:	002b4700 	call	2b470 <_lseek_r>
   24c90:	8080030b 	ldhu	r2,12(r16)
   24c94:	8140038f 	ldh	r5,14(r16)
   24c98:	10bbffcc 	andi	r2,r2,61439
   24c9c:	980f883a 	mov	r7,r19
   24ca0:	900d883a 	mov	r6,r18
   24ca4:	8809883a 	mov	r4,r17
   24ca8:	8080030d 	sth	r2,12(r16)
   24cac:	dfc00417 	ldw	ra,16(sp)
   24cb0:	dcc00317 	ldw	r19,12(sp)
   24cb4:	dc800217 	ldw	r18,8(sp)
   24cb8:	dc400117 	ldw	r17,4(sp)
   24cbc:	dc000017 	ldw	r16,0(sp)
   24cc0:	dec00504 	addi	sp,sp,20
   24cc4:	00292d41 	jmpi	292d4 <_write_r>

00024cc8 <__sseek>:
   24cc8:	defffe04 	addi	sp,sp,-8
   24ccc:	dc000015 	stw	r16,0(sp)
   24cd0:	2821883a 	mov	r16,r5
   24cd4:	2940038f 	ldh	r5,14(r5)
   24cd8:	dfc00115 	stw	ra,4(sp)
   24cdc:	002b4700 	call	2b470 <_lseek_r>
   24ce0:	00ffffc4 	movi	r3,-1
   24ce4:	10c00826 	beq	r2,r3,24d08 <__sseek+0x40>
   24ce8:	80c0030b 	ldhu	r3,12(r16)
   24cec:	80801415 	stw	r2,80(r16)
   24cf0:	18c40014 	ori	r3,r3,4096
   24cf4:	80c0030d 	sth	r3,12(r16)
   24cf8:	dfc00117 	ldw	ra,4(sp)
   24cfc:	dc000017 	ldw	r16,0(sp)
   24d00:	dec00204 	addi	sp,sp,8
   24d04:	f800283a 	ret
   24d08:	80c0030b 	ldhu	r3,12(r16)
   24d0c:	18fbffcc 	andi	r3,r3,61439
   24d10:	80c0030d 	sth	r3,12(r16)
   24d14:	dfc00117 	ldw	ra,4(sp)
   24d18:	dc000017 	ldw	r16,0(sp)
   24d1c:	dec00204 	addi	sp,sp,8
   24d20:	f800283a 	ret

00024d24 <__sclose>:
   24d24:	2940038f 	ldh	r5,14(r5)
   24d28:	00294881 	jmpi	29488 <_close_r>

00024d2c <strlen>:
   24d2c:	208000cc 	andi	r2,r4,3
   24d30:	10002026 	beq	r2,zero,24db4 <strlen+0x88>
   24d34:	20800007 	ldb	r2,0(r4)
   24d38:	10002026 	beq	r2,zero,24dbc <strlen+0x90>
   24d3c:	2005883a 	mov	r2,r4
   24d40:	00000206 	br	24d4c <strlen+0x20>
   24d44:	10c00007 	ldb	r3,0(r2)
   24d48:	18001826 	beq	r3,zero,24dac <strlen+0x80>
   24d4c:	10800044 	addi	r2,r2,1
   24d50:	10c000cc 	andi	r3,r2,3
   24d54:	183ffb1e 	bne	r3,zero,24d44 <__alt_mem_sdram_controller_0+0xc0024d44>
   24d58:	10c00017 	ldw	r3,0(r2)
   24d5c:	01ffbff4 	movhi	r7,65279
   24d60:	39ffbfc4 	addi	r7,r7,-257
   24d64:	00ca303a 	nor	r5,zero,r3
   24d68:	01a02074 	movhi	r6,32897
   24d6c:	19c7883a 	add	r3,r3,r7
   24d70:	31a02004 	addi	r6,r6,-32640
   24d74:	1946703a 	and	r3,r3,r5
   24d78:	1986703a 	and	r3,r3,r6
   24d7c:	1800091e 	bne	r3,zero,24da4 <strlen+0x78>
   24d80:	10800104 	addi	r2,r2,4
   24d84:	10c00017 	ldw	r3,0(r2)
   24d88:	19cb883a 	add	r5,r3,r7
   24d8c:	00c6303a 	nor	r3,zero,r3
   24d90:	28c6703a 	and	r3,r5,r3
   24d94:	1986703a 	and	r3,r3,r6
   24d98:	183ff926 	beq	r3,zero,24d80 <__alt_mem_sdram_controller_0+0xc0024d80>
   24d9c:	00000106 	br	24da4 <strlen+0x78>
   24da0:	10800044 	addi	r2,r2,1
   24da4:	10c00007 	ldb	r3,0(r2)
   24da8:	183ffd1e 	bne	r3,zero,24da0 <__alt_mem_sdram_controller_0+0xc0024da0>
   24dac:	1105c83a 	sub	r2,r2,r4
   24db0:	f800283a 	ret
   24db4:	2005883a 	mov	r2,r4
   24db8:	003fe706 	br	24d58 <__alt_mem_sdram_controller_0+0xc0024d58>
   24dbc:	0005883a 	mov	r2,zero
   24dc0:	f800283a 	ret

00024dc4 <___svfprintf_internal_r>:
   24dc4:	deffb704 	addi	sp,sp,-292
   24dc8:	dfc04815 	stw	ra,288(sp)
   24dcc:	ddc04615 	stw	r23,280(sp)
   24dd0:	d9402c15 	stw	r5,176(sp)
   24dd4:	d9003915 	stw	r4,228(sp)
   24dd8:	302f883a 	mov	r23,r6
   24ddc:	d9c02d15 	stw	r7,180(sp)
   24de0:	df004715 	stw	fp,284(sp)
   24de4:	dd804515 	stw	r22,276(sp)
   24de8:	dd404415 	stw	r21,272(sp)
   24dec:	dd004315 	stw	r20,268(sp)
   24df0:	dcc04215 	stw	r19,264(sp)
   24df4:	dc804115 	stw	r18,260(sp)
   24df8:	dc404015 	stw	r17,256(sp)
   24dfc:	dc003f15 	stw	r16,252(sp)
   24e00:	002b4400 	call	2b440 <_localeconv_r>
   24e04:	10800017 	ldw	r2,0(r2)
   24e08:	1009883a 	mov	r4,r2
   24e0c:	d8803415 	stw	r2,208(sp)
   24e10:	0024d2c0 	call	24d2c <strlen>
   24e14:	d8c02c17 	ldw	r3,176(sp)
   24e18:	d8803815 	stw	r2,224(sp)
   24e1c:	1880030b 	ldhu	r2,12(r3)
   24e20:	1080200c 	andi	r2,r2,128
   24e24:	10000226 	beq	r2,zero,24e30 <___svfprintf_internal_r+0x6c>
   24e28:	18800417 	ldw	r2,16(r3)
   24e2c:	10067f26 	beq	r2,zero,2682c <___svfprintf_internal_r+0x1a68>
   24e30:	dcc03917 	ldw	r19,228(sp)
   24e34:	d8c00404 	addi	r3,sp,16
   24e38:	054000f4 	movhi	r21,3
   24e3c:	d9001e04 	addi	r4,sp,120
   24e40:	ad58d384 	addi	r21,r21,25422
   24e44:	d8c01e15 	stw	r3,120(sp)
   24e48:	d8002015 	stw	zero,128(sp)
   24e4c:	d8001f15 	stw	zero,124(sp)
   24e50:	d8003315 	stw	zero,204(sp)
   24e54:	d8003615 	stw	zero,216(sp)
   24e58:	d8003715 	stw	zero,220(sp)
   24e5c:	1811883a 	mov	r8,r3
   24e60:	d8003a15 	stw	zero,232(sp)
   24e64:	d8003b15 	stw	zero,236(sp)
   24e68:	d8002f15 	stw	zero,188(sp)
   24e6c:	d9002815 	stw	r4,160(sp)
   24e70:	b8800007 	ldb	r2,0(r23)
   24e74:	10026726 	beq	r2,zero,25814 <___svfprintf_internal_r+0xa50>
   24e78:	00c00944 	movi	r3,37
   24e7c:	b821883a 	mov	r16,r23
   24e80:	10c0021e 	bne	r2,r3,24e8c <___svfprintf_internal_r+0xc8>
   24e84:	00001406 	br	24ed8 <___svfprintf_internal_r+0x114>
   24e88:	10c00326 	beq	r2,r3,24e98 <___svfprintf_internal_r+0xd4>
   24e8c:	84000044 	addi	r16,r16,1
   24e90:	80800007 	ldb	r2,0(r16)
   24e94:	103ffc1e 	bne	r2,zero,24e88 <__alt_mem_sdram_controller_0+0xc0024e88>
   24e98:	85e3c83a 	sub	r17,r16,r23
   24e9c:	88000e26 	beq	r17,zero,24ed8 <___svfprintf_internal_r+0x114>
   24ea0:	d8c02017 	ldw	r3,128(sp)
   24ea4:	d8801f17 	ldw	r2,124(sp)
   24ea8:	45c00015 	stw	r23,0(r8)
   24eac:	1c47883a 	add	r3,r3,r17
   24eb0:	10800044 	addi	r2,r2,1
   24eb4:	d8c02015 	stw	r3,128(sp)
   24eb8:	44400115 	stw	r17,4(r8)
   24ebc:	d8801f15 	stw	r2,124(sp)
   24ec0:	00c001c4 	movi	r3,7
   24ec4:	18809716 	blt	r3,r2,25124 <___svfprintf_internal_r+0x360>
   24ec8:	42000204 	addi	r8,r8,8
   24ecc:	d9402f17 	ldw	r5,188(sp)
   24ed0:	2c4b883a 	add	r5,r5,r17
   24ed4:	d9402f15 	stw	r5,188(sp)
   24ed8:	80800007 	ldb	r2,0(r16)
   24edc:	10009826 	beq	r2,zero,25140 <___svfprintf_internal_r+0x37c>
   24ee0:	84400047 	ldb	r17,1(r16)
   24ee4:	00bfffc4 	movi	r2,-1
   24ee8:	85c00044 	addi	r23,r16,1
   24eec:	d8002785 	stb	zero,158(sp)
   24ef0:	0007883a 	mov	r3,zero
   24ef4:	000f883a 	mov	r7,zero
   24ef8:	d8802915 	stw	r2,164(sp)
   24efc:	d8003115 	stw	zero,196(sp)
   24f00:	0025883a 	mov	r18,zero
   24f04:	01401604 	movi	r5,88
   24f08:	01800244 	movi	r6,9
   24f0c:	02800a84 	movi	r10,42
   24f10:	02401b04 	movi	r9,108
   24f14:	bdc00044 	addi	r23,r23,1
   24f18:	88bff804 	addi	r2,r17,-32
   24f1c:	2882f036 	bltu	r5,r2,25ae0 <___svfprintf_internal_r+0xd1c>
   24f20:	100490ba 	slli	r2,r2,2
   24f24:	010000b4 	movhi	r4,2
   24f28:	2113ce04 	addi	r4,r4,20280
   24f2c:	1105883a 	add	r2,r2,r4
   24f30:	10800017 	ldw	r2,0(r2)
   24f34:	1000683a 	jmp	r2
   24f38:	00025a48 	cmpgei	zero,zero,2409
   24f3c:	00025ae0 	cmpeqi	zero,zero,2411
   24f40:	00025ae0 	cmpeqi	zero,zero,2411
   24f44:	00025a3c 	xorhi	zero,zero,2408
   24f48:	00025ae0 	cmpeqi	zero,zero,2411
   24f4c:	00025ae0 	cmpeqi	zero,zero,2411
   24f50:	00025ae0 	cmpeqi	zero,zero,2411
   24f54:	00025ae0 	cmpeqi	zero,zero,2411
   24f58:	00025ae0 	cmpeqi	zero,zero,2411
   24f5c:	00025ae0 	cmpeqi	zero,zero,2411
   24f60:	0002519c 	xori	zero,zero,2374
   24f64:	00025978 	rdprs	zero,zero,2405
   24f68:	00025ae0 	cmpeqi	zero,zero,2411
   24f6c:	000250ac 	andhi	zero,zero,2370
   24f70:	000251c4 	movi	zero,2375
   24f74:	00025ae0 	cmpeqi	zero,zero,2411
   24f78:	00025238 	rdprs	zero,zero,2376
   24f7c:	00025204 	movi	zero,2376
   24f80:	00025204 	movi	zero,2376
   24f84:	00025204 	movi	zero,2376
   24f88:	00025204 	movi	zero,2376
   24f8c:	00025204 	movi	zero,2376
   24f90:	00025204 	movi	zero,2376
   24f94:	00025204 	movi	zero,2376
   24f98:	00025204 	movi	zero,2376
   24f9c:	00025204 	movi	zero,2376
   24fa0:	00025ae0 	cmpeqi	zero,zero,2411
   24fa4:	00025ae0 	cmpeqi	zero,zero,2411
   24fa8:	00025ae0 	cmpeqi	zero,zero,2411
   24fac:	00025ae0 	cmpeqi	zero,zero,2411
   24fb0:	00025ae0 	cmpeqi	zero,zero,2411
   24fb4:	00025ae0 	cmpeqi	zero,zero,2411
   24fb8:	00025ae0 	cmpeqi	zero,zero,2411
   24fbc:	00025ae0 	cmpeqi	zero,zero,2411
   24fc0:	00025ae0 	cmpeqi	zero,zero,2411
   24fc4:	00025ae0 	cmpeqi	zero,zero,2411
   24fc8:	000252f0 	cmpltui	zero,zero,2379
   24fcc:	00025244 	movi	zero,2377
   24fd0:	00025ae0 	cmpeqi	zero,zero,2411
   24fd4:	00025244 	movi	zero,2377
   24fd8:	00025ae0 	cmpeqi	zero,zero,2411
   24fdc:	00025ae0 	cmpeqi	zero,zero,2411
   24fe0:	00025ae0 	cmpeqi	zero,zero,2411
   24fe4:	00025ae0 	cmpeqi	zero,zero,2411
   24fe8:	000252e4 	muli	zero,zero,2379
   24fec:	00025ae0 	cmpeqi	zero,zero,2411
   24ff0:	00025ae0 	cmpeqi	zero,zero,2411
   24ff4:	000253ac 	andhi	zero,zero,2382
   24ff8:	00025ae0 	cmpeqi	zero,zero,2411
   24ffc:	00025ae0 	cmpeqi	zero,zero,2411
   25000:	00025ae0 	cmpeqi	zero,zero,2411
   25004:	00025ae0 	cmpeqi	zero,zero,2411
   25008:	00025ae0 	cmpeqi	zero,zero,2411
   2500c:	0002581c 	xori	zero,zero,2400
   25010:	00025ae0 	cmpeqi	zero,zero,2411
   25014:	00025ae0 	cmpeqi	zero,zero,2411
   25018:	0002587c 	xorhi	zero,zero,2401
   2501c:	00025ae0 	cmpeqi	zero,zero,2411
   25020:	00025ae0 	cmpeqi	zero,zero,2411
   25024:	00025ae0 	cmpeqi	zero,zero,2411
   25028:	00025ae0 	cmpeqi	zero,zero,2411
   2502c:	00025ae0 	cmpeqi	zero,zero,2411
   25030:	00025ae0 	cmpeqi	zero,zero,2411
   25034:	00025ae0 	cmpeqi	zero,zero,2411
   25038:	00025ae0 	cmpeqi	zero,zero,2411
   2503c:	00025ae0 	cmpeqi	zero,zero,2411
   25040:	00025ae0 	cmpeqi	zero,zero,2411
   25044:	0002592c 	andhi	zero,zero,2404
   25048:	00025a68 	cmpgeui	zero,zero,2409
   2504c:	00025244 	movi	zero,2377
   25050:	00025244 	movi	zero,2377
   25054:	00025244 	movi	zero,2377
   25058:	00025abc 	xorhi	zero,zero,2410
   2505c:	00025a68 	cmpgeui	zero,zero,2409
   25060:	00025ae0 	cmpeqi	zero,zero,2411
   25064:	00025ae0 	cmpeqi	zero,zero,2411
   25068:	00025a78 	rdprs	zero,zero,2409
   2506c:	00025ae0 	cmpeqi	zero,zero,2411
   25070:	00025a88 	cmpgei	zero,zero,2410
   25074:	00025968 	cmpgeui	zero,zero,2405
   25078:	000250b8 	rdprs	zero,zero,2370
   2507c:	00025988 	cmpgei	zero,zero,2406
   25080:	00025ae0 	cmpeqi	zero,zero,2411
   25084:	00025994 	movui	zero,2406
   25088:	00025ae0 	cmpeqi	zero,zero,2411
   2508c:	000259f0 	cmpltui	zero,zero,2407
   25090:	00025ae0 	cmpeqi	zero,zero,2411
   25094:	00025ae0 	cmpeqi	zero,zero,2411
   25098:	00025a00 	call	25a0 <__alt_mem_onchip_memory2_0-0x1da60>
   2509c:	d9003117 	ldw	r4,196(sp)
   250a0:	d8802d15 	stw	r2,180(sp)
   250a4:	0109c83a 	sub	r4,zero,r4
   250a8:	d9003115 	stw	r4,196(sp)
   250ac:	94800114 	ori	r18,r18,4
   250b0:	bc400007 	ldb	r17,0(r23)
   250b4:	003f9706 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   250b8:	00800c04 	movi	r2,48
   250bc:	d9002d17 	ldw	r4,180(sp)
   250c0:	d9402917 	ldw	r5,164(sp)
   250c4:	d8802705 	stb	r2,156(sp)
   250c8:	00801e04 	movi	r2,120
   250cc:	d8802745 	stb	r2,157(sp)
   250d0:	d8002785 	stb	zero,158(sp)
   250d4:	20c00104 	addi	r3,r4,4
   250d8:	25000017 	ldw	r20,0(r4)
   250dc:	002d883a 	mov	r22,zero
   250e0:	90800094 	ori	r2,r18,2
   250e4:	28028616 	blt	r5,zero,25b00 <___svfprintf_internal_r+0xd3c>
   250e8:	00bfdfc4 	movi	r2,-129
   250ec:	90a4703a 	and	r18,r18,r2
   250f0:	d8c02d15 	stw	r3,180(sp)
   250f4:	94800094 	ori	r18,r18,2
   250f8:	a002731e 	bne	r20,zero,25ac8 <___svfprintf_internal_r+0xd04>
   250fc:	008000f4 	movhi	r2,3
   25100:	1098cc04 	addi	r2,r2,25392
   25104:	d8803a15 	stw	r2,232(sp)
   25108:	04401e04 	movi	r17,120
   2510c:	d8c02917 	ldw	r3,164(sp)
   25110:	0039883a 	mov	fp,zero
   25114:	1801d526 	beq	r3,zero,2586c <___svfprintf_internal_r+0xaa8>
   25118:	0029883a 	mov	r20,zero
   2511c:	002d883a 	mov	r22,zero
   25120:	0001f106 	br	258e8 <___svfprintf_internal_r+0xb24>
   25124:	d9402c17 	ldw	r5,176(sp)
   25128:	d9801e04 	addi	r6,sp,120
   2512c:	9809883a 	mov	r4,r19
   25130:	002d26c0 	call	2d26c <__ssprint_r>
   25134:	1000081e 	bne	r2,zero,25158 <___svfprintf_internal_r+0x394>
   25138:	da000404 	addi	r8,sp,16
   2513c:	003f6306 	br	24ecc <__alt_mem_sdram_controller_0+0xc0024ecc>
   25140:	d8802017 	ldw	r2,128(sp)
   25144:	10000426 	beq	r2,zero,25158 <___svfprintf_internal_r+0x394>
   25148:	d9402c17 	ldw	r5,176(sp)
   2514c:	d9003917 	ldw	r4,228(sp)
   25150:	d9801e04 	addi	r6,sp,120
   25154:	002d26c0 	call	2d26c <__ssprint_r>
   25158:	d8802c17 	ldw	r2,176(sp)
   2515c:	10c0030b 	ldhu	r3,12(r2)
   25160:	d8802f17 	ldw	r2,188(sp)
   25164:	18c0100c 	andi	r3,r3,64
   25168:	1805f51e 	bne	r3,zero,26940 <___svfprintf_internal_r+0x1b7c>
   2516c:	dfc04817 	ldw	ra,288(sp)
   25170:	df004717 	ldw	fp,284(sp)
   25174:	ddc04617 	ldw	r23,280(sp)
   25178:	dd804517 	ldw	r22,276(sp)
   2517c:	dd404417 	ldw	r21,272(sp)
   25180:	dd004317 	ldw	r20,268(sp)
   25184:	dcc04217 	ldw	r19,264(sp)
   25188:	dc804117 	ldw	r18,260(sp)
   2518c:	dc404017 	ldw	r17,256(sp)
   25190:	dc003f17 	ldw	r16,252(sp)
   25194:	dec04904 	addi	sp,sp,292
   25198:	f800283a 	ret
   2519c:	d8802d17 	ldw	r2,180(sp)
   251a0:	d9002d17 	ldw	r4,180(sp)
   251a4:	10800017 	ldw	r2,0(r2)
   251a8:	d8803115 	stw	r2,196(sp)
   251ac:	20800104 	addi	r2,r4,4
   251b0:	d9003117 	ldw	r4,196(sp)
   251b4:	203fb916 	blt	r4,zero,2509c <__alt_mem_sdram_controller_0+0xc002509c>
   251b8:	d8802d15 	stw	r2,180(sp)
   251bc:	bc400007 	ldb	r17,0(r23)
   251c0:	003f5406 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   251c4:	bc400007 	ldb	r17,0(r23)
   251c8:	bac00044 	addi	r11,r23,1
   251cc:	8a873926 	beq	r17,r10,26eb4 <___svfprintf_internal_r+0x20f0>
   251d0:	88bff404 	addi	r2,r17,-48
   251d4:	0009883a 	mov	r4,zero
   251d8:	30868836 	bltu	r6,r2,26bfc <___svfprintf_internal_r+0x1e38>
   251dc:	5c400007 	ldb	r17,0(r11)
   251e0:	210002a4 	muli	r4,r4,10
   251e4:	5dc00044 	addi	r23,r11,1
   251e8:	b817883a 	mov	r11,r23
   251ec:	2089883a 	add	r4,r4,r2
   251f0:	88bff404 	addi	r2,r17,-48
   251f4:	30bff92e 	bgeu	r6,r2,251dc <__alt_mem_sdram_controller_0+0xc00251dc>
   251f8:	2005d716 	blt	r4,zero,26958 <___svfprintf_internal_r+0x1b94>
   251fc:	d9002915 	stw	r4,164(sp)
   25200:	003f4506 	br	24f18 <__alt_mem_sdram_controller_0+0xc0024f18>
   25204:	b809883a 	mov	r4,r23
   25208:	d8003115 	stw	zero,196(sp)
   2520c:	88bff404 	addi	r2,r17,-48
   25210:	0017883a 	mov	r11,zero
   25214:	24400007 	ldb	r17,0(r4)
   25218:	5ac002a4 	muli	r11,r11,10
   2521c:	bdc00044 	addi	r23,r23,1
   25220:	b809883a 	mov	r4,r23
   25224:	12d7883a 	add	r11,r2,r11
   25228:	88bff404 	addi	r2,r17,-48
   2522c:	30bff92e 	bgeu	r6,r2,25214 <__alt_mem_sdram_controller_0+0xc0025214>
   25230:	dac03115 	stw	r11,196(sp)
   25234:	003f3806 	br	24f18 <__alt_mem_sdram_controller_0+0xc0024f18>
   25238:	94802014 	ori	r18,r18,128
   2523c:	bc400007 	ldb	r17,0(r23)
   25240:	003f3406 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25244:	18c03fcc 	andi	r3,r3,255
   25248:	1807471e 	bne	r3,zero,26f68 <___svfprintf_internal_r+0x21a4>
   2524c:	9080020c 	andi	r2,r18,8
   25250:	10047d26 	beq	r2,zero,26448 <___svfprintf_internal_r+0x1684>
   25254:	d8c02d17 	ldw	r3,180(sp)
   25258:	d9002d17 	ldw	r4,180(sp)
   2525c:	d9402d17 	ldw	r5,180(sp)
   25260:	18c00017 	ldw	r3,0(r3)
   25264:	21000117 	ldw	r4,4(r4)
   25268:	29400204 	addi	r5,r5,8
   2526c:	d8c03615 	stw	r3,216(sp)
   25270:	d9003715 	stw	r4,220(sp)
   25274:	d9402d15 	stw	r5,180(sp)
   25278:	d9003617 	ldw	r4,216(sp)
   2527c:	d9403717 	ldw	r5,220(sp)
   25280:	da003e15 	stw	r8,248(sp)
   25284:	04000044 	movi	r16,1
   25288:	002ce180 	call	2ce18 <__fpclassifyd>
   2528c:	da003e17 	ldw	r8,248(sp)
   25290:	14044b1e 	bne	r2,r16,263c0 <___svfprintf_internal_r+0x15fc>
   25294:	d9003617 	ldw	r4,216(sp)
   25298:	d9403717 	ldw	r5,220(sp)
   2529c:	000d883a 	mov	r6,zero
   252a0:	000f883a 	mov	r7,zero
   252a4:	00320d40 	call	320d4 <__ledf2>
   252a8:	da003e17 	ldw	r8,248(sp)
   252ac:	1005f316 	blt	r2,zero,26a7c <___svfprintf_internal_r+0x1cb8>
   252b0:	df002783 	ldbu	fp,158(sp)
   252b4:	008011c4 	movi	r2,71
   252b8:	1445590e 	bge	r2,r17,26820 <___svfprintf_internal_r+0x1a5c>
   252bc:	040000f4 	movhi	r16,3
   252c0:	8418c404 	addi	r16,r16,25360
   252c4:	00c000c4 	movi	r3,3
   252c8:	00bfdfc4 	movi	r2,-129
   252cc:	d8c02a15 	stw	r3,168(sp)
   252d0:	90a4703a 	and	r18,r18,r2
   252d4:	d8c02e15 	stw	r3,184(sp)
   252d8:	d8002915 	stw	zero,164(sp)
   252dc:	d8003215 	stw	zero,200(sp)
   252e0:	00006606 	br	2547c <___svfprintf_internal_r+0x6b8>
   252e4:	94800214 	ori	r18,r18,8
   252e8:	bc400007 	ldb	r17,0(r23)
   252ec:	003f0906 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   252f0:	18c03fcc 	andi	r3,r3,255
   252f4:	1807181e 	bne	r3,zero,26f58 <___svfprintf_internal_r+0x2194>
   252f8:	94800414 	ori	r18,r18,16
   252fc:	9080080c 	andi	r2,r18,32
   25300:	10039626 	beq	r2,zero,2615c <___svfprintf_internal_r+0x1398>
   25304:	d9402d17 	ldw	r5,180(sp)
   25308:	28800117 	ldw	r2,4(r5)
   2530c:	2d000017 	ldw	r20,0(r5)
   25310:	29400204 	addi	r5,r5,8
   25314:	d9402d15 	stw	r5,180(sp)
   25318:	102d883a 	mov	r22,r2
   2531c:	10039816 	blt	r2,zero,26180 <___svfprintf_internal_r+0x13bc>
   25320:	d9402917 	ldw	r5,164(sp)
   25324:	df002783 	ldbu	fp,158(sp)
   25328:	2803ab16 	blt	r5,zero,261d8 <___svfprintf_internal_r+0x1414>
   2532c:	00ffdfc4 	movi	r3,-129
   25330:	a584b03a 	or	r2,r20,r22
   25334:	90e4703a 	and	r18,r18,r3
   25338:	10014a26 	beq	r2,zero,25864 <___svfprintf_internal_r+0xaa0>
   2533c:	b0034b26 	beq	r22,zero,2606c <___svfprintf_internal_r+0x12a8>
   25340:	dc402a15 	stw	r17,168(sp)
   25344:	dc001e04 	addi	r16,sp,120
   25348:	b023883a 	mov	r17,r22
   2534c:	402d883a 	mov	r22,r8
   25350:	a009883a 	mov	r4,r20
   25354:	880b883a 	mov	r5,r17
   25358:	01800284 	movi	r6,10
   2535c:	000f883a 	mov	r7,zero
   25360:	00308a40 	call	308a4 <__umoddi3>
   25364:	10800c04 	addi	r2,r2,48
   25368:	843fffc4 	addi	r16,r16,-1
   2536c:	a009883a 	mov	r4,r20
   25370:	880b883a 	mov	r5,r17
   25374:	80800005 	stb	r2,0(r16)
   25378:	01800284 	movi	r6,10
   2537c:	000f883a 	mov	r7,zero
   25380:	003032c0 	call	3032c <__udivdi3>
   25384:	1029883a 	mov	r20,r2
   25388:	10c4b03a 	or	r2,r2,r3
   2538c:	1823883a 	mov	r17,r3
   25390:	103fef1e 	bne	r2,zero,25350 <__alt_mem_sdram_controller_0+0xc0025350>
   25394:	d8c02817 	ldw	r3,160(sp)
   25398:	dc402a17 	ldw	r17,168(sp)
   2539c:	b011883a 	mov	r8,r22
   253a0:	1c07c83a 	sub	r3,r3,r16
   253a4:	d8c02e15 	stw	r3,184(sp)
   253a8:	00002e06 	br	25464 <___svfprintf_internal_r+0x6a0>
   253ac:	18c03fcc 	andi	r3,r3,255
   253b0:	1806e71e 	bne	r3,zero,26f50 <___svfprintf_internal_r+0x218c>
   253b4:	94800414 	ori	r18,r18,16
   253b8:	9080080c 	andi	r2,r18,32
   253bc:	1002d426 	beq	r2,zero,25f10 <___svfprintf_internal_r+0x114c>
   253c0:	d9402d17 	ldw	r5,180(sp)
   253c4:	d8c02917 	ldw	r3,164(sp)
   253c8:	d8002785 	stb	zero,158(sp)
   253cc:	28800204 	addi	r2,r5,8
   253d0:	2d000017 	ldw	r20,0(r5)
   253d4:	2d800117 	ldw	r22,4(r5)
   253d8:	18041516 	blt	r3,zero,26430 <___svfprintf_internal_r+0x166c>
   253dc:	013fdfc4 	movi	r4,-129
   253e0:	a586b03a 	or	r3,r20,r22
   253e4:	d8802d15 	stw	r2,180(sp)
   253e8:	9124703a 	and	r18,r18,r4
   253ec:	1802d51e 	bne	r3,zero,25f44 <___svfprintf_internal_r+0x1180>
   253f0:	d9402917 	ldw	r5,164(sp)
   253f4:	0039883a 	mov	fp,zero
   253f8:	2806be26 	beq	r5,zero,26ef4 <___svfprintf_internal_r+0x2130>
   253fc:	0029883a 	mov	r20,zero
   25400:	002d883a 	mov	r22,zero
   25404:	dc001e04 	addi	r16,sp,120
   25408:	a006d0fa 	srli	r3,r20,3
   2540c:	b008977a 	slli	r4,r22,29
   25410:	b02cd0fa 	srli	r22,r22,3
   25414:	a50001cc 	andi	r20,r20,7
   25418:	a0800c04 	addi	r2,r20,48
   2541c:	843fffc4 	addi	r16,r16,-1
   25420:	20e8b03a 	or	r20,r4,r3
   25424:	80800005 	stb	r2,0(r16)
   25428:	a586b03a 	or	r3,r20,r22
   2542c:	183ff61e 	bne	r3,zero,25408 <__alt_mem_sdram_controller_0+0xc0025408>
   25430:	90c0004c 	andi	r3,r18,1
   25434:	18013926 	beq	r3,zero,2591c <___svfprintf_internal_r+0xb58>
   25438:	10803fcc 	andi	r2,r2,255
   2543c:	1080201c 	xori	r2,r2,128
   25440:	10bfe004 	addi	r2,r2,-128
   25444:	00c00c04 	movi	r3,48
   25448:	10c13426 	beq	r2,r3,2591c <___svfprintf_internal_r+0xb58>
   2544c:	80ffffc5 	stb	r3,-1(r16)
   25450:	d8c02817 	ldw	r3,160(sp)
   25454:	80bfffc4 	addi	r2,r16,-1
   25458:	1021883a 	mov	r16,r2
   2545c:	1887c83a 	sub	r3,r3,r2
   25460:	d8c02e15 	stw	r3,184(sp)
   25464:	d8802e17 	ldw	r2,184(sp)
   25468:	d9002917 	ldw	r4,164(sp)
   2546c:	1100010e 	bge	r2,r4,25474 <___svfprintf_internal_r+0x6b0>
   25470:	2005883a 	mov	r2,r4
   25474:	d8802a15 	stw	r2,168(sp)
   25478:	d8003215 	stw	zero,200(sp)
   2547c:	e7003fcc 	andi	fp,fp,255
   25480:	e700201c 	xori	fp,fp,128
   25484:	e73fe004 	addi	fp,fp,-128
   25488:	e0000326 	beq	fp,zero,25498 <___svfprintf_internal_r+0x6d4>
   2548c:	d8c02a17 	ldw	r3,168(sp)
   25490:	18c00044 	addi	r3,r3,1
   25494:	d8c02a15 	stw	r3,168(sp)
   25498:	90c0008c 	andi	r3,r18,2
   2549c:	d8c02b15 	stw	r3,172(sp)
   254a0:	18000326 	beq	r3,zero,254b0 <___svfprintf_internal_r+0x6ec>
   254a4:	d8c02a17 	ldw	r3,168(sp)
   254a8:	18c00084 	addi	r3,r3,2
   254ac:	d8c02a15 	stw	r3,168(sp)
   254b0:	90c0210c 	andi	r3,r18,132
   254b4:	d8c03015 	stw	r3,192(sp)
   254b8:	1801a11e 	bne	r3,zero,25b40 <___svfprintf_internal_r+0xd7c>
   254bc:	d9003117 	ldw	r4,196(sp)
   254c0:	d8c02a17 	ldw	r3,168(sp)
   254c4:	20e9c83a 	sub	r20,r4,r3
   254c8:	05019d0e 	bge	zero,r20,25b40 <___svfprintf_internal_r+0xd7c>
   254cc:	02400404 	movi	r9,16
   254d0:	d8c02017 	ldw	r3,128(sp)
   254d4:	d8801f17 	ldw	r2,124(sp)
   254d8:	4d051b0e 	bge	r9,r20,26948 <___svfprintf_internal_r+0x1b84>
   254dc:	014000f4 	movhi	r5,3
   254e0:	2958d784 	addi	r5,r5,25438
   254e4:	dc403c15 	stw	r17,240(sp)
   254e8:	d9403515 	stw	r5,212(sp)
   254ec:	a023883a 	mov	r17,r20
   254f0:	482d883a 	mov	r22,r9
   254f4:	9029883a 	mov	r20,r18
   254f8:	070001c4 	movi	fp,7
   254fc:	8025883a 	mov	r18,r16
   25500:	dc002c17 	ldw	r16,176(sp)
   25504:	00000306 	br	25514 <___svfprintf_internal_r+0x750>
   25508:	8c7ffc04 	addi	r17,r17,-16
   2550c:	42000204 	addi	r8,r8,8
   25510:	b440130e 	bge	r22,r17,25560 <___svfprintf_internal_r+0x79c>
   25514:	010000f4 	movhi	r4,3
   25518:	18c00404 	addi	r3,r3,16
   2551c:	10800044 	addi	r2,r2,1
   25520:	2118d784 	addi	r4,r4,25438
   25524:	41000015 	stw	r4,0(r8)
   25528:	45800115 	stw	r22,4(r8)
   2552c:	d8c02015 	stw	r3,128(sp)
   25530:	d8801f15 	stw	r2,124(sp)
   25534:	e0bff40e 	bge	fp,r2,25508 <__alt_mem_sdram_controller_0+0xc0025508>
   25538:	d9801e04 	addi	r6,sp,120
   2553c:	800b883a 	mov	r5,r16
   25540:	9809883a 	mov	r4,r19
   25544:	002d26c0 	call	2d26c <__ssprint_r>
   25548:	103f031e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   2554c:	8c7ffc04 	addi	r17,r17,-16
   25550:	d8c02017 	ldw	r3,128(sp)
   25554:	d8801f17 	ldw	r2,124(sp)
   25558:	da000404 	addi	r8,sp,16
   2555c:	b47fed16 	blt	r22,r17,25514 <__alt_mem_sdram_controller_0+0xc0025514>
   25560:	9021883a 	mov	r16,r18
   25564:	a025883a 	mov	r18,r20
   25568:	8829883a 	mov	r20,r17
   2556c:	dc403c17 	ldw	r17,240(sp)
   25570:	d9403517 	ldw	r5,212(sp)
   25574:	a0c7883a 	add	r3,r20,r3
   25578:	10800044 	addi	r2,r2,1
   2557c:	41400015 	stw	r5,0(r8)
   25580:	45000115 	stw	r20,4(r8)
   25584:	d8c02015 	stw	r3,128(sp)
   25588:	d8801f15 	stw	r2,124(sp)
   2558c:	010001c4 	movi	r4,7
   25590:	20829f16 	blt	r4,r2,26010 <___svfprintf_internal_r+0x124c>
   25594:	df002787 	ldb	fp,158(sp)
   25598:	42000204 	addi	r8,r8,8
   2559c:	e0000c26 	beq	fp,zero,255d0 <___svfprintf_internal_r+0x80c>
   255a0:	d8801f17 	ldw	r2,124(sp)
   255a4:	d9002784 	addi	r4,sp,158
   255a8:	18c00044 	addi	r3,r3,1
   255ac:	10800044 	addi	r2,r2,1
   255b0:	41000015 	stw	r4,0(r8)
   255b4:	01000044 	movi	r4,1
   255b8:	41000115 	stw	r4,4(r8)
   255bc:	d8c02015 	stw	r3,128(sp)
   255c0:	d8801f15 	stw	r2,124(sp)
   255c4:	010001c4 	movi	r4,7
   255c8:	20823816 	blt	r4,r2,25eac <___svfprintf_internal_r+0x10e8>
   255cc:	42000204 	addi	r8,r8,8
   255d0:	d8802b17 	ldw	r2,172(sp)
   255d4:	10000c26 	beq	r2,zero,25608 <___svfprintf_internal_r+0x844>
   255d8:	d8801f17 	ldw	r2,124(sp)
   255dc:	d9002704 	addi	r4,sp,156
   255e0:	18c00084 	addi	r3,r3,2
   255e4:	10800044 	addi	r2,r2,1
   255e8:	41000015 	stw	r4,0(r8)
   255ec:	01000084 	movi	r4,2
   255f0:	41000115 	stw	r4,4(r8)
   255f4:	d8c02015 	stw	r3,128(sp)
   255f8:	d8801f15 	stw	r2,124(sp)
   255fc:	010001c4 	movi	r4,7
   25600:	20823216 	blt	r4,r2,25ecc <___svfprintf_internal_r+0x1108>
   25604:	42000204 	addi	r8,r8,8
   25608:	d9003017 	ldw	r4,192(sp)
   2560c:	00802004 	movi	r2,128
   25610:	20819726 	beq	r4,r2,25c70 <___svfprintf_internal_r+0xeac>
   25614:	d9402917 	ldw	r5,164(sp)
   25618:	d8802e17 	ldw	r2,184(sp)
   2561c:	28adc83a 	sub	r22,r5,r2
   25620:	05802f0e 	bge	zero,r22,256e0 <___svfprintf_internal_r+0x91c>
   25624:	07000404 	movi	fp,16
   25628:	d8801f17 	ldw	r2,124(sp)
   2562c:	e583c00e 	bge	fp,r22,26530 <___svfprintf_internal_r+0x176c>
   25630:	014000f4 	movhi	r5,3
   25634:	2958d384 	addi	r5,r5,25422
   25638:	dc402915 	stw	r17,164(sp)
   2563c:	d9402b15 	stw	r5,172(sp)
   25640:	b023883a 	mov	r17,r22
   25644:	050001c4 	movi	r20,7
   25648:	902d883a 	mov	r22,r18
   2564c:	8025883a 	mov	r18,r16
   25650:	dc002c17 	ldw	r16,176(sp)
   25654:	00000306 	br	25664 <___svfprintf_internal_r+0x8a0>
   25658:	8c7ffc04 	addi	r17,r17,-16
   2565c:	42000204 	addi	r8,r8,8
   25660:	e440110e 	bge	fp,r17,256a8 <___svfprintf_internal_r+0x8e4>
   25664:	18c00404 	addi	r3,r3,16
   25668:	10800044 	addi	r2,r2,1
   2566c:	45400015 	stw	r21,0(r8)
   25670:	47000115 	stw	fp,4(r8)
   25674:	d8c02015 	stw	r3,128(sp)
   25678:	d8801f15 	stw	r2,124(sp)
   2567c:	a0bff60e 	bge	r20,r2,25658 <__alt_mem_sdram_controller_0+0xc0025658>
   25680:	d9801e04 	addi	r6,sp,120
   25684:	800b883a 	mov	r5,r16
   25688:	9809883a 	mov	r4,r19
   2568c:	002d26c0 	call	2d26c <__ssprint_r>
   25690:	103eb11e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25694:	8c7ffc04 	addi	r17,r17,-16
   25698:	d8c02017 	ldw	r3,128(sp)
   2569c:	d8801f17 	ldw	r2,124(sp)
   256a0:	da000404 	addi	r8,sp,16
   256a4:	e47fef16 	blt	fp,r17,25664 <__alt_mem_sdram_controller_0+0xc0025664>
   256a8:	9021883a 	mov	r16,r18
   256ac:	b025883a 	mov	r18,r22
   256b0:	882d883a 	mov	r22,r17
   256b4:	dc402917 	ldw	r17,164(sp)
   256b8:	d9002b17 	ldw	r4,172(sp)
   256bc:	1d87883a 	add	r3,r3,r22
   256c0:	10800044 	addi	r2,r2,1
   256c4:	41000015 	stw	r4,0(r8)
   256c8:	45800115 	stw	r22,4(r8)
   256cc:	d8c02015 	stw	r3,128(sp)
   256d0:	d8801f15 	stw	r2,124(sp)
   256d4:	010001c4 	movi	r4,7
   256d8:	2081ec16 	blt	r4,r2,25e8c <___svfprintf_internal_r+0x10c8>
   256dc:	42000204 	addi	r8,r8,8
   256e0:	9080400c 	andi	r2,r18,256
   256e4:	1001181e 	bne	r2,zero,25b48 <___svfprintf_internal_r+0xd84>
   256e8:	d9402e17 	ldw	r5,184(sp)
   256ec:	d8801f17 	ldw	r2,124(sp)
   256f0:	44000015 	stw	r16,0(r8)
   256f4:	1947883a 	add	r3,r3,r5
   256f8:	10800044 	addi	r2,r2,1
   256fc:	41400115 	stw	r5,4(r8)
   25700:	d8c02015 	stw	r3,128(sp)
   25704:	d8801f15 	stw	r2,124(sp)
   25708:	010001c4 	movi	r4,7
   2570c:	2081d116 	blt	r4,r2,25e54 <___svfprintf_internal_r+0x1090>
   25710:	42000204 	addi	r8,r8,8
   25714:	9480010c 	andi	r18,r18,4
   25718:	90003226 	beq	r18,zero,257e4 <___svfprintf_internal_r+0xa20>
   2571c:	d9403117 	ldw	r5,196(sp)
   25720:	d8802a17 	ldw	r2,168(sp)
   25724:	28a1c83a 	sub	r16,r5,r2
   25728:	04002e0e 	bge	zero,r16,257e4 <___svfprintf_internal_r+0xa20>
   2572c:	04400404 	movi	r17,16
   25730:	d8801f17 	ldw	r2,124(sp)
   25734:	8c04b90e 	bge	r17,r16,26a1c <___svfprintf_internal_r+0x1c58>
   25738:	014000f4 	movhi	r5,3
   2573c:	2958d784 	addi	r5,r5,25438
   25740:	d9403515 	stw	r5,212(sp)
   25744:	048001c4 	movi	r18,7
   25748:	dd002c17 	ldw	r20,176(sp)
   2574c:	00000306 	br	2575c <___svfprintf_internal_r+0x998>
   25750:	843ffc04 	addi	r16,r16,-16
   25754:	42000204 	addi	r8,r8,8
   25758:	8c00130e 	bge	r17,r16,257a8 <___svfprintf_internal_r+0x9e4>
   2575c:	010000f4 	movhi	r4,3
   25760:	18c00404 	addi	r3,r3,16
   25764:	10800044 	addi	r2,r2,1
   25768:	2118d784 	addi	r4,r4,25438
   2576c:	41000015 	stw	r4,0(r8)
   25770:	44400115 	stw	r17,4(r8)
   25774:	d8c02015 	stw	r3,128(sp)
   25778:	d8801f15 	stw	r2,124(sp)
   2577c:	90bff40e 	bge	r18,r2,25750 <__alt_mem_sdram_controller_0+0xc0025750>
   25780:	d9801e04 	addi	r6,sp,120
   25784:	a00b883a 	mov	r5,r20
   25788:	9809883a 	mov	r4,r19
   2578c:	002d26c0 	call	2d26c <__ssprint_r>
   25790:	103e711e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25794:	843ffc04 	addi	r16,r16,-16
   25798:	d8c02017 	ldw	r3,128(sp)
   2579c:	d8801f17 	ldw	r2,124(sp)
   257a0:	da000404 	addi	r8,sp,16
   257a4:	8c3fed16 	blt	r17,r16,2575c <__alt_mem_sdram_controller_0+0xc002575c>
   257a8:	d9403517 	ldw	r5,212(sp)
   257ac:	1c07883a 	add	r3,r3,r16
   257b0:	10800044 	addi	r2,r2,1
   257b4:	41400015 	stw	r5,0(r8)
   257b8:	44000115 	stw	r16,4(r8)
   257bc:	d8c02015 	stw	r3,128(sp)
   257c0:	d8801f15 	stw	r2,124(sp)
   257c4:	010001c4 	movi	r4,7
   257c8:	2080060e 	bge	r4,r2,257e4 <___svfprintf_internal_r+0xa20>
   257cc:	d9402c17 	ldw	r5,176(sp)
   257d0:	d9801e04 	addi	r6,sp,120
   257d4:	9809883a 	mov	r4,r19
   257d8:	002d26c0 	call	2d26c <__ssprint_r>
   257dc:	103e5e1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   257e0:	d8c02017 	ldw	r3,128(sp)
   257e4:	d8803117 	ldw	r2,196(sp)
   257e8:	d9002a17 	ldw	r4,168(sp)
   257ec:	1100010e 	bge	r2,r4,257f4 <___svfprintf_internal_r+0xa30>
   257f0:	2005883a 	mov	r2,r4
   257f4:	d9402f17 	ldw	r5,188(sp)
   257f8:	288b883a 	add	r5,r5,r2
   257fc:	d9402f15 	stw	r5,188(sp)
   25800:	18019c1e 	bne	r3,zero,25e74 <___svfprintf_internal_r+0x10b0>
   25804:	b8800007 	ldb	r2,0(r23)
   25808:	d8001f15 	stw	zero,124(sp)
   2580c:	da000404 	addi	r8,sp,16
   25810:	103d991e 	bne	r2,zero,24e78 <__alt_mem_sdram_controller_0+0xc0024e78>
   25814:	b821883a 	mov	r16,r23
   25818:	003daf06 	br	24ed8 <__alt_mem_sdram_controller_0+0xc0024ed8>
   2581c:	18c03fcc 	andi	r3,r3,255
   25820:	1805c71e 	bne	r3,zero,26f40 <___svfprintf_internal_r+0x217c>
   25824:	94800414 	ori	r18,r18,16
   25828:	9080080c 	andi	r2,r18,32
   2582c:	10020126 	beq	r2,zero,26034 <___svfprintf_internal_r+0x1270>
   25830:	d8802d17 	ldw	r2,180(sp)
   25834:	d9002917 	ldw	r4,164(sp)
   25838:	d8002785 	stb	zero,158(sp)
   2583c:	10c00204 	addi	r3,r2,8
   25840:	15000017 	ldw	r20,0(r2)
   25844:	15800117 	ldw	r22,4(r2)
   25848:	20038e16 	blt	r4,zero,26684 <___svfprintf_internal_r+0x18c0>
   2584c:	013fdfc4 	movi	r4,-129
   25850:	a584b03a 	or	r2,r20,r22
   25854:	d8c02d15 	stw	r3,180(sp)
   25858:	9124703a 	and	r18,r18,r4
   2585c:	0039883a 	mov	fp,zero
   25860:	103eb61e 	bne	r2,zero,2533c <__alt_mem_sdram_controller_0+0xc002533c>
   25864:	d8802917 	ldw	r2,164(sp)
   25868:	1002c81e 	bne	r2,zero,2638c <___svfprintf_internal_r+0x15c8>
   2586c:	d8002915 	stw	zero,164(sp)
   25870:	d8002e15 	stw	zero,184(sp)
   25874:	dc001e04 	addi	r16,sp,120
   25878:	003efa06 	br	25464 <__alt_mem_sdram_controller_0+0xc0025464>
   2587c:	18c03fcc 	andi	r3,r3,255
   25880:	1805ad1e 	bne	r3,zero,26f38 <___svfprintf_internal_r+0x2174>
   25884:	014000f4 	movhi	r5,3
   25888:	2958c704 	addi	r5,r5,25372
   2588c:	d9403a15 	stw	r5,232(sp)
   25890:	9080080c 	andi	r2,r18,32
   25894:	10006126 	beq	r2,zero,25a1c <___svfprintf_internal_r+0xc58>
   25898:	d8802d17 	ldw	r2,180(sp)
   2589c:	15000017 	ldw	r20,0(r2)
   258a0:	15800117 	ldw	r22,4(r2)
   258a4:	10800204 	addi	r2,r2,8
   258a8:	d8802d15 	stw	r2,180(sp)
   258ac:	9080004c 	andi	r2,r18,1
   258b0:	10018e26 	beq	r2,zero,25eec <___svfprintf_internal_r+0x1128>
   258b4:	a584b03a 	or	r2,r20,r22
   258b8:	10030926 	beq	r2,zero,264e0 <___svfprintf_internal_r+0x171c>
   258bc:	d8c02917 	ldw	r3,164(sp)
   258c0:	00800c04 	movi	r2,48
   258c4:	d8802705 	stb	r2,156(sp)
   258c8:	dc402745 	stb	r17,157(sp)
   258cc:	d8002785 	stb	zero,158(sp)
   258d0:	90800094 	ori	r2,r18,2
   258d4:	18048716 	blt	r3,zero,26af4 <___svfprintf_internal_r+0x1d30>
   258d8:	00bfdfc4 	movi	r2,-129
   258dc:	90a4703a 	and	r18,r18,r2
   258e0:	94800094 	ori	r18,r18,2
   258e4:	0039883a 	mov	fp,zero
   258e8:	d9003a17 	ldw	r4,232(sp)
   258ec:	dc001e04 	addi	r16,sp,120
   258f0:	a08003cc 	andi	r2,r20,15
   258f4:	b006973a 	slli	r3,r22,28
   258f8:	2085883a 	add	r2,r4,r2
   258fc:	a028d13a 	srli	r20,r20,4
   25900:	10800003 	ldbu	r2,0(r2)
   25904:	b02cd13a 	srli	r22,r22,4
   25908:	843fffc4 	addi	r16,r16,-1
   2590c:	1d28b03a 	or	r20,r3,r20
   25910:	80800005 	stb	r2,0(r16)
   25914:	a584b03a 	or	r2,r20,r22
   25918:	103ff51e 	bne	r2,zero,258f0 <__alt_mem_sdram_controller_0+0xc00258f0>
   2591c:	d8c02817 	ldw	r3,160(sp)
   25920:	1c07c83a 	sub	r3,r3,r16
   25924:	d8c02e15 	stw	r3,184(sp)
   25928:	003ece06 	br	25464 <__alt_mem_sdram_controller_0+0xc0025464>
   2592c:	d8c02d17 	ldw	r3,180(sp)
   25930:	d9002d17 	ldw	r4,180(sp)
   25934:	d8002785 	stb	zero,158(sp)
   25938:	18800017 	ldw	r2,0(r3)
   2593c:	21000104 	addi	r4,r4,4
   25940:	00c00044 	movi	r3,1
   25944:	d8c02a15 	stw	r3,168(sp)
   25948:	d8801405 	stb	r2,80(sp)
   2594c:	d9002d15 	stw	r4,180(sp)
   25950:	d8c02e15 	stw	r3,184(sp)
   25954:	d8002915 	stw	zero,164(sp)
   25958:	d8003215 	stw	zero,200(sp)
   2595c:	dc001404 	addi	r16,sp,80
   25960:	0039883a 	mov	fp,zero
   25964:	003ecc06 	br	25498 <__alt_mem_sdram_controller_0+0xc0025498>
   25968:	18c03fcc 	andi	r3,r3,255
   2596c:	183e9226 	beq	r3,zero,253b8 <__alt_mem_sdram_controller_0+0xc00253b8>
   25970:	d9c02785 	stb	r7,158(sp)
   25974:	003e9006 	br	253b8 <__alt_mem_sdram_controller_0+0xc00253b8>
   25978:	00c00044 	movi	r3,1
   2597c:	01c00ac4 	movi	r7,43
   25980:	bc400007 	ldb	r17,0(r23)
   25984:	003d6306 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25988:	94800814 	ori	r18,r18,32
   2598c:	bc400007 	ldb	r17,0(r23)
   25990:	003d6006 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25994:	d8c02d17 	ldw	r3,180(sp)
   25998:	d8002785 	stb	zero,158(sp)
   2599c:	1c000017 	ldw	r16,0(r3)
   259a0:	1d000104 	addi	r20,r3,4
   259a4:	80040f26 	beq	r16,zero,269e4 <___svfprintf_internal_r+0x1c20>
   259a8:	d9002917 	ldw	r4,164(sp)
   259ac:	2003dc16 	blt	r4,zero,26920 <___svfprintf_internal_r+0x1b5c>
   259b0:	200d883a 	mov	r6,r4
   259b4:	000b883a 	mov	r5,zero
   259b8:	8009883a 	mov	r4,r16
   259bc:	da003e15 	stw	r8,248(sp)
   259c0:	002b4d00 	call	2b4d0 <memchr>
   259c4:	da003e17 	ldw	r8,248(sp)
   259c8:	10045826 	beq	r2,zero,26b2c <___svfprintf_internal_r+0x1d68>
   259cc:	1405c83a 	sub	r2,r2,r16
   259d0:	d8802e15 	stw	r2,184(sp)
   259d4:	1003d816 	blt	r2,zero,26938 <___svfprintf_internal_r+0x1b74>
   259d8:	df002783 	ldbu	fp,158(sp)
   259dc:	d8802a15 	stw	r2,168(sp)
   259e0:	dd002d15 	stw	r20,180(sp)
   259e4:	d8002915 	stw	zero,164(sp)
   259e8:	d8003215 	stw	zero,200(sp)
   259ec:	003ea306 	br	2547c <__alt_mem_sdram_controller_0+0xc002547c>
   259f0:	18c03fcc 	andi	r3,r3,255
   259f4:	183f8c26 	beq	r3,zero,25828 <__alt_mem_sdram_controller_0+0xc0025828>
   259f8:	d9c02785 	stb	r7,158(sp)
   259fc:	003f8a06 	br	25828 <__alt_mem_sdram_controller_0+0xc0025828>
   25a00:	18c03fcc 	andi	r3,r3,255
   25a04:	1805631e 	bne	r3,zero,26f94 <___svfprintf_internal_r+0x21d0>
   25a08:	014000f4 	movhi	r5,3
   25a0c:	2958cc04 	addi	r5,r5,25392
   25a10:	d9403a15 	stw	r5,232(sp)
   25a14:	9080080c 	andi	r2,r18,32
   25a18:	103f9f1e 	bne	r2,zero,25898 <__alt_mem_sdram_controller_0+0xc0025898>
   25a1c:	9080040c 	andi	r2,r18,16
   25a20:	10029c26 	beq	r2,zero,26494 <___svfprintf_internal_r+0x16d0>
   25a24:	d8c02d17 	ldw	r3,180(sp)
   25a28:	002d883a 	mov	r22,zero
   25a2c:	1d000017 	ldw	r20,0(r3)
   25a30:	18c00104 	addi	r3,r3,4
   25a34:	d8c02d15 	stw	r3,180(sp)
   25a38:	003f9c06 	br	258ac <__alt_mem_sdram_controller_0+0xc00258ac>
   25a3c:	94800054 	ori	r18,r18,1
   25a40:	bc400007 	ldb	r17,0(r23)
   25a44:	003d3306 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25a48:	38803fcc 	andi	r2,r7,255
   25a4c:	1080201c 	xori	r2,r2,128
   25a50:	10bfe004 	addi	r2,r2,-128
   25a54:	1002971e 	bne	r2,zero,264b4 <___svfprintf_internal_r+0x16f0>
   25a58:	00c00044 	movi	r3,1
   25a5c:	01c00804 	movi	r7,32
   25a60:	bc400007 	ldb	r17,0(r23)
   25a64:	003d2b06 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25a68:	18c03fcc 	andi	r3,r3,255
   25a6c:	183e2326 	beq	r3,zero,252fc <__alt_mem_sdram_controller_0+0xc00252fc>
   25a70:	d9c02785 	stb	r7,158(sp)
   25a74:	003e2106 	br	252fc <__alt_mem_sdram_controller_0+0xc00252fc>
   25a78:	bc400007 	ldb	r17,0(r23)
   25a7c:	8a430426 	beq	r17,r9,26690 <___svfprintf_internal_r+0x18cc>
   25a80:	94800414 	ori	r18,r18,16
   25a84:	003d2306 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25a88:	18c03fcc 	andi	r3,r3,255
   25a8c:	18053f1e 	bne	r3,zero,26f8c <___svfprintf_internal_r+0x21c8>
   25a90:	9080080c 	andi	r2,r18,32
   25a94:	10028926 	beq	r2,zero,264bc <___svfprintf_internal_r+0x16f8>
   25a98:	d9402d17 	ldw	r5,180(sp)
   25a9c:	d9002f17 	ldw	r4,188(sp)
   25aa0:	28800017 	ldw	r2,0(r5)
   25aa4:	2007d7fa 	srai	r3,r4,31
   25aa8:	29400104 	addi	r5,r5,4
   25aac:	d9402d15 	stw	r5,180(sp)
   25ab0:	11000015 	stw	r4,0(r2)
   25ab4:	10c00115 	stw	r3,4(r2)
   25ab8:	003ced06 	br	24e70 <__alt_mem_sdram_controller_0+0xc0024e70>
   25abc:	94801014 	ori	r18,r18,64
   25ac0:	bc400007 	ldb	r17,0(r23)
   25ac4:	003d1306 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   25ac8:	010000f4 	movhi	r4,3
   25acc:	2118cc04 	addi	r4,r4,25392
   25ad0:	0039883a 	mov	fp,zero
   25ad4:	d9003a15 	stw	r4,232(sp)
   25ad8:	04401e04 	movi	r17,120
   25adc:	003f8206 	br	258e8 <__alt_mem_sdram_controller_0+0xc00258e8>
   25ae0:	18c03fcc 	andi	r3,r3,255
   25ae4:	1805221e 	bne	r3,zero,26f70 <___svfprintf_internal_r+0x21ac>
   25ae8:	883d9526 	beq	r17,zero,25140 <__alt_mem_sdram_controller_0+0xc0025140>
   25aec:	00c00044 	movi	r3,1
   25af0:	d8c02a15 	stw	r3,168(sp)
   25af4:	dc401405 	stb	r17,80(sp)
   25af8:	d8002785 	stb	zero,158(sp)
   25afc:	003f9406 	br	25950 <__alt_mem_sdram_controller_0+0xc0025950>
   25b00:	010000f4 	movhi	r4,3
   25b04:	2118cc04 	addi	r4,r4,25392
   25b08:	d9003a15 	stw	r4,232(sp)
   25b0c:	d8c02d15 	stw	r3,180(sp)
   25b10:	1025883a 	mov	r18,r2
   25b14:	04401e04 	movi	r17,120
   25b18:	a584b03a 	or	r2,r20,r22
   25b1c:	1000fa1e 	bne	r2,zero,25f08 <___svfprintf_internal_r+0x1144>
   25b20:	0039883a 	mov	fp,zero
   25b24:	00800084 	movi	r2,2
   25b28:	10803fcc 	andi	r2,r2,255
   25b2c:	00c00044 	movi	r3,1
   25b30:	10c21626 	beq	r2,r3,2638c <___svfprintf_internal_r+0x15c8>
   25b34:	00c00084 	movi	r3,2
   25b38:	10fe301e 	bne	r2,r3,253fc <__alt_mem_sdram_controller_0+0xc00253fc>
   25b3c:	003d7606 	br	25118 <__alt_mem_sdram_controller_0+0xc0025118>
   25b40:	d8c02017 	ldw	r3,128(sp)
   25b44:	003e9506 	br	2559c <__alt_mem_sdram_controller_0+0xc002559c>
   25b48:	00801944 	movi	r2,101
   25b4c:	14407c0e 	bge	r2,r17,25d40 <___svfprintf_internal_r+0xf7c>
   25b50:	d9003617 	ldw	r4,216(sp)
   25b54:	d9403717 	ldw	r5,220(sp)
   25b58:	000d883a 	mov	r6,zero
   25b5c:	000f883a 	mov	r7,zero
   25b60:	d8c03d15 	stw	r3,244(sp)
   25b64:	da003e15 	stw	r8,248(sp)
   25b68:	0031f700 	call	31f70 <__eqdf2>
   25b6c:	d8c03d17 	ldw	r3,244(sp)
   25b70:	da003e17 	ldw	r8,248(sp)
   25b74:	1000f51e 	bne	r2,zero,25f4c <___svfprintf_internal_r+0x1188>
   25b78:	d8801f17 	ldw	r2,124(sp)
   25b7c:	010000f4 	movhi	r4,3
   25b80:	2118d304 	addi	r4,r4,25420
   25b84:	18c00044 	addi	r3,r3,1
   25b88:	10800044 	addi	r2,r2,1
   25b8c:	41000015 	stw	r4,0(r8)
   25b90:	01000044 	movi	r4,1
   25b94:	41000115 	stw	r4,4(r8)
   25b98:	d8c02015 	stw	r3,128(sp)
   25b9c:	d8801f15 	stw	r2,124(sp)
   25ba0:	010001c4 	movi	r4,7
   25ba4:	20826616 	blt	r4,r2,26540 <___svfprintf_internal_r+0x177c>
   25ba8:	42000204 	addi	r8,r8,8
   25bac:	d8802617 	ldw	r2,152(sp)
   25bb0:	d9403317 	ldw	r5,204(sp)
   25bb4:	11400216 	blt	r2,r5,25bc0 <___svfprintf_internal_r+0xdfc>
   25bb8:	9080004c 	andi	r2,r18,1
   25bbc:	103ed526 	beq	r2,zero,25714 <__alt_mem_sdram_controller_0+0xc0025714>
   25bc0:	d8803817 	ldw	r2,224(sp)
   25bc4:	d9003417 	ldw	r4,208(sp)
   25bc8:	d9403817 	ldw	r5,224(sp)
   25bcc:	1887883a 	add	r3,r3,r2
   25bd0:	d8801f17 	ldw	r2,124(sp)
   25bd4:	41000015 	stw	r4,0(r8)
   25bd8:	41400115 	stw	r5,4(r8)
   25bdc:	10800044 	addi	r2,r2,1
   25be0:	d8c02015 	stw	r3,128(sp)
   25be4:	d8801f15 	stw	r2,124(sp)
   25be8:	010001c4 	movi	r4,7
   25bec:	2082af16 	blt	r4,r2,266ac <___svfprintf_internal_r+0x18e8>
   25bf0:	42000204 	addi	r8,r8,8
   25bf4:	d8803317 	ldw	r2,204(sp)
   25bf8:	143fffc4 	addi	r16,r2,-1
   25bfc:	043ec50e 	bge	zero,r16,25714 <__alt_mem_sdram_controller_0+0xc0025714>
   25c00:	04400404 	movi	r17,16
   25c04:	d8801f17 	ldw	r2,124(sp)
   25c08:	8c00860e 	bge	r17,r16,25e24 <___svfprintf_internal_r+0x1060>
   25c0c:	014000f4 	movhi	r5,3
   25c10:	2958d384 	addi	r5,r5,25422
   25c14:	d9402b15 	stw	r5,172(sp)
   25c18:	058001c4 	movi	r22,7
   25c1c:	dd002c17 	ldw	r20,176(sp)
   25c20:	00000306 	br	25c30 <___svfprintf_internal_r+0xe6c>
   25c24:	42000204 	addi	r8,r8,8
   25c28:	843ffc04 	addi	r16,r16,-16
   25c2c:	8c00800e 	bge	r17,r16,25e30 <___svfprintf_internal_r+0x106c>
   25c30:	18c00404 	addi	r3,r3,16
   25c34:	10800044 	addi	r2,r2,1
   25c38:	45400015 	stw	r21,0(r8)
   25c3c:	44400115 	stw	r17,4(r8)
   25c40:	d8c02015 	stw	r3,128(sp)
   25c44:	d8801f15 	stw	r2,124(sp)
   25c48:	b0bff60e 	bge	r22,r2,25c24 <__alt_mem_sdram_controller_0+0xc0025c24>
   25c4c:	d9801e04 	addi	r6,sp,120
   25c50:	a00b883a 	mov	r5,r20
   25c54:	9809883a 	mov	r4,r19
   25c58:	002d26c0 	call	2d26c <__ssprint_r>
   25c5c:	103d3e1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25c60:	d8c02017 	ldw	r3,128(sp)
   25c64:	d8801f17 	ldw	r2,124(sp)
   25c68:	da000404 	addi	r8,sp,16
   25c6c:	003fee06 	br	25c28 <__alt_mem_sdram_controller_0+0xc0025c28>
   25c70:	d9403117 	ldw	r5,196(sp)
   25c74:	d8802a17 	ldw	r2,168(sp)
   25c78:	28adc83a 	sub	r22,r5,r2
   25c7c:	05be650e 	bge	zero,r22,25614 <__alt_mem_sdram_controller_0+0xc0025614>
   25c80:	07000404 	movi	fp,16
   25c84:	d8801f17 	ldw	r2,124(sp)
   25c88:	e583a20e 	bge	fp,r22,26b14 <___svfprintf_internal_r+0x1d50>
   25c8c:	014000f4 	movhi	r5,3
   25c90:	2958d384 	addi	r5,r5,25422
   25c94:	dc403015 	stw	r17,192(sp)
   25c98:	d9402b15 	stw	r5,172(sp)
   25c9c:	b023883a 	mov	r17,r22
   25ca0:	050001c4 	movi	r20,7
   25ca4:	902d883a 	mov	r22,r18
   25ca8:	8025883a 	mov	r18,r16
   25cac:	dc002c17 	ldw	r16,176(sp)
   25cb0:	00000306 	br	25cc0 <___svfprintf_internal_r+0xefc>
   25cb4:	8c7ffc04 	addi	r17,r17,-16
   25cb8:	42000204 	addi	r8,r8,8
   25cbc:	e440110e 	bge	fp,r17,25d04 <___svfprintf_internal_r+0xf40>
   25cc0:	18c00404 	addi	r3,r3,16
   25cc4:	10800044 	addi	r2,r2,1
   25cc8:	45400015 	stw	r21,0(r8)
   25ccc:	47000115 	stw	fp,4(r8)
   25cd0:	d8c02015 	stw	r3,128(sp)
   25cd4:	d8801f15 	stw	r2,124(sp)
   25cd8:	a0bff60e 	bge	r20,r2,25cb4 <__alt_mem_sdram_controller_0+0xc0025cb4>
   25cdc:	d9801e04 	addi	r6,sp,120
   25ce0:	800b883a 	mov	r5,r16
   25ce4:	9809883a 	mov	r4,r19
   25ce8:	002d26c0 	call	2d26c <__ssprint_r>
   25cec:	103d1a1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25cf0:	8c7ffc04 	addi	r17,r17,-16
   25cf4:	d8c02017 	ldw	r3,128(sp)
   25cf8:	d8801f17 	ldw	r2,124(sp)
   25cfc:	da000404 	addi	r8,sp,16
   25d00:	e47fef16 	blt	fp,r17,25cc0 <__alt_mem_sdram_controller_0+0xc0025cc0>
   25d04:	9021883a 	mov	r16,r18
   25d08:	b025883a 	mov	r18,r22
   25d0c:	882d883a 	mov	r22,r17
   25d10:	dc403017 	ldw	r17,192(sp)
   25d14:	d9002b17 	ldw	r4,172(sp)
   25d18:	1d87883a 	add	r3,r3,r22
   25d1c:	10800044 	addi	r2,r2,1
   25d20:	41000015 	stw	r4,0(r8)
   25d24:	45800115 	stw	r22,4(r8)
   25d28:	d8c02015 	stw	r3,128(sp)
   25d2c:	d8801f15 	stw	r2,124(sp)
   25d30:	010001c4 	movi	r4,7
   25d34:	20819a16 	blt	r4,r2,263a0 <___svfprintf_internal_r+0x15dc>
   25d38:	42000204 	addi	r8,r8,8
   25d3c:	003e3506 	br	25614 <__alt_mem_sdram_controller_0+0xc0025614>
   25d40:	d9403317 	ldw	r5,204(sp)
   25d44:	00800044 	movi	r2,1
   25d48:	18c00044 	addi	r3,r3,1
   25d4c:	1141710e 	bge	r2,r5,26314 <___svfprintf_internal_r+0x1550>
   25d50:	dc401f17 	ldw	r17,124(sp)
   25d54:	00800044 	movi	r2,1
   25d58:	40800115 	stw	r2,4(r8)
   25d5c:	8c400044 	addi	r17,r17,1
   25d60:	44000015 	stw	r16,0(r8)
   25d64:	d8c02015 	stw	r3,128(sp)
   25d68:	dc401f15 	stw	r17,124(sp)
   25d6c:	008001c4 	movi	r2,7
   25d70:	14417416 	blt	r2,r17,26344 <___svfprintf_internal_r+0x1580>
   25d74:	42000204 	addi	r8,r8,8
   25d78:	d8803817 	ldw	r2,224(sp)
   25d7c:	d9003417 	ldw	r4,208(sp)
   25d80:	8c400044 	addi	r17,r17,1
   25d84:	10c7883a 	add	r3,r2,r3
   25d88:	40800115 	stw	r2,4(r8)
   25d8c:	41000015 	stw	r4,0(r8)
   25d90:	d8c02015 	stw	r3,128(sp)
   25d94:	dc401f15 	stw	r17,124(sp)
   25d98:	008001c4 	movi	r2,7
   25d9c:	14417216 	blt	r2,r17,26368 <___svfprintf_internal_r+0x15a4>
   25da0:	45800204 	addi	r22,r8,8
   25da4:	d9003617 	ldw	r4,216(sp)
   25da8:	d9403717 	ldw	r5,220(sp)
   25dac:	000d883a 	mov	r6,zero
   25db0:	000f883a 	mov	r7,zero
   25db4:	d8c03d15 	stw	r3,244(sp)
   25db8:	0031f700 	call	31f70 <__eqdf2>
   25dbc:	d8c03d17 	ldw	r3,244(sp)
   25dc0:	1000b326 	beq	r2,zero,26090 <___svfprintf_internal_r+0x12cc>
   25dc4:	d9403317 	ldw	r5,204(sp)
   25dc8:	84000044 	addi	r16,r16,1
   25dcc:	8c400044 	addi	r17,r17,1
   25dd0:	28bfffc4 	addi	r2,r5,-1
   25dd4:	1887883a 	add	r3,r3,r2
   25dd8:	b0800115 	stw	r2,4(r22)
   25ddc:	b4000015 	stw	r16,0(r22)
   25de0:	d8c02015 	stw	r3,128(sp)
   25de4:	dc401f15 	stw	r17,124(sp)
   25de8:	008001c4 	movi	r2,7
   25dec:	1440d216 	blt	r2,r17,26138 <___svfprintf_internal_r+0x1374>
   25df0:	b5800204 	addi	r22,r22,8
   25df4:	d9003b17 	ldw	r4,236(sp)
   25df8:	df0022c4 	addi	fp,sp,139
   25dfc:	8c400044 	addi	r17,r17,1
   25e00:	20c7883a 	add	r3,r4,r3
   25e04:	b7000015 	stw	fp,0(r22)
   25e08:	b1000115 	stw	r4,4(r22)
   25e0c:	d8c02015 	stw	r3,128(sp)
   25e10:	dc401f15 	stw	r17,124(sp)
   25e14:	008001c4 	movi	r2,7
   25e18:	14400e16 	blt	r2,r17,25e54 <___svfprintf_internal_r+0x1090>
   25e1c:	b2000204 	addi	r8,r22,8
   25e20:	003e3c06 	br	25714 <__alt_mem_sdram_controller_0+0xc0025714>
   25e24:	010000f4 	movhi	r4,3
   25e28:	2118d384 	addi	r4,r4,25422
   25e2c:	d9002b15 	stw	r4,172(sp)
   25e30:	d9002b17 	ldw	r4,172(sp)
   25e34:	1c07883a 	add	r3,r3,r16
   25e38:	44000115 	stw	r16,4(r8)
   25e3c:	41000015 	stw	r4,0(r8)
   25e40:	10800044 	addi	r2,r2,1
   25e44:	d8c02015 	stw	r3,128(sp)
   25e48:	d8801f15 	stw	r2,124(sp)
   25e4c:	010001c4 	movi	r4,7
   25e50:	20be2f0e 	bge	r4,r2,25710 <__alt_mem_sdram_controller_0+0xc0025710>
   25e54:	d9402c17 	ldw	r5,176(sp)
   25e58:	d9801e04 	addi	r6,sp,120
   25e5c:	9809883a 	mov	r4,r19
   25e60:	002d26c0 	call	2d26c <__ssprint_r>
   25e64:	103cbc1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25e68:	d8c02017 	ldw	r3,128(sp)
   25e6c:	da000404 	addi	r8,sp,16
   25e70:	003e2806 	br	25714 <__alt_mem_sdram_controller_0+0xc0025714>
   25e74:	d9402c17 	ldw	r5,176(sp)
   25e78:	d9801e04 	addi	r6,sp,120
   25e7c:	9809883a 	mov	r4,r19
   25e80:	002d26c0 	call	2d26c <__ssprint_r>
   25e84:	103e5f26 	beq	r2,zero,25804 <__alt_mem_sdram_controller_0+0xc0025804>
   25e88:	003cb306 	br	25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25e8c:	d9402c17 	ldw	r5,176(sp)
   25e90:	d9801e04 	addi	r6,sp,120
   25e94:	9809883a 	mov	r4,r19
   25e98:	002d26c0 	call	2d26c <__ssprint_r>
   25e9c:	103cae1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25ea0:	d8c02017 	ldw	r3,128(sp)
   25ea4:	da000404 	addi	r8,sp,16
   25ea8:	003e0d06 	br	256e0 <__alt_mem_sdram_controller_0+0xc00256e0>
   25eac:	d9402c17 	ldw	r5,176(sp)
   25eb0:	d9801e04 	addi	r6,sp,120
   25eb4:	9809883a 	mov	r4,r19
   25eb8:	002d26c0 	call	2d26c <__ssprint_r>
   25ebc:	103ca61e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25ec0:	d8c02017 	ldw	r3,128(sp)
   25ec4:	da000404 	addi	r8,sp,16
   25ec8:	003dc106 	br	255d0 <__alt_mem_sdram_controller_0+0xc00255d0>
   25ecc:	d9402c17 	ldw	r5,176(sp)
   25ed0:	d9801e04 	addi	r6,sp,120
   25ed4:	9809883a 	mov	r4,r19
   25ed8:	002d26c0 	call	2d26c <__ssprint_r>
   25edc:	103c9e1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   25ee0:	d8c02017 	ldw	r3,128(sp)
   25ee4:	da000404 	addi	r8,sp,16
   25ee8:	003dc706 	br	25608 <__alt_mem_sdram_controller_0+0xc0025608>
   25eec:	d8802917 	ldw	r2,164(sp)
   25ef0:	d8002785 	stb	zero,158(sp)
   25ef4:	103f0816 	blt	r2,zero,25b18 <__alt_mem_sdram_controller_0+0xc0025b18>
   25ef8:	00ffdfc4 	movi	r3,-129
   25efc:	a584b03a 	or	r2,r20,r22
   25f00:	90e4703a 	and	r18,r18,r3
   25f04:	103c8126 	beq	r2,zero,2510c <__alt_mem_sdram_controller_0+0xc002510c>
   25f08:	0039883a 	mov	fp,zero
   25f0c:	003e7606 	br	258e8 <__alt_mem_sdram_controller_0+0xc00258e8>
   25f10:	9080040c 	andi	r2,r18,16
   25f14:	10013d26 	beq	r2,zero,2640c <___svfprintf_internal_r+0x1648>
   25f18:	d9002d17 	ldw	r4,180(sp)
   25f1c:	d9402917 	ldw	r5,164(sp)
   25f20:	d8002785 	stb	zero,158(sp)
   25f24:	20800104 	addi	r2,r4,4
   25f28:	25000017 	ldw	r20,0(r4)
   25f2c:	002d883a 	mov	r22,zero
   25f30:	28013f16 	blt	r5,zero,26430 <___svfprintf_internal_r+0x166c>
   25f34:	00ffdfc4 	movi	r3,-129
   25f38:	d8802d15 	stw	r2,180(sp)
   25f3c:	90e4703a 	and	r18,r18,r3
   25f40:	a03d2b26 	beq	r20,zero,253f0 <__alt_mem_sdram_controller_0+0xc00253f0>
   25f44:	0039883a 	mov	fp,zero
   25f48:	003d2e06 	br	25404 <__alt_mem_sdram_controller_0+0xc0025404>
   25f4c:	dc402617 	ldw	r17,152(sp)
   25f50:	0441830e 	bge	zero,r17,26560 <___svfprintf_internal_r+0x179c>
   25f54:	dc403217 	ldw	r17,200(sp)
   25f58:	d8803317 	ldw	r2,204(sp)
   25f5c:	1440010e 	bge	r2,r17,25f64 <___svfprintf_internal_r+0x11a0>
   25f60:	1023883a 	mov	r17,r2
   25f64:	04400a0e 	bge	zero,r17,25f90 <___svfprintf_internal_r+0x11cc>
   25f68:	d8801f17 	ldw	r2,124(sp)
   25f6c:	1c47883a 	add	r3,r3,r17
   25f70:	44000015 	stw	r16,0(r8)
   25f74:	10800044 	addi	r2,r2,1
   25f78:	44400115 	stw	r17,4(r8)
   25f7c:	d8c02015 	stw	r3,128(sp)
   25f80:	d8801f15 	stw	r2,124(sp)
   25f84:	010001c4 	movi	r4,7
   25f88:	20827516 	blt	r4,r2,26960 <___svfprintf_internal_r+0x1b9c>
   25f8c:	42000204 	addi	r8,r8,8
   25f90:	88027b16 	blt	r17,zero,26980 <___svfprintf_internal_r+0x1bbc>
   25f94:	d9003217 	ldw	r4,200(sp)
   25f98:	2463c83a 	sub	r17,r4,r17
   25f9c:	0440990e 	bge	zero,r17,26204 <___svfprintf_internal_r+0x1440>
   25fa0:	05800404 	movi	r22,16
   25fa4:	d8801f17 	ldw	r2,124(sp)
   25fa8:	b441530e 	bge	r22,r17,264f8 <___svfprintf_internal_r+0x1734>
   25fac:	010000f4 	movhi	r4,3
   25fb0:	2118d384 	addi	r4,r4,25422
   25fb4:	d9002b15 	stw	r4,172(sp)
   25fb8:	070001c4 	movi	fp,7
   25fbc:	dd002c17 	ldw	r20,176(sp)
   25fc0:	00000306 	br	25fd0 <___svfprintf_internal_r+0x120c>
   25fc4:	42000204 	addi	r8,r8,8
   25fc8:	8c7ffc04 	addi	r17,r17,-16
   25fcc:	b4414d0e 	bge	r22,r17,26504 <___svfprintf_internal_r+0x1740>
   25fd0:	18c00404 	addi	r3,r3,16
   25fd4:	10800044 	addi	r2,r2,1
   25fd8:	45400015 	stw	r21,0(r8)
   25fdc:	45800115 	stw	r22,4(r8)
   25fe0:	d8c02015 	stw	r3,128(sp)
   25fe4:	d8801f15 	stw	r2,124(sp)
   25fe8:	e0bff60e 	bge	fp,r2,25fc4 <__alt_mem_sdram_controller_0+0xc0025fc4>
   25fec:	d9801e04 	addi	r6,sp,120
   25ff0:	a00b883a 	mov	r5,r20
   25ff4:	9809883a 	mov	r4,r19
   25ff8:	002d26c0 	call	2d26c <__ssprint_r>
   25ffc:	103c561e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26000:	d8c02017 	ldw	r3,128(sp)
   26004:	d8801f17 	ldw	r2,124(sp)
   26008:	da000404 	addi	r8,sp,16
   2600c:	003fee06 	br	25fc8 <__alt_mem_sdram_controller_0+0xc0025fc8>
   26010:	d9402c17 	ldw	r5,176(sp)
   26014:	d9801e04 	addi	r6,sp,120
   26018:	9809883a 	mov	r4,r19
   2601c:	002d26c0 	call	2d26c <__ssprint_r>
   26020:	103c4d1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26024:	d8c02017 	ldw	r3,128(sp)
   26028:	df002787 	ldb	fp,158(sp)
   2602c:	da000404 	addi	r8,sp,16
   26030:	003d5a06 	br	2559c <__alt_mem_sdram_controller_0+0xc002559c>
   26034:	9080040c 	andi	r2,r18,16
   26038:	10005c26 	beq	r2,zero,261ac <___svfprintf_internal_r+0x13e8>
   2603c:	d9402d17 	ldw	r5,180(sp)
   26040:	d8c02917 	ldw	r3,164(sp)
   26044:	d8002785 	stb	zero,158(sp)
   26048:	28800104 	addi	r2,r5,4
   2604c:	2d000017 	ldw	r20,0(r5)
   26050:	002d883a 	mov	r22,zero
   26054:	18005e16 	blt	r3,zero,261d0 <___svfprintf_internal_r+0x140c>
   26058:	00ffdfc4 	movi	r3,-129
   2605c:	d8802d15 	stw	r2,180(sp)
   26060:	90e4703a 	and	r18,r18,r3
   26064:	0039883a 	mov	fp,zero
   26068:	a03dfe26 	beq	r20,zero,25864 <__alt_mem_sdram_controller_0+0xc0025864>
   2606c:	00800244 	movi	r2,9
   26070:	153cb336 	bltu	r2,r20,25340 <__alt_mem_sdram_controller_0+0xc0025340>
   26074:	a5000c04 	addi	r20,r20,48
   26078:	dc001dc4 	addi	r16,sp,119
   2607c:	dd001dc5 	stb	r20,119(sp)
   26080:	d8c02817 	ldw	r3,160(sp)
   26084:	1c07c83a 	sub	r3,r3,r16
   26088:	d8c02e15 	stw	r3,184(sp)
   2608c:	003cf506 	br	25464 <__alt_mem_sdram_controller_0+0xc0025464>
   26090:	d8803317 	ldw	r2,204(sp)
   26094:	143fffc4 	addi	r16,r2,-1
   26098:	043f560e 	bge	zero,r16,25df4 <__alt_mem_sdram_controller_0+0xc0025df4>
   2609c:	07000404 	movi	fp,16
   260a0:	e403530e 	bge	fp,r16,26df0 <___svfprintf_internal_r+0x202c>
   260a4:	014000f4 	movhi	r5,3
   260a8:	2958d384 	addi	r5,r5,25422
   260ac:	d9402b15 	stw	r5,172(sp)
   260b0:	01c001c4 	movi	r7,7
   260b4:	dd002c17 	ldw	r20,176(sp)
   260b8:	00000306 	br	260c8 <___svfprintf_internal_r+0x1304>
   260bc:	843ffc04 	addi	r16,r16,-16
   260c0:	b5800204 	addi	r22,r22,8
   260c4:	e400130e 	bge	fp,r16,26114 <___svfprintf_internal_r+0x1350>
   260c8:	18c00404 	addi	r3,r3,16
   260cc:	8c400044 	addi	r17,r17,1
   260d0:	b5400015 	stw	r21,0(r22)
   260d4:	b7000115 	stw	fp,4(r22)
   260d8:	d8c02015 	stw	r3,128(sp)
   260dc:	dc401f15 	stw	r17,124(sp)
   260e0:	3c7ff60e 	bge	r7,r17,260bc <__alt_mem_sdram_controller_0+0xc00260bc>
   260e4:	d9801e04 	addi	r6,sp,120
   260e8:	a00b883a 	mov	r5,r20
   260ec:	9809883a 	mov	r4,r19
   260f0:	d9c03d15 	stw	r7,244(sp)
   260f4:	002d26c0 	call	2d26c <__ssprint_r>
   260f8:	d9c03d17 	ldw	r7,244(sp)
   260fc:	103c161e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26100:	843ffc04 	addi	r16,r16,-16
   26104:	d8c02017 	ldw	r3,128(sp)
   26108:	dc401f17 	ldw	r17,124(sp)
   2610c:	dd800404 	addi	r22,sp,16
   26110:	e43fed16 	blt	fp,r16,260c8 <__alt_mem_sdram_controller_0+0xc00260c8>
   26114:	d8802b17 	ldw	r2,172(sp)
   26118:	1c07883a 	add	r3,r3,r16
   2611c:	8c400044 	addi	r17,r17,1
   26120:	b0800015 	stw	r2,0(r22)
   26124:	b4000115 	stw	r16,4(r22)
   26128:	d8c02015 	stw	r3,128(sp)
   2612c:	dc401f15 	stw	r17,124(sp)
   26130:	008001c4 	movi	r2,7
   26134:	147f2e0e 	bge	r2,r17,25df0 <__alt_mem_sdram_controller_0+0xc0025df0>
   26138:	d9402c17 	ldw	r5,176(sp)
   2613c:	d9801e04 	addi	r6,sp,120
   26140:	9809883a 	mov	r4,r19
   26144:	002d26c0 	call	2d26c <__ssprint_r>
   26148:	103c031e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   2614c:	d8c02017 	ldw	r3,128(sp)
   26150:	dc401f17 	ldw	r17,124(sp)
   26154:	dd800404 	addi	r22,sp,16
   26158:	003f2606 	br	25df4 <__alt_mem_sdram_controller_0+0xc0025df4>
   2615c:	9080040c 	andi	r2,r18,16
   26160:	1000c326 	beq	r2,zero,26470 <___svfprintf_internal_r+0x16ac>
   26164:	d8802d17 	ldw	r2,180(sp)
   26168:	15000017 	ldw	r20,0(r2)
   2616c:	10800104 	addi	r2,r2,4
   26170:	d8802d15 	stw	r2,180(sp)
   26174:	a02dd7fa 	srai	r22,r20,31
   26178:	b005883a 	mov	r2,r22
   2617c:	103c680e 	bge	r2,zero,25320 <__alt_mem_sdram_controller_0+0xc0025320>
   26180:	0529c83a 	sub	r20,zero,r20
   26184:	a004c03a 	cmpne	r2,r20,zero
   26188:	05adc83a 	sub	r22,zero,r22
   2618c:	b0adc83a 	sub	r22,r22,r2
   26190:	d8802917 	ldw	r2,164(sp)
   26194:	07000b44 	movi	fp,45
   26198:	df002785 	stb	fp,158(sp)
   2619c:	10022e16 	blt	r2,zero,26a58 <___svfprintf_internal_r+0x1c94>
   261a0:	00bfdfc4 	movi	r2,-129
   261a4:	90a4703a 	and	r18,r18,r2
   261a8:	003c6406 	br	2533c <__alt_mem_sdram_controller_0+0xc002533c>
   261ac:	9080100c 	andi	r2,r18,64
   261b0:	d8002785 	stb	zero,158(sp)
   261b4:	10012526 	beq	r2,zero,2664c <___svfprintf_internal_r+0x1888>
   261b8:	d9002d17 	ldw	r4,180(sp)
   261bc:	d9402917 	ldw	r5,164(sp)
   261c0:	002d883a 	mov	r22,zero
   261c4:	20800104 	addi	r2,r4,4
   261c8:	2500000b 	ldhu	r20,0(r4)
   261cc:	283fa20e 	bge	r5,zero,26058 <__alt_mem_sdram_controller_0+0xc0026058>
   261d0:	d8802d15 	stw	r2,180(sp)
   261d4:	0039883a 	mov	fp,zero
   261d8:	a584b03a 	or	r2,r20,r22
   261dc:	103c571e 	bne	r2,zero,2533c <__alt_mem_sdram_controller_0+0xc002533c>
   261e0:	00800044 	movi	r2,1
   261e4:	003e5006 	br	25b28 <__alt_mem_sdram_controller_0+0xc0025b28>
   261e8:	d9402c17 	ldw	r5,176(sp)
   261ec:	d9801e04 	addi	r6,sp,120
   261f0:	9809883a 	mov	r4,r19
   261f4:	002d26c0 	call	2d26c <__ssprint_r>
   261f8:	103bd71e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   261fc:	d8c02017 	ldw	r3,128(sp)
   26200:	da000404 	addi	r8,sp,16
   26204:	d9003217 	ldw	r4,200(sp)
   26208:	d8802617 	ldw	r2,152(sp)
   2620c:	d9403317 	ldw	r5,204(sp)
   26210:	8123883a 	add	r17,r16,r4
   26214:	11400216 	blt	r2,r5,26220 <___svfprintf_internal_r+0x145c>
   26218:	9100004c 	andi	r4,r18,1
   2621c:	20000d26 	beq	r4,zero,26254 <___svfprintf_internal_r+0x1490>
   26220:	d9003817 	ldw	r4,224(sp)
   26224:	d9403417 	ldw	r5,208(sp)
   26228:	1907883a 	add	r3,r3,r4
   2622c:	d9001f17 	ldw	r4,124(sp)
   26230:	41400015 	stw	r5,0(r8)
   26234:	d9403817 	ldw	r5,224(sp)
   26238:	21000044 	addi	r4,r4,1
   2623c:	d8c02015 	stw	r3,128(sp)
   26240:	41400115 	stw	r5,4(r8)
   26244:	d9001f15 	stw	r4,124(sp)
   26248:	014001c4 	movi	r5,7
   2624c:	2901dc16 	blt	r5,r4,269c0 <___svfprintf_internal_r+0x1bfc>
   26250:	42000204 	addi	r8,r8,8
   26254:	d9003317 	ldw	r4,204(sp)
   26258:	8121883a 	add	r16,r16,r4
   2625c:	2085c83a 	sub	r2,r4,r2
   26260:	8461c83a 	sub	r16,r16,r17
   26264:	1400010e 	bge	r2,r16,2626c <___svfprintf_internal_r+0x14a8>
   26268:	1021883a 	mov	r16,r2
   2626c:	04000a0e 	bge	zero,r16,26298 <___svfprintf_internal_r+0x14d4>
   26270:	d9001f17 	ldw	r4,124(sp)
   26274:	1c07883a 	add	r3,r3,r16
   26278:	44400015 	stw	r17,0(r8)
   2627c:	21000044 	addi	r4,r4,1
   26280:	44000115 	stw	r16,4(r8)
   26284:	d8c02015 	stw	r3,128(sp)
   26288:	d9001f15 	stw	r4,124(sp)
   2628c:	014001c4 	movi	r5,7
   26290:	2901e616 	blt	r5,r4,26a2c <___svfprintf_internal_r+0x1c68>
   26294:	42000204 	addi	r8,r8,8
   26298:	8001f616 	blt	r16,zero,26a74 <___svfprintf_internal_r+0x1cb0>
   2629c:	1421c83a 	sub	r16,r2,r16
   262a0:	043d1c0e 	bge	zero,r16,25714 <__alt_mem_sdram_controller_0+0xc0025714>
   262a4:	04400404 	movi	r17,16
   262a8:	d8801f17 	ldw	r2,124(sp)
   262ac:	8c3edd0e 	bge	r17,r16,25e24 <__alt_mem_sdram_controller_0+0xc0025e24>
   262b0:	014000f4 	movhi	r5,3
   262b4:	2958d384 	addi	r5,r5,25422
   262b8:	d9402b15 	stw	r5,172(sp)
   262bc:	058001c4 	movi	r22,7
   262c0:	dd002c17 	ldw	r20,176(sp)
   262c4:	00000306 	br	262d4 <___svfprintf_internal_r+0x1510>
   262c8:	42000204 	addi	r8,r8,8
   262cc:	843ffc04 	addi	r16,r16,-16
   262d0:	8c3ed70e 	bge	r17,r16,25e30 <__alt_mem_sdram_controller_0+0xc0025e30>
   262d4:	18c00404 	addi	r3,r3,16
   262d8:	10800044 	addi	r2,r2,1
   262dc:	45400015 	stw	r21,0(r8)
   262e0:	44400115 	stw	r17,4(r8)
   262e4:	d8c02015 	stw	r3,128(sp)
   262e8:	d8801f15 	stw	r2,124(sp)
   262ec:	b0bff60e 	bge	r22,r2,262c8 <__alt_mem_sdram_controller_0+0xc00262c8>
   262f0:	d9801e04 	addi	r6,sp,120
   262f4:	a00b883a 	mov	r5,r20
   262f8:	9809883a 	mov	r4,r19
   262fc:	002d26c0 	call	2d26c <__ssprint_r>
   26300:	103b951e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26304:	d8c02017 	ldw	r3,128(sp)
   26308:	d8801f17 	ldw	r2,124(sp)
   2630c:	da000404 	addi	r8,sp,16
   26310:	003fee06 	br	262cc <__alt_mem_sdram_controller_0+0xc00262cc>
   26314:	9088703a 	and	r4,r18,r2
   26318:	203e8d1e 	bne	r4,zero,25d50 <__alt_mem_sdram_controller_0+0xc0025d50>
   2631c:	dc401f17 	ldw	r17,124(sp)
   26320:	40800115 	stw	r2,4(r8)
   26324:	44000015 	stw	r16,0(r8)
   26328:	8c400044 	addi	r17,r17,1
   2632c:	d8c02015 	stw	r3,128(sp)
   26330:	dc401f15 	stw	r17,124(sp)
   26334:	008001c4 	movi	r2,7
   26338:	147f7f16 	blt	r2,r17,26138 <__alt_mem_sdram_controller_0+0xc0026138>
   2633c:	45800204 	addi	r22,r8,8
   26340:	003eac06 	br	25df4 <__alt_mem_sdram_controller_0+0xc0025df4>
   26344:	d9402c17 	ldw	r5,176(sp)
   26348:	d9801e04 	addi	r6,sp,120
   2634c:	9809883a 	mov	r4,r19
   26350:	002d26c0 	call	2d26c <__ssprint_r>
   26354:	103b801e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26358:	d8c02017 	ldw	r3,128(sp)
   2635c:	dc401f17 	ldw	r17,124(sp)
   26360:	da000404 	addi	r8,sp,16
   26364:	003e8406 	br	25d78 <__alt_mem_sdram_controller_0+0xc0025d78>
   26368:	d9402c17 	ldw	r5,176(sp)
   2636c:	d9801e04 	addi	r6,sp,120
   26370:	9809883a 	mov	r4,r19
   26374:	002d26c0 	call	2d26c <__ssprint_r>
   26378:	103b771e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   2637c:	d8c02017 	ldw	r3,128(sp)
   26380:	dc401f17 	ldw	r17,124(sp)
   26384:	dd800404 	addi	r22,sp,16
   26388:	003e8606 	br	25da4 <__alt_mem_sdram_controller_0+0xc0025da4>
   2638c:	0029883a 	mov	r20,zero
   26390:	a5000c04 	addi	r20,r20,48
   26394:	dc001dc4 	addi	r16,sp,119
   26398:	dd001dc5 	stb	r20,119(sp)
   2639c:	003f3806 	br	26080 <__alt_mem_sdram_controller_0+0xc0026080>
   263a0:	d9402c17 	ldw	r5,176(sp)
   263a4:	d9801e04 	addi	r6,sp,120
   263a8:	9809883a 	mov	r4,r19
   263ac:	002d26c0 	call	2d26c <__ssprint_r>
   263b0:	103b691e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   263b4:	d8c02017 	ldw	r3,128(sp)
   263b8:	da000404 	addi	r8,sp,16
   263bc:	003c9506 	br	25614 <__alt_mem_sdram_controller_0+0xc0025614>
   263c0:	d9003617 	ldw	r4,216(sp)
   263c4:	d9403717 	ldw	r5,220(sp)
   263c8:	da003e15 	stw	r8,248(sp)
   263cc:	002ce180 	call	2ce18 <__fpclassifyd>
   263d0:	da003e17 	ldw	r8,248(sp)
   263d4:	1000bd1e 	bne	r2,zero,266cc <___svfprintf_internal_r+0x1908>
   263d8:	008011c4 	movi	r2,71
   263dc:	14411e0e 	bge	r2,r17,26858 <___svfprintf_internal_r+0x1a94>
   263e0:	040000f4 	movhi	r16,3
   263e4:	8418c604 	addi	r16,r16,25368
   263e8:	00c000c4 	movi	r3,3
   263ec:	00bfdfc4 	movi	r2,-129
   263f0:	d8c02a15 	stw	r3,168(sp)
   263f4:	90a4703a 	and	r18,r18,r2
   263f8:	df002783 	ldbu	fp,158(sp)
   263fc:	d8c02e15 	stw	r3,184(sp)
   26400:	d8002915 	stw	zero,164(sp)
   26404:	d8003215 	stw	zero,200(sp)
   26408:	003c1c06 	br	2547c <__alt_mem_sdram_controller_0+0xc002547c>
   2640c:	9080100c 	andi	r2,r18,64
   26410:	d8002785 	stb	zero,158(sp)
   26414:	10009426 	beq	r2,zero,26668 <___svfprintf_internal_r+0x18a4>
   26418:	d8c02d17 	ldw	r3,180(sp)
   2641c:	d9002917 	ldw	r4,164(sp)
   26420:	002d883a 	mov	r22,zero
   26424:	18800104 	addi	r2,r3,4
   26428:	1d00000b 	ldhu	r20,0(r3)
   2642c:	203ec10e 	bge	r4,zero,25f34 <__alt_mem_sdram_controller_0+0xc0025f34>
   26430:	a586b03a 	or	r3,r20,r22
   26434:	d8802d15 	stw	r2,180(sp)
   26438:	183ec21e 	bne	r3,zero,25f44 <__alt_mem_sdram_controller_0+0xc0025f44>
   2643c:	0039883a 	mov	fp,zero
   26440:	0005883a 	mov	r2,zero
   26444:	003db806 	br	25b28 <__alt_mem_sdram_controller_0+0xc0025b28>
   26448:	d8802d17 	ldw	r2,180(sp)
   2644c:	d8c02d17 	ldw	r3,180(sp)
   26450:	d9002d17 	ldw	r4,180(sp)
   26454:	10800017 	ldw	r2,0(r2)
   26458:	18c00117 	ldw	r3,4(r3)
   2645c:	21000204 	addi	r4,r4,8
   26460:	d8803615 	stw	r2,216(sp)
   26464:	d8c03715 	stw	r3,220(sp)
   26468:	d9002d15 	stw	r4,180(sp)
   2646c:	003b8206 	br	25278 <__alt_mem_sdram_controller_0+0xc0025278>
   26470:	9080100c 	andi	r2,r18,64
   26474:	10010726 	beq	r2,zero,26894 <___svfprintf_internal_r+0x1ad0>
   26478:	d8c02d17 	ldw	r3,180(sp)
   2647c:	1d00000f 	ldh	r20,0(r3)
   26480:	18c00104 	addi	r3,r3,4
   26484:	d8c02d15 	stw	r3,180(sp)
   26488:	a02dd7fa 	srai	r22,r20,31
   2648c:	b005883a 	mov	r2,r22
   26490:	003ba206 	br	2531c <__alt_mem_sdram_controller_0+0xc002531c>
   26494:	9080100c 	andi	r2,r18,64
   26498:	10010526 	beq	r2,zero,268b0 <___svfprintf_internal_r+0x1aec>
   2649c:	d9002d17 	ldw	r4,180(sp)
   264a0:	002d883a 	mov	r22,zero
   264a4:	2500000b 	ldhu	r20,0(r4)
   264a8:	21000104 	addi	r4,r4,4
   264ac:	d9002d15 	stw	r4,180(sp)
   264b0:	003cfe06 	br	258ac <__alt_mem_sdram_controller_0+0xc00258ac>
   264b4:	bc400007 	ldb	r17,0(r23)
   264b8:	003a9606 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   264bc:	9080040c 	andi	r2,r18,16
   264c0:	10010126 	beq	r2,zero,268c8 <___svfprintf_internal_r+0x1b04>
   264c4:	d9402d17 	ldw	r5,180(sp)
   264c8:	d8c02f17 	ldw	r3,188(sp)
   264cc:	28800017 	ldw	r2,0(r5)
   264d0:	29400104 	addi	r5,r5,4
   264d4:	d9402d15 	stw	r5,180(sp)
   264d8:	10c00015 	stw	r3,0(r2)
   264dc:	003a6406 	br	24e70 <__alt_mem_sdram_controller_0+0xc0024e70>
   264e0:	d9002917 	ldw	r4,164(sp)
   264e4:	d8002785 	stb	zero,158(sp)
   264e8:	203d8d16 	blt	r4,zero,25b20 <__alt_mem_sdram_controller_0+0xc0025b20>
   264ec:	00bfdfc4 	movi	r2,-129
   264f0:	90a4703a 	and	r18,r18,r2
   264f4:	003b0506 	br	2510c <__alt_mem_sdram_controller_0+0xc002510c>
   264f8:	014000f4 	movhi	r5,3
   264fc:	2958d384 	addi	r5,r5,25422
   26500:	d9402b15 	stw	r5,172(sp)
   26504:	d9402b17 	ldw	r5,172(sp)
   26508:	1c47883a 	add	r3,r3,r17
   2650c:	10800044 	addi	r2,r2,1
   26510:	41400015 	stw	r5,0(r8)
   26514:	44400115 	stw	r17,4(r8)
   26518:	d8c02015 	stw	r3,128(sp)
   2651c:	d8801f15 	stw	r2,124(sp)
   26520:	010001c4 	movi	r4,7
   26524:	20bf3016 	blt	r4,r2,261e8 <__alt_mem_sdram_controller_0+0xc00261e8>
   26528:	42000204 	addi	r8,r8,8
   2652c:	003f3506 	br	26204 <__alt_mem_sdram_controller_0+0xc0026204>
   26530:	010000f4 	movhi	r4,3
   26534:	2118d384 	addi	r4,r4,25422
   26538:	d9002b15 	stw	r4,172(sp)
   2653c:	003c5e06 	br	256b8 <__alt_mem_sdram_controller_0+0xc00256b8>
   26540:	d9402c17 	ldw	r5,176(sp)
   26544:	d9801e04 	addi	r6,sp,120
   26548:	9809883a 	mov	r4,r19
   2654c:	002d26c0 	call	2d26c <__ssprint_r>
   26550:	103b011e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26554:	d8c02017 	ldw	r3,128(sp)
   26558:	da000404 	addi	r8,sp,16
   2655c:	003d9306 	br	25bac <__alt_mem_sdram_controller_0+0xc0025bac>
   26560:	d8801f17 	ldw	r2,124(sp)
   26564:	014000f4 	movhi	r5,3
   26568:	01000044 	movi	r4,1
   2656c:	18c00044 	addi	r3,r3,1
   26570:	10800044 	addi	r2,r2,1
   26574:	2958d304 	addi	r5,r5,25420
   26578:	41000115 	stw	r4,4(r8)
   2657c:	41400015 	stw	r5,0(r8)
   26580:	d8c02015 	stw	r3,128(sp)
   26584:	d8801f15 	stw	r2,124(sp)
   26588:	010001c4 	movi	r4,7
   2658c:	2080b516 	blt	r4,r2,26864 <___svfprintf_internal_r+0x1aa0>
   26590:	42000204 	addi	r8,r8,8
   26594:	8800041e 	bne	r17,zero,265a8 <___svfprintf_internal_r+0x17e4>
   26598:	d8803317 	ldw	r2,204(sp)
   2659c:	1000021e 	bne	r2,zero,265a8 <___svfprintf_internal_r+0x17e4>
   265a0:	9080004c 	andi	r2,r18,1
   265a4:	103c5b26 	beq	r2,zero,25714 <__alt_mem_sdram_controller_0+0xc0025714>
   265a8:	d9003817 	ldw	r4,224(sp)
   265ac:	d8801f17 	ldw	r2,124(sp)
   265b0:	d9403417 	ldw	r5,208(sp)
   265b4:	20c7883a 	add	r3,r4,r3
   265b8:	10800044 	addi	r2,r2,1
   265bc:	41000115 	stw	r4,4(r8)
   265c0:	41400015 	stw	r5,0(r8)
   265c4:	d8c02015 	stw	r3,128(sp)
   265c8:	d8801f15 	stw	r2,124(sp)
   265cc:	010001c4 	movi	r4,7
   265d0:	20818016 	blt	r4,r2,26bd4 <___svfprintf_internal_r+0x1e10>
   265d4:	42000204 	addi	r8,r8,8
   265d8:	0463c83a 	sub	r17,zero,r17
   265dc:	0440cb0e 	bge	zero,r17,2690c <___svfprintf_internal_r+0x1b48>
   265e0:	05800404 	movi	r22,16
   265e4:	b440e80e 	bge	r22,r17,26988 <___svfprintf_internal_r+0x1bc4>
   265e8:	014000f4 	movhi	r5,3
   265ec:	2958d384 	addi	r5,r5,25422
   265f0:	d9402b15 	stw	r5,172(sp)
   265f4:	070001c4 	movi	fp,7
   265f8:	dd002c17 	ldw	r20,176(sp)
   265fc:	00000306 	br	2660c <___svfprintf_internal_r+0x1848>
   26600:	42000204 	addi	r8,r8,8
   26604:	8c7ffc04 	addi	r17,r17,-16
   26608:	b440e20e 	bge	r22,r17,26994 <___svfprintf_internal_r+0x1bd0>
   2660c:	18c00404 	addi	r3,r3,16
   26610:	10800044 	addi	r2,r2,1
   26614:	45400015 	stw	r21,0(r8)
   26618:	45800115 	stw	r22,4(r8)
   2661c:	d8c02015 	stw	r3,128(sp)
   26620:	d8801f15 	stw	r2,124(sp)
   26624:	e0bff60e 	bge	fp,r2,26600 <__alt_mem_sdram_controller_0+0xc0026600>
   26628:	d9801e04 	addi	r6,sp,120
   2662c:	a00b883a 	mov	r5,r20
   26630:	9809883a 	mov	r4,r19
   26634:	002d26c0 	call	2d26c <__ssprint_r>
   26638:	103ac71e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   2663c:	d8c02017 	ldw	r3,128(sp)
   26640:	d8801f17 	ldw	r2,124(sp)
   26644:	da000404 	addi	r8,sp,16
   26648:	003fee06 	br	26604 <__alt_mem_sdram_controller_0+0xc0026604>
   2664c:	d8c02d17 	ldw	r3,180(sp)
   26650:	d9002917 	ldw	r4,164(sp)
   26654:	002d883a 	mov	r22,zero
   26658:	18800104 	addi	r2,r3,4
   2665c:	1d000017 	ldw	r20,0(r3)
   26660:	203e7d0e 	bge	r4,zero,26058 <__alt_mem_sdram_controller_0+0xc0026058>
   26664:	003eda06 	br	261d0 <__alt_mem_sdram_controller_0+0xc00261d0>
   26668:	d9402d17 	ldw	r5,180(sp)
   2666c:	d8c02917 	ldw	r3,164(sp)
   26670:	002d883a 	mov	r22,zero
   26674:	28800104 	addi	r2,r5,4
   26678:	2d000017 	ldw	r20,0(r5)
   2667c:	183e2d0e 	bge	r3,zero,25f34 <__alt_mem_sdram_controller_0+0xc0025f34>
   26680:	003f6b06 	br	26430 <__alt_mem_sdram_controller_0+0xc0026430>
   26684:	d8c02d15 	stw	r3,180(sp)
   26688:	0039883a 	mov	fp,zero
   2668c:	003ed206 	br	261d8 <__alt_mem_sdram_controller_0+0xc00261d8>
   26690:	bc400043 	ldbu	r17,1(r23)
   26694:	94800814 	ori	r18,r18,32
   26698:	bdc00044 	addi	r23,r23,1
   2669c:	8c403fcc 	andi	r17,r17,255
   266a0:	8c40201c 	xori	r17,r17,128
   266a4:	8c7fe004 	addi	r17,r17,-128
   266a8:	003a1a06 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   266ac:	d9402c17 	ldw	r5,176(sp)
   266b0:	d9801e04 	addi	r6,sp,120
   266b4:	9809883a 	mov	r4,r19
   266b8:	002d26c0 	call	2d26c <__ssprint_r>
   266bc:	103aa61e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   266c0:	d8c02017 	ldw	r3,128(sp)
   266c4:	da000404 	addi	r8,sp,16
   266c8:	003d4a06 	br	25bf4 <__alt_mem_sdram_controller_0+0xc0025bf4>
   266cc:	d9002917 	ldw	r4,164(sp)
   266d0:	05bff7c4 	movi	r22,-33
   266d4:	00bfffc4 	movi	r2,-1
   266d8:	8dac703a 	and	r22,r17,r22
   266dc:	20806a26 	beq	r4,r2,26888 <___svfprintf_internal_r+0x1ac4>
   266e0:	008011c4 	movi	r2,71
   266e4:	b0813726 	beq	r22,r2,26bc4 <___svfprintf_internal_r+0x1e00>
   266e8:	d9003717 	ldw	r4,220(sp)
   266ec:	90c04014 	ori	r3,r18,256
   266f0:	d8c02b15 	stw	r3,172(sp)
   266f4:	20015d16 	blt	r4,zero,26c6c <___svfprintf_internal_r+0x1ea8>
   266f8:	dd003717 	ldw	r20,220(sp)
   266fc:	d8002a05 	stb	zero,168(sp)
   26700:	00801984 	movi	r2,102
   26704:	88814026 	beq	r17,r2,26c08 <___svfprintf_internal_r+0x1e44>
   26708:	00801184 	movi	r2,70
   2670c:	88817126 	beq	r17,r2,26cd4 <___svfprintf_internal_r+0x1f10>
   26710:	00801144 	movi	r2,69
   26714:	b0816226 	beq	r22,r2,26ca0 <___svfprintf_internal_r+0x1edc>
   26718:	d8c02917 	ldw	r3,164(sp)
   2671c:	d8802104 	addi	r2,sp,132
   26720:	d8800315 	stw	r2,12(sp)
   26724:	d9403617 	ldw	r5,216(sp)
   26728:	d8802504 	addi	r2,sp,148
   2672c:	d8800215 	stw	r2,8(sp)
   26730:	d8802604 	addi	r2,sp,152
   26734:	d8c00015 	stw	r3,0(sp)
   26738:	d8800115 	stw	r2,4(sp)
   2673c:	01c00084 	movi	r7,2
   26740:	a00d883a 	mov	r6,r20
   26744:	9809883a 	mov	r4,r19
   26748:	d8c03d15 	stw	r3,244(sp)
   2674c:	da003e15 	stw	r8,248(sp)
   26750:	00296f40 	call	296f4 <_dtoa_r>
   26754:	1021883a 	mov	r16,r2
   26758:	008019c4 	movi	r2,103
   2675c:	d8c03d17 	ldw	r3,244(sp)
   26760:	da003e17 	ldw	r8,248(sp)
   26764:	8880e726 	beq	r17,r2,26b04 <___svfprintf_internal_r+0x1d40>
   26768:	008011c4 	movi	r2,71
   2676c:	8880d426 	beq	r17,r2,26ac0 <___svfprintf_internal_r+0x1cfc>
   26770:	80f9883a 	add	fp,r16,r3
   26774:	d9003617 	ldw	r4,216(sp)
   26778:	000d883a 	mov	r6,zero
   2677c:	000f883a 	mov	r7,zero
   26780:	a00b883a 	mov	r5,r20
   26784:	da003e15 	stw	r8,248(sp)
   26788:	0031f700 	call	31f70 <__eqdf2>
   2678c:	da003e17 	ldw	r8,248(sp)
   26790:	1000e426 	beq	r2,zero,26b24 <___svfprintf_internal_r+0x1d60>
   26794:	d8802117 	ldw	r2,132(sp)
   26798:	1700062e 	bgeu	r2,fp,267b4 <___svfprintf_internal_r+0x19f0>
   2679c:	01000c04 	movi	r4,48
   267a0:	10c00044 	addi	r3,r2,1
   267a4:	d8c02115 	stw	r3,132(sp)
   267a8:	11000005 	stb	r4,0(r2)
   267ac:	d8802117 	ldw	r2,132(sp)
   267b0:	173ffb36 	bltu	r2,fp,267a0 <__alt_mem_sdram_controller_0+0xc00267a0>
   267b4:	1405c83a 	sub	r2,r2,r16
   267b8:	d8803315 	stw	r2,204(sp)
   267bc:	008011c4 	movi	r2,71
   267c0:	b080c526 	beq	r22,r2,26ad8 <___svfprintf_internal_r+0x1d14>
   267c4:	00801944 	movi	r2,101
   267c8:	1441d90e 	bge	r2,r17,26f30 <___svfprintf_internal_r+0x216c>
   267cc:	d8c02617 	ldw	r3,152(sp)
   267d0:	00801984 	movi	r2,102
   267d4:	d8c03215 	stw	r3,200(sp)
   267d8:	88813426 	beq	r17,r2,26cac <___svfprintf_internal_r+0x1ee8>
   267dc:	d8c03217 	ldw	r3,200(sp)
   267e0:	d9003317 	ldw	r4,204(sp)
   267e4:	19012516 	blt	r3,r4,26c7c <___svfprintf_internal_r+0x1eb8>
   267e8:	9480004c 	andi	r18,r18,1
   267ec:	9001841e 	bne	r18,zero,26e00 <___svfprintf_internal_r+0x203c>
   267f0:	1805883a 	mov	r2,r3
   267f4:	1801cc16 	blt	r3,zero,26f28 <___svfprintf_internal_r+0x2164>
   267f8:	d8c03217 	ldw	r3,200(sp)
   267fc:	044019c4 	movi	r17,103
   26800:	d8c02e15 	stw	r3,184(sp)
   26804:	df002a07 	ldb	fp,168(sp)
   26808:	e000a61e 	bne	fp,zero,26aa4 <___svfprintf_internal_r+0x1ce0>
   2680c:	df002783 	ldbu	fp,158(sp)
   26810:	d8802a15 	stw	r2,168(sp)
   26814:	dc802b17 	ldw	r18,172(sp)
   26818:	d8002915 	stw	zero,164(sp)
   2681c:	003b1706 	br	2547c <__alt_mem_sdram_controller_0+0xc002547c>
   26820:	040000f4 	movhi	r16,3
   26824:	8418c304 	addi	r16,r16,25356
   26828:	003aa606 	br	252c4 <__alt_mem_sdram_controller_0+0xc00252c4>
   2682c:	d9003917 	ldw	r4,228(sp)
   26830:	04001004 	movi	r16,64
   26834:	800b883a 	mov	r5,r16
   26838:	0023d980 	call	23d98 <_malloc_r>
   2683c:	d9002c17 	ldw	r4,176(sp)
   26840:	20800015 	stw	r2,0(r4)
   26844:	20800415 	stw	r2,16(r4)
   26848:	1001cb26 	beq	r2,zero,26f78 <___svfprintf_internal_r+0x21b4>
   2684c:	d8802c17 	ldw	r2,176(sp)
   26850:	14000515 	stw	r16,20(r2)
   26854:	00397606 	br	24e30 <__alt_mem_sdram_controller_0+0xc0024e30>
   26858:	040000f4 	movhi	r16,3
   2685c:	8418c504 	addi	r16,r16,25364
   26860:	003ee106 	br	263e8 <__alt_mem_sdram_controller_0+0xc00263e8>
   26864:	d9402c17 	ldw	r5,176(sp)
   26868:	d9801e04 	addi	r6,sp,120
   2686c:	9809883a 	mov	r4,r19
   26870:	002d26c0 	call	2d26c <__ssprint_r>
   26874:	103a381e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26878:	dc402617 	ldw	r17,152(sp)
   2687c:	d8c02017 	ldw	r3,128(sp)
   26880:	da000404 	addi	r8,sp,16
   26884:	003f4306 	br	26594 <__alt_mem_sdram_controller_0+0xc0026594>
   26888:	01400184 	movi	r5,6
   2688c:	d9402915 	stw	r5,164(sp)
   26890:	003f9506 	br	266e8 <__alt_mem_sdram_controller_0+0xc00266e8>
   26894:	d9002d17 	ldw	r4,180(sp)
   26898:	25000017 	ldw	r20,0(r4)
   2689c:	21000104 	addi	r4,r4,4
   268a0:	d9002d15 	stw	r4,180(sp)
   268a4:	a02dd7fa 	srai	r22,r20,31
   268a8:	b005883a 	mov	r2,r22
   268ac:	003a9b06 	br	2531c <__alt_mem_sdram_controller_0+0xc002531c>
   268b0:	d9402d17 	ldw	r5,180(sp)
   268b4:	002d883a 	mov	r22,zero
   268b8:	2d000017 	ldw	r20,0(r5)
   268bc:	29400104 	addi	r5,r5,4
   268c0:	d9402d15 	stw	r5,180(sp)
   268c4:	003bf906 	br	258ac <__alt_mem_sdram_controller_0+0xc00258ac>
   268c8:	9480100c 	andi	r18,r18,64
   268cc:	90006e26 	beq	r18,zero,26a88 <___svfprintf_internal_r+0x1cc4>
   268d0:	d9002d17 	ldw	r4,180(sp)
   268d4:	d9402f17 	ldw	r5,188(sp)
   268d8:	20800017 	ldw	r2,0(r4)
   268dc:	21000104 	addi	r4,r4,4
   268e0:	d9002d15 	stw	r4,180(sp)
   268e4:	1140000d 	sth	r5,0(r2)
   268e8:	00396106 	br	24e70 <__alt_mem_sdram_controller_0+0xc0024e70>
   268ec:	d9402c17 	ldw	r5,176(sp)
   268f0:	d9801e04 	addi	r6,sp,120
   268f4:	9809883a 	mov	r4,r19
   268f8:	002d26c0 	call	2d26c <__ssprint_r>
   268fc:	103a161e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26900:	d8c02017 	ldw	r3,128(sp)
   26904:	d8801f17 	ldw	r2,124(sp)
   26908:	da000404 	addi	r8,sp,16
   2690c:	d9403317 	ldw	r5,204(sp)
   26910:	10800044 	addi	r2,r2,1
   26914:	44000015 	stw	r16,0(r8)
   26918:	28c7883a 	add	r3,r5,r3
   2691c:	003b7706 	br	256fc <__alt_mem_sdram_controller_0+0xc00256fc>
   26920:	8009883a 	mov	r4,r16
   26924:	da003e15 	stw	r8,248(sp)
   26928:	0024d2c0 	call	24d2c <strlen>
   2692c:	d8802e15 	stw	r2,184(sp)
   26930:	da003e17 	ldw	r8,248(sp)
   26934:	103c280e 	bge	r2,zero,259d8 <__alt_mem_sdram_controller_0+0xc00259d8>
   26938:	0005883a 	mov	r2,zero
   2693c:	003c2606 	br	259d8 <__alt_mem_sdram_controller_0+0xc00259d8>
   26940:	00bfffc4 	movi	r2,-1
   26944:	003a0906 	br	2516c <__alt_mem_sdram_controller_0+0xc002516c>
   26948:	010000f4 	movhi	r4,3
   2694c:	2118d784 	addi	r4,r4,25438
   26950:	d9003515 	stw	r4,212(sp)
   26954:	003b0606 	br	25570 <__alt_mem_sdram_controller_0+0xc0025570>
   26958:	013fffc4 	movi	r4,-1
   2695c:	003a2706 	br	251fc <__alt_mem_sdram_controller_0+0xc00251fc>
   26960:	d9402c17 	ldw	r5,176(sp)
   26964:	d9801e04 	addi	r6,sp,120
   26968:	9809883a 	mov	r4,r19
   2696c:	002d26c0 	call	2d26c <__ssprint_r>
   26970:	1039f91e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26974:	d8c02017 	ldw	r3,128(sp)
   26978:	da000404 	addi	r8,sp,16
   2697c:	003d8406 	br	25f90 <__alt_mem_sdram_controller_0+0xc0025f90>
   26980:	0023883a 	mov	r17,zero
   26984:	003d8306 	br	25f94 <__alt_mem_sdram_controller_0+0xc0025f94>
   26988:	010000f4 	movhi	r4,3
   2698c:	2118d384 	addi	r4,r4,25422
   26990:	d9002b15 	stw	r4,172(sp)
   26994:	d9002b17 	ldw	r4,172(sp)
   26998:	1c47883a 	add	r3,r3,r17
   2699c:	10800044 	addi	r2,r2,1
   269a0:	41000015 	stw	r4,0(r8)
   269a4:	44400115 	stw	r17,4(r8)
   269a8:	d8c02015 	stw	r3,128(sp)
   269ac:	d8801f15 	stw	r2,124(sp)
   269b0:	010001c4 	movi	r4,7
   269b4:	20bfcd16 	blt	r4,r2,268ec <__alt_mem_sdram_controller_0+0xc00268ec>
   269b8:	42000204 	addi	r8,r8,8
   269bc:	003fd306 	br	2690c <__alt_mem_sdram_controller_0+0xc002690c>
   269c0:	d9402c17 	ldw	r5,176(sp)
   269c4:	d9801e04 	addi	r6,sp,120
   269c8:	9809883a 	mov	r4,r19
   269cc:	002d26c0 	call	2d26c <__ssprint_r>
   269d0:	1039e11e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   269d4:	d8802617 	ldw	r2,152(sp)
   269d8:	d8c02017 	ldw	r3,128(sp)
   269dc:	da000404 	addi	r8,sp,16
   269e0:	003e1c06 	br	26254 <__alt_mem_sdram_controller_0+0xc0026254>
   269e4:	d8802917 	ldw	r2,164(sp)
   269e8:	00c00184 	movi	r3,6
   269ec:	1880012e 	bgeu	r3,r2,269f4 <___svfprintf_internal_r+0x1c30>
   269f0:	1805883a 	mov	r2,r3
   269f4:	d8802e15 	stw	r2,184(sp)
   269f8:	1000f316 	blt	r2,zero,26dc8 <___svfprintf_internal_r+0x2004>
   269fc:	040000f4 	movhi	r16,3
   26a00:	d8802a15 	stw	r2,168(sp)
   26a04:	dd002d15 	stw	r20,180(sp)
   26a08:	d8002915 	stw	zero,164(sp)
   26a0c:	d8003215 	stw	zero,200(sp)
   26a10:	8418d104 	addi	r16,r16,25412
   26a14:	0039883a 	mov	fp,zero
   26a18:	003a9f06 	br	25498 <__alt_mem_sdram_controller_0+0xc0025498>
   26a1c:	010000f4 	movhi	r4,3
   26a20:	2118d784 	addi	r4,r4,25438
   26a24:	d9003515 	stw	r4,212(sp)
   26a28:	003b5f06 	br	257a8 <__alt_mem_sdram_controller_0+0xc00257a8>
   26a2c:	d9402c17 	ldw	r5,176(sp)
   26a30:	d9801e04 	addi	r6,sp,120
   26a34:	9809883a 	mov	r4,r19
   26a38:	002d26c0 	call	2d26c <__ssprint_r>
   26a3c:	1039c61e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26a40:	d8802617 	ldw	r2,152(sp)
   26a44:	d9403317 	ldw	r5,204(sp)
   26a48:	d8c02017 	ldw	r3,128(sp)
   26a4c:	da000404 	addi	r8,sp,16
   26a50:	2885c83a 	sub	r2,r5,r2
   26a54:	003e1006 	br	26298 <__alt_mem_sdram_controller_0+0xc0026298>
   26a58:	00800044 	movi	r2,1
   26a5c:	10803fcc 	andi	r2,r2,255
   26a60:	00c00044 	movi	r3,1
   26a64:	10fa3526 	beq	r2,r3,2533c <__alt_mem_sdram_controller_0+0xc002533c>
   26a68:	00c00084 	movi	r3,2
   26a6c:	10fb9e26 	beq	r2,r3,258e8 <__alt_mem_sdram_controller_0+0xc00258e8>
   26a70:	003a6406 	br	25404 <__alt_mem_sdram_controller_0+0xc0025404>
   26a74:	0021883a 	mov	r16,zero
   26a78:	003e0806 	br	2629c <__alt_mem_sdram_controller_0+0xc002629c>
   26a7c:	07000b44 	movi	fp,45
   26a80:	df002785 	stb	fp,158(sp)
   26a84:	003a0b06 	br	252b4 <__alt_mem_sdram_controller_0+0xc00252b4>
   26a88:	d8c02d17 	ldw	r3,180(sp)
   26a8c:	d9002f17 	ldw	r4,188(sp)
   26a90:	18800017 	ldw	r2,0(r3)
   26a94:	18c00104 	addi	r3,r3,4
   26a98:	d8c02d15 	stw	r3,180(sp)
   26a9c:	11000015 	stw	r4,0(r2)
   26aa0:	0038f306 	br	24e70 <__alt_mem_sdram_controller_0+0xc0024e70>
   26aa4:	00c00b44 	movi	r3,45
   26aa8:	d8c02785 	stb	r3,158(sp)
   26aac:	d8802a15 	stw	r2,168(sp)
   26ab0:	dc802b17 	ldw	r18,172(sp)
   26ab4:	d8002915 	stw	zero,164(sp)
   26ab8:	07000b44 	movi	fp,45
   26abc:	003a7306 	br	2548c <__alt_mem_sdram_controller_0+0xc002548c>
   26ac0:	9080004c 	andi	r2,r18,1
   26ac4:	1000941e 	bne	r2,zero,26d18 <___svfprintf_internal_r+0x1f54>
   26ac8:	d8802117 	ldw	r2,132(sp)
   26acc:	1405c83a 	sub	r2,r2,r16
   26ad0:	d8803315 	stw	r2,204(sp)
   26ad4:	b441161e 	bne	r22,r17,26f30 <___svfprintf_internal_r+0x216c>
   26ad8:	dd802617 	ldw	r22,152(sp)
   26adc:	00bfff44 	movi	r2,-3
   26ae0:	b0801a16 	blt	r22,r2,26b4c <___svfprintf_internal_r+0x1d88>
   26ae4:	d9402917 	ldw	r5,164(sp)
   26ae8:	2d801816 	blt	r5,r22,26b4c <___svfprintf_internal_r+0x1d88>
   26aec:	dd803215 	stw	r22,200(sp)
   26af0:	003f3a06 	br	267dc <__alt_mem_sdram_controller_0+0xc00267dc>
   26af4:	1025883a 	mov	r18,r2
   26af8:	0039883a 	mov	fp,zero
   26afc:	00800084 	movi	r2,2
   26b00:	003fd606 	br	26a5c <__alt_mem_sdram_controller_0+0xc0026a5c>
   26b04:	9080004c 	andi	r2,r18,1
   26b08:	103f191e 	bne	r2,zero,26770 <__alt_mem_sdram_controller_0+0xc0026770>
   26b0c:	d8802117 	ldw	r2,132(sp)
   26b10:	003f2806 	br	267b4 <__alt_mem_sdram_controller_0+0xc00267b4>
   26b14:	010000f4 	movhi	r4,3
   26b18:	2118d384 	addi	r4,r4,25422
   26b1c:	d9002b15 	stw	r4,172(sp)
   26b20:	003c7c06 	br	25d14 <__alt_mem_sdram_controller_0+0xc0025d14>
   26b24:	e005883a 	mov	r2,fp
   26b28:	003f2206 	br	267b4 <__alt_mem_sdram_controller_0+0xc00267b4>
   26b2c:	d9402917 	ldw	r5,164(sp)
   26b30:	df002783 	ldbu	fp,158(sp)
   26b34:	dd002d15 	stw	r20,180(sp)
   26b38:	d9402a15 	stw	r5,168(sp)
   26b3c:	d9402e15 	stw	r5,184(sp)
   26b40:	d8002915 	stw	zero,164(sp)
   26b44:	d8003215 	stw	zero,200(sp)
   26b48:	003a4c06 	br	2547c <__alt_mem_sdram_controller_0+0xc002547c>
   26b4c:	8c7fff84 	addi	r17,r17,-2
   26b50:	b5bfffc4 	addi	r22,r22,-1
   26b54:	dd802615 	stw	r22,152(sp)
   26b58:	dc4022c5 	stb	r17,139(sp)
   26b5c:	b000c316 	blt	r22,zero,26e6c <___svfprintf_internal_r+0x20a8>
   26b60:	00800ac4 	movi	r2,43
   26b64:	d8802305 	stb	r2,140(sp)
   26b68:	00800244 	movi	r2,9
   26b6c:	15806e16 	blt	r2,r22,26d28 <___svfprintf_internal_r+0x1f64>
   26b70:	00800c04 	movi	r2,48
   26b74:	b5800c04 	addi	r22,r22,48
   26b78:	d8802345 	stb	r2,141(sp)
   26b7c:	dd802385 	stb	r22,142(sp)
   26b80:	d88023c4 	addi	r2,sp,143
   26b84:	df0022c4 	addi	fp,sp,139
   26b88:	d8c03317 	ldw	r3,204(sp)
   26b8c:	1739c83a 	sub	fp,r2,fp
   26b90:	d9003317 	ldw	r4,204(sp)
   26b94:	e0c7883a 	add	r3,fp,r3
   26b98:	df003b15 	stw	fp,236(sp)
   26b9c:	d8c02e15 	stw	r3,184(sp)
   26ba0:	00800044 	movi	r2,1
   26ba4:	1100b70e 	bge	r2,r4,26e84 <___svfprintf_internal_r+0x20c0>
   26ba8:	d8c02e17 	ldw	r3,184(sp)
   26bac:	18c00044 	addi	r3,r3,1
   26bb0:	d8c02e15 	stw	r3,184(sp)
   26bb4:	1805883a 	mov	r2,r3
   26bb8:	1800b016 	blt	r3,zero,26e7c <___svfprintf_internal_r+0x20b8>
   26bbc:	d8003215 	stw	zero,200(sp)
   26bc0:	003f1006 	br	26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26bc4:	d8802917 	ldw	r2,164(sp)
   26bc8:	103ec71e 	bne	r2,zero,266e8 <__alt_mem_sdram_controller_0+0xc00266e8>
   26bcc:	dc002915 	stw	r16,164(sp)
   26bd0:	003ec506 	br	266e8 <__alt_mem_sdram_controller_0+0xc00266e8>
   26bd4:	d9402c17 	ldw	r5,176(sp)
   26bd8:	d9801e04 	addi	r6,sp,120
   26bdc:	9809883a 	mov	r4,r19
   26be0:	002d26c0 	call	2d26c <__ssprint_r>
   26be4:	10395c1e 	bne	r2,zero,25158 <__alt_mem_sdram_controller_0+0xc0025158>
   26be8:	dc402617 	ldw	r17,152(sp)
   26bec:	d8c02017 	ldw	r3,128(sp)
   26bf0:	d8801f17 	ldw	r2,124(sp)
   26bf4:	da000404 	addi	r8,sp,16
   26bf8:	003e7706 	br	265d8 <__alt_mem_sdram_controller_0+0xc00265d8>
   26bfc:	582f883a 	mov	r23,r11
   26c00:	d8002915 	stw	zero,164(sp)
   26c04:	0038c406 	br	24f18 <__alt_mem_sdram_controller_0+0xc0024f18>
   26c08:	d8c02917 	ldw	r3,164(sp)
   26c0c:	d8802104 	addi	r2,sp,132
   26c10:	d8800315 	stw	r2,12(sp)
   26c14:	d9403617 	ldw	r5,216(sp)
   26c18:	d8802504 	addi	r2,sp,148
   26c1c:	d8800215 	stw	r2,8(sp)
   26c20:	d8802604 	addi	r2,sp,152
   26c24:	d8c00015 	stw	r3,0(sp)
   26c28:	9809883a 	mov	r4,r19
   26c2c:	d8800115 	stw	r2,4(sp)
   26c30:	01c000c4 	movi	r7,3
   26c34:	a00d883a 	mov	r6,r20
   26c38:	da003e15 	stw	r8,248(sp)
   26c3c:	00296f40 	call	296f4 <_dtoa_r>
   26c40:	d9002917 	ldw	r4,164(sp)
   26c44:	da003e17 	ldw	r8,248(sp)
   26c48:	1021883a 	mov	r16,r2
   26c4c:	1139883a 	add	fp,r2,r4
   26c50:	2007883a 	mov	r3,r4
   26c54:	81000007 	ldb	r4,0(r16)
   26c58:	00800c04 	movi	r2,48
   26c5c:	20806f26 	beq	r4,r2,26e1c <___svfprintf_internal_r+0x2058>
   26c60:	d8c02617 	ldw	r3,152(sp)
   26c64:	e0f9883a 	add	fp,fp,r3
   26c68:	003ec206 	br	26774 <__alt_mem_sdram_controller_0+0xc0026774>
   26c6c:	00c00b44 	movi	r3,45
   26c70:	2520003c 	xorhi	r20,r4,32768
   26c74:	d8c02a05 	stb	r3,168(sp)
   26c78:	003ea106 	br	26700 <__alt_mem_sdram_controller_0+0xc0026700>
   26c7c:	d8c03217 	ldw	r3,200(sp)
   26c80:	00c0890e 	bge	zero,r3,26ea8 <___svfprintf_internal_r+0x20e4>
   26c84:	00800044 	movi	r2,1
   26c88:	d9003317 	ldw	r4,204(sp)
   26c8c:	1105883a 	add	r2,r2,r4
   26c90:	d8802e15 	stw	r2,184(sp)
   26c94:	10005f16 	blt	r2,zero,26e14 <___svfprintf_internal_r+0x2050>
   26c98:	044019c4 	movi	r17,103
   26c9c:	003ed906 	br	26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26ca0:	d9002917 	ldw	r4,164(sp)
   26ca4:	20c00044 	addi	r3,r4,1
   26ca8:	003e9c06 	br	2671c <__alt_mem_sdram_controller_0+0xc002671c>
   26cac:	d9002917 	ldw	r4,164(sp)
   26cb0:	00c0680e 	bge	zero,r3,26e54 <___svfprintf_internal_r+0x2090>
   26cb4:	2000461e 	bne	r4,zero,26dd0 <___svfprintf_internal_r+0x200c>
   26cb8:	9480004c 	andi	r18,r18,1
   26cbc:	9000441e 	bne	r18,zero,26dd0 <___svfprintf_internal_r+0x200c>
   26cc0:	1805883a 	mov	r2,r3
   26cc4:	1800a016 	blt	r3,zero,26f48 <___svfprintf_internal_r+0x2184>
   26cc8:	d8c03217 	ldw	r3,200(sp)
   26ccc:	d8c02e15 	stw	r3,184(sp)
   26cd0:	003ecc06 	br	26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26cd4:	d9402917 	ldw	r5,164(sp)
   26cd8:	d8802104 	addi	r2,sp,132
   26cdc:	d8800315 	stw	r2,12(sp)
   26ce0:	d9400015 	stw	r5,0(sp)
   26ce4:	d8802504 	addi	r2,sp,148
   26ce8:	d9403617 	ldw	r5,216(sp)
   26cec:	d8800215 	stw	r2,8(sp)
   26cf0:	d8802604 	addi	r2,sp,152
   26cf4:	d8800115 	stw	r2,4(sp)
   26cf8:	01c000c4 	movi	r7,3
   26cfc:	a00d883a 	mov	r6,r20
   26d00:	9809883a 	mov	r4,r19
   26d04:	da003e15 	stw	r8,248(sp)
   26d08:	00296f40 	call	296f4 <_dtoa_r>
   26d0c:	d8c02917 	ldw	r3,164(sp)
   26d10:	da003e17 	ldw	r8,248(sp)
   26d14:	1021883a 	mov	r16,r2
   26d18:	00801184 	movi	r2,70
   26d1c:	80f9883a 	add	fp,r16,r3
   26d20:	88bfcc26 	beq	r17,r2,26c54 <__alt_mem_sdram_controller_0+0xc0026c54>
   26d24:	003e9306 	br	26774 <__alt_mem_sdram_controller_0+0xc0026774>
   26d28:	df0022c4 	addi	fp,sp,139
   26d2c:	dc002915 	stw	r16,164(sp)
   26d30:	9829883a 	mov	r20,r19
   26d34:	e021883a 	mov	r16,fp
   26d38:	4027883a 	mov	r19,r8
   26d3c:	b009883a 	mov	r4,r22
   26d40:	01400284 	movi	r5,10
   26d44:	00225980 	call	22598 <__modsi3>
   26d48:	10800c04 	addi	r2,r2,48
   26d4c:	843fffc4 	addi	r16,r16,-1
   26d50:	b009883a 	mov	r4,r22
   26d54:	01400284 	movi	r5,10
   26d58:	80800005 	stb	r2,0(r16)
   26d5c:	00225140 	call	22514 <__divsi3>
   26d60:	102d883a 	mov	r22,r2
   26d64:	00800244 	movi	r2,9
   26d68:	15bff416 	blt	r2,r22,26d3c <__alt_mem_sdram_controller_0+0xc0026d3c>
   26d6c:	9811883a 	mov	r8,r19
   26d70:	b0800c04 	addi	r2,r22,48
   26d74:	a027883a 	mov	r19,r20
   26d78:	8029883a 	mov	r20,r16
   26d7c:	a17fffc4 	addi	r5,r20,-1
   26d80:	a0bfffc5 	stb	r2,-1(r20)
   26d84:	dc002917 	ldw	r16,164(sp)
   26d88:	2f00752e 	bgeu	r5,fp,26f60 <___svfprintf_internal_r+0x219c>
   26d8c:	d9c02384 	addi	r7,sp,142
   26d90:	3d0fc83a 	sub	r7,r7,r20
   26d94:	d9002344 	addi	r4,sp,141
   26d98:	e1cf883a 	add	r7,fp,r7
   26d9c:	00000106 	br	26da4 <___svfprintf_internal_r+0x1fe0>
   26da0:	28800003 	ldbu	r2,0(r5)
   26da4:	20800005 	stb	r2,0(r4)
   26da8:	21000044 	addi	r4,r4,1
   26dac:	29400044 	addi	r5,r5,1
   26db0:	21fffb1e 	bne	r4,r7,26da0 <__alt_mem_sdram_controller_0+0xc0026da0>
   26db4:	d8802304 	addi	r2,sp,140
   26db8:	1505c83a 	sub	r2,r2,r20
   26dbc:	d8c02344 	addi	r3,sp,141
   26dc0:	1885883a 	add	r2,r3,r2
   26dc4:	003f7006 	br	26b88 <__alt_mem_sdram_controller_0+0xc0026b88>
   26dc8:	0005883a 	mov	r2,zero
   26dcc:	003f0b06 	br	269fc <__alt_mem_sdram_controller_0+0xc00269fc>
   26dd0:	d9002917 	ldw	r4,164(sp)
   26dd4:	d8c03217 	ldw	r3,200(sp)
   26dd8:	20800044 	addi	r2,r4,1
   26ddc:	1885883a 	add	r2,r3,r2
   26de0:	d8802e15 	stw	r2,184(sp)
   26de4:	103e870e 	bge	r2,zero,26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26de8:	0005883a 	mov	r2,zero
   26dec:	003e8506 	br	26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26df0:	010000f4 	movhi	r4,3
   26df4:	2118d384 	addi	r4,r4,25422
   26df8:	d9002b15 	stw	r4,172(sp)
   26dfc:	003cc506 	br	26114 <__alt_mem_sdram_controller_0+0xc0026114>
   26e00:	d8c03217 	ldw	r3,200(sp)
   26e04:	18c00044 	addi	r3,r3,1
   26e08:	d8c02e15 	stw	r3,184(sp)
   26e0c:	1805883a 	mov	r2,r3
   26e10:	183fa10e 	bge	r3,zero,26c98 <__alt_mem_sdram_controller_0+0xc0026c98>
   26e14:	0005883a 	mov	r2,zero
   26e18:	003f9f06 	br	26c98 <__alt_mem_sdram_controller_0+0xc0026c98>
   26e1c:	d9003617 	ldw	r4,216(sp)
   26e20:	000d883a 	mov	r6,zero
   26e24:	000f883a 	mov	r7,zero
   26e28:	a00b883a 	mov	r5,r20
   26e2c:	d8c03d15 	stw	r3,244(sp)
   26e30:	da003e15 	stw	r8,248(sp)
   26e34:	0031f700 	call	31f70 <__eqdf2>
   26e38:	d8c03d17 	ldw	r3,244(sp)
   26e3c:	da003e17 	ldw	r8,248(sp)
   26e40:	103f8726 	beq	r2,zero,26c60 <__alt_mem_sdram_controller_0+0xc0026c60>
   26e44:	00800044 	movi	r2,1
   26e48:	10c7c83a 	sub	r3,r2,r3
   26e4c:	d8c02615 	stw	r3,152(sp)
   26e50:	003f8406 	br	26c64 <__alt_mem_sdram_controller_0+0xc0026c64>
   26e54:	20000e1e 	bne	r4,zero,26e90 <___svfprintf_internal_r+0x20cc>
   26e58:	9480004c 	andi	r18,r18,1
   26e5c:	90000c1e 	bne	r18,zero,26e90 <___svfprintf_internal_r+0x20cc>
   26e60:	00800044 	movi	r2,1
   26e64:	d8802e15 	stw	r2,184(sp)
   26e68:	003e6606 	br	26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26e6c:	00800b44 	movi	r2,45
   26e70:	05adc83a 	sub	r22,zero,r22
   26e74:	d8802305 	stb	r2,140(sp)
   26e78:	003f3b06 	br	26b68 <__alt_mem_sdram_controller_0+0xc0026b68>
   26e7c:	0005883a 	mov	r2,zero
   26e80:	003f4e06 	br	26bbc <__alt_mem_sdram_controller_0+0xc0026bbc>
   26e84:	90a4703a 	and	r18,r18,r2
   26e88:	903f4a26 	beq	r18,zero,26bb4 <__alt_mem_sdram_controller_0+0xc0026bb4>
   26e8c:	003f4606 	br	26ba8 <__alt_mem_sdram_controller_0+0xc0026ba8>
   26e90:	d8c02917 	ldw	r3,164(sp)
   26e94:	18c00084 	addi	r3,r3,2
   26e98:	d8c02e15 	stw	r3,184(sp)
   26e9c:	1805883a 	mov	r2,r3
   26ea0:	183e580e 	bge	r3,zero,26804 <__alt_mem_sdram_controller_0+0xc0026804>
   26ea4:	003fd006 	br	26de8 <__alt_mem_sdram_controller_0+0xc0026de8>
   26ea8:	00800084 	movi	r2,2
   26eac:	10c5c83a 	sub	r2,r2,r3
   26eb0:	003f7506 	br	26c88 <__alt_mem_sdram_controller_0+0xc0026c88>
   26eb4:	d8802d17 	ldw	r2,180(sp)
   26eb8:	d9002d17 	ldw	r4,180(sp)
   26ebc:	bc400043 	ldbu	r17,1(r23)
   26ec0:	10800017 	ldw	r2,0(r2)
   26ec4:	582f883a 	mov	r23,r11
   26ec8:	d8802915 	stw	r2,164(sp)
   26ecc:	20800104 	addi	r2,r4,4
   26ed0:	d9002917 	ldw	r4,164(sp)
   26ed4:	d8802d15 	stw	r2,180(sp)
   26ed8:	203df00e 	bge	r4,zero,2669c <__alt_mem_sdram_controller_0+0xc002669c>
   26edc:	8c403fcc 	andi	r17,r17,255
   26ee0:	00bfffc4 	movi	r2,-1
   26ee4:	8c40201c 	xori	r17,r17,128
   26ee8:	d8802915 	stw	r2,164(sp)
   26eec:	8c7fe004 	addi	r17,r17,-128
   26ef0:	00380806 	br	24f14 <__alt_mem_sdram_controller_0+0xc0024f14>
   26ef4:	9080004c 	andi	r2,r18,1
   26ef8:	0039883a 	mov	fp,zero
   26efc:	10000726 	beq	r2,zero,26f1c <___svfprintf_internal_r+0x2158>
   26f00:	d8c02817 	ldw	r3,160(sp)
   26f04:	dc001dc4 	addi	r16,sp,119
   26f08:	00800c04 	movi	r2,48
   26f0c:	1c07c83a 	sub	r3,r3,r16
   26f10:	d8801dc5 	stb	r2,119(sp)
   26f14:	d8c02e15 	stw	r3,184(sp)
   26f18:	00395206 	br	25464 <__alt_mem_sdram_controller_0+0xc0025464>
   26f1c:	d8002e15 	stw	zero,184(sp)
   26f20:	dc001e04 	addi	r16,sp,120
   26f24:	00394f06 	br	25464 <__alt_mem_sdram_controller_0+0xc0025464>
   26f28:	0005883a 	mov	r2,zero
   26f2c:	003e3206 	br	267f8 <__alt_mem_sdram_controller_0+0xc00267f8>
   26f30:	dd802617 	ldw	r22,152(sp)
   26f34:	003f0606 	br	26b50 <__alt_mem_sdram_controller_0+0xc0026b50>
   26f38:	d9c02785 	stb	r7,158(sp)
   26f3c:	003a5106 	br	25884 <__alt_mem_sdram_controller_0+0xc0025884>
   26f40:	d9c02785 	stb	r7,158(sp)
   26f44:	003a3706 	br	25824 <__alt_mem_sdram_controller_0+0xc0025824>
   26f48:	0005883a 	mov	r2,zero
   26f4c:	003f5e06 	br	26cc8 <__alt_mem_sdram_controller_0+0xc0026cc8>
   26f50:	d9c02785 	stb	r7,158(sp)
   26f54:	00391706 	br	253b4 <__alt_mem_sdram_controller_0+0xc00253b4>
   26f58:	d9c02785 	stb	r7,158(sp)
   26f5c:	0038e606 	br	252f8 <__alt_mem_sdram_controller_0+0xc00252f8>
   26f60:	d8802344 	addi	r2,sp,141
   26f64:	003f0806 	br	26b88 <__alt_mem_sdram_controller_0+0xc0026b88>
   26f68:	d9c02785 	stb	r7,158(sp)
   26f6c:	0038b706 	br	2524c <__alt_mem_sdram_controller_0+0xc002524c>
   26f70:	d9c02785 	stb	r7,158(sp)
   26f74:	003adc06 	br	25ae8 <__alt_mem_sdram_controller_0+0xc0025ae8>
   26f78:	d9403917 	ldw	r5,228(sp)
   26f7c:	00800304 	movi	r2,12
   26f80:	28800015 	stw	r2,0(r5)
   26f84:	00bfffc4 	movi	r2,-1
   26f88:	00387806 	br	2516c <__alt_mem_sdram_controller_0+0xc002516c>
   26f8c:	d9c02785 	stb	r7,158(sp)
   26f90:	003abf06 	br	25a90 <__alt_mem_sdram_controller_0+0xc0025a90>
   26f94:	d9c02785 	stb	r7,158(sp)
   26f98:	003a9b06 	br	25a08 <__alt_mem_sdram_controller_0+0xc0025a08>

00026f9c <time>:
   26f9c:	00800134 	movhi	r2,4
   26fa0:	defffc04 	addi	sp,sp,-16
   26fa4:	10a03d04 	addi	r2,r2,-32524
   26fa8:	dc000215 	stw	r16,8(sp)
   26fac:	2021883a 	mov	r16,r4
   26fb0:	11000017 	ldw	r4,0(r2)
   26fb4:	000d883a 	mov	r6,zero
   26fb8:	d80b883a 	mov	r5,sp
   26fbc:	dfc00315 	stw	ra,12(sp)
   26fc0:	002b2e40 	call	2b2e4 <_gettimeofday_r>
   26fc4:	10000716 	blt	r2,zero,26fe4 <time+0x48>
   26fc8:	d8800017 	ldw	r2,0(sp)
   26fcc:	80000126 	beq	r16,zero,26fd4 <time+0x38>
   26fd0:	80800015 	stw	r2,0(r16)
   26fd4:	dfc00317 	ldw	ra,12(sp)
   26fd8:	dc000217 	ldw	r16,8(sp)
   26fdc:	dec00404 	addi	sp,sp,16
   26fe0:	f800283a 	ret
   26fe4:	00bfffc4 	movi	r2,-1
   26fe8:	003ffa06 	br	26fd4 <__alt_mem_sdram_controller_0+0xc0026fd4>

00026fec <_vfiprintf_r>:
   26fec:	deffff04 	addi	sp,sp,-4
   26ff0:	dfc00015 	stw	ra,0(sp)
   26ff4:	002e78c0 	call	2e78c <___vfiprintf_internal_r>
   26ff8:	dfc00017 	ldw	ra,0(sp)
   26ffc:	dec00104 	addi	sp,sp,4
   27000:	f800283a 	ret

00027004 <___vfprintf_internal_r>:
   27004:	deffb804 	addi	sp,sp,-288
   27008:	dfc04715 	stw	ra,284(sp)
   2700c:	ddc04515 	stw	r23,276(sp)
   27010:	dd404315 	stw	r21,268(sp)
   27014:	d9002c15 	stw	r4,176(sp)
   27018:	282f883a 	mov	r23,r5
   2701c:	302b883a 	mov	r21,r6
   27020:	d9c02d15 	stw	r7,180(sp)
   27024:	df004615 	stw	fp,280(sp)
   27028:	dd804415 	stw	r22,272(sp)
   2702c:	dd004215 	stw	r20,264(sp)
   27030:	dcc04115 	stw	r19,260(sp)
   27034:	dc804015 	stw	r18,256(sp)
   27038:	dc403f15 	stw	r17,252(sp)
   2703c:	dc003e15 	stw	r16,248(sp)
   27040:	002b4400 	call	2b440 <_localeconv_r>
   27044:	10800017 	ldw	r2,0(r2)
   27048:	1009883a 	mov	r4,r2
   2704c:	d8803415 	stw	r2,208(sp)
   27050:	0024d2c0 	call	24d2c <strlen>
   27054:	d8803715 	stw	r2,220(sp)
   27058:	d8802c17 	ldw	r2,176(sp)
   2705c:	10000226 	beq	r2,zero,27068 <___vfprintf_internal_r+0x64>
   27060:	10800e17 	ldw	r2,56(r2)
   27064:	1000f926 	beq	r2,zero,2744c <___vfprintf_internal_r+0x448>
   27068:	b880030b 	ldhu	r2,12(r23)
   2706c:	10c8000c 	andi	r3,r2,8192
   27070:	1800061e 	bne	r3,zero,2708c <___vfprintf_internal_r+0x88>
   27074:	b9001917 	ldw	r4,100(r23)
   27078:	00f7ffc4 	movi	r3,-8193
   2707c:	10880014 	ori	r2,r2,8192
   27080:	20c6703a 	and	r3,r4,r3
   27084:	b880030d 	sth	r2,12(r23)
   27088:	b8c01915 	stw	r3,100(r23)
   2708c:	10c0020c 	andi	r3,r2,8
   27090:	1800c126 	beq	r3,zero,27398 <___vfprintf_internal_r+0x394>
   27094:	b8c00417 	ldw	r3,16(r23)
   27098:	1800bf26 	beq	r3,zero,27398 <___vfprintf_internal_r+0x394>
   2709c:	1080068c 	andi	r2,r2,26
   270a0:	00c00284 	movi	r3,10
   270a4:	10c0c426 	beq	r2,r3,273b8 <___vfprintf_internal_r+0x3b4>
   270a8:	d8c00404 	addi	r3,sp,16
   270ac:	050000f4 	movhi	r20,3
   270b0:	d9001e04 	addi	r4,sp,120
   270b4:	a518db84 	addi	r20,r20,25454
   270b8:	d8c01e15 	stw	r3,120(sp)
   270bc:	d8002015 	stw	zero,128(sp)
   270c0:	d8001f15 	stw	zero,124(sp)
   270c4:	d8003315 	stw	zero,204(sp)
   270c8:	d8003615 	stw	zero,216(sp)
   270cc:	d8003815 	stw	zero,224(sp)
   270d0:	1811883a 	mov	r8,r3
   270d4:	d8003915 	stw	zero,228(sp)
   270d8:	d8003a15 	stw	zero,232(sp)
   270dc:	d8002f15 	stw	zero,188(sp)
   270e0:	d9002815 	stw	r4,160(sp)
   270e4:	a8800007 	ldb	r2,0(r21)
   270e8:	10027b26 	beq	r2,zero,27ad8 <___vfprintf_internal_r+0xad4>
   270ec:	00c00944 	movi	r3,37
   270f0:	a821883a 	mov	r16,r21
   270f4:	10c0021e 	bne	r2,r3,27100 <___vfprintf_internal_r+0xfc>
   270f8:	00001406 	br	2714c <___vfprintf_internal_r+0x148>
   270fc:	10c00326 	beq	r2,r3,2710c <___vfprintf_internal_r+0x108>
   27100:	84000044 	addi	r16,r16,1
   27104:	80800007 	ldb	r2,0(r16)
   27108:	103ffc1e 	bne	r2,zero,270fc <__alt_mem_sdram_controller_0+0xc00270fc>
   2710c:	8563c83a 	sub	r17,r16,r21
   27110:	88000e26 	beq	r17,zero,2714c <___vfprintf_internal_r+0x148>
   27114:	d8c02017 	ldw	r3,128(sp)
   27118:	d8801f17 	ldw	r2,124(sp)
   2711c:	45400015 	stw	r21,0(r8)
   27120:	1c47883a 	add	r3,r3,r17
   27124:	10800044 	addi	r2,r2,1
   27128:	d8c02015 	stw	r3,128(sp)
   2712c:	44400115 	stw	r17,4(r8)
   27130:	d8801f15 	stw	r2,124(sp)
   27134:	00c001c4 	movi	r3,7
   27138:	1880a716 	blt	r3,r2,273d8 <___vfprintf_internal_r+0x3d4>
   2713c:	42000204 	addi	r8,r8,8
   27140:	d9402f17 	ldw	r5,188(sp)
   27144:	2c4b883a 	add	r5,r5,r17
   27148:	d9402f15 	stw	r5,188(sp)
   2714c:	80800007 	ldb	r2,0(r16)
   27150:	1000a826 	beq	r2,zero,273f4 <___vfprintf_internal_r+0x3f0>
   27154:	84400047 	ldb	r17,1(r16)
   27158:	00bfffc4 	movi	r2,-1
   2715c:	85400044 	addi	r21,r16,1
   27160:	d8002785 	stb	zero,158(sp)
   27164:	0007883a 	mov	r3,zero
   27168:	000f883a 	mov	r7,zero
   2716c:	d8802915 	stw	r2,164(sp)
   27170:	d8003115 	stw	zero,196(sp)
   27174:	0025883a 	mov	r18,zero
   27178:	01401604 	movi	r5,88
   2717c:	01800244 	movi	r6,9
   27180:	02800a84 	movi	r10,42
   27184:	02401b04 	movi	r9,108
   27188:	ad400044 	addi	r21,r21,1
   2718c:	88bff804 	addi	r2,r17,-32
   27190:	28830436 	bltu	r5,r2,27da4 <___vfprintf_internal_r+0xda0>
   27194:	100490ba 	slli	r2,r2,2
   27198:	010000b4 	movhi	r4,2
   2719c:	211c6b04 	addi	r4,r4,29100
   271a0:	1105883a 	add	r2,r2,r4
   271a4:	10800017 	ldw	r2,0(r2)
   271a8:	1000683a 	jmp	r2
   271ac:	00027cc4 	movi	zero,2547
   271b0:	00027da4 	muli	zero,zero,2550
   271b4:	00027da4 	muli	zero,zero,2550
   271b8:	00027ce4 	muli	zero,zero,2547
   271bc:	00027da4 	muli	zero,zero,2550
   271c0:	00027da4 	muli	zero,zero,2550
   271c4:	00027da4 	muli	zero,zero,2550
   271c8:	00027da4 	muli	zero,zero,2550
   271cc:	00027da4 	muli	zero,zero,2550
   271d0:	00027da4 	muli	zero,zero,2550
   271d4:	00027458 	cmpnei	zero,zero,2513
   271d8:	00027c00 	call	27c0 <__alt_mem_onchip_memory2_0-0x1d840>
   271dc:	00027da4 	muli	zero,zero,2550
   271e0:	00027320 	cmpeqi	zero,zero,2508
   271e4:	00027480 	call	2748 <__alt_mem_onchip_memory2_0-0x1d8b8>
   271e8:	00027da4 	muli	zero,zero,2550
   271ec:	000274c0 	call	274c <__alt_mem_onchip_memory2_0-0x1d8b4>
   271f0:	000274cc 	andi	zero,zero,2515
   271f4:	000274cc 	andi	zero,zero,2515
   271f8:	000274cc 	andi	zero,zero,2515
   271fc:	000274cc 	andi	zero,zero,2515
   27200:	000274cc 	andi	zero,zero,2515
   27204:	000274cc 	andi	zero,zero,2515
   27208:	000274cc 	andi	zero,zero,2515
   2720c:	000274cc 	andi	zero,zero,2515
   27210:	000274cc 	andi	zero,zero,2515
   27214:	00027da4 	muli	zero,zero,2550
   27218:	00027da4 	muli	zero,zero,2550
   2721c:	00027da4 	muli	zero,zero,2550
   27220:	00027da4 	muli	zero,zero,2550
   27224:	00027da4 	muli	zero,zero,2550
   27228:	00027da4 	muli	zero,zero,2550
   2722c:	00027da4 	muli	zero,zero,2550
   27230:	00027da4 	muli	zero,zero,2550
   27234:	00027da4 	muli	zero,zero,2550
   27238:	00027da4 	muli	zero,zero,2550
   2723c:	00027500 	call	2750 <__alt_mem_onchip_memory2_0-0x1d8b0>
   27240:	000275bc 	xorhi	zero,zero,2518
   27244:	00027da4 	muli	zero,zero,2550
   27248:	000275bc 	xorhi	zero,zero,2518
   2724c:	00027da4 	muli	zero,zero,2550
   27250:	00027da4 	muli	zero,zero,2550
   27254:	00027da4 	muli	zero,zero,2550
   27258:	00027da4 	muli	zero,zero,2550
   2725c:	0002765c 	xori	zero,zero,2521
   27260:	00027da4 	muli	zero,zero,2550
   27264:	00027da4 	muli	zero,zero,2550
   27268:	00027668 	cmpgeui	zero,zero,2521
   2726c:	00027da4 	muli	zero,zero,2550
   27270:	00027da4 	muli	zero,zero,2550
   27274:	00027da4 	muli	zero,zero,2550
   27278:	00027da4 	muli	zero,zero,2550
   2727c:	00027da4 	muli	zero,zero,2550
   27280:	00027ae0 	cmpeqi	zero,zero,2539
   27284:	00027da4 	muli	zero,zero,2550
   27288:	00027da4 	muli	zero,zero,2550
   2728c:	00027b40 	call	27b4 <__alt_mem_onchip_memory2_0-0x1d84c>
   27290:	00027da4 	muli	zero,zero,2550
   27294:	00027da4 	muli	zero,zero,2550
   27298:	00027da4 	muli	zero,zero,2550
   2729c:	00027da4 	muli	zero,zero,2550
   272a0:	00027da4 	muli	zero,zero,2550
   272a4:	00027da4 	muli	zero,zero,2550
   272a8:	00027da4 	muli	zero,zero,2550
   272ac:	00027da4 	muli	zero,zero,2550
   272b0:	00027da4 	muli	zero,zero,2550
   272b4:	00027da4 	muli	zero,zero,2550
   272b8:	00027d50 	cmplti	zero,zero,2549
   272bc:	00027cf0 	cmpltui	zero,zero,2547
   272c0:	000275bc 	xorhi	zero,zero,2518
   272c4:	000275bc 	xorhi	zero,zero,2518
   272c8:	000275bc 	xorhi	zero,zero,2518
   272cc:	00027d00 	call	27d0 <__alt_mem_onchip_memory2_0-0x1d830>
   272d0:	00027cf0 	cmpltui	zero,zero,2547
   272d4:	00027da4 	muli	zero,zero,2550
   272d8:	00027da4 	muli	zero,zero,2550
   272dc:	00027d0c 	andi	zero,zero,2548
   272e0:	00027da4 	muli	zero,zero,2550
   272e4:	00027d1c 	xori	zero,zero,2548
   272e8:	00027bf0 	cmpltui	zero,zero,2543
   272ec:	0002732c 	andhi	zero,zero,2508
   272f0:	00027c10 	cmplti	zero,zero,2544
   272f4:	00027da4 	muli	zero,zero,2550
   272f8:	00027c1c 	xori	zero,zero,2544
   272fc:	00027da4 	muli	zero,zero,2550
   27300:	00027c78 	rdprs	zero,zero,2545
   27304:	00027da4 	muli	zero,zero,2550
   27308:	00027da4 	muli	zero,zero,2550
   2730c:	00027c88 	cmpgei	zero,zero,2546
   27310:	d9003117 	ldw	r4,196(sp)
   27314:	d8802d15 	stw	r2,180(sp)
   27318:	0109c83a 	sub	r4,zero,r4
   2731c:	d9003115 	stw	r4,196(sp)
   27320:	94800114 	ori	r18,r18,4
   27324:	ac400007 	ldb	r17,0(r21)
   27328:	003f9706 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   2732c:	00800c04 	movi	r2,48
   27330:	d9002d17 	ldw	r4,180(sp)
   27334:	d9402917 	ldw	r5,164(sp)
   27338:	d8802705 	stb	r2,156(sp)
   2733c:	00801e04 	movi	r2,120
   27340:	d8802745 	stb	r2,157(sp)
   27344:	d8002785 	stb	zero,158(sp)
   27348:	20c00104 	addi	r3,r4,4
   2734c:	24c00017 	ldw	r19,0(r4)
   27350:	002d883a 	mov	r22,zero
   27354:	90800094 	ori	r2,r18,2
   27358:	28029a16 	blt	r5,zero,27dc4 <___vfprintf_internal_r+0xdc0>
   2735c:	00bfdfc4 	movi	r2,-129
   27360:	90a4703a 	and	r18,r18,r2
   27364:	d8c02d15 	stw	r3,180(sp)
   27368:	94800094 	ori	r18,r18,2
   2736c:	9802871e 	bne	r19,zero,27d8c <___vfprintf_internal_r+0xd88>
   27370:	008000f4 	movhi	r2,3
   27374:	1098cc04 	addi	r2,r2,25392
   27378:	d8803915 	stw	r2,228(sp)
   2737c:	04401e04 	movi	r17,120
   27380:	d8802917 	ldw	r2,164(sp)
   27384:	0039883a 	mov	fp,zero
   27388:	1001e926 	beq	r2,zero,27b30 <___vfprintf_internal_r+0xb2c>
   2738c:	0027883a 	mov	r19,zero
   27390:	002d883a 	mov	r22,zero
   27394:	00020506 	br	27bac <___vfprintf_internal_r+0xba8>
   27398:	d9002c17 	ldw	r4,176(sp)
   2739c:	b80b883a 	mov	r5,r23
   273a0:	00293340 	call	29334 <__swsetup_r>
   273a4:	1005ac1e 	bne	r2,zero,28a58 <___vfprintf_internal_r+0x1a54>
   273a8:	b880030b 	ldhu	r2,12(r23)
   273ac:	00c00284 	movi	r3,10
   273b0:	1080068c 	andi	r2,r2,26
   273b4:	10ff3c1e 	bne	r2,r3,270a8 <__alt_mem_sdram_controller_0+0xc00270a8>
   273b8:	b880038f 	ldh	r2,14(r23)
   273bc:	103f3a16 	blt	r2,zero,270a8 <__alt_mem_sdram_controller_0+0xc00270a8>
   273c0:	d9c02d17 	ldw	r7,180(sp)
   273c4:	d9002c17 	ldw	r4,176(sp)
   273c8:	a80d883a 	mov	r6,r21
   273cc:	b80b883a 	mov	r5,r23
   273d0:	00292180 	call	29218 <__sbprintf>
   273d4:	00001106 	br	2741c <___vfprintf_internal_r+0x418>
   273d8:	d9002c17 	ldw	r4,176(sp)
   273dc:	d9801e04 	addi	r6,sp,120
   273e0:	b80b883a 	mov	r5,r23
   273e4:	002e7740 	call	2e774 <__sprint_r>
   273e8:	1000081e 	bne	r2,zero,2740c <___vfprintf_internal_r+0x408>
   273ec:	da000404 	addi	r8,sp,16
   273f0:	003f5306 	br	27140 <__alt_mem_sdram_controller_0+0xc0027140>
   273f4:	d8802017 	ldw	r2,128(sp)
   273f8:	10000426 	beq	r2,zero,2740c <___vfprintf_internal_r+0x408>
   273fc:	d9002c17 	ldw	r4,176(sp)
   27400:	d9801e04 	addi	r6,sp,120
   27404:	b80b883a 	mov	r5,r23
   27408:	002e7740 	call	2e774 <__sprint_r>
   2740c:	b880030b 	ldhu	r2,12(r23)
   27410:	1080100c 	andi	r2,r2,64
   27414:	1005901e 	bne	r2,zero,28a58 <___vfprintf_internal_r+0x1a54>
   27418:	d8802f17 	ldw	r2,188(sp)
   2741c:	dfc04717 	ldw	ra,284(sp)
   27420:	df004617 	ldw	fp,280(sp)
   27424:	ddc04517 	ldw	r23,276(sp)
   27428:	dd804417 	ldw	r22,272(sp)
   2742c:	dd404317 	ldw	r21,268(sp)
   27430:	dd004217 	ldw	r20,264(sp)
   27434:	dcc04117 	ldw	r19,260(sp)
   27438:	dc804017 	ldw	r18,256(sp)
   2743c:	dc403f17 	ldw	r17,252(sp)
   27440:	dc003e17 	ldw	r16,248(sp)
   27444:	dec04804 	addi	sp,sp,288
   27448:	f800283a 	ret
   2744c:	d9002c17 	ldw	r4,176(sp)
   27450:	0022e400 	call	22e40 <__sinit>
   27454:	003f0406 	br	27068 <__alt_mem_sdram_controller_0+0xc0027068>
   27458:	d8802d17 	ldw	r2,180(sp)
   2745c:	d9002d17 	ldw	r4,180(sp)
   27460:	10800017 	ldw	r2,0(r2)
   27464:	d8803115 	stw	r2,196(sp)
   27468:	20800104 	addi	r2,r4,4
   2746c:	d9003117 	ldw	r4,196(sp)
   27470:	203fa716 	blt	r4,zero,27310 <__alt_mem_sdram_controller_0+0xc0027310>
   27474:	d8802d15 	stw	r2,180(sp)
   27478:	ac400007 	ldb	r17,0(r21)
   2747c:	003f4206 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27480:	ac400007 	ldb	r17,0(r21)
   27484:	aac00044 	addi	r11,r21,1
   27488:	8a872826 	beq	r17,r10,2912c <___vfprintf_internal_r+0x2128>
   2748c:	88bff404 	addi	r2,r17,-48
   27490:	0009883a 	mov	r4,zero
   27494:	30867d36 	bltu	r6,r2,28e8c <___vfprintf_internal_r+0x1e88>
   27498:	5c400007 	ldb	r17,0(r11)
   2749c:	210002a4 	muli	r4,r4,10
   274a0:	5d400044 	addi	r21,r11,1
   274a4:	a817883a 	mov	r11,r21
   274a8:	2089883a 	add	r4,r4,r2
   274ac:	88bff404 	addi	r2,r17,-48
   274b0:	30bff92e 	bgeu	r6,r2,27498 <__alt_mem_sdram_controller_0+0xc0027498>
   274b4:	2005c916 	blt	r4,zero,28bdc <___vfprintf_internal_r+0x1bd8>
   274b8:	d9002915 	stw	r4,164(sp)
   274bc:	003f3306 	br	2718c <__alt_mem_sdram_controller_0+0xc002718c>
   274c0:	94802014 	ori	r18,r18,128
   274c4:	ac400007 	ldb	r17,0(r21)
   274c8:	003f2f06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   274cc:	a809883a 	mov	r4,r21
   274d0:	d8003115 	stw	zero,196(sp)
   274d4:	88bff404 	addi	r2,r17,-48
   274d8:	0017883a 	mov	r11,zero
   274dc:	24400007 	ldb	r17,0(r4)
   274e0:	5ac002a4 	muli	r11,r11,10
   274e4:	ad400044 	addi	r21,r21,1
   274e8:	a809883a 	mov	r4,r21
   274ec:	12d7883a 	add	r11,r2,r11
   274f0:	88bff404 	addi	r2,r17,-48
   274f4:	30bff92e 	bgeu	r6,r2,274dc <__alt_mem_sdram_controller_0+0xc00274dc>
   274f8:	dac03115 	stw	r11,196(sp)
   274fc:	003f2306 	br	2718c <__alt_mem_sdram_controller_0+0xc002718c>
   27500:	18c03fcc 	andi	r3,r3,255
   27504:	18072b1e 	bne	r3,zero,291b4 <___vfprintf_internal_r+0x21b0>
   27508:	94800414 	ori	r18,r18,16
   2750c:	9080080c 	andi	r2,r18,32
   27510:	10037b26 	beq	r2,zero,28300 <___vfprintf_internal_r+0x12fc>
   27514:	d9402d17 	ldw	r5,180(sp)
   27518:	28800117 	ldw	r2,4(r5)
   2751c:	2cc00017 	ldw	r19,0(r5)
   27520:	29400204 	addi	r5,r5,8
   27524:	d9402d15 	stw	r5,180(sp)
   27528:	102d883a 	mov	r22,r2
   2752c:	10044b16 	blt	r2,zero,2865c <___vfprintf_internal_r+0x1658>
   27530:	d9402917 	ldw	r5,164(sp)
   27534:	df002783 	ldbu	fp,158(sp)
   27538:	2803bc16 	blt	r5,zero,2842c <___vfprintf_internal_r+0x1428>
   2753c:	00ffdfc4 	movi	r3,-129
   27540:	9d84b03a 	or	r2,r19,r22
   27544:	90e4703a 	and	r18,r18,r3
   27548:	10017726 	beq	r2,zero,27b28 <___vfprintf_internal_r+0xb24>
   2754c:	b0038326 	beq	r22,zero,2835c <___vfprintf_internal_r+0x1358>
   27550:	dc402a15 	stw	r17,168(sp)
   27554:	dc001e04 	addi	r16,sp,120
   27558:	b023883a 	mov	r17,r22
   2755c:	402d883a 	mov	r22,r8
   27560:	9809883a 	mov	r4,r19
   27564:	880b883a 	mov	r5,r17
   27568:	01800284 	movi	r6,10
   2756c:	000f883a 	mov	r7,zero
   27570:	00308a40 	call	308a4 <__umoddi3>
   27574:	10800c04 	addi	r2,r2,48
   27578:	843fffc4 	addi	r16,r16,-1
   2757c:	9809883a 	mov	r4,r19
   27580:	880b883a 	mov	r5,r17
   27584:	80800005 	stb	r2,0(r16)
   27588:	01800284 	movi	r6,10
   2758c:	000f883a 	mov	r7,zero
   27590:	003032c0 	call	3032c <__udivdi3>
   27594:	1027883a 	mov	r19,r2
   27598:	10c4b03a 	or	r2,r2,r3
   2759c:	1823883a 	mov	r17,r3
   275a0:	103fef1e 	bne	r2,zero,27560 <__alt_mem_sdram_controller_0+0xc0027560>
   275a4:	d8c02817 	ldw	r3,160(sp)
   275a8:	dc402a17 	ldw	r17,168(sp)
   275ac:	b011883a 	mov	r8,r22
   275b0:	1c07c83a 	sub	r3,r3,r16
   275b4:	d8c02e15 	stw	r3,184(sp)
   275b8:	00005906 	br	27720 <___vfprintf_internal_r+0x71c>
   275bc:	18c03fcc 	andi	r3,r3,255
   275c0:	1806fa1e 	bne	r3,zero,291ac <___vfprintf_internal_r+0x21a8>
   275c4:	9080020c 	andi	r2,r18,8
   275c8:	10048a26 	beq	r2,zero,287f4 <___vfprintf_internal_r+0x17f0>
   275cc:	d8c02d17 	ldw	r3,180(sp)
   275d0:	d9002d17 	ldw	r4,180(sp)
   275d4:	d9402d17 	ldw	r5,180(sp)
   275d8:	18c00017 	ldw	r3,0(r3)
   275dc:	21000117 	ldw	r4,4(r4)
   275e0:	29400204 	addi	r5,r5,8
   275e4:	d8c03615 	stw	r3,216(sp)
   275e8:	d9003815 	stw	r4,224(sp)
   275ec:	d9402d15 	stw	r5,180(sp)
   275f0:	d9003617 	ldw	r4,216(sp)
   275f4:	d9403817 	ldw	r5,224(sp)
   275f8:	da003d15 	stw	r8,244(sp)
   275fc:	04000044 	movi	r16,1
   27600:	002ce180 	call	2ce18 <__fpclassifyd>
   27604:	da003d17 	ldw	r8,244(sp)
   27608:	14041f1e 	bne	r2,r16,28688 <___vfprintf_internal_r+0x1684>
   2760c:	d9003617 	ldw	r4,216(sp)
   27610:	d9403817 	ldw	r5,224(sp)
   27614:	000d883a 	mov	r6,zero
   27618:	000f883a 	mov	r7,zero
   2761c:	00320d40 	call	320d4 <__ledf2>
   27620:	da003d17 	ldw	r8,244(sp)
   27624:	1005be16 	blt	r2,zero,28d20 <___vfprintf_internal_r+0x1d1c>
   27628:	df002783 	ldbu	fp,158(sp)
   2762c:	008011c4 	movi	r2,71
   27630:	1445330e 	bge	r2,r17,28b00 <___vfprintf_internal_r+0x1afc>
   27634:	040000f4 	movhi	r16,3
   27638:	8418c404 	addi	r16,r16,25360
   2763c:	00c000c4 	movi	r3,3
   27640:	00bfdfc4 	movi	r2,-129
   27644:	d8c02a15 	stw	r3,168(sp)
   27648:	90a4703a 	and	r18,r18,r2
   2764c:	d8c02e15 	stw	r3,184(sp)
   27650:	d8002915 	stw	zero,164(sp)
   27654:	d8003215 	stw	zero,200(sp)
   27658:	00003706 	br	27738 <___vfprintf_internal_r+0x734>
   2765c:	94800214 	ori	r18,r18,8
   27660:	ac400007 	ldb	r17,0(r21)
   27664:	003ec806 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27668:	18c03fcc 	andi	r3,r3,255
   2766c:	1806db1e 	bne	r3,zero,291dc <___vfprintf_internal_r+0x21d8>
   27670:	94800414 	ori	r18,r18,16
   27674:	9080080c 	andi	r2,r18,32
   27678:	1002d826 	beq	r2,zero,281dc <___vfprintf_internal_r+0x11d8>
   2767c:	d9402d17 	ldw	r5,180(sp)
   27680:	d8c02917 	ldw	r3,164(sp)
   27684:	d8002785 	stb	zero,158(sp)
   27688:	28800204 	addi	r2,r5,8
   2768c:	2cc00017 	ldw	r19,0(r5)
   27690:	2d800117 	ldw	r22,4(r5)
   27694:	18048f16 	blt	r3,zero,288d4 <___vfprintf_internal_r+0x18d0>
   27698:	013fdfc4 	movi	r4,-129
   2769c:	9d86b03a 	or	r3,r19,r22
   276a0:	d8802d15 	stw	r2,180(sp)
   276a4:	9124703a 	and	r18,r18,r4
   276a8:	1802d91e 	bne	r3,zero,28210 <___vfprintf_internal_r+0x120c>
   276ac:	d8c02917 	ldw	r3,164(sp)
   276b0:	0039883a 	mov	fp,zero
   276b4:	1805c326 	beq	r3,zero,28dc4 <___vfprintf_internal_r+0x1dc0>
   276b8:	0027883a 	mov	r19,zero
   276bc:	002d883a 	mov	r22,zero
   276c0:	dc001e04 	addi	r16,sp,120
   276c4:	9806d0fa 	srli	r3,r19,3
   276c8:	b008977a 	slli	r4,r22,29
   276cc:	b02cd0fa 	srli	r22,r22,3
   276d0:	9cc001cc 	andi	r19,r19,7
   276d4:	98800c04 	addi	r2,r19,48
   276d8:	843fffc4 	addi	r16,r16,-1
   276dc:	20e6b03a 	or	r19,r4,r3
   276e0:	80800005 	stb	r2,0(r16)
   276e4:	9d86b03a 	or	r3,r19,r22
   276e8:	183ff61e 	bne	r3,zero,276c4 <__alt_mem_sdram_controller_0+0xc00276c4>
   276ec:	90c0004c 	andi	r3,r18,1
   276f0:	18013b26 	beq	r3,zero,27be0 <___vfprintf_internal_r+0xbdc>
   276f4:	10803fcc 	andi	r2,r2,255
   276f8:	1080201c 	xori	r2,r2,128
   276fc:	10bfe004 	addi	r2,r2,-128
   27700:	00c00c04 	movi	r3,48
   27704:	10c13626 	beq	r2,r3,27be0 <___vfprintf_internal_r+0xbdc>
   27708:	80ffffc5 	stb	r3,-1(r16)
   2770c:	d8c02817 	ldw	r3,160(sp)
   27710:	80bfffc4 	addi	r2,r16,-1
   27714:	1021883a 	mov	r16,r2
   27718:	1887c83a 	sub	r3,r3,r2
   2771c:	d8c02e15 	stw	r3,184(sp)
   27720:	d8802e17 	ldw	r2,184(sp)
   27724:	d9002917 	ldw	r4,164(sp)
   27728:	1100010e 	bge	r2,r4,27730 <___vfprintf_internal_r+0x72c>
   2772c:	2005883a 	mov	r2,r4
   27730:	d8802a15 	stw	r2,168(sp)
   27734:	d8003215 	stw	zero,200(sp)
   27738:	e7003fcc 	andi	fp,fp,255
   2773c:	e700201c 	xori	fp,fp,128
   27740:	e73fe004 	addi	fp,fp,-128
   27744:	e0000326 	beq	fp,zero,27754 <___vfprintf_internal_r+0x750>
   27748:	d8c02a17 	ldw	r3,168(sp)
   2774c:	18c00044 	addi	r3,r3,1
   27750:	d8c02a15 	stw	r3,168(sp)
   27754:	90c0008c 	andi	r3,r18,2
   27758:	d8c02b15 	stw	r3,172(sp)
   2775c:	18000326 	beq	r3,zero,2776c <___vfprintf_internal_r+0x768>
   27760:	d8c02a17 	ldw	r3,168(sp)
   27764:	18c00084 	addi	r3,r3,2
   27768:	d8c02a15 	stw	r3,168(sp)
   2776c:	90c0210c 	andi	r3,r18,132
   27770:	d8c03015 	stw	r3,192(sp)
   27774:	1801a31e 	bne	r3,zero,27e04 <___vfprintf_internal_r+0xe00>
   27778:	d9003117 	ldw	r4,196(sp)
   2777c:	d8c02a17 	ldw	r3,168(sp)
   27780:	20e7c83a 	sub	r19,r4,r3
   27784:	04c19f0e 	bge	zero,r19,27e04 <___vfprintf_internal_r+0xe00>
   27788:	02400404 	movi	r9,16
   2778c:	d8c02017 	ldw	r3,128(sp)
   27790:	d8801f17 	ldw	r2,124(sp)
   27794:	4cc50d0e 	bge	r9,r19,28bcc <___vfprintf_internal_r+0x1bc8>
   27798:	014000f4 	movhi	r5,3
   2779c:	2958df84 	addi	r5,r5,25470
   277a0:	dc403b15 	stw	r17,236(sp)
   277a4:	d9403515 	stw	r5,212(sp)
   277a8:	9823883a 	mov	r17,r19
   277ac:	482d883a 	mov	r22,r9
   277b0:	9027883a 	mov	r19,r18
   277b4:	070001c4 	movi	fp,7
   277b8:	8025883a 	mov	r18,r16
   277bc:	dc002c17 	ldw	r16,176(sp)
   277c0:	00000306 	br	277d0 <___vfprintf_internal_r+0x7cc>
   277c4:	8c7ffc04 	addi	r17,r17,-16
   277c8:	42000204 	addi	r8,r8,8
   277cc:	b440130e 	bge	r22,r17,2781c <___vfprintf_internal_r+0x818>
   277d0:	010000f4 	movhi	r4,3
   277d4:	18c00404 	addi	r3,r3,16
   277d8:	10800044 	addi	r2,r2,1
   277dc:	2118df84 	addi	r4,r4,25470
   277e0:	41000015 	stw	r4,0(r8)
   277e4:	45800115 	stw	r22,4(r8)
   277e8:	d8c02015 	stw	r3,128(sp)
   277ec:	d8801f15 	stw	r2,124(sp)
   277f0:	e0bff40e 	bge	fp,r2,277c4 <__alt_mem_sdram_controller_0+0xc00277c4>
   277f4:	d9801e04 	addi	r6,sp,120
   277f8:	b80b883a 	mov	r5,r23
   277fc:	8009883a 	mov	r4,r16
   27800:	002e7740 	call	2e774 <__sprint_r>
   27804:	103f011e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27808:	8c7ffc04 	addi	r17,r17,-16
   2780c:	d8c02017 	ldw	r3,128(sp)
   27810:	d8801f17 	ldw	r2,124(sp)
   27814:	da000404 	addi	r8,sp,16
   27818:	b47fed16 	blt	r22,r17,277d0 <__alt_mem_sdram_controller_0+0xc00277d0>
   2781c:	9021883a 	mov	r16,r18
   27820:	9825883a 	mov	r18,r19
   27824:	8827883a 	mov	r19,r17
   27828:	dc403b17 	ldw	r17,236(sp)
   2782c:	d9403517 	ldw	r5,212(sp)
   27830:	98c7883a 	add	r3,r19,r3
   27834:	10800044 	addi	r2,r2,1
   27838:	41400015 	stw	r5,0(r8)
   2783c:	44c00115 	stw	r19,4(r8)
   27840:	d8c02015 	stw	r3,128(sp)
   27844:	d8801f15 	stw	r2,124(sp)
   27848:	010001c4 	movi	r4,7
   2784c:	2082a316 	blt	r4,r2,282dc <___vfprintf_internal_r+0x12d8>
   27850:	df002787 	ldb	fp,158(sp)
   27854:	42000204 	addi	r8,r8,8
   27858:	e0000c26 	beq	fp,zero,2788c <___vfprintf_internal_r+0x888>
   2785c:	d8801f17 	ldw	r2,124(sp)
   27860:	d9002784 	addi	r4,sp,158
   27864:	18c00044 	addi	r3,r3,1
   27868:	10800044 	addi	r2,r2,1
   2786c:	41000015 	stw	r4,0(r8)
   27870:	01000044 	movi	r4,1
   27874:	41000115 	stw	r4,4(r8)
   27878:	d8c02015 	stw	r3,128(sp)
   2787c:	d8801f15 	stw	r2,124(sp)
   27880:	010001c4 	movi	r4,7
   27884:	20823c16 	blt	r4,r2,28178 <___vfprintf_internal_r+0x1174>
   27888:	42000204 	addi	r8,r8,8
   2788c:	d8802b17 	ldw	r2,172(sp)
   27890:	10000c26 	beq	r2,zero,278c4 <___vfprintf_internal_r+0x8c0>
   27894:	d8801f17 	ldw	r2,124(sp)
   27898:	d9002704 	addi	r4,sp,156
   2789c:	18c00084 	addi	r3,r3,2
   278a0:	10800044 	addi	r2,r2,1
   278a4:	41000015 	stw	r4,0(r8)
   278a8:	01000084 	movi	r4,2
   278ac:	41000115 	stw	r4,4(r8)
   278b0:	d8c02015 	stw	r3,128(sp)
   278b4:	d8801f15 	stw	r2,124(sp)
   278b8:	010001c4 	movi	r4,7
   278bc:	20823616 	blt	r4,r2,28198 <___vfprintf_internal_r+0x1194>
   278c0:	42000204 	addi	r8,r8,8
   278c4:	d9003017 	ldw	r4,192(sp)
   278c8:	00802004 	movi	r2,128
   278cc:	20819926 	beq	r4,r2,27f34 <___vfprintf_internal_r+0xf30>
   278d0:	d9402917 	ldw	r5,164(sp)
   278d4:	d8802e17 	ldw	r2,184(sp)
   278d8:	28adc83a 	sub	r22,r5,r2
   278dc:	0580310e 	bge	zero,r22,279a4 <___vfprintf_internal_r+0x9a0>
   278e0:	07000404 	movi	fp,16
   278e4:	d8801f17 	ldw	r2,124(sp)
   278e8:	e584140e 	bge	fp,r22,2893c <___vfprintf_internal_r+0x1938>
   278ec:	014000f4 	movhi	r5,3
   278f0:	2958db84 	addi	r5,r5,25454
   278f4:	dc402915 	stw	r17,164(sp)
   278f8:	d9402b15 	stw	r5,172(sp)
   278fc:	b023883a 	mov	r17,r22
   27900:	04c001c4 	movi	r19,7
   27904:	a82d883a 	mov	r22,r21
   27908:	902b883a 	mov	r21,r18
   2790c:	8025883a 	mov	r18,r16
   27910:	dc002c17 	ldw	r16,176(sp)
   27914:	00000306 	br	27924 <___vfprintf_internal_r+0x920>
   27918:	8c7ffc04 	addi	r17,r17,-16
   2791c:	42000204 	addi	r8,r8,8
   27920:	e440110e 	bge	fp,r17,27968 <___vfprintf_internal_r+0x964>
   27924:	18c00404 	addi	r3,r3,16
   27928:	10800044 	addi	r2,r2,1
   2792c:	45000015 	stw	r20,0(r8)
   27930:	47000115 	stw	fp,4(r8)
   27934:	d8c02015 	stw	r3,128(sp)
   27938:	d8801f15 	stw	r2,124(sp)
   2793c:	98bff60e 	bge	r19,r2,27918 <__alt_mem_sdram_controller_0+0xc0027918>
   27940:	d9801e04 	addi	r6,sp,120
   27944:	b80b883a 	mov	r5,r23
   27948:	8009883a 	mov	r4,r16
   2794c:	002e7740 	call	2e774 <__sprint_r>
   27950:	103eae1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27954:	8c7ffc04 	addi	r17,r17,-16
   27958:	d8c02017 	ldw	r3,128(sp)
   2795c:	d8801f17 	ldw	r2,124(sp)
   27960:	da000404 	addi	r8,sp,16
   27964:	e47fef16 	blt	fp,r17,27924 <__alt_mem_sdram_controller_0+0xc0027924>
   27968:	9021883a 	mov	r16,r18
   2796c:	a825883a 	mov	r18,r21
   27970:	b02b883a 	mov	r21,r22
   27974:	882d883a 	mov	r22,r17
   27978:	dc402917 	ldw	r17,164(sp)
   2797c:	d9002b17 	ldw	r4,172(sp)
   27980:	1d87883a 	add	r3,r3,r22
   27984:	10800044 	addi	r2,r2,1
   27988:	41000015 	stw	r4,0(r8)
   2798c:	45800115 	stw	r22,4(r8)
   27990:	d8c02015 	stw	r3,128(sp)
   27994:	d8801f15 	stw	r2,124(sp)
   27998:	010001c4 	movi	r4,7
   2799c:	2081ee16 	blt	r4,r2,28158 <___vfprintf_internal_r+0x1154>
   279a0:	42000204 	addi	r8,r8,8
   279a4:	9080400c 	andi	r2,r18,256
   279a8:	1001181e 	bne	r2,zero,27e0c <___vfprintf_internal_r+0xe08>
   279ac:	d9402e17 	ldw	r5,184(sp)
   279b0:	d8801f17 	ldw	r2,124(sp)
   279b4:	44000015 	stw	r16,0(r8)
   279b8:	1947883a 	add	r3,r3,r5
   279bc:	10800044 	addi	r2,r2,1
   279c0:	41400115 	stw	r5,4(r8)
   279c4:	d8c02015 	stw	r3,128(sp)
   279c8:	d8801f15 	stw	r2,124(sp)
   279cc:	010001c4 	movi	r4,7
   279d0:	2081d316 	blt	r4,r2,28120 <___vfprintf_internal_r+0x111c>
   279d4:	42000204 	addi	r8,r8,8
   279d8:	9480010c 	andi	r18,r18,4
   279dc:	90003226 	beq	r18,zero,27aa8 <___vfprintf_internal_r+0xaa4>
   279e0:	d9403117 	ldw	r5,196(sp)
   279e4:	d8802a17 	ldw	r2,168(sp)
   279e8:	28a1c83a 	sub	r16,r5,r2
   279ec:	04002e0e 	bge	zero,r16,27aa8 <___vfprintf_internal_r+0xaa4>
   279f0:	04400404 	movi	r17,16
   279f4:	d8801f17 	ldw	r2,124(sp)
   279f8:	8c04a20e 	bge	r17,r16,28c84 <___vfprintf_internal_r+0x1c80>
   279fc:	014000f4 	movhi	r5,3
   27a00:	2958df84 	addi	r5,r5,25470
   27a04:	d9403515 	stw	r5,212(sp)
   27a08:	048001c4 	movi	r18,7
   27a0c:	dcc02c17 	ldw	r19,176(sp)
   27a10:	00000306 	br	27a20 <___vfprintf_internal_r+0xa1c>
   27a14:	843ffc04 	addi	r16,r16,-16
   27a18:	42000204 	addi	r8,r8,8
   27a1c:	8c00130e 	bge	r17,r16,27a6c <___vfprintf_internal_r+0xa68>
   27a20:	010000f4 	movhi	r4,3
   27a24:	18c00404 	addi	r3,r3,16
   27a28:	10800044 	addi	r2,r2,1
   27a2c:	2118df84 	addi	r4,r4,25470
   27a30:	41000015 	stw	r4,0(r8)
   27a34:	44400115 	stw	r17,4(r8)
   27a38:	d8c02015 	stw	r3,128(sp)
   27a3c:	d8801f15 	stw	r2,124(sp)
   27a40:	90bff40e 	bge	r18,r2,27a14 <__alt_mem_sdram_controller_0+0xc0027a14>
   27a44:	d9801e04 	addi	r6,sp,120
   27a48:	b80b883a 	mov	r5,r23
   27a4c:	9809883a 	mov	r4,r19
   27a50:	002e7740 	call	2e774 <__sprint_r>
   27a54:	103e6d1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27a58:	843ffc04 	addi	r16,r16,-16
   27a5c:	d8c02017 	ldw	r3,128(sp)
   27a60:	d8801f17 	ldw	r2,124(sp)
   27a64:	da000404 	addi	r8,sp,16
   27a68:	8c3fed16 	blt	r17,r16,27a20 <__alt_mem_sdram_controller_0+0xc0027a20>
   27a6c:	d9403517 	ldw	r5,212(sp)
   27a70:	1c07883a 	add	r3,r3,r16
   27a74:	10800044 	addi	r2,r2,1
   27a78:	41400015 	stw	r5,0(r8)
   27a7c:	44000115 	stw	r16,4(r8)
   27a80:	d8c02015 	stw	r3,128(sp)
   27a84:	d8801f15 	stw	r2,124(sp)
   27a88:	010001c4 	movi	r4,7
   27a8c:	2080060e 	bge	r4,r2,27aa8 <___vfprintf_internal_r+0xaa4>
   27a90:	d9002c17 	ldw	r4,176(sp)
   27a94:	d9801e04 	addi	r6,sp,120
   27a98:	b80b883a 	mov	r5,r23
   27a9c:	002e7740 	call	2e774 <__sprint_r>
   27aa0:	103e5a1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27aa4:	d8c02017 	ldw	r3,128(sp)
   27aa8:	d8803117 	ldw	r2,196(sp)
   27aac:	d9002a17 	ldw	r4,168(sp)
   27ab0:	1100010e 	bge	r2,r4,27ab8 <___vfprintf_internal_r+0xab4>
   27ab4:	2005883a 	mov	r2,r4
   27ab8:	d9402f17 	ldw	r5,188(sp)
   27abc:	288b883a 	add	r5,r5,r2
   27ac0:	d9402f15 	stw	r5,188(sp)
   27ac4:	18019e1e 	bne	r3,zero,28140 <___vfprintf_internal_r+0x113c>
   27ac8:	a8800007 	ldb	r2,0(r21)
   27acc:	d8001f15 	stw	zero,124(sp)
   27ad0:	da000404 	addi	r8,sp,16
   27ad4:	103d851e 	bne	r2,zero,270ec <__alt_mem_sdram_controller_0+0xc00270ec>
   27ad8:	a821883a 	mov	r16,r21
   27adc:	003d9b06 	br	2714c <__alt_mem_sdram_controller_0+0xc002714c>
   27ae0:	18c03fcc 	andi	r3,r3,255
   27ae4:	1805c11e 	bne	r3,zero,291ec <___vfprintf_internal_r+0x21e8>
   27ae8:	94800414 	ori	r18,r18,16
   27aec:	9080080c 	andi	r2,r18,32
   27af0:	10020c26 	beq	r2,zero,28324 <___vfprintf_internal_r+0x1320>
   27af4:	d8802d17 	ldw	r2,180(sp)
   27af8:	d9002917 	ldw	r4,164(sp)
   27afc:	d8002785 	stb	zero,158(sp)
   27b00:	10c00204 	addi	r3,r2,8
   27b04:	14c00017 	ldw	r19,0(r2)
   27b08:	15800117 	ldw	r22,4(r2)
   27b0c:	20040f16 	blt	r4,zero,28b4c <___vfprintf_internal_r+0x1b48>
   27b10:	013fdfc4 	movi	r4,-129
   27b14:	9d84b03a 	or	r2,r19,r22
   27b18:	d8c02d15 	stw	r3,180(sp)
   27b1c:	9124703a 	and	r18,r18,r4
   27b20:	0039883a 	mov	fp,zero
   27b24:	103e891e 	bne	r2,zero,2754c <__alt_mem_sdram_controller_0+0xc002754c>
   27b28:	d9002917 	ldw	r4,164(sp)
   27b2c:	2002c11e 	bne	r4,zero,28634 <___vfprintf_internal_r+0x1630>
   27b30:	d8002915 	stw	zero,164(sp)
   27b34:	d8002e15 	stw	zero,184(sp)
   27b38:	dc001e04 	addi	r16,sp,120
   27b3c:	003ef806 	br	27720 <__alt_mem_sdram_controller_0+0xc0027720>
   27b40:	18c03fcc 	andi	r3,r3,255
   27b44:	18059d1e 	bne	r3,zero,291bc <___vfprintf_internal_r+0x21b8>
   27b48:	014000f4 	movhi	r5,3
   27b4c:	2958c704 	addi	r5,r5,25372
   27b50:	d9403915 	stw	r5,228(sp)
   27b54:	9080080c 	andi	r2,r18,32
   27b58:	10005226 	beq	r2,zero,27ca4 <___vfprintf_internal_r+0xca0>
   27b5c:	d8802d17 	ldw	r2,180(sp)
   27b60:	14c00017 	ldw	r19,0(r2)
   27b64:	15800117 	ldw	r22,4(r2)
   27b68:	10800204 	addi	r2,r2,8
   27b6c:	d8802d15 	stw	r2,180(sp)
   27b70:	9080004c 	andi	r2,r18,1
   27b74:	10019026 	beq	r2,zero,281b8 <___vfprintf_internal_r+0x11b4>
   27b78:	9d84b03a 	or	r2,r19,r22
   27b7c:	10036926 	beq	r2,zero,28924 <___vfprintf_internal_r+0x1920>
   27b80:	d8c02917 	ldw	r3,164(sp)
   27b84:	00800c04 	movi	r2,48
   27b88:	d8802705 	stb	r2,156(sp)
   27b8c:	dc402745 	stb	r17,157(sp)
   27b90:	d8002785 	stb	zero,158(sp)
   27b94:	90800094 	ori	r2,r18,2
   27b98:	18045d16 	blt	r3,zero,28d10 <___vfprintf_internal_r+0x1d0c>
   27b9c:	00bfdfc4 	movi	r2,-129
   27ba0:	90a4703a 	and	r18,r18,r2
   27ba4:	94800094 	ori	r18,r18,2
   27ba8:	0039883a 	mov	fp,zero
   27bac:	d9003917 	ldw	r4,228(sp)
   27bb0:	dc001e04 	addi	r16,sp,120
   27bb4:	988003cc 	andi	r2,r19,15
   27bb8:	b006973a 	slli	r3,r22,28
   27bbc:	2085883a 	add	r2,r4,r2
   27bc0:	9826d13a 	srli	r19,r19,4
   27bc4:	10800003 	ldbu	r2,0(r2)
   27bc8:	b02cd13a 	srli	r22,r22,4
   27bcc:	843fffc4 	addi	r16,r16,-1
   27bd0:	1ce6b03a 	or	r19,r3,r19
   27bd4:	80800005 	stb	r2,0(r16)
   27bd8:	9d84b03a 	or	r2,r19,r22
   27bdc:	103ff51e 	bne	r2,zero,27bb4 <__alt_mem_sdram_controller_0+0xc0027bb4>
   27be0:	d8c02817 	ldw	r3,160(sp)
   27be4:	1c07c83a 	sub	r3,r3,r16
   27be8:	d8c02e15 	stw	r3,184(sp)
   27bec:	003ecc06 	br	27720 <__alt_mem_sdram_controller_0+0xc0027720>
   27bf0:	18c03fcc 	andi	r3,r3,255
   27bf4:	183e9f26 	beq	r3,zero,27674 <__alt_mem_sdram_controller_0+0xc0027674>
   27bf8:	d9c02785 	stb	r7,158(sp)
   27bfc:	003e9d06 	br	27674 <__alt_mem_sdram_controller_0+0xc0027674>
   27c00:	00c00044 	movi	r3,1
   27c04:	01c00ac4 	movi	r7,43
   27c08:	ac400007 	ldb	r17,0(r21)
   27c0c:	003d5e06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27c10:	94800814 	ori	r18,r18,32
   27c14:	ac400007 	ldb	r17,0(r21)
   27c18:	003d5b06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27c1c:	d8c02d17 	ldw	r3,180(sp)
   27c20:	d8002785 	stb	zero,158(sp)
   27c24:	1c000017 	ldw	r16,0(r3)
   27c28:	1cc00104 	addi	r19,r3,4
   27c2c:	80041926 	beq	r16,zero,28c94 <___vfprintf_internal_r+0x1c90>
   27c30:	d9002917 	ldw	r4,164(sp)
   27c34:	2003d016 	blt	r4,zero,28b78 <___vfprintf_internal_r+0x1b74>
   27c38:	200d883a 	mov	r6,r4
   27c3c:	000b883a 	mov	r5,zero
   27c40:	8009883a 	mov	r4,r16
   27c44:	da003d15 	stw	r8,244(sp)
   27c48:	002b4d00 	call	2b4d0 <memchr>
   27c4c:	da003d17 	ldw	r8,244(sp)
   27c50:	10045426 	beq	r2,zero,28da4 <___vfprintf_internal_r+0x1da0>
   27c54:	1405c83a 	sub	r2,r2,r16
   27c58:	d8802e15 	stw	r2,184(sp)
   27c5c:	1003cc16 	blt	r2,zero,28b90 <___vfprintf_internal_r+0x1b8c>
   27c60:	df002783 	ldbu	fp,158(sp)
   27c64:	d8802a15 	stw	r2,168(sp)
   27c68:	dcc02d15 	stw	r19,180(sp)
   27c6c:	d8002915 	stw	zero,164(sp)
   27c70:	d8003215 	stw	zero,200(sp)
   27c74:	003eb006 	br	27738 <__alt_mem_sdram_controller_0+0xc0027738>
   27c78:	18c03fcc 	andi	r3,r3,255
   27c7c:	183f9b26 	beq	r3,zero,27aec <__alt_mem_sdram_controller_0+0xc0027aec>
   27c80:	d9c02785 	stb	r7,158(sp)
   27c84:	003f9906 	br	27aec <__alt_mem_sdram_controller_0+0xc0027aec>
   27c88:	18c03fcc 	andi	r3,r3,255
   27c8c:	1805551e 	bne	r3,zero,291e4 <___vfprintf_internal_r+0x21e0>
   27c90:	014000f4 	movhi	r5,3
   27c94:	2958cc04 	addi	r5,r5,25392
   27c98:	d9403915 	stw	r5,228(sp)
   27c9c:	9080080c 	andi	r2,r18,32
   27ca0:	103fae1e 	bne	r2,zero,27b5c <__alt_mem_sdram_controller_0+0xc0027b5c>
   27ca4:	9080040c 	andi	r2,r18,16
   27ca8:	1002de26 	beq	r2,zero,28824 <___vfprintf_internal_r+0x1820>
   27cac:	d8c02d17 	ldw	r3,180(sp)
   27cb0:	002d883a 	mov	r22,zero
   27cb4:	1cc00017 	ldw	r19,0(r3)
   27cb8:	18c00104 	addi	r3,r3,4
   27cbc:	d8c02d15 	stw	r3,180(sp)
   27cc0:	003fab06 	br	27b70 <__alt_mem_sdram_controller_0+0xc0027b70>
   27cc4:	38803fcc 	andi	r2,r7,255
   27cc8:	1080201c 	xori	r2,r2,128
   27ccc:	10bfe004 	addi	r2,r2,-128
   27cd0:	1002d21e 	bne	r2,zero,2881c <___vfprintf_internal_r+0x1818>
   27cd4:	00c00044 	movi	r3,1
   27cd8:	01c00804 	movi	r7,32
   27cdc:	ac400007 	ldb	r17,0(r21)
   27ce0:	003d2906 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27ce4:	94800054 	ori	r18,r18,1
   27ce8:	ac400007 	ldb	r17,0(r21)
   27cec:	003d2606 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27cf0:	18c03fcc 	andi	r3,r3,255
   27cf4:	183e0526 	beq	r3,zero,2750c <__alt_mem_sdram_controller_0+0xc002750c>
   27cf8:	d9c02785 	stb	r7,158(sp)
   27cfc:	003e0306 	br	2750c <__alt_mem_sdram_controller_0+0xc002750c>
   27d00:	94801014 	ori	r18,r18,64
   27d04:	ac400007 	ldb	r17,0(r21)
   27d08:	003d1f06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27d0c:	ac400007 	ldb	r17,0(r21)
   27d10:	8a438726 	beq	r17,r9,28b30 <___vfprintf_internal_r+0x1b2c>
   27d14:	94800414 	ori	r18,r18,16
   27d18:	003d1b06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   27d1c:	18c03fcc 	andi	r3,r3,255
   27d20:	1805341e 	bne	r3,zero,291f4 <___vfprintf_internal_r+0x21f0>
   27d24:	9080080c 	andi	r2,r18,32
   27d28:	1002cd26 	beq	r2,zero,28860 <___vfprintf_internal_r+0x185c>
   27d2c:	d9402d17 	ldw	r5,180(sp)
   27d30:	d9002f17 	ldw	r4,188(sp)
   27d34:	28800017 	ldw	r2,0(r5)
   27d38:	2007d7fa 	srai	r3,r4,31
   27d3c:	29400104 	addi	r5,r5,4
   27d40:	d9402d15 	stw	r5,180(sp)
   27d44:	11000015 	stw	r4,0(r2)
   27d48:	10c00115 	stw	r3,4(r2)
   27d4c:	003ce506 	br	270e4 <__alt_mem_sdram_controller_0+0xc00270e4>
   27d50:	d8c02d17 	ldw	r3,180(sp)
   27d54:	d9002d17 	ldw	r4,180(sp)
   27d58:	d8002785 	stb	zero,158(sp)
   27d5c:	18800017 	ldw	r2,0(r3)
   27d60:	21000104 	addi	r4,r4,4
   27d64:	00c00044 	movi	r3,1
   27d68:	d8c02a15 	stw	r3,168(sp)
   27d6c:	d8801405 	stb	r2,80(sp)
   27d70:	d9002d15 	stw	r4,180(sp)
   27d74:	d8c02e15 	stw	r3,184(sp)
   27d78:	d8002915 	stw	zero,164(sp)
   27d7c:	d8003215 	stw	zero,200(sp)
   27d80:	dc001404 	addi	r16,sp,80
   27d84:	0039883a 	mov	fp,zero
   27d88:	003e7206 	br	27754 <__alt_mem_sdram_controller_0+0xc0027754>
   27d8c:	010000f4 	movhi	r4,3
   27d90:	2118cc04 	addi	r4,r4,25392
   27d94:	0039883a 	mov	fp,zero
   27d98:	d9003915 	stw	r4,228(sp)
   27d9c:	04401e04 	movi	r17,120
   27da0:	003f8206 	br	27bac <__alt_mem_sdram_controller_0+0xc0027bac>
   27da4:	18c03fcc 	andi	r3,r3,255
   27da8:	1805061e 	bne	r3,zero,291c4 <___vfprintf_internal_r+0x21c0>
   27dac:	883d9126 	beq	r17,zero,273f4 <__alt_mem_sdram_controller_0+0xc00273f4>
   27db0:	00c00044 	movi	r3,1
   27db4:	d8c02a15 	stw	r3,168(sp)
   27db8:	dc401405 	stb	r17,80(sp)
   27dbc:	d8002785 	stb	zero,158(sp)
   27dc0:	003fec06 	br	27d74 <__alt_mem_sdram_controller_0+0xc0027d74>
   27dc4:	014000f4 	movhi	r5,3
   27dc8:	2958cc04 	addi	r5,r5,25392
   27dcc:	d9403915 	stw	r5,228(sp)
   27dd0:	d8c02d15 	stw	r3,180(sp)
   27dd4:	1025883a 	mov	r18,r2
   27dd8:	04401e04 	movi	r17,120
   27ddc:	9d84b03a 	or	r2,r19,r22
   27de0:	1000fc1e 	bne	r2,zero,281d4 <___vfprintf_internal_r+0x11d0>
   27de4:	0039883a 	mov	fp,zero
   27de8:	00800084 	movi	r2,2
   27dec:	10803fcc 	andi	r2,r2,255
   27df0:	00c00044 	movi	r3,1
   27df4:	10c20f26 	beq	r2,r3,28634 <___vfprintf_internal_r+0x1630>
   27df8:	00c00084 	movi	r3,2
   27dfc:	10fd6326 	beq	r2,r3,2738c <__alt_mem_sdram_controller_0+0xc002738c>
   27e00:	003e2d06 	br	276b8 <__alt_mem_sdram_controller_0+0xc00276b8>
   27e04:	d8c02017 	ldw	r3,128(sp)
   27e08:	003e9306 	br	27858 <__alt_mem_sdram_controller_0+0xc0027858>
   27e0c:	00801944 	movi	r2,101
   27e10:	14407e0e 	bge	r2,r17,2800c <___vfprintf_internal_r+0x1008>
   27e14:	d9003617 	ldw	r4,216(sp)
   27e18:	d9403817 	ldw	r5,224(sp)
   27e1c:	000d883a 	mov	r6,zero
   27e20:	000f883a 	mov	r7,zero
   27e24:	d8c03c15 	stw	r3,240(sp)
   27e28:	da003d15 	stw	r8,244(sp)
   27e2c:	0031f700 	call	31f70 <__eqdf2>
   27e30:	d8c03c17 	ldw	r3,240(sp)
   27e34:	da003d17 	ldw	r8,244(sp)
   27e38:	1000f71e 	bne	r2,zero,28218 <___vfprintf_internal_r+0x1214>
   27e3c:	d8801f17 	ldw	r2,124(sp)
   27e40:	010000f4 	movhi	r4,3
   27e44:	2118d304 	addi	r4,r4,25420
   27e48:	18c00044 	addi	r3,r3,1
   27e4c:	10800044 	addi	r2,r2,1
   27e50:	41000015 	stw	r4,0(r8)
   27e54:	01000044 	movi	r4,1
   27e58:	41000115 	stw	r4,4(r8)
   27e5c:	d8c02015 	stw	r3,128(sp)
   27e60:	d8801f15 	stw	r2,124(sp)
   27e64:	010001c4 	movi	r4,7
   27e68:	2082b816 	blt	r4,r2,2894c <___vfprintf_internal_r+0x1948>
   27e6c:	42000204 	addi	r8,r8,8
   27e70:	d8802617 	ldw	r2,152(sp)
   27e74:	d9403317 	ldw	r5,204(sp)
   27e78:	11400216 	blt	r2,r5,27e84 <___vfprintf_internal_r+0xe80>
   27e7c:	9080004c 	andi	r2,r18,1
   27e80:	103ed526 	beq	r2,zero,279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   27e84:	d8803717 	ldw	r2,220(sp)
   27e88:	d9003417 	ldw	r4,208(sp)
   27e8c:	d9403717 	ldw	r5,220(sp)
   27e90:	1887883a 	add	r3,r3,r2
   27e94:	d8801f17 	ldw	r2,124(sp)
   27e98:	41000015 	stw	r4,0(r8)
   27e9c:	41400115 	stw	r5,4(r8)
   27ea0:	10800044 	addi	r2,r2,1
   27ea4:	d8c02015 	stw	r3,128(sp)
   27ea8:	d8801f15 	stw	r2,124(sp)
   27eac:	010001c4 	movi	r4,7
   27eb0:	20832916 	blt	r4,r2,28b58 <___vfprintf_internal_r+0x1b54>
   27eb4:	42000204 	addi	r8,r8,8
   27eb8:	d8803317 	ldw	r2,204(sp)
   27ebc:	143fffc4 	addi	r16,r2,-1
   27ec0:	043ec50e 	bge	zero,r16,279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   27ec4:	04400404 	movi	r17,16
   27ec8:	d8801f17 	ldw	r2,124(sp)
   27ecc:	8c00880e 	bge	r17,r16,280f0 <___vfprintf_internal_r+0x10ec>
   27ed0:	014000f4 	movhi	r5,3
   27ed4:	2958db84 	addi	r5,r5,25454
   27ed8:	d9402b15 	stw	r5,172(sp)
   27edc:	058001c4 	movi	r22,7
   27ee0:	dcc02c17 	ldw	r19,176(sp)
   27ee4:	00000306 	br	27ef4 <___vfprintf_internal_r+0xef0>
   27ee8:	42000204 	addi	r8,r8,8
   27eec:	843ffc04 	addi	r16,r16,-16
   27ef0:	8c00820e 	bge	r17,r16,280fc <___vfprintf_internal_r+0x10f8>
   27ef4:	18c00404 	addi	r3,r3,16
   27ef8:	10800044 	addi	r2,r2,1
   27efc:	45000015 	stw	r20,0(r8)
   27f00:	44400115 	stw	r17,4(r8)
   27f04:	d8c02015 	stw	r3,128(sp)
   27f08:	d8801f15 	stw	r2,124(sp)
   27f0c:	b0bff60e 	bge	r22,r2,27ee8 <__alt_mem_sdram_controller_0+0xc0027ee8>
   27f10:	d9801e04 	addi	r6,sp,120
   27f14:	b80b883a 	mov	r5,r23
   27f18:	9809883a 	mov	r4,r19
   27f1c:	002e7740 	call	2e774 <__sprint_r>
   27f20:	103d3a1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27f24:	d8c02017 	ldw	r3,128(sp)
   27f28:	d8801f17 	ldw	r2,124(sp)
   27f2c:	da000404 	addi	r8,sp,16
   27f30:	003fee06 	br	27eec <__alt_mem_sdram_controller_0+0xc0027eec>
   27f34:	d9403117 	ldw	r5,196(sp)
   27f38:	d8802a17 	ldw	r2,168(sp)
   27f3c:	28adc83a 	sub	r22,r5,r2
   27f40:	05be630e 	bge	zero,r22,278d0 <__alt_mem_sdram_controller_0+0xc00278d0>
   27f44:	07000404 	movi	fp,16
   27f48:	d8801f17 	ldw	r2,124(sp)
   27f4c:	e5838f0e 	bge	fp,r22,28d8c <___vfprintf_internal_r+0x1d88>
   27f50:	014000f4 	movhi	r5,3
   27f54:	2958db84 	addi	r5,r5,25454
   27f58:	dc403015 	stw	r17,192(sp)
   27f5c:	d9402b15 	stw	r5,172(sp)
   27f60:	b023883a 	mov	r17,r22
   27f64:	04c001c4 	movi	r19,7
   27f68:	a82d883a 	mov	r22,r21
   27f6c:	902b883a 	mov	r21,r18
   27f70:	8025883a 	mov	r18,r16
   27f74:	dc002c17 	ldw	r16,176(sp)
   27f78:	00000306 	br	27f88 <___vfprintf_internal_r+0xf84>
   27f7c:	8c7ffc04 	addi	r17,r17,-16
   27f80:	42000204 	addi	r8,r8,8
   27f84:	e440110e 	bge	fp,r17,27fcc <___vfprintf_internal_r+0xfc8>
   27f88:	18c00404 	addi	r3,r3,16
   27f8c:	10800044 	addi	r2,r2,1
   27f90:	45000015 	stw	r20,0(r8)
   27f94:	47000115 	stw	fp,4(r8)
   27f98:	d8c02015 	stw	r3,128(sp)
   27f9c:	d8801f15 	stw	r2,124(sp)
   27fa0:	98bff60e 	bge	r19,r2,27f7c <__alt_mem_sdram_controller_0+0xc0027f7c>
   27fa4:	d9801e04 	addi	r6,sp,120
   27fa8:	b80b883a 	mov	r5,r23
   27fac:	8009883a 	mov	r4,r16
   27fb0:	002e7740 	call	2e774 <__sprint_r>
   27fb4:	103d151e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   27fb8:	8c7ffc04 	addi	r17,r17,-16
   27fbc:	d8c02017 	ldw	r3,128(sp)
   27fc0:	d8801f17 	ldw	r2,124(sp)
   27fc4:	da000404 	addi	r8,sp,16
   27fc8:	e47fef16 	blt	fp,r17,27f88 <__alt_mem_sdram_controller_0+0xc0027f88>
   27fcc:	9021883a 	mov	r16,r18
   27fd0:	a825883a 	mov	r18,r21
   27fd4:	b02b883a 	mov	r21,r22
   27fd8:	882d883a 	mov	r22,r17
   27fdc:	dc403017 	ldw	r17,192(sp)
   27fe0:	d9002b17 	ldw	r4,172(sp)
   27fe4:	1d87883a 	add	r3,r3,r22
   27fe8:	10800044 	addi	r2,r2,1
   27fec:	41000015 	stw	r4,0(r8)
   27ff0:	45800115 	stw	r22,4(r8)
   27ff4:	d8c02015 	stw	r3,128(sp)
   27ff8:	d8801f15 	stw	r2,124(sp)
   27ffc:	010001c4 	movi	r4,7
   28000:	20818e16 	blt	r4,r2,2863c <___vfprintf_internal_r+0x1638>
   28004:	42000204 	addi	r8,r8,8
   28008:	003e3106 	br	278d0 <__alt_mem_sdram_controller_0+0xc00278d0>
   2800c:	d9403317 	ldw	r5,204(sp)
   28010:	00800044 	movi	r2,1
   28014:	18c00044 	addi	r3,r3,1
   28018:	1141530e 	bge	r2,r5,28568 <___vfprintf_internal_r+0x1564>
   2801c:	dc401f17 	ldw	r17,124(sp)
   28020:	00800044 	movi	r2,1
   28024:	40800115 	stw	r2,4(r8)
   28028:	8c400044 	addi	r17,r17,1
   2802c:	44000015 	stw	r16,0(r8)
   28030:	d8c02015 	stw	r3,128(sp)
   28034:	dc401f15 	stw	r17,124(sp)
   28038:	008001c4 	movi	r2,7
   2803c:	14416b16 	blt	r2,r17,285ec <___vfprintf_internal_r+0x15e8>
   28040:	42000204 	addi	r8,r8,8
   28044:	d8803717 	ldw	r2,220(sp)
   28048:	d9003417 	ldw	r4,208(sp)
   2804c:	8c400044 	addi	r17,r17,1
   28050:	10c7883a 	add	r3,r2,r3
   28054:	40800115 	stw	r2,4(r8)
   28058:	41000015 	stw	r4,0(r8)
   2805c:	d8c02015 	stw	r3,128(sp)
   28060:	dc401f15 	stw	r17,124(sp)
   28064:	008001c4 	movi	r2,7
   28068:	14416916 	blt	r2,r17,28610 <___vfprintf_internal_r+0x160c>
   2806c:	45800204 	addi	r22,r8,8
   28070:	d9003617 	ldw	r4,216(sp)
   28074:	d9403817 	ldw	r5,224(sp)
   28078:	000d883a 	mov	r6,zero
   2807c:	000f883a 	mov	r7,zero
   28080:	d8c03c15 	stw	r3,240(sp)
   28084:	0031f700 	call	31f70 <__eqdf2>
   28088:	d8c03c17 	ldw	r3,240(sp)
   2808c:	1000bc26 	beq	r2,zero,28380 <___vfprintf_internal_r+0x137c>
   28090:	d9403317 	ldw	r5,204(sp)
   28094:	84000044 	addi	r16,r16,1
   28098:	8c400044 	addi	r17,r17,1
   2809c:	28bfffc4 	addi	r2,r5,-1
   280a0:	1887883a 	add	r3,r3,r2
   280a4:	b0800115 	stw	r2,4(r22)
   280a8:	b4000015 	stw	r16,0(r22)
   280ac:	d8c02015 	stw	r3,128(sp)
   280b0:	dc401f15 	stw	r17,124(sp)
   280b4:	008001c4 	movi	r2,7
   280b8:	14414316 	blt	r2,r17,285c8 <___vfprintf_internal_r+0x15c4>
   280bc:	b5800204 	addi	r22,r22,8
   280c0:	d9003a17 	ldw	r4,232(sp)
   280c4:	df0022c4 	addi	fp,sp,139
   280c8:	8c400044 	addi	r17,r17,1
   280cc:	20c7883a 	add	r3,r4,r3
   280d0:	b7000015 	stw	fp,0(r22)
   280d4:	b1000115 	stw	r4,4(r22)
   280d8:	d8c02015 	stw	r3,128(sp)
   280dc:	dc401f15 	stw	r17,124(sp)
   280e0:	008001c4 	movi	r2,7
   280e4:	14400e16 	blt	r2,r17,28120 <___vfprintf_internal_r+0x111c>
   280e8:	b2000204 	addi	r8,r22,8
   280ec:	003e3a06 	br	279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   280f0:	010000f4 	movhi	r4,3
   280f4:	2118db84 	addi	r4,r4,25454
   280f8:	d9002b15 	stw	r4,172(sp)
   280fc:	d9002b17 	ldw	r4,172(sp)
   28100:	1c07883a 	add	r3,r3,r16
   28104:	44000115 	stw	r16,4(r8)
   28108:	41000015 	stw	r4,0(r8)
   2810c:	10800044 	addi	r2,r2,1
   28110:	d8c02015 	stw	r3,128(sp)
   28114:	d8801f15 	stw	r2,124(sp)
   28118:	010001c4 	movi	r4,7
   2811c:	20be2d0e 	bge	r4,r2,279d4 <__alt_mem_sdram_controller_0+0xc00279d4>
   28120:	d9002c17 	ldw	r4,176(sp)
   28124:	d9801e04 	addi	r6,sp,120
   28128:	b80b883a 	mov	r5,r23
   2812c:	002e7740 	call	2e774 <__sprint_r>
   28130:	103cb61e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28134:	d8c02017 	ldw	r3,128(sp)
   28138:	da000404 	addi	r8,sp,16
   2813c:	003e2606 	br	279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   28140:	d9002c17 	ldw	r4,176(sp)
   28144:	d9801e04 	addi	r6,sp,120
   28148:	b80b883a 	mov	r5,r23
   2814c:	002e7740 	call	2e774 <__sprint_r>
   28150:	103e5d26 	beq	r2,zero,27ac8 <__alt_mem_sdram_controller_0+0xc0027ac8>
   28154:	003cad06 	br	2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28158:	d9002c17 	ldw	r4,176(sp)
   2815c:	d9801e04 	addi	r6,sp,120
   28160:	b80b883a 	mov	r5,r23
   28164:	002e7740 	call	2e774 <__sprint_r>
   28168:	103ca81e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   2816c:	d8c02017 	ldw	r3,128(sp)
   28170:	da000404 	addi	r8,sp,16
   28174:	003e0b06 	br	279a4 <__alt_mem_sdram_controller_0+0xc00279a4>
   28178:	d9002c17 	ldw	r4,176(sp)
   2817c:	d9801e04 	addi	r6,sp,120
   28180:	b80b883a 	mov	r5,r23
   28184:	002e7740 	call	2e774 <__sprint_r>
   28188:	103ca01e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   2818c:	d8c02017 	ldw	r3,128(sp)
   28190:	da000404 	addi	r8,sp,16
   28194:	003dbd06 	br	2788c <__alt_mem_sdram_controller_0+0xc002788c>
   28198:	d9002c17 	ldw	r4,176(sp)
   2819c:	d9801e04 	addi	r6,sp,120
   281a0:	b80b883a 	mov	r5,r23
   281a4:	002e7740 	call	2e774 <__sprint_r>
   281a8:	103c981e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   281ac:	d8c02017 	ldw	r3,128(sp)
   281b0:	da000404 	addi	r8,sp,16
   281b4:	003dc306 	br	278c4 <__alt_mem_sdram_controller_0+0xc00278c4>
   281b8:	d8802917 	ldw	r2,164(sp)
   281bc:	d8002785 	stb	zero,158(sp)
   281c0:	103f0616 	blt	r2,zero,27ddc <__alt_mem_sdram_controller_0+0xc0027ddc>
   281c4:	00ffdfc4 	movi	r3,-129
   281c8:	9d84b03a 	or	r2,r19,r22
   281cc:	90e4703a 	and	r18,r18,r3
   281d0:	103c6b26 	beq	r2,zero,27380 <__alt_mem_sdram_controller_0+0xc0027380>
   281d4:	0039883a 	mov	fp,zero
   281d8:	003e7406 	br	27bac <__alt_mem_sdram_controller_0+0xc0027bac>
   281dc:	9080040c 	andi	r2,r18,16
   281e0:	1001b326 	beq	r2,zero,288b0 <___vfprintf_internal_r+0x18ac>
   281e4:	d9002d17 	ldw	r4,180(sp)
   281e8:	d9402917 	ldw	r5,164(sp)
   281ec:	d8002785 	stb	zero,158(sp)
   281f0:	20800104 	addi	r2,r4,4
   281f4:	24c00017 	ldw	r19,0(r4)
   281f8:	002d883a 	mov	r22,zero
   281fc:	2801b516 	blt	r5,zero,288d4 <___vfprintf_internal_r+0x18d0>
   28200:	00ffdfc4 	movi	r3,-129
   28204:	d8802d15 	stw	r2,180(sp)
   28208:	90e4703a 	and	r18,r18,r3
   2820c:	983d2726 	beq	r19,zero,276ac <__alt_mem_sdram_controller_0+0xc00276ac>
   28210:	0039883a 	mov	fp,zero
   28214:	003d2a06 	br	276c0 <__alt_mem_sdram_controller_0+0xc00276c0>
   28218:	dc402617 	ldw	r17,152(sp)
   2821c:	0441d30e 	bge	zero,r17,2896c <___vfprintf_internal_r+0x1968>
   28220:	dc403217 	ldw	r17,200(sp)
   28224:	d8803317 	ldw	r2,204(sp)
   28228:	1440010e 	bge	r2,r17,28230 <___vfprintf_internal_r+0x122c>
   2822c:	1023883a 	mov	r17,r2
   28230:	04400a0e 	bge	zero,r17,2825c <___vfprintf_internal_r+0x1258>
   28234:	d8801f17 	ldw	r2,124(sp)
   28238:	1c47883a 	add	r3,r3,r17
   2823c:	44000015 	stw	r16,0(r8)
   28240:	10800044 	addi	r2,r2,1
   28244:	44400115 	stw	r17,4(r8)
   28248:	d8c02015 	stw	r3,128(sp)
   2824c:	d8801f15 	stw	r2,124(sp)
   28250:	010001c4 	movi	r4,7
   28254:	20826516 	blt	r4,r2,28bec <___vfprintf_internal_r+0x1be8>
   28258:	42000204 	addi	r8,r8,8
   2825c:	88026116 	blt	r17,zero,28be4 <___vfprintf_internal_r+0x1be0>
   28260:	d9003217 	ldw	r4,200(sp)
   28264:	2463c83a 	sub	r17,r4,r17
   28268:	04407b0e 	bge	zero,r17,28458 <___vfprintf_internal_r+0x1454>
   2826c:	05800404 	movi	r22,16
   28270:	d8801f17 	ldw	r2,124(sp)
   28274:	b4419d0e 	bge	r22,r17,288ec <___vfprintf_internal_r+0x18e8>
   28278:	010000f4 	movhi	r4,3
   2827c:	2118db84 	addi	r4,r4,25454
   28280:	d9002b15 	stw	r4,172(sp)
   28284:	070001c4 	movi	fp,7
   28288:	dcc02c17 	ldw	r19,176(sp)
   2828c:	00000306 	br	2829c <___vfprintf_internal_r+0x1298>
   28290:	42000204 	addi	r8,r8,8
   28294:	8c7ffc04 	addi	r17,r17,-16
   28298:	b441970e 	bge	r22,r17,288f8 <___vfprintf_internal_r+0x18f4>
   2829c:	18c00404 	addi	r3,r3,16
   282a0:	10800044 	addi	r2,r2,1
   282a4:	45000015 	stw	r20,0(r8)
   282a8:	45800115 	stw	r22,4(r8)
   282ac:	d8c02015 	stw	r3,128(sp)
   282b0:	d8801f15 	stw	r2,124(sp)
   282b4:	e0bff60e 	bge	fp,r2,28290 <__alt_mem_sdram_controller_0+0xc0028290>
   282b8:	d9801e04 	addi	r6,sp,120
   282bc:	b80b883a 	mov	r5,r23
   282c0:	9809883a 	mov	r4,r19
   282c4:	002e7740 	call	2e774 <__sprint_r>
   282c8:	103c501e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   282cc:	d8c02017 	ldw	r3,128(sp)
   282d0:	d8801f17 	ldw	r2,124(sp)
   282d4:	da000404 	addi	r8,sp,16
   282d8:	003fee06 	br	28294 <__alt_mem_sdram_controller_0+0xc0028294>
   282dc:	d9002c17 	ldw	r4,176(sp)
   282e0:	d9801e04 	addi	r6,sp,120
   282e4:	b80b883a 	mov	r5,r23
   282e8:	002e7740 	call	2e774 <__sprint_r>
   282ec:	103c471e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   282f0:	d8c02017 	ldw	r3,128(sp)
   282f4:	df002787 	ldb	fp,158(sp)
   282f8:	da000404 	addi	r8,sp,16
   282fc:	003d5606 	br	27858 <__alt_mem_sdram_controller_0+0xc0027858>
   28300:	9080040c 	andi	r2,r18,16
   28304:	10016126 	beq	r2,zero,2888c <___vfprintf_internal_r+0x1888>
   28308:	d8802d17 	ldw	r2,180(sp)
   2830c:	14c00017 	ldw	r19,0(r2)
   28310:	10800104 	addi	r2,r2,4
   28314:	d8802d15 	stw	r2,180(sp)
   28318:	982dd7fa 	srai	r22,r19,31
   2831c:	b005883a 	mov	r2,r22
   28320:	003c8206 	br	2752c <__alt_mem_sdram_controller_0+0xc002752c>
   28324:	9080040c 	andi	r2,r18,16
   28328:	10003526 	beq	r2,zero,28400 <___vfprintf_internal_r+0x13fc>
   2832c:	d9402d17 	ldw	r5,180(sp)
   28330:	d8c02917 	ldw	r3,164(sp)
   28334:	d8002785 	stb	zero,158(sp)
   28338:	28800104 	addi	r2,r5,4
   2833c:	2cc00017 	ldw	r19,0(r5)
   28340:	002d883a 	mov	r22,zero
   28344:	18003716 	blt	r3,zero,28424 <___vfprintf_internal_r+0x1420>
   28348:	00ffdfc4 	movi	r3,-129
   2834c:	d8802d15 	stw	r2,180(sp)
   28350:	90e4703a 	and	r18,r18,r3
   28354:	0039883a 	mov	fp,zero
   28358:	983df326 	beq	r19,zero,27b28 <__alt_mem_sdram_controller_0+0xc0027b28>
   2835c:	00800244 	movi	r2,9
   28360:	14fc7b36 	bltu	r2,r19,27550 <__alt_mem_sdram_controller_0+0xc0027550>
   28364:	d8c02817 	ldw	r3,160(sp)
   28368:	dc001dc4 	addi	r16,sp,119
   2836c:	9cc00c04 	addi	r19,r19,48
   28370:	1c07c83a 	sub	r3,r3,r16
   28374:	dcc01dc5 	stb	r19,119(sp)
   28378:	d8c02e15 	stw	r3,184(sp)
   2837c:	003ce806 	br	27720 <__alt_mem_sdram_controller_0+0xc0027720>
   28380:	d8803317 	ldw	r2,204(sp)
   28384:	143fffc4 	addi	r16,r2,-1
   28388:	043f4d0e 	bge	zero,r16,280c0 <__alt_mem_sdram_controller_0+0xc00280c0>
   2838c:	07000404 	movi	fp,16
   28390:	e400810e 	bge	fp,r16,28598 <___vfprintf_internal_r+0x1594>
   28394:	014000f4 	movhi	r5,3
   28398:	2958db84 	addi	r5,r5,25454
   2839c:	d9402b15 	stw	r5,172(sp)
   283a0:	01c001c4 	movi	r7,7
   283a4:	dcc02c17 	ldw	r19,176(sp)
   283a8:	00000306 	br	283b8 <___vfprintf_internal_r+0x13b4>
   283ac:	b5800204 	addi	r22,r22,8
   283b0:	843ffc04 	addi	r16,r16,-16
   283b4:	e4007b0e 	bge	fp,r16,285a4 <___vfprintf_internal_r+0x15a0>
   283b8:	18c00404 	addi	r3,r3,16
   283bc:	8c400044 	addi	r17,r17,1
   283c0:	b5000015 	stw	r20,0(r22)
   283c4:	b7000115 	stw	fp,4(r22)
   283c8:	d8c02015 	stw	r3,128(sp)
   283cc:	dc401f15 	stw	r17,124(sp)
   283d0:	3c7ff60e 	bge	r7,r17,283ac <__alt_mem_sdram_controller_0+0xc00283ac>
   283d4:	d9801e04 	addi	r6,sp,120
   283d8:	b80b883a 	mov	r5,r23
   283dc:	9809883a 	mov	r4,r19
   283e0:	d9c03c15 	stw	r7,240(sp)
   283e4:	002e7740 	call	2e774 <__sprint_r>
   283e8:	d9c03c17 	ldw	r7,240(sp)
   283ec:	103c071e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   283f0:	d8c02017 	ldw	r3,128(sp)
   283f4:	dc401f17 	ldw	r17,124(sp)
   283f8:	dd800404 	addi	r22,sp,16
   283fc:	003fec06 	br	283b0 <__alt_mem_sdram_controller_0+0xc00283b0>
   28400:	9080100c 	andi	r2,r18,64
   28404:	d8002785 	stb	zero,158(sp)
   28408:	10010e26 	beq	r2,zero,28844 <___vfprintf_internal_r+0x1840>
   2840c:	d9002d17 	ldw	r4,180(sp)
   28410:	d9402917 	ldw	r5,164(sp)
   28414:	002d883a 	mov	r22,zero
   28418:	20800104 	addi	r2,r4,4
   2841c:	24c0000b 	ldhu	r19,0(r4)
   28420:	283fc90e 	bge	r5,zero,28348 <__alt_mem_sdram_controller_0+0xc0028348>
   28424:	d8802d15 	stw	r2,180(sp)
   28428:	0039883a 	mov	fp,zero
   2842c:	9d84b03a 	or	r2,r19,r22
   28430:	103c461e 	bne	r2,zero,2754c <__alt_mem_sdram_controller_0+0xc002754c>
   28434:	00800044 	movi	r2,1
   28438:	003e6c06 	br	27dec <__alt_mem_sdram_controller_0+0xc0027dec>
   2843c:	d9002c17 	ldw	r4,176(sp)
   28440:	d9801e04 	addi	r6,sp,120
   28444:	b80b883a 	mov	r5,r23
   28448:	002e7740 	call	2e774 <__sprint_r>
   2844c:	103bef1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28450:	d8c02017 	ldw	r3,128(sp)
   28454:	da000404 	addi	r8,sp,16
   28458:	d9003217 	ldw	r4,200(sp)
   2845c:	d8802617 	ldw	r2,152(sp)
   28460:	d9403317 	ldw	r5,204(sp)
   28464:	8123883a 	add	r17,r16,r4
   28468:	11400216 	blt	r2,r5,28474 <___vfprintf_internal_r+0x1470>
   2846c:	9100004c 	andi	r4,r18,1
   28470:	20000d26 	beq	r4,zero,284a8 <___vfprintf_internal_r+0x14a4>
   28474:	d9003717 	ldw	r4,220(sp)
   28478:	d9403417 	ldw	r5,208(sp)
   2847c:	1907883a 	add	r3,r3,r4
   28480:	d9001f17 	ldw	r4,124(sp)
   28484:	41400015 	stw	r5,0(r8)
   28488:	d9403717 	ldw	r5,220(sp)
   2848c:	21000044 	addi	r4,r4,1
   28490:	d8c02015 	stw	r3,128(sp)
   28494:	41400115 	stw	r5,4(r8)
   28498:	d9001f15 	stw	r4,124(sp)
   2849c:	014001c4 	movi	r5,7
   284a0:	2901e816 	blt	r5,r4,28c44 <___vfprintf_internal_r+0x1c40>
   284a4:	42000204 	addi	r8,r8,8
   284a8:	d9003317 	ldw	r4,204(sp)
   284ac:	8121883a 	add	r16,r16,r4
   284b0:	2085c83a 	sub	r2,r4,r2
   284b4:	8461c83a 	sub	r16,r16,r17
   284b8:	1400010e 	bge	r2,r16,284c0 <___vfprintf_internal_r+0x14bc>
   284bc:	1021883a 	mov	r16,r2
   284c0:	04000a0e 	bge	zero,r16,284ec <___vfprintf_internal_r+0x14e8>
   284c4:	d9001f17 	ldw	r4,124(sp)
   284c8:	1c07883a 	add	r3,r3,r16
   284cc:	44400015 	stw	r17,0(r8)
   284d0:	21000044 	addi	r4,r4,1
   284d4:	44000115 	stw	r16,4(r8)
   284d8:	d8c02015 	stw	r3,128(sp)
   284dc:	d9001f15 	stw	r4,124(sp)
   284e0:	014001c4 	movi	r5,7
   284e4:	2901fb16 	blt	r5,r4,28cd4 <___vfprintf_internal_r+0x1cd0>
   284e8:	42000204 	addi	r8,r8,8
   284ec:	8001f716 	blt	r16,zero,28ccc <___vfprintf_internal_r+0x1cc8>
   284f0:	1421c83a 	sub	r16,r2,r16
   284f4:	043d380e 	bge	zero,r16,279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   284f8:	04400404 	movi	r17,16
   284fc:	d8801f17 	ldw	r2,124(sp)
   28500:	8c3efb0e 	bge	r17,r16,280f0 <__alt_mem_sdram_controller_0+0xc00280f0>
   28504:	014000f4 	movhi	r5,3
   28508:	2958db84 	addi	r5,r5,25454
   2850c:	d9402b15 	stw	r5,172(sp)
   28510:	058001c4 	movi	r22,7
   28514:	dcc02c17 	ldw	r19,176(sp)
   28518:	00000306 	br	28528 <___vfprintf_internal_r+0x1524>
   2851c:	42000204 	addi	r8,r8,8
   28520:	843ffc04 	addi	r16,r16,-16
   28524:	8c3ef50e 	bge	r17,r16,280fc <__alt_mem_sdram_controller_0+0xc00280fc>
   28528:	18c00404 	addi	r3,r3,16
   2852c:	10800044 	addi	r2,r2,1
   28530:	45000015 	stw	r20,0(r8)
   28534:	44400115 	stw	r17,4(r8)
   28538:	d8c02015 	stw	r3,128(sp)
   2853c:	d8801f15 	stw	r2,124(sp)
   28540:	b0bff60e 	bge	r22,r2,2851c <__alt_mem_sdram_controller_0+0xc002851c>
   28544:	d9801e04 	addi	r6,sp,120
   28548:	b80b883a 	mov	r5,r23
   2854c:	9809883a 	mov	r4,r19
   28550:	002e7740 	call	2e774 <__sprint_r>
   28554:	103bad1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28558:	d8c02017 	ldw	r3,128(sp)
   2855c:	d8801f17 	ldw	r2,124(sp)
   28560:	da000404 	addi	r8,sp,16
   28564:	003fee06 	br	28520 <__alt_mem_sdram_controller_0+0xc0028520>
   28568:	9088703a 	and	r4,r18,r2
   2856c:	203eab1e 	bne	r4,zero,2801c <__alt_mem_sdram_controller_0+0xc002801c>
   28570:	dc401f17 	ldw	r17,124(sp)
   28574:	40800115 	stw	r2,4(r8)
   28578:	44000015 	stw	r16,0(r8)
   2857c:	8c400044 	addi	r17,r17,1
   28580:	d8c02015 	stw	r3,128(sp)
   28584:	dc401f15 	stw	r17,124(sp)
   28588:	008001c4 	movi	r2,7
   2858c:	14400e16 	blt	r2,r17,285c8 <___vfprintf_internal_r+0x15c4>
   28590:	45800204 	addi	r22,r8,8
   28594:	003eca06 	br	280c0 <__alt_mem_sdram_controller_0+0xc00280c0>
   28598:	010000f4 	movhi	r4,3
   2859c:	2118db84 	addi	r4,r4,25454
   285a0:	d9002b15 	stw	r4,172(sp)
   285a4:	d8802b17 	ldw	r2,172(sp)
   285a8:	1c07883a 	add	r3,r3,r16
   285ac:	8c400044 	addi	r17,r17,1
   285b0:	b0800015 	stw	r2,0(r22)
   285b4:	b4000115 	stw	r16,4(r22)
   285b8:	d8c02015 	stw	r3,128(sp)
   285bc:	dc401f15 	stw	r17,124(sp)
   285c0:	008001c4 	movi	r2,7
   285c4:	147ebd0e 	bge	r2,r17,280bc <__alt_mem_sdram_controller_0+0xc00280bc>
   285c8:	d9002c17 	ldw	r4,176(sp)
   285cc:	d9801e04 	addi	r6,sp,120
   285d0:	b80b883a 	mov	r5,r23
   285d4:	002e7740 	call	2e774 <__sprint_r>
   285d8:	103b8c1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   285dc:	d8c02017 	ldw	r3,128(sp)
   285e0:	dc401f17 	ldw	r17,124(sp)
   285e4:	dd800404 	addi	r22,sp,16
   285e8:	003eb506 	br	280c0 <__alt_mem_sdram_controller_0+0xc00280c0>
   285ec:	d9002c17 	ldw	r4,176(sp)
   285f0:	d9801e04 	addi	r6,sp,120
   285f4:	b80b883a 	mov	r5,r23
   285f8:	002e7740 	call	2e774 <__sprint_r>
   285fc:	103b831e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28600:	d8c02017 	ldw	r3,128(sp)
   28604:	dc401f17 	ldw	r17,124(sp)
   28608:	da000404 	addi	r8,sp,16
   2860c:	003e8d06 	br	28044 <__alt_mem_sdram_controller_0+0xc0028044>
   28610:	d9002c17 	ldw	r4,176(sp)
   28614:	d9801e04 	addi	r6,sp,120
   28618:	b80b883a 	mov	r5,r23
   2861c:	002e7740 	call	2e774 <__sprint_r>
   28620:	103b7a1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28624:	d8c02017 	ldw	r3,128(sp)
   28628:	dc401f17 	ldw	r17,124(sp)
   2862c:	dd800404 	addi	r22,sp,16
   28630:	003e8f06 	br	28070 <__alt_mem_sdram_controller_0+0xc0028070>
   28634:	0027883a 	mov	r19,zero
   28638:	003f4a06 	br	28364 <__alt_mem_sdram_controller_0+0xc0028364>
   2863c:	d9002c17 	ldw	r4,176(sp)
   28640:	d9801e04 	addi	r6,sp,120
   28644:	b80b883a 	mov	r5,r23
   28648:	002e7740 	call	2e774 <__sprint_r>
   2864c:	103b6f1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28650:	d8c02017 	ldw	r3,128(sp)
   28654:	da000404 	addi	r8,sp,16
   28658:	003c9d06 	br	278d0 <__alt_mem_sdram_controller_0+0xc00278d0>
   2865c:	04e7c83a 	sub	r19,zero,r19
   28660:	9804c03a 	cmpne	r2,r19,zero
   28664:	05adc83a 	sub	r22,zero,r22
   28668:	b0adc83a 	sub	r22,r22,r2
   2866c:	d8802917 	ldw	r2,164(sp)
   28670:	07000b44 	movi	fp,45
   28674:	df002785 	stb	fp,158(sp)
   28678:	10017b16 	blt	r2,zero,28c68 <___vfprintf_internal_r+0x1c64>
   2867c:	00bfdfc4 	movi	r2,-129
   28680:	90a4703a 	and	r18,r18,r2
   28684:	003bb106 	br	2754c <__alt_mem_sdram_controller_0+0xc002754c>
   28688:	d9003617 	ldw	r4,216(sp)
   2868c:	d9403817 	ldw	r5,224(sp)
   28690:	da003d15 	stw	r8,244(sp)
   28694:	002ce180 	call	2ce18 <__fpclassifyd>
   28698:	da003d17 	ldw	r8,244(sp)
   2869c:	1000f026 	beq	r2,zero,28a60 <___vfprintf_internal_r+0x1a5c>
   286a0:	d9002917 	ldw	r4,164(sp)
   286a4:	05bff7c4 	movi	r22,-33
   286a8:	00bfffc4 	movi	r2,-1
   286ac:	8dac703a 	and	r22,r17,r22
   286b0:	20820026 	beq	r4,r2,28eb4 <___vfprintf_internal_r+0x1eb0>
   286b4:	008011c4 	movi	r2,71
   286b8:	b081f726 	beq	r22,r2,28e98 <___vfprintf_internal_r+0x1e94>
   286bc:	d9003817 	ldw	r4,224(sp)
   286c0:	90c04014 	ori	r3,r18,256
   286c4:	d8c02b15 	stw	r3,172(sp)
   286c8:	20021516 	blt	r4,zero,28f20 <___vfprintf_internal_r+0x1f1c>
   286cc:	dcc03817 	ldw	r19,224(sp)
   286d0:	d8002a05 	stb	zero,168(sp)
   286d4:	00801984 	movi	r2,102
   286d8:	8881f926 	beq	r17,r2,28ec0 <___vfprintf_internal_r+0x1ebc>
   286dc:	00801184 	movi	r2,70
   286e0:	88821c26 	beq	r17,r2,28f54 <___vfprintf_internal_r+0x1f50>
   286e4:	00801144 	movi	r2,69
   286e8:	b081ef26 	beq	r22,r2,28ea8 <___vfprintf_internal_r+0x1ea4>
   286ec:	d8c02917 	ldw	r3,164(sp)
   286f0:	d8802104 	addi	r2,sp,132
   286f4:	d8800315 	stw	r2,12(sp)
   286f8:	d9403617 	ldw	r5,216(sp)
   286fc:	d8802504 	addi	r2,sp,148
   28700:	d9002c17 	ldw	r4,176(sp)
   28704:	d8800215 	stw	r2,8(sp)
   28708:	d8802604 	addi	r2,sp,152
   2870c:	d8c00015 	stw	r3,0(sp)
   28710:	d8800115 	stw	r2,4(sp)
   28714:	01c00084 	movi	r7,2
   28718:	980d883a 	mov	r6,r19
   2871c:	d8c03c15 	stw	r3,240(sp)
   28720:	da003d15 	stw	r8,244(sp)
   28724:	00296f40 	call	296f4 <_dtoa_r>
   28728:	1021883a 	mov	r16,r2
   2872c:	008019c4 	movi	r2,103
   28730:	d8c03c17 	ldw	r3,240(sp)
   28734:	da003d17 	ldw	r8,244(sp)
   28738:	88817126 	beq	r17,r2,28d00 <___vfprintf_internal_r+0x1cfc>
   2873c:	008011c4 	movi	r2,71
   28740:	88829226 	beq	r17,r2,2918c <___vfprintf_internal_r+0x2188>
   28744:	80f9883a 	add	fp,r16,r3
   28748:	d9003617 	ldw	r4,216(sp)
   2874c:	000d883a 	mov	r6,zero
   28750:	000f883a 	mov	r7,zero
   28754:	980b883a 	mov	r5,r19
   28758:	da003d15 	stw	r8,244(sp)
   2875c:	0031f700 	call	31f70 <__eqdf2>
   28760:	da003d17 	ldw	r8,244(sp)
   28764:	10018d26 	beq	r2,zero,28d9c <___vfprintf_internal_r+0x1d98>
   28768:	d8802117 	ldw	r2,132(sp)
   2876c:	1700062e 	bgeu	r2,fp,28788 <___vfprintf_internal_r+0x1784>
   28770:	01000c04 	movi	r4,48
   28774:	10c00044 	addi	r3,r2,1
   28778:	d8c02115 	stw	r3,132(sp)
   2877c:	11000005 	stb	r4,0(r2)
   28780:	d8802117 	ldw	r2,132(sp)
   28784:	173ffb36 	bltu	r2,fp,28774 <__alt_mem_sdram_controller_0+0xc0028774>
   28788:	1405c83a 	sub	r2,r2,r16
   2878c:	d8803315 	stw	r2,204(sp)
   28790:	008011c4 	movi	r2,71
   28794:	b0817626 	beq	r22,r2,28d70 <___vfprintf_internal_r+0x1d6c>
   28798:	00801944 	movi	r2,101
   2879c:	1442810e 	bge	r2,r17,291a4 <___vfprintf_internal_r+0x21a0>
   287a0:	d8c02617 	ldw	r3,152(sp)
   287a4:	00801984 	movi	r2,102
   287a8:	d8c03215 	stw	r3,200(sp)
   287ac:	8881fe26 	beq	r17,r2,28fa8 <___vfprintf_internal_r+0x1fa4>
   287b0:	d8c03217 	ldw	r3,200(sp)
   287b4:	d9003317 	ldw	r4,204(sp)
   287b8:	1901dd16 	blt	r3,r4,28f30 <___vfprintf_internal_r+0x1f2c>
   287bc:	9480004c 	andi	r18,r18,1
   287c0:	90022b1e 	bne	r18,zero,29070 <___vfprintf_internal_r+0x206c>
   287c4:	1805883a 	mov	r2,r3
   287c8:	18028016 	blt	r3,zero,291cc <___vfprintf_internal_r+0x21c8>
   287cc:	d8c03217 	ldw	r3,200(sp)
   287d0:	044019c4 	movi	r17,103
   287d4:	d8c02e15 	stw	r3,184(sp)
   287d8:	df002a07 	ldb	fp,168(sp)
   287dc:	e001531e 	bne	fp,zero,28d2c <___vfprintf_internal_r+0x1d28>
   287e0:	df002783 	ldbu	fp,158(sp)
   287e4:	d8802a15 	stw	r2,168(sp)
   287e8:	dc802b17 	ldw	r18,172(sp)
   287ec:	d8002915 	stw	zero,164(sp)
   287f0:	003bd106 	br	27738 <__alt_mem_sdram_controller_0+0xc0027738>
   287f4:	d8802d17 	ldw	r2,180(sp)
   287f8:	d8c02d17 	ldw	r3,180(sp)
   287fc:	d9002d17 	ldw	r4,180(sp)
   28800:	10800017 	ldw	r2,0(r2)
   28804:	18c00117 	ldw	r3,4(r3)
   28808:	21000204 	addi	r4,r4,8
   2880c:	d8803615 	stw	r2,216(sp)
   28810:	d8c03815 	stw	r3,224(sp)
   28814:	d9002d15 	stw	r4,180(sp)
   28818:	003b7506 	br	275f0 <__alt_mem_sdram_controller_0+0xc00275f0>
   2881c:	ac400007 	ldb	r17,0(r21)
   28820:	003a5906 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   28824:	9080100c 	andi	r2,r18,64
   28828:	1000a826 	beq	r2,zero,28acc <___vfprintf_internal_r+0x1ac8>
   2882c:	d9002d17 	ldw	r4,180(sp)
   28830:	002d883a 	mov	r22,zero
   28834:	24c0000b 	ldhu	r19,0(r4)
   28838:	21000104 	addi	r4,r4,4
   2883c:	d9002d15 	stw	r4,180(sp)
   28840:	003ccb06 	br	27b70 <__alt_mem_sdram_controller_0+0xc0027b70>
   28844:	d8c02d17 	ldw	r3,180(sp)
   28848:	d9002917 	ldw	r4,164(sp)
   2884c:	002d883a 	mov	r22,zero
   28850:	18800104 	addi	r2,r3,4
   28854:	1cc00017 	ldw	r19,0(r3)
   28858:	203ebb0e 	bge	r4,zero,28348 <__alt_mem_sdram_controller_0+0xc0028348>
   2885c:	003ef106 	br	28424 <__alt_mem_sdram_controller_0+0xc0028424>
   28860:	9080040c 	andi	r2,r18,16
   28864:	1000921e 	bne	r2,zero,28ab0 <___vfprintf_internal_r+0x1aac>
   28868:	9480100c 	andi	r18,r18,64
   2886c:	90013926 	beq	r18,zero,28d54 <___vfprintf_internal_r+0x1d50>
   28870:	d9002d17 	ldw	r4,180(sp)
   28874:	d9402f17 	ldw	r5,188(sp)
   28878:	20800017 	ldw	r2,0(r4)
   2887c:	21000104 	addi	r4,r4,4
   28880:	d9002d15 	stw	r4,180(sp)
   28884:	1140000d 	sth	r5,0(r2)
   28888:	003a1606 	br	270e4 <__alt_mem_sdram_controller_0+0xc00270e4>
   2888c:	9080100c 	andi	r2,r18,64
   28890:	10008026 	beq	r2,zero,28a94 <___vfprintf_internal_r+0x1a90>
   28894:	d8c02d17 	ldw	r3,180(sp)
   28898:	1cc0000f 	ldh	r19,0(r3)
   2889c:	18c00104 	addi	r3,r3,4
   288a0:	d8c02d15 	stw	r3,180(sp)
   288a4:	982dd7fa 	srai	r22,r19,31
   288a8:	b005883a 	mov	r2,r22
   288ac:	003b1f06 	br	2752c <__alt_mem_sdram_controller_0+0xc002752c>
   288b0:	9080100c 	andi	r2,r18,64
   288b4:	d8002785 	stb	zero,158(sp)
   288b8:	10008a1e 	bne	r2,zero,28ae4 <___vfprintf_internal_r+0x1ae0>
   288bc:	d9402d17 	ldw	r5,180(sp)
   288c0:	d8c02917 	ldw	r3,164(sp)
   288c4:	002d883a 	mov	r22,zero
   288c8:	28800104 	addi	r2,r5,4
   288cc:	2cc00017 	ldw	r19,0(r5)
   288d0:	183e4b0e 	bge	r3,zero,28200 <__alt_mem_sdram_controller_0+0xc0028200>
   288d4:	9d86b03a 	or	r3,r19,r22
   288d8:	d8802d15 	stw	r2,180(sp)
   288dc:	183e4c1e 	bne	r3,zero,28210 <__alt_mem_sdram_controller_0+0xc0028210>
   288e0:	0039883a 	mov	fp,zero
   288e4:	0005883a 	mov	r2,zero
   288e8:	003d4006 	br	27dec <__alt_mem_sdram_controller_0+0xc0027dec>
   288ec:	014000f4 	movhi	r5,3
   288f0:	2958db84 	addi	r5,r5,25454
   288f4:	d9402b15 	stw	r5,172(sp)
   288f8:	d9402b17 	ldw	r5,172(sp)
   288fc:	1c47883a 	add	r3,r3,r17
   28900:	10800044 	addi	r2,r2,1
   28904:	41400015 	stw	r5,0(r8)
   28908:	44400115 	stw	r17,4(r8)
   2890c:	d8c02015 	stw	r3,128(sp)
   28910:	d8801f15 	stw	r2,124(sp)
   28914:	010001c4 	movi	r4,7
   28918:	20bec816 	blt	r4,r2,2843c <__alt_mem_sdram_controller_0+0xc002843c>
   2891c:	42000204 	addi	r8,r8,8
   28920:	003ecd06 	br	28458 <__alt_mem_sdram_controller_0+0xc0028458>
   28924:	d9002917 	ldw	r4,164(sp)
   28928:	d8002785 	stb	zero,158(sp)
   2892c:	203d2d16 	blt	r4,zero,27de4 <__alt_mem_sdram_controller_0+0xc0027de4>
   28930:	00bfdfc4 	movi	r2,-129
   28934:	90a4703a 	and	r18,r18,r2
   28938:	003a9106 	br	27380 <__alt_mem_sdram_controller_0+0xc0027380>
   2893c:	010000f4 	movhi	r4,3
   28940:	2118db84 	addi	r4,r4,25454
   28944:	d9002b15 	stw	r4,172(sp)
   28948:	003c0c06 	br	2797c <__alt_mem_sdram_controller_0+0xc002797c>
   2894c:	d9002c17 	ldw	r4,176(sp)
   28950:	d9801e04 	addi	r6,sp,120
   28954:	b80b883a 	mov	r5,r23
   28958:	002e7740 	call	2e774 <__sprint_r>
   2895c:	103aab1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28960:	d8c02017 	ldw	r3,128(sp)
   28964:	da000404 	addi	r8,sp,16
   28968:	003d4106 	br	27e70 <__alt_mem_sdram_controller_0+0xc0027e70>
   2896c:	d8801f17 	ldw	r2,124(sp)
   28970:	014000f4 	movhi	r5,3
   28974:	01000044 	movi	r4,1
   28978:	18c00044 	addi	r3,r3,1
   2897c:	10800044 	addi	r2,r2,1
   28980:	2958d304 	addi	r5,r5,25420
   28984:	41000115 	stw	r4,4(r8)
   28988:	41400015 	stw	r5,0(r8)
   2898c:	d8c02015 	stw	r3,128(sp)
   28990:	d8801f15 	stw	r2,124(sp)
   28994:	010001c4 	movi	r4,7
   28998:	20805c16 	blt	r4,r2,28b0c <___vfprintf_internal_r+0x1b08>
   2899c:	42000204 	addi	r8,r8,8
   289a0:	8800041e 	bne	r17,zero,289b4 <___vfprintf_internal_r+0x19b0>
   289a4:	d8803317 	ldw	r2,204(sp)
   289a8:	1000021e 	bne	r2,zero,289b4 <___vfprintf_internal_r+0x19b0>
   289ac:	9080004c 	andi	r2,r18,1
   289b0:	103c0926 	beq	r2,zero,279d8 <__alt_mem_sdram_controller_0+0xc00279d8>
   289b4:	d9003717 	ldw	r4,220(sp)
   289b8:	d8801f17 	ldw	r2,124(sp)
   289bc:	d9403417 	ldw	r5,208(sp)
   289c0:	20c7883a 	add	r3,r4,r3
   289c4:	10800044 	addi	r2,r2,1
   289c8:	41000115 	stw	r4,4(r8)
   289cc:	41400015 	stw	r5,0(r8)
   289d0:	d8c02015 	stw	r3,128(sp)
   289d4:	d8801f15 	stw	r2,124(sp)
   289d8:	010001c4 	movi	r4,7
   289dc:	20812116 	blt	r4,r2,28e64 <___vfprintf_internal_r+0x1e60>
   289e0:	42000204 	addi	r8,r8,8
   289e4:	0463c83a 	sub	r17,zero,r17
   289e8:	0440730e 	bge	zero,r17,28bb8 <___vfprintf_internal_r+0x1bb4>
   289ec:	05800404 	movi	r22,16
   289f0:	b440860e 	bge	r22,r17,28c0c <___vfprintf_internal_r+0x1c08>
   289f4:	014000f4 	movhi	r5,3
   289f8:	2958db84 	addi	r5,r5,25454
   289fc:	d9402b15 	stw	r5,172(sp)
   28a00:	070001c4 	movi	fp,7
   28a04:	dcc02c17 	ldw	r19,176(sp)
   28a08:	00000306 	br	28a18 <___vfprintf_internal_r+0x1a14>
   28a0c:	42000204 	addi	r8,r8,8
   28a10:	8c7ffc04 	addi	r17,r17,-16
   28a14:	b440800e 	bge	r22,r17,28c18 <___vfprintf_internal_r+0x1c14>
   28a18:	18c00404 	addi	r3,r3,16
   28a1c:	10800044 	addi	r2,r2,1
   28a20:	45000015 	stw	r20,0(r8)
   28a24:	45800115 	stw	r22,4(r8)
   28a28:	d8c02015 	stw	r3,128(sp)
   28a2c:	d8801f15 	stw	r2,124(sp)
   28a30:	e0bff60e 	bge	fp,r2,28a0c <__alt_mem_sdram_controller_0+0xc0028a0c>
   28a34:	d9801e04 	addi	r6,sp,120
   28a38:	b80b883a 	mov	r5,r23
   28a3c:	9809883a 	mov	r4,r19
   28a40:	002e7740 	call	2e774 <__sprint_r>
   28a44:	103a711e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28a48:	d8c02017 	ldw	r3,128(sp)
   28a4c:	d8801f17 	ldw	r2,124(sp)
   28a50:	da000404 	addi	r8,sp,16
   28a54:	003fee06 	br	28a10 <__alt_mem_sdram_controller_0+0xc0028a10>
   28a58:	00bfffc4 	movi	r2,-1
   28a5c:	003a6f06 	br	2741c <__alt_mem_sdram_controller_0+0xc002741c>
   28a60:	008011c4 	movi	r2,71
   28a64:	1440b816 	blt	r2,r17,28d48 <___vfprintf_internal_r+0x1d44>
   28a68:	040000f4 	movhi	r16,3
   28a6c:	8418c504 	addi	r16,r16,25364
   28a70:	00c000c4 	movi	r3,3
   28a74:	00bfdfc4 	movi	r2,-129
   28a78:	d8c02a15 	stw	r3,168(sp)
   28a7c:	90a4703a 	and	r18,r18,r2
   28a80:	df002783 	ldbu	fp,158(sp)
   28a84:	d8c02e15 	stw	r3,184(sp)
   28a88:	d8002915 	stw	zero,164(sp)
   28a8c:	d8003215 	stw	zero,200(sp)
   28a90:	003b2906 	br	27738 <__alt_mem_sdram_controller_0+0xc0027738>
   28a94:	d9002d17 	ldw	r4,180(sp)
   28a98:	24c00017 	ldw	r19,0(r4)
   28a9c:	21000104 	addi	r4,r4,4
   28aa0:	d9002d15 	stw	r4,180(sp)
   28aa4:	982dd7fa 	srai	r22,r19,31
   28aa8:	b005883a 	mov	r2,r22
   28aac:	003a9f06 	br	2752c <__alt_mem_sdram_controller_0+0xc002752c>
   28ab0:	d9402d17 	ldw	r5,180(sp)
   28ab4:	d8c02f17 	ldw	r3,188(sp)
   28ab8:	28800017 	ldw	r2,0(r5)
   28abc:	29400104 	addi	r5,r5,4
   28ac0:	d9402d15 	stw	r5,180(sp)
   28ac4:	10c00015 	stw	r3,0(r2)
   28ac8:	00398606 	br	270e4 <__alt_mem_sdram_controller_0+0xc00270e4>
   28acc:	d9402d17 	ldw	r5,180(sp)
   28ad0:	002d883a 	mov	r22,zero
   28ad4:	2cc00017 	ldw	r19,0(r5)
   28ad8:	29400104 	addi	r5,r5,4
   28adc:	d9402d15 	stw	r5,180(sp)
   28ae0:	003c2306 	br	27b70 <__alt_mem_sdram_controller_0+0xc0027b70>
   28ae4:	d8c02d17 	ldw	r3,180(sp)
   28ae8:	d9002917 	ldw	r4,164(sp)
   28aec:	002d883a 	mov	r22,zero
   28af0:	18800104 	addi	r2,r3,4
   28af4:	1cc0000b 	ldhu	r19,0(r3)
   28af8:	203dc10e 	bge	r4,zero,28200 <__alt_mem_sdram_controller_0+0xc0028200>
   28afc:	003f7506 	br	288d4 <__alt_mem_sdram_controller_0+0xc00288d4>
   28b00:	040000f4 	movhi	r16,3
   28b04:	8418c304 	addi	r16,r16,25356
   28b08:	003acc06 	br	2763c <__alt_mem_sdram_controller_0+0xc002763c>
   28b0c:	d9002c17 	ldw	r4,176(sp)
   28b10:	d9801e04 	addi	r6,sp,120
   28b14:	b80b883a 	mov	r5,r23
   28b18:	002e7740 	call	2e774 <__sprint_r>
   28b1c:	103a3b1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28b20:	dc402617 	ldw	r17,152(sp)
   28b24:	d8c02017 	ldw	r3,128(sp)
   28b28:	da000404 	addi	r8,sp,16
   28b2c:	003f9c06 	br	289a0 <__alt_mem_sdram_controller_0+0xc00289a0>
   28b30:	ac400043 	ldbu	r17,1(r21)
   28b34:	94800814 	ori	r18,r18,32
   28b38:	ad400044 	addi	r21,r21,1
   28b3c:	8c403fcc 	andi	r17,r17,255
   28b40:	8c40201c 	xori	r17,r17,128
   28b44:	8c7fe004 	addi	r17,r17,-128
   28b48:	00398f06 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   28b4c:	d8c02d15 	stw	r3,180(sp)
   28b50:	0039883a 	mov	fp,zero
   28b54:	003e3506 	br	2842c <__alt_mem_sdram_controller_0+0xc002842c>
   28b58:	d9002c17 	ldw	r4,176(sp)
   28b5c:	d9801e04 	addi	r6,sp,120
   28b60:	b80b883a 	mov	r5,r23
   28b64:	002e7740 	call	2e774 <__sprint_r>
   28b68:	103a281e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28b6c:	d8c02017 	ldw	r3,128(sp)
   28b70:	da000404 	addi	r8,sp,16
   28b74:	003cd006 	br	27eb8 <__alt_mem_sdram_controller_0+0xc0027eb8>
   28b78:	8009883a 	mov	r4,r16
   28b7c:	da003d15 	stw	r8,244(sp)
   28b80:	0024d2c0 	call	24d2c <strlen>
   28b84:	d8802e15 	stw	r2,184(sp)
   28b88:	da003d17 	ldw	r8,244(sp)
   28b8c:	103c340e 	bge	r2,zero,27c60 <__alt_mem_sdram_controller_0+0xc0027c60>
   28b90:	0005883a 	mov	r2,zero
   28b94:	003c3206 	br	27c60 <__alt_mem_sdram_controller_0+0xc0027c60>
   28b98:	d9002c17 	ldw	r4,176(sp)
   28b9c:	d9801e04 	addi	r6,sp,120
   28ba0:	b80b883a 	mov	r5,r23
   28ba4:	002e7740 	call	2e774 <__sprint_r>
   28ba8:	103a181e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28bac:	d8c02017 	ldw	r3,128(sp)
   28bb0:	d8801f17 	ldw	r2,124(sp)
   28bb4:	da000404 	addi	r8,sp,16
   28bb8:	d9403317 	ldw	r5,204(sp)
   28bbc:	10800044 	addi	r2,r2,1
   28bc0:	44000015 	stw	r16,0(r8)
   28bc4:	28c7883a 	add	r3,r5,r3
   28bc8:	003b7d06 	br	279c0 <__alt_mem_sdram_controller_0+0xc00279c0>
   28bcc:	010000f4 	movhi	r4,3
   28bd0:	2118df84 	addi	r4,r4,25470
   28bd4:	d9003515 	stw	r4,212(sp)
   28bd8:	003b1406 	br	2782c <__alt_mem_sdram_controller_0+0xc002782c>
   28bdc:	013fffc4 	movi	r4,-1
   28be0:	003a3506 	br	274b8 <__alt_mem_sdram_controller_0+0xc00274b8>
   28be4:	0023883a 	mov	r17,zero
   28be8:	003d9d06 	br	28260 <__alt_mem_sdram_controller_0+0xc0028260>
   28bec:	d9002c17 	ldw	r4,176(sp)
   28bf0:	d9801e04 	addi	r6,sp,120
   28bf4:	b80b883a 	mov	r5,r23
   28bf8:	002e7740 	call	2e774 <__sprint_r>
   28bfc:	103a031e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28c00:	d8c02017 	ldw	r3,128(sp)
   28c04:	da000404 	addi	r8,sp,16
   28c08:	003d9406 	br	2825c <__alt_mem_sdram_controller_0+0xc002825c>
   28c0c:	010000f4 	movhi	r4,3
   28c10:	2118db84 	addi	r4,r4,25454
   28c14:	d9002b15 	stw	r4,172(sp)
   28c18:	d9002b17 	ldw	r4,172(sp)
   28c1c:	1c47883a 	add	r3,r3,r17
   28c20:	10800044 	addi	r2,r2,1
   28c24:	41000015 	stw	r4,0(r8)
   28c28:	44400115 	stw	r17,4(r8)
   28c2c:	d8c02015 	stw	r3,128(sp)
   28c30:	d8801f15 	stw	r2,124(sp)
   28c34:	010001c4 	movi	r4,7
   28c38:	20bfd716 	blt	r4,r2,28b98 <__alt_mem_sdram_controller_0+0xc0028b98>
   28c3c:	42000204 	addi	r8,r8,8
   28c40:	003fdd06 	br	28bb8 <__alt_mem_sdram_controller_0+0xc0028bb8>
   28c44:	d9002c17 	ldw	r4,176(sp)
   28c48:	d9801e04 	addi	r6,sp,120
   28c4c:	b80b883a 	mov	r5,r23
   28c50:	002e7740 	call	2e774 <__sprint_r>
   28c54:	1039ed1e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28c58:	d8802617 	ldw	r2,152(sp)
   28c5c:	d8c02017 	ldw	r3,128(sp)
   28c60:	da000404 	addi	r8,sp,16
   28c64:	003e1006 	br	284a8 <__alt_mem_sdram_controller_0+0xc00284a8>
   28c68:	00800044 	movi	r2,1
   28c6c:	10803fcc 	andi	r2,r2,255
   28c70:	00c00044 	movi	r3,1
   28c74:	10fa3526 	beq	r2,r3,2754c <__alt_mem_sdram_controller_0+0xc002754c>
   28c78:	00c00084 	movi	r3,2
   28c7c:	10fbcb26 	beq	r2,r3,27bac <__alt_mem_sdram_controller_0+0xc0027bac>
   28c80:	003a8f06 	br	276c0 <__alt_mem_sdram_controller_0+0xc00276c0>
   28c84:	010000f4 	movhi	r4,3
   28c88:	2118df84 	addi	r4,r4,25470
   28c8c:	d9003515 	stw	r4,212(sp)
   28c90:	003b7606 	br	27a6c <__alt_mem_sdram_controller_0+0xc0027a6c>
   28c94:	d8802917 	ldw	r2,164(sp)
   28c98:	00c00184 	movi	r3,6
   28c9c:	1880012e 	bgeu	r3,r2,28ca4 <___vfprintf_internal_r+0x1ca0>
   28ca0:	1805883a 	mov	r2,r3
   28ca4:	d8802e15 	stw	r2,184(sp)
   28ca8:	1000ef16 	blt	r2,zero,29068 <___vfprintf_internal_r+0x2064>
   28cac:	040000f4 	movhi	r16,3
   28cb0:	d8802a15 	stw	r2,168(sp)
   28cb4:	dcc02d15 	stw	r19,180(sp)
   28cb8:	d8002915 	stw	zero,164(sp)
   28cbc:	d8003215 	stw	zero,200(sp)
   28cc0:	8418d104 	addi	r16,r16,25412
   28cc4:	0039883a 	mov	fp,zero
   28cc8:	003aa206 	br	27754 <__alt_mem_sdram_controller_0+0xc0027754>
   28ccc:	0021883a 	mov	r16,zero
   28cd0:	003e0706 	br	284f0 <__alt_mem_sdram_controller_0+0xc00284f0>
   28cd4:	d9002c17 	ldw	r4,176(sp)
   28cd8:	d9801e04 	addi	r6,sp,120
   28cdc:	b80b883a 	mov	r5,r23
   28ce0:	002e7740 	call	2e774 <__sprint_r>
   28ce4:	1039c91e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28ce8:	d8802617 	ldw	r2,152(sp)
   28cec:	d9403317 	ldw	r5,204(sp)
   28cf0:	d8c02017 	ldw	r3,128(sp)
   28cf4:	da000404 	addi	r8,sp,16
   28cf8:	2885c83a 	sub	r2,r5,r2
   28cfc:	003dfb06 	br	284ec <__alt_mem_sdram_controller_0+0xc00284ec>
   28d00:	9080004c 	andi	r2,r18,1
   28d04:	103e8f1e 	bne	r2,zero,28744 <__alt_mem_sdram_controller_0+0xc0028744>
   28d08:	d8802117 	ldw	r2,132(sp)
   28d0c:	003e9e06 	br	28788 <__alt_mem_sdram_controller_0+0xc0028788>
   28d10:	1025883a 	mov	r18,r2
   28d14:	0039883a 	mov	fp,zero
   28d18:	00800084 	movi	r2,2
   28d1c:	003fd306 	br	28c6c <__alt_mem_sdram_controller_0+0xc0028c6c>
   28d20:	07000b44 	movi	fp,45
   28d24:	df002785 	stb	fp,158(sp)
   28d28:	003a4006 	br	2762c <__alt_mem_sdram_controller_0+0xc002762c>
   28d2c:	00c00b44 	movi	r3,45
   28d30:	d8c02785 	stb	r3,158(sp)
   28d34:	d8802a15 	stw	r2,168(sp)
   28d38:	dc802b17 	ldw	r18,172(sp)
   28d3c:	d8002915 	stw	zero,164(sp)
   28d40:	07000b44 	movi	fp,45
   28d44:	003a8006 	br	27748 <__alt_mem_sdram_controller_0+0xc0027748>
   28d48:	040000f4 	movhi	r16,3
   28d4c:	8418c604 	addi	r16,r16,25368
   28d50:	003f4706 	br	28a70 <__alt_mem_sdram_controller_0+0xc0028a70>
   28d54:	d8c02d17 	ldw	r3,180(sp)
   28d58:	d9002f17 	ldw	r4,188(sp)
   28d5c:	18800017 	ldw	r2,0(r3)
   28d60:	18c00104 	addi	r3,r3,4
   28d64:	d8c02d15 	stw	r3,180(sp)
   28d68:	11000015 	stw	r4,0(r2)
   28d6c:	0038dd06 	br	270e4 <__alt_mem_sdram_controller_0+0xc00270e4>
   28d70:	dd802617 	ldw	r22,152(sp)
   28d74:	00bfff44 	movi	r2,-3
   28d78:	b0801c16 	blt	r22,r2,28dec <___vfprintf_internal_r+0x1de8>
   28d7c:	d9402917 	ldw	r5,164(sp)
   28d80:	2d801a16 	blt	r5,r22,28dec <___vfprintf_internal_r+0x1de8>
   28d84:	dd803215 	stw	r22,200(sp)
   28d88:	003e8906 	br	287b0 <__alt_mem_sdram_controller_0+0xc00287b0>
   28d8c:	010000f4 	movhi	r4,3
   28d90:	2118db84 	addi	r4,r4,25454
   28d94:	d9002b15 	stw	r4,172(sp)
   28d98:	003c9106 	br	27fe0 <__alt_mem_sdram_controller_0+0xc0027fe0>
   28d9c:	e005883a 	mov	r2,fp
   28da0:	003e7906 	br	28788 <__alt_mem_sdram_controller_0+0xc0028788>
   28da4:	d9402917 	ldw	r5,164(sp)
   28da8:	df002783 	ldbu	fp,158(sp)
   28dac:	dcc02d15 	stw	r19,180(sp)
   28db0:	d9402a15 	stw	r5,168(sp)
   28db4:	d9402e15 	stw	r5,184(sp)
   28db8:	d8002915 	stw	zero,164(sp)
   28dbc:	d8003215 	stw	zero,200(sp)
   28dc0:	003a5d06 	br	27738 <__alt_mem_sdram_controller_0+0xc0027738>
   28dc4:	9080004c 	andi	r2,r18,1
   28dc8:	0039883a 	mov	fp,zero
   28dcc:	10000426 	beq	r2,zero,28de0 <___vfprintf_internal_r+0x1ddc>
   28dd0:	00800c04 	movi	r2,48
   28dd4:	dc001dc4 	addi	r16,sp,119
   28dd8:	d8801dc5 	stb	r2,119(sp)
   28ddc:	003b8006 	br	27be0 <__alt_mem_sdram_controller_0+0xc0027be0>
   28de0:	d8002e15 	stw	zero,184(sp)
   28de4:	dc001e04 	addi	r16,sp,120
   28de8:	003a4d06 	br	27720 <__alt_mem_sdram_controller_0+0xc0027720>
   28dec:	8c7fff84 	addi	r17,r17,-2
   28df0:	b5bfffc4 	addi	r22,r22,-1
   28df4:	dd802615 	stw	r22,152(sp)
   28df8:	dc4022c5 	stb	r17,139(sp)
   28dfc:	b000bf16 	blt	r22,zero,290fc <___vfprintf_internal_r+0x20f8>
   28e00:	00800ac4 	movi	r2,43
   28e04:	d8802305 	stb	r2,140(sp)
   28e08:	00800244 	movi	r2,9
   28e0c:	15807016 	blt	r2,r22,28fd0 <___vfprintf_internal_r+0x1fcc>
   28e10:	00800c04 	movi	r2,48
   28e14:	b5800c04 	addi	r22,r22,48
   28e18:	d8802345 	stb	r2,141(sp)
   28e1c:	dd802385 	stb	r22,142(sp)
   28e20:	d88023c4 	addi	r2,sp,143
   28e24:	df0022c4 	addi	fp,sp,139
   28e28:	d8c03317 	ldw	r3,204(sp)
   28e2c:	1739c83a 	sub	fp,r2,fp
   28e30:	d9003317 	ldw	r4,204(sp)
   28e34:	e0c7883a 	add	r3,fp,r3
   28e38:	df003a15 	stw	fp,232(sp)
   28e3c:	d8c02e15 	stw	r3,184(sp)
   28e40:	00800044 	movi	r2,1
   28e44:	1100b30e 	bge	r2,r4,29114 <___vfprintf_internal_r+0x2110>
   28e48:	d8c02e17 	ldw	r3,184(sp)
   28e4c:	18c00044 	addi	r3,r3,1
   28e50:	d8c02e15 	stw	r3,184(sp)
   28e54:	1805883a 	mov	r2,r3
   28e58:	1800ac16 	blt	r3,zero,2910c <___vfprintf_internal_r+0x2108>
   28e5c:	d8003215 	stw	zero,200(sp)
   28e60:	003e5d06 	br	287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   28e64:	d9002c17 	ldw	r4,176(sp)
   28e68:	d9801e04 	addi	r6,sp,120
   28e6c:	b80b883a 	mov	r5,r23
   28e70:	002e7740 	call	2e774 <__sprint_r>
   28e74:	1039651e 	bne	r2,zero,2740c <__alt_mem_sdram_controller_0+0xc002740c>
   28e78:	dc402617 	ldw	r17,152(sp)
   28e7c:	d8c02017 	ldw	r3,128(sp)
   28e80:	d8801f17 	ldw	r2,124(sp)
   28e84:	da000404 	addi	r8,sp,16
   28e88:	003ed606 	br	289e4 <__alt_mem_sdram_controller_0+0xc00289e4>
   28e8c:	582b883a 	mov	r21,r11
   28e90:	d8002915 	stw	zero,164(sp)
   28e94:	0038bd06 	br	2718c <__alt_mem_sdram_controller_0+0xc002718c>
   28e98:	d8802917 	ldw	r2,164(sp)
   28e9c:	103e071e 	bne	r2,zero,286bc <__alt_mem_sdram_controller_0+0xc00286bc>
   28ea0:	dc002915 	stw	r16,164(sp)
   28ea4:	003e0506 	br	286bc <__alt_mem_sdram_controller_0+0xc00286bc>
   28ea8:	d9002917 	ldw	r4,164(sp)
   28eac:	20c00044 	addi	r3,r4,1
   28eb0:	003e0f06 	br	286f0 <__alt_mem_sdram_controller_0+0xc00286f0>
   28eb4:	01400184 	movi	r5,6
   28eb8:	d9402915 	stw	r5,164(sp)
   28ebc:	003dff06 	br	286bc <__alt_mem_sdram_controller_0+0xc00286bc>
   28ec0:	d8802104 	addi	r2,sp,132
   28ec4:	d8800315 	stw	r2,12(sp)
   28ec8:	d8802504 	addi	r2,sp,148
   28ecc:	d8800215 	stw	r2,8(sp)
   28ed0:	d8802604 	addi	r2,sp,152
   28ed4:	d8800115 	stw	r2,4(sp)
   28ed8:	d8802917 	ldw	r2,164(sp)
   28edc:	d9403617 	ldw	r5,216(sp)
   28ee0:	d9002c17 	ldw	r4,176(sp)
   28ee4:	d8800015 	stw	r2,0(sp)
   28ee8:	01c000c4 	movi	r7,3
   28eec:	980d883a 	mov	r6,r19
   28ef0:	da003d15 	stw	r8,244(sp)
   28ef4:	00296f40 	call	296f4 <_dtoa_r>
   28ef8:	d8c02917 	ldw	r3,164(sp)
   28efc:	da003d17 	ldw	r8,244(sp)
   28f00:	1021883a 	mov	r16,r2
   28f04:	10f9883a 	add	fp,r2,r3
   28f08:	81000007 	ldb	r4,0(r16)
   28f0c:	00800c04 	movi	r2,48
   28f10:	20805e26 	beq	r4,r2,2908c <___vfprintf_internal_r+0x2088>
   28f14:	d8c02617 	ldw	r3,152(sp)
   28f18:	e0f9883a 	add	fp,fp,r3
   28f1c:	003e0a06 	br	28748 <__alt_mem_sdram_controller_0+0xc0028748>
   28f20:	00c00b44 	movi	r3,45
   28f24:	24e0003c 	xorhi	r19,r4,32768
   28f28:	d8c02a05 	stb	r3,168(sp)
   28f2c:	003de906 	br	286d4 <__alt_mem_sdram_controller_0+0xc00286d4>
   28f30:	d8c03217 	ldw	r3,200(sp)
   28f34:	00c07a0e 	bge	zero,r3,29120 <___vfprintf_internal_r+0x211c>
   28f38:	00800044 	movi	r2,1
   28f3c:	d9003317 	ldw	r4,204(sp)
   28f40:	1105883a 	add	r2,r2,r4
   28f44:	d8802e15 	stw	r2,184(sp)
   28f48:	10004e16 	blt	r2,zero,29084 <___vfprintf_internal_r+0x2080>
   28f4c:	044019c4 	movi	r17,103
   28f50:	003e2106 	br	287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   28f54:	d9002917 	ldw	r4,164(sp)
   28f58:	d8802104 	addi	r2,sp,132
   28f5c:	d8800315 	stw	r2,12(sp)
   28f60:	d9000015 	stw	r4,0(sp)
   28f64:	d8802504 	addi	r2,sp,148
   28f68:	d9403617 	ldw	r5,216(sp)
   28f6c:	d9002c17 	ldw	r4,176(sp)
   28f70:	d8800215 	stw	r2,8(sp)
   28f74:	d8802604 	addi	r2,sp,152
   28f78:	d8800115 	stw	r2,4(sp)
   28f7c:	01c000c4 	movi	r7,3
   28f80:	980d883a 	mov	r6,r19
   28f84:	da003d15 	stw	r8,244(sp)
   28f88:	00296f40 	call	296f4 <_dtoa_r>
   28f8c:	d8c02917 	ldw	r3,164(sp)
   28f90:	da003d17 	ldw	r8,244(sp)
   28f94:	1021883a 	mov	r16,r2
   28f98:	00801184 	movi	r2,70
   28f9c:	80f9883a 	add	fp,r16,r3
   28fa0:	88bfd926 	beq	r17,r2,28f08 <__alt_mem_sdram_controller_0+0xc0028f08>
   28fa4:	003de806 	br	28748 <__alt_mem_sdram_controller_0+0xc0028748>
   28fa8:	d9002917 	ldw	r4,164(sp)
   28fac:	00c04d0e 	bge	zero,r3,290e4 <___vfprintf_internal_r+0x20e0>
   28fb0:	2000441e 	bne	r4,zero,290c4 <___vfprintf_internal_r+0x20c0>
   28fb4:	9480004c 	andi	r18,r18,1
   28fb8:	9000421e 	bne	r18,zero,290c4 <___vfprintf_internal_r+0x20c0>
   28fbc:	1805883a 	mov	r2,r3
   28fc0:	18007016 	blt	r3,zero,29184 <___vfprintf_internal_r+0x2180>
   28fc4:	d8c03217 	ldw	r3,200(sp)
   28fc8:	d8c02e15 	stw	r3,184(sp)
   28fcc:	003e0206 	br	287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   28fd0:	df0022c4 	addi	fp,sp,139
   28fd4:	dc002915 	stw	r16,164(sp)
   28fd8:	4027883a 	mov	r19,r8
   28fdc:	e021883a 	mov	r16,fp
   28fe0:	b009883a 	mov	r4,r22
   28fe4:	01400284 	movi	r5,10
   28fe8:	00225980 	call	22598 <__modsi3>
   28fec:	10800c04 	addi	r2,r2,48
   28ff0:	843fffc4 	addi	r16,r16,-1
   28ff4:	b009883a 	mov	r4,r22
   28ff8:	01400284 	movi	r5,10
   28ffc:	80800005 	stb	r2,0(r16)
   29000:	00225140 	call	22514 <__divsi3>
   29004:	102d883a 	mov	r22,r2
   29008:	00800244 	movi	r2,9
   2900c:	15bff416 	blt	r2,r22,28fe0 <__alt_mem_sdram_controller_0+0xc0028fe0>
   29010:	9811883a 	mov	r8,r19
   29014:	b0800c04 	addi	r2,r22,48
   29018:	8027883a 	mov	r19,r16
   2901c:	997fffc4 	addi	r5,r19,-1
   29020:	98bfffc5 	stb	r2,-1(r19)
   29024:	dc002917 	ldw	r16,164(sp)
   29028:	2f006a2e 	bgeu	r5,fp,291d4 <___vfprintf_internal_r+0x21d0>
   2902c:	d9c02384 	addi	r7,sp,142
   29030:	3ccfc83a 	sub	r7,r7,r19
   29034:	d9002344 	addi	r4,sp,141
   29038:	e1cf883a 	add	r7,fp,r7
   2903c:	00000106 	br	29044 <___vfprintf_internal_r+0x2040>
   29040:	28800003 	ldbu	r2,0(r5)
   29044:	20800005 	stb	r2,0(r4)
   29048:	21000044 	addi	r4,r4,1
   2904c:	29400044 	addi	r5,r5,1
   29050:	393ffb1e 	bne	r7,r4,29040 <__alt_mem_sdram_controller_0+0xc0029040>
   29054:	d8802304 	addi	r2,sp,140
   29058:	14c5c83a 	sub	r2,r2,r19
   2905c:	d8c02344 	addi	r3,sp,141
   29060:	1885883a 	add	r2,r3,r2
   29064:	003f7006 	br	28e28 <__alt_mem_sdram_controller_0+0xc0028e28>
   29068:	0005883a 	mov	r2,zero
   2906c:	003f0f06 	br	28cac <__alt_mem_sdram_controller_0+0xc0028cac>
   29070:	d8c03217 	ldw	r3,200(sp)
   29074:	18c00044 	addi	r3,r3,1
   29078:	d8c02e15 	stw	r3,184(sp)
   2907c:	1805883a 	mov	r2,r3
   29080:	183fb20e 	bge	r3,zero,28f4c <__alt_mem_sdram_controller_0+0xc0028f4c>
   29084:	0005883a 	mov	r2,zero
   29088:	003fb006 	br	28f4c <__alt_mem_sdram_controller_0+0xc0028f4c>
   2908c:	d9003617 	ldw	r4,216(sp)
   29090:	000d883a 	mov	r6,zero
   29094:	000f883a 	mov	r7,zero
   29098:	980b883a 	mov	r5,r19
   2909c:	d8c03c15 	stw	r3,240(sp)
   290a0:	da003d15 	stw	r8,244(sp)
   290a4:	0031f700 	call	31f70 <__eqdf2>
   290a8:	d8c03c17 	ldw	r3,240(sp)
   290ac:	da003d17 	ldw	r8,244(sp)
   290b0:	103f9826 	beq	r2,zero,28f14 <__alt_mem_sdram_controller_0+0xc0028f14>
   290b4:	00800044 	movi	r2,1
   290b8:	10c7c83a 	sub	r3,r2,r3
   290bc:	d8c02615 	stw	r3,152(sp)
   290c0:	003f9506 	br	28f18 <__alt_mem_sdram_controller_0+0xc0028f18>
   290c4:	d9002917 	ldw	r4,164(sp)
   290c8:	d8c03217 	ldw	r3,200(sp)
   290cc:	20800044 	addi	r2,r4,1
   290d0:	1885883a 	add	r2,r3,r2
   290d4:	d8802e15 	stw	r2,184(sp)
   290d8:	103dbf0e 	bge	r2,zero,287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   290dc:	0005883a 	mov	r2,zero
   290e0:	003dbd06 	br	287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   290e4:	2000211e 	bne	r4,zero,2916c <___vfprintf_internal_r+0x2168>
   290e8:	9480004c 	andi	r18,r18,1
   290ec:	90001f1e 	bne	r18,zero,2916c <___vfprintf_internal_r+0x2168>
   290f0:	00800044 	movi	r2,1
   290f4:	d8802e15 	stw	r2,184(sp)
   290f8:	003db706 	br	287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   290fc:	00800b44 	movi	r2,45
   29100:	05adc83a 	sub	r22,zero,r22
   29104:	d8802305 	stb	r2,140(sp)
   29108:	003f3f06 	br	28e08 <__alt_mem_sdram_controller_0+0xc0028e08>
   2910c:	0005883a 	mov	r2,zero
   29110:	003f5206 	br	28e5c <__alt_mem_sdram_controller_0+0xc0028e5c>
   29114:	90a4703a 	and	r18,r18,r2
   29118:	903f4e26 	beq	r18,zero,28e54 <__alt_mem_sdram_controller_0+0xc0028e54>
   2911c:	003f4a06 	br	28e48 <__alt_mem_sdram_controller_0+0xc0028e48>
   29120:	00800084 	movi	r2,2
   29124:	10c5c83a 	sub	r2,r2,r3
   29128:	003f8406 	br	28f3c <__alt_mem_sdram_controller_0+0xc0028f3c>
   2912c:	d8802d17 	ldw	r2,180(sp)
   29130:	d9002d17 	ldw	r4,180(sp)
   29134:	ac400043 	ldbu	r17,1(r21)
   29138:	10800017 	ldw	r2,0(r2)
   2913c:	582b883a 	mov	r21,r11
   29140:	d8802915 	stw	r2,164(sp)
   29144:	20800104 	addi	r2,r4,4
   29148:	d9002917 	ldw	r4,164(sp)
   2914c:	d8802d15 	stw	r2,180(sp)
   29150:	203e7a0e 	bge	r4,zero,28b3c <__alt_mem_sdram_controller_0+0xc0028b3c>
   29154:	8c403fcc 	andi	r17,r17,255
   29158:	00bfffc4 	movi	r2,-1
   2915c:	8c40201c 	xori	r17,r17,128
   29160:	d8802915 	stw	r2,164(sp)
   29164:	8c7fe004 	addi	r17,r17,-128
   29168:	00380706 	br	27188 <__alt_mem_sdram_controller_0+0xc0027188>
   2916c:	d8c02917 	ldw	r3,164(sp)
   29170:	18c00084 	addi	r3,r3,2
   29174:	d8c02e15 	stw	r3,184(sp)
   29178:	1805883a 	mov	r2,r3
   2917c:	183d960e 	bge	r3,zero,287d8 <__alt_mem_sdram_controller_0+0xc00287d8>
   29180:	003fd606 	br	290dc <__alt_mem_sdram_controller_0+0xc00290dc>
   29184:	0005883a 	mov	r2,zero
   29188:	003f8e06 	br	28fc4 <__alt_mem_sdram_controller_0+0xc0028fc4>
   2918c:	9080004c 	andi	r2,r18,1
   29190:	103f811e 	bne	r2,zero,28f98 <__alt_mem_sdram_controller_0+0xc0028f98>
   29194:	d8802117 	ldw	r2,132(sp)
   29198:	1405c83a 	sub	r2,r2,r16
   2919c:	d8803315 	stw	r2,204(sp)
   291a0:	b47ef326 	beq	r22,r17,28d70 <__alt_mem_sdram_controller_0+0xc0028d70>
   291a4:	dd802617 	ldw	r22,152(sp)
   291a8:	003f1106 	br	28df0 <__alt_mem_sdram_controller_0+0xc0028df0>
   291ac:	d9c02785 	stb	r7,158(sp)
   291b0:	00390406 	br	275c4 <__alt_mem_sdram_controller_0+0xc00275c4>
   291b4:	d9c02785 	stb	r7,158(sp)
   291b8:	0038d306 	br	27508 <__alt_mem_sdram_controller_0+0xc0027508>
   291bc:	d9c02785 	stb	r7,158(sp)
   291c0:	003a6106 	br	27b48 <__alt_mem_sdram_controller_0+0xc0027b48>
   291c4:	d9c02785 	stb	r7,158(sp)
   291c8:	003af806 	br	27dac <__alt_mem_sdram_controller_0+0xc0027dac>
   291cc:	0005883a 	mov	r2,zero
   291d0:	003d7e06 	br	287cc <__alt_mem_sdram_controller_0+0xc00287cc>
   291d4:	d8802344 	addi	r2,sp,141
   291d8:	003f1306 	br	28e28 <__alt_mem_sdram_controller_0+0xc0028e28>
   291dc:	d9c02785 	stb	r7,158(sp)
   291e0:	00392306 	br	27670 <__alt_mem_sdram_controller_0+0xc0027670>
   291e4:	d9c02785 	stb	r7,158(sp)
   291e8:	003aa906 	br	27c90 <__alt_mem_sdram_controller_0+0xc0027c90>
   291ec:	d9c02785 	stb	r7,158(sp)
   291f0:	003a3d06 	br	27ae8 <__alt_mem_sdram_controller_0+0xc0027ae8>
   291f4:	d9c02785 	stb	r7,158(sp)
   291f8:	003aca06 	br	27d24 <__alt_mem_sdram_controller_0+0xc0027d24>

000291fc <__vfprintf_internal>:
   291fc:	00800134 	movhi	r2,4
   29200:	10a03d04 	addi	r2,r2,-32524
   29204:	300f883a 	mov	r7,r6
   29208:	280d883a 	mov	r6,r5
   2920c:	200b883a 	mov	r5,r4
   29210:	11000017 	ldw	r4,0(r2)
   29214:	00270041 	jmpi	27004 <___vfprintf_internal_r>

00029218 <__sbprintf>:
   29218:	2880030b 	ldhu	r2,12(r5)
   2921c:	2ac01917 	ldw	r11,100(r5)
   29220:	2a80038b 	ldhu	r10,14(r5)
   29224:	2a400717 	ldw	r9,28(r5)
   29228:	2a000917 	ldw	r8,36(r5)
   2922c:	defee204 	addi	sp,sp,-1144
   29230:	00c10004 	movi	r3,1024
   29234:	dc011a15 	stw	r16,1128(sp)
   29238:	10bfff4c 	andi	r2,r2,65533
   2923c:	2821883a 	mov	r16,r5
   29240:	d8cb883a 	add	r5,sp,r3
   29244:	dc811c15 	stw	r18,1136(sp)
   29248:	dc411b15 	stw	r17,1132(sp)
   2924c:	dfc11d15 	stw	ra,1140(sp)
   29250:	2025883a 	mov	r18,r4
   29254:	d881030d 	sth	r2,1036(sp)
   29258:	dac11915 	stw	r11,1124(sp)
   2925c:	da81038d 	sth	r10,1038(sp)
   29260:	da410715 	stw	r9,1052(sp)
   29264:	da010915 	stw	r8,1060(sp)
   29268:	dec10015 	stw	sp,1024(sp)
   2926c:	dec10415 	stw	sp,1040(sp)
   29270:	d8c10215 	stw	r3,1032(sp)
   29274:	d8c10515 	stw	r3,1044(sp)
   29278:	d8010615 	stw	zero,1048(sp)
   2927c:	00270040 	call	27004 <___vfprintf_internal_r>
   29280:	1023883a 	mov	r17,r2
   29284:	10000416 	blt	r2,zero,29298 <__sbprintf+0x80>
   29288:	d9410004 	addi	r5,sp,1024
   2928c:	9009883a 	mov	r4,r18
   29290:	0022a640 	call	22a64 <_fflush_r>
   29294:	10000d1e 	bne	r2,zero,292cc <__sbprintf+0xb4>
   29298:	d881030b 	ldhu	r2,1036(sp)
   2929c:	1080100c 	andi	r2,r2,64
   292a0:	10000326 	beq	r2,zero,292b0 <__sbprintf+0x98>
   292a4:	8080030b 	ldhu	r2,12(r16)
   292a8:	10801014 	ori	r2,r2,64
   292ac:	8080030d 	sth	r2,12(r16)
   292b0:	8805883a 	mov	r2,r17
   292b4:	dfc11d17 	ldw	ra,1140(sp)
   292b8:	dc811c17 	ldw	r18,1136(sp)
   292bc:	dc411b17 	ldw	r17,1132(sp)
   292c0:	dc011a17 	ldw	r16,1128(sp)
   292c4:	dec11e04 	addi	sp,sp,1144
   292c8:	f800283a 	ret
   292cc:	047fffc4 	movi	r17,-1
   292d0:	003ff106 	br	29298 <__alt_mem_sdram_controller_0+0xc0029298>

000292d4 <_write_r>:
   292d4:	defffd04 	addi	sp,sp,-12
   292d8:	2805883a 	mov	r2,r5
   292dc:	dc000015 	stw	r16,0(sp)
   292e0:	04000134 	movhi	r16,4
   292e4:	dc400115 	stw	r17,4(sp)
   292e8:	300b883a 	mov	r5,r6
   292ec:	84270804 	addi	r16,r16,-25568
   292f0:	2023883a 	mov	r17,r4
   292f4:	380d883a 	mov	r6,r7
   292f8:	1009883a 	mov	r4,r2
   292fc:	dfc00215 	stw	ra,8(sp)
   29300:	80000015 	stw	zero,0(r16)
   29304:	003446c0 	call	3446c <write>
   29308:	00ffffc4 	movi	r3,-1
   2930c:	10c00526 	beq	r2,r3,29324 <_write_r+0x50>
   29310:	dfc00217 	ldw	ra,8(sp)
   29314:	dc400117 	ldw	r17,4(sp)
   29318:	dc000017 	ldw	r16,0(sp)
   2931c:	dec00304 	addi	sp,sp,12
   29320:	f800283a 	ret
   29324:	80c00017 	ldw	r3,0(r16)
   29328:	183ff926 	beq	r3,zero,29310 <__alt_mem_sdram_controller_0+0xc0029310>
   2932c:	88c00015 	stw	r3,0(r17)
   29330:	003ff706 	br	29310 <__alt_mem_sdram_controller_0+0xc0029310>

00029334 <__swsetup_r>:
   29334:	00800134 	movhi	r2,4
   29338:	defffd04 	addi	sp,sp,-12
   2933c:	10a03d04 	addi	r2,r2,-32524
   29340:	dc400115 	stw	r17,4(sp)
   29344:	2023883a 	mov	r17,r4
   29348:	11000017 	ldw	r4,0(r2)
   2934c:	dc000015 	stw	r16,0(sp)
   29350:	dfc00215 	stw	ra,8(sp)
   29354:	2821883a 	mov	r16,r5
   29358:	20000226 	beq	r4,zero,29364 <__swsetup_r+0x30>
   2935c:	20800e17 	ldw	r2,56(r4)
   29360:	10003126 	beq	r2,zero,29428 <__swsetup_r+0xf4>
   29364:	8080030b 	ldhu	r2,12(r16)
   29368:	10c0020c 	andi	r3,r2,8
   2936c:	1009883a 	mov	r4,r2
   29370:	18000f26 	beq	r3,zero,293b0 <__swsetup_r+0x7c>
   29374:	80c00417 	ldw	r3,16(r16)
   29378:	18001526 	beq	r3,zero,293d0 <__swsetup_r+0x9c>
   2937c:	1100004c 	andi	r4,r2,1
   29380:	20001c1e 	bne	r4,zero,293f4 <__swsetup_r+0xc0>
   29384:	1080008c 	andi	r2,r2,2
   29388:	1000291e 	bne	r2,zero,29430 <__swsetup_r+0xfc>
   2938c:	80800517 	ldw	r2,20(r16)
   29390:	80800215 	stw	r2,8(r16)
   29394:	18001c26 	beq	r3,zero,29408 <__swsetup_r+0xd4>
   29398:	0005883a 	mov	r2,zero
   2939c:	dfc00217 	ldw	ra,8(sp)
   293a0:	dc400117 	ldw	r17,4(sp)
   293a4:	dc000017 	ldw	r16,0(sp)
   293a8:	dec00304 	addi	sp,sp,12
   293ac:	f800283a 	ret
   293b0:	2080040c 	andi	r2,r4,16
   293b4:	10002e26 	beq	r2,zero,29470 <__swsetup_r+0x13c>
   293b8:	2080010c 	andi	r2,r4,4
   293bc:	10001e1e 	bne	r2,zero,29438 <__swsetup_r+0x104>
   293c0:	80c00417 	ldw	r3,16(r16)
   293c4:	20800214 	ori	r2,r4,8
   293c8:	8080030d 	sth	r2,12(r16)
   293cc:	183feb1e 	bne	r3,zero,2937c <__alt_mem_sdram_controller_0+0xc002937c>
   293d0:	1100a00c 	andi	r4,r2,640
   293d4:	01408004 	movi	r5,512
   293d8:	217fe826 	beq	r4,r5,2937c <__alt_mem_sdram_controller_0+0xc002937c>
   293dc:	800b883a 	mov	r5,r16
   293e0:	8809883a 	mov	r4,r17
   293e4:	0023bdc0 	call	23bdc <__smakebuf_r>
   293e8:	8080030b 	ldhu	r2,12(r16)
   293ec:	80c00417 	ldw	r3,16(r16)
   293f0:	003fe206 	br	2937c <__alt_mem_sdram_controller_0+0xc002937c>
   293f4:	80800517 	ldw	r2,20(r16)
   293f8:	80000215 	stw	zero,8(r16)
   293fc:	0085c83a 	sub	r2,zero,r2
   29400:	80800615 	stw	r2,24(r16)
   29404:	183fe41e 	bne	r3,zero,29398 <__alt_mem_sdram_controller_0+0xc0029398>
   29408:	80c0030b 	ldhu	r3,12(r16)
   2940c:	0005883a 	mov	r2,zero
   29410:	1900200c 	andi	r4,r3,128
   29414:	203fe126 	beq	r4,zero,2939c <__alt_mem_sdram_controller_0+0xc002939c>
   29418:	18c01014 	ori	r3,r3,64
   2941c:	80c0030d 	sth	r3,12(r16)
   29420:	00bfffc4 	movi	r2,-1
   29424:	003fdd06 	br	2939c <__alt_mem_sdram_controller_0+0xc002939c>
   29428:	0022e400 	call	22e40 <__sinit>
   2942c:	003fcd06 	br	29364 <__alt_mem_sdram_controller_0+0xc0029364>
   29430:	0005883a 	mov	r2,zero
   29434:	003fd606 	br	29390 <__alt_mem_sdram_controller_0+0xc0029390>
   29438:	81400c17 	ldw	r5,48(r16)
   2943c:	28000626 	beq	r5,zero,29458 <__swsetup_r+0x124>
   29440:	80801004 	addi	r2,r16,64
   29444:	28800326 	beq	r5,r2,29454 <__swsetup_r+0x120>
   29448:	8809883a 	mov	r4,r17
   2944c:	00231680 	call	23168 <_free_r>
   29450:	8100030b 	ldhu	r4,12(r16)
   29454:	80000c15 	stw	zero,48(r16)
   29458:	80c00417 	ldw	r3,16(r16)
   2945c:	00bff6c4 	movi	r2,-37
   29460:	1108703a 	and	r4,r2,r4
   29464:	80000115 	stw	zero,4(r16)
   29468:	80c00015 	stw	r3,0(r16)
   2946c:	003fd506 	br	293c4 <__alt_mem_sdram_controller_0+0xc00293c4>
   29470:	00800244 	movi	r2,9
   29474:	88800015 	stw	r2,0(r17)
   29478:	20801014 	ori	r2,r4,64
   2947c:	8080030d 	sth	r2,12(r16)
   29480:	00bfffc4 	movi	r2,-1
   29484:	003fc506 	br	2939c <__alt_mem_sdram_controller_0+0xc002939c>

00029488 <_close_r>:
   29488:	defffd04 	addi	sp,sp,-12
   2948c:	dc000015 	stw	r16,0(sp)
   29490:	04000134 	movhi	r16,4
   29494:	dc400115 	stw	r17,4(sp)
   29498:	84270804 	addi	r16,r16,-25568
   2949c:	2023883a 	mov	r17,r4
   294a0:	2809883a 	mov	r4,r5
   294a4:	dfc00215 	stw	ra,8(sp)
   294a8:	80000015 	stw	zero,0(r16)
   294ac:	00334800 	call	33480 <close>
   294b0:	00ffffc4 	movi	r3,-1
   294b4:	10c00526 	beq	r2,r3,294cc <_close_r+0x44>
   294b8:	dfc00217 	ldw	ra,8(sp)
   294bc:	dc400117 	ldw	r17,4(sp)
   294c0:	dc000017 	ldw	r16,0(sp)
   294c4:	dec00304 	addi	sp,sp,12
   294c8:	f800283a 	ret
   294cc:	80c00017 	ldw	r3,0(r16)
   294d0:	183ff926 	beq	r3,zero,294b8 <__alt_mem_sdram_controller_0+0xc00294b8>
   294d4:	88c00015 	stw	r3,0(r17)
   294d8:	003ff706 	br	294b8 <__alt_mem_sdram_controller_0+0xc00294b8>

000294dc <abort>:
   294dc:	deffff04 	addi	sp,sp,-4
   294e0:	01000184 	movi	r4,6
   294e4:	dfc00015 	stw	ra,0(sp)
   294e8:	002d0e00 	call	2d0e0 <raise>
   294ec:	01000044 	movi	r4,1
   294f0:	003357c0 	call	3357c <_exit>

000294f4 <quorem>:
   294f4:	defff704 	addi	sp,sp,-36
   294f8:	dc800215 	stw	r18,8(sp)
   294fc:	20800417 	ldw	r2,16(r4)
   29500:	2c800417 	ldw	r18,16(r5)
   29504:	dfc00815 	stw	ra,32(sp)
   29508:	ddc00715 	stw	r23,28(sp)
   2950c:	dd800615 	stw	r22,24(sp)
   29510:	dd400515 	stw	r21,20(sp)
   29514:	dd000415 	stw	r20,16(sp)
   29518:	dcc00315 	stw	r19,12(sp)
   2951c:	dc400115 	stw	r17,4(sp)
   29520:	dc000015 	stw	r16,0(sp)
   29524:	14807116 	blt	r2,r18,296ec <quorem+0x1f8>
   29528:	94bfffc4 	addi	r18,r18,-1
   2952c:	94ad883a 	add	r22,r18,r18
   29530:	b5ad883a 	add	r22,r22,r22
   29534:	2c400504 	addi	r17,r5,20
   29538:	8da9883a 	add	r20,r17,r22
   2953c:	25400504 	addi	r21,r4,20
   29540:	282f883a 	mov	r23,r5
   29544:	adad883a 	add	r22,r21,r22
   29548:	a1400017 	ldw	r5,0(r20)
   2954c:	2021883a 	mov	r16,r4
   29550:	b1000017 	ldw	r4,0(r22)
   29554:	29400044 	addi	r5,r5,1
   29558:	002260c0 	call	2260c <__udivsi3>
   2955c:	1027883a 	mov	r19,r2
   29560:	10002c26 	beq	r2,zero,29614 <quorem+0x120>
   29564:	a813883a 	mov	r9,r21
   29568:	880b883a 	mov	r5,r17
   2956c:	0009883a 	mov	r4,zero
   29570:	000d883a 	mov	r6,zero
   29574:	2a000017 	ldw	r8,0(r5)
   29578:	49c00017 	ldw	r7,0(r9)
   2957c:	29400104 	addi	r5,r5,4
   29580:	40bfffcc 	andi	r2,r8,65535
   29584:	14c5383a 	mul	r2,r2,r19
   29588:	4010d43a 	srli	r8,r8,16
   2958c:	38ffffcc 	andi	r3,r7,65535
   29590:	1105883a 	add	r2,r2,r4
   29594:	1008d43a 	srli	r4,r2,16
   29598:	44d1383a 	mul	r8,r8,r19
   2959c:	198d883a 	add	r6,r3,r6
   295a0:	10ffffcc 	andi	r3,r2,65535
   295a4:	30c7c83a 	sub	r3,r6,r3
   295a8:	380ed43a 	srli	r7,r7,16
   295ac:	4105883a 	add	r2,r8,r4
   295b0:	180dd43a 	srai	r6,r3,16
   295b4:	113fffcc 	andi	r4,r2,65535
   295b8:	390fc83a 	sub	r7,r7,r4
   295bc:	398d883a 	add	r6,r7,r6
   295c0:	300e943a 	slli	r7,r6,16
   295c4:	18ffffcc 	andi	r3,r3,65535
   295c8:	1008d43a 	srli	r4,r2,16
   295cc:	38ceb03a 	or	r7,r7,r3
   295d0:	49c00015 	stw	r7,0(r9)
   295d4:	300dd43a 	srai	r6,r6,16
   295d8:	4a400104 	addi	r9,r9,4
   295dc:	a17fe52e 	bgeu	r20,r5,29574 <__alt_mem_sdram_controller_0+0xc0029574>
   295e0:	b0800017 	ldw	r2,0(r22)
   295e4:	10000b1e 	bne	r2,zero,29614 <quorem+0x120>
   295e8:	b0bfff04 	addi	r2,r22,-4
   295ec:	a880082e 	bgeu	r21,r2,29610 <quorem+0x11c>
   295f0:	b0ffff17 	ldw	r3,-4(r22)
   295f4:	18000326 	beq	r3,zero,29604 <quorem+0x110>
   295f8:	00000506 	br	29610 <quorem+0x11c>
   295fc:	10c00017 	ldw	r3,0(r2)
   29600:	1800031e 	bne	r3,zero,29610 <quorem+0x11c>
   29604:	10bfff04 	addi	r2,r2,-4
   29608:	94bfffc4 	addi	r18,r18,-1
   2960c:	a8bffb36 	bltu	r21,r2,295fc <__alt_mem_sdram_controller_0+0xc00295fc>
   29610:	84800415 	stw	r18,16(r16)
   29614:	b80b883a 	mov	r5,r23
   29618:	8009883a 	mov	r4,r16
   2961c:	002c1200 	call	2c120 <__mcmp>
   29620:	10002616 	blt	r2,zero,296bc <quorem+0x1c8>
   29624:	9cc00044 	addi	r19,r19,1
   29628:	a805883a 	mov	r2,r21
   2962c:	000b883a 	mov	r5,zero
   29630:	11000017 	ldw	r4,0(r2)
   29634:	89800017 	ldw	r6,0(r17)
   29638:	10800104 	addi	r2,r2,4
   2963c:	20ffffcc 	andi	r3,r4,65535
   29640:	194b883a 	add	r5,r3,r5
   29644:	30ffffcc 	andi	r3,r6,65535
   29648:	28c7c83a 	sub	r3,r5,r3
   2964c:	300cd43a 	srli	r6,r6,16
   29650:	2008d43a 	srli	r4,r4,16
   29654:	180bd43a 	srai	r5,r3,16
   29658:	18ffffcc 	andi	r3,r3,65535
   2965c:	2189c83a 	sub	r4,r4,r6
   29660:	2149883a 	add	r4,r4,r5
   29664:	200c943a 	slli	r6,r4,16
   29668:	8c400104 	addi	r17,r17,4
   2966c:	200bd43a 	srai	r5,r4,16
   29670:	30c6b03a 	or	r3,r6,r3
   29674:	10ffff15 	stw	r3,-4(r2)
   29678:	a47fed2e 	bgeu	r20,r17,29630 <__alt_mem_sdram_controller_0+0xc0029630>
   2967c:	9485883a 	add	r2,r18,r18
   29680:	1085883a 	add	r2,r2,r2
   29684:	a887883a 	add	r3,r21,r2
   29688:	18800017 	ldw	r2,0(r3)
   2968c:	10000b1e 	bne	r2,zero,296bc <quorem+0x1c8>
   29690:	18bfff04 	addi	r2,r3,-4
   29694:	a880082e 	bgeu	r21,r2,296b8 <quorem+0x1c4>
   29698:	18ffff17 	ldw	r3,-4(r3)
   2969c:	18000326 	beq	r3,zero,296ac <quorem+0x1b8>
   296a0:	00000506 	br	296b8 <quorem+0x1c4>
   296a4:	10c00017 	ldw	r3,0(r2)
   296a8:	1800031e 	bne	r3,zero,296b8 <quorem+0x1c4>
   296ac:	10bfff04 	addi	r2,r2,-4
   296b0:	94bfffc4 	addi	r18,r18,-1
   296b4:	a8bffb36 	bltu	r21,r2,296a4 <__alt_mem_sdram_controller_0+0xc00296a4>
   296b8:	84800415 	stw	r18,16(r16)
   296bc:	9805883a 	mov	r2,r19
   296c0:	dfc00817 	ldw	ra,32(sp)
   296c4:	ddc00717 	ldw	r23,28(sp)
   296c8:	dd800617 	ldw	r22,24(sp)
   296cc:	dd400517 	ldw	r21,20(sp)
   296d0:	dd000417 	ldw	r20,16(sp)
   296d4:	dcc00317 	ldw	r19,12(sp)
   296d8:	dc800217 	ldw	r18,8(sp)
   296dc:	dc400117 	ldw	r17,4(sp)
   296e0:	dc000017 	ldw	r16,0(sp)
   296e4:	dec00904 	addi	sp,sp,36
   296e8:	f800283a 	ret
   296ec:	0005883a 	mov	r2,zero
   296f0:	003ff306 	br	296c0 <__alt_mem_sdram_controller_0+0xc00296c0>

000296f4 <_dtoa_r>:
   296f4:	20801017 	ldw	r2,64(r4)
   296f8:	deffde04 	addi	sp,sp,-136
   296fc:	df002015 	stw	fp,128(sp)
   29700:	dcc01b15 	stw	r19,108(sp)
   29704:	dc801a15 	stw	r18,104(sp)
   29708:	dc401915 	stw	r17,100(sp)
   2970c:	dc001815 	stw	r16,96(sp)
   29710:	dfc02115 	stw	ra,132(sp)
   29714:	ddc01f15 	stw	r23,124(sp)
   29718:	dd801e15 	stw	r22,120(sp)
   2971c:	dd401d15 	stw	r21,116(sp)
   29720:	dd001c15 	stw	r20,112(sp)
   29724:	d9c00315 	stw	r7,12(sp)
   29728:	2039883a 	mov	fp,r4
   2972c:	3023883a 	mov	r17,r6
   29730:	2825883a 	mov	r18,r5
   29734:	dc002417 	ldw	r16,144(sp)
   29738:	3027883a 	mov	r19,r6
   2973c:	10000826 	beq	r2,zero,29760 <_dtoa_r+0x6c>
   29740:	21801117 	ldw	r6,68(r4)
   29744:	00c00044 	movi	r3,1
   29748:	100b883a 	mov	r5,r2
   2974c:	1986983a 	sll	r3,r3,r6
   29750:	11800115 	stw	r6,4(r2)
   29754:	10c00215 	stw	r3,8(r2)
   29758:	002b9000 	call	2b900 <_Bfree>
   2975c:	e0001015 	stw	zero,64(fp)
   29760:	88002e16 	blt	r17,zero,2981c <_dtoa_r+0x128>
   29764:	80000015 	stw	zero,0(r16)
   29768:	889ffc2c 	andhi	r2,r17,32752
   2976c:	00dffc34 	movhi	r3,32752
   29770:	10c01c26 	beq	r2,r3,297e4 <_dtoa_r+0xf0>
   29774:	000d883a 	mov	r6,zero
   29778:	000f883a 	mov	r7,zero
   2977c:	9009883a 	mov	r4,r18
   29780:	980b883a 	mov	r5,r19
   29784:	0031f700 	call	31f70 <__eqdf2>
   29788:	10002b1e 	bne	r2,zero,29838 <_dtoa_r+0x144>
   2978c:	d9c02317 	ldw	r7,140(sp)
   29790:	00800044 	movi	r2,1
   29794:	38800015 	stw	r2,0(r7)
   29798:	d8802517 	ldw	r2,148(sp)
   2979c:	10019e26 	beq	r2,zero,29e18 <_dtoa_r+0x724>
   297a0:	d8c02517 	ldw	r3,148(sp)
   297a4:	008000f4 	movhi	r2,3
   297a8:	1098d344 	addi	r2,r2,25421
   297ac:	18800015 	stw	r2,0(r3)
   297b0:	10bfffc4 	addi	r2,r2,-1
   297b4:	dfc02117 	ldw	ra,132(sp)
   297b8:	df002017 	ldw	fp,128(sp)
   297bc:	ddc01f17 	ldw	r23,124(sp)
   297c0:	dd801e17 	ldw	r22,120(sp)
   297c4:	dd401d17 	ldw	r21,116(sp)
   297c8:	dd001c17 	ldw	r20,112(sp)
   297cc:	dcc01b17 	ldw	r19,108(sp)
   297d0:	dc801a17 	ldw	r18,104(sp)
   297d4:	dc401917 	ldw	r17,100(sp)
   297d8:	dc001817 	ldw	r16,96(sp)
   297dc:	dec02204 	addi	sp,sp,136
   297e0:	f800283a 	ret
   297e4:	d8c02317 	ldw	r3,140(sp)
   297e8:	0089c3c4 	movi	r2,9999
   297ec:	18800015 	stw	r2,0(r3)
   297f0:	90017726 	beq	r18,zero,29dd0 <_dtoa_r+0x6dc>
   297f4:	008000f4 	movhi	r2,3
   297f8:	1098e704 	addi	r2,r2,25500
   297fc:	d9002517 	ldw	r4,148(sp)
   29800:	203fec26 	beq	r4,zero,297b4 <__alt_mem_sdram_controller_0+0xc00297b4>
   29804:	10c000c7 	ldb	r3,3(r2)
   29808:	1801781e 	bne	r3,zero,29dec <_dtoa_r+0x6f8>
   2980c:	10c000c4 	addi	r3,r2,3
   29810:	d9802517 	ldw	r6,148(sp)
   29814:	30c00015 	stw	r3,0(r6)
   29818:	003fe606 	br	297b4 <__alt_mem_sdram_controller_0+0xc00297b4>
   2981c:	04e00034 	movhi	r19,32768
   29820:	9cffffc4 	addi	r19,r19,-1
   29824:	00800044 	movi	r2,1
   29828:	8ce6703a 	and	r19,r17,r19
   2982c:	80800015 	stw	r2,0(r16)
   29830:	9823883a 	mov	r17,r19
   29834:	003fcc06 	br	29768 <__alt_mem_sdram_controller_0+0xc0029768>
   29838:	d8800204 	addi	r2,sp,8
   2983c:	d8800015 	stw	r2,0(sp)
   29840:	d9c00104 	addi	r7,sp,4
   29844:	900b883a 	mov	r5,r18
   29848:	980d883a 	mov	r6,r19
   2984c:	e009883a 	mov	r4,fp
   29850:	8820d53a 	srli	r16,r17,20
   29854:	002c4ec0 	call	2c4ec <__d2b>
   29858:	d8800915 	stw	r2,36(sp)
   2985c:	8001651e 	bne	r16,zero,29df4 <_dtoa_r+0x700>
   29860:	dd800217 	ldw	r22,8(sp)
   29864:	dc000117 	ldw	r16,4(sp)
   29868:	00800804 	movi	r2,32
   2986c:	b421883a 	add	r16,r22,r16
   29870:	80c10c84 	addi	r3,r16,1074
   29874:	10c2d10e 	bge	r2,r3,2a3bc <_dtoa_r+0xcc8>
   29878:	00801004 	movi	r2,64
   2987c:	81010484 	addi	r4,r16,1042
   29880:	10c7c83a 	sub	r3,r2,r3
   29884:	9108d83a 	srl	r4,r18,r4
   29888:	88e2983a 	sll	r17,r17,r3
   2988c:	2448b03a 	or	r4,r4,r17
   29890:	00333380 	call	33338 <__floatunsidf>
   29894:	017f8434 	movhi	r5,65040
   29898:	01800044 	movi	r6,1
   2989c:	1009883a 	mov	r4,r2
   298a0:	194b883a 	add	r5,r3,r5
   298a4:	843fffc4 	addi	r16,r16,-1
   298a8:	d9801115 	stw	r6,68(sp)
   298ac:	000d883a 	mov	r6,zero
   298b0:	01cffe34 	movhi	r7,16376
   298b4:	00328e00 	call	328e0 <__subdf3>
   298b8:	0198dbf4 	movhi	r6,25455
   298bc:	01cff4f4 	movhi	r7,16339
   298c0:	3190d844 	addi	r6,r6,17249
   298c4:	39e1e9c4 	addi	r7,r7,-30809
   298c8:	1009883a 	mov	r4,r2
   298cc:	180b883a 	mov	r5,r3
   298d0:	00321c80 	call	321c8 <__muldf3>
   298d4:	01a2d874 	movhi	r6,35681
   298d8:	01cff1f4 	movhi	r7,16327
   298dc:	31b22cc4 	addi	r6,r6,-14157
   298e0:	39e28a04 	addi	r7,r7,-30168
   298e4:	180b883a 	mov	r5,r3
   298e8:	1009883a 	mov	r4,r2
   298ec:	0030ddc0 	call	30ddc <__adddf3>
   298f0:	8009883a 	mov	r4,r16
   298f4:	1029883a 	mov	r20,r2
   298f8:	1823883a 	mov	r17,r3
   298fc:	003325c0 	call	3325c <__floatsidf>
   29900:	019427f4 	movhi	r6,20639
   29904:	01cff4f4 	movhi	r7,16339
   29908:	319e7ec4 	addi	r6,r6,31227
   2990c:	39d104c4 	addi	r7,r7,17427
   29910:	1009883a 	mov	r4,r2
   29914:	180b883a 	mov	r5,r3
   29918:	00321c80 	call	321c8 <__muldf3>
   2991c:	100d883a 	mov	r6,r2
   29920:	180f883a 	mov	r7,r3
   29924:	a009883a 	mov	r4,r20
   29928:	880b883a 	mov	r5,r17
   2992c:	0030ddc0 	call	30ddc <__adddf3>
   29930:	1009883a 	mov	r4,r2
   29934:	180b883a 	mov	r5,r3
   29938:	1029883a 	mov	r20,r2
   2993c:	1823883a 	mov	r17,r3
   29940:	00331dc0 	call	331dc <__fixdfsi>
   29944:	000d883a 	mov	r6,zero
   29948:	000f883a 	mov	r7,zero
   2994c:	a009883a 	mov	r4,r20
   29950:	880b883a 	mov	r5,r17
   29954:	d8800515 	stw	r2,20(sp)
   29958:	00320d40 	call	320d4 <__ledf2>
   2995c:	10028716 	blt	r2,zero,2a37c <_dtoa_r+0xc88>
   29960:	d8c00517 	ldw	r3,20(sp)
   29964:	00800584 	movi	r2,22
   29968:	10c27536 	bltu	r2,r3,2a340 <_dtoa_r+0xc4c>
   2996c:	180490fa 	slli	r2,r3,3
   29970:	00c000f4 	movhi	r3,3
   29974:	18d90204 	addi	r3,r3,25608
   29978:	1885883a 	add	r2,r3,r2
   2997c:	11000017 	ldw	r4,0(r2)
   29980:	11400117 	ldw	r5,4(r2)
   29984:	900d883a 	mov	r6,r18
   29988:	980f883a 	mov	r7,r19
   2998c:	0031ff80 	call	31ff8 <__gedf2>
   29990:	00828d0e 	bge	zero,r2,2a3c8 <_dtoa_r+0xcd4>
   29994:	d9000517 	ldw	r4,20(sp)
   29998:	d8000e15 	stw	zero,56(sp)
   2999c:	213fffc4 	addi	r4,r4,-1
   299a0:	d9000515 	stw	r4,20(sp)
   299a4:	b42dc83a 	sub	r22,r22,r16
   299a8:	b5bfffc4 	addi	r22,r22,-1
   299ac:	b0026f16 	blt	r22,zero,2a36c <_dtoa_r+0xc78>
   299b0:	d8000815 	stw	zero,32(sp)
   299b4:	d9c00517 	ldw	r7,20(sp)
   299b8:	38026416 	blt	r7,zero,2a34c <_dtoa_r+0xc58>
   299bc:	b1ed883a 	add	r22,r22,r7
   299c0:	d9c00d15 	stw	r7,52(sp)
   299c4:	d8000a15 	stw	zero,40(sp)
   299c8:	d9800317 	ldw	r6,12(sp)
   299cc:	00800244 	movi	r2,9
   299d0:	11811436 	bltu	r2,r6,29e24 <_dtoa_r+0x730>
   299d4:	00800144 	movi	r2,5
   299d8:	1184e10e 	bge	r2,r6,2ad60 <_dtoa_r+0x166c>
   299dc:	31bfff04 	addi	r6,r6,-4
   299e0:	d9800315 	stw	r6,12(sp)
   299e4:	0023883a 	mov	r17,zero
   299e8:	d9800317 	ldw	r6,12(sp)
   299ec:	008000c4 	movi	r2,3
   299f0:	30836726 	beq	r6,r2,2a790 <_dtoa_r+0x109c>
   299f4:	1183410e 	bge	r2,r6,2a6fc <_dtoa_r+0x1008>
   299f8:	d9c00317 	ldw	r7,12(sp)
   299fc:	00800104 	movi	r2,4
   29a00:	38827c26 	beq	r7,r2,2a3f4 <_dtoa_r+0xd00>
   29a04:	00800144 	movi	r2,5
   29a08:	3884c41e 	bne	r7,r2,2ad1c <_dtoa_r+0x1628>
   29a0c:	00800044 	movi	r2,1
   29a10:	d8800b15 	stw	r2,44(sp)
   29a14:	d8c00517 	ldw	r3,20(sp)
   29a18:	d9002217 	ldw	r4,136(sp)
   29a1c:	1907883a 	add	r3,r3,r4
   29a20:	19800044 	addi	r6,r3,1
   29a24:	d8c00c15 	stw	r3,48(sp)
   29a28:	d9800615 	stw	r6,24(sp)
   29a2c:	0183a40e 	bge	zero,r6,2a8c0 <_dtoa_r+0x11cc>
   29a30:	d9800617 	ldw	r6,24(sp)
   29a34:	3021883a 	mov	r16,r6
   29a38:	e0001115 	stw	zero,68(fp)
   29a3c:	008005c4 	movi	r2,23
   29a40:	1184c92e 	bgeu	r2,r6,2ad68 <_dtoa_r+0x1674>
   29a44:	00c00044 	movi	r3,1
   29a48:	00800104 	movi	r2,4
   29a4c:	1085883a 	add	r2,r2,r2
   29a50:	11000504 	addi	r4,r2,20
   29a54:	180b883a 	mov	r5,r3
   29a58:	18c00044 	addi	r3,r3,1
   29a5c:	313ffb2e 	bgeu	r6,r4,29a4c <__alt_mem_sdram_controller_0+0xc0029a4c>
   29a60:	e1401115 	stw	r5,68(fp)
   29a64:	e009883a 	mov	r4,fp
   29a68:	002b8580 	call	2b858 <_Balloc>
   29a6c:	d8800715 	stw	r2,28(sp)
   29a70:	e0801015 	stw	r2,64(fp)
   29a74:	00800384 	movi	r2,14
   29a78:	1400f736 	bltu	r2,r16,29e58 <_dtoa_r+0x764>
   29a7c:	8800f626 	beq	r17,zero,29e58 <_dtoa_r+0x764>
   29a80:	d9c00517 	ldw	r7,20(sp)
   29a84:	01c39a0e 	bge	zero,r7,2a8f0 <_dtoa_r+0x11fc>
   29a88:	388003cc 	andi	r2,r7,15
   29a8c:	100490fa 	slli	r2,r2,3
   29a90:	382bd13a 	srai	r21,r7,4
   29a94:	00c000f4 	movhi	r3,3
   29a98:	18d90204 	addi	r3,r3,25608
   29a9c:	1885883a 	add	r2,r3,r2
   29aa0:	a8c0040c 	andi	r3,r21,16
   29aa4:	12400017 	ldw	r9,0(r2)
   29aa8:	12000117 	ldw	r8,4(r2)
   29aac:	18037926 	beq	r3,zero,2a894 <_dtoa_r+0x11a0>
   29ab0:	008000f4 	movhi	r2,3
   29ab4:	1098f804 	addi	r2,r2,25568
   29ab8:	11800817 	ldw	r6,32(r2)
   29abc:	11c00917 	ldw	r7,36(r2)
   29ac0:	9009883a 	mov	r4,r18
   29ac4:	980b883a 	mov	r5,r19
   29ac8:	da001715 	stw	r8,92(sp)
   29acc:	da401615 	stw	r9,88(sp)
   29ad0:	00316880 	call	31688 <__divdf3>
   29ad4:	da001717 	ldw	r8,92(sp)
   29ad8:	da401617 	ldw	r9,88(sp)
   29adc:	ad4003cc 	andi	r21,r21,15
   29ae0:	040000c4 	movi	r16,3
   29ae4:	1023883a 	mov	r17,r2
   29ae8:	1829883a 	mov	r20,r3
   29aec:	a8001126 	beq	r21,zero,29b34 <_dtoa_r+0x440>
   29af0:	05c000f4 	movhi	r23,3
   29af4:	bdd8f804 	addi	r23,r23,25568
   29af8:	4805883a 	mov	r2,r9
   29afc:	4007883a 	mov	r3,r8
   29b00:	a980004c 	andi	r6,r21,1
   29b04:	1009883a 	mov	r4,r2
   29b08:	a82bd07a 	srai	r21,r21,1
   29b0c:	180b883a 	mov	r5,r3
   29b10:	30000426 	beq	r6,zero,29b24 <_dtoa_r+0x430>
   29b14:	b9800017 	ldw	r6,0(r23)
   29b18:	b9c00117 	ldw	r7,4(r23)
   29b1c:	84000044 	addi	r16,r16,1
   29b20:	00321c80 	call	321c8 <__muldf3>
   29b24:	bdc00204 	addi	r23,r23,8
   29b28:	a83ff51e 	bne	r21,zero,29b00 <__alt_mem_sdram_controller_0+0xc0029b00>
   29b2c:	1013883a 	mov	r9,r2
   29b30:	1811883a 	mov	r8,r3
   29b34:	480d883a 	mov	r6,r9
   29b38:	400f883a 	mov	r7,r8
   29b3c:	8809883a 	mov	r4,r17
   29b40:	a00b883a 	mov	r5,r20
   29b44:	00316880 	call	31688 <__divdf3>
   29b48:	d8800f15 	stw	r2,60(sp)
   29b4c:	d8c01015 	stw	r3,64(sp)
   29b50:	d8c00e17 	ldw	r3,56(sp)
   29b54:	18000626 	beq	r3,zero,29b70 <_dtoa_r+0x47c>
   29b58:	d9000f17 	ldw	r4,60(sp)
   29b5c:	d9401017 	ldw	r5,64(sp)
   29b60:	000d883a 	mov	r6,zero
   29b64:	01cffc34 	movhi	r7,16368
   29b68:	00320d40 	call	320d4 <__ledf2>
   29b6c:	10040b16 	blt	r2,zero,2ab9c <_dtoa_r+0x14a8>
   29b70:	8009883a 	mov	r4,r16
   29b74:	003325c0 	call	3325c <__floatsidf>
   29b78:	d9800f17 	ldw	r6,60(sp)
   29b7c:	d9c01017 	ldw	r7,64(sp)
   29b80:	1009883a 	mov	r4,r2
   29b84:	180b883a 	mov	r5,r3
   29b88:	00321c80 	call	321c8 <__muldf3>
   29b8c:	000d883a 	mov	r6,zero
   29b90:	01d00734 	movhi	r7,16412
   29b94:	1009883a 	mov	r4,r2
   29b98:	180b883a 	mov	r5,r3
   29b9c:	0030ddc0 	call	30ddc <__adddf3>
   29ba0:	1021883a 	mov	r16,r2
   29ba4:	d8800617 	ldw	r2,24(sp)
   29ba8:	047f3034 	movhi	r17,64704
   29bac:	1c63883a 	add	r17,r3,r17
   29bb0:	10031826 	beq	r2,zero,2a814 <_dtoa_r+0x1120>
   29bb4:	d8c00517 	ldw	r3,20(sp)
   29bb8:	db000617 	ldw	r12,24(sp)
   29bbc:	d8c01315 	stw	r3,76(sp)
   29bc0:	d9000b17 	ldw	r4,44(sp)
   29bc4:	20038f26 	beq	r4,zero,2aa04 <_dtoa_r+0x1310>
   29bc8:	60bfffc4 	addi	r2,r12,-1
   29bcc:	100490fa 	slli	r2,r2,3
   29bd0:	00c000f4 	movhi	r3,3
   29bd4:	18d90204 	addi	r3,r3,25608
   29bd8:	1885883a 	add	r2,r3,r2
   29bdc:	11800017 	ldw	r6,0(r2)
   29be0:	11c00117 	ldw	r7,4(r2)
   29be4:	d8800717 	ldw	r2,28(sp)
   29be8:	0009883a 	mov	r4,zero
   29bec:	014ff834 	movhi	r5,16352
   29bf0:	db001615 	stw	r12,88(sp)
   29bf4:	15c00044 	addi	r23,r2,1
   29bf8:	00316880 	call	31688 <__divdf3>
   29bfc:	800d883a 	mov	r6,r16
   29c00:	880f883a 	mov	r7,r17
   29c04:	1009883a 	mov	r4,r2
   29c08:	180b883a 	mov	r5,r3
   29c0c:	00328e00 	call	328e0 <__subdf3>
   29c10:	d9401017 	ldw	r5,64(sp)
   29c14:	d9000f17 	ldw	r4,60(sp)
   29c18:	102b883a 	mov	r21,r2
   29c1c:	d8c01215 	stw	r3,72(sp)
   29c20:	00331dc0 	call	331dc <__fixdfsi>
   29c24:	1009883a 	mov	r4,r2
   29c28:	1029883a 	mov	r20,r2
   29c2c:	003325c0 	call	3325c <__floatsidf>
   29c30:	d9000f17 	ldw	r4,60(sp)
   29c34:	d9401017 	ldw	r5,64(sp)
   29c38:	100d883a 	mov	r6,r2
   29c3c:	180f883a 	mov	r7,r3
   29c40:	00328e00 	call	328e0 <__subdf3>
   29c44:	1823883a 	mov	r17,r3
   29c48:	d8c00717 	ldw	r3,28(sp)
   29c4c:	d9401217 	ldw	r5,72(sp)
   29c50:	a2000c04 	addi	r8,r20,48
   29c54:	1021883a 	mov	r16,r2
   29c58:	1a000005 	stb	r8,0(r3)
   29c5c:	800d883a 	mov	r6,r16
   29c60:	880f883a 	mov	r7,r17
   29c64:	a809883a 	mov	r4,r21
   29c68:	4029883a 	mov	r20,r8
   29c6c:	0031ff80 	call	31ff8 <__gedf2>
   29c70:	00841d16 	blt	zero,r2,2ace8 <_dtoa_r+0x15f4>
   29c74:	800d883a 	mov	r6,r16
   29c78:	880f883a 	mov	r7,r17
   29c7c:	0009883a 	mov	r4,zero
   29c80:	014ffc34 	movhi	r5,16368
   29c84:	00328e00 	call	328e0 <__subdf3>
   29c88:	d9401217 	ldw	r5,72(sp)
   29c8c:	100d883a 	mov	r6,r2
   29c90:	180f883a 	mov	r7,r3
   29c94:	a809883a 	mov	r4,r21
   29c98:	0031ff80 	call	31ff8 <__gedf2>
   29c9c:	db001617 	ldw	r12,88(sp)
   29ca0:	00840e16 	blt	zero,r2,2acdc <_dtoa_r+0x15e8>
   29ca4:	00800044 	movi	r2,1
   29ca8:	13006b0e 	bge	r2,r12,29e58 <_dtoa_r+0x764>
   29cac:	d9000717 	ldw	r4,28(sp)
   29cb0:	dd800f15 	stw	r22,60(sp)
   29cb4:	dcc01015 	stw	r19,64(sp)
   29cb8:	2319883a 	add	r12,r4,r12
   29cbc:	dcc01217 	ldw	r19,72(sp)
   29cc0:	602d883a 	mov	r22,r12
   29cc4:	dc801215 	stw	r18,72(sp)
   29cc8:	b825883a 	mov	r18,r23
   29ccc:	00000906 	br	29cf4 <_dtoa_r+0x600>
   29cd0:	00328e00 	call	328e0 <__subdf3>
   29cd4:	a80d883a 	mov	r6,r21
   29cd8:	980f883a 	mov	r7,r19
   29cdc:	1009883a 	mov	r4,r2
   29ce0:	180b883a 	mov	r5,r3
   29ce4:	00320d40 	call	320d4 <__ledf2>
   29ce8:	1003e816 	blt	r2,zero,2ac8c <_dtoa_r+0x1598>
   29cec:	b825883a 	mov	r18,r23
   29cf0:	bd83e926 	beq	r23,r22,2ac98 <_dtoa_r+0x15a4>
   29cf4:	a809883a 	mov	r4,r21
   29cf8:	980b883a 	mov	r5,r19
   29cfc:	000d883a 	mov	r6,zero
   29d00:	01d00934 	movhi	r7,16420
   29d04:	00321c80 	call	321c8 <__muldf3>
   29d08:	000d883a 	mov	r6,zero
   29d0c:	01d00934 	movhi	r7,16420
   29d10:	8009883a 	mov	r4,r16
   29d14:	880b883a 	mov	r5,r17
   29d18:	102b883a 	mov	r21,r2
   29d1c:	1827883a 	mov	r19,r3
   29d20:	00321c80 	call	321c8 <__muldf3>
   29d24:	180b883a 	mov	r5,r3
   29d28:	1009883a 	mov	r4,r2
   29d2c:	1821883a 	mov	r16,r3
   29d30:	1023883a 	mov	r17,r2
   29d34:	00331dc0 	call	331dc <__fixdfsi>
   29d38:	1009883a 	mov	r4,r2
   29d3c:	1029883a 	mov	r20,r2
   29d40:	003325c0 	call	3325c <__floatsidf>
   29d44:	8809883a 	mov	r4,r17
   29d48:	800b883a 	mov	r5,r16
   29d4c:	100d883a 	mov	r6,r2
   29d50:	180f883a 	mov	r7,r3
   29d54:	00328e00 	call	328e0 <__subdf3>
   29d58:	a5000c04 	addi	r20,r20,48
   29d5c:	a80d883a 	mov	r6,r21
   29d60:	980f883a 	mov	r7,r19
   29d64:	1009883a 	mov	r4,r2
   29d68:	180b883a 	mov	r5,r3
   29d6c:	95000005 	stb	r20,0(r18)
   29d70:	1021883a 	mov	r16,r2
   29d74:	1823883a 	mov	r17,r3
   29d78:	00320d40 	call	320d4 <__ledf2>
   29d7c:	bdc00044 	addi	r23,r23,1
   29d80:	800d883a 	mov	r6,r16
   29d84:	880f883a 	mov	r7,r17
   29d88:	0009883a 	mov	r4,zero
   29d8c:	014ffc34 	movhi	r5,16368
   29d90:	103fcf0e 	bge	r2,zero,29cd0 <__alt_mem_sdram_controller_0+0xc0029cd0>
   29d94:	d8c01317 	ldw	r3,76(sp)
   29d98:	d8c00515 	stw	r3,20(sp)
   29d9c:	d9400917 	ldw	r5,36(sp)
   29da0:	e009883a 	mov	r4,fp
   29da4:	002b9000 	call	2b900 <_Bfree>
   29da8:	d9000517 	ldw	r4,20(sp)
   29dac:	d9802317 	ldw	r6,140(sp)
   29db0:	d9c02517 	ldw	r7,148(sp)
   29db4:	b8000005 	stb	zero,0(r23)
   29db8:	20800044 	addi	r2,r4,1
   29dbc:	30800015 	stw	r2,0(r6)
   29dc0:	3802aa26 	beq	r7,zero,2a86c <_dtoa_r+0x1178>
   29dc4:	3dc00015 	stw	r23,0(r7)
   29dc8:	d8800717 	ldw	r2,28(sp)
   29dcc:	003e7906 	br	297b4 <__alt_mem_sdram_controller_0+0xc00297b4>
   29dd0:	00800434 	movhi	r2,16
   29dd4:	10bfffc4 	addi	r2,r2,-1
   29dd8:	88a2703a 	and	r17,r17,r2
   29ddc:	883e851e 	bne	r17,zero,297f4 <__alt_mem_sdram_controller_0+0xc00297f4>
   29de0:	008000f4 	movhi	r2,3
   29de4:	1098e404 	addi	r2,r2,25488
   29de8:	003e8406 	br	297fc <__alt_mem_sdram_controller_0+0xc00297fc>
   29dec:	10c00204 	addi	r3,r2,8
   29df0:	003e8706 	br	29810 <__alt_mem_sdram_controller_0+0xc0029810>
   29df4:	01400434 	movhi	r5,16
   29df8:	297fffc4 	addi	r5,r5,-1
   29dfc:	994a703a 	and	r5,r19,r5
   29e00:	9009883a 	mov	r4,r18
   29e04:	843f0044 	addi	r16,r16,-1023
   29e08:	294ffc34 	orhi	r5,r5,16368
   29e0c:	dd800217 	ldw	r22,8(sp)
   29e10:	d8001115 	stw	zero,68(sp)
   29e14:	003ea506 	br	298ac <__alt_mem_sdram_controller_0+0xc00298ac>
   29e18:	008000f4 	movhi	r2,3
   29e1c:	1098d304 	addi	r2,r2,25420
   29e20:	003e6406 	br	297b4 <__alt_mem_sdram_controller_0+0xc00297b4>
   29e24:	e0001115 	stw	zero,68(fp)
   29e28:	000b883a 	mov	r5,zero
   29e2c:	e009883a 	mov	r4,fp
   29e30:	002b8580 	call	2b858 <_Balloc>
   29e34:	01bfffc4 	movi	r6,-1
   29e38:	01c00044 	movi	r7,1
   29e3c:	d8800715 	stw	r2,28(sp)
   29e40:	d9800c15 	stw	r6,48(sp)
   29e44:	e0801015 	stw	r2,64(fp)
   29e48:	d8000315 	stw	zero,12(sp)
   29e4c:	d9c00b15 	stw	r7,44(sp)
   29e50:	d9800615 	stw	r6,24(sp)
   29e54:	d8002215 	stw	zero,136(sp)
   29e58:	d8800117 	ldw	r2,4(sp)
   29e5c:	10008916 	blt	r2,zero,2a084 <_dtoa_r+0x990>
   29e60:	d9000517 	ldw	r4,20(sp)
   29e64:	00c00384 	movi	r3,14
   29e68:	19008616 	blt	r3,r4,2a084 <_dtoa_r+0x990>
   29e6c:	200490fa 	slli	r2,r4,3
   29e70:	00c000f4 	movhi	r3,3
   29e74:	d9802217 	ldw	r6,136(sp)
   29e78:	18d90204 	addi	r3,r3,25608
   29e7c:	1885883a 	add	r2,r3,r2
   29e80:	14000017 	ldw	r16,0(r2)
   29e84:	14400117 	ldw	r17,4(r2)
   29e88:	30016316 	blt	r6,zero,2a418 <_dtoa_r+0xd24>
   29e8c:	800d883a 	mov	r6,r16
   29e90:	880f883a 	mov	r7,r17
   29e94:	9009883a 	mov	r4,r18
   29e98:	980b883a 	mov	r5,r19
   29e9c:	00316880 	call	31688 <__divdf3>
   29ea0:	180b883a 	mov	r5,r3
   29ea4:	1009883a 	mov	r4,r2
   29ea8:	00331dc0 	call	331dc <__fixdfsi>
   29eac:	1009883a 	mov	r4,r2
   29eb0:	102b883a 	mov	r21,r2
   29eb4:	003325c0 	call	3325c <__floatsidf>
   29eb8:	800d883a 	mov	r6,r16
   29ebc:	880f883a 	mov	r7,r17
   29ec0:	1009883a 	mov	r4,r2
   29ec4:	180b883a 	mov	r5,r3
   29ec8:	00321c80 	call	321c8 <__muldf3>
   29ecc:	100d883a 	mov	r6,r2
   29ed0:	180f883a 	mov	r7,r3
   29ed4:	9009883a 	mov	r4,r18
   29ed8:	980b883a 	mov	r5,r19
   29edc:	00328e00 	call	328e0 <__subdf3>
   29ee0:	d9c00717 	ldw	r7,28(sp)
   29ee4:	1009883a 	mov	r4,r2
   29ee8:	a8800c04 	addi	r2,r21,48
   29eec:	38800005 	stb	r2,0(r7)
   29ef0:	3dc00044 	addi	r23,r7,1
   29ef4:	d9c00617 	ldw	r7,24(sp)
   29ef8:	01800044 	movi	r6,1
   29efc:	180b883a 	mov	r5,r3
   29f00:	2005883a 	mov	r2,r4
   29f04:	39803826 	beq	r7,r6,29fe8 <_dtoa_r+0x8f4>
   29f08:	000d883a 	mov	r6,zero
   29f0c:	01d00934 	movhi	r7,16420
   29f10:	00321c80 	call	321c8 <__muldf3>
   29f14:	000d883a 	mov	r6,zero
   29f18:	000f883a 	mov	r7,zero
   29f1c:	1009883a 	mov	r4,r2
   29f20:	180b883a 	mov	r5,r3
   29f24:	1025883a 	mov	r18,r2
   29f28:	1827883a 	mov	r19,r3
   29f2c:	0031f700 	call	31f70 <__eqdf2>
   29f30:	103f9a26 	beq	r2,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   29f34:	d9c00617 	ldw	r7,24(sp)
   29f38:	d8c00717 	ldw	r3,28(sp)
   29f3c:	b829883a 	mov	r20,r23
   29f40:	38bfffc4 	addi	r2,r7,-1
   29f44:	18ad883a 	add	r22,r3,r2
   29f48:	00000a06 	br	29f74 <_dtoa_r+0x880>
   29f4c:	00321c80 	call	321c8 <__muldf3>
   29f50:	000d883a 	mov	r6,zero
   29f54:	000f883a 	mov	r7,zero
   29f58:	1009883a 	mov	r4,r2
   29f5c:	180b883a 	mov	r5,r3
   29f60:	1025883a 	mov	r18,r2
   29f64:	1827883a 	mov	r19,r3
   29f68:	b829883a 	mov	r20,r23
   29f6c:	0031f700 	call	31f70 <__eqdf2>
   29f70:	103f8a26 	beq	r2,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   29f74:	800d883a 	mov	r6,r16
   29f78:	880f883a 	mov	r7,r17
   29f7c:	9009883a 	mov	r4,r18
   29f80:	980b883a 	mov	r5,r19
   29f84:	00316880 	call	31688 <__divdf3>
   29f88:	180b883a 	mov	r5,r3
   29f8c:	1009883a 	mov	r4,r2
   29f90:	00331dc0 	call	331dc <__fixdfsi>
   29f94:	1009883a 	mov	r4,r2
   29f98:	102b883a 	mov	r21,r2
   29f9c:	003325c0 	call	3325c <__floatsidf>
   29fa0:	800d883a 	mov	r6,r16
   29fa4:	880f883a 	mov	r7,r17
   29fa8:	1009883a 	mov	r4,r2
   29fac:	180b883a 	mov	r5,r3
   29fb0:	00321c80 	call	321c8 <__muldf3>
   29fb4:	100d883a 	mov	r6,r2
   29fb8:	180f883a 	mov	r7,r3
   29fbc:	9009883a 	mov	r4,r18
   29fc0:	980b883a 	mov	r5,r19
   29fc4:	00328e00 	call	328e0 <__subdf3>
   29fc8:	aa000c04 	addi	r8,r21,48
   29fcc:	a2000005 	stb	r8,0(r20)
   29fd0:	000d883a 	mov	r6,zero
   29fd4:	01d00934 	movhi	r7,16420
   29fd8:	1009883a 	mov	r4,r2
   29fdc:	180b883a 	mov	r5,r3
   29fe0:	a5c00044 	addi	r23,r20,1
   29fe4:	b53fd91e 	bne	r22,r20,29f4c <__alt_mem_sdram_controller_0+0xc0029f4c>
   29fe8:	100d883a 	mov	r6,r2
   29fec:	180f883a 	mov	r7,r3
   29ff0:	1009883a 	mov	r4,r2
   29ff4:	180b883a 	mov	r5,r3
   29ff8:	0030ddc0 	call	30ddc <__adddf3>
   29ffc:	100d883a 	mov	r6,r2
   2a000:	180f883a 	mov	r7,r3
   2a004:	8009883a 	mov	r4,r16
   2a008:	880b883a 	mov	r5,r17
   2a00c:	1027883a 	mov	r19,r2
   2a010:	1825883a 	mov	r18,r3
   2a014:	00320d40 	call	320d4 <__ledf2>
   2a018:	10000816 	blt	r2,zero,2a03c <_dtoa_r+0x948>
   2a01c:	980d883a 	mov	r6,r19
   2a020:	900f883a 	mov	r7,r18
   2a024:	8009883a 	mov	r4,r16
   2a028:	880b883a 	mov	r5,r17
   2a02c:	0031f700 	call	31f70 <__eqdf2>
   2a030:	103f5a1e 	bne	r2,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a034:	ad40004c 	andi	r21,r21,1
   2a038:	a83f5826 	beq	r21,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a03c:	bd3fffc3 	ldbu	r20,-1(r23)
   2a040:	b8bfffc4 	addi	r2,r23,-1
   2a044:	1007883a 	mov	r3,r2
   2a048:	01400e44 	movi	r5,57
   2a04c:	d9800717 	ldw	r6,28(sp)
   2a050:	00000506 	br	2a068 <_dtoa_r+0x974>
   2a054:	18ffffc4 	addi	r3,r3,-1
   2a058:	11824726 	beq	r2,r6,2a978 <_dtoa_r+0x1284>
   2a05c:	1d000003 	ldbu	r20,0(r3)
   2a060:	102f883a 	mov	r23,r2
   2a064:	10bfffc4 	addi	r2,r2,-1
   2a068:	a1003fcc 	andi	r4,r20,255
   2a06c:	2100201c 	xori	r4,r4,128
   2a070:	213fe004 	addi	r4,r4,-128
   2a074:	217ff726 	beq	r4,r5,2a054 <__alt_mem_sdram_controller_0+0xc002a054>
   2a078:	a2000044 	addi	r8,r20,1
   2a07c:	12000005 	stb	r8,0(r2)
   2a080:	003f4606 	br	29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a084:	d9000b17 	ldw	r4,44(sp)
   2a088:	2000c826 	beq	r4,zero,2a3ac <_dtoa_r+0xcb8>
   2a08c:	d9800317 	ldw	r6,12(sp)
   2a090:	00c00044 	movi	r3,1
   2a094:	1980f90e 	bge	r3,r6,2a47c <_dtoa_r+0xd88>
   2a098:	d8800617 	ldw	r2,24(sp)
   2a09c:	d8c00a17 	ldw	r3,40(sp)
   2a0a0:	157fffc4 	addi	r21,r2,-1
   2a0a4:	1d41f316 	blt	r3,r21,2a874 <_dtoa_r+0x1180>
   2a0a8:	1d6bc83a 	sub	r21,r3,r21
   2a0ac:	d9c00617 	ldw	r7,24(sp)
   2a0b0:	3802aa16 	blt	r7,zero,2ab5c <_dtoa_r+0x1468>
   2a0b4:	dd000817 	ldw	r20,32(sp)
   2a0b8:	d8800617 	ldw	r2,24(sp)
   2a0bc:	d8c00817 	ldw	r3,32(sp)
   2a0c0:	01400044 	movi	r5,1
   2a0c4:	e009883a 	mov	r4,fp
   2a0c8:	1887883a 	add	r3,r3,r2
   2a0cc:	d8c00815 	stw	r3,32(sp)
   2a0d0:	b0ad883a 	add	r22,r22,r2
   2a0d4:	002bc640 	call	2bc64 <__i2b>
   2a0d8:	1023883a 	mov	r17,r2
   2a0dc:	a0000826 	beq	r20,zero,2a100 <_dtoa_r+0xa0c>
   2a0e0:	0580070e 	bge	zero,r22,2a100 <_dtoa_r+0xa0c>
   2a0e4:	a005883a 	mov	r2,r20
   2a0e8:	b500b916 	blt	r22,r20,2a3d0 <_dtoa_r+0xcdc>
   2a0ec:	d9000817 	ldw	r4,32(sp)
   2a0f0:	a0a9c83a 	sub	r20,r20,r2
   2a0f4:	b0adc83a 	sub	r22,r22,r2
   2a0f8:	2089c83a 	sub	r4,r4,r2
   2a0fc:	d9000815 	stw	r4,32(sp)
   2a100:	d9800a17 	ldw	r6,40(sp)
   2a104:	0181810e 	bge	zero,r6,2a70c <_dtoa_r+0x1018>
   2a108:	d9c00b17 	ldw	r7,44(sp)
   2a10c:	3800b326 	beq	r7,zero,2a3dc <_dtoa_r+0xce8>
   2a110:	a800b226 	beq	r21,zero,2a3dc <_dtoa_r+0xce8>
   2a114:	880b883a 	mov	r5,r17
   2a118:	a80d883a 	mov	r6,r21
   2a11c:	e009883a 	mov	r4,fp
   2a120:	002be980 	call	2be98 <__pow5mult>
   2a124:	d9800917 	ldw	r6,36(sp)
   2a128:	100b883a 	mov	r5,r2
   2a12c:	e009883a 	mov	r4,fp
   2a130:	1023883a 	mov	r17,r2
   2a134:	002bca00 	call	2bca0 <__multiply>
   2a138:	1021883a 	mov	r16,r2
   2a13c:	d8800a17 	ldw	r2,40(sp)
   2a140:	d9400917 	ldw	r5,36(sp)
   2a144:	e009883a 	mov	r4,fp
   2a148:	1545c83a 	sub	r2,r2,r21
   2a14c:	d8800a15 	stw	r2,40(sp)
   2a150:	002b9000 	call	2b900 <_Bfree>
   2a154:	d8c00a17 	ldw	r3,40(sp)
   2a158:	18009f1e 	bne	r3,zero,2a3d8 <_dtoa_r+0xce4>
   2a15c:	05c00044 	movi	r23,1
   2a160:	e009883a 	mov	r4,fp
   2a164:	b80b883a 	mov	r5,r23
   2a168:	002bc640 	call	2bc64 <__i2b>
   2a16c:	d9000d17 	ldw	r4,52(sp)
   2a170:	102b883a 	mov	r21,r2
   2a174:	2000ce26 	beq	r4,zero,2a4b0 <_dtoa_r+0xdbc>
   2a178:	200d883a 	mov	r6,r4
   2a17c:	100b883a 	mov	r5,r2
   2a180:	e009883a 	mov	r4,fp
   2a184:	002be980 	call	2be98 <__pow5mult>
   2a188:	d9800317 	ldw	r6,12(sp)
   2a18c:	102b883a 	mov	r21,r2
   2a190:	b981810e 	bge	r23,r6,2a798 <_dtoa_r+0x10a4>
   2a194:	0027883a 	mov	r19,zero
   2a198:	a8800417 	ldw	r2,16(r21)
   2a19c:	05c00804 	movi	r23,32
   2a1a0:	10800104 	addi	r2,r2,4
   2a1a4:	1085883a 	add	r2,r2,r2
   2a1a8:	1085883a 	add	r2,r2,r2
   2a1ac:	a885883a 	add	r2,r21,r2
   2a1b0:	11000017 	ldw	r4,0(r2)
   2a1b4:	002bb4c0 	call	2bb4c <__hi0bits>
   2a1b8:	b885c83a 	sub	r2,r23,r2
   2a1bc:	1585883a 	add	r2,r2,r22
   2a1c0:	108007cc 	andi	r2,r2,31
   2a1c4:	1000b326 	beq	r2,zero,2a494 <_dtoa_r+0xda0>
   2a1c8:	00c00804 	movi	r3,32
   2a1cc:	1887c83a 	sub	r3,r3,r2
   2a1d0:	01000104 	movi	r4,4
   2a1d4:	20c2cd0e 	bge	r4,r3,2ad0c <_dtoa_r+0x1618>
   2a1d8:	00c00704 	movi	r3,28
   2a1dc:	1885c83a 	sub	r2,r3,r2
   2a1e0:	d8c00817 	ldw	r3,32(sp)
   2a1e4:	a0a9883a 	add	r20,r20,r2
   2a1e8:	b0ad883a 	add	r22,r22,r2
   2a1ec:	1887883a 	add	r3,r3,r2
   2a1f0:	d8c00815 	stw	r3,32(sp)
   2a1f4:	d9800817 	ldw	r6,32(sp)
   2a1f8:	0180040e 	bge	zero,r6,2a20c <_dtoa_r+0xb18>
   2a1fc:	800b883a 	mov	r5,r16
   2a200:	e009883a 	mov	r4,fp
   2a204:	002bfd80 	call	2bfd8 <__lshift>
   2a208:	1021883a 	mov	r16,r2
   2a20c:	0580050e 	bge	zero,r22,2a224 <_dtoa_r+0xb30>
   2a210:	a80b883a 	mov	r5,r21
   2a214:	b00d883a 	mov	r6,r22
   2a218:	e009883a 	mov	r4,fp
   2a21c:	002bfd80 	call	2bfd8 <__lshift>
   2a220:	102b883a 	mov	r21,r2
   2a224:	d9c00e17 	ldw	r7,56(sp)
   2a228:	3801211e 	bne	r7,zero,2a6b0 <_dtoa_r+0xfbc>
   2a22c:	d9800617 	ldw	r6,24(sp)
   2a230:	0181380e 	bge	zero,r6,2a714 <_dtoa_r+0x1020>
   2a234:	d8c00b17 	ldw	r3,44(sp)
   2a238:	1800ab1e 	bne	r3,zero,2a4e8 <_dtoa_r+0xdf4>
   2a23c:	dc800717 	ldw	r18,28(sp)
   2a240:	dcc00617 	ldw	r19,24(sp)
   2a244:	9029883a 	mov	r20,r18
   2a248:	00000206 	br	2a254 <_dtoa_r+0xb60>
   2a24c:	002b9280 	call	2b928 <__multadd>
   2a250:	1021883a 	mov	r16,r2
   2a254:	a80b883a 	mov	r5,r21
   2a258:	8009883a 	mov	r4,r16
   2a25c:	00294f40 	call	294f4 <quorem>
   2a260:	10800c04 	addi	r2,r2,48
   2a264:	90800005 	stb	r2,0(r18)
   2a268:	94800044 	addi	r18,r18,1
   2a26c:	9507c83a 	sub	r3,r18,r20
   2a270:	000f883a 	mov	r7,zero
   2a274:	01800284 	movi	r6,10
   2a278:	800b883a 	mov	r5,r16
   2a27c:	e009883a 	mov	r4,fp
   2a280:	1cfff216 	blt	r3,r19,2a24c <__alt_mem_sdram_controller_0+0xc002a24c>
   2a284:	1011883a 	mov	r8,r2
   2a288:	d8800617 	ldw	r2,24(sp)
   2a28c:	0082370e 	bge	zero,r2,2ab6c <_dtoa_r+0x1478>
   2a290:	d9000717 	ldw	r4,28(sp)
   2a294:	0025883a 	mov	r18,zero
   2a298:	20af883a 	add	r23,r4,r2
   2a29c:	01800044 	movi	r6,1
   2a2a0:	800b883a 	mov	r5,r16
   2a2a4:	e009883a 	mov	r4,fp
   2a2a8:	da001715 	stw	r8,92(sp)
   2a2ac:	002bfd80 	call	2bfd8 <__lshift>
   2a2b0:	a80b883a 	mov	r5,r21
   2a2b4:	1009883a 	mov	r4,r2
   2a2b8:	d8800915 	stw	r2,36(sp)
   2a2bc:	002c1200 	call	2c120 <__mcmp>
   2a2c0:	da001717 	ldw	r8,92(sp)
   2a2c4:	0081800e 	bge	zero,r2,2a8c8 <_dtoa_r+0x11d4>
   2a2c8:	b93fffc3 	ldbu	r4,-1(r23)
   2a2cc:	b8bfffc4 	addi	r2,r23,-1
   2a2d0:	1007883a 	mov	r3,r2
   2a2d4:	01800e44 	movi	r6,57
   2a2d8:	d9c00717 	ldw	r7,28(sp)
   2a2dc:	00000506 	br	2a2f4 <_dtoa_r+0xc00>
   2a2e0:	18ffffc4 	addi	r3,r3,-1
   2a2e4:	11c12326 	beq	r2,r7,2a774 <_dtoa_r+0x1080>
   2a2e8:	19000003 	ldbu	r4,0(r3)
   2a2ec:	102f883a 	mov	r23,r2
   2a2f0:	10bfffc4 	addi	r2,r2,-1
   2a2f4:	21403fcc 	andi	r5,r4,255
   2a2f8:	2940201c 	xori	r5,r5,128
   2a2fc:	297fe004 	addi	r5,r5,-128
   2a300:	29bff726 	beq	r5,r6,2a2e0 <__alt_mem_sdram_controller_0+0xc002a2e0>
   2a304:	21000044 	addi	r4,r4,1
   2a308:	11000005 	stb	r4,0(r2)
   2a30c:	a80b883a 	mov	r5,r21
   2a310:	e009883a 	mov	r4,fp
   2a314:	002b9000 	call	2b900 <_Bfree>
   2a318:	883ea026 	beq	r17,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a31c:	90000426 	beq	r18,zero,2a330 <_dtoa_r+0xc3c>
   2a320:	94400326 	beq	r18,r17,2a330 <_dtoa_r+0xc3c>
   2a324:	900b883a 	mov	r5,r18
   2a328:	e009883a 	mov	r4,fp
   2a32c:	002b9000 	call	2b900 <_Bfree>
   2a330:	880b883a 	mov	r5,r17
   2a334:	e009883a 	mov	r4,fp
   2a338:	002b9000 	call	2b900 <_Bfree>
   2a33c:	003e9706 	br	29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a340:	01800044 	movi	r6,1
   2a344:	d9800e15 	stw	r6,56(sp)
   2a348:	003d9606 	br	299a4 <__alt_mem_sdram_controller_0+0xc00299a4>
   2a34c:	d8800817 	ldw	r2,32(sp)
   2a350:	d8c00517 	ldw	r3,20(sp)
   2a354:	d8000d15 	stw	zero,52(sp)
   2a358:	10c5c83a 	sub	r2,r2,r3
   2a35c:	00c9c83a 	sub	r4,zero,r3
   2a360:	d8800815 	stw	r2,32(sp)
   2a364:	d9000a15 	stw	r4,40(sp)
   2a368:	003d9706 	br	299c8 <__alt_mem_sdram_controller_0+0xc00299c8>
   2a36c:	05adc83a 	sub	r22,zero,r22
   2a370:	dd800815 	stw	r22,32(sp)
   2a374:	002d883a 	mov	r22,zero
   2a378:	003d8e06 	br	299b4 <__alt_mem_sdram_controller_0+0xc00299b4>
   2a37c:	d9000517 	ldw	r4,20(sp)
   2a380:	003325c0 	call	3325c <__floatsidf>
   2a384:	100d883a 	mov	r6,r2
   2a388:	180f883a 	mov	r7,r3
   2a38c:	a009883a 	mov	r4,r20
   2a390:	880b883a 	mov	r5,r17
   2a394:	0031f700 	call	31f70 <__eqdf2>
   2a398:	103d7126 	beq	r2,zero,29960 <__alt_mem_sdram_controller_0+0xc0029960>
   2a39c:	d9c00517 	ldw	r7,20(sp)
   2a3a0:	39ffffc4 	addi	r7,r7,-1
   2a3a4:	d9c00515 	stw	r7,20(sp)
   2a3a8:	003d6d06 	br	29960 <__alt_mem_sdram_controller_0+0xc0029960>
   2a3ac:	dd400a17 	ldw	r21,40(sp)
   2a3b0:	dd000817 	ldw	r20,32(sp)
   2a3b4:	0023883a 	mov	r17,zero
   2a3b8:	003f4806 	br	2a0dc <__alt_mem_sdram_controller_0+0xc002a0dc>
   2a3bc:	10e3c83a 	sub	r17,r2,r3
   2a3c0:	9448983a 	sll	r4,r18,r17
   2a3c4:	003d3206 	br	29890 <__alt_mem_sdram_controller_0+0xc0029890>
   2a3c8:	d8000e15 	stw	zero,56(sp)
   2a3cc:	003d7506 	br	299a4 <__alt_mem_sdram_controller_0+0xc00299a4>
   2a3d0:	b005883a 	mov	r2,r22
   2a3d4:	003f4506 	br	2a0ec <__alt_mem_sdram_controller_0+0xc002a0ec>
   2a3d8:	dc000915 	stw	r16,36(sp)
   2a3dc:	d9800a17 	ldw	r6,40(sp)
   2a3e0:	d9400917 	ldw	r5,36(sp)
   2a3e4:	e009883a 	mov	r4,fp
   2a3e8:	002be980 	call	2be98 <__pow5mult>
   2a3ec:	1021883a 	mov	r16,r2
   2a3f0:	003f5a06 	br	2a15c <__alt_mem_sdram_controller_0+0xc002a15c>
   2a3f4:	01c00044 	movi	r7,1
   2a3f8:	d9c00b15 	stw	r7,44(sp)
   2a3fc:	d8802217 	ldw	r2,136(sp)
   2a400:	0081280e 	bge	zero,r2,2a8a4 <_dtoa_r+0x11b0>
   2a404:	100d883a 	mov	r6,r2
   2a408:	1021883a 	mov	r16,r2
   2a40c:	d8800c15 	stw	r2,48(sp)
   2a410:	d8800615 	stw	r2,24(sp)
   2a414:	003d8806 	br	29a38 <__alt_mem_sdram_controller_0+0xc0029a38>
   2a418:	d8800617 	ldw	r2,24(sp)
   2a41c:	00be9b16 	blt	zero,r2,29e8c <__alt_mem_sdram_controller_0+0xc0029e8c>
   2a420:	10010f1e 	bne	r2,zero,2a860 <_dtoa_r+0x116c>
   2a424:	880b883a 	mov	r5,r17
   2a428:	000d883a 	mov	r6,zero
   2a42c:	01d00534 	movhi	r7,16404
   2a430:	8009883a 	mov	r4,r16
   2a434:	00321c80 	call	321c8 <__muldf3>
   2a438:	900d883a 	mov	r6,r18
   2a43c:	980f883a 	mov	r7,r19
   2a440:	1009883a 	mov	r4,r2
   2a444:	180b883a 	mov	r5,r3
   2a448:	0031ff80 	call	31ff8 <__gedf2>
   2a44c:	002b883a 	mov	r21,zero
   2a450:	0023883a 	mov	r17,zero
   2a454:	1000bf16 	blt	r2,zero,2a754 <_dtoa_r+0x1060>
   2a458:	d9802217 	ldw	r6,136(sp)
   2a45c:	ddc00717 	ldw	r23,28(sp)
   2a460:	018c303a 	nor	r6,zero,r6
   2a464:	d9800515 	stw	r6,20(sp)
   2a468:	a80b883a 	mov	r5,r21
   2a46c:	e009883a 	mov	r4,fp
   2a470:	002b9000 	call	2b900 <_Bfree>
   2a474:	883e4926 	beq	r17,zero,29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2a478:	003fad06 	br	2a330 <__alt_mem_sdram_controller_0+0xc002a330>
   2a47c:	d9c01117 	ldw	r7,68(sp)
   2a480:	3801bc26 	beq	r7,zero,2ab74 <_dtoa_r+0x1480>
   2a484:	10810cc4 	addi	r2,r2,1075
   2a488:	dd400a17 	ldw	r21,40(sp)
   2a48c:	dd000817 	ldw	r20,32(sp)
   2a490:	003f0a06 	br	2a0bc <__alt_mem_sdram_controller_0+0xc002a0bc>
   2a494:	00800704 	movi	r2,28
   2a498:	d9000817 	ldw	r4,32(sp)
   2a49c:	a0a9883a 	add	r20,r20,r2
   2a4a0:	b0ad883a 	add	r22,r22,r2
   2a4a4:	2089883a 	add	r4,r4,r2
   2a4a8:	d9000815 	stw	r4,32(sp)
   2a4ac:	003f5106 	br	2a1f4 <__alt_mem_sdram_controller_0+0xc002a1f4>
   2a4b0:	d8c00317 	ldw	r3,12(sp)
   2a4b4:	b8c1fc0e 	bge	r23,r3,2aca8 <_dtoa_r+0x15b4>
   2a4b8:	0027883a 	mov	r19,zero
   2a4bc:	b805883a 	mov	r2,r23
   2a4c0:	003f3e06 	br	2a1bc <__alt_mem_sdram_controller_0+0xc002a1bc>
   2a4c4:	880b883a 	mov	r5,r17
   2a4c8:	e009883a 	mov	r4,fp
   2a4cc:	000f883a 	mov	r7,zero
   2a4d0:	01800284 	movi	r6,10
   2a4d4:	002b9280 	call	2b928 <__multadd>
   2a4d8:	d9000c17 	ldw	r4,48(sp)
   2a4dc:	1023883a 	mov	r17,r2
   2a4e0:	0102040e 	bge	zero,r4,2acf4 <_dtoa_r+0x1600>
   2a4e4:	d9000615 	stw	r4,24(sp)
   2a4e8:	0500050e 	bge	zero,r20,2a500 <_dtoa_r+0xe0c>
   2a4ec:	880b883a 	mov	r5,r17
   2a4f0:	a00d883a 	mov	r6,r20
   2a4f4:	e009883a 	mov	r4,fp
   2a4f8:	002bfd80 	call	2bfd8 <__lshift>
   2a4fc:	1023883a 	mov	r17,r2
   2a500:	9801241e 	bne	r19,zero,2a994 <_dtoa_r+0x12a0>
   2a504:	8829883a 	mov	r20,r17
   2a508:	d9000617 	ldw	r4,24(sp)
   2a50c:	dcc00717 	ldw	r19,28(sp)
   2a510:	9480004c 	andi	r18,r18,1
   2a514:	20bfffc4 	addi	r2,r4,-1
   2a518:	9885883a 	add	r2,r19,r2
   2a51c:	d8800415 	stw	r2,16(sp)
   2a520:	dc800615 	stw	r18,24(sp)
   2a524:	a80b883a 	mov	r5,r21
   2a528:	8009883a 	mov	r4,r16
   2a52c:	00294f40 	call	294f4 <quorem>
   2a530:	880b883a 	mov	r5,r17
   2a534:	8009883a 	mov	r4,r16
   2a538:	102f883a 	mov	r23,r2
   2a53c:	002c1200 	call	2c120 <__mcmp>
   2a540:	a80b883a 	mov	r5,r21
   2a544:	a00d883a 	mov	r6,r20
   2a548:	e009883a 	mov	r4,fp
   2a54c:	102d883a 	mov	r22,r2
   2a550:	002c1800 	call	2c180 <__mdiff>
   2a554:	1007883a 	mov	r3,r2
   2a558:	10800317 	ldw	r2,12(r2)
   2a55c:	bc800c04 	addi	r18,r23,48
   2a560:	180b883a 	mov	r5,r3
   2a564:	10004e1e 	bne	r2,zero,2a6a0 <_dtoa_r+0xfac>
   2a568:	8009883a 	mov	r4,r16
   2a56c:	d8c01615 	stw	r3,88(sp)
   2a570:	002c1200 	call	2c120 <__mcmp>
   2a574:	d8c01617 	ldw	r3,88(sp)
   2a578:	e009883a 	mov	r4,fp
   2a57c:	d8801615 	stw	r2,88(sp)
   2a580:	180b883a 	mov	r5,r3
   2a584:	002b9000 	call	2b900 <_Bfree>
   2a588:	d8801617 	ldw	r2,88(sp)
   2a58c:	1000041e 	bne	r2,zero,2a5a0 <_dtoa_r+0xeac>
   2a590:	d9800317 	ldw	r6,12(sp)
   2a594:	3000021e 	bne	r6,zero,2a5a0 <_dtoa_r+0xeac>
   2a598:	d8c00617 	ldw	r3,24(sp)
   2a59c:	18003726 	beq	r3,zero,2a67c <_dtoa_r+0xf88>
   2a5a0:	b0002016 	blt	r22,zero,2a624 <_dtoa_r+0xf30>
   2a5a4:	b000041e 	bne	r22,zero,2a5b8 <_dtoa_r+0xec4>
   2a5a8:	d9000317 	ldw	r4,12(sp)
   2a5ac:	2000021e 	bne	r4,zero,2a5b8 <_dtoa_r+0xec4>
   2a5b0:	d8c00617 	ldw	r3,24(sp)
   2a5b4:	18001b26 	beq	r3,zero,2a624 <_dtoa_r+0xf30>
   2a5b8:	00810716 	blt	zero,r2,2a9d8 <_dtoa_r+0x12e4>
   2a5bc:	d8c00417 	ldw	r3,16(sp)
   2a5c0:	9d800044 	addi	r22,r19,1
   2a5c4:	9c800005 	stb	r18,0(r19)
   2a5c8:	b02f883a 	mov	r23,r22
   2a5cc:	98c10626 	beq	r19,r3,2a9e8 <_dtoa_r+0x12f4>
   2a5d0:	800b883a 	mov	r5,r16
   2a5d4:	000f883a 	mov	r7,zero
   2a5d8:	01800284 	movi	r6,10
   2a5dc:	e009883a 	mov	r4,fp
   2a5e0:	002b9280 	call	2b928 <__multadd>
   2a5e4:	1021883a 	mov	r16,r2
   2a5e8:	000f883a 	mov	r7,zero
   2a5ec:	01800284 	movi	r6,10
   2a5f0:	880b883a 	mov	r5,r17
   2a5f4:	e009883a 	mov	r4,fp
   2a5f8:	8d002526 	beq	r17,r20,2a690 <_dtoa_r+0xf9c>
   2a5fc:	002b9280 	call	2b928 <__multadd>
   2a600:	a00b883a 	mov	r5,r20
   2a604:	000f883a 	mov	r7,zero
   2a608:	01800284 	movi	r6,10
   2a60c:	e009883a 	mov	r4,fp
   2a610:	1023883a 	mov	r17,r2
   2a614:	002b9280 	call	2b928 <__multadd>
   2a618:	1029883a 	mov	r20,r2
   2a61c:	b027883a 	mov	r19,r22
   2a620:	003fc006 	br	2a524 <__alt_mem_sdram_controller_0+0xc002a524>
   2a624:	9011883a 	mov	r8,r18
   2a628:	00800e0e 	bge	zero,r2,2a664 <_dtoa_r+0xf70>
   2a62c:	800b883a 	mov	r5,r16
   2a630:	01800044 	movi	r6,1
   2a634:	e009883a 	mov	r4,fp
   2a638:	da001715 	stw	r8,92(sp)
   2a63c:	002bfd80 	call	2bfd8 <__lshift>
   2a640:	a80b883a 	mov	r5,r21
   2a644:	1009883a 	mov	r4,r2
   2a648:	1021883a 	mov	r16,r2
   2a64c:	002c1200 	call	2c120 <__mcmp>
   2a650:	da001717 	ldw	r8,92(sp)
   2a654:	0081960e 	bge	zero,r2,2acb0 <_dtoa_r+0x15bc>
   2a658:	00800e44 	movi	r2,57
   2a65c:	40817026 	beq	r8,r2,2ac20 <_dtoa_r+0x152c>
   2a660:	ba000c44 	addi	r8,r23,49
   2a664:	8825883a 	mov	r18,r17
   2a668:	9dc00044 	addi	r23,r19,1
   2a66c:	9a000005 	stb	r8,0(r19)
   2a670:	a023883a 	mov	r17,r20
   2a674:	dc000915 	stw	r16,36(sp)
   2a678:	003f2406 	br	2a30c <__alt_mem_sdram_controller_0+0xc002a30c>
   2a67c:	00800e44 	movi	r2,57
   2a680:	9011883a 	mov	r8,r18
   2a684:	90816626 	beq	r18,r2,2ac20 <_dtoa_r+0x152c>
   2a688:	05bff516 	blt	zero,r22,2a660 <__alt_mem_sdram_controller_0+0xc002a660>
   2a68c:	003ff506 	br	2a664 <__alt_mem_sdram_controller_0+0xc002a664>
   2a690:	002b9280 	call	2b928 <__multadd>
   2a694:	1023883a 	mov	r17,r2
   2a698:	1029883a 	mov	r20,r2
   2a69c:	003fdf06 	br	2a61c <__alt_mem_sdram_controller_0+0xc002a61c>
   2a6a0:	e009883a 	mov	r4,fp
   2a6a4:	002b9000 	call	2b900 <_Bfree>
   2a6a8:	00800044 	movi	r2,1
   2a6ac:	003fbc06 	br	2a5a0 <__alt_mem_sdram_controller_0+0xc002a5a0>
   2a6b0:	a80b883a 	mov	r5,r21
   2a6b4:	8009883a 	mov	r4,r16
   2a6b8:	002c1200 	call	2c120 <__mcmp>
   2a6bc:	103edb0e 	bge	r2,zero,2a22c <__alt_mem_sdram_controller_0+0xc002a22c>
   2a6c0:	800b883a 	mov	r5,r16
   2a6c4:	000f883a 	mov	r7,zero
   2a6c8:	01800284 	movi	r6,10
   2a6cc:	e009883a 	mov	r4,fp
   2a6d0:	002b9280 	call	2b928 <__multadd>
   2a6d4:	1021883a 	mov	r16,r2
   2a6d8:	d8800517 	ldw	r2,20(sp)
   2a6dc:	d8c00b17 	ldw	r3,44(sp)
   2a6e0:	10bfffc4 	addi	r2,r2,-1
   2a6e4:	d8800515 	stw	r2,20(sp)
   2a6e8:	183f761e 	bne	r3,zero,2a4c4 <__alt_mem_sdram_controller_0+0xc002a4c4>
   2a6ec:	d9000c17 	ldw	r4,48(sp)
   2a6f0:	0101730e 	bge	zero,r4,2acc0 <_dtoa_r+0x15cc>
   2a6f4:	d9000615 	stw	r4,24(sp)
   2a6f8:	003ed006 	br	2a23c <__alt_mem_sdram_controller_0+0xc002a23c>
   2a6fc:	00800084 	movi	r2,2
   2a700:	3081861e 	bne	r6,r2,2ad1c <_dtoa_r+0x1628>
   2a704:	d8000b15 	stw	zero,44(sp)
   2a708:	003f3c06 	br	2a3fc <__alt_mem_sdram_controller_0+0xc002a3fc>
   2a70c:	dc000917 	ldw	r16,36(sp)
   2a710:	003e9206 	br	2a15c <__alt_mem_sdram_controller_0+0xc002a15c>
   2a714:	d9c00317 	ldw	r7,12(sp)
   2a718:	00800084 	movi	r2,2
   2a71c:	11fec50e 	bge	r2,r7,2a234 <__alt_mem_sdram_controller_0+0xc002a234>
   2a720:	d9000617 	ldw	r4,24(sp)
   2a724:	20013c1e 	bne	r4,zero,2ac18 <_dtoa_r+0x1524>
   2a728:	a80b883a 	mov	r5,r21
   2a72c:	000f883a 	mov	r7,zero
   2a730:	01800144 	movi	r6,5
   2a734:	e009883a 	mov	r4,fp
   2a738:	002b9280 	call	2b928 <__multadd>
   2a73c:	100b883a 	mov	r5,r2
   2a740:	8009883a 	mov	r4,r16
   2a744:	102b883a 	mov	r21,r2
   2a748:	002c1200 	call	2c120 <__mcmp>
   2a74c:	dc000915 	stw	r16,36(sp)
   2a750:	00bf410e 	bge	zero,r2,2a458 <__alt_mem_sdram_controller_0+0xc002a458>
   2a754:	d9c00717 	ldw	r7,28(sp)
   2a758:	00800c44 	movi	r2,49
   2a75c:	38800005 	stb	r2,0(r7)
   2a760:	d8800517 	ldw	r2,20(sp)
   2a764:	3dc00044 	addi	r23,r7,1
   2a768:	10800044 	addi	r2,r2,1
   2a76c:	d8800515 	stw	r2,20(sp)
   2a770:	003f3d06 	br	2a468 <__alt_mem_sdram_controller_0+0xc002a468>
   2a774:	d9800517 	ldw	r6,20(sp)
   2a778:	d9c00717 	ldw	r7,28(sp)
   2a77c:	00800c44 	movi	r2,49
   2a780:	31800044 	addi	r6,r6,1
   2a784:	d9800515 	stw	r6,20(sp)
   2a788:	38800005 	stb	r2,0(r7)
   2a78c:	003edf06 	br	2a30c <__alt_mem_sdram_controller_0+0xc002a30c>
   2a790:	d8000b15 	stw	zero,44(sp)
   2a794:	003c9f06 	br	29a14 <__alt_mem_sdram_controller_0+0xc0029a14>
   2a798:	903e7e1e 	bne	r18,zero,2a194 <__alt_mem_sdram_controller_0+0xc002a194>
   2a79c:	00800434 	movhi	r2,16
   2a7a0:	10bfffc4 	addi	r2,r2,-1
   2a7a4:	9884703a 	and	r2,r19,r2
   2a7a8:	1000ea1e 	bne	r2,zero,2ab54 <_dtoa_r+0x1460>
   2a7ac:	9cdffc2c 	andhi	r19,r19,32752
   2a7b0:	9800e826 	beq	r19,zero,2ab54 <_dtoa_r+0x1460>
   2a7b4:	d9c00817 	ldw	r7,32(sp)
   2a7b8:	b5800044 	addi	r22,r22,1
   2a7bc:	04c00044 	movi	r19,1
   2a7c0:	39c00044 	addi	r7,r7,1
   2a7c4:	d9c00815 	stw	r7,32(sp)
   2a7c8:	d8800d17 	ldw	r2,52(sp)
   2a7cc:	103e721e 	bne	r2,zero,2a198 <__alt_mem_sdram_controller_0+0xc002a198>
   2a7d0:	00800044 	movi	r2,1
   2a7d4:	003e7906 	br	2a1bc <__alt_mem_sdram_controller_0+0xc002a1bc>
   2a7d8:	8009883a 	mov	r4,r16
   2a7dc:	003325c0 	call	3325c <__floatsidf>
   2a7e0:	d9800f17 	ldw	r6,60(sp)
   2a7e4:	d9c01017 	ldw	r7,64(sp)
   2a7e8:	1009883a 	mov	r4,r2
   2a7ec:	180b883a 	mov	r5,r3
   2a7f0:	00321c80 	call	321c8 <__muldf3>
   2a7f4:	000d883a 	mov	r6,zero
   2a7f8:	01d00734 	movhi	r7,16412
   2a7fc:	1009883a 	mov	r4,r2
   2a800:	180b883a 	mov	r5,r3
   2a804:	0030ddc0 	call	30ddc <__adddf3>
   2a808:	047f3034 	movhi	r17,64704
   2a80c:	1021883a 	mov	r16,r2
   2a810:	1c63883a 	add	r17,r3,r17
   2a814:	d9000f17 	ldw	r4,60(sp)
   2a818:	d9401017 	ldw	r5,64(sp)
   2a81c:	000d883a 	mov	r6,zero
   2a820:	01d00534 	movhi	r7,16404
   2a824:	00328e00 	call	328e0 <__subdf3>
   2a828:	800d883a 	mov	r6,r16
   2a82c:	880f883a 	mov	r7,r17
   2a830:	1009883a 	mov	r4,r2
   2a834:	180b883a 	mov	r5,r3
   2a838:	102b883a 	mov	r21,r2
   2a83c:	1829883a 	mov	r20,r3
   2a840:	0031ff80 	call	31ff8 <__gedf2>
   2a844:	00806c16 	blt	zero,r2,2a9f8 <_dtoa_r+0x1304>
   2a848:	89e0003c 	xorhi	r7,r17,32768
   2a84c:	800d883a 	mov	r6,r16
   2a850:	a809883a 	mov	r4,r21
   2a854:	a00b883a 	mov	r5,r20
   2a858:	00320d40 	call	320d4 <__ledf2>
   2a85c:	103d7e0e 	bge	r2,zero,29e58 <__alt_mem_sdram_controller_0+0xc0029e58>
   2a860:	002b883a 	mov	r21,zero
   2a864:	0023883a 	mov	r17,zero
   2a868:	003efb06 	br	2a458 <__alt_mem_sdram_controller_0+0xc002a458>
   2a86c:	d8800717 	ldw	r2,28(sp)
   2a870:	003bd006 	br	297b4 <__alt_mem_sdram_controller_0+0xc00297b4>
   2a874:	d9000a17 	ldw	r4,40(sp)
   2a878:	d9800d17 	ldw	r6,52(sp)
   2a87c:	dd400a15 	stw	r21,40(sp)
   2a880:	a905c83a 	sub	r2,r21,r4
   2a884:	308d883a 	add	r6,r6,r2
   2a888:	d9800d15 	stw	r6,52(sp)
   2a88c:	002b883a 	mov	r21,zero
   2a890:	003e0606 	br	2a0ac <__alt_mem_sdram_controller_0+0xc002a0ac>
   2a894:	9023883a 	mov	r17,r18
   2a898:	9829883a 	mov	r20,r19
   2a89c:	04000084 	movi	r16,2
   2a8a0:	003c9206 	br	29aec <__alt_mem_sdram_controller_0+0xc0029aec>
   2a8a4:	04000044 	movi	r16,1
   2a8a8:	dc000c15 	stw	r16,48(sp)
   2a8ac:	dc000615 	stw	r16,24(sp)
   2a8b0:	dc002215 	stw	r16,136(sp)
   2a8b4:	e0001115 	stw	zero,68(fp)
   2a8b8:	000b883a 	mov	r5,zero
   2a8bc:	003c6906 	br	29a64 <__alt_mem_sdram_controller_0+0xc0029a64>
   2a8c0:	3021883a 	mov	r16,r6
   2a8c4:	003ffb06 	br	2a8b4 <__alt_mem_sdram_controller_0+0xc002a8b4>
   2a8c8:	1000021e 	bne	r2,zero,2a8d4 <_dtoa_r+0x11e0>
   2a8cc:	4200004c 	andi	r8,r8,1
   2a8d0:	403e7d1e 	bne	r8,zero,2a2c8 <__alt_mem_sdram_controller_0+0xc002a2c8>
   2a8d4:	01000c04 	movi	r4,48
   2a8d8:	00000106 	br	2a8e0 <_dtoa_r+0x11ec>
   2a8dc:	102f883a 	mov	r23,r2
   2a8e0:	b8bfffc4 	addi	r2,r23,-1
   2a8e4:	10c00007 	ldb	r3,0(r2)
   2a8e8:	193ffc26 	beq	r3,r4,2a8dc <__alt_mem_sdram_controller_0+0xc002a8dc>
   2a8ec:	003e8706 	br	2a30c <__alt_mem_sdram_controller_0+0xc002a30c>
   2a8f0:	d8800517 	ldw	r2,20(sp)
   2a8f4:	00a3c83a 	sub	r17,zero,r2
   2a8f8:	8800a426 	beq	r17,zero,2ab8c <_dtoa_r+0x1498>
   2a8fc:	888003cc 	andi	r2,r17,15
   2a900:	100490fa 	slli	r2,r2,3
   2a904:	00c000f4 	movhi	r3,3
   2a908:	18d90204 	addi	r3,r3,25608
   2a90c:	1885883a 	add	r2,r3,r2
   2a910:	11800017 	ldw	r6,0(r2)
   2a914:	11c00117 	ldw	r7,4(r2)
   2a918:	9009883a 	mov	r4,r18
   2a91c:	980b883a 	mov	r5,r19
   2a920:	8823d13a 	srai	r17,r17,4
   2a924:	00321c80 	call	321c8 <__muldf3>
   2a928:	d8800f15 	stw	r2,60(sp)
   2a92c:	d8c01015 	stw	r3,64(sp)
   2a930:	8800e826 	beq	r17,zero,2acd4 <_dtoa_r+0x15e0>
   2a934:	050000f4 	movhi	r20,3
   2a938:	a518f804 	addi	r20,r20,25568
   2a93c:	04000084 	movi	r16,2
   2a940:	8980004c 	andi	r6,r17,1
   2a944:	1009883a 	mov	r4,r2
   2a948:	8823d07a 	srai	r17,r17,1
   2a94c:	180b883a 	mov	r5,r3
   2a950:	30000426 	beq	r6,zero,2a964 <_dtoa_r+0x1270>
   2a954:	a1800017 	ldw	r6,0(r20)
   2a958:	a1c00117 	ldw	r7,4(r20)
   2a95c:	84000044 	addi	r16,r16,1
   2a960:	00321c80 	call	321c8 <__muldf3>
   2a964:	a5000204 	addi	r20,r20,8
   2a968:	883ff51e 	bne	r17,zero,2a940 <__alt_mem_sdram_controller_0+0xc002a940>
   2a96c:	d8800f15 	stw	r2,60(sp)
   2a970:	d8c01015 	stw	r3,64(sp)
   2a974:	003c7606 	br	29b50 <__alt_mem_sdram_controller_0+0xc0029b50>
   2a978:	00c00c04 	movi	r3,48
   2a97c:	10c00005 	stb	r3,0(r2)
   2a980:	d8c00517 	ldw	r3,20(sp)
   2a984:	bd3fffc3 	ldbu	r20,-1(r23)
   2a988:	18c00044 	addi	r3,r3,1
   2a98c:	d8c00515 	stw	r3,20(sp)
   2a990:	003db906 	br	2a078 <__alt_mem_sdram_controller_0+0xc002a078>
   2a994:	89400117 	ldw	r5,4(r17)
   2a998:	e009883a 	mov	r4,fp
   2a99c:	002b8580 	call	2b858 <_Balloc>
   2a9a0:	89800417 	ldw	r6,16(r17)
   2a9a4:	89400304 	addi	r5,r17,12
   2a9a8:	11000304 	addi	r4,r2,12
   2a9ac:	31800084 	addi	r6,r6,2
   2a9b0:	318d883a 	add	r6,r6,r6
   2a9b4:	318d883a 	add	r6,r6,r6
   2a9b8:	1027883a 	mov	r19,r2
   2a9bc:	002b5b40 	call	2b5b4 <memcpy>
   2a9c0:	01800044 	movi	r6,1
   2a9c4:	980b883a 	mov	r5,r19
   2a9c8:	e009883a 	mov	r4,fp
   2a9cc:	002bfd80 	call	2bfd8 <__lshift>
   2a9d0:	1029883a 	mov	r20,r2
   2a9d4:	003ecc06 	br	2a508 <__alt_mem_sdram_controller_0+0xc002a508>
   2a9d8:	00800e44 	movi	r2,57
   2a9dc:	90809026 	beq	r18,r2,2ac20 <_dtoa_r+0x152c>
   2a9e0:	92000044 	addi	r8,r18,1
   2a9e4:	003f1f06 	br	2a664 <__alt_mem_sdram_controller_0+0xc002a664>
   2a9e8:	9011883a 	mov	r8,r18
   2a9ec:	8825883a 	mov	r18,r17
   2a9f0:	a023883a 	mov	r17,r20
   2a9f4:	003e2906 	br	2a29c <__alt_mem_sdram_controller_0+0xc002a29c>
   2a9f8:	002b883a 	mov	r21,zero
   2a9fc:	0023883a 	mov	r17,zero
   2aa00:	003f5406 	br	2a754 <__alt_mem_sdram_controller_0+0xc002a754>
   2aa04:	61bfffc4 	addi	r6,r12,-1
   2aa08:	300490fa 	slli	r2,r6,3
   2aa0c:	00c000f4 	movhi	r3,3
   2aa10:	18d90204 	addi	r3,r3,25608
   2aa14:	1885883a 	add	r2,r3,r2
   2aa18:	11000017 	ldw	r4,0(r2)
   2aa1c:	11400117 	ldw	r5,4(r2)
   2aa20:	d8800717 	ldw	r2,28(sp)
   2aa24:	880f883a 	mov	r7,r17
   2aa28:	d9801215 	stw	r6,72(sp)
   2aa2c:	800d883a 	mov	r6,r16
   2aa30:	db001615 	stw	r12,88(sp)
   2aa34:	15c00044 	addi	r23,r2,1
   2aa38:	00321c80 	call	321c8 <__muldf3>
   2aa3c:	d9401017 	ldw	r5,64(sp)
   2aa40:	d9000f17 	ldw	r4,60(sp)
   2aa44:	d8c01515 	stw	r3,84(sp)
   2aa48:	d8801415 	stw	r2,80(sp)
   2aa4c:	00331dc0 	call	331dc <__fixdfsi>
   2aa50:	1009883a 	mov	r4,r2
   2aa54:	1021883a 	mov	r16,r2
   2aa58:	003325c0 	call	3325c <__floatsidf>
   2aa5c:	d9000f17 	ldw	r4,60(sp)
   2aa60:	d9401017 	ldw	r5,64(sp)
   2aa64:	100d883a 	mov	r6,r2
   2aa68:	180f883a 	mov	r7,r3
   2aa6c:	00328e00 	call	328e0 <__subdf3>
   2aa70:	1829883a 	mov	r20,r3
   2aa74:	d8c00717 	ldw	r3,28(sp)
   2aa78:	84000c04 	addi	r16,r16,48
   2aa7c:	1023883a 	mov	r17,r2
   2aa80:	1c000005 	stb	r16,0(r3)
   2aa84:	db001617 	ldw	r12,88(sp)
   2aa88:	00800044 	movi	r2,1
   2aa8c:	60802226 	beq	r12,r2,2ab18 <_dtoa_r+0x1424>
   2aa90:	d9c00717 	ldw	r7,28(sp)
   2aa94:	8805883a 	mov	r2,r17
   2aa98:	b82b883a 	mov	r21,r23
   2aa9c:	3b19883a 	add	r12,r7,r12
   2aaa0:	6023883a 	mov	r17,r12
   2aaa4:	a007883a 	mov	r3,r20
   2aaa8:	dc800f15 	stw	r18,60(sp)
   2aaac:	000d883a 	mov	r6,zero
   2aab0:	01d00934 	movhi	r7,16420
   2aab4:	1009883a 	mov	r4,r2
   2aab8:	180b883a 	mov	r5,r3
   2aabc:	00321c80 	call	321c8 <__muldf3>
   2aac0:	180b883a 	mov	r5,r3
   2aac4:	1009883a 	mov	r4,r2
   2aac8:	1829883a 	mov	r20,r3
   2aacc:	1025883a 	mov	r18,r2
   2aad0:	00331dc0 	call	331dc <__fixdfsi>
   2aad4:	1009883a 	mov	r4,r2
   2aad8:	1021883a 	mov	r16,r2
   2aadc:	003325c0 	call	3325c <__floatsidf>
   2aae0:	100d883a 	mov	r6,r2
   2aae4:	180f883a 	mov	r7,r3
   2aae8:	9009883a 	mov	r4,r18
   2aaec:	a00b883a 	mov	r5,r20
   2aaf0:	84000c04 	addi	r16,r16,48
   2aaf4:	00328e00 	call	328e0 <__subdf3>
   2aaf8:	ad400044 	addi	r21,r21,1
   2aafc:	ac3fffc5 	stb	r16,-1(r21)
   2ab00:	ac7fea1e 	bne	r21,r17,2aaac <__alt_mem_sdram_controller_0+0xc002aaac>
   2ab04:	1023883a 	mov	r17,r2
   2ab08:	d8801217 	ldw	r2,72(sp)
   2ab0c:	dc800f17 	ldw	r18,60(sp)
   2ab10:	1829883a 	mov	r20,r3
   2ab14:	b8af883a 	add	r23,r23,r2
   2ab18:	d9001417 	ldw	r4,80(sp)
   2ab1c:	d9401517 	ldw	r5,84(sp)
   2ab20:	000d883a 	mov	r6,zero
   2ab24:	01cff834 	movhi	r7,16352
   2ab28:	0030ddc0 	call	30ddc <__adddf3>
   2ab2c:	880d883a 	mov	r6,r17
   2ab30:	a00f883a 	mov	r7,r20
   2ab34:	1009883a 	mov	r4,r2
   2ab38:	180b883a 	mov	r5,r3
   2ab3c:	00320d40 	call	320d4 <__ledf2>
   2ab40:	10003e0e 	bge	r2,zero,2ac3c <_dtoa_r+0x1548>
   2ab44:	d9001317 	ldw	r4,76(sp)
   2ab48:	bd3fffc3 	ldbu	r20,-1(r23)
   2ab4c:	d9000515 	stw	r4,20(sp)
   2ab50:	003d3b06 	br	2a040 <__alt_mem_sdram_controller_0+0xc002a040>
   2ab54:	0027883a 	mov	r19,zero
   2ab58:	003f1b06 	br	2a7c8 <__alt_mem_sdram_controller_0+0xc002a7c8>
   2ab5c:	d8800817 	ldw	r2,32(sp)
   2ab60:	11e9c83a 	sub	r20,r2,r7
   2ab64:	0005883a 	mov	r2,zero
   2ab68:	003d5406 	br	2a0bc <__alt_mem_sdram_controller_0+0xc002a0bc>
   2ab6c:	00800044 	movi	r2,1
   2ab70:	003dc706 	br	2a290 <__alt_mem_sdram_controller_0+0xc002a290>
   2ab74:	d8c00217 	ldw	r3,8(sp)
   2ab78:	00800d84 	movi	r2,54
   2ab7c:	dd400a17 	ldw	r21,40(sp)
   2ab80:	10c5c83a 	sub	r2,r2,r3
   2ab84:	dd000817 	ldw	r20,32(sp)
   2ab88:	003d4c06 	br	2a0bc <__alt_mem_sdram_controller_0+0xc002a0bc>
   2ab8c:	dc800f15 	stw	r18,60(sp)
   2ab90:	dcc01015 	stw	r19,64(sp)
   2ab94:	04000084 	movi	r16,2
   2ab98:	003bed06 	br	29b50 <__alt_mem_sdram_controller_0+0xc0029b50>
   2ab9c:	d9000617 	ldw	r4,24(sp)
   2aba0:	203f0d26 	beq	r4,zero,2a7d8 <__alt_mem_sdram_controller_0+0xc002a7d8>
   2aba4:	d9800c17 	ldw	r6,48(sp)
   2aba8:	01bcab0e 	bge	zero,r6,29e58 <__alt_mem_sdram_controller_0+0xc0029e58>
   2abac:	d9401017 	ldw	r5,64(sp)
   2abb0:	d9000f17 	ldw	r4,60(sp)
   2abb4:	000d883a 	mov	r6,zero
   2abb8:	01d00934 	movhi	r7,16420
   2abbc:	00321c80 	call	321c8 <__muldf3>
   2abc0:	81000044 	addi	r4,r16,1
   2abc4:	d8800f15 	stw	r2,60(sp)
   2abc8:	d8c01015 	stw	r3,64(sp)
   2abcc:	003325c0 	call	3325c <__floatsidf>
   2abd0:	d9800f17 	ldw	r6,60(sp)
   2abd4:	d9c01017 	ldw	r7,64(sp)
   2abd8:	1009883a 	mov	r4,r2
   2abdc:	180b883a 	mov	r5,r3
   2abe0:	00321c80 	call	321c8 <__muldf3>
   2abe4:	01d00734 	movhi	r7,16412
   2abe8:	000d883a 	mov	r6,zero
   2abec:	1009883a 	mov	r4,r2
   2abf0:	180b883a 	mov	r5,r3
   2abf4:	0030ddc0 	call	30ddc <__adddf3>
   2abf8:	d9c00517 	ldw	r7,20(sp)
   2abfc:	047f3034 	movhi	r17,64704
   2ac00:	1021883a 	mov	r16,r2
   2ac04:	39ffffc4 	addi	r7,r7,-1
   2ac08:	d9c01315 	stw	r7,76(sp)
   2ac0c:	1c63883a 	add	r17,r3,r17
   2ac10:	db000c17 	ldw	r12,48(sp)
   2ac14:	003bea06 	br	29bc0 <__alt_mem_sdram_controller_0+0xc0029bc0>
   2ac18:	dc000915 	stw	r16,36(sp)
   2ac1c:	003e0e06 	br	2a458 <__alt_mem_sdram_controller_0+0xc002a458>
   2ac20:	01000e44 	movi	r4,57
   2ac24:	8825883a 	mov	r18,r17
   2ac28:	9dc00044 	addi	r23,r19,1
   2ac2c:	99000005 	stb	r4,0(r19)
   2ac30:	a023883a 	mov	r17,r20
   2ac34:	dc000915 	stw	r16,36(sp)
   2ac38:	003da406 	br	2a2cc <__alt_mem_sdram_controller_0+0xc002a2cc>
   2ac3c:	d9801417 	ldw	r6,80(sp)
   2ac40:	d9c01517 	ldw	r7,84(sp)
   2ac44:	0009883a 	mov	r4,zero
   2ac48:	014ff834 	movhi	r5,16352
   2ac4c:	00328e00 	call	328e0 <__subdf3>
   2ac50:	880d883a 	mov	r6,r17
   2ac54:	a00f883a 	mov	r7,r20
   2ac58:	1009883a 	mov	r4,r2
   2ac5c:	180b883a 	mov	r5,r3
   2ac60:	0031ff80 	call	31ff8 <__gedf2>
   2ac64:	00bc7c0e 	bge	zero,r2,29e58 <__alt_mem_sdram_controller_0+0xc0029e58>
   2ac68:	01000c04 	movi	r4,48
   2ac6c:	00000106 	br	2ac74 <_dtoa_r+0x1580>
   2ac70:	102f883a 	mov	r23,r2
   2ac74:	b8bfffc4 	addi	r2,r23,-1
   2ac78:	10c00007 	ldb	r3,0(r2)
   2ac7c:	193ffc26 	beq	r3,r4,2ac70 <__alt_mem_sdram_controller_0+0xc002ac70>
   2ac80:	d9801317 	ldw	r6,76(sp)
   2ac84:	d9800515 	stw	r6,20(sp)
   2ac88:	003c4406 	br	29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2ac8c:	d9801317 	ldw	r6,76(sp)
   2ac90:	d9800515 	stw	r6,20(sp)
   2ac94:	003cea06 	br	2a040 <__alt_mem_sdram_controller_0+0xc002a040>
   2ac98:	dd800f17 	ldw	r22,60(sp)
   2ac9c:	dcc01017 	ldw	r19,64(sp)
   2aca0:	dc801217 	ldw	r18,72(sp)
   2aca4:	003c6c06 	br	29e58 <__alt_mem_sdram_controller_0+0xc0029e58>
   2aca8:	903e031e 	bne	r18,zero,2a4b8 <__alt_mem_sdram_controller_0+0xc002a4b8>
   2acac:	003ebb06 	br	2a79c <__alt_mem_sdram_controller_0+0xc002a79c>
   2acb0:	103e6c1e 	bne	r2,zero,2a664 <__alt_mem_sdram_controller_0+0xc002a664>
   2acb4:	4080004c 	andi	r2,r8,1
   2acb8:	103e6a26 	beq	r2,zero,2a664 <__alt_mem_sdram_controller_0+0xc002a664>
   2acbc:	003e6606 	br	2a658 <__alt_mem_sdram_controller_0+0xc002a658>
   2acc0:	d8c00317 	ldw	r3,12(sp)
   2acc4:	00800084 	movi	r2,2
   2acc8:	10c02916 	blt	r2,r3,2ad70 <_dtoa_r+0x167c>
   2accc:	d9000c17 	ldw	r4,48(sp)
   2acd0:	003e8806 	br	2a6f4 <__alt_mem_sdram_controller_0+0xc002a6f4>
   2acd4:	04000084 	movi	r16,2
   2acd8:	003b9d06 	br	29b50 <__alt_mem_sdram_controller_0+0xc0029b50>
   2acdc:	d9001317 	ldw	r4,76(sp)
   2ace0:	d9000515 	stw	r4,20(sp)
   2ace4:	003cd606 	br	2a040 <__alt_mem_sdram_controller_0+0xc002a040>
   2ace8:	d8801317 	ldw	r2,76(sp)
   2acec:	d8800515 	stw	r2,20(sp)
   2acf0:	003c2a06 	br	29d9c <__alt_mem_sdram_controller_0+0xc0029d9c>
   2acf4:	d9800317 	ldw	r6,12(sp)
   2acf8:	00800084 	movi	r2,2
   2acfc:	11801516 	blt	r2,r6,2ad54 <_dtoa_r+0x1660>
   2ad00:	d9c00c17 	ldw	r7,48(sp)
   2ad04:	d9c00615 	stw	r7,24(sp)
   2ad08:	003df706 	br	2a4e8 <__alt_mem_sdram_controller_0+0xc002a4e8>
   2ad0c:	193d3926 	beq	r3,r4,2a1f4 <__alt_mem_sdram_controller_0+0xc002a1f4>
   2ad10:	00c00f04 	movi	r3,60
   2ad14:	1885c83a 	sub	r2,r3,r2
   2ad18:	003ddf06 	br	2a498 <__alt_mem_sdram_controller_0+0xc002a498>
   2ad1c:	e009883a 	mov	r4,fp
   2ad20:	e0001115 	stw	zero,68(fp)
   2ad24:	000b883a 	mov	r5,zero
   2ad28:	002b8580 	call	2b858 <_Balloc>
   2ad2c:	d8800715 	stw	r2,28(sp)
   2ad30:	d8c00717 	ldw	r3,28(sp)
   2ad34:	00bfffc4 	movi	r2,-1
   2ad38:	01000044 	movi	r4,1
   2ad3c:	d8800c15 	stw	r2,48(sp)
   2ad40:	e0c01015 	stw	r3,64(fp)
   2ad44:	d9000b15 	stw	r4,44(sp)
   2ad48:	d8800615 	stw	r2,24(sp)
   2ad4c:	d8002215 	stw	zero,136(sp)
   2ad50:	003c4106 	br	29e58 <__alt_mem_sdram_controller_0+0xc0029e58>
   2ad54:	d8c00c17 	ldw	r3,48(sp)
   2ad58:	d8c00615 	stw	r3,24(sp)
   2ad5c:	003e7006 	br	2a720 <__alt_mem_sdram_controller_0+0xc002a720>
   2ad60:	04400044 	movi	r17,1
   2ad64:	003b2006 	br	299e8 <__alt_mem_sdram_controller_0+0xc00299e8>
   2ad68:	000b883a 	mov	r5,zero
   2ad6c:	003b3d06 	br	29a64 <__alt_mem_sdram_controller_0+0xc0029a64>
   2ad70:	d8800c17 	ldw	r2,48(sp)
   2ad74:	d8800615 	stw	r2,24(sp)
   2ad78:	003e6906 	br	2a720 <__alt_mem_sdram_controller_0+0xc002a720>

0002ad7c <__sflags>:
   2ad7c:	28800007 	ldb	r2,0(r5)
   2ad80:	00c01c84 	movi	r3,114
   2ad84:	10c02426 	beq	r2,r3,2ae18 <__sflags+0x9c>
   2ad88:	00c01dc4 	movi	r3,119
   2ad8c:	10c01e26 	beq	r2,r3,2ae08 <__sflags+0x8c>
   2ad90:	00c01844 	movi	r3,97
   2ad94:	10c00426 	beq	r2,r3,2ada8 <__sflags+0x2c>
   2ad98:	00800584 	movi	r2,22
   2ad9c:	20800015 	stw	r2,0(r4)
   2ada0:	0005883a 	mov	r2,zero
   2ada4:	f800283a 	ret
   2ada8:	02c08204 	movi	r11,520
   2adac:	01000044 	movi	r4,1
   2adb0:	00804204 	movi	r2,264
   2adb4:	01c00ac4 	movi	r7,43
   2adb8:	02bff8c4 	movi	r10,-29
   2adbc:	027fff04 	movi	r9,-4
   2adc0:	02001e04 	movi	r8,120
   2adc4:	29400044 	addi	r5,r5,1
   2adc8:	28c00007 	ldb	r3,0(r5)
   2adcc:	18000626 	beq	r3,zero,2ade8 <__sflags+0x6c>
   2add0:	19c00826 	beq	r3,r7,2adf4 <__sflags+0x78>
   2add4:	1a3ffb1e 	bne	r3,r8,2adc4 <__alt_mem_sdram_controller_0+0xc002adc4>
   2add8:	29400044 	addi	r5,r5,1
   2addc:	28c00007 	ldb	r3,0(r5)
   2ade0:	21020014 	ori	r4,r4,2048
   2ade4:	183ffa1e 	bne	r3,zero,2add0 <__alt_mem_sdram_controller_0+0xc002add0>
   2ade8:	22c8b03a 	or	r4,r4,r11
   2adec:	31000015 	stw	r4,0(r6)
   2adf0:	f800283a 	ret
   2adf4:	1284703a 	and	r2,r2,r10
   2adf8:	2248703a 	and	r4,r4,r9
   2adfc:	10800414 	ori	r2,r2,16
   2ae00:	21000094 	ori	r4,r4,2
   2ae04:	003fef06 	br	2adc4 <__alt_mem_sdram_controller_0+0xc002adc4>
   2ae08:	02c18004 	movi	r11,1536
   2ae0c:	01000044 	movi	r4,1
   2ae10:	00800204 	movi	r2,8
   2ae14:	003fe706 	br	2adb4 <__alt_mem_sdram_controller_0+0xc002adb4>
   2ae18:	0017883a 	mov	r11,zero
   2ae1c:	0009883a 	mov	r4,zero
   2ae20:	00800104 	movi	r2,4
   2ae24:	003fe306 	br	2adb4 <__alt_mem_sdram_controller_0+0xc002adb4>

0002ae28 <__sfvwrite_r>:
   2ae28:	30800217 	ldw	r2,8(r6)
   2ae2c:	10006726 	beq	r2,zero,2afcc <__sfvwrite_r+0x1a4>
   2ae30:	28c0030b 	ldhu	r3,12(r5)
   2ae34:	defff404 	addi	sp,sp,-48
   2ae38:	dd400715 	stw	r21,28(sp)
   2ae3c:	dd000615 	stw	r20,24(sp)
   2ae40:	dc000215 	stw	r16,8(sp)
   2ae44:	dfc00b15 	stw	ra,44(sp)
   2ae48:	df000a15 	stw	fp,40(sp)
   2ae4c:	ddc00915 	stw	r23,36(sp)
   2ae50:	dd800815 	stw	r22,32(sp)
   2ae54:	dcc00515 	stw	r19,20(sp)
   2ae58:	dc800415 	stw	r18,16(sp)
   2ae5c:	dc400315 	stw	r17,12(sp)
   2ae60:	1880020c 	andi	r2,r3,8
   2ae64:	2821883a 	mov	r16,r5
   2ae68:	202b883a 	mov	r21,r4
   2ae6c:	3029883a 	mov	r20,r6
   2ae70:	10002726 	beq	r2,zero,2af10 <__sfvwrite_r+0xe8>
   2ae74:	28800417 	ldw	r2,16(r5)
   2ae78:	10002526 	beq	r2,zero,2af10 <__sfvwrite_r+0xe8>
   2ae7c:	1880008c 	andi	r2,r3,2
   2ae80:	a4400017 	ldw	r17,0(r20)
   2ae84:	10002a26 	beq	r2,zero,2af30 <__sfvwrite_r+0x108>
   2ae88:	05a00034 	movhi	r22,32768
   2ae8c:	0027883a 	mov	r19,zero
   2ae90:	0025883a 	mov	r18,zero
   2ae94:	b5bf0004 	addi	r22,r22,-1024
   2ae98:	980d883a 	mov	r6,r19
   2ae9c:	a809883a 	mov	r4,r21
   2aea0:	90004626 	beq	r18,zero,2afbc <__sfvwrite_r+0x194>
   2aea4:	900f883a 	mov	r7,r18
   2aea8:	b480022e 	bgeu	r22,r18,2aeb4 <__sfvwrite_r+0x8c>
   2aeac:	01e00034 	movhi	r7,32768
   2aeb0:	39ff0004 	addi	r7,r7,-1024
   2aeb4:	80800917 	ldw	r2,36(r16)
   2aeb8:	81400717 	ldw	r5,28(r16)
   2aebc:	103ee83a 	callr	r2
   2aec0:	0080570e 	bge	zero,r2,2b020 <__sfvwrite_r+0x1f8>
   2aec4:	a0c00217 	ldw	r3,8(r20)
   2aec8:	98a7883a 	add	r19,r19,r2
   2aecc:	90a5c83a 	sub	r18,r18,r2
   2aed0:	1885c83a 	sub	r2,r3,r2
   2aed4:	a0800215 	stw	r2,8(r20)
   2aed8:	103fef1e 	bne	r2,zero,2ae98 <__alt_mem_sdram_controller_0+0xc002ae98>
   2aedc:	0005883a 	mov	r2,zero
   2aee0:	dfc00b17 	ldw	ra,44(sp)
   2aee4:	df000a17 	ldw	fp,40(sp)
   2aee8:	ddc00917 	ldw	r23,36(sp)
   2aeec:	dd800817 	ldw	r22,32(sp)
   2aef0:	dd400717 	ldw	r21,28(sp)
   2aef4:	dd000617 	ldw	r20,24(sp)
   2aef8:	dcc00517 	ldw	r19,20(sp)
   2aefc:	dc800417 	ldw	r18,16(sp)
   2af00:	dc400317 	ldw	r17,12(sp)
   2af04:	dc000217 	ldw	r16,8(sp)
   2af08:	dec00c04 	addi	sp,sp,48
   2af0c:	f800283a 	ret
   2af10:	800b883a 	mov	r5,r16
   2af14:	a809883a 	mov	r4,r21
   2af18:	00293340 	call	29334 <__swsetup_r>
   2af1c:	1000eb1e 	bne	r2,zero,2b2cc <__sfvwrite_r+0x4a4>
   2af20:	80c0030b 	ldhu	r3,12(r16)
   2af24:	a4400017 	ldw	r17,0(r20)
   2af28:	1880008c 	andi	r2,r3,2
   2af2c:	103fd61e 	bne	r2,zero,2ae88 <__alt_mem_sdram_controller_0+0xc002ae88>
   2af30:	1880004c 	andi	r2,r3,1
   2af34:	10003f1e 	bne	r2,zero,2b034 <__sfvwrite_r+0x20c>
   2af38:	0039883a 	mov	fp,zero
   2af3c:	0025883a 	mov	r18,zero
   2af40:	90001a26 	beq	r18,zero,2afac <__sfvwrite_r+0x184>
   2af44:	1880800c 	andi	r2,r3,512
   2af48:	84c00217 	ldw	r19,8(r16)
   2af4c:	10002126 	beq	r2,zero,2afd4 <__sfvwrite_r+0x1ac>
   2af50:	982f883a 	mov	r23,r19
   2af54:	94c09336 	bltu	r18,r19,2b1a4 <__sfvwrite_r+0x37c>
   2af58:	1881200c 	andi	r2,r3,1152
   2af5c:	10009e1e 	bne	r2,zero,2b1d8 <__sfvwrite_r+0x3b0>
   2af60:	81000017 	ldw	r4,0(r16)
   2af64:	b80d883a 	mov	r6,r23
   2af68:	e00b883a 	mov	r5,fp
   2af6c:	002b6fc0 	call	2b6fc <memmove>
   2af70:	80c00217 	ldw	r3,8(r16)
   2af74:	81000017 	ldw	r4,0(r16)
   2af78:	9005883a 	mov	r2,r18
   2af7c:	1ce7c83a 	sub	r19,r3,r19
   2af80:	25cf883a 	add	r7,r4,r23
   2af84:	84c00215 	stw	r19,8(r16)
   2af88:	81c00015 	stw	r7,0(r16)
   2af8c:	a0c00217 	ldw	r3,8(r20)
   2af90:	e0b9883a 	add	fp,fp,r2
   2af94:	90a5c83a 	sub	r18,r18,r2
   2af98:	18a7c83a 	sub	r19,r3,r2
   2af9c:	a4c00215 	stw	r19,8(r20)
   2afa0:	983fce26 	beq	r19,zero,2aedc <__alt_mem_sdram_controller_0+0xc002aedc>
   2afa4:	80c0030b 	ldhu	r3,12(r16)
   2afa8:	903fe61e 	bne	r18,zero,2af44 <__alt_mem_sdram_controller_0+0xc002af44>
   2afac:	8f000017 	ldw	fp,0(r17)
   2afb0:	8c800117 	ldw	r18,4(r17)
   2afb4:	8c400204 	addi	r17,r17,8
   2afb8:	003fe106 	br	2af40 <__alt_mem_sdram_controller_0+0xc002af40>
   2afbc:	8cc00017 	ldw	r19,0(r17)
   2afc0:	8c800117 	ldw	r18,4(r17)
   2afc4:	8c400204 	addi	r17,r17,8
   2afc8:	003fb306 	br	2ae98 <__alt_mem_sdram_controller_0+0xc002ae98>
   2afcc:	0005883a 	mov	r2,zero
   2afd0:	f800283a 	ret
   2afd4:	81000017 	ldw	r4,0(r16)
   2afd8:	80800417 	ldw	r2,16(r16)
   2afdc:	11005736 	bltu	r2,r4,2b13c <__sfvwrite_r+0x314>
   2afe0:	85c00517 	ldw	r23,20(r16)
   2afe4:	95c05536 	bltu	r18,r23,2b13c <__sfvwrite_r+0x314>
   2afe8:	00a00034 	movhi	r2,32768
   2afec:	10bfffc4 	addi	r2,r2,-1
   2aff0:	9009883a 	mov	r4,r18
   2aff4:	1480012e 	bgeu	r2,r18,2affc <__sfvwrite_r+0x1d4>
   2aff8:	1009883a 	mov	r4,r2
   2affc:	b80b883a 	mov	r5,r23
   2b000:	00225140 	call	22514 <__divsi3>
   2b004:	15cf383a 	mul	r7,r2,r23
   2b008:	81400717 	ldw	r5,28(r16)
   2b00c:	80800917 	ldw	r2,36(r16)
   2b010:	e00d883a 	mov	r6,fp
   2b014:	a809883a 	mov	r4,r21
   2b018:	103ee83a 	callr	r2
   2b01c:	00bfdb16 	blt	zero,r2,2af8c <__alt_mem_sdram_controller_0+0xc002af8c>
   2b020:	8080030b 	ldhu	r2,12(r16)
   2b024:	10801014 	ori	r2,r2,64
   2b028:	8080030d 	sth	r2,12(r16)
   2b02c:	00bfffc4 	movi	r2,-1
   2b030:	003fab06 	br	2aee0 <__alt_mem_sdram_controller_0+0xc002aee0>
   2b034:	0027883a 	mov	r19,zero
   2b038:	0011883a 	mov	r8,zero
   2b03c:	0039883a 	mov	fp,zero
   2b040:	0025883a 	mov	r18,zero
   2b044:	90001f26 	beq	r18,zero,2b0c4 <__sfvwrite_r+0x29c>
   2b048:	40005a26 	beq	r8,zero,2b1b4 <__sfvwrite_r+0x38c>
   2b04c:	982d883a 	mov	r22,r19
   2b050:	94c0012e 	bgeu	r18,r19,2b058 <__sfvwrite_r+0x230>
   2b054:	902d883a 	mov	r22,r18
   2b058:	81000017 	ldw	r4,0(r16)
   2b05c:	80800417 	ldw	r2,16(r16)
   2b060:	b02f883a 	mov	r23,r22
   2b064:	81c00517 	ldw	r7,20(r16)
   2b068:	1100032e 	bgeu	r2,r4,2b078 <__sfvwrite_r+0x250>
   2b06c:	80c00217 	ldw	r3,8(r16)
   2b070:	38c7883a 	add	r3,r7,r3
   2b074:	1d801816 	blt	r3,r22,2b0d8 <__sfvwrite_r+0x2b0>
   2b078:	b1c03e16 	blt	r22,r7,2b174 <__sfvwrite_r+0x34c>
   2b07c:	80800917 	ldw	r2,36(r16)
   2b080:	81400717 	ldw	r5,28(r16)
   2b084:	e00d883a 	mov	r6,fp
   2b088:	da000115 	stw	r8,4(sp)
   2b08c:	a809883a 	mov	r4,r21
   2b090:	103ee83a 	callr	r2
   2b094:	102f883a 	mov	r23,r2
   2b098:	da000117 	ldw	r8,4(sp)
   2b09c:	00bfe00e 	bge	zero,r2,2b020 <__alt_mem_sdram_controller_0+0xc002b020>
   2b0a0:	9de7c83a 	sub	r19,r19,r23
   2b0a4:	98001f26 	beq	r19,zero,2b124 <__sfvwrite_r+0x2fc>
   2b0a8:	a0800217 	ldw	r2,8(r20)
   2b0ac:	e5f9883a 	add	fp,fp,r23
   2b0b0:	95e5c83a 	sub	r18,r18,r23
   2b0b4:	15efc83a 	sub	r23,r2,r23
   2b0b8:	a5c00215 	stw	r23,8(r20)
   2b0bc:	b83f8726 	beq	r23,zero,2aedc <__alt_mem_sdram_controller_0+0xc002aedc>
   2b0c0:	903fe11e 	bne	r18,zero,2b048 <__alt_mem_sdram_controller_0+0xc002b048>
   2b0c4:	8f000017 	ldw	fp,0(r17)
   2b0c8:	8c800117 	ldw	r18,4(r17)
   2b0cc:	0011883a 	mov	r8,zero
   2b0d0:	8c400204 	addi	r17,r17,8
   2b0d4:	003fdb06 	br	2b044 <__alt_mem_sdram_controller_0+0xc002b044>
   2b0d8:	180d883a 	mov	r6,r3
   2b0dc:	e00b883a 	mov	r5,fp
   2b0e0:	da000115 	stw	r8,4(sp)
   2b0e4:	d8c00015 	stw	r3,0(sp)
   2b0e8:	002b6fc0 	call	2b6fc <memmove>
   2b0ec:	d8c00017 	ldw	r3,0(sp)
   2b0f0:	80800017 	ldw	r2,0(r16)
   2b0f4:	800b883a 	mov	r5,r16
   2b0f8:	a809883a 	mov	r4,r21
   2b0fc:	10c5883a 	add	r2,r2,r3
   2b100:	80800015 	stw	r2,0(r16)
   2b104:	d8c00015 	stw	r3,0(sp)
   2b108:	0022a640 	call	22a64 <_fflush_r>
   2b10c:	d8c00017 	ldw	r3,0(sp)
   2b110:	da000117 	ldw	r8,4(sp)
   2b114:	103fc21e 	bne	r2,zero,2b020 <__alt_mem_sdram_controller_0+0xc002b020>
   2b118:	182f883a 	mov	r23,r3
   2b11c:	9de7c83a 	sub	r19,r19,r23
   2b120:	983fe11e 	bne	r19,zero,2b0a8 <__alt_mem_sdram_controller_0+0xc002b0a8>
   2b124:	800b883a 	mov	r5,r16
   2b128:	a809883a 	mov	r4,r21
   2b12c:	0022a640 	call	22a64 <_fflush_r>
   2b130:	103fbb1e 	bne	r2,zero,2b020 <__alt_mem_sdram_controller_0+0xc002b020>
   2b134:	0011883a 	mov	r8,zero
   2b138:	003fdb06 	br	2b0a8 <__alt_mem_sdram_controller_0+0xc002b0a8>
   2b13c:	94c0012e 	bgeu	r18,r19,2b144 <__sfvwrite_r+0x31c>
   2b140:	9027883a 	mov	r19,r18
   2b144:	980d883a 	mov	r6,r19
   2b148:	e00b883a 	mov	r5,fp
   2b14c:	002b6fc0 	call	2b6fc <memmove>
   2b150:	80800217 	ldw	r2,8(r16)
   2b154:	80c00017 	ldw	r3,0(r16)
   2b158:	14c5c83a 	sub	r2,r2,r19
   2b15c:	1cc7883a 	add	r3,r3,r19
   2b160:	80800215 	stw	r2,8(r16)
   2b164:	80c00015 	stw	r3,0(r16)
   2b168:	10004326 	beq	r2,zero,2b278 <__sfvwrite_r+0x450>
   2b16c:	9805883a 	mov	r2,r19
   2b170:	003f8606 	br	2af8c <__alt_mem_sdram_controller_0+0xc002af8c>
   2b174:	b00d883a 	mov	r6,r22
   2b178:	e00b883a 	mov	r5,fp
   2b17c:	da000115 	stw	r8,4(sp)
   2b180:	002b6fc0 	call	2b6fc <memmove>
   2b184:	80800217 	ldw	r2,8(r16)
   2b188:	80c00017 	ldw	r3,0(r16)
   2b18c:	da000117 	ldw	r8,4(sp)
   2b190:	1585c83a 	sub	r2,r2,r22
   2b194:	1dad883a 	add	r22,r3,r22
   2b198:	80800215 	stw	r2,8(r16)
   2b19c:	85800015 	stw	r22,0(r16)
   2b1a0:	003fbf06 	br	2b0a0 <__alt_mem_sdram_controller_0+0xc002b0a0>
   2b1a4:	81000017 	ldw	r4,0(r16)
   2b1a8:	9027883a 	mov	r19,r18
   2b1ac:	902f883a 	mov	r23,r18
   2b1b0:	003f6c06 	br	2af64 <__alt_mem_sdram_controller_0+0xc002af64>
   2b1b4:	900d883a 	mov	r6,r18
   2b1b8:	01400284 	movi	r5,10
   2b1bc:	e009883a 	mov	r4,fp
   2b1c0:	002b4d00 	call	2b4d0 <memchr>
   2b1c4:	10003e26 	beq	r2,zero,2b2c0 <__sfvwrite_r+0x498>
   2b1c8:	10800044 	addi	r2,r2,1
   2b1cc:	1727c83a 	sub	r19,r2,fp
   2b1d0:	02000044 	movi	r8,1
   2b1d4:	003f9d06 	br	2b04c <__alt_mem_sdram_controller_0+0xc002b04c>
   2b1d8:	80800517 	ldw	r2,20(r16)
   2b1dc:	81400417 	ldw	r5,16(r16)
   2b1e0:	81c00017 	ldw	r7,0(r16)
   2b1e4:	10a7883a 	add	r19,r2,r2
   2b1e8:	9885883a 	add	r2,r19,r2
   2b1ec:	1026d7fa 	srli	r19,r2,31
   2b1f0:	396dc83a 	sub	r22,r7,r5
   2b1f4:	b1000044 	addi	r4,r22,1
   2b1f8:	9885883a 	add	r2,r19,r2
   2b1fc:	1027d07a 	srai	r19,r2,1
   2b200:	2485883a 	add	r2,r4,r18
   2b204:	980d883a 	mov	r6,r19
   2b208:	9880022e 	bgeu	r19,r2,2b214 <__sfvwrite_r+0x3ec>
   2b20c:	1027883a 	mov	r19,r2
   2b210:	100d883a 	mov	r6,r2
   2b214:	18c1000c 	andi	r3,r3,1024
   2b218:	18001c26 	beq	r3,zero,2b28c <__sfvwrite_r+0x464>
   2b21c:	300b883a 	mov	r5,r6
   2b220:	a809883a 	mov	r4,r21
   2b224:	0023d980 	call	23d98 <_malloc_r>
   2b228:	102f883a 	mov	r23,r2
   2b22c:	10002926 	beq	r2,zero,2b2d4 <__sfvwrite_r+0x4ac>
   2b230:	81400417 	ldw	r5,16(r16)
   2b234:	b00d883a 	mov	r6,r22
   2b238:	1009883a 	mov	r4,r2
   2b23c:	002b5b40 	call	2b5b4 <memcpy>
   2b240:	8080030b 	ldhu	r2,12(r16)
   2b244:	00fedfc4 	movi	r3,-1153
   2b248:	10c4703a 	and	r2,r2,r3
   2b24c:	10802014 	ori	r2,r2,128
   2b250:	8080030d 	sth	r2,12(r16)
   2b254:	bd89883a 	add	r4,r23,r22
   2b258:	9d8fc83a 	sub	r7,r19,r22
   2b25c:	85c00415 	stw	r23,16(r16)
   2b260:	84c00515 	stw	r19,20(r16)
   2b264:	81000015 	stw	r4,0(r16)
   2b268:	9027883a 	mov	r19,r18
   2b26c:	81c00215 	stw	r7,8(r16)
   2b270:	902f883a 	mov	r23,r18
   2b274:	003f3b06 	br	2af64 <__alt_mem_sdram_controller_0+0xc002af64>
   2b278:	800b883a 	mov	r5,r16
   2b27c:	a809883a 	mov	r4,r21
   2b280:	0022a640 	call	22a64 <_fflush_r>
   2b284:	103fb926 	beq	r2,zero,2b16c <__alt_mem_sdram_controller_0+0xc002b16c>
   2b288:	003f6506 	br	2b020 <__alt_mem_sdram_controller_0+0xc002b020>
   2b28c:	a809883a 	mov	r4,r21
   2b290:	002c8b40 	call	2c8b4 <_realloc_r>
   2b294:	102f883a 	mov	r23,r2
   2b298:	103fee1e 	bne	r2,zero,2b254 <__alt_mem_sdram_controller_0+0xc002b254>
   2b29c:	81400417 	ldw	r5,16(r16)
   2b2a0:	a809883a 	mov	r4,r21
   2b2a4:	00231680 	call	23168 <_free_r>
   2b2a8:	8080030b 	ldhu	r2,12(r16)
   2b2ac:	00ffdfc4 	movi	r3,-129
   2b2b0:	1884703a 	and	r2,r3,r2
   2b2b4:	00c00304 	movi	r3,12
   2b2b8:	a8c00015 	stw	r3,0(r21)
   2b2bc:	003f5906 	br	2b024 <__alt_mem_sdram_controller_0+0xc002b024>
   2b2c0:	94c00044 	addi	r19,r18,1
   2b2c4:	02000044 	movi	r8,1
   2b2c8:	003f6006 	br	2b04c <__alt_mem_sdram_controller_0+0xc002b04c>
   2b2cc:	00bfffc4 	movi	r2,-1
   2b2d0:	003f0306 	br	2aee0 <__alt_mem_sdram_controller_0+0xc002aee0>
   2b2d4:	00800304 	movi	r2,12
   2b2d8:	a8800015 	stw	r2,0(r21)
   2b2dc:	8080030b 	ldhu	r2,12(r16)
   2b2e0:	003f5006 	br	2b024 <__alt_mem_sdram_controller_0+0xc002b024>

0002b2e4 <_gettimeofday_r>:
   2b2e4:	defffd04 	addi	sp,sp,-12
   2b2e8:	2805883a 	mov	r2,r5
   2b2ec:	dc000015 	stw	r16,0(sp)
   2b2f0:	04000134 	movhi	r16,4
   2b2f4:	dc400115 	stw	r17,4(sp)
   2b2f8:	84270804 	addi	r16,r16,-25568
   2b2fc:	2023883a 	mov	r17,r4
   2b300:	300b883a 	mov	r5,r6
   2b304:	1009883a 	mov	r4,r2
   2b308:	dfc00215 	stw	ra,8(sp)
   2b30c:	80000015 	stw	zero,0(r16)
   2b310:	00336bc0 	call	336bc <gettimeofday>
   2b314:	00ffffc4 	movi	r3,-1
   2b318:	10c00526 	beq	r2,r3,2b330 <_gettimeofday_r+0x4c>
   2b31c:	dfc00217 	ldw	ra,8(sp)
   2b320:	dc400117 	ldw	r17,4(sp)
   2b324:	dc000017 	ldw	r16,0(sp)
   2b328:	dec00304 	addi	sp,sp,12
   2b32c:	f800283a 	ret
   2b330:	80c00017 	ldw	r3,0(r16)
   2b334:	183ff926 	beq	r3,zero,2b31c <__alt_mem_sdram_controller_0+0xc002b31c>
   2b338:	88c00015 	stw	r3,0(r17)
   2b33c:	003ff706 	br	2b31c <__alt_mem_sdram_controller_0+0xc002b31c>

0002b340 <_isatty_r>:
   2b340:	defffd04 	addi	sp,sp,-12
   2b344:	dc000015 	stw	r16,0(sp)
   2b348:	04000134 	movhi	r16,4
   2b34c:	dc400115 	stw	r17,4(sp)
   2b350:	84270804 	addi	r16,r16,-25568
   2b354:	2023883a 	mov	r17,r4
   2b358:	2809883a 	mov	r4,r5
   2b35c:	dfc00215 	stw	ra,8(sp)
   2b360:	80000015 	stw	zero,0(r16)
   2b364:	00338ec0 	call	338ec <isatty>
   2b368:	00ffffc4 	movi	r3,-1
   2b36c:	10c00526 	beq	r2,r3,2b384 <_isatty_r+0x44>
   2b370:	dfc00217 	ldw	ra,8(sp)
   2b374:	dc400117 	ldw	r17,4(sp)
   2b378:	dc000017 	ldw	r16,0(sp)
   2b37c:	dec00304 	addi	sp,sp,12
   2b380:	f800283a 	ret
   2b384:	80c00017 	ldw	r3,0(r16)
   2b388:	183ff926 	beq	r3,zero,2b370 <__alt_mem_sdram_controller_0+0xc002b370>
   2b38c:	88c00015 	stw	r3,0(r17)
   2b390:	003ff706 	br	2b370 <__alt_mem_sdram_controller_0+0xc002b370>

0002b394 <_setlocale_r>:
   2b394:	30001b26 	beq	r6,zero,2b404 <_setlocale_r+0x70>
   2b398:	014000f4 	movhi	r5,3
   2b39c:	defffe04 	addi	sp,sp,-8
   2b3a0:	2958e804 	addi	r5,r5,25504
   2b3a4:	3009883a 	mov	r4,r6
   2b3a8:	dc000015 	stw	r16,0(sp)
   2b3ac:	dfc00115 	stw	ra,4(sp)
   2b3b0:	3021883a 	mov	r16,r6
   2b3b4:	002d1900 	call	2d190 <strcmp>
   2b3b8:	1000061e 	bne	r2,zero,2b3d4 <_setlocale_r+0x40>
   2b3bc:	008000f4 	movhi	r2,3
   2b3c0:	1098c104 	addi	r2,r2,25348
   2b3c4:	dfc00117 	ldw	ra,4(sp)
   2b3c8:	dc000017 	ldw	r16,0(sp)
   2b3cc:	dec00204 	addi	sp,sp,8
   2b3d0:	f800283a 	ret
   2b3d4:	014000f4 	movhi	r5,3
   2b3d8:	2958c104 	addi	r5,r5,25348
   2b3dc:	8009883a 	mov	r4,r16
   2b3e0:	002d1900 	call	2d190 <strcmp>
   2b3e4:	103ff526 	beq	r2,zero,2b3bc <__alt_mem_sdram_controller_0+0xc002b3bc>
   2b3e8:	014000f4 	movhi	r5,3
   2b3ec:	2958b404 	addi	r5,r5,25296
   2b3f0:	8009883a 	mov	r4,r16
   2b3f4:	002d1900 	call	2d190 <strcmp>
   2b3f8:	103ff026 	beq	r2,zero,2b3bc <__alt_mem_sdram_controller_0+0xc002b3bc>
   2b3fc:	0005883a 	mov	r2,zero
   2b400:	003ff006 	br	2b3c4 <__alt_mem_sdram_controller_0+0xc002b3c4>
   2b404:	008000f4 	movhi	r2,3
   2b408:	1098c104 	addi	r2,r2,25348
   2b40c:	f800283a 	ret

0002b410 <__locale_charset>:
   2b410:	008000f4 	movhi	r2,3
   2b414:	109ba404 	addi	r2,r2,28304
   2b418:	f800283a 	ret

0002b41c <__locale_mb_cur_max>:
   2b41c:	00800134 	movhi	r2,4
   2b420:	10a04004 	addi	r2,r2,-32512
   2b424:	10800017 	ldw	r2,0(r2)
   2b428:	f800283a 	ret

0002b42c <__locale_msgcharset>:
   2b42c:	008000f4 	movhi	r2,3
   2b430:	109b9c04 	addi	r2,r2,28272
   2b434:	f800283a 	ret

0002b438 <__locale_cjk_lang>:
   2b438:	0005883a 	mov	r2,zero
   2b43c:	f800283a 	ret

0002b440 <_localeconv_r>:
   2b440:	008000f4 	movhi	r2,3
   2b444:	109bac04 	addi	r2,r2,28336
   2b448:	f800283a 	ret

0002b44c <setlocale>:
   2b44c:	00800134 	movhi	r2,4
   2b450:	10a03d04 	addi	r2,r2,-32524
   2b454:	280d883a 	mov	r6,r5
   2b458:	200b883a 	mov	r5,r4
   2b45c:	11000017 	ldw	r4,0(r2)
   2b460:	002b3941 	jmpi	2b394 <_setlocale_r>

0002b464 <localeconv>:
   2b464:	008000f4 	movhi	r2,3
   2b468:	109bac04 	addi	r2,r2,28336
   2b46c:	f800283a 	ret

0002b470 <_lseek_r>:
   2b470:	defffd04 	addi	sp,sp,-12
   2b474:	2805883a 	mov	r2,r5
   2b478:	dc000015 	stw	r16,0(sp)
   2b47c:	04000134 	movhi	r16,4
   2b480:	dc400115 	stw	r17,4(sp)
   2b484:	300b883a 	mov	r5,r6
   2b488:	84270804 	addi	r16,r16,-25568
   2b48c:	2023883a 	mov	r17,r4
   2b490:	380d883a 	mov	r6,r7
   2b494:	1009883a 	mov	r4,r2
   2b498:	dfc00215 	stw	ra,8(sp)
   2b49c:	80000015 	stw	zero,0(r16)
   2b4a0:	0033c240 	call	33c24 <lseek>
   2b4a4:	00ffffc4 	movi	r3,-1
   2b4a8:	10c00526 	beq	r2,r3,2b4c0 <_lseek_r+0x50>
   2b4ac:	dfc00217 	ldw	ra,8(sp)
   2b4b0:	dc400117 	ldw	r17,4(sp)
   2b4b4:	dc000017 	ldw	r16,0(sp)
   2b4b8:	dec00304 	addi	sp,sp,12
   2b4bc:	f800283a 	ret
   2b4c0:	80c00017 	ldw	r3,0(r16)
   2b4c4:	183ff926 	beq	r3,zero,2b4ac <__alt_mem_sdram_controller_0+0xc002b4ac>
   2b4c8:	88c00015 	stw	r3,0(r17)
   2b4cc:	003ff706 	br	2b4ac <__alt_mem_sdram_controller_0+0xc002b4ac>

0002b4d0 <memchr>:
   2b4d0:	208000cc 	andi	r2,r4,3
   2b4d4:	280f883a 	mov	r7,r5
   2b4d8:	10003426 	beq	r2,zero,2b5ac <memchr+0xdc>
   2b4dc:	30bfffc4 	addi	r2,r6,-1
   2b4e0:	30001a26 	beq	r6,zero,2b54c <memchr+0x7c>
   2b4e4:	20c00003 	ldbu	r3,0(r4)
   2b4e8:	29803fcc 	andi	r6,r5,255
   2b4ec:	30c0051e 	bne	r6,r3,2b504 <memchr+0x34>
   2b4f0:	00001806 	br	2b554 <memchr+0x84>
   2b4f4:	10001526 	beq	r2,zero,2b54c <memchr+0x7c>
   2b4f8:	20c00003 	ldbu	r3,0(r4)
   2b4fc:	10bfffc4 	addi	r2,r2,-1
   2b500:	30c01426 	beq	r6,r3,2b554 <memchr+0x84>
   2b504:	21000044 	addi	r4,r4,1
   2b508:	20c000cc 	andi	r3,r4,3
   2b50c:	183ff91e 	bne	r3,zero,2b4f4 <__alt_mem_sdram_controller_0+0xc002b4f4>
   2b510:	020000c4 	movi	r8,3
   2b514:	40801136 	bltu	r8,r2,2b55c <memchr+0x8c>
   2b518:	10000c26 	beq	r2,zero,2b54c <memchr+0x7c>
   2b51c:	20c00003 	ldbu	r3,0(r4)
   2b520:	29403fcc 	andi	r5,r5,255
   2b524:	28c00b26 	beq	r5,r3,2b554 <memchr+0x84>
   2b528:	20c00044 	addi	r3,r4,1
   2b52c:	39803fcc 	andi	r6,r7,255
   2b530:	2089883a 	add	r4,r4,r2
   2b534:	00000306 	br	2b544 <memchr+0x74>
   2b538:	18c00044 	addi	r3,r3,1
   2b53c:	197fffc3 	ldbu	r5,-1(r3)
   2b540:	31400526 	beq	r6,r5,2b558 <memchr+0x88>
   2b544:	1805883a 	mov	r2,r3
   2b548:	20fffb1e 	bne	r4,r3,2b538 <__alt_mem_sdram_controller_0+0xc002b538>
   2b54c:	0005883a 	mov	r2,zero
   2b550:	f800283a 	ret
   2b554:	2005883a 	mov	r2,r4
   2b558:	f800283a 	ret
   2b55c:	28c03fcc 	andi	r3,r5,255
   2b560:	1812923a 	slli	r9,r3,8
   2b564:	02ffbff4 	movhi	r11,65279
   2b568:	02a02074 	movhi	r10,32897
   2b56c:	48d2b03a 	or	r9,r9,r3
   2b570:	4806943a 	slli	r3,r9,16
   2b574:	5affbfc4 	addi	r11,r11,-257
   2b578:	52a02004 	addi	r10,r10,-32640
   2b57c:	48d2b03a 	or	r9,r9,r3
   2b580:	20c00017 	ldw	r3,0(r4)
   2b584:	48c6f03a 	xor	r3,r9,r3
   2b588:	1acd883a 	add	r6,r3,r11
   2b58c:	00c6303a 	nor	r3,zero,r3
   2b590:	30c6703a 	and	r3,r6,r3
   2b594:	1a86703a 	and	r3,r3,r10
   2b598:	183fe01e 	bne	r3,zero,2b51c <__alt_mem_sdram_controller_0+0xc002b51c>
   2b59c:	10bfff04 	addi	r2,r2,-4
   2b5a0:	21000104 	addi	r4,r4,4
   2b5a4:	40bff636 	bltu	r8,r2,2b580 <__alt_mem_sdram_controller_0+0xc002b580>
   2b5a8:	003fdb06 	br	2b518 <__alt_mem_sdram_controller_0+0xc002b518>
   2b5ac:	3005883a 	mov	r2,r6
   2b5b0:	003fd706 	br	2b510 <__alt_mem_sdram_controller_0+0xc002b510>

0002b5b4 <memcpy>:
   2b5b4:	defffd04 	addi	sp,sp,-12
   2b5b8:	dfc00215 	stw	ra,8(sp)
   2b5bc:	dc400115 	stw	r17,4(sp)
   2b5c0:	dc000015 	stw	r16,0(sp)
   2b5c4:	00c003c4 	movi	r3,15
   2b5c8:	2005883a 	mov	r2,r4
   2b5cc:	1980452e 	bgeu	r3,r6,2b6e4 <memcpy+0x130>
   2b5d0:	2906b03a 	or	r3,r5,r4
   2b5d4:	18c000cc 	andi	r3,r3,3
   2b5d8:	1800441e 	bne	r3,zero,2b6ec <memcpy+0x138>
   2b5dc:	347ffc04 	addi	r17,r6,-16
   2b5e0:	8822d13a 	srli	r17,r17,4
   2b5e4:	28c00104 	addi	r3,r5,4
   2b5e8:	23400104 	addi	r13,r4,4
   2b5ec:	8820913a 	slli	r16,r17,4
   2b5f0:	2b000204 	addi	r12,r5,8
   2b5f4:	22c00204 	addi	r11,r4,8
   2b5f8:	84000504 	addi	r16,r16,20
   2b5fc:	2a800304 	addi	r10,r5,12
   2b600:	22400304 	addi	r9,r4,12
   2b604:	2c21883a 	add	r16,r5,r16
   2b608:	2811883a 	mov	r8,r5
   2b60c:	200f883a 	mov	r7,r4
   2b610:	41000017 	ldw	r4,0(r8)
   2b614:	1fc00017 	ldw	ra,0(r3)
   2b618:	63c00017 	ldw	r15,0(r12)
   2b61c:	39000015 	stw	r4,0(r7)
   2b620:	53800017 	ldw	r14,0(r10)
   2b624:	6fc00015 	stw	ra,0(r13)
   2b628:	5bc00015 	stw	r15,0(r11)
   2b62c:	4b800015 	stw	r14,0(r9)
   2b630:	18c00404 	addi	r3,r3,16
   2b634:	39c00404 	addi	r7,r7,16
   2b638:	42000404 	addi	r8,r8,16
   2b63c:	6b400404 	addi	r13,r13,16
   2b640:	63000404 	addi	r12,r12,16
   2b644:	5ac00404 	addi	r11,r11,16
   2b648:	52800404 	addi	r10,r10,16
   2b64c:	4a400404 	addi	r9,r9,16
   2b650:	1c3fef1e 	bne	r3,r16,2b610 <__alt_mem_sdram_controller_0+0xc002b610>
   2b654:	89c00044 	addi	r7,r17,1
   2b658:	380e913a 	slli	r7,r7,4
   2b65c:	310003cc 	andi	r4,r6,15
   2b660:	02c000c4 	movi	r11,3
   2b664:	11c7883a 	add	r3,r2,r7
   2b668:	29cb883a 	add	r5,r5,r7
   2b66c:	5900212e 	bgeu	r11,r4,2b6f4 <memcpy+0x140>
   2b670:	1813883a 	mov	r9,r3
   2b674:	2811883a 	mov	r8,r5
   2b678:	200f883a 	mov	r7,r4
   2b67c:	42800017 	ldw	r10,0(r8)
   2b680:	4a400104 	addi	r9,r9,4
   2b684:	39ffff04 	addi	r7,r7,-4
   2b688:	4abfff15 	stw	r10,-4(r9)
   2b68c:	42000104 	addi	r8,r8,4
   2b690:	59fffa36 	bltu	r11,r7,2b67c <__alt_mem_sdram_controller_0+0xc002b67c>
   2b694:	213fff04 	addi	r4,r4,-4
   2b698:	2008d0ba 	srli	r4,r4,2
   2b69c:	318000cc 	andi	r6,r6,3
   2b6a0:	21000044 	addi	r4,r4,1
   2b6a4:	2109883a 	add	r4,r4,r4
   2b6a8:	2109883a 	add	r4,r4,r4
   2b6ac:	1907883a 	add	r3,r3,r4
   2b6b0:	290b883a 	add	r5,r5,r4
   2b6b4:	30000626 	beq	r6,zero,2b6d0 <memcpy+0x11c>
   2b6b8:	198d883a 	add	r6,r3,r6
   2b6bc:	29c00003 	ldbu	r7,0(r5)
   2b6c0:	18c00044 	addi	r3,r3,1
   2b6c4:	29400044 	addi	r5,r5,1
   2b6c8:	19ffffc5 	stb	r7,-1(r3)
   2b6cc:	19bffb1e 	bne	r3,r6,2b6bc <__alt_mem_sdram_controller_0+0xc002b6bc>
   2b6d0:	dfc00217 	ldw	ra,8(sp)
   2b6d4:	dc400117 	ldw	r17,4(sp)
   2b6d8:	dc000017 	ldw	r16,0(sp)
   2b6dc:	dec00304 	addi	sp,sp,12
   2b6e0:	f800283a 	ret
   2b6e4:	2007883a 	mov	r3,r4
   2b6e8:	003ff206 	br	2b6b4 <__alt_mem_sdram_controller_0+0xc002b6b4>
   2b6ec:	2007883a 	mov	r3,r4
   2b6f0:	003ff106 	br	2b6b8 <__alt_mem_sdram_controller_0+0xc002b6b8>
   2b6f4:	200d883a 	mov	r6,r4
   2b6f8:	003fee06 	br	2b6b4 <__alt_mem_sdram_controller_0+0xc002b6b4>

0002b6fc <memmove>:
   2b6fc:	2005883a 	mov	r2,r4
   2b700:	29000b2e 	bgeu	r5,r4,2b730 <memmove+0x34>
   2b704:	298f883a 	add	r7,r5,r6
   2b708:	21c0092e 	bgeu	r4,r7,2b730 <memmove+0x34>
   2b70c:	2187883a 	add	r3,r4,r6
   2b710:	198bc83a 	sub	r5,r3,r6
   2b714:	30004826 	beq	r6,zero,2b838 <memmove+0x13c>
   2b718:	39ffffc4 	addi	r7,r7,-1
   2b71c:	39000003 	ldbu	r4,0(r7)
   2b720:	18ffffc4 	addi	r3,r3,-1
   2b724:	19000005 	stb	r4,0(r3)
   2b728:	28fffb1e 	bne	r5,r3,2b718 <__alt_mem_sdram_controller_0+0xc002b718>
   2b72c:	f800283a 	ret
   2b730:	00c003c4 	movi	r3,15
   2b734:	1980412e 	bgeu	r3,r6,2b83c <memmove+0x140>
   2b738:	2886b03a 	or	r3,r5,r2
   2b73c:	18c000cc 	andi	r3,r3,3
   2b740:	1800401e 	bne	r3,zero,2b844 <memmove+0x148>
   2b744:	33fffc04 	addi	r15,r6,-16
   2b748:	781ed13a 	srli	r15,r15,4
   2b74c:	28c00104 	addi	r3,r5,4
   2b750:	13400104 	addi	r13,r2,4
   2b754:	781c913a 	slli	r14,r15,4
   2b758:	2b000204 	addi	r12,r5,8
   2b75c:	12c00204 	addi	r11,r2,8
   2b760:	73800504 	addi	r14,r14,20
   2b764:	2a800304 	addi	r10,r5,12
   2b768:	12400304 	addi	r9,r2,12
   2b76c:	2b9d883a 	add	r14,r5,r14
   2b770:	2811883a 	mov	r8,r5
   2b774:	100f883a 	mov	r7,r2
   2b778:	41000017 	ldw	r4,0(r8)
   2b77c:	39c00404 	addi	r7,r7,16
   2b780:	18c00404 	addi	r3,r3,16
   2b784:	393ffc15 	stw	r4,-16(r7)
   2b788:	193ffc17 	ldw	r4,-16(r3)
   2b78c:	6b400404 	addi	r13,r13,16
   2b790:	5ac00404 	addi	r11,r11,16
   2b794:	693ffc15 	stw	r4,-16(r13)
   2b798:	61000017 	ldw	r4,0(r12)
   2b79c:	4a400404 	addi	r9,r9,16
   2b7a0:	42000404 	addi	r8,r8,16
   2b7a4:	593ffc15 	stw	r4,-16(r11)
   2b7a8:	51000017 	ldw	r4,0(r10)
   2b7ac:	63000404 	addi	r12,r12,16
   2b7b0:	52800404 	addi	r10,r10,16
   2b7b4:	493ffc15 	stw	r4,-16(r9)
   2b7b8:	1bbfef1e 	bne	r3,r14,2b778 <__alt_mem_sdram_controller_0+0xc002b778>
   2b7bc:	79000044 	addi	r4,r15,1
   2b7c0:	2008913a 	slli	r4,r4,4
   2b7c4:	328003cc 	andi	r10,r6,15
   2b7c8:	02c000c4 	movi	r11,3
   2b7cc:	1107883a 	add	r3,r2,r4
   2b7d0:	290b883a 	add	r5,r5,r4
   2b7d4:	5a801e2e 	bgeu	r11,r10,2b850 <memmove+0x154>
   2b7d8:	1813883a 	mov	r9,r3
   2b7dc:	2811883a 	mov	r8,r5
   2b7e0:	500f883a 	mov	r7,r10
   2b7e4:	41000017 	ldw	r4,0(r8)
   2b7e8:	4a400104 	addi	r9,r9,4
   2b7ec:	39ffff04 	addi	r7,r7,-4
   2b7f0:	493fff15 	stw	r4,-4(r9)
   2b7f4:	42000104 	addi	r8,r8,4
   2b7f8:	59fffa36 	bltu	r11,r7,2b7e4 <__alt_mem_sdram_controller_0+0xc002b7e4>
   2b7fc:	513fff04 	addi	r4,r10,-4
   2b800:	2008d0ba 	srli	r4,r4,2
   2b804:	318000cc 	andi	r6,r6,3
   2b808:	21000044 	addi	r4,r4,1
   2b80c:	2109883a 	add	r4,r4,r4
   2b810:	2109883a 	add	r4,r4,r4
   2b814:	1907883a 	add	r3,r3,r4
   2b818:	290b883a 	add	r5,r5,r4
   2b81c:	30000b26 	beq	r6,zero,2b84c <memmove+0x150>
   2b820:	198d883a 	add	r6,r3,r6
   2b824:	29c00003 	ldbu	r7,0(r5)
   2b828:	18c00044 	addi	r3,r3,1
   2b82c:	29400044 	addi	r5,r5,1
   2b830:	19ffffc5 	stb	r7,-1(r3)
   2b834:	19bffb1e 	bne	r3,r6,2b824 <__alt_mem_sdram_controller_0+0xc002b824>
   2b838:	f800283a 	ret
   2b83c:	1007883a 	mov	r3,r2
   2b840:	003ff606 	br	2b81c <__alt_mem_sdram_controller_0+0xc002b81c>
   2b844:	1007883a 	mov	r3,r2
   2b848:	003ff506 	br	2b820 <__alt_mem_sdram_controller_0+0xc002b820>
   2b84c:	f800283a 	ret
   2b850:	500d883a 	mov	r6,r10
   2b854:	003ff106 	br	2b81c <__alt_mem_sdram_controller_0+0xc002b81c>

0002b858 <_Balloc>:
   2b858:	20801317 	ldw	r2,76(r4)
   2b85c:	defffc04 	addi	sp,sp,-16
   2b860:	dc400115 	stw	r17,4(sp)
   2b864:	dc000015 	stw	r16,0(sp)
   2b868:	dfc00315 	stw	ra,12(sp)
   2b86c:	dc800215 	stw	r18,8(sp)
   2b870:	2023883a 	mov	r17,r4
   2b874:	2821883a 	mov	r16,r5
   2b878:	10000f26 	beq	r2,zero,2b8b8 <_Balloc+0x60>
   2b87c:	8407883a 	add	r3,r16,r16
   2b880:	18c7883a 	add	r3,r3,r3
   2b884:	10c7883a 	add	r3,r2,r3
   2b888:	18800017 	ldw	r2,0(r3)
   2b88c:	10001126 	beq	r2,zero,2b8d4 <_Balloc+0x7c>
   2b890:	11000017 	ldw	r4,0(r2)
   2b894:	19000015 	stw	r4,0(r3)
   2b898:	10000415 	stw	zero,16(r2)
   2b89c:	10000315 	stw	zero,12(r2)
   2b8a0:	dfc00317 	ldw	ra,12(sp)
   2b8a4:	dc800217 	ldw	r18,8(sp)
   2b8a8:	dc400117 	ldw	r17,4(sp)
   2b8ac:	dc000017 	ldw	r16,0(sp)
   2b8b0:	dec00404 	addi	sp,sp,16
   2b8b4:	f800283a 	ret
   2b8b8:	01800844 	movi	r6,33
   2b8bc:	01400104 	movi	r5,4
   2b8c0:	002fcc00 	call	2fcc0 <_calloc_r>
   2b8c4:	88801315 	stw	r2,76(r17)
   2b8c8:	103fec1e 	bne	r2,zero,2b87c <__alt_mem_sdram_controller_0+0xc002b87c>
   2b8cc:	0005883a 	mov	r2,zero
   2b8d0:	003ff306 	br	2b8a0 <__alt_mem_sdram_controller_0+0xc002b8a0>
   2b8d4:	01400044 	movi	r5,1
   2b8d8:	2c24983a 	sll	r18,r5,r16
   2b8dc:	8809883a 	mov	r4,r17
   2b8e0:	91800144 	addi	r6,r18,5
   2b8e4:	318d883a 	add	r6,r6,r6
   2b8e8:	318d883a 	add	r6,r6,r6
   2b8ec:	002fcc00 	call	2fcc0 <_calloc_r>
   2b8f0:	103ff626 	beq	r2,zero,2b8cc <__alt_mem_sdram_controller_0+0xc002b8cc>
   2b8f4:	14000115 	stw	r16,4(r2)
   2b8f8:	14800215 	stw	r18,8(r2)
   2b8fc:	003fe606 	br	2b898 <__alt_mem_sdram_controller_0+0xc002b898>

0002b900 <_Bfree>:
   2b900:	28000826 	beq	r5,zero,2b924 <_Bfree+0x24>
   2b904:	28c00117 	ldw	r3,4(r5)
   2b908:	20801317 	ldw	r2,76(r4)
   2b90c:	18c7883a 	add	r3,r3,r3
   2b910:	18c7883a 	add	r3,r3,r3
   2b914:	10c5883a 	add	r2,r2,r3
   2b918:	10c00017 	ldw	r3,0(r2)
   2b91c:	28c00015 	stw	r3,0(r5)
   2b920:	11400015 	stw	r5,0(r2)
   2b924:	f800283a 	ret

0002b928 <__multadd>:
   2b928:	defffa04 	addi	sp,sp,-24
   2b92c:	dc800315 	stw	r18,12(sp)
   2b930:	dc400215 	stw	r17,8(sp)
   2b934:	dc000115 	stw	r16,4(sp)
   2b938:	2823883a 	mov	r17,r5
   2b93c:	2c000417 	ldw	r16,16(r5)
   2b940:	dfc00515 	stw	ra,20(sp)
   2b944:	dcc00415 	stw	r19,16(sp)
   2b948:	2025883a 	mov	r18,r4
   2b94c:	29400504 	addi	r5,r5,20
   2b950:	0011883a 	mov	r8,zero
   2b954:	28c00017 	ldw	r3,0(r5)
   2b958:	29400104 	addi	r5,r5,4
   2b95c:	42000044 	addi	r8,r8,1
   2b960:	18bfffcc 	andi	r2,r3,65535
   2b964:	1185383a 	mul	r2,r2,r6
   2b968:	1806d43a 	srli	r3,r3,16
   2b96c:	11cf883a 	add	r7,r2,r7
   2b970:	3808d43a 	srli	r4,r7,16
   2b974:	1987383a 	mul	r3,r3,r6
   2b978:	38bfffcc 	andi	r2,r7,65535
   2b97c:	1907883a 	add	r3,r3,r4
   2b980:	1808943a 	slli	r4,r3,16
   2b984:	180ed43a 	srli	r7,r3,16
   2b988:	2085883a 	add	r2,r4,r2
   2b98c:	28bfff15 	stw	r2,-4(r5)
   2b990:	443ff016 	blt	r8,r16,2b954 <__alt_mem_sdram_controller_0+0xc002b954>
   2b994:	38000926 	beq	r7,zero,2b9bc <__multadd+0x94>
   2b998:	88800217 	ldw	r2,8(r17)
   2b99c:	80800f0e 	bge	r16,r2,2b9dc <__multadd+0xb4>
   2b9a0:	80800144 	addi	r2,r16,5
   2b9a4:	1085883a 	add	r2,r2,r2
   2b9a8:	1085883a 	add	r2,r2,r2
   2b9ac:	8885883a 	add	r2,r17,r2
   2b9b0:	11c00015 	stw	r7,0(r2)
   2b9b4:	84000044 	addi	r16,r16,1
   2b9b8:	8c000415 	stw	r16,16(r17)
   2b9bc:	8805883a 	mov	r2,r17
   2b9c0:	dfc00517 	ldw	ra,20(sp)
   2b9c4:	dcc00417 	ldw	r19,16(sp)
   2b9c8:	dc800317 	ldw	r18,12(sp)
   2b9cc:	dc400217 	ldw	r17,8(sp)
   2b9d0:	dc000117 	ldw	r16,4(sp)
   2b9d4:	dec00604 	addi	sp,sp,24
   2b9d8:	f800283a 	ret
   2b9dc:	89400117 	ldw	r5,4(r17)
   2b9e0:	9009883a 	mov	r4,r18
   2b9e4:	d9c00015 	stw	r7,0(sp)
   2b9e8:	29400044 	addi	r5,r5,1
   2b9ec:	002b8580 	call	2b858 <_Balloc>
   2b9f0:	89800417 	ldw	r6,16(r17)
   2b9f4:	89400304 	addi	r5,r17,12
   2b9f8:	11000304 	addi	r4,r2,12
   2b9fc:	31800084 	addi	r6,r6,2
   2ba00:	318d883a 	add	r6,r6,r6
   2ba04:	318d883a 	add	r6,r6,r6
   2ba08:	1027883a 	mov	r19,r2
   2ba0c:	002b5b40 	call	2b5b4 <memcpy>
   2ba10:	d9c00017 	ldw	r7,0(sp)
   2ba14:	88000a26 	beq	r17,zero,2ba40 <__multadd+0x118>
   2ba18:	88c00117 	ldw	r3,4(r17)
   2ba1c:	90801317 	ldw	r2,76(r18)
   2ba20:	18c7883a 	add	r3,r3,r3
   2ba24:	18c7883a 	add	r3,r3,r3
   2ba28:	10c5883a 	add	r2,r2,r3
   2ba2c:	10c00017 	ldw	r3,0(r2)
   2ba30:	88c00015 	stw	r3,0(r17)
   2ba34:	14400015 	stw	r17,0(r2)
   2ba38:	9823883a 	mov	r17,r19
   2ba3c:	003fd806 	br	2b9a0 <__alt_mem_sdram_controller_0+0xc002b9a0>
   2ba40:	9823883a 	mov	r17,r19
   2ba44:	003fd606 	br	2b9a0 <__alt_mem_sdram_controller_0+0xc002b9a0>

0002ba48 <__s2b>:
   2ba48:	defff904 	addi	sp,sp,-28
   2ba4c:	dc400115 	stw	r17,4(sp)
   2ba50:	dc000015 	stw	r16,0(sp)
   2ba54:	2023883a 	mov	r17,r4
   2ba58:	2821883a 	mov	r16,r5
   2ba5c:	39000204 	addi	r4,r7,8
   2ba60:	01400244 	movi	r5,9
   2ba64:	dcc00315 	stw	r19,12(sp)
   2ba68:	dc800215 	stw	r18,8(sp)
   2ba6c:	dfc00615 	stw	ra,24(sp)
   2ba70:	dd400515 	stw	r21,20(sp)
   2ba74:	dd000415 	stw	r20,16(sp)
   2ba78:	3825883a 	mov	r18,r7
   2ba7c:	3027883a 	mov	r19,r6
   2ba80:	00225140 	call	22514 <__divsi3>
   2ba84:	00c00044 	movi	r3,1
   2ba88:	000b883a 	mov	r5,zero
   2ba8c:	1880030e 	bge	r3,r2,2ba9c <__s2b+0x54>
   2ba90:	18c7883a 	add	r3,r3,r3
   2ba94:	29400044 	addi	r5,r5,1
   2ba98:	18bffd16 	blt	r3,r2,2ba90 <__alt_mem_sdram_controller_0+0xc002ba90>
   2ba9c:	8809883a 	mov	r4,r17
   2baa0:	002b8580 	call	2b858 <_Balloc>
   2baa4:	d8c00717 	ldw	r3,28(sp)
   2baa8:	10c00515 	stw	r3,20(r2)
   2baac:	00c00044 	movi	r3,1
   2bab0:	10c00415 	stw	r3,16(r2)
   2bab4:	00c00244 	movi	r3,9
   2bab8:	1cc0210e 	bge	r3,r19,2bb40 <__s2b+0xf8>
   2babc:	80eb883a 	add	r21,r16,r3
   2bac0:	a829883a 	mov	r20,r21
   2bac4:	84e1883a 	add	r16,r16,r19
   2bac8:	a1c00007 	ldb	r7,0(r20)
   2bacc:	01800284 	movi	r6,10
   2bad0:	a5000044 	addi	r20,r20,1
   2bad4:	100b883a 	mov	r5,r2
   2bad8:	39fff404 	addi	r7,r7,-48
   2badc:	8809883a 	mov	r4,r17
   2bae0:	002b9280 	call	2b928 <__multadd>
   2bae4:	a43ff81e 	bne	r20,r16,2bac8 <__alt_mem_sdram_controller_0+0xc002bac8>
   2bae8:	ace1883a 	add	r16,r21,r19
   2baec:	843ffe04 	addi	r16,r16,-8
   2baf0:	9c800a0e 	bge	r19,r18,2bb1c <__s2b+0xd4>
   2baf4:	94e5c83a 	sub	r18,r18,r19
   2baf8:	84a5883a 	add	r18,r16,r18
   2bafc:	81c00007 	ldb	r7,0(r16)
   2bb00:	01800284 	movi	r6,10
   2bb04:	84000044 	addi	r16,r16,1
   2bb08:	100b883a 	mov	r5,r2
   2bb0c:	39fff404 	addi	r7,r7,-48
   2bb10:	8809883a 	mov	r4,r17
   2bb14:	002b9280 	call	2b928 <__multadd>
   2bb18:	84bff81e 	bne	r16,r18,2bafc <__alt_mem_sdram_controller_0+0xc002bafc>
   2bb1c:	dfc00617 	ldw	ra,24(sp)
   2bb20:	dd400517 	ldw	r21,20(sp)
   2bb24:	dd000417 	ldw	r20,16(sp)
   2bb28:	dcc00317 	ldw	r19,12(sp)
   2bb2c:	dc800217 	ldw	r18,8(sp)
   2bb30:	dc400117 	ldw	r17,4(sp)
   2bb34:	dc000017 	ldw	r16,0(sp)
   2bb38:	dec00704 	addi	sp,sp,28
   2bb3c:	f800283a 	ret
   2bb40:	84000284 	addi	r16,r16,10
   2bb44:	1827883a 	mov	r19,r3
   2bb48:	003fe906 	br	2baf0 <__alt_mem_sdram_controller_0+0xc002baf0>

0002bb4c <__hi0bits>:
   2bb4c:	20bfffec 	andhi	r2,r4,65535
   2bb50:	1000141e 	bne	r2,zero,2bba4 <__hi0bits+0x58>
   2bb54:	2008943a 	slli	r4,r4,16
   2bb58:	00800404 	movi	r2,16
   2bb5c:	20ffc02c 	andhi	r3,r4,65280
   2bb60:	1800021e 	bne	r3,zero,2bb6c <__hi0bits+0x20>
   2bb64:	2008923a 	slli	r4,r4,8
   2bb68:	10800204 	addi	r2,r2,8
   2bb6c:	20fc002c 	andhi	r3,r4,61440
   2bb70:	1800021e 	bne	r3,zero,2bb7c <__hi0bits+0x30>
   2bb74:	2008913a 	slli	r4,r4,4
   2bb78:	10800104 	addi	r2,r2,4
   2bb7c:	20f0002c 	andhi	r3,r4,49152
   2bb80:	1800031e 	bne	r3,zero,2bb90 <__hi0bits+0x44>
   2bb84:	2109883a 	add	r4,r4,r4
   2bb88:	10800084 	addi	r2,r2,2
   2bb8c:	2109883a 	add	r4,r4,r4
   2bb90:	20000316 	blt	r4,zero,2bba0 <__hi0bits+0x54>
   2bb94:	2110002c 	andhi	r4,r4,16384
   2bb98:	2000041e 	bne	r4,zero,2bbac <__hi0bits+0x60>
   2bb9c:	00800804 	movi	r2,32
   2bba0:	f800283a 	ret
   2bba4:	0005883a 	mov	r2,zero
   2bba8:	003fec06 	br	2bb5c <__alt_mem_sdram_controller_0+0xc002bb5c>
   2bbac:	10800044 	addi	r2,r2,1
   2bbb0:	f800283a 	ret

0002bbb4 <__lo0bits>:
   2bbb4:	20c00017 	ldw	r3,0(r4)
   2bbb8:	188001cc 	andi	r2,r3,7
   2bbbc:	10000826 	beq	r2,zero,2bbe0 <__lo0bits+0x2c>
   2bbc0:	1880004c 	andi	r2,r3,1
   2bbc4:	1000211e 	bne	r2,zero,2bc4c <__lo0bits+0x98>
   2bbc8:	1880008c 	andi	r2,r3,2
   2bbcc:	1000211e 	bne	r2,zero,2bc54 <__lo0bits+0xa0>
   2bbd0:	1806d0ba 	srli	r3,r3,2
   2bbd4:	00800084 	movi	r2,2
   2bbd8:	20c00015 	stw	r3,0(r4)
   2bbdc:	f800283a 	ret
   2bbe0:	18bfffcc 	andi	r2,r3,65535
   2bbe4:	10001326 	beq	r2,zero,2bc34 <__lo0bits+0x80>
   2bbe8:	0005883a 	mov	r2,zero
   2bbec:	19403fcc 	andi	r5,r3,255
   2bbf0:	2800021e 	bne	r5,zero,2bbfc <__lo0bits+0x48>
   2bbf4:	1806d23a 	srli	r3,r3,8
   2bbf8:	10800204 	addi	r2,r2,8
   2bbfc:	194003cc 	andi	r5,r3,15
   2bc00:	2800021e 	bne	r5,zero,2bc0c <__lo0bits+0x58>
   2bc04:	1806d13a 	srli	r3,r3,4
   2bc08:	10800104 	addi	r2,r2,4
   2bc0c:	194000cc 	andi	r5,r3,3
   2bc10:	2800021e 	bne	r5,zero,2bc1c <__lo0bits+0x68>
   2bc14:	1806d0ba 	srli	r3,r3,2
   2bc18:	10800084 	addi	r2,r2,2
   2bc1c:	1940004c 	andi	r5,r3,1
   2bc20:	2800081e 	bne	r5,zero,2bc44 <__lo0bits+0x90>
   2bc24:	1806d07a 	srli	r3,r3,1
   2bc28:	1800051e 	bne	r3,zero,2bc40 <__lo0bits+0x8c>
   2bc2c:	00800804 	movi	r2,32
   2bc30:	f800283a 	ret
   2bc34:	1806d43a 	srli	r3,r3,16
   2bc38:	00800404 	movi	r2,16
   2bc3c:	003feb06 	br	2bbec <__alt_mem_sdram_controller_0+0xc002bbec>
   2bc40:	10800044 	addi	r2,r2,1
   2bc44:	20c00015 	stw	r3,0(r4)
   2bc48:	f800283a 	ret
   2bc4c:	0005883a 	mov	r2,zero
   2bc50:	f800283a 	ret
   2bc54:	1806d07a 	srli	r3,r3,1
   2bc58:	00800044 	movi	r2,1
   2bc5c:	20c00015 	stw	r3,0(r4)
   2bc60:	f800283a 	ret

0002bc64 <__i2b>:
   2bc64:	defffd04 	addi	sp,sp,-12
   2bc68:	dc000015 	stw	r16,0(sp)
   2bc6c:	04000044 	movi	r16,1
   2bc70:	dc400115 	stw	r17,4(sp)
   2bc74:	2823883a 	mov	r17,r5
   2bc78:	800b883a 	mov	r5,r16
   2bc7c:	dfc00215 	stw	ra,8(sp)
   2bc80:	002b8580 	call	2b858 <_Balloc>
   2bc84:	14400515 	stw	r17,20(r2)
   2bc88:	14000415 	stw	r16,16(r2)
   2bc8c:	dfc00217 	ldw	ra,8(sp)
   2bc90:	dc400117 	ldw	r17,4(sp)
   2bc94:	dc000017 	ldw	r16,0(sp)
   2bc98:	dec00304 	addi	sp,sp,12
   2bc9c:	f800283a 	ret

0002bca0 <__multiply>:
   2bca0:	defffa04 	addi	sp,sp,-24
   2bca4:	dcc00315 	stw	r19,12(sp)
   2bca8:	dc800215 	stw	r18,8(sp)
   2bcac:	34c00417 	ldw	r19,16(r6)
   2bcb0:	2c800417 	ldw	r18,16(r5)
   2bcb4:	dd000415 	stw	r20,16(sp)
   2bcb8:	dc400115 	stw	r17,4(sp)
   2bcbc:	dfc00515 	stw	ra,20(sp)
   2bcc0:	dc000015 	stw	r16,0(sp)
   2bcc4:	2829883a 	mov	r20,r5
   2bcc8:	3023883a 	mov	r17,r6
   2bccc:	94c0050e 	bge	r18,r19,2bce4 <__multiply+0x44>
   2bcd0:	9007883a 	mov	r3,r18
   2bcd4:	3029883a 	mov	r20,r6
   2bcd8:	9825883a 	mov	r18,r19
   2bcdc:	2823883a 	mov	r17,r5
   2bce0:	1827883a 	mov	r19,r3
   2bce4:	a0800217 	ldw	r2,8(r20)
   2bce8:	94e1883a 	add	r16,r18,r19
   2bcec:	a1400117 	ldw	r5,4(r20)
   2bcf0:	1400010e 	bge	r2,r16,2bcf8 <__multiply+0x58>
   2bcf4:	29400044 	addi	r5,r5,1
   2bcf8:	002b8580 	call	2b858 <_Balloc>
   2bcfc:	8415883a 	add	r10,r16,r16
   2bd00:	12c00504 	addi	r11,r2,20
   2bd04:	5295883a 	add	r10,r10,r10
   2bd08:	5a95883a 	add	r10,r11,r10
   2bd0c:	5807883a 	mov	r3,r11
   2bd10:	5a80032e 	bgeu	r11,r10,2bd20 <__multiply+0x80>
   2bd14:	18000015 	stw	zero,0(r3)
   2bd18:	18c00104 	addi	r3,r3,4
   2bd1c:	1abffd36 	bltu	r3,r10,2bd14 <__alt_mem_sdram_controller_0+0xc002bd14>
   2bd20:	9ce7883a 	add	r19,r19,r19
   2bd24:	94a5883a 	add	r18,r18,r18
   2bd28:	89800504 	addi	r6,r17,20
   2bd2c:	9ce7883a 	add	r19,r19,r19
   2bd30:	a3400504 	addi	r13,r20,20
   2bd34:	94a5883a 	add	r18,r18,r18
   2bd38:	34d9883a 	add	r12,r6,r19
   2bd3c:	6c93883a 	add	r9,r13,r18
   2bd40:	3300422e 	bgeu	r6,r12,2be4c <__multiply+0x1ac>
   2bd44:	37c00017 	ldw	ra,0(r6)
   2bd48:	fbffffcc 	andi	r15,ra,65535
   2bd4c:	78001b26 	beq	r15,zero,2bdbc <__multiply+0x11c>
   2bd50:	5811883a 	mov	r8,r11
   2bd54:	681d883a 	mov	r14,r13
   2bd58:	000f883a 	mov	r7,zero
   2bd5c:	71000017 	ldw	r4,0(r14)
   2bd60:	40c00017 	ldw	r3,0(r8)
   2bd64:	73800104 	addi	r14,r14,4
   2bd68:	217fffcc 	andi	r5,r4,65535
   2bd6c:	2bcb383a 	mul	r5,r5,r15
   2bd70:	2008d43a 	srli	r4,r4,16
   2bd74:	1c7fffcc 	andi	r17,r3,65535
   2bd78:	2c4b883a 	add	r5,r5,r17
   2bd7c:	29cb883a 	add	r5,r5,r7
   2bd80:	23c9383a 	mul	r4,r4,r15
   2bd84:	1806d43a 	srli	r3,r3,16
   2bd88:	280ed43a 	srli	r7,r5,16
   2bd8c:	297fffcc 	andi	r5,r5,65535
   2bd90:	20c7883a 	add	r3,r4,r3
   2bd94:	19c7883a 	add	r3,r3,r7
   2bd98:	1808943a 	slli	r4,r3,16
   2bd9c:	4023883a 	mov	r17,r8
   2bda0:	180ed43a 	srli	r7,r3,16
   2bda4:	214ab03a 	or	r5,r4,r5
   2bda8:	41400015 	stw	r5,0(r8)
   2bdac:	42000104 	addi	r8,r8,4
   2bdb0:	727fea36 	bltu	r14,r9,2bd5c <__alt_mem_sdram_controller_0+0xc002bd5c>
   2bdb4:	89c00115 	stw	r7,4(r17)
   2bdb8:	37c00017 	ldw	ra,0(r6)
   2bdbc:	f83ed43a 	srli	ra,ra,16
   2bdc0:	f8001f26 	beq	ra,zero,2be40 <__multiply+0x1a0>
   2bdc4:	58c00017 	ldw	r3,0(r11)
   2bdc8:	681d883a 	mov	r14,r13
   2bdcc:	581f883a 	mov	r15,r11
   2bdd0:	1811883a 	mov	r8,r3
   2bdd4:	5825883a 	mov	r18,r11
   2bdd8:	000f883a 	mov	r7,zero
   2bddc:	00000106 	br	2bde4 <__multiply+0x144>
   2bde0:	8825883a 	mov	r18,r17
   2bde4:	7140000b 	ldhu	r5,0(r14)
   2bde8:	4010d43a 	srli	r8,r8,16
   2bdec:	193fffcc 	andi	r4,r3,65535
   2bdf0:	2fcb383a 	mul	r5,r5,ra
   2bdf4:	7bc00104 	addi	r15,r15,4
   2bdf8:	73800104 	addi	r14,r14,4
   2bdfc:	2a0b883a 	add	r5,r5,r8
   2be00:	29cb883a 	add	r5,r5,r7
   2be04:	2806943a 	slli	r3,r5,16
   2be08:	94400104 	addi	r17,r18,4
   2be0c:	280ad43a 	srli	r5,r5,16
   2be10:	1908b03a 	or	r4,r3,r4
   2be14:	793fff15 	stw	r4,-4(r15)
   2be18:	70ffff17 	ldw	r3,-4(r14)
   2be1c:	8a000017 	ldw	r8,0(r17)
   2be20:	1806d43a 	srli	r3,r3,16
   2be24:	413fffcc 	andi	r4,r8,65535
   2be28:	1fc7383a 	mul	r3,r3,ra
   2be2c:	1907883a 	add	r3,r3,r4
   2be30:	1947883a 	add	r3,r3,r5
   2be34:	180ed43a 	srli	r7,r3,16
   2be38:	727fe936 	bltu	r14,r9,2bde0 <__alt_mem_sdram_controller_0+0xc002bde0>
   2be3c:	90c00115 	stw	r3,4(r18)
   2be40:	31800104 	addi	r6,r6,4
   2be44:	5ac00104 	addi	r11,r11,4
   2be48:	333fbe36 	bltu	r6,r12,2bd44 <__alt_mem_sdram_controller_0+0xc002bd44>
   2be4c:	0400090e 	bge	zero,r16,2be74 <__multiply+0x1d4>
   2be50:	50ffff17 	ldw	r3,-4(r10)
   2be54:	52bfff04 	addi	r10,r10,-4
   2be58:	18000326 	beq	r3,zero,2be68 <__multiply+0x1c8>
   2be5c:	00000506 	br	2be74 <__multiply+0x1d4>
   2be60:	50c00017 	ldw	r3,0(r10)
   2be64:	1800031e 	bne	r3,zero,2be74 <__multiply+0x1d4>
   2be68:	843fffc4 	addi	r16,r16,-1
   2be6c:	52bfff04 	addi	r10,r10,-4
   2be70:	803ffb1e 	bne	r16,zero,2be60 <__alt_mem_sdram_controller_0+0xc002be60>
   2be74:	14000415 	stw	r16,16(r2)
   2be78:	dfc00517 	ldw	ra,20(sp)
   2be7c:	dd000417 	ldw	r20,16(sp)
   2be80:	dcc00317 	ldw	r19,12(sp)
   2be84:	dc800217 	ldw	r18,8(sp)
   2be88:	dc400117 	ldw	r17,4(sp)
   2be8c:	dc000017 	ldw	r16,0(sp)
   2be90:	dec00604 	addi	sp,sp,24
   2be94:	f800283a 	ret

0002be98 <__pow5mult>:
   2be98:	defffa04 	addi	sp,sp,-24
   2be9c:	dcc00315 	stw	r19,12(sp)
   2bea0:	dc000015 	stw	r16,0(sp)
   2bea4:	dfc00515 	stw	ra,20(sp)
   2bea8:	dd000415 	stw	r20,16(sp)
   2beac:	dc800215 	stw	r18,8(sp)
   2beb0:	dc400115 	stw	r17,4(sp)
   2beb4:	308000cc 	andi	r2,r6,3
   2beb8:	3021883a 	mov	r16,r6
   2bebc:	2027883a 	mov	r19,r4
   2bec0:	10002f1e 	bne	r2,zero,2bf80 <__pow5mult+0xe8>
   2bec4:	2825883a 	mov	r18,r5
   2bec8:	8021d0ba 	srai	r16,r16,2
   2becc:	80001a26 	beq	r16,zero,2bf38 <__pow5mult+0xa0>
   2bed0:	9c401217 	ldw	r17,72(r19)
   2bed4:	8800061e 	bne	r17,zero,2bef0 <__pow5mult+0x58>
   2bed8:	00003406 	br	2bfac <__pow5mult+0x114>
   2bedc:	8021d07a 	srai	r16,r16,1
   2bee0:	80001526 	beq	r16,zero,2bf38 <__pow5mult+0xa0>
   2bee4:	88800017 	ldw	r2,0(r17)
   2bee8:	10001c26 	beq	r2,zero,2bf5c <__pow5mult+0xc4>
   2beec:	1023883a 	mov	r17,r2
   2bef0:	8080004c 	andi	r2,r16,1
   2bef4:	103ff926 	beq	r2,zero,2bedc <__alt_mem_sdram_controller_0+0xc002bedc>
   2bef8:	880d883a 	mov	r6,r17
   2befc:	900b883a 	mov	r5,r18
   2bf00:	9809883a 	mov	r4,r19
   2bf04:	002bca00 	call	2bca0 <__multiply>
   2bf08:	90001b26 	beq	r18,zero,2bf78 <__pow5mult+0xe0>
   2bf0c:	91000117 	ldw	r4,4(r18)
   2bf10:	98c01317 	ldw	r3,76(r19)
   2bf14:	8021d07a 	srai	r16,r16,1
   2bf18:	2109883a 	add	r4,r4,r4
   2bf1c:	2109883a 	add	r4,r4,r4
   2bf20:	1907883a 	add	r3,r3,r4
   2bf24:	19000017 	ldw	r4,0(r3)
   2bf28:	91000015 	stw	r4,0(r18)
   2bf2c:	1c800015 	stw	r18,0(r3)
   2bf30:	1025883a 	mov	r18,r2
   2bf34:	803feb1e 	bne	r16,zero,2bee4 <__alt_mem_sdram_controller_0+0xc002bee4>
   2bf38:	9005883a 	mov	r2,r18
   2bf3c:	dfc00517 	ldw	ra,20(sp)
   2bf40:	dd000417 	ldw	r20,16(sp)
   2bf44:	dcc00317 	ldw	r19,12(sp)
   2bf48:	dc800217 	ldw	r18,8(sp)
   2bf4c:	dc400117 	ldw	r17,4(sp)
   2bf50:	dc000017 	ldw	r16,0(sp)
   2bf54:	dec00604 	addi	sp,sp,24
   2bf58:	f800283a 	ret
   2bf5c:	880d883a 	mov	r6,r17
   2bf60:	880b883a 	mov	r5,r17
   2bf64:	9809883a 	mov	r4,r19
   2bf68:	002bca00 	call	2bca0 <__multiply>
   2bf6c:	88800015 	stw	r2,0(r17)
   2bf70:	10000015 	stw	zero,0(r2)
   2bf74:	003fdd06 	br	2beec <__alt_mem_sdram_controller_0+0xc002beec>
   2bf78:	1025883a 	mov	r18,r2
   2bf7c:	003fd706 	br	2bedc <__alt_mem_sdram_controller_0+0xc002bedc>
   2bf80:	10bfffc4 	addi	r2,r2,-1
   2bf84:	1085883a 	add	r2,r2,r2
   2bf88:	00c000f4 	movhi	r3,3
   2bf8c:	18d8eb04 	addi	r3,r3,25516
   2bf90:	1085883a 	add	r2,r2,r2
   2bf94:	1885883a 	add	r2,r3,r2
   2bf98:	11800017 	ldw	r6,0(r2)
   2bf9c:	000f883a 	mov	r7,zero
   2bfa0:	002b9280 	call	2b928 <__multadd>
   2bfa4:	1025883a 	mov	r18,r2
   2bfa8:	003fc706 	br	2bec8 <__alt_mem_sdram_controller_0+0xc002bec8>
   2bfac:	05000044 	movi	r20,1
   2bfb0:	a00b883a 	mov	r5,r20
   2bfb4:	9809883a 	mov	r4,r19
   2bfb8:	002b8580 	call	2b858 <_Balloc>
   2bfbc:	1023883a 	mov	r17,r2
   2bfc0:	00809c44 	movi	r2,625
   2bfc4:	88800515 	stw	r2,20(r17)
   2bfc8:	8d000415 	stw	r20,16(r17)
   2bfcc:	9c401215 	stw	r17,72(r19)
   2bfd0:	88000015 	stw	zero,0(r17)
   2bfd4:	003fc606 	br	2bef0 <__alt_mem_sdram_controller_0+0xc002bef0>

0002bfd8 <__lshift>:
   2bfd8:	defff904 	addi	sp,sp,-28
   2bfdc:	dd400515 	stw	r21,20(sp)
   2bfe0:	dcc00315 	stw	r19,12(sp)
   2bfe4:	302bd17a 	srai	r21,r6,5
   2bfe8:	2cc00417 	ldw	r19,16(r5)
   2bfec:	28800217 	ldw	r2,8(r5)
   2bff0:	dd000415 	stw	r20,16(sp)
   2bff4:	ace7883a 	add	r19,r21,r19
   2bff8:	dc800215 	stw	r18,8(sp)
   2bffc:	dc400115 	stw	r17,4(sp)
   2c000:	dc000015 	stw	r16,0(sp)
   2c004:	dfc00615 	stw	ra,24(sp)
   2c008:	9c000044 	addi	r16,r19,1
   2c00c:	2823883a 	mov	r17,r5
   2c010:	3029883a 	mov	r20,r6
   2c014:	2025883a 	mov	r18,r4
   2c018:	29400117 	ldw	r5,4(r5)
   2c01c:	1400030e 	bge	r2,r16,2c02c <__lshift+0x54>
   2c020:	1085883a 	add	r2,r2,r2
   2c024:	29400044 	addi	r5,r5,1
   2c028:	143ffd16 	blt	r2,r16,2c020 <__alt_mem_sdram_controller_0+0xc002c020>
   2c02c:	9009883a 	mov	r4,r18
   2c030:	002b8580 	call	2b858 <_Balloc>
   2c034:	10c00504 	addi	r3,r2,20
   2c038:	0540070e 	bge	zero,r21,2c058 <__lshift+0x80>
   2c03c:	ad6b883a 	add	r21,r21,r21
   2c040:	ad6b883a 	add	r21,r21,r21
   2c044:	1809883a 	mov	r4,r3
   2c048:	1d47883a 	add	r3,r3,r21
   2c04c:	20000015 	stw	zero,0(r4)
   2c050:	21000104 	addi	r4,r4,4
   2c054:	193ffd1e 	bne	r3,r4,2c04c <__alt_mem_sdram_controller_0+0xc002c04c>
   2c058:	8a000417 	ldw	r8,16(r17)
   2c05c:	89000504 	addi	r4,r17,20
   2c060:	a18007cc 	andi	r6,r20,31
   2c064:	4211883a 	add	r8,r8,r8
   2c068:	4211883a 	add	r8,r8,r8
   2c06c:	2211883a 	add	r8,r4,r8
   2c070:	30002326 	beq	r6,zero,2c100 <__lshift+0x128>
   2c074:	02400804 	movi	r9,32
   2c078:	4993c83a 	sub	r9,r9,r6
   2c07c:	000b883a 	mov	r5,zero
   2c080:	21c00017 	ldw	r7,0(r4)
   2c084:	1815883a 	mov	r10,r3
   2c088:	18c00104 	addi	r3,r3,4
   2c08c:	398e983a 	sll	r7,r7,r6
   2c090:	21000104 	addi	r4,r4,4
   2c094:	394ab03a 	or	r5,r7,r5
   2c098:	197fff15 	stw	r5,-4(r3)
   2c09c:	217fff17 	ldw	r5,-4(r4)
   2c0a0:	2a4ad83a 	srl	r5,r5,r9
   2c0a4:	223ff636 	bltu	r4,r8,2c080 <__alt_mem_sdram_controller_0+0xc002c080>
   2c0a8:	51400115 	stw	r5,4(r10)
   2c0ac:	28001a1e 	bne	r5,zero,2c118 <__lshift+0x140>
   2c0b0:	843fffc4 	addi	r16,r16,-1
   2c0b4:	14000415 	stw	r16,16(r2)
   2c0b8:	88000826 	beq	r17,zero,2c0dc <__lshift+0x104>
   2c0bc:	89000117 	ldw	r4,4(r17)
   2c0c0:	90c01317 	ldw	r3,76(r18)
   2c0c4:	2109883a 	add	r4,r4,r4
   2c0c8:	2109883a 	add	r4,r4,r4
   2c0cc:	1907883a 	add	r3,r3,r4
   2c0d0:	19000017 	ldw	r4,0(r3)
   2c0d4:	89000015 	stw	r4,0(r17)
   2c0d8:	1c400015 	stw	r17,0(r3)
   2c0dc:	dfc00617 	ldw	ra,24(sp)
   2c0e0:	dd400517 	ldw	r21,20(sp)
   2c0e4:	dd000417 	ldw	r20,16(sp)
   2c0e8:	dcc00317 	ldw	r19,12(sp)
   2c0ec:	dc800217 	ldw	r18,8(sp)
   2c0f0:	dc400117 	ldw	r17,4(sp)
   2c0f4:	dc000017 	ldw	r16,0(sp)
   2c0f8:	dec00704 	addi	sp,sp,28
   2c0fc:	f800283a 	ret
   2c100:	21400017 	ldw	r5,0(r4)
   2c104:	18c00104 	addi	r3,r3,4
   2c108:	21000104 	addi	r4,r4,4
   2c10c:	197fff15 	stw	r5,-4(r3)
   2c110:	223ffb36 	bltu	r4,r8,2c100 <__alt_mem_sdram_controller_0+0xc002c100>
   2c114:	003fe606 	br	2c0b0 <__alt_mem_sdram_controller_0+0xc002c0b0>
   2c118:	9c000084 	addi	r16,r19,2
   2c11c:	003fe406 	br	2c0b0 <__alt_mem_sdram_controller_0+0xc002c0b0>

0002c120 <__mcmp>:
   2c120:	20800417 	ldw	r2,16(r4)
   2c124:	28c00417 	ldw	r3,16(r5)
   2c128:	10c5c83a 	sub	r2,r2,r3
   2c12c:	1000111e 	bne	r2,zero,2c174 <__mcmp+0x54>
   2c130:	18c7883a 	add	r3,r3,r3
   2c134:	18c7883a 	add	r3,r3,r3
   2c138:	21000504 	addi	r4,r4,20
   2c13c:	29400504 	addi	r5,r5,20
   2c140:	20c5883a 	add	r2,r4,r3
   2c144:	28cb883a 	add	r5,r5,r3
   2c148:	00000106 	br	2c150 <__mcmp+0x30>
   2c14c:	20800a2e 	bgeu	r4,r2,2c178 <__mcmp+0x58>
   2c150:	10bfff04 	addi	r2,r2,-4
   2c154:	297fff04 	addi	r5,r5,-4
   2c158:	11800017 	ldw	r6,0(r2)
   2c15c:	28c00017 	ldw	r3,0(r5)
   2c160:	30fffa26 	beq	r6,r3,2c14c <__alt_mem_sdram_controller_0+0xc002c14c>
   2c164:	30c00236 	bltu	r6,r3,2c170 <__mcmp+0x50>
   2c168:	00800044 	movi	r2,1
   2c16c:	f800283a 	ret
   2c170:	00bfffc4 	movi	r2,-1
   2c174:	f800283a 	ret
   2c178:	0005883a 	mov	r2,zero
   2c17c:	f800283a 	ret

0002c180 <__mdiff>:
   2c180:	28c00417 	ldw	r3,16(r5)
   2c184:	30800417 	ldw	r2,16(r6)
   2c188:	defffa04 	addi	sp,sp,-24
   2c18c:	dcc00315 	stw	r19,12(sp)
   2c190:	dc800215 	stw	r18,8(sp)
   2c194:	dfc00515 	stw	ra,20(sp)
   2c198:	dd000415 	stw	r20,16(sp)
   2c19c:	dc400115 	stw	r17,4(sp)
   2c1a0:	dc000015 	stw	r16,0(sp)
   2c1a4:	1887c83a 	sub	r3,r3,r2
   2c1a8:	2825883a 	mov	r18,r5
   2c1ac:	3027883a 	mov	r19,r6
   2c1b0:	1800141e 	bne	r3,zero,2c204 <__mdiff+0x84>
   2c1b4:	1085883a 	add	r2,r2,r2
   2c1b8:	1085883a 	add	r2,r2,r2
   2c1bc:	2a000504 	addi	r8,r5,20
   2c1c0:	34000504 	addi	r16,r6,20
   2c1c4:	4087883a 	add	r3,r8,r2
   2c1c8:	8085883a 	add	r2,r16,r2
   2c1cc:	00000106 	br	2c1d4 <__mdiff+0x54>
   2c1d0:	40c0592e 	bgeu	r8,r3,2c338 <__mdiff+0x1b8>
   2c1d4:	18ffff04 	addi	r3,r3,-4
   2c1d8:	10bfff04 	addi	r2,r2,-4
   2c1dc:	19c00017 	ldw	r7,0(r3)
   2c1e0:	11400017 	ldw	r5,0(r2)
   2c1e4:	397ffa26 	beq	r7,r5,2c1d0 <__alt_mem_sdram_controller_0+0xc002c1d0>
   2c1e8:	3940592e 	bgeu	r7,r5,2c350 <__mdiff+0x1d0>
   2c1ec:	9005883a 	mov	r2,r18
   2c1f0:	4023883a 	mov	r17,r8
   2c1f4:	9825883a 	mov	r18,r19
   2c1f8:	05000044 	movi	r20,1
   2c1fc:	1027883a 	mov	r19,r2
   2c200:	00000406 	br	2c214 <__mdiff+0x94>
   2c204:	18005616 	blt	r3,zero,2c360 <__mdiff+0x1e0>
   2c208:	34400504 	addi	r17,r6,20
   2c20c:	2c000504 	addi	r16,r5,20
   2c210:	0029883a 	mov	r20,zero
   2c214:	91400117 	ldw	r5,4(r18)
   2c218:	002b8580 	call	2b858 <_Balloc>
   2c21c:	92400417 	ldw	r9,16(r18)
   2c220:	9b000417 	ldw	r12,16(r19)
   2c224:	12c00504 	addi	r11,r2,20
   2c228:	4a51883a 	add	r8,r9,r9
   2c22c:	6319883a 	add	r12,r12,r12
   2c230:	4211883a 	add	r8,r8,r8
   2c234:	6319883a 	add	r12,r12,r12
   2c238:	15000315 	stw	r20,12(r2)
   2c23c:	8211883a 	add	r8,r16,r8
   2c240:	8b19883a 	add	r12,r17,r12
   2c244:	0007883a 	mov	r3,zero
   2c248:	81400017 	ldw	r5,0(r16)
   2c24c:	89c00017 	ldw	r7,0(r17)
   2c250:	59800104 	addi	r6,r11,4
   2c254:	293fffcc 	andi	r4,r5,65535
   2c258:	20c7883a 	add	r3,r4,r3
   2c25c:	393fffcc 	andi	r4,r7,65535
   2c260:	1909c83a 	sub	r4,r3,r4
   2c264:	280ad43a 	srli	r5,r5,16
   2c268:	380ed43a 	srli	r7,r7,16
   2c26c:	2007d43a 	srai	r3,r4,16
   2c270:	213fffcc 	andi	r4,r4,65535
   2c274:	29cbc83a 	sub	r5,r5,r7
   2c278:	28c7883a 	add	r3,r5,r3
   2c27c:	180a943a 	slli	r5,r3,16
   2c280:	8c400104 	addi	r17,r17,4
   2c284:	84000104 	addi	r16,r16,4
   2c288:	2908b03a 	or	r4,r5,r4
   2c28c:	59000015 	stw	r4,0(r11)
   2c290:	1807d43a 	srai	r3,r3,16
   2c294:	3015883a 	mov	r10,r6
   2c298:	3017883a 	mov	r11,r6
   2c29c:	8b3fea36 	bltu	r17,r12,2c248 <__alt_mem_sdram_controller_0+0xc002c248>
   2c2a0:	8200162e 	bgeu	r16,r8,2c2fc <__mdiff+0x17c>
   2c2a4:	8017883a 	mov	r11,r16
   2c2a8:	59400017 	ldw	r5,0(r11)
   2c2ac:	31800104 	addi	r6,r6,4
   2c2b0:	5ac00104 	addi	r11,r11,4
   2c2b4:	293fffcc 	andi	r4,r5,65535
   2c2b8:	20c7883a 	add	r3,r4,r3
   2c2bc:	280ed43a 	srli	r7,r5,16
   2c2c0:	180bd43a 	srai	r5,r3,16
   2c2c4:	193fffcc 	andi	r4,r3,65535
   2c2c8:	3947883a 	add	r3,r7,r5
   2c2cc:	180a943a 	slli	r5,r3,16
   2c2d0:	1807d43a 	srai	r3,r3,16
   2c2d4:	2908b03a 	or	r4,r5,r4
   2c2d8:	313fff15 	stw	r4,-4(r6)
   2c2dc:	5a3ff236 	bltu	r11,r8,2c2a8 <__alt_mem_sdram_controller_0+0xc002c2a8>
   2c2e0:	0406303a 	nor	r3,zero,r16
   2c2e4:	1a07883a 	add	r3,r3,r8
   2c2e8:	1806d0ba 	srli	r3,r3,2
   2c2ec:	18c00044 	addi	r3,r3,1
   2c2f0:	18c7883a 	add	r3,r3,r3
   2c2f4:	18c7883a 	add	r3,r3,r3
   2c2f8:	50d5883a 	add	r10,r10,r3
   2c2fc:	50ffff04 	addi	r3,r10,-4
   2c300:	2000041e 	bne	r4,zero,2c314 <__mdiff+0x194>
   2c304:	18ffff04 	addi	r3,r3,-4
   2c308:	19000017 	ldw	r4,0(r3)
   2c30c:	4a7fffc4 	addi	r9,r9,-1
   2c310:	203ffc26 	beq	r4,zero,2c304 <__alt_mem_sdram_controller_0+0xc002c304>
   2c314:	12400415 	stw	r9,16(r2)
   2c318:	dfc00517 	ldw	ra,20(sp)
   2c31c:	dd000417 	ldw	r20,16(sp)
   2c320:	dcc00317 	ldw	r19,12(sp)
   2c324:	dc800217 	ldw	r18,8(sp)
   2c328:	dc400117 	ldw	r17,4(sp)
   2c32c:	dc000017 	ldw	r16,0(sp)
   2c330:	dec00604 	addi	sp,sp,24
   2c334:	f800283a 	ret
   2c338:	000b883a 	mov	r5,zero
   2c33c:	002b8580 	call	2b858 <_Balloc>
   2c340:	00c00044 	movi	r3,1
   2c344:	10c00415 	stw	r3,16(r2)
   2c348:	10000515 	stw	zero,20(r2)
   2c34c:	003ff206 	br	2c318 <__alt_mem_sdram_controller_0+0xc002c318>
   2c350:	8023883a 	mov	r17,r16
   2c354:	0029883a 	mov	r20,zero
   2c358:	4021883a 	mov	r16,r8
   2c35c:	003fad06 	br	2c214 <__alt_mem_sdram_controller_0+0xc002c214>
   2c360:	9005883a 	mov	r2,r18
   2c364:	94400504 	addi	r17,r18,20
   2c368:	9c000504 	addi	r16,r19,20
   2c36c:	9825883a 	mov	r18,r19
   2c370:	05000044 	movi	r20,1
   2c374:	1027883a 	mov	r19,r2
   2c378:	003fa606 	br	2c214 <__alt_mem_sdram_controller_0+0xc002c214>

0002c37c <__ulp>:
   2c37c:	295ffc2c 	andhi	r5,r5,32752
   2c380:	00bf3034 	movhi	r2,64704
   2c384:	2887883a 	add	r3,r5,r2
   2c388:	00c0020e 	bge	zero,r3,2c394 <__ulp+0x18>
   2c38c:	0005883a 	mov	r2,zero
   2c390:	f800283a 	ret
   2c394:	00c7c83a 	sub	r3,zero,r3
   2c398:	1807d53a 	srai	r3,r3,20
   2c39c:	008004c4 	movi	r2,19
   2c3a0:	10c00b0e 	bge	r2,r3,2c3d0 <__ulp+0x54>
   2c3a4:	18bffb04 	addi	r2,r3,-20
   2c3a8:	01000784 	movi	r4,30
   2c3ac:	0007883a 	mov	r3,zero
   2c3b0:	20800516 	blt	r4,r2,2c3c8 <__ulp+0x4c>
   2c3b4:	010007c4 	movi	r4,31
   2c3b8:	2089c83a 	sub	r4,r4,r2
   2c3bc:	00800044 	movi	r2,1
   2c3c0:	1104983a 	sll	r2,r2,r4
   2c3c4:	f800283a 	ret
   2c3c8:	00800044 	movi	r2,1
   2c3cc:	f800283a 	ret
   2c3d0:	01400234 	movhi	r5,8
   2c3d4:	28c7d83a 	sra	r3,r5,r3
   2c3d8:	0005883a 	mov	r2,zero
   2c3dc:	f800283a 	ret

0002c3e0 <__b2d>:
   2c3e0:	defffa04 	addi	sp,sp,-24
   2c3e4:	dc000015 	stw	r16,0(sp)
   2c3e8:	24000417 	ldw	r16,16(r4)
   2c3ec:	dc400115 	stw	r17,4(sp)
   2c3f0:	24400504 	addi	r17,r4,20
   2c3f4:	8421883a 	add	r16,r16,r16
   2c3f8:	8421883a 	add	r16,r16,r16
   2c3fc:	8c21883a 	add	r16,r17,r16
   2c400:	dc800215 	stw	r18,8(sp)
   2c404:	84bfff17 	ldw	r18,-4(r16)
   2c408:	dd000415 	stw	r20,16(sp)
   2c40c:	dcc00315 	stw	r19,12(sp)
   2c410:	9009883a 	mov	r4,r18
   2c414:	2829883a 	mov	r20,r5
   2c418:	dfc00515 	stw	ra,20(sp)
   2c41c:	002bb4c0 	call	2bb4c <__hi0bits>
   2c420:	00c00804 	movi	r3,32
   2c424:	1889c83a 	sub	r4,r3,r2
   2c428:	a1000015 	stw	r4,0(r20)
   2c42c:	01000284 	movi	r4,10
   2c430:	84ffff04 	addi	r19,r16,-4
   2c434:	20801216 	blt	r4,r2,2c480 <__b2d+0xa0>
   2c438:	018002c4 	movi	r6,11
   2c43c:	308dc83a 	sub	r6,r6,r2
   2c440:	9186d83a 	srl	r3,r18,r6
   2c444:	18cffc34 	orhi	r3,r3,16368
   2c448:	8cc0212e 	bgeu	r17,r19,2c4d0 <__b2d+0xf0>
   2c44c:	813ffe17 	ldw	r4,-8(r16)
   2c450:	218cd83a 	srl	r6,r4,r6
   2c454:	10800544 	addi	r2,r2,21
   2c458:	9084983a 	sll	r2,r18,r2
   2c45c:	1184b03a 	or	r2,r2,r6
   2c460:	dfc00517 	ldw	ra,20(sp)
   2c464:	dd000417 	ldw	r20,16(sp)
   2c468:	dcc00317 	ldw	r19,12(sp)
   2c46c:	dc800217 	ldw	r18,8(sp)
   2c470:	dc400117 	ldw	r17,4(sp)
   2c474:	dc000017 	ldw	r16,0(sp)
   2c478:	dec00604 	addi	sp,sp,24
   2c47c:	f800283a 	ret
   2c480:	8cc00f2e 	bgeu	r17,r19,2c4c0 <__b2d+0xe0>
   2c484:	117ffd44 	addi	r5,r2,-11
   2c488:	80bffe17 	ldw	r2,-8(r16)
   2c48c:	28000e26 	beq	r5,zero,2c4c8 <__b2d+0xe8>
   2c490:	1949c83a 	sub	r4,r3,r5
   2c494:	9164983a 	sll	r18,r18,r5
   2c498:	1106d83a 	srl	r3,r2,r4
   2c49c:	81bffe04 	addi	r6,r16,-8
   2c4a0:	948ffc34 	orhi	r18,r18,16368
   2c4a4:	90c6b03a 	or	r3,r18,r3
   2c4a8:	89800e2e 	bgeu	r17,r6,2c4e4 <__b2d+0x104>
   2c4ac:	81bffd17 	ldw	r6,-12(r16)
   2c4b0:	1144983a 	sll	r2,r2,r5
   2c4b4:	310ad83a 	srl	r5,r6,r4
   2c4b8:	2884b03a 	or	r2,r5,r2
   2c4bc:	003fe806 	br	2c460 <__alt_mem_sdram_controller_0+0xc002c460>
   2c4c0:	10bffd44 	addi	r2,r2,-11
   2c4c4:	1000041e 	bne	r2,zero,2c4d8 <__b2d+0xf8>
   2c4c8:	90cffc34 	orhi	r3,r18,16368
   2c4cc:	003fe406 	br	2c460 <__alt_mem_sdram_controller_0+0xc002c460>
   2c4d0:	000d883a 	mov	r6,zero
   2c4d4:	003fdf06 	br	2c454 <__alt_mem_sdram_controller_0+0xc002c454>
   2c4d8:	90a4983a 	sll	r18,r18,r2
   2c4dc:	0005883a 	mov	r2,zero
   2c4e0:	003ff906 	br	2c4c8 <__alt_mem_sdram_controller_0+0xc002c4c8>
   2c4e4:	1144983a 	sll	r2,r2,r5
   2c4e8:	003fdd06 	br	2c460 <__alt_mem_sdram_controller_0+0xc002c460>

0002c4ec <__d2b>:
   2c4ec:	defff804 	addi	sp,sp,-32
   2c4f0:	dc000215 	stw	r16,8(sp)
   2c4f4:	3021883a 	mov	r16,r6
   2c4f8:	dc400315 	stw	r17,12(sp)
   2c4fc:	8022907a 	slli	r17,r16,1
   2c500:	dd000615 	stw	r20,24(sp)
   2c504:	2829883a 	mov	r20,r5
   2c508:	01400044 	movi	r5,1
   2c50c:	dcc00515 	stw	r19,20(sp)
   2c510:	dc800415 	stw	r18,16(sp)
   2c514:	dfc00715 	stw	ra,28(sp)
   2c518:	3825883a 	mov	r18,r7
   2c51c:	8822d57a 	srli	r17,r17,21
   2c520:	002b8580 	call	2b858 <_Balloc>
   2c524:	1027883a 	mov	r19,r2
   2c528:	00800434 	movhi	r2,16
   2c52c:	10bfffc4 	addi	r2,r2,-1
   2c530:	808c703a 	and	r6,r16,r2
   2c534:	88000126 	beq	r17,zero,2c53c <__d2b+0x50>
   2c538:	31800434 	orhi	r6,r6,16
   2c53c:	d9800015 	stw	r6,0(sp)
   2c540:	a0002426 	beq	r20,zero,2c5d4 <__d2b+0xe8>
   2c544:	d9000104 	addi	r4,sp,4
   2c548:	dd000115 	stw	r20,4(sp)
   2c54c:	002bbb40 	call	2bbb4 <__lo0bits>
   2c550:	d8c00017 	ldw	r3,0(sp)
   2c554:	10002f1e 	bne	r2,zero,2c614 <__d2b+0x128>
   2c558:	d9000117 	ldw	r4,4(sp)
   2c55c:	99000515 	stw	r4,20(r19)
   2c560:	1821003a 	cmpeq	r16,r3,zero
   2c564:	01000084 	movi	r4,2
   2c568:	2421c83a 	sub	r16,r4,r16
   2c56c:	98c00615 	stw	r3,24(r19)
   2c570:	9c000415 	stw	r16,16(r19)
   2c574:	88001f1e 	bne	r17,zero,2c5f4 <__d2b+0x108>
   2c578:	10bef384 	addi	r2,r2,-1074
   2c57c:	90800015 	stw	r2,0(r18)
   2c580:	00900034 	movhi	r2,16384
   2c584:	10bfffc4 	addi	r2,r2,-1
   2c588:	8085883a 	add	r2,r16,r2
   2c58c:	1085883a 	add	r2,r2,r2
   2c590:	1085883a 	add	r2,r2,r2
   2c594:	9885883a 	add	r2,r19,r2
   2c598:	11000517 	ldw	r4,20(r2)
   2c59c:	8020917a 	slli	r16,r16,5
   2c5a0:	002bb4c0 	call	2bb4c <__hi0bits>
   2c5a4:	d8c00817 	ldw	r3,32(sp)
   2c5a8:	8085c83a 	sub	r2,r16,r2
   2c5ac:	18800015 	stw	r2,0(r3)
   2c5b0:	9805883a 	mov	r2,r19
   2c5b4:	dfc00717 	ldw	ra,28(sp)
   2c5b8:	dd000617 	ldw	r20,24(sp)
   2c5bc:	dcc00517 	ldw	r19,20(sp)
   2c5c0:	dc800417 	ldw	r18,16(sp)
   2c5c4:	dc400317 	ldw	r17,12(sp)
   2c5c8:	dc000217 	ldw	r16,8(sp)
   2c5cc:	dec00804 	addi	sp,sp,32
   2c5d0:	f800283a 	ret
   2c5d4:	d809883a 	mov	r4,sp
   2c5d8:	002bbb40 	call	2bbb4 <__lo0bits>
   2c5dc:	d8c00017 	ldw	r3,0(sp)
   2c5e0:	04000044 	movi	r16,1
   2c5e4:	9c000415 	stw	r16,16(r19)
   2c5e8:	98c00515 	stw	r3,20(r19)
   2c5ec:	10800804 	addi	r2,r2,32
   2c5f0:	883fe126 	beq	r17,zero,2c578 <__alt_mem_sdram_controller_0+0xc002c578>
   2c5f4:	00c00d44 	movi	r3,53
   2c5f8:	8c7ef344 	addi	r17,r17,-1075
   2c5fc:	88a3883a 	add	r17,r17,r2
   2c600:	1885c83a 	sub	r2,r3,r2
   2c604:	d8c00817 	ldw	r3,32(sp)
   2c608:	94400015 	stw	r17,0(r18)
   2c60c:	18800015 	stw	r2,0(r3)
   2c610:	003fe706 	br	2c5b0 <__alt_mem_sdram_controller_0+0xc002c5b0>
   2c614:	01000804 	movi	r4,32
   2c618:	2089c83a 	sub	r4,r4,r2
   2c61c:	1908983a 	sll	r4,r3,r4
   2c620:	d9400117 	ldw	r5,4(sp)
   2c624:	1886d83a 	srl	r3,r3,r2
   2c628:	2148b03a 	or	r4,r4,r5
   2c62c:	99000515 	stw	r4,20(r19)
   2c630:	d8c00015 	stw	r3,0(sp)
   2c634:	003fca06 	br	2c560 <__alt_mem_sdram_controller_0+0xc002c560>

0002c638 <__ratio>:
   2c638:	defff904 	addi	sp,sp,-28
   2c63c:	dc400315 	stw	r17,12(sp)
   2c640:	2823883a 	mov	r17,r5
   2c644:	d9400104 	addi	r5,sp,4
   2c648:	dfc00615 	stw	ra,24(sp)
   2c64c:	dcc00515 	stw	r19,20(sp)
   2c650:	dc800415 	stw	r18,16(sp)
   2c654:	2027883a 	mov	r19,r4
   2c658:	dc000215 	stw	r16,8(sp)
   2c65c:	002c3e00 	call	2c3e0 <__b2d>
   2c660:	d80b883a 	mov	r5,sp
   2c664:	8809883a 	mov	r4,r17
   2c668:	1025883a 	mov	r18,r2
   2c66c:	1821883a 	mov	r16,r3
   2c670:	002c3e00 	call	2c3e0 <__b2d>
   2c674:	8a000417 	ldw	r8,16(r17)
   2c678:	99000417 	ldw	r4,16(r19)
   2c67c:	d9400117 	ldw	r5,4(sp)
   2c680:	2209c83a 	sub	r4,r4,r8
   2c684:	2010917a 	slli	r8,r4,5
   2c688:	d9000017 	ldw	r4,0(sp)
   2c68c:	2909c83a 	sub	r4,r5,r4
   2c690:	4109883a 	add	r4,r8,r4
   2c694:	01000e0e 	bge	zero,r4,2c6d0 <__ratio+0x98>
   2c698:	2008953a 	slli	r4,r4,20
   2c69c:	2421883a 	add	r16,r4,r16
   2c6a0:	100d883a 	mov	r6,r2
   2c6a4:	180f883a 	mov	r7,r3
   2c6a8:	9009883a 	mov	r4,r18
   2c6ac:	800b883a 	mov	r5,r16
   2c6b0:	00316880 	call	31688 <__divdf3>
   2c6b4:	dfc00617 	ldw	ra,24(sp)
   2c6b8:	dcc00517 	ldw	r19,20(sp)
   2c6bc:	dc800417 	ldw	r18,16(sp)
   2c6c0:	dc400317 	ldw	r17,12(sp)
   2c6c4:	dc000217 	ldw	r16,8(sp)
   2c6c8:	dec00704 	addi	sp,sp,28
   2c6cc:	f800283a 	ret
   2c6d0:	2008953a 	slli	r4,r4,20
   2c6d4:	1907c83a 	sub	r3,r3,r4
   2c6d8:	003ff106 	br	2c6a0 <__alt_mem_sdram_controller_0+0xc002c6a0>

0002c6dc <_mprec_log10>:
   2c6dc:	defffe04 	addi	sp,sp,-8
   2c6e0:	dc000015 	stw	r16,0(sp)
   2c6e4:	dfc00115 	stw	ra,4(sp)
   2c6e8:	008005c4 	movi	r2,23
   2c6ec:	2021883a 	mov	r16,r4
   2c6f0:	11000d0e 	bge	r2,r4,2c728 <_mprec_log10+0x4c>
   2c6f4:	0005883a 	mov	r2,zero
   2c6f8:	00cffc34 	movhi	r3,16368
   2c6fc:	843fffc4 	addi	r16,r16,-1
   2c700:	000d883a 	mov	r6,zero
   2c704:	01d00934 	movhi	r7,16420
   2c708:	1009883a 	mov	r4,r2
   2c70c:	180b883a 	mov	r5,r3
   2c710:	00321c80 	call	321c8 <__muldf3>
   2c714:	803ff91e 	bne	r16,zero,2c6fc <__alt_mem_sdram_controller_0+0xc002c6fc>
   2c718:	dfc00117 	ldw	ra,4(sp)
   2c71c:	dc000017 	ldw	r16,0(sp)
   2c720:	dec00204 	addi	sp,sp,8
   2c724:	f800283a 	ret
   2c728:	202090fa 	slli	r16,r4,3
   2c72c:	008000f4 	movhi	r2,3
   2c730:	10990204 	addi	r2,r2,25608
   2c734:	1421883a 	add	r16,r2,r16
   2c738:	80800017 	ldw	r2,0(r16)
   2c73c:	80c00117 	ldw	r3,4(r16)
   2c740:	dfc00117 	ldw	ra,4(sp)
   2c744:	dc000017 	ldw	r16,0(sp)
   2c748:	dec00204 	addi	sp,sp,8
   2c74c:	f800283a 	ret

0002c750 <__copybits>:
   2c750:	297fffc4 	addi	r5,r5,-1
   2c754:	280fd17a 	srai	r7,r5,5
   2c758:	30c00417 	ldw	r3,16(r6)
   2c75c:	30800504 	addi	r2,r6,20
   2c760:	39c00044 	addi	r7,r7,1
   2c764:	18c7883a 	add	r3,r3,r3
   2c768:	39cf883a 	add	r7,r7,r7
   2c76c:	18c7883a 	add	r3,r3,r3
   2c770:	39cf883a 	add	r7,r7,r7
   2c774:	10c7883a 	add	r3,r2,r3
   2c778:	21cf883a 	add	r7,r4,r7
   2c77c:	10c00d2e 	bgeu	r2,r3,2c7b4 <__copybits+0x64>
   2c780:	200b883a 	mov	r5,r4
   2c784:	12000017 	ldw	r8,0(r2)
   2c788:	29400104 	addi	r5,r5,4
   2c78c:	10800104 	addi	r2,r2,4
   2c790:	2a3fff15 	stw	r8,-4(r5)
   2c794:	10fffb36 	bltu	r2,r3,2c784 <__alt_mem_sdram_controller_0+0xc002c784>
   2c798:	1985c83a 	sub	r2,r3,r6
   2c79c:	10bffac4 	addi	r2,r2,-21
   2c7a0:	1004d0ba 	srli	r2,r2,2
   2c7a4:	10800044 	addi	r2,r2,1
   2c7a8:	1085883a 	add	r2,r2,r2
   2c7ac:	1085883a 	add	r2,r2,r2
   2c7b0:	2089883a 	add	r4,r4,r2
   2c7b4:	21c0032e 	bgeu	r4,r7,2c7c4 <__copybits+0x74>
   2c7b8:	20000015 	stw	zero,0(r4)
   2c7bc:	21000104 	addi	r4,r4,4
   2c7c0:	21fffd36 	bltu	r4,r7,2c7b8 <__alt_mem_sdram_controller_0+0xc002c7b8>
   2c7c4:	f800283a 	ret

0002c7c8 <__any_on>:
   2c7c8:	20c00417 	ldw	r3,16(r4)
   2c7cc:	2805d17a 	srai	r2,r5,5
   2c7d0:	21000504 	addi	r4,r4,20
   2c7d4:	18800d0e 	bge	r3,r2,2c80c <__any_on+0x44>
   2c7d8:	18c7883a 	add	r3,r3,r3
   2c7dc:	18c7883a 	add	r3,r3,r3
   2c7e0:	20c7883a 	add	r3,r4,r3
   2c7e4:	20c0192e 	bgeu	r4,r3,2c84c <__any_on+0x84>
   2c7e8:	18bfff17 	ldw	r2,-4(r3)
   2c7ec:	18ffff04 	addi	r3,r3,-4
   2c7f0:	1000041e 	bne	r2,zero,2c804 <__any_on+0x3c>
   2c7f4:	20c0142e 	bgeu	r4,r3,2c848 <__any_on+0x80>
   2c7f8:	18ffff04 	addi	r3,r3,-4
   2c7fc:	19400017 	ldw	r5,0(r3)
   2c800:	283ffc26 	beq	r5,zero,2c7f4 <__alt_mem_sdram_controller_0+0xc002c7f4>
   2c804:	00800044 	movi	r2,1
   2c808:	f800283a 	ret
   2c80c:	10c00a0e 	bge	r2,r3,2c838 <__any_on+0x70>
   2c810:	1085883a 	add	r2,r2,r2
   2c814:	1085883a 	add	r2,r2,r2
   2c818:	294007cc 	andi	r5,r5,31
   2c81c:	2087883a 	add	r3,r4,r2
   2c820:	283ff026 	beq	r5,zero,2c7e4 <__alt_mem_sdram_controller_0+0xc002c7e4>
   2c824:	19800017 	ldw	r6,0(r3)
   2c828:	3144d83a 	srl	r2,r6,r5
   2c82c:	114a983a 	sll	r5,r2,r5
   2c830:	317ff41e 	bne	r6,r5,2c804 <__alt_mem_sdram_controller_0+0xc002c804>
   2c834:	003feb06 	br	2c7e4 <__alt_mem_sdram_controller_0+0xc002c7e4>
   2c838:	1085883a 	add	r2,r2,r2
   2c83c:	1085883a 	add	r2,r2,r2
   2c840:	2087883a 	add	r3,r4,r2
   2c844:	003fe706 	br	2c7e4 <__alt_mem_sdram_controller_0+0xc002c7e4>
   2c848:	f800283a 	ret
   2c84c:	0005883a 	mov	r2,zero
   2c850:	f800283a 	ret

0002c854 <_read_r>:
   2c854:	defffd04 	addi	sp,sp,-12
   2c858:	2805883a 	mov	r2,r5
   2c85c:	dc000015 	stw	r16,0(sp)
   2c860:	04000134 	movhi	r16,4
   2c864:	dc400115 	stw	r17,4(sp)
   2c868:	300b883a 	mov	r5,r6
   2c86c:	84270804 	addi	r16,r16,-25568
   2c870:	2023883a 	mov	r17,r4
   2c874:	380d883a 	mov	r6,r7
   2c878:	1009883a 	mov	r4,r2
   2c87c:	dfc00215 	stw	ra,8(sp)
   2c880:	80000015 	stw	zero,0(r16)
   2c884:	003404c0 	call	3404c <read>
   2c888:	00ffffc4 	movi	r3,-1
   2c88c:	10c00526 	beq	r2,r3,2c8a4 <_read_r+0x50>
   2c890:	dfc00217 	ldw	ra,8(sp)
   2c894:	dc400117 	ldw	r17,4(sp)
   2c898:	dc000017 	ldw	r16,0(sp)
   2c89c:	dec00304 	addi	sp,sp,12
   2c8a0:	f800283a 	ret
   2c8a4:	80c00017 	ldw	r3,0(r16)
   2c8a8:	183ff926 	beq	r3,zero,2c890 <__alt_mem_sdram_controller_0+0xc002c890>
   2c8ac:	88c00015 	stw	r3,0(r17)
   2c8b0:	003ff706 	br	2c890 <__alt_mem_sdram_controller_0+0xc002c890>

0002c8b4 <_realloc_r>:
   2c8b4:	defff604 	addi	sp,sp,-40
   2c8b8:	dc800215 	stw	r18,8(sp)
   2c8bc:	dfc00915 	stw	ra,36(sp)
   2c8c0:	df000815 	stw	fp,32(sp)
   2c8c4:	ddc00715 	stw	r23,28(sp)
   2c8c8:	dd800615 	stw	r22,24(sp)
   2c8cc:	dd400515 	stw	r21,20(sp)
   2c8d0:	dd000415 	stw	r20,16(sp)
   2c8d4:	dcc00315 	stw	r19,12(sp)
   2c8d8:	dc400115 	stw	r17,4(sp)
   2c8dc:	dc000015 	stw	r16,0(sp)
   2c8e0:	3025883a 	mov	r18,r6
   2c8e4:	2800b726 	beq	r5,zero,2cbc4 <_realloc_r+0x310>
   2c8e8:	282b883a 	mov	r21,r5
   2c8ec:	2029883a 	mov	r20,r4
   2c8f0:	0033d740 	call	33d74 <__malloc_lock>
   2c8f4:	a8bfff17 	ldw	r2,-4(r21)
   2c8f8:	043fff04 	movi	r16,-4
   2c8fc:	90c002c4 	addi	r3,r18,11
   2c900:	01000584 	movi	r4,22
   2c904:	acfffe04 	addi	r19,r21,-8
   2c908:	1420703a 	and	r16,r2,r16
   2c90c:	20c0332e 	bgeu	r4,r3,2c9dc <_realloc_r+0x128>
   2c910:	047ffe04 	movi	r17,-8
   2c914:	1c62703a 	and	r17,r3,r17
   2c918:	8807883a 	mov	r3,r17
   2c91c:	88005816 	blt	r17,zero,2ca80 <_realloc_r+0x1cc>
   2c920:	8c805736 	bltu	r17,r18,2ca80 <_realloc_r+0x1cc>
   2c924:	80c0300e 	bge	r16,r3,2c9e8 <_realloc_r+0x134>
   2c928:	070000f4 	movhi	fp,3
   2c92c:	e71a9a04 	addi	fp,fp,27240
   2c930:	e1c00217 	ldw	r7,8(fp)
   2c934:	9c09883a 	add	r4,r19,r16
   2c938:	22000117 	ldw	r8,4(r4)
   2c93c:	21c06326 	beq	r4,r7,2cacc <_realloc_r+0x218>
   2c940:	017fff84 	movi	r5,-2
   2c944:	414a703a 	and	r5,r8,r5
   2c948:	214b883a 	add	r5,r4,r5
   2c94c:	29800117 	ldw	r6,4(r5)
   2c950:	3180004c 	andi	r6,r6,1
   2c954:	30003f26 	beq	r6,zero,2ca54 <_realloc_r+0x1a0>
   2c958:	1080004c 	andi	r2,r2,1
   2c95c:	10008326 	beq	r2,zero,2cb6c <_realloc_r+0x2b8>
   2c960:	900b883a 	mov	r5,r18
   2c964:	a009883a 	mov	r4,r20
   2c968:	0023d980 	call	23d98 <_malloc_r>
   2c96c:	1025883a 	mov	r18,r2
   2c970:	10011e26 	beq	r2,zero,2cdec <_realloc_r+0x538>
   2c974:	a93fff17 	ldw	r4,-4(r21)
   2c978:	10fffe04 	addi	r3,r2,-8
   2c97c:	00bfff84 	movi	r2,-2
   2c980:	2084703a 	and	r2,r4,r2
   2c984:	9885883a 	add	r2,r19,r2
   2c988:	1880ee26 	beq	r3,r2,2cd44 <_realloc_r+0x490>
   2c98c:	81bfff04 	addi	r6,r16,-4
   2c990:	00800904 	movi	r2,36
   2c994:	1180b836 	bltu	r2,r6,2cc78 <_realloc_r+0x3c4>
   2c998:	00c004c4 	movi	r3,19
   2c99c:	19809636 	bltu	r3,r6,2cbf8 <_realloc_r+0x344>
   2c9a0:	9005883a 	mov	r2,r18
   2c9a4:	a807883a 	mov	r3,r21
   2c9a8:	19000017 	ldw	r4,0(r3)
   2c9ac:	11000015 	stw	r4,0(r2)
   2c9b0:	19000117 	ldw	r4,4(r3)
   2c9b4:	11000115 	stw	r4,4(r2)
   2c9b8:	18c00217 	ldw	r3,8(r3)
   2c9bc:	10c00215 	stw	r3,8(r2)
   2c9c0:	a80b883a 	mov	r5,r21
   2c9c4:	a009883a 	mov	r4,r20
   2c9c8:	00231680 	call	23168 <_free_r>
   2c9cc:	a009883a 	mov	r4,r20
   2c9d0:	0033d980 	call	33d98 <__malloc_unlock>
   2c9d4:	9005883a 	mov	r2,r18
   2c9d8:	00001206 	br	2ca24 <_realloc_r+0x170>
   2c9dc:	00c00404 	movi	r3,16
   2c9e0:	1823883a 	mov	r17,r3
   2c9e4:	003fce06 	br	2c920 <__alt_mem_sdram_controller_0+0xc002c920>
   2c9e8:	a825883a 	mov	r18,r21
   2c9ec:	8445c83a 	sub	r2,r16,r17
   2c9f0:	00c003c4 	movi	r3,15
   2c9f4:	18802636 	bltu	r3,r2,2ca90 <_realloc_r+0x1dc>
   2c9f8:	99800117 	ldw	r6,4(r19)
   2c9fc:	9c07883a 	add	r3,r19,r16
   2ca00:	3180004c 	andi	r6,r6,1
   2ca04:	3420b03a 	or	r16,r6,r16
   2ca08:	9c000115 	stw	r16,4(r19)
   2ca0c:	18800117 	ldw	r2,4(r3)
   2ca10:	10800054 	ori	r2,r2,1
   2ca14:	18800115 	stw	r2,4(r3)
   2ca18:	a009883a 	mov	r4,r20
   2ca1c:	0033d980 	call	33d98 <__malloc_unlock>
   2ca20:	9005883a 	mov	r2,r18
   2ca24:	dfc00917 	ldw	ra,36(sp)
   2ca28:	df000817 	ldw	fp,32(sp)
   2ca2c:	ddc00717 	ldw	r23,28(sp)
   2ca30:	dd800617 	ldw	r22,24(sp)
   2ca34:	dd400517 	ldw	r21,20(sp)
   2ca38:	dd000417 	ldw	r20,16(sp)
   2ca3c:	dcc00317 	ldw	r19,12(sp)
   2ca40:	dc800217 	ldw	r18,8(sp)
   2ca44:	dc400117 	ldw	r17,4(sp)
   2ca48:	dc000017 	ldw	r16,0(sp)
   2ca4c:	dec00a04 	addi	sp,sp,40
   2ca50:	f800283a 	ret
   2ca54:	017fff04 	movi	r5,-4
   2ca58:	414a703a 	and	r5,r8,r5
   2ca5c:	814d883a 	add	r6,r16,r5
   2ca60:	30c01f16 	blt	r6,r3,2cae0 <_realloc_r+0x22c>
   2ca64:	20800317 	ldw	r2,12(r4)
   2ca68:	20c00217 	ldw	r3,8(r4)
   2ca6c:	a825883a 	mov	r18,r21
   2ca70:	3021883a 	mov	r16,r6
   2ca74:	18800315 	stw	r2,12(r3)
   2ca78:	10c00215 	stw	r3,8(r2)
   2ca7c:	003fdb06 	br	2c9ec <__alt_mem_sdram_controller_0+0xc002c9ec>
   2ca80:	00800304 	movi	r2,12
   2ca84:	a0800015 	stw	r2,0(r20)
   2ca88:	0005883a 	mov	r2,zero
   2ca8c:	003fe506 	br	2ca24 <__alt_mem_sdram_controller_0+0xc002ca24>
   2ca90:	98c00117 	ldw	r3,4(r19)
   2ca94:	9c4b883a 	add	r5,r19,r17
   2ca98:	11000054 	ori	r4,r2,1
   2ca9c:	18c0004c 	andi	r3,r3,1
   2caa0:	1c62b03a 	or	r17,r3,r17
   2caa4:	9c400115 	stw	r17,4(r19)
   2caa8:	29000115 	stw	r4,4(r5)
   2caac:	2885883a 	add	r2,r5,r2
   2cab0:	10c00117 	ldw	r3,4(r2)
   2cab4:	29400204 	addi	r5,r5,8
   2cab8:	a009883a 	mov	r4,r20
   2cabc:	18c00054 	ori	r3,r3,1
   2cac0:	10c00115 	stw	r3,4(r2)
   2cac4:	00231680 	call	23168 <_free_r>
   2cac8:	003fd306 	br	2ca18 <__alt_mem_sdram_controller_0+0xc002ca18>
   2cacc:	017fff04 	movi	r5,-4
   2cad0:	414a703a 	and	r5,r8,r5
   2cad4:	89800404 	addi	r6,r17,16
   2cad8:	8151883a 	add	r8,r16,r5
   2cadc:	4180590e 	bge	r8,r6,2cc44 <_realloc_r+0x390>
   2cae0:	1080004c 	andi	r2,r2,1
   2cae4:	103f9e1e 	bne	r2,zero,2c960 <__alt_mem_sdram_controller_0+0xc002c960>
   2cae8:	adbffe17 	ldw	r22,-8(r21)
   2caec:	00bfff04 	movi	r2,-4
   2caf0:	9dadc83a 	sub	r22,r19,r22
   2caf4:	b1800117 	ldw	r6,4(r22)
   2caf8:	3084703a 	and	r2,r6,r2
   2cafc:	20002026 	beq	r4,zero,2cb80 <_realloc_r+0x2cc>
   2cb00:	80af883a 	add	r23,r16,r2
   2cb04:	b96f883a 	add	r23,r23,r5
   2cb08:	21c05f26 	beq	r4,r7,2cc88 <_realloc_r+0x3d4>
   2cb0c:	b8c01c16 	blt	r23,r3,2cb80 <_realloc_r+0x2cc>
   2cb10:	20800317 	ldw	r2,12(r4)
   2cb14:	20c00217 	ldw	r3,8(r4)
   2cb18:	81bfff04 	addi	r6,r16,-4
   2cb1c:	01000904 	movi	r4,36
   2cb20:	18800315 	stw	r2,12(r3)
   2cb24:	10c00215 	stw	r3,8(r2)
   2cb28:	b0c00217 	ldw	r3,8(r22)
   2cb2c:	b0800317 	ldw	r2,12(r22)
   2cb30:	b4800204 	addi	r18,r22,8
   2cb34:	18800315 	stw	r2,12(r3)
   2cb38:	10c00215 	stw	r3,8(r2)
   2cb3c:	21801b36 	bltu	r4,r6,2cbac <_realloc_r+0x2f8>
   2cb40:	008004c4 	movi	r2,19
   2cb44:	1180352e 	bgeu	r2,r6,2cc1c <_realloc_r+0x368>
   2cb48:	a8800017 	ldw	r2,0(r21)
   2cb4c:	b0800215 	stw	r2,8(r22)
   2cb50:	a8800117 	ldw	r2,4(r21)
   2cb54:	b0800315 	stw	r2,12(r22)
   2cb58:	008006c4 	movi	r2,27
   2cb5c:	11807f36 	bltu	r2,r6,2cd5c <_realloc_r+0x4a8>
   2cb60:	b0800404 	addi	r2,r22,16
   2cb64:	ad400204 	addi	r21,r21,8
   2cb68:	00002d06 	br	2cc20 <_realloc_r+0x36c>
   2cb6c:	adbffe17 	ldw	r22,-8(r21)
   2cb70:	00bfff04 	movi	r2,-4
   2cb74:	9dadc83a 	sub	r22,r19,r22
   2cb78:	b1000117 	ldw	r4,4(r22)
   2cb7c:	2084703a 	and	r2,r4,r2
   2cb80:	b03f7726 	beq	r22,zero,2c960 <__alt_mem_sdram_controller_0+0xc002c960>
   2cb84:	80af883a 	add	r23,r16,r2
   2cb88:	b8ff7516 	blt	r23,r3,2c960 <__alt_mem_sdram_controller_0+0xc002c960>
   2cb8c:	b0800317 	ldw	r2,12(r22)
   2cb90:	b0c00217 	ldw	r3,8(r22)
   2cb94:	81bfff04 	addi	r6,r16,-4
   2cb98:	01000904 	movi	r4,36
   2cb9c:	18800315 	stw	r2,12(r3)
   2cba0:	10c00215 	stw	r3,8(r2)
   2cba4:	b4800204 	addi	r18,r22,8
   2cba8:	21bfe52e 	bgeu	r4,r6,2cb40 <__alt_mem_sdram_controller_0+0xc002cb40>
   2cbac:	a80b883a 	mov	r5,r21
   2cbb0:	9009883a 	mov	r4,r18
   2cbb4:	002b6fc0 	call	2b6fc <memmove>
   2cbb8:	b821883a 	mov	r16,r23
   2cbbc:	b027883a 	mov	r19,r22
   2cbc0:	003f8a06 	br	2c9ec <__alt_mem_sdram_controller_0+0xc002c9ec>
   2cbc4:	300b883a 	mov	r5,r6
   2cbc8:	dfc00917 	ldw	ra,36(sp)
   2cbcc:	df000817 	ldw	fp,32(sp)
   2cbd0:	ddc00717 	ldw	r23,28(sp)
   2cbd4:	dd800617 	ldw	r22,24(sp)
   2cbd8:	dd400517 	ldw	r21,20(sp)
   2cbdc:	dd000417 	ldw	r20,16(sp)
   2cbe0:	dcc00317 	ldw	r19,12(sp)
   2cbe4:	dc800217 	ldw	r18,8(sp)
   2cbe8:	dc400117 	ldw	r17,4(sp)
   2cbec:	dc000017 	ldw	r16,0(sp)
   2cbf0:	dec00a04 	addi	sp,sp,40
   2cbf4:	0023d981 	jmpi	23d98 <_malloc_r>
   2cbf8:	a8c00017 	ldw	r3,0(r21)
   2cbfc:	90c00015 	stw	r3,0(r18)
   2cc00:	a8c00117 	ldw	r3,4(r21)
   2cc04:	90c00115 	stw	r3,4(r18)
   2cc08:	00c006c4 	movi	r3,27
   2cc0c:	19804536 	bltu	r3,r6,2cd24 <_realloc_r+0x470>
   2cc10:	90800204 	addi	r2,r18,8
   2cc14:	a8c00204 	addi	r3,r21,8
   2cc18:	003f6306 	br	2c9a8 <__alt_mem_sdram_controller_0+0xc002c9a8>
   2cc1c:	9005883a 	mov	r2,r18
   2cc20:	a8c00017 	ldw	r3,0(r21)
   2cc24:	b821883a 	mov	r16,r23
   2cc28:	b027883a 	mov	r19,r22
   2cc2c:	10c00015 	stw	r3,0(r2)
   2cc30:	a8c00117 	ldw	r3,4(r21)
   2cc34:	10c00115 	stw	r3,4(r2)
   2cc38:	a8c00217 	ldw	r3,8(r21)
   2cc3c:	10c00215 	stw	r3,8(r2)
   2cc40:	003f6a06 	br	2c9ec <__alt_mem_sdram_controller_0+0xc002c9ec>
   2cc44:	9c67883a 	add	r19,r19,r17
   2cc48:	4445c83a 	sub	r2,r8,r17
   2cc4c:	e4c00215 	stw	r19,8(fp)
   2cc50:	10800054 	ori	r2,r2,1
   2cc54:	98800115 	stw	r2,4(r19)
   2cc58:	a8bfff17 	ldw	r2,-4(r21)
   2cc5c:	a009883a 	mov	r4,r20
   2cc60:	1080004c 	andi	r2,r2,1
   2cc64:	1462b03a 	or	r17,r2,r17
   2cc68:	ac7fff15 	stw	r17,-4(r21)
   2cc6c:	0033d980 	call	33d98 <__malloc_unlock>
   2cc70:	a805883a 	mov	r2,r21
   2cc74:	003f6b06 	br	2ca24 <__alt_mem_sdram_controller_0+0xc002ca24>
   2cc78:	a80b883a 	mov	r5,r21
   2cc7c:	9009883a 	mov	r4,r18
   2cc80:	002b6fc0 	call	2b6fc <memmove>
   2cc84:	003f4e06 	br	2c9c0 <__alt_mem_sdram_controller_0+0xc002c9c0>
   2cc88:	89000404 	addi	r4,r17,16
   2cc8c:	b93fbc16 	blt	r23,r4,2cb80 <__alt_mem_sdram_controller_0+0xc002cb80>
   2cc90:	b0800317 	ldw	r2,12(r22)
   2cc94:	b0c00217 	ldw	r3,8(r22)
   2cc98:	81bfff04 	addi	r6,r16,-4
   2cc9c:	01000904 	movi	r4,36
   2cca0:	18800315 	stw	r2,12(r3)
   2cca4:	10c00215 	stw	r3,8(r2)
   2cca8:	b4800204 	addi	r18,r22,8
   2ccac:	21804336 	bltu	r4,r6,2cdbc <_realloc_r+0x508>
   2ccb0:	008004c4 	movi	r2,19
   2ccb4:	11803f2e 	bgeu	r2,r6,2cdb4 <_realloc_r+0x500>
   2ccb8:	a8800017 	ldw	r2,0(r21)
   2ccbc:	b0800215 	stw	r2,8(r22)
   2ccc0:	a8800117 	ldw	r2,4(r21)
   2ccc4:	b0800315 	stw	r2,12(r22)
   2ccc8:	008006c4 	movi	r2,27
   2cccc:	11803f36 	bltu	r2,r6,2cdcc <_realloc_r+0x518>
   2ccd0:	b0800404 	addi	r2,r22,16
   2ccd4:	ad400204 	addi	r21,r21,8
   2ccd8:	a8c00017 	ldw	r3,0(r21)
   2ccdc:	10c00015 	stw	r3,0(r2)
   2cce0:	a8c00117 	ldw	r3,4(r21)
   2cce4:	10c00115 	stw	r3,4(r2)
   2cce8:	a8c00217 	ldw	r3,8(r21)
   2ccec:	10c00215 	stw	r3,8(r2)
   2ccf0:	b447883a 	add	r3,r22,r17
   2ccf4:	bc45c83a 	sub	r2,r23,r17
   2ccf8:	e0c00215 	stw	r3,8(fp)
   2ccfc:	10800054 	ori	r2,r2,1
   2cd00:	18800115 	stw	r2,4(r3)
   2cd04:	b0800117 	ldw	r2,4(r22)
   2cd08:	a009883a 	mov	r4,r20
   2cd0c:	1080004c 	andi	r2,r2,1
   2cd10:	1462b03a 	or	r17,r2,r17
   2cd14:	b4400115 	stw	r17,4(r22)
   2cd18:	0033d980 	call	33d98 <__malloc_unlock>
   2cd1c:	9005883a 	mov	r2,r18
   2cd20:	003f4006 	br	2ca24 <__alt_mem_sdram_controller_0+0xc002ca24>
   2cd24:	a8c00217 	ldw	r3,8(r21)
   2cd28:	90c00215 	stw	r3,8(r18)
   2cd2c:	a8c00317 	ldw	r3,12(r21)
   2cd30:	90c00315 	stw	r3,12(r18)
   2cd34:	30801126 	beq	r6,r2,2cd7c <_realloc_r+0x4c8>
   2cd38:	90800404 	addi	r2,r18,16
   2cd3c:	a8c00404 	addi	r3,r21,16
   2cd40:	003f1906 	br	2c9a8 <__alt_mem_sdram_controller_0+0xc002c9a8>
   2cd44:	90ffff17 	ldw	r3,-4(r18)
   2cd48:	00bfff04 	movi	r2,-4
   2cd4c:	a825883a 	mov	r18,r21
   2cd50:	1884703a 	and	r2,r3,r2
   2cd54:	80a1883a 	add	r16,r16,r2
   2cd58:	003f2406 	br	2c9ec <__alt_mem_sdram_controller_0+0xc002c9ec>
   2cd5c:	a8800217 	ldw	r2,8(r21)
   2cd60:	b0800415 	stw	r2,16(r22)
   2cd64:	a8800317 	ldw	r2,12(r21)
   2cd68:	b0800515 	stw	r2,20(r22)
   2cd6c:	31000a26 	beq	r6,r4,2cd98 <_realloc_r+0x4e4>
   2cd70:	b0800604 	addi	r2,r22,24
   2cd74:	ad400404 	addi	r21,r21,16
   2cd78:	003fa906 	br	2cc20 <__alt_mem_sdram_controller_0+0xc002cc20>
   2cd7c:	a9000417 	ldw	r4,16(r21)
   2cd80:	90800604 	addi	r2,r18,24
   2cd84:	a8c00604 	addi	r3,r21,24
   2cd88:	91000415 	stw	r4,16(r18)
   2cd8c:	a9000517 	ldw	r4,20(r21)
   2cd90:	91000515 	stw	r4,20(r18)
   2cd94:	003f0406 	br	2c9a8 <__alt_mem_sdram_controller_0+0xc002c9a8>
   2cd98:	a8c00417 	ldw	r3,16(r21)
   2cd9c:	ad400604 	addi	r21,r21,24
   2cda0:	b0800804 	addi	r2,r22,32
   2cda4:	b0c00615 	stw	r3,24(r22)
   2cda8:	a8ffff17 	ldw	r3,-4(r21)
   2cdac:	b0c00715 	stw	r3,28(r22)
   2cdb0:	003f9b06 	br	2cc20 <__alt_mem_sdram_controller_0+0xc002cc20>
   2cdb4:	9005883a 	mov	r2,r18
   2cdb8:	003fc706 	br	2ccd8 <__alt_mem_sdram_controller_0+0xc002ccd8>
   2cdbc:	a80b883a 	mov	r5,r21
   2cdc0:	9009883a 	mov	r4,r18
   2cdc4:	002b6fc0 	call	2b6fc <memmove>
   2cdc8:	003fc906 	br	2ccf0 <__alt_mem_sdram_controller_0+0xc002ccf0>
   2cdcc:	a8800217 	ldw	r2,8(r21)
   2cdd0:	b0800415 	stw	r2,16(r22)
   2cdd4:	a8800317 	ldw	r2,12(r21)
   2cdd8:	b0800515 	stw	r2,20(r22)
   2cddc:	31000726 	beq	r6,r4,2cdfc <_realloc_r+0x548>
   2cde0:	b0800604 	addi	r2,r22,24
   2cde4:	ad400404 	addi	r21,r21,16
   2cde8:	003fbb06 	br	2ccd8 <__alt_mem_sdram_controller_0+0xc002ccd8>
   2cdec:	a009883a 	mov	r4,r20
   2cdf0:	0033d980 	call	33d98 <__malloc_unlock>
   2cdf4:	0005883a 	mov	r2,zero
   2cdf8:	003f0a06 	br	2ca24 <__alt_mem_sdram_controller_0+0xc002ca24>
   2cdfc:	a8c00417 	ldw	r3,16(r21)
   2ce00:	ad400604 	addi	r21,r21,24
   2ce04:	b0800804 	addi	r2,r22,32
   2ce08:	b0c00615 	stw	r3,24(r22)
   2ce0c:	a8ffff17 	ldw	r3,-4(r21)
   2ce10:	b0c00715 	stw	r3,28(r22)
   2ce14:	003fb006 	br	2ccd8 <__alt_mem_sdram_controller_0+0xc002ccd8>

0002ce18 <__fpclassifyd>:
   2ce18:	00a00034 	movhi	r2,32768
   2ce1c:	10bfffc4 	addi	r2,r2,-1
   2ce20:	2884703a 	and	r2,r5,r2
   2ce24:	10000726 	beq	r2,zero,2ce44 <__fpclassifyd+0x2c>
   2ce28:	00fffc34 	movhi	r3,65520
   2ce2c:	019ff834 	movhi	r6,32736
   2ce30:	28c7883a 	add	r3,r5,r3
   2ce34:	31bfffc4 	addi	r6,r6,-1
   2ce38:	30c00536 	bltu	r6,r3,2ce50 <__fpclassifyd+0x38>
   2ce3c:	00800104 	movi	r2,4
   2ce40:	f800283a 	ret
   2ce44:	2000021e 	bne	r4,zero,2ce50 <__fpclassifyd+0x38>
   2ce48:	00800084 	movi	r2,2
   2ce4c:	f800283a 	ret
   2ce50:	00dffc34 	movhi	r3,32752
   2ce54:	019ff834 	movhi	r6,32736
   2ce58:	28cb883a 	add	r5,r5,r3
   2ce5c:	31bfffc4 	addi	r6,r6,-1
   2ce60:	317ff62e 	bgeu	r6,r5,2ce3c <__alt_mem_sdram_controller_0+0xc002ce3c>
   2ce64:	01400434 	movhi	r5,16
   2ce68:	297fffc4 	addi	r5,r5,-1
   2ce6c:	28800236 	bltu	r5,r2,2ce78 <__fpclassifyd+0x60>
   2ce70:	008000c4 	movi	r2,3
   2ce74:	f800283a 	ret
   2ce78:	10c00226 	beq	r2,r3,2ce84 <__fpclassifyd+0x6c>
   2ce7c:	0005883a 	mov	r2,zero
   2ce80:	f800283a 	ret
   2ce84:	2005003a 	cmpeq	r2,r4,zero
   2ce88:	f800283a 	ret

0002ce8c <_init_signal_r>:
   2ce8c:	2080b717 	ldw	r2,732(r4)
   2ce90:	10000226 	beq	r2,zero,2ce9c <_init_signal_r+0x10>
   2ce94:	0005883a 	mov	r2,zero
   2ce98:	f800283a 	ret
   2ce9c:	defffe04 	addi	sp,sp,-8
   2cea0:	01402004 	movi	r5,128
   2cea4:	dc000015 	stw	r16,0(sp)
   2cea8:	dfc00115 	stw	ra,4(sp)
   2ceac:	2021883a 	mov	r16,r4
   2ceb0:	0023d980 	call	23d98 <_malloc_r>
   2ceb4:	8080b715 	stw	r2,732(r16)
   2ceb8:	10000d26 	beq	r2,zero,2cef0 <_init_signal_r+0x64>
   2cebc:	0007883a 	mov	r3,zero
   2cec0:	01002004 	movi	r4,128
   2cec4:	00000106 	br	2cecc <_init_signal_r+0x40>
   2cec8:	8080b717 	ldw	r2,732(r16)
   2cecc:	10c5883a 	add	r2,r2,r3
   2ced0:	10000015 	stw	zero,0(r2)
   2ced4:	18c00104 	addi	r3,r3,4
   2ced8:	193ffb1e 	bne	r3,r4,2cec8 <__alt_mem_sdram_controller_0+0xc002cec8>
   2cedc:	0005883a 	mov	r2,zero
   2cee0:	dfc00117 	ldw	ra,4(sp)
   2cee4:	dc000017 	ldw	r16,0(sp)
   2cee8:	dec00204 	addi	sp,sp,8
   2ceec:	f800283a 	ret
   2cef0:	00bfffc4 	movi	r2,-1
   2cef4:	003ffa06 	br	2cee0 <__alt_mem_sdram_controller_0+0xc002cee0>

0002cef8 <_signal_r>:
   2cef8:	00c007c4 	movi	r3,31
   2cefc:	19401536 	bltu	r3,r5,2cf54 <_signal_r+0x5c>
   2cf00:	2080b717 	ldw	r2,732(r4)
   2cf04:	defffc04 	addi	sp,sp,-16
   2cf08:	dc800215 	stw	r18,8(sp)
   2cf0c:	dc400115 	stw	r17,4(sp)
   2cf10:	dc000015 	stw	r16,0(sp)
   2cf14:	dfc00315 	stw	ra,12(sp)
   2cf18:	3023883a 	mov	r17,r6
   2cf1c:	2021883a 	mov	r16,r4
   2cf20:	2825883a 	mov	r18,r5
   2cf24:	10000f26 	beq	r2,zero,2cf64 <_signal_r+0x6c>
   2cf28:	948b883a 	add	r5,r18,r18
   2cf2c:	294b883a 	add	r5,r5,r5
   2cf30:	114b883a 	add	r5,r2,r5
   2cf34:	28800017 	ldw	r2,0(r5)
   2cf38:	2c400015 	stw	r17,0(r5)
   2cf3c:	dfc00317 	ldw	ra,12(sp)
   2cf40:	dc800217 	ldw	r18,8(sp)
   2cf44:	dc400117 	ldw	r17,4(sp)
   2cf48:	dc000017 	ldw	r16,0(sp)
   2cf4c:	dec00404 	addi	sp,sp,16
   2cf50:	f800283a 	ret
   2cf54:	00c00584 	movi	r3,22
   2cf58:	20c00015 	stw	r3,0(r4)
   2cf5c:	00bfffc4 	movi	r2,-1
   2cf60:	f800283a 	ret
   2cf64:	002ce8c0 	call	2ce8c <_init_signal_r>
   2cf68:	1000021e 	bne	r2,zero,2cf74 <_signal_r+0x7c>
   2cf6c:	8080b717 	ldw	r2,732(r16)
   2cf70:	003fed06 	br	2cf28 <__alt_mem_sdram_controller_0+0xc002cf28>
   2cf74:	00bfffc4 	movi	r2,-1
   2cf78:	003ff006 	br	2cf3c <__alt_mem_sdram_controller_0+0xc002cf3c>

0002cf7c <_raise_r>:
   2cf7c:	008007c4 	movi	r2,31
   2cf80:	11402936 	bltu	r2,r5,2d028 <_raise_r+0xac>
   2cf84:	20c0b717 	ldw	r3,732(r4)
   2cf88:	defffd04 	addi	sp,sp,-12
   2cf8c:	dc400115 	stw	r17,4(sp)
   2cf90:	dc000015 	stw	r16,0(sp)
   2cf94:	dfc00215 	stw	ra,8(sp)
   2cf98:	2021883a 	mov	r16,r4
   2cf9c:	2823883a 	mov	r17,r5
   2cfa0:	18001726 	beq	r3,zero,2d000 <_raise_r+0x84>
   2cfa4:	2945883a 	add	r2,r5,r5
   2cfa8:	1085883a 	add	r2,r2,r2
   2cfac:	1887883a 	add	r3,r3,r2
   2cfb0:	19800017 	ldw	r6,0(r3)
   2cfb4:	30001226 	beq	r6,zero,2d000 <_raise_r+0x84>
   2cfb8:	00800044 	movi	r2,1
   2cfbc:	30800e26 	beq	r6,r2,2cff8 <_raise_r+0x7c>
   2cfc0:	013fffc4 	movi	r4,-1
   2cfc4:	31000926 	beq	r6,r4,2cfec <_raise_r+0x70>
   2cfc8:	18000015 	stw	zero,0(r3)
   2cfcc:	2809883a 	mov	r4,r5
   2cfd0:	303ee83a 	callr	r6
   2cfd4:	0005883a 	mov	r2,zero
   2cfd8:	dfc00217 	ldw	ra,8(sp)
   2cfdc:	dc400117 	ldw	r17,4(sp)
   2cfe0:	dc000017 	ldw	r16,0(sp)
   2cfe4:	dec00304 	addi	sp,sp,12
   2cfe8:	f800283a 	ret
   2cfec:	00c00584 	movi	r3,22
   2cff0:	80c00015 	stw	r3,0(r16)
   2cff4:	003ff806 	br	2cfd8 <__alt_mem_sdram_controller_0+0xc002cfd8>
   2cff8:	0005883a 	mov	r2,zero
   2cffc:	003ff606 	br	2cfd8 <__alt_mem_sdram_controller_0+0xc002cfd8>
   2d000:	8009883a 	mov	r4,r16
   2d004:	002d18c0 	call	2d18c <_getpid_r>
   2d008:	880d883a 	mov	r6,r17
   2d00c:	100b883a 	mov	r5,r2
   2d010:	8009883a 	mov	r4,r16
   2d014:	dfc00217 	ldw	ra,8(sp)
   2d018:	dc400117 	ldw	r17,4(sp)
   2d01c:	dc000017 	ldw	r16,0(sp)
   2d020:	dec00304 	addi	sp,sp,12
   2d024:	002d1301 	jmpi	2d130 <_kill_r>
   2d028:	00800584 	movi	r2,22
   2d02c:	20800015 	stw	r2,0(r4)
   2d030:	00bfffc4 	movi	r2,-1
   2d034:	f800283a 	ret

0002d038 <__sigtramp_r>:
   2d038:	008007c4 	movi	r2,31
   2d03c:	11402436 	bltu	r2,r5,2d0d0 <__sigtramp_r+0x98>
   2d040:	20c0b717 	ldw	r3,732(r4)
   2d044:	defffd04 	addi	sp,sp,-12
   2d048:	dc400115 	stw	r17,4(sp)
   2d04c:	dc000015 	stw	r16,0(sp)
   2d050:	dfc00215 	stw	ra,8(sp)
   2d054:	2021883a 	mov	r16,r4
   2d058:	2823883a 	mov	r17,r5
   2d05c:	18001826 	beq	r3,zero,2d0c0 <__sigtramp_r+0x88>
   2d060:	8c45883a 	add	r2,r17,r17
   2d064:	1085883a 	add	r2,r2,r2
   2d068:	1885883a 	add	r2,r3,r2
   2d06c:	10c00017 	ldw	r3,0(r2)
   2d070:	18001126 	beq	r3,zero,2d0b8 <__sigtramp_r+0x80>
   2d074:	013fffc4 	movi	r4,-1
   2d078:	19000d26 	beq	r3,r4,2d0b0 <__sigtramp_r+0x78>
   2d07c:	01000044 	movi	r4,1
   2d080:	19000926 	beq	r3,r4,2d0a8 <__sigtramp_r+0x70>
   2d084:	10000015 	stw	zero,0(r2)
   2d088:	8809883a 	mov	r4,r17
   2d08c:	183ee83a 	callr	r3
   2d090:	0005883a 	mov	r2,zero
   2d094:	dfc00217 	ldw	ra,8(sp)
   2d098:	dc400117 	ldw	r17,4(sp)
   2d09c:	dc000017 	ldw	r16,0(sp)
   2d0a0:	dec00304 	addi	sp,sp,12
   2d0a4:	f800283a 	ret
   2d0a8:	008000c4 	movi	r2,3
   2d0ac:	003ff906 	br	2d094 <__alt_mem_sdram_controller_0+0xc002d094>
   2d0b0:	00800084 	movi	r2,2
   2d0b4:	003ff706 	br	2d094 <__alt_mem_sdram_controller_0+0xc002d094>
   2d0b8:	00800044 	movi	r2,1
   2d0bc:	003ff506 	br	2d094 <__alt_mem_sdram_controller_0+0xc002d094>
   2d0c0:	002ce8c0 	call	2ce8c <_init_signal_r>
   2d0c4:	1000041e 	bne	r2,zero,2d0d8 <__sigtramp_r+0xa0>
   2d0c8:	80c0b717 	ldw	r3,732(r16)
   2d0cc:	003fe406 	br	2d060 <__alt_mem_sdram_controller_0+0xc002d060>
   2d0d0:	00bfffc4 	movi	r2,-1
   2d0d4:	f800283a 	ret
   2d0d8:	00bfffc4 	movi	r2,-1
   2d0dc:	003fed06 	br	2d094 <__alt_mem_sdram_controller_0+0xc002d094>

0002d0e0 <raise>:
   2d0e0:	00800134 	movhi	r2,4
   2d0e4:	10a03d04 	addi	r2,r2,-32524
   2d0e8:	200b883a 	mov	r5,r4
   2d0ec:	11000017 	ldw	r4,0(r2)
   2d0f0:	002cf7c1 	jmpi	2cf7c <_raise_r>

0002d0f4 <signal>:
   2d0f4:	00800134 	movhi	r2,4
   2d0f8:	10a03d04 	addi	r2,r2,-32524
   2d0fc:	280d883a 	mov	r6,r5
   2d100:	200b883a 	mov	r5,r4
   2d104:	11000017 	ldw	r4,0(r2)
   2d108:	002cef81 	jmpi	2cef8 <_signal_r>

0002d10c <_init_signal>:
   2d10c:	00800134 	movhi	r2,4
   2d110:	10a03d04 	addi	r2,r2,-32524
   2d114:	11000017 	ldw	r4,0(r2)
   2d118:	002ce8c1 	jmpi	2ce8c <_init_signal_r>

0002d11c <__sigtramp>:
   2d11c:	00800134 	movhi	r2,4
   2d120:	10a03d04 	addi	r2,r2,-32524
   2d124:	200b883a 	mov	r5,r4
   2d128:	11000017 	ldw	r4,0(r2)
   2d12c:	002d0381 	jmpi	2d038 <__sigtramp_r>

0002d130 <_kill_r>:
   2d130:	defffd04 	addi	sp,sp,-12
   2d134:	2805883a 	mov	r2,r5
   2d138:	dc000015 	stw	r16,0(sp)
   2d13c:	04000134 	movhi	r16,4
   2d140:	dc400115 	stw	r17,4(sp)
   2d144:	84270804 	addi	r16,r16,-25568
   2d148:	2023883a 	mov	r17,r4
   2d14c:	300b883a 	mov	r5,r6
   2d150:	1009883a 	mov	r4,r2
   2d154:	dfc00215 	stw	ra,8(sp)
   2d158:	80000015 	stw	zero,0(r16)
   2d15c:	00339cc0 	call	339cc <kill>
   2d160:	00ffffc4 	movi	r3,-1
   2d164:	10c00526 	beq	r2,r3,2d17c <_kill_r+0x4c>
   2d168:	dfc00217 	ldw	ra,8(sp)
   2d16c:	dc400117 	ldw	r17,4(sp)
   2d170:	dc000017 	ldw	r16,0(sp)
   2d174:	dec00304 	addi	sp,sp,12
   2d178:	f800283a 	ret
   2d17c:	80c00017 	ldw	r3,0(r16)
   2d180:	183ff926 	beq	r3,zero,2d168 <__alt_mem_sdram_controller_0+0xc002d168>
   2d184:	88c00015 	stw	r3,0(r17)
   2d188:	003ff706 	br	2d168 <__alt_mem_sdram_controller_0+0xc002d168>

0002d18c <_getpid_r>:
   2d18c:	003369c1 	jmpi	3369c <getpid>

0002d190 <strcmp>:
   2d190:	2144b03a 	or	r2,r4,r5
   2d194:	108000cc 	andi	r2,r2,3
   2d198:	1000171e 	bne	r2,zero,2d1f8 <strcmp+0x68>
   2d19c:	20800017 	ldw	r2,0(r4)
   2d1a0:	28c00017 	ldw	r3,0(r5)
   2d1a4:	10c0141e 	bne	r2,r3,2d1f8 <strcmp+0x68>
   2d1a8:	027fbff4 	movhi	r9,65279
   2d1ac:	4a7fbfc4 	addi	r9,r9,-257
   2d1b0:	0086303a 	nor	r3,zero,r2
   2d1b4:	02202074 	movhi	r8,32897
   2d1b8:	1245883a 	add	r2,r2,r9
   2d1bc:	42202004 	addi	r8,r8,-32640
   2d1c0:	10c4703a 	and	r2,r2,r3
   2d1c4:	1204703a 	and	r2,r2,r8
   2d1c8:	10000226 	beq	r2,zero,2d1d4 <strcmp+0x44>
   2d1cc:	00002306 	br	2d25c <strcmp+0xcc>
   2d1d0:	1000221e 	bne	r2,zero,2d25c <strcmp+0xcc>
   2d1d4:	21000104 	addi	r4,r4,4
   2d1d8:	20c00017 	ldw	r3,0(r4)
   2d1dc:	29400104 	addi	r5,r5,4
   2d1e0:	29800017 	ldw	r6,0(r5)
   2d1e4:	1a4f883a 	add	r7,r3,r9
   2d1e8:	00c4303a 	nor	r2,zero,r3
   2d1ec:	3884703a 	and	r2,r7,r2
   2d1f0:	1204703a 	and	r2,r2,r8
   2d1f4:	19bff626 	beq	r3,r6,2d1d0 <__alt_mem_sdram_controller_0+0xc002d1d0>
   2d1f8:	20800003 	ldbu	r2,0(r4)
   2d1fc:	10c03fcc 	andi	r3,r2,255
   2d200:	18c0201c 	xori	r3,r3,128
   2d204:	18ffe004 	addi	r3,r3,-128
   2d208:	18000c26 	beq	r3,zero,2d23c <strcmp+0xac>
   2d20c:	29800007 	ldb	r6,0(r5)
   2d210:	19800326 	beq	r3,r6,2d220 <strcmp+0x90>
   2d214:	00001306 	br	2d264 <strcmp+0xd4>
   2d218:	29800007 	ldb	r6,0(r5)
   2d21c:	11800b1e 	bne	r2,r6,2d24c <strcmp+0xbc>
   2d220:	21000044 	addi	r4,r4,1
   2d224:	20c00003 	ldbu	r3,0(r4)
   2d228:	29400044 	addi	r5,r5,1
   2d22c:	18803fcc 	andi	r2,r3,255
   2d230:	1080201c 	xori	r2,r2,128
   2d234:	10bfe004 	addi	r2,r2,-128
   2d238:	103ff71e 	bne	r2,zero,2d218 <__alt_mem_sdram_controller_0+0xc002d218>
   2d23c:	0007883a 	mov	r3,zero
   2d240:	28800003 	ldbu	r2,0(r5)
   2d244:	1885c83a 	sub	r2,r3,r2
   2d248:	f800283a 	ret
   2d24c:	28800003 	ldbu	r2,0(r5)
   2d250:	18c03fcc 	andi	r3,r3,255
   2d254:	1885c83a 	sub	r2,r3,r2
   2d258:	f800283a 	ret
   2d25c:	0005883a 	mov	r2,zero
   2d260:	f800283a 	ret
   2d264:	10c03fcc 	andi	r3,r2,255
   2d268:	003ff506 	br	2d240 <__alt_mem_sdram_controller_0+0xc002d240>

0002d26c <__ssprint_r>:
   2d26c:	30800217 	ldw	r2,8(r6)
   2d270:	defff604 	addi	sp,sp,-40
   2d274:	dc800215 	stw	r18,8(sp)
   2d278:	dfc00915 	stw	ra,36(sp)
   2d27c:	df000815 	stw	fp,32(sp)
   2d280:	ddc00715 	stw	r23,28(sp)
   2d284:	dd800615 	stw	r22,24(sp)
   2d288:	dd400515 	stw	r21,20(sp)
   2d28c:	dd000415 	stw	r20,16(sp)
   2d290:	dcc00315 	stw	r19,12(sp)
   2d294:	dc400115 	stw	r17,4(sp)
   2d298:	dc000015 	stw	r16,0(sp)
   2d29c:	3025883a 	mov	r18,r6
   2d2a0:	10005826 	beq	r2,zero,2d404 <__ssprint_r+0x198>
   2d2a4:	2027883a 	mov	r19,r4
   2d2a8:	35c00017 	ldw	r23,0(r6)
   2d2ac:	29000017 	ldw	r4,0(r5)
   2d2b0:	28800217 	ldw	r2,8(r5)
   2d2b4:	2823883a 	mov	r17,r5
   2d2b8:	0039883a 	mov	fp,zero
   2d2bc:	0021883a 	mov	r16,zero
   2d2c0:	80003926 	beq	r16,zero,2d3a8 <__ssprint_r+0x13c>
   2d2c4:	102b883a 	mov	r21,r2
   2d2c8:	102d883a 	mov	r22,r2
   2d2cc:	80803a36 	bltu	r16,r2,2d3b8 <__ssprint_r+0x14c>
   2d2d0:	88c0030b 	ldhu	r3,12(r17)
   2d2d4:	1881200c 	andi	r2,r3,1152
   2d2d8:	10002626 	beq	r2,zero,2d374 <__ssprint_r+0x108>
   2d2dc:	88800517 	ldw	r2,20(r17)
   2d2e0:	89400417 	ldw	r5,16(r17)
   2d2e4:	81800044 	addi	r6,r16,1
   2d2e8:	108f883a 	add	r7,r2,r2
   2d2ec:	3885883a 	add	r2,r7,r2
   2d2f0:	100ed7fa 	srli	r7,r2,31
   2d2f4:	216dc83a 	sub	r22,r4,r5
   2d2f8:	3589883a 	add	r4,r6,r22
   2d2fc:	3885883a 	add	r2,r7,r2
   2d300:	102bd07a 	srai	r21,r2,1
   2d304:	a80d883a 	mov	r6,r21
   2d308:	a900022e 	bgeu	r21,r4,2d314 <__ssprint_r+0xa8>
   2d30c:	202b883a 	mov	r21,r4
   2d310:	200d883a 	mov	r6,r4
   2d314:	18c1000c 	andi	r3,r3,1024
   2d318:	18002a26 	beq	r3,zero,2d3c4 <__ssprint_r+0x158>
   2d31c:	300b883a 	mov	r5,r6
   2d320:	9809883a 	mov	r4,r19
   2d324:	0023d980 	call	23d98 <_malloc_r>
   2d328:	1029883a 	mov	r20,r2
   2d32c:	10002c26 	beq	r2,zero,2d3e0 <__ssprint_r+0x174>
   2d330:	89400417 	ldw	r5,16(r17)
   2d334:	b00d883a 	mov	r6,r22
   2d338:	1009883a 	mov	r4,r2
   2d33c:	002b5b40 	call	2b5b4 <memcpy>
   2d340:	8880030b 	ldhu	r2,12(r17)
   2d344:	00fedfc4 	movi	r3,-1153
   2d348:	10c4703a 	and	r2,r2,r3
   2d34c:	10802014 	ori	r2,r2,128
   2d350:	8880030d 	sth	r2,12(r17)
   2d354:	a589883a 	add	r4,r20,r22
   2d358:	adadc83a 	sub	r22,r21,r22
   2d35c:	8d400515 	stw	r21,20(r17)
   2d360:	8d800215 	stw	r22,8(r17)
   2d364:	8d000415 	stw	r20,16(r17)
   2d368:	89000015 	stw	r4,0(r17)
   2d36c:	802b883a 	mov	r21,r16
   2d370:	802d883a 	mov	r22,r16
   2d374:	b00d883a 	mov	r6,r22
   2d378:	e00b883a 	mov	r5,fp
   2d37c:	002b6fc0 	call	2b6fc <memmove>
   2d380:	88800217 	ldw	r2,8(r17)
   2d384:	89000017 	ldw	r4,0(r17)
   2d388:	90c00217 	ldw	r3,8(r18)
   2d38c:	1545c83a 	sub	r2,r2,r21
   2d390:	2589883a 	add	r4,r4,r22
   2d394:	88800215 	stw	r2,8(r17)
   2d398:	89000015 	stw	r4,0(r17)
   2d39c:	1c21c83a 	sub	r16,r3,r16
   2d3a0:	94000215 	stw	r16,8(r18)
   2d3a4:	80001726 	beq	r16,zero,2d404 <__ssprint_r+0x198>
   2d3a8:	bf000017 	ldw	fp,0(r23)
   2d3ac:	bc000117 	ldw	r16,4(r23)
   2d3b0:	bdc00204 	addi	r23,r23,8
   2d3b4:	003fc206 	br	2d2c0 <__alt_mem_sdram_controller_0+0xc002d2c0>
   2d3b8:	802b883a 	mov	r21,r16
   2d3bc:	802d883a 	mov	r22,r16
   2d3c0:	003fec06 	br	2d374 <__alt_mem_sdram_controller_0+0xc002d374>
   2d3c4:	9809883a 	mov	r4,r19
   2d3c8:	002c8b40 	call	2c8b4 <_realloc_r>
   2d3cc:	1029883a 	mov	r20,r2
   2d3d0:	103fe01e 	bne	r2,zero,2d354 <__alt_mem_sdram_controller_0+0xc002d354>
   2d3d4:	89400417 	ldw	r5,16(r17)
   2d3d8:	9809883a 	mov	r4,r19
   2d3dc:	00231680 	call	23168 <_free_r>
   2d3e0:	88c0030b 	ldhu	r3,12(r17)
   2d3e4:	00800304 	movi	r2,12
   2d3e8:	98800015 	stw	r2,0(r19)
   2d3ec:	18c01014 	ori	r3,r3,64
   2d3f0:	88c0030d 	sth	r3,12(r17)
   2d3f4:	00bfffc4 	movi	r2,-1
   2d3f8:	90000215 	stw	zero,8(r18)
   2d3fc:	90000115 	stw	zero,4(r18)
   2d400:	00000206 	br	2d40c <__ssprint_r+0x1a0>
   2d404:	90000115 	stw	zero,4(r18)
   2d408:	0005883a 	mov	r2,zero
   2d40c:	dfc00917 	ldw	ra,36(sp)
   2d410:	df000817 	ldw	fp,32(sp)
   2d414:	ddc00717 	ldw	r23,28(sp)
   2d418:	dd800617 	ldw	r22,24(sp)
   2d41c:	dd400517 	ldw	r21,20(sp)
   2d420:	dd000417 	ldw	r20,16(sp)
   2d424:	dcc00317 	ldw	r19,12(sp)
   2d428:	dc800217 	ldw	r18,8(sp)
   2d42c:	dc400117 	ldw	r17,4(sp)
   2d430:	dc000017 	ldw	r16,0(sp)
   2d434:	dec00a04 	addi	sp,sp,40
   2d438:	f800283a 	ret

0002d43c <___svfiprintf_internal_r>:
   2d43c:	2880030b 	ldhu	r2,12(r5)
   2d440:	deffc804 	addi	sp,sp,-224
   2d444:	dcc03115 	stw	r19,196(sp)
   2d448:	dfc03715 	stw	ra,220(sp)
   2d44c:	df003615 	stw	fp,216(sp)
   2d450:	ddc03515 	stw	r23,212(sp)
   2d454:	dd803415 	stw	r22,208(sp)
   2d458:	dd403315 	stw	r21,204(sp)
   2d45c:	dd003215 	stw	r20,200(sp)
   2d460:	dc803015 	stw	r18,192(sp)
   2d464:	dc402f15 	stw	r17,188(sp)
   2d468:	dc002e15 	stw	r16,184(sp)
   2d46c:	d9402715 	stw	r5,156(sp)
   2d470:	d9002a15 	stw	r4,168(sp)
   2d474:	1080200c 	andi	r2,r2,128
   2d478:	d9c02315 	stw	r7,140(sp)
   2d47c:	3027883a 	mov	r19,r6
   2d480:	10000226 	beq	r2,zero,2d48c <___svfiprintf_internal_r+0x50>
   2d484:	28800417 	ldw	r2,16(r5)
   2d488:	10041d26 	beq	r2,zero,2e500 <___svfiprintf_internal_r+0x10c4>
   2d48c:	dac01a04 	addi	r11,sp,104
   2d490:	dac01e15 	stw	r11,120(sp)
   2d494:	d8801e17 	ldw	r2,120(sp)
   2d498:	dac019c4 	addi	r11,sp,103
   2d49c:	dd402a17 	ldw	r21,168(sp)
   2d4a0:	ddc02717 	ldw	r23,156(sp)
   2d4a4:	058000f4 	movhi	r22,3
   2d4a8:	050000f4 	movhi	r20,3
   2d4ac:	dac01f15 	stw	r11,124(sp)
   2d4b0:	12d7c83a 	sub	r11,r2,r11
   2d4b4:	b5993804 	addi	r22,r22,25824
   2d4b8:	a5193404 	addi	r20,r20,25808
   2d4bc:	dec01a15 	stw	sp,104(sp)
   2d4c0:	d8001c15 	stw	zero,112(sp)
   2d4c4:	d8001b15 	stw	zero,108(sp)
   2d4c8:	d811883a 	mov	r8,sp
   2d4cc:	d8002915 	stw	zero,164(sp)
   2d4d0:	d8002515 	stw	zero,148(sp)
   2d4d4:	dac02b15 	stw	r11,172(sp)
   2d4d8:	98800007 	ldb	r2,0(r19)
   2d4dc:	1002dd26 	beq	r2,zero,2e054 <___svfiprintf_internal_r+0xc18>
   2d4e0:	00c00944 	movi	r3,37
   2d4e4:	9823883a 	mov	r17,r19
   2d4e8:	10c0021e 	bne	r2,r3,2d4f4 <___svfiprintf_internal_r+0xb8>
   2d4ec:	00001406 	br	2d540 <___svfiprintf_internal_r+0x104>
   2d4f0:	10c00326 	beq	r2,r3,2d500 <___svfiprintf_internal_r+0xc4>
   2d4f4:	8c400044 	addi	r17,r17,1
   2d4f8:	88800007 	ldb	r2,0(r17)
   2d4fc:	103ffc1e 	bne	r2,zero,2d4f0 <__alt_mem_sdram_controller_0+0xc002d4f0>
   2d500:	8ce1c83a 	sub	r16,r17,r19
   2d504:	80000e26 	beq	r16,zero,2d540 <___svfiprintf_internal_r+0x104>
   2d508:	d8c01c17 	ldw	r3,112(sp)
   2d50c:	d8801b17 	ldw	r2,108(sp)
   2d510:	44c00015 	stw	r19,0(r8)
   2d514:	1c07883a 	add	r3,r3,r16
   2d518:	10800044 	addi	r2,r2,1
   2d51c:	d8c01c15 	stw	r3,112(sp)
   2d520:	44000115 	stw	r16,4(r8)
   2d524:	d8801b15 	stw	r2,108(sp)
   2d528:	00c001c4 	movi	r3,7
   2d52c:	18831e16 	blt	r3,r2,2e1a8 <___svfiprintf_internal_r+0xd6c>
   2d530:	42000204 	addi	r8,r8,8
   2d534:	dac02517 	ldw	r11,148(sp)
   2d538:	5c17883a 	add	r11,r11,r16
   2d53c:	dac02515 	stw	r11,148(sp)
   2d540:	88800007 	ldb	r2,0(r17)
   2d544:	1002c526 	beq	r2,zero,2e05c <___svfiprintf_internal_r+0xc20>
   2d548:	88c00047 	ldb	r3,1(r17)
   2d54c:	8cc00044 	addi	r19,r17,1
   2d550:	d8001d85 	stb	zero,118(sp)
   2d554:	0009883a 	mov	r4,zero
   2d558:	000f883a 	mov	r7,zero
   2d55c:	043fffc4 	movi	r16,-1
   2d560:	d8002415 	stw	zero,144(sp)
   2d564:	0025883a 	mov	r18,zero
   2d568:	01401604 	movi	r5,88
   2d56c:	01800244 	movi	r6,9
   2d570:	02800a84 	movi	r10,42
   2d574:	02401b04 	movi	r9,108
   2d578:	9cc00044 	addi	r19,r19,1
   2d57c:	18bff804 	addi	r2,r3,-32
   2d580:	2881dd36 	bltu	r5,r2,2dcf8 <___svfiprintf_internal_r+0x8bc>
   2d584:	100490ba 	slli	r2,r2,2
   2d588:	02c000f4 	movhi	r11,3
   2d58c:	5af56704 	addi	r11,r11,-10852
   2d590:	12c5883a 	add	r2,r2,r11
   2d594:	10800017 	ldw	r2,0(r2)
   2d598:	1000683a 	jmp	r2
   2d59c:	0002d798 	cmpnei	zero,zero,2910
   2d5a0:	0002dcf8 	rdprs	zero,zero,2931
   2d5a4:	0002dcf8 	rdprs	zero,zero,2931
   2d5a8:	0002d78c 	andi	zero,zero,2910
   2d5ac:	0002dcf8 	rdprs	zero,zero,2931
   2d5b0:	0002dcf8 	rdprs	zero,zero,2931
   2d5b4:	0002dcf8 	rdprs	zero,zero,2931
   2d5b8:	0002dcf8 	rdprs	zero,zero,2931
   2d5bc:	0002dcf8 	rdprs	zero,zero,2931
   2d5c0:	0002dcf8 	rdprs	zero,zero,2931
   2d5c4:	0002d700 	call	2d70 <__alt_mem_onchip_memory2_0-0x1d290>
   2d5c8:	0002d8dc 	xori	zero,zero,2915
   2d5cc:	0002dcf8 	rdprs	zero,zero,2931
   2d5d0:	0002d72c 	andhi	zero,zero,2908
   2d5d4:	0002dd2c 	andhi	zero,zero,2932
   2d5d8:	0002dcf8 	rdprs	zero,zero,2931
   2d5dc:	0002dd20 	cmpeqi	zero,zero,2932
   2d5e0:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5e4:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5e8:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5ec:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5f0:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5f4:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5f8:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d5fc:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d600:	0002dcc0 	call	2dcc <__alt_mem_onchip_memory2_0-0x1d234>
   2d604:	0002dcf8 	rdprs	zero,zero,2931
   2d608:	0002dcf8 	rdprs	zero,zero,2931
   2d60c:	0002dcf8 	rdprs	zero,zero,2931
   2d610:	0002dcf8 	rdprs	zero,zero,2931
   2d614:	0002dcf8 	rdprs	zero,zero,2931
   2d618:	0002dcf8 	rdprs	zero,zero,2931
   2d61c:	0002dcf8 	rdprs	zero,zero,2931
   2d620:	0002dcf8 	rdprs	zero,zero,2931
   2d624:	0002dcf8 	rdprs	zero,zero,2931
   2d628:	0002dcf8 	rdprs	zero,zero,2931
   2d62c:	0002dc5c 	xori	zero,zero,2929
   2d630:	0002dcf8 	rdprs	zero,zero,2931
   2d634:	0002dcf8 	rdprs	zero,zero,2931
   2d638:	0002dcf8 	rdprs	zero,zero,2931
   2d63c:	0002dcf8 	rdprs	zero,zero,2931
   2d640:	0002dcf8 	rdprs	zero,zero,2931
   2d644:	0002dcf8 	rdprs	zero,zero,2931
   2d648:	0002dcf8 	rdprs	zero,zero,2931
   2d64c:	0002dcf8 	rdprs	zero,zero,2931
   2d650:	0002dcf8 	rdprs	zero,zero,2931
   2d654:	0002dcf8 	rdprs	zero,zero,2931
   2d658:	0002ddd4 	movui	zero,2935
   2d65c:	0002dcf8 	rdprs	zero,zero,2931
   2d660:	0002dcf8 	rdprs	zero,zero,2931
   2d664:	0002dcf8 	rdprs	zero,zero,2931
   2d668:	0002dcf8 	rdprs	zero,zero,2931
   2d66c:	0002dcf8 	rdprs	zero,zero,2931
   2d670:	0002dd6c 	andhi	zero,zero,2933
   2d674:	0002dcf8 	rdprs	zero,zero,2931
   2d678:	0002dcf8 	rdprs	zero,zero,2931
   2d67c:	0002daa0 	cmpeqi	zero,zero,2922
   2d680:	0002dcf8 	rdprs	zero,zero,2931
   2d684:	0002dcf8 	rdprs	zero,zero,2931
   2d688:	0002dcf8 	rdprs	zero,zero,2931
   2d68c:	0002dcf8 	rdprs	zero,zero,2931
   2d690:	0002dcf8 	rdprs	zero,zero,2931
   2d694:	0002dcf8 	rdprs	zero,zero,2931
   2d698:	0002dcf8 	rdprs	zero,zero,2931
   2d69c:	0002dcf8 	rdprs	zero,zero,2931
   2d6a0:	0002dcf8 	rdprs	zero,zero,2931
   2d6a4:	0002dcf8 	rdprs	zero,zero,2931
   2d6a8:	0002d990 	cmplti	zero,zero,2918
   2d6ac:	0002db3c 	xorhi	zero,zero,2924
   2d6b0:	0002dcf8 	rdprs	zero,zero,2931
   2d6b4:	0002dcf8 	rdprs	zero,zero,2931
   2d6b8:	0002dcf8 	rdprs	zero,zero,2931
   2d6bc:	0002db30 	cmpltui	zero,zero,2924
   2d6c0:	0002db3c 	xorhi	zero,zero,2924
   2d6c4:	0002dcf8 	rdprs	zero,zero,2931
   2d6c8:	0002dcf8 	rdprs	zero,zero,2931
   2d6cc:	0002db20 	cmpeqi	zero,zero,2924
   2d6d0:	0002dcf8 	rdprs	zero,zero,2931
   2d6d4:	0002dae4 	muli	zero,zero,2923
   2d6d8:	0002d8ec 	andhi	zero,zero,2915
   2d6dc:	0002d738 	rdprs	zero,zero,2908
   2d6e0:	0002dc50 	cmplti	zero,zero,2929
   2d6e4:	0002dcf8 	rdprs	zero,zero,2931
   2d6e8:	0002dc04 	movi	zero,2928
   2d6ec:	0002dcf8 	rdprs	zero,zero,2931
   2d6f0:	0002d85c 	xori	zero,zero,2913
   2d6f4:	0002dcf8 	rdprs	zero,zero,2931
   2d6f8:	0002dcf8 	rdprs	zero,zero,2931
   2d6fc:	0002d7b8 	rdprs	zero,zero,2910
   2d700:	dac02317 	ldw	r11,140(sp)
   2d704:	5ac00017 	ldw	r11,0(r11)
   2d708:	dac02415 	stw	r11,144(sp)
   2d70c:	dac02317 	ldw	r11,140(sp)
   2d710:	58800104 	addi	r2,r11,4
   2d714:	dac02417 	ldw	r11,144(sp)
   2d718:	5802e90e 	bge	r11,zero,2e2c0 <___svfiprintf_internal_r+0xe84>
   2d71c:	dac02417 	ldw	r11,144(sp)
   2d720:	d8802315 	stw	r2,140(sp)
   2d724:	02d7c83a 	sub	r11,zero,r11
   2d728:	dac02415 	stw	r11,144(sp)
   2d72c:	94800114 	ori	r18,r18,4
   2d730:	98c00007 	ldb	r3,0(r19)
   2d734:	003f9006 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2d738:	00800c04 	movi	r2,48
   2d73c:	dac02317 	ldw	r11,140(sp)
   2d740:	d8801d05 	stb	r2,116(sp)
   2d744:	00801e04 	movi	r2,120
   2d748:	d8801d45 	stb	r2,117(sp)
   2d74c:	d8001d85 	stb	zero,118(sp)
   2d750:	58c00104 	addi	r3,r11,4
   2d754:	5f000017 	ldw	fp,0(r11)
   2d758:	0013883a 	mov	r9,zero
   2d75c:	90800094 	ori	r2,r18,2
   2d760:	80032b16 	blt	r16,zero,2e410 <___svfiprintf_internal_r+0xfd4>
   2d764:	00bfdfc4 	movi	r2,-129
   2d768:	90a4703a 	and	r18,r18,r2
   2d76c:	d8c02315 	stw	r3,140(sp)
   2d770:	94800094 	ori	r18,r18,2
   2d774:	e002dc26 	beq	fp,zero,2e2e8 <___svfiprintf_internal_r+0xeac>
   2d778:	010000f4 	movhi	r4,3
   2d77c:	2118cc04 	addi	r4,r4,25392
   2d780:	0015883a 	mov	r10,zero
   2d784:	d9002915 	stw	r4,164(sp)
   2d788:	00002306 	br	2d818 <___svfiprintf_internal_r+0x3dc>
   2d78c:	94800054 	ori	r18,r18,1
   2d790:	98c00007 	ldb	r3,0(r19)
   2d794:	003f7806 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2d798:	38803fcc 	andi	r2,r7,255
   2d79c:	1080201c 	xori	r2,r2,128
   2d7a0:	10bfe004 	addi	r2,r2,-128
   2d7a4:	1002f31e 	bne	r2,zero,2e374 <___svfiprintf_internal_r+0xf38>
   2d7a8:	01000044 	movi	r4,1
   2d7ac:	01c00804 	movi	r7,32
   2d7b0:	98c00007 	ldb	r3,0(r19)
   2d7b4:	003f7006 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2d7b8:	21003fcc 	andi	r4,r4,255
   2d7bc:	2003aa1e 	bne	r4,zero,2e668 <___svfiprintf_internal_r+0x122c>
   2d7c0:	008000f4 	movhi	r2,3
   2d7c4:	1098cc04 	addi	r2,r2,25392
   2d7c8:	d8802915 	stw	r2,164(sp)
   2d7cc:	9080080c 	andi	r2,r18,32
   2d7d0:	1000ba26 	beq	r2,zero,2dabc <___svfiprintf_internal_r+0x680>
   2d7d4:	dac02317 	ldw	r11,140(sp)
   2d7d8:	5f000017 	ldw	fp,0(r11)
   2d7dc:	5a400117 	ldw	r9,4(r11)
   2d7e0:	5ac00204 	addi	r11,r11,8
   2d7e4:	dac02315 	stw	r11,140(sp)
   2d7e8:	9080004c 	andi	r2,r18,1
   2d7ec:	10029026 	beq	r2,zero,2e230 <___svfiprintf_internal_r+0xdf4>
   2d7f0:	e244b03a 	or	r2,fp,r9
   2d7f4:	1002d41e 	bne	r2,zero,2e348 <___svfiprintf_internal_r+0xf0c>
   2d7f8:	d8001d85 	stb	zero,118(sp)
   2d7fc:	80030b16 	blt	r16,zero,2e42c <___svfiprintf_internal_r+0xff0>
   2d800:	00bfdfc4 	movi	r2,-129
   2d804:	90a4703a 	and	r18,r18,r2
   2d808:	0015883a 	mov	r10,zero
   2d80c:	80002426 	beq	r16,zero,2d8a0 <___svfiprintf_internal_r+0x464>
   2d810:	0039883a 	mov	fp,zero
   2d814:	0013883a 	mov	r9,zero
   2d818:	d9002917 	ldw	r4,164(sp)
   2d81c:	dc401a04 	addi	r17,sp,104
   2d820:	e08003cc 	andi	r2,fp,15
   2d824:	4806973a 	slli	r3,r9,28
   2d828:	2085883a 	add	r2,r4,r2
   2d82c:	e038d13a 	srli	fp,fp,4
   2d830:	10800003 	ldbu	r2,0(r2)
   2d834:	4812d13a 	srli	r9,r9,4
   2d838:	8c7fffc4 	addi	r17,r17,-1
   2d83c:	1f38b03a 	or	fp,r3,fp
   2d840:	88800005 	stb	r2,0(r17)
   2d844:	e244b03a 	or	r2,fp,r9
   2d848:	103ff51e 	bne	r2,zero,2d820 <__alt_mem_sdram_controller_0+0xc002d820>
   2d84c:	dac01e17 	ldw	r11,120(sp)
   2d850:	5c57c83a 	sub	r11,r11,r17
   2d854:	dac02115 	stw	r11,132(sp)
   2d858:	00001406 	br	2d8ac <___svfiprintf_internal_r+0x470>
   2d85c:	21003fcc 	andi	r4,r4,255
   2d860:	2003741e 	bne	r4,zero,2e634 <___svfiprintf_internal_r+0x11f8>
   2d864:	9080080c 	andi	r2,r18,32
   2d868:	10014526 	beq	r2,zero,2dd80 <___svfiprintf_internal_r+0x944>
   2d86c:	dac02317 	ldw	r11,140(sp)
   2d870:	d8001d85 	stb	zero,118(sp)
   2d874:	58c00204 	addi	r3,r11,8
   2d878:	5f000017 	ldw	fp,0(r11)
   2d87c:	5a400117 	ldw	r9,4(r11)
   2d880:	8002d916 	blt	r16,zero,2e3e8 <___svfiprintf_internal_r+0xfac>
   2d884:	013fdfc4 	movi	r4,-129
   2d888:	e244b03a 	or	r2,fp,r9
   2d88c:	d8c02315 	stw	r3,140(sp)
   2d890:	9124703a 	and	r18,r18,r4
   2d894:	0015883a 	mov	r10,zero
   2d898:	1000b91e 	bne	r2,zero,2db80 <___svfiprintf_internal_r+0x744>
   2d89c:	8002e61e 	bne	r16,zero,2e438 <___svfiprintf_internal_r+0xffc>
   2d8a0:	0021883a 	mov	r16,zero
   2d8a4:	d8002115 	stw	zero,132(sp)
   2d8a8:	dc401a04 	addi	r17,sp,104
   2d8ac:	d8c02117 	ldw	r3,132(sp)
   2d8b0:	dc002015 	stw	r16,128(sp)
   2d8b4:	80c0010e 	bge	r16,r3,2d8bc <___svfiprintf_internal_r+0x480>
   2d8b8:	d8c02015 	stw	r3,128(sp)
   2d8bc:	52803fcc 	andi	r10,r10,255
   2d8c0:	5280201c 	xori	r10,r10,128
   2d8c4:	52bfe004 	addi	r10,r10,-128
   2d8c8:	50003c26 	beq	r10,zero,2d9bc <___svfiprintf_internal_r+0x580>
   2d8cc:	dac02017 	ldw	r11,128(sp)
   2d8d0:	5ac00044 	addi	r11,r11,1
   2d8d4:	dac02015 	stw	r11,128(sp)
   2d8d8:	00003806 	br	2d9bc <___svfiprintf_internal_r+0x580>
   2d8dc:	01000044 	movi	r4,1
   2d8e0:	01c00ac4 	movi	r7,43
   2d8e4:	98c00007 	ldb	r3,0(r19)
   2d8e8:	003f2306 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2d8ec:	21003fcc 	andi	r4,r4,255
   2d8f0:	2003481e 	bne	r4,zero,2e614 <___svfiprintf_internal_r+0x11d8>
   2d8f4:	9080080c 	andi	r2,r18,32
   2d8f8:	10013b26 	beq	r2,zero,2dde8 <___svfiprintf_internal_r+0x9ac>
   2d8fc:	dac02317 	ldw	r11,140(sp)
   2d900:	d8001d85 	stb	zero,118(sp)
   2d904:	58800204 	addi	r2,r11,8
   2d908:	5f000017 	ldw	fp,0(r11)
   2d90c:	5a400117 	ldw	r9,4(r11)
   2d910:	8002a816 	blt	r16,zero,2e3b4 <___svfiprintf_internal_r+0xf78>
   2d914:	013fdfc4 	movi	r4,-129
   2d918:	e246b03a 	or	r3,fp,r9
   2d91c:	d8802315 	stw	r2,140(sp)
   2d920:	9124703a 	and	r18,r18,r4
   2d924:	18013c26 	beq	r3,zero,2de18 <___svfiprintf_internal_r+0x9dc>
   2d928:	0015883a 	mov	r10,zero
   2d92c:	dc401a04 	addi	r17,sp,104
   2d930:	e006d0fa 	srli	r3,fp,3
   2d934:	4808977a 	slli	r4,r9,29
   2d938:	4812d0fa 	srli	r9,r9,3
   2d93c:	e70001cc 	andi	fp,fp,7
   2d940:	e0800c04 	addi	r2,fp,48
   2d944:	8c7fffc4 	addi	r17,r17,-1
   2d948:	20f8b03a 	or	fp,r4,r3
   2d94c:	88800005 	stb	r2,0(r17)
   2d950:	e246b03a 	or	r3,fp,r9
   2d954:	183ff61e 	bne	r3,zero,2d930 <__alt_mem_sdram_controller_0+0xc002d930>
   2d958:	90c0004c 	andi	r3,r18,1
   2d95c:	1800a526 	beq	r3,zero,2dbf4 <___svfiprintf_internal_r+0x7b8>
   2d960:	10803fcc 	andi	r2,r2,255
   2d964:	1080201c 	xori	r2,r2,128
   2d968:	10bfe004 	addi	r2,r2,-128
   2d96c:	00c00c04 	movi	r3,48
   2d970:	10ffb626 	beq	r2,r3,2d84c <__alt_mem_sdram_controller_0+0xc002d84c>
   2d974:	88ffffc5 	stb	r3,-1(r17)
   2d978:	d8c01e17 	ldw	r3,120(sp)
   2d97c:	88bfffc4 	addi	r2,r17,-1
   2d980:	1023883a 	mov	r17,r2
   2d984:	1887c83a 	sub	r3,r3,r2
   2d988:	d8c02115 	stw	r3,132(sp)
   2d98c:	003fc706 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2d990:	dac02317 	ldw	r11,140(sp)
   2d994:	00c00044 	movi	r3,1
   2d998:	d8c02015 	stw	r3,128(sp)
   2d99c:	58800017 	ldw	r2,0(r11)
   2d9a0:	5ac00104 	addi	r11,r11,4
   2d9a4:	d8001d85 	stb	zero,118(sp)
   2d9a8:	d8801005 	stb	r2,64(sp)
   2d9ac:	dac02315 	stw	r11,140(sp)
   2d9b0:	d8c02115 	stw	r3,132(sp)
   2d9b4:	dc401004 	addi	r17,sp,64
   2d9b8:	0021883a 	mov	r16,zero
   2d9bc:	90c0008c 	andi	r3,r18,2
   2d9c0:	d8c02215 	stw	r3,136(sp)
   2d9c4:	18000326 	beq	r3,zero,2d9d4 <___svfiprintf_internal_r+0x598>
   2d9c8:	dac02017 	ldw	r11,128(sp)
   2d9cc:	5ac00084 	addi	r11,r11,2
   2d9d0:	dac02015 	stw	r11,128(sp)
   2d9d4:	90c0210c 	andi	r3,r18,132
   2d9d8:	d8c02615 	stw	r3,152(sp)
   2d9dc:	1801131e 	bne	r3,zero,2de2c <___svfiprintf_internal_r+0x9f0>
   2d9e0:	dac02417 	ldw	r11,144(sp)
   2d9e4:	d8c02017 	ldw	r3,128(sp)
   2d9e8:	58f9c83a 	sub	fp,r11,r3
   2d9ec:	07010f0e 	bge	zero,fp,2de2c <___svfiprintf_internal_r+0x9f0>
   2d9f0:	02400404 	movi	r9,16
   2d9f4:	d8c01c17 	ldw	r3,112(sp)
   2d9f8:	d8801b17 	ldw	r2,108(sp)
   2d9fc:	4f02d60e 	bge	r9,fp,2e558 <___svfiprintf_internal_r+0x111c>
   2da00:	014000f4 	movhi	r5,3
   2da04:	29593804 	addi	r5,r5,25824
   2da08:	d9402815 	stw	r5,160(sp)
   2da0c:	028001c4 	movi	r10,7
   2da10:	00000306 	br	2da20 <___svfiprintf_internal_r+0x5e4>
   2da14:	e73ffc04 	addi	fp,fp,-16
   2da18:	42000204 	addi	r8,r8,8
   2da1c:	4f00150e 	bge	r9,fp,2da74 <___svfiprintf_internal_r+0x638>
   2da20:	18c00404 	addi	r3,r3,16
   2da24:	10800044 	addi	r2,r2,1
   2da28:	45800015 	stw	r22,0(r8)
   2da2c:	42400115 	stw	r9,4(r8)
   2da30:	d8c01c15 	stw	r3,112(sp)
   2da34:	d8801b15 	stw	r2,108(sp)
   2da38:	50bff60e 	bge	r10,r2,2da14 <__alt_mem_sdram_controller_0+0xc002da14>
   2da3c:	d9801a04 	addi	r6,sp,104
   2da40:	b80b883a 	mov	r5,r23
   2da44:	a809883a 	mov	r4,r21
   2da48:	da402c15 	stw	r9,176(sp)
   2da4c:	da802d15 	stw	r10,180(sp)
   2da50:	002d26c0 	call	2d26c <__ssprint_r>
   2da54:	da402c17 	ldw	r9,176(sp)
   2da58:	da802d17 	ldw	r10,180(sp)
   2da5c:	1001851e 	bne	r2,zero,2e074 <___svfiprintf_internal_r+0xc38>
   2da60:	e73ffc04 	addi	fp,fp,-16
   2da64:	d8c01c17 	ldw	r3,112(sp)
   2da68:	d8801b17 	ldw	r2,108(sp)
   2da6c:	d811883a 	mov	r8,sp
   2da70:	4f3feb16 	blt	r9,fp,2da20 <__alt_mem_sdram_controller_0+0xc002da20>
   2da74:	dac02817 	ldw	r11,160(sp)
   2da78:	e0c7883a 	add	r3,fp,r3
   2da7c:	10800044 	addi	r2,r2,1
   2da80:	42c00015 	stw	r11,0(r8)
   2da84:	47000115 	stw	fp,4(r8)
   2da88:	d8c01c15 	stw	r3,112(sp)
   2da8c:	d8801b15 	stw	r2,108(sp)
   2da90:	010001c4 	movi	r4,7
   2da94:	2081ee16 	blt	r4,r2,2e250 <___svfiprintf_internal_r+0xe14>
   2da98:	42000204 	addi	r8,r8,8
   2da9c:	0000e506 	br	2de34 <___svfiprintf_internal_r+0x9f8>
   2daa0:	21003fcc 	andi	r4,r4,255
   2daa4:	2002dd1e 	bne	r4,zero,2e61c <___svfiprintf_internal_r+0x11e0>
   2daa8:	008000f4 	movhi	r2,3
   2daac:	1098c704 	addi	r2,r2,25372
   2dab0:	d8802915 	stw	r2,164(sp)
   2dab4:	9080080c 	andi	r2,r18,32
   2dab8:	103f461e 	bne	r2,zero,2d7d4 <__alt_mem_sdram_controller_0+0xc002d7d4>
   2dabc:	9080040c 	andi	r2,r18,16
   2dac0:	10022e1e 	bne	r2,zero,2e37c <___svfiprintf_internal_r+0xf40>
   2dac4:	9080100c 	andi	r2,r18,64
   2dac8:	dac02317 	ldw	r11,140(sp)
   2dacc:	10027326 	beq	r2,zero,2e49c <___svfiprintf_internal_r+0x1060>
   2dad0:	5f00000b 	ldhu	fp,0(r11)
   2dad4:	5ac00104 	addi	r11,r11,4
   2dad8:	0013883a 	mov	r9,zero
   2dadc:	dac02315 	stw	r11,140(sp)
   2dae0:	003f4106 	br	2d7e8 <__alt_mem_sdram_controller_0+0xc002d7e8>
   2dae4:	21003fcc 	andi	r4,r4,255
   2dae8:	2002e11e 	bne	r4,zero,2e670 <___svfiprintf_internal_r+0x1234>
   2daec:	9080080c 	andi	r2,r18,32
   2daf0:	1002011e 	bne	r2,zero,2e2f8 <___svfiprintf_internal_r+0xebc>
   2daf4:	9080040c 	andi	r2,r18,16
   2daf8:	10023e1e 	bne	r2,zero,2e3f4 <___svfiprintf_internal_r+0xfb8>
   2dafc:	9480100c 	andi	r18,r18,64
   2db00:	90023c26 	beq	r18,zero,2e3f4 <___svfiprintf_internal_r+0xfb8>
   2db04:	dac02317 	ldw	r11,140(sp)
   2db08:	58800017 	ldw	r2,0(r11)
   2db0c:	5ac00104 	addi	r11,r11,4
   2db10:	dac02315 	stw	r11,140(sp)
   2db14:	dac02517 	ldw	r11,148(sp)
   2db18:	12c0000d 	sth	r11,0(r2)
   2db1c:	003e6e06 	br	2d4d8 <__alt_mem_sdram_controller_0+0xc002d4d8>
   2db20:	98c00007 	ldb	r3,0(r19)
   2db24:	1a422926 	beq	r3,r9,2e3cc <___svfiprintf_internal_r+0xf90>
   2db28:	94800414 	ori	r18,r18,16
   2db2c:	003e9206 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2db30:	94801014 	ori	r18,r18,64
   2db34:	98c00007 	ldb	r3,0(r19)
   2db38:	003e8f06 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2db3c:	21003fcc 	andi	r4,r4,255
   2db40:	2002c71e 	bne	r4,zero,2e660 <___svfiprintf_internal_r+0x1224>
   2db44:	9080080c 	andi	r2,r18,32
   2db48:	10004926 	beq	r2,zero,2dc70 <___svfiprintf_internal_r+0x834>
   2db4c:	dac02317 	ldw	r11,140(sp)
   2db50:	58800117 	ldw	r2,4(r11)
   2db54:	5f000017 	ldw	fp,0(r11)
   2db58:	5ac00204 	addi	r11,r11,8
   2db5c:	dac02315 	stw	r11,140(sp)
   2db60:	1013883a 	mov	r9,r2
   2db64:	10004b16 	blt	r2,zero,2dc94 <___svfiprintf_internal_r+0x858>
   2db68:	da801d83 	ldbu	r10,118(sp)
   2db6c:	8001cb16 	blt	r16,zero,2e29c <___svfiprintf_internal_r+0xe60>
   2db70:	00ffdfc4 	movi	r3,-129
   2db74:	e244b03a 	or	r2,fp,r9
   2db78:	90e4703a 	and	r18,r18,r3
   2db7c:	103f4726 	beq	r2,zero,2d89c <__alt_mem_sdram_controller_0+0xc002d89c>
   2db80:	48008c26 	beq	r9,zero,2ddb4 <___svfiprintf_internal_r+0x978>
   2db84:	dc802015 	stw	r18,128(sp)
   2db88:	dc002115 	stw	r16,132(sp)
   2db8c:	dc401a04 	addi	r17,sp,104
   2db90:	e021883a 	mov	r16,fp
   2db94:	da002215 	stw	r8,136(sp)
   2db98:	5039883a 	mov	fp,r10
   2db9c:	4825883a 	mov	r18,r9
   2dba0:	8009883a 	mov	r4,r16
   2dba4:	900b883a 	mov	r5,r18
   2dba8:	01800284 	movi	r6,10
   2dbac:	000f883a 	mov	r7,zero
   2dbb0:	00308a40 	call	308a4 <__umoddi3>
   2dbb4:	10800c04 	addi	r2,r2,48
   2dbb8:	8c7fffc4 	addi	r17,r17,-1
   2dbbc:	8009883a 	mov	r4,r16
   2dbc0:	900b883a 	mov	r5,r18
   2dbc4:	88800005 	stb	r2,0(r17)
   2dbc8:	01800284 	movi	r6,10
   2dbcc:	000f883a 	mov	r7,zero
   2dbd0:	003032c0 	call	3032c <__udivdi3>
   2dbd4:	1021883a 	mov	r16,r2
   2dbd8:	10c4b03a 	or	r2,r2,r3
   2dbdc:	1825883a 	mov	r18,r3
   2dbe0:	103fef1e 	bne	r2,zero,2dba0 <__alt_mem_sdram_controller_0+0xc002dba0>
   2dbe4:	dc802017 	ldw	r18,128(sp)
   2dbe8:	dc002117 	ldw	r16,132(sp)
   2dbec:	da002217 	ldw	r8,136(sp)
   2dbf0:	e015883a 	mov	r10,fp
   2dbf4:	d8c01e17 	ldw	r3,120(sp)
   2dbf8:	1c47c83a 	sub	r3,r3,r17
   2dbfc:	d8c02115 	stw	r3,132(sp)
   2dc00:	003f2a06 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2dc04:	dac02317 	ldw	r11,140(sp)
   2dc08:	d8001d85 	stb	zero,118(sp)
   2dc0c:	5c400017 	ldw	r17,0(r11)
   2dc10:	5f000104 	addi	fp,r11,4
   2dc14:	88022f26 	beq	r17,zero,2e4d4 <___svfiprintf_internal_r+0x1098>
   2dc18:	80022516 	blt	r16,zero,2e4b0 <___svfiprintf_internal_r+0x1074>
   2dc1c:	800d883a 	mov	r6,r16
   2dc20:	000b883a 	mov	r5,zero
   2dc24:	8809883a 	mov	r4,r17
   2dc28:	da002c15 	stw	r8,176(sp)
   2dc2c:	002b4d00 	call	2b4d0 <memchr>
   2dc30:	da002c17 	ldw	r8,176(sp)
   2dc34:	10026426 	beq	r2,zero,2e5c8 <___svfiprintf_internal_r+0x118c>
   2dc38:	1445c83a 	sub	r2,r2,r17
   2dc3c:	d8802115 	stw	r2,132(sp)
   2dc40:	da801d83 	ldbu	r10,118(sp)
   2dc44:	df002315 	stw	fp,140(sp)
   2dc48:	0021883a 	mov	r16,zero
   2dc4c:	003f1706 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2dc50:	94800814 	ori	r18,r18,32
   2dc54:	98c00007 	ldb	r3,0(r19)
   2dc58:	003e4706 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2dc5c:	21003fcc 	andi	r4,r4,255
   2dc60:	2002701e 	bne	r4,zero,2e624 <___svfiprintf_internal_r+0x11e8>
   2dc64:	94800414 	ori	r18,r18,16
   2dc68:	9080080c 	andi	r2,r18,32
   2dc6c:	103fb71e 	bne	r2,zero,2db4c <__alt_mem_sdram_controller_0+0xc002db4c>
   2dc70:	9080040c 	andi	r2,r18,16
   2dc74:	1001ab26 	beq	r2,zero,2e324 <___svfiprintf_internal_r+0xee8>
   2dc78:	dac02317 	ldw	r11,140(sp)
   2dc7c:	5f000017 	ldw	fp,0(r11)
   2dc80:	5ac00104 	addi	r11,r11,4
   2dc84:	dac02315 	stw	r11,140(sp)
   2dc88:	e013d7fa 	srai	r9,fp,31
   2dc8c:	4805883a 	mov	r2,r9
   2dc90:	103fb50e 	bge	r2,zero,2db68 <__alt_mem_sdram_controller_0+0xc002db68>
   2dc94:	0739c83a 	sub	fp,zero,fp
   2dc98:	02800b44 	movi	r10,45
   2dc9c:	e004c03a 	cmpne	r2,fp,zero
   2dca0:	0253c83a 	sub	r9,zero,r9
   2dca4:	da801d85 	stb	r10,118(sp)
   2dca8:	4893c83a 	sub	r9,r9,r2
   2dcac:	80023016 	blt	r16,zero,2e570 <___svfiprintf_internal_r+0x1134>
   2dcb0:	00bfdfc4 	movi	r2,-129
   2dcb4:	90a4703a 	and	r18,r18,r2
   2dcb8:	483fb21e 	bne	r9,zero,2db84 <__alt_mem_sdram_controller_0+0xc002db84>
   2dcbc:	00003d06 	br	2ddb4 <___svfiprintf_internal_r+0x978>
   2dcc0:	9817883a 	mov	r11,r19
   2dcc4:	d8002415 	stw	zero,144(sp)
   2dcc8:	18bff404 	addi	r2,r3,-48
   2dccc:	0019883a 	mov	r12,zero
   2dcd0:	58c00007 	ldb	r3,0(r11)
   2dcd4:	630002a4 	muli	r12,r12,10
   2dcd8:	9cc00044 	addi	r19,r19,1
   2dcdc:	9817883a 	mov	r11,r19
   2dce0:	1319883a 	add	r12,r2,r12
   2dce4:	18bff404 	addi	r2,r3,-48
   2dce8:	30bff92e 	bgeu	r6,r2,2dcd0 <__alt_mem_sdram_controller_0+0xc002dcd0>
   2dcec:	db002415 	stw	r12,144(sp)
   2dcf0:	18bff804 	addi	r2,r3,-32
   2dcf4:	28be232e 	bgeu	r5,r2,2d584 <__alt_mem_sdram_controller_0+0xc002d584>
   2dcf8:	21003fcc 	andi	r4,r4,255
   2dcfc:	20024b1e 	bne	r4,zero,2e62c <___svfiprintf_internal_r+0x11f0>
   2dd00:	1800d626 	beq	r3,zero,2e05c <___svfiprintf_internal_r+0xc20>
   2dd04:	02c00044 	movi	r11,1
   2dd08:	dac02015 	stw	r11,128(sp)
   2dd0c:	d8c01005 	stb	r3,64(sp)
   2dd10:	d8001d85 	stb	zero,118(sp)
   2dd14:	dac02115 	stw	r11,132(sp)
   2dd18:	dc401004 	addi	r17,sp,64
   2dd1c:	003f2606 	br	2d9b8 <__alt_mem_sdram_controller_0+0xc002d9b8>
   2dd20:	94802014 	ori	r18,r18,128
   2dd24:	98c00007 	ldb	r3,0(r19)
   2dd28:	003e1306 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2dd2c:	98c00007 	ldb	r3,0(r19)
   2dd30:	9ac00044 	addi	r11,r19,1
   2dd34:	1a822b26 	beq	r3,r10,2e5e4 <___svfiprintf_internal_r+0x11a8>
   2dd38:	18bff404 	addi	r2,r3,-48
   2dd3c:	0021883a 	mov	r16,zero
   2dd40:	30821e36 	bltu	r6,r2,2e5bc <___svfiprintf_internal_r+0x1180>
   2dd44:	58c00007 	ldb	r3,0(r11)
   2dd48:	840002a4 	muli	r16,r16,10
   2dd4c:	5cc00044 	addi	r19,r11,1
   2dd50:	9817883a 	mov	r11,r19
   2dd54:	80a1883a 	add	r16,r16,r2
   2dd58:	18bff404 	addi	r2,r3,-48
   2dd5c:	30bff92e 	bgeu	r6,r2,2dd44 <__alt_mem_sdram_controller_0+0xc002dd44>
   2dd60:	803e060e 	bge	r16,zero,2d57c <__alt_mem_sdram_controller_0+0xc002d57c>
   2dd64:	043fffc4 	movi	r16,-1
   2dd68:	003e0406 	br	2d57c <__alt_mem_sdram_controller_0+0xc002d57c>
   2dd6c:	21003fcc 	andi	r4,r4,255
   2dd70:	2002371e 	bne	r4,zero,2e650 <___svfiprintf_internal_r+0x1214>
   2dd74:	94800414 	ori	r18,r18,16
   2dd78:	9080080c 	andi	r2,r18,32
   2dd7c:	103ebb1e 	bne	r2,zero,2d86c <__alt_mem_sdram_controller_0+0xc002d86c>
   2dd80:	9080040c 	andi	r2,r18,16
   2dd84:	10013b26 	beq	r2,zero,2e274 <___svfiprintf_internal_r+0xe38>
   2dd88:	dac02317 	ldw	r11,140(sp)
   2dd8c:	d8001d85 	stb	zero,118(sp)
   2dd90:	0013883a 	mov	r9,zero
   2dd94:	58800104 	addi	r2,r11,4
   2dd98:	5f000017 	ldw	fp,0(r11)
   2dd9c:	80013d16 	blt	r16,zero,2e294 <___svfiprintf_internal_r+0xe58>
   2dda0:	00ffdfc4 	movi	r3,-129
   2dda4:	d8802315 	stw	r2,140(sp)
   2dda8:	90e4703a 	and	r18,r18,r3
   2ddac:	0015883a 	mov	r10,zero
   2ddb0:	e03eba26 	beq	fp,zero,2d89c <__alt_mem_sdram_controller_0+0xc002d89c>
   2ddb4:	00800244 	movi	r2,9
   2ddb8:	173f7236 	bltu	r2,fp,2db84 <__alt_mem_sdram_controller_0+0xc002db84>
   2ddbc:	dac02b17 	ldw	r11,172(sp)
   2ddc0:	e7000c04 	addi	fp,fp,48
   2ddc4:	df0019c5 	stb	fp,103(sp)
   2ddc8:	dac02115 	stw	r11,132(sp)
   2ddcc:	dc4019c4 	addi	r17,sp,103
   2ddd0:	003eb606 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2ddd4:	21003fcc 	andi	r4,r4,255
   2ddd8:	20021f1e 	bne	r4,zero,2e658 <___svfiprintf_internal_r+0x121c>
   2dddc:	94800414 	ori	r18,r18,16
   2dde0:	9080080c 	andi	r2,r18,32
   2dde4:	103ec51e 	bne	r2,zero,2d8fc <__alt_mem_sdram_controller_0+0xc002d8fc>
   2dde8:	9080040c 	andi	r2,r18,16
   2ddec:	10016926 	beq	r2,zero,2e394 <___svfiprintf_internal_r+0xf58>
   2ddf0:	dac02317 	ldw	r11,140(sp)
   2ddf4:	d8001d85 	stb	zero,118(sp)
   2ddf8:	0013883a 	mov	r9,zero
   2ddfc:	58800104 	addi	r2,r11,4
   2de00:	5f000017 	ldw	fp,0(r11)
   2de04:	80016b16 	blt	r16,zero,2e3b4 <___svfiprintf_internal_r+0xf78>
   2de08:	00ffdfc4 	movi	r3,-129
   2de0c:	d8802315 	stw	r2,140(sp)
   2de10:	90e4703a 	and	r18,r18,r3
   2de14:	e03ec41e 	bne	fp,zero,2d928 <__alt_mem_sdram_controller_0+0xc002d928>
   2de18:	0015883a 	mov	r10,zero
   2de1c:	8001c226 	beq	r16,zero,2e528 <___svfiprintf_internal_r+0x10ec>
   2de20:	0039883a 	mov	fp,zero
   2de24:	0013883a 	mov	r9,zero
   2de28:	003ec006 	br	2d92c <__alt_mem_sdram_controller_0+0xc002d92c>
   2de2c:	d8c01c17 	ldw	r3,112(sp)
   2de30:	d8801b17 	ldw	r2,108(sp)
   2de34:	d9001d87 	ldb	r4,118(sp)
   2de38:	20000b26 	beq	r4,zero,2de68 <___svfiprintf_internal_r+0xa2c>
   2de3c:	d9001d84 	addi	r4,sp,118
   2de40:	18c00044 	addi	r3,r3,1
   2de44:	10800044 	addi	r2,r2,1
   2de48:	41000015 	stw	r4,0(r8)
   2de4c:	01000044 	movi	r4,1
   2de50:	41000115 	stw	r4,4(r8)
   2de54:	d8c01c15 	stw	r3,112(sp)
   2de58:	d8801b15 	stw	r2,108(sp)
   2de5c:	010001c4 	movi	r4,7
   2de60:	2080e116 	blt	r4,r2,2e1e8 <___svfiprintf_internal_r+0xdac>
   2de64:	42000204 	addi	r8,r8,8
   2de68:	dac02217 	ldw	r11,136(sp)
   2de6c:	58000b26 	beq	r11,zero,2de9c <___svfiprintf_internal_r+0xa60>
   2de70:	d9001d04 	addi	r4,sp,116
   2de74:	18c00084 	addi	r3,r3,2
   2de78:	10800044 	addi	r2,r2,1
   2de7c:	41000015 	stw	r4,0(r8)
   2de80:	01000084 	movi	r4,2
   2de84:	41000115 	stw	r4,4(r8)
   2de88:	d8c01c15 	stw	r3,112(sp)
   2de8c:	d8801b15 	stw	r2,108(sp)
   2de90:	010001c4 	movi	r4,7
   2de94:	2080dd16 	blt	r4,r2,2e20c <___svfiprintf_internal_r+0xdd0>
   2de98:	42000204 	addi	r8,r8,8
   2de9c:	dac02617 	ldw	r11,152(sp)
   2dea0:	01002004 	movi	r4,128
   2dea4:	59008426 	beq	r11,r4,2e0b8 <___svfiprintf_internal_r+0xc7c>
   2dea8:	dac02117 	ldw	r11,132(sp)
   2deac:	82e1c83a 	sub	r16,r16,r11
   2deb0:	0400270e 	bge	zero,r16,2df50 <___svfiprintf_internal_r+0xb14>
   2deb4:	01c00404 	movi	r7,16
   2deb8:	3c016a0e 	bge	r7,r16,2e464 <___svfiprintf_internal_r+0x1028>
   2debc:	014000f4 	movhi	r5,3
   2dec0:	29593404 	addi	r5,r5,25808
   2dec4:	d9402215 	stw	r5,136(sp)
   2dec8:	070001c4 	movi	fp,7
   2decc:	00000306 	br	2dedc <___svfiprintf_internal_r+0xaa0>
   2ded0:	843ffc04 	addi	r16,r16,-16
   2ded4:	42000204 	addi	r8,r8,8
   2ded8:	3c00130e 	bge	r7,r16,2df28 <___svfiprintf_internal_r+0xaec>
   2dedc:	18c00404 	addi	r3,r3,16
   2dee0:	10800044 	addi	r2,r2,1
   2dee4:	45000015 	stw	r20,0(r8)
   2dee8:	41c00115 	stw	r7,4(r8)
   2deec:	d8c01c15 	stw	r3,112(sp)
   2def0:	d8801b15 	stw	r2,108(sp)
   2def4:	e0bff60e 	bge	fp,r2,2ded0 <__alt_mem_sdram_controller_0+0xc002ded0>
   2def8:	d9801a04 	addi	r6,sp,104
   2defc:	b80b883a 	mov	r5,r23
   2df00:	a809883a 	mov	r4,r21
   2df04:	d9c02c15 	stw	r7,176(sp)
   2df08:	002d26c0 	call	2d26c <__ssprint_r>
   2df0c:	d9c02c17 	ldw	r7,176(sp)
   2df10:	1000581e 	bne	r2,zero,2e074 <___svfiprintf_internal_r+0xc38>
   2df14:	843ffc04 	addi	r16,r16,-16
   2df18:	d8c01c17 	ldw	r3,112(sp)
   2df1c:	d8801b17 	ldw	r2,108(sp)
   2df20:	d811883a 	mov	r8,sp
   2df24:	3c3fed16 	blt	r7,r16,2dedc <__alt_mem_sdram_controller_0+0xc002dedc>
   2df28:	dac02217 	ldw	r11,136(sp)
   2df2c:	1c07883a 	add	r3,r3,r16
   2df30:	10800044 	addi	r2,r2,1
   2df34:	42c00015 	stw	r11,0(r8)
   2df38:	44000115 	stw	r16,4(r8)
   2df3c:	d8c01c15 	stw	r3,112(sp)
   2df40:	d8801b15 	stw	r2,108(sp)
   2df44:	010001c4 	movi	r4,7
   2df48:	20809e16 	blt	r4,r2,2e1c4 <___svfiprintf_internal_r+0xd88>
   2df4c:	42000204 	addi	r8,r8,8
   2df50:	dac02117 	ldw	r11,132(sp)
   2df54:	10800044 	addi	r2,r2,1
   2df58:	44400015 	stw	r17,0(r8)
   2df5c:	58c7883a 	add	r3,r11,r3
   2df60:	42c00115 	stw	r11,4(r8)
   2df64:	d8c01c15 	stw	r3,112(sp)
   2df68:	d8801b15 	stw	r2,108(sp)
   2df6c:	010001c4 	movi	r4,7
   2df70:	20807f16 	blt	r4,r2,2e170 <___svfiprintf_internal_r+0xd34>
   2df74:	42000204 	addi	r8,r8,8
   2df78:	9480010c 	andi	r18,r18,4
   2df7c:	90002926 	beq	r18,zero,2e024 <___svfiprintf_internal_r+0xbe8>
   2df80:	dac02417 	ldw	r11,144(sp)
   2df84:	d8802017 	ldw	r2,128(sp)
   2df88:	58a1c83a 	sub	r16,r11,r2
   2df8c:	0400250e 	bge	zero,r16,2e024 <___svfiprintf_internal_r+0xbe8>
   2df90:	04400404 	movi	r17,16
   2df94:	d8801b17 	ldw	r2,108(sp)
   2df98:	8c017c0e 	bge	r17,r16,2e58c <___svfiprintf_internal_r+0x1150>
   2df9c:	014000f4 	movhi	r5,3
   2dfa0:	29593804 	addi	r5,r5,25824
   2dfa4:	d9402815 	stw	r5,160(sp)
   2dfa8:	048001c4 	movi	r18,7
   2dfac:	00000306 	br	2dfbc <___svfiprintf_internal_r+0xb80>
   2dfb0:	843ffc04 	addi	r16,r16,-16
   2dfb4:	42000204 	addi	r8,r8,8
   2dfb8:	8c00110e 	bge	r17,r16,2e000 <___svfiprintf_internal_r+0xbc4>
   2dfbc:	18c00404 	addi	r3,r3,16
   2dfc0:	10800044 	addi	r2,r2,1
   2dfc4:	45800015 	stw	r22,0(r8)
   2dfc8:	44400115 	stw	r17,4(r8)
   2dfcc:	d8c01c15 	stw	r3,112(sp)
   2dfd0:	d8801b15 	stw	r2,108(sp)
   2dfd4:	90bff60e 	bge	r18,r2,2dfb0 <__alt_mem_sdram_controller_0+0xc002dfb0>
   2dfd8:	d9801a04 	addi	r6,sp,104
   2dfdc:	b80b883a 	mov	r5,r23
   2dfe0:	a809883a 	mov	r4,r21
   2dfe4:	002d26c0 	call	2d26c <__ssprint_r>
   2dfe8:	1000221e 	bne	r2,zero,2e074 <___svfiprintf_internal_r+0xc38>
   2dfec:	843ffc04 	addi	r16,r16,-16
   2dff0:	d8c01c17 	ldw	r3,112(sp)
   2dff4:	d8801b17 	ldw	r2,108(sp)
   2dff8:	d811883a 	mov	r8,sp
   2dffc:	8c3fef16 	blt	r17,r16,2dfbc <__alt_mem_sdram_controller_0+0xc002dfbc>
   2e000:	dac02817 	ldw	r11,160(sp)
   2e004:	1c07883a 	add	r3,r3,r16
   2e008:	10800044 	addi	r2,r2,1
   2e00c:	42c00015 	stw	r11,0(r8)
   2e010:	44000115 	stw	r16,4(r8)
   2e014:	d8c01c15 	stw	r3,112(sp)
   2e018:	d8801b15 	stw	r2,108(sp)
   2e01c:	010001c4 	movi	r4,7
   2e020:	2080aa16 	blt	r4,r2,2e2cc <___svfiprintf_internal_r+0xe90>
   2e024:	d8802417 	ldw	r2,144(sp)
   2e028:	dac02017 	ldw	r11,128(sp)
   2e02c:	12c0010e 	bge	r2,r11,2e034 <___svfiprintf_internal_r+0xbf8>
   2e030:	5805883a 	mov	r2,r11
   2e034:	dac02517 	ldw	r11,148(sp)
   2e038:	5897883a 	add	r11,r11,r2
   2e03c:	dac02515 	stw	r11,148(sp)
   2e040:	1800531e 	bne	r3,zero,2e190 <___svfiprintf_internal_r+0xd54>
   2e044:	98800007 	ldb	r2,0(r19)
   2e048:	d8001b15 	stw	zero,108(sp)
   2e04c:	d811883a 	mov	r8,sp
   2e050:	103d231e 	bne	r2,zero,2d4e0 <__alt_mem_sdram_controller_0+0xc002d4e0>
   2e054:	9823883a 	mov	r17,r19
   2e058:	003d3906 	br	2d540 <__alt_mem_sdram_controller_0+0xc002d540>
   2e05c:	d8801c17 	ldw	r2,112(sp)
   2e060:	10000426 	beq	r2,zero,2e074 <___svfiprintf_internal_r+0xc38>
   2e064:	d9402717 	ldw	r5,156(sp)
   2e068:	d9002a17 	ldw	r4,168(sp)
   2e06c:	d9801a04 	addi	r6,sp,104
   2e070:	002d26c0 	call	2d26c <__ssprint_r>
   2e074:	dac02717 	ldw	r11,156(sp)
   2e078:	d8802517 	ldw	r2,148(sp)
   2e07c:	58c0030b 	ldhu	r3,12(r11)
   2e080:	18c0100c 	andi	r3,r3,64
   2e084:	1801381e 	bne	r3,zero,2e568 <___svfiprintf_internal_r+0x112c>
   2e088:	dfc03717 	ldw	ra,220(sp)
   2e08c:	df003617 	ldw	fp,216(sp)
   2e090:	ddc03517 	ldw	r23,212(sp)
   2e094:	dd803417 	ldw	r22,208(sp)
   2e098:	dd403317 	ldw	r21,204(sp)
   2e09c:	dd003217 	ldw	r20,200(sp)
   2e0a0:	dcc03117 	ldw	r19,196(sp)
   2e0a4:	dc803017 	ldw	r18,192(sp)
   2e0a8:	dc402f17 	ldw	r17,188(sp)
   2e0ac:	dc002e17 	ldw	r16,184(sp)
   2e0b0:	dec03804 	addi	sp,sp,224
   2e0b4:	f800283a 	ret
   2e0b8:	dac02417 	ldw	r11,144(sp)
   2e0bc:	d9002017 	ldw	r4,128(sp)
   2e0c0:	5939c83a 	sub	fp,r11,r4
   2e0c4:	073f780e 	bge	zero,fp,2dea8 <__alt_mem_sdram_controller_0+0xc002dea8>
   2e0c8:	02400404 	movi	r9,16
   2e0cc:	4f01370e 	bge	r9,fp,2e5ac <___svfiprintf_internal_r+0x1170>
   2e0d0:	02c000f4 	movhi	r11,3
   2e0d4:	5ad93404 	addi	r11,r11,25808
   2e0d8:	dac02215 	stw	r11,136(sp)
   2e0dc:	028001c4 	movi	r10,7
   2e0e0:	00000306 	br	2e0f0 <___svfiprintf_internal_r+0xcb4>
   2e0e4:	e73ffc04 	addi	fp,fp,-16
   2e0e8:	42000204 	addi	r8,r8,8
   2e0ec:	4f00150e 	bge	r9,fp,2e144 <___svfiprintf_internal_r+0xd08>
   2e0f0:	18c00404 	addi	r3,r3,16
   2e0f4:	10800044 	addi	r2,r2,1
   2e0f8:	45000015 	stw	r20,0(r8)
   2e0fc:	42400115 	stw	r9,4(r8)
   2e100:	d8c01c15 	stw	r3,112(sp)
   2e104:	d8801b15 	stw	r2,108(sp)
   2e108:	50bff60e 	bge	r10,r2,2e0e4 <__alt_mem_sdram_controller_0+0xc002e0e4>
   2e10c:	d9801a04 	addi	r6,sp,104
   2e110:	b80b883a 	mov	r5,r23
   2e114:	a809883a 	mov	r4,r21
   2e118:	da402c15 	stw	r9,176(sp)
   2e11c:	da802d15 	stw	r10,180(sp)
   2e120:	002d26c0 	call	2d26c <__ssprint_r>
   2e124:	da402c17 	ldw	r9,176(sp)
   2e128:	da802d17 	ldw	r10,180(sp)
   2e12c:	103fd11e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e130:	e73ffc04 	addi	fp,fp,-16
   2e134:	d8c01c17 	ldw	r3,112(sp)
   2e138:	d8801b17 	ldw	r2,108(sp)
   2e13c:	d811883a 	mov	r8,sp
   2e140:	4f3feb16 	blt	r9,fp,2e0f0 <__alt_mem_sdram_controller_0+0xc002e0f0>
   2e144:	dac02217 	ldw	r11,136(sp)
   2e148:	1f07883a 	add	r3,r3,fp
   2e14c:	10800044 	addi	r2,r2,1
   2e150:	42c00015 	stw	r11,0(r8)
   2e154:	47000115 	stw	fp,4(r8)
   2e158:	d8c01c15 	stw	r3,112(sp)
   2e15c:	d8801b15 	stw	r2,108(sp)
   2e160:	010001c4 	movi	r4,7
   2e164:	2080b616 	blt	r4,r2,2e440 <___svfiprintf_internal_r+0x1004>
   2e168:	42000204 	addi	r8,r8,8
   2e16c:	003f4e06 	br	2dea8 <__alt_mem_sdram_controller_0+0xc002dea8>
   2e170:	d9801a04 	addi	r6,sp,104
   2e174:	b80b883a 	mov	r5,r23
   2e178:	a809883a 	mov	r4,r21
   2e17c:	002d26c0 	call	2d26c <__ssprint_r>
   2e180:	103fbc1e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e184:	d8c01c17 	ldw	r3,112(sp)
   2e188:	d811883a 	mov	r8,sp
   2e18c:	003f7a06 	br	2df78 <__alt_mem_sdram_controller_0+0xc002df78>
   2e190:	d9801a04 	addi	r6,sp,104
   2e194:	b80b883a 	mov	r5,r23
   2e198:	a809883a 	mov	r4,r21
   2e19c:	002d26c0 	call	2d26c <__ssprint_r>
   2e1a0:	103fa826 	beq	r2,zero,2e044 <__alt_mem_sdram_controller_0+0xc002e044>
   2e1a4:	003fb306 	br	2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e1a8:	d9801a04 	addi	r6,sp,104
   2e1ac:	b80b883a 	mov	r5,r23
   2e1b0:	a809883a 	mov	r4,r21
   2e1b4:	002d26c0 	call	2d26c <__ssprint_r>
   2e1b8:	103fae1e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e1bc:	d811883a 	mov	r8,sp
   2e1c0:	003cdc06 	br	2d534 <__alt_mem_sdram_controller_0+0xc002d534>
   2e1c4:	d9801a04 	addi	r6,sp,104
   2e1c8:	b80b883a 	mov	r5,r23
   2e1cc:	a809883a 	mov	r4,r21
   2e1d0:	002d26c0 	call	2d26c <__ssprint_r>
   2e1d4:	103fa71e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e1d8:	d8c01c17 	ldw	r3,112(sp)
   2e1dc:	d8801b17 	ldw	r2,108(sp)
   2e1e0:	d811883a 	mov	r8,sp
   2e1e4:	003f5a06 	br	2df50 <__alt_mem_sdram_controller_0+0xc002df50>
   2e1e8:	d9801a04 	addi	r6,sp,104
   2e1ec:	b80b883a 	mov	r5,r23
   2e1f0:	a809883a 	mov	r4,r21
   2e1f4:	002d26c0 	call	2d26c <__ssprint_r>
   2e1f8:	103f9e1e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e1fc:	d8c01c17 	ldw	r3,112(sp)
   2e200:	d8801b17 	ldw	r2,108(sp)
   2e204:	d811883a 	mov	r8,sp
   2e208:	003f1706 	br	2de68 <__alt_mem_sdram_controller_0+0xc002de68>
   2e20c:	d9801a04 	addi	r6,sp,104
   2e210:	b80b883a 	mov	r5,r23
   2e214:	a809883a 	mov	r4,r21
   2e218:	002d26c0 	call	2d26c <__ssprint_r>
   2e21c:	103f951e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e220:	d8c01c17 	ldw	r3,112(sp)
   2e224:	d8801b17 	ldw	r2,108(sp)
   2e228:	d811883a 	mov	r8,sp
   2e22c:	003f1b06 	br	2de9c <__alt_mem_sdram_controller_0+0xc002de9c>
   2e230:	d8001d85 	stb	zero,118(sp)
   2e234:	80007b16 	blt	r16,zero,2e424 <___svfiprintf_internal_r+0xfe8>
   2e238:	00ffdfc4 	movi	r3,-129
   2e23c:	e244b03a 	or	r2,fp,r9
   2e240:	90e4703a 	and	r18,r18,r3
   2e244:	103d7026 	beq	r2,zero,2d808 <__alt_mem_sdram_controller_0+0xc002d808>
   2e248:	0015883a 	mov	r10,zero
   2e24c:	003d7206 	br	2d818 <__alt_mem_sdram_controller_0+0xc002d818>
   2e250:	d9801a04 	addi	r6,sp,104
   2e254:	b80b883a 	mov	r5,r23
   2e258:	a809883a 	mov	r4,r21
   2e25c:	002d26c0 	call	2d26c <__ssprint_r>
   2e260:	103f841e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e264:	d8c01c17 	ldw	r3,112(sp)
   2e268:	d8801b17 	ldw	r2,108(sp)
   2e26c:	d811883a 	mov	r8,sp
   2e270:	003ef006 	br	2de34 <__alt_mem_sdram_controller_0+0xc002de34>
   2e274:	9080100c 	andi	r2,r18,64
   2e278:	d8001d85 	stb	zero,118(sp)
   2e27c:	dac02317 	ldw	r11,140(sp)
   2e280:	10008126 	beq	r2,zero,2e488 <___svfiprintf_internal_r+0x104c>
   2e284:	58800104 	addi	r2,r11,4
   2e288:	5f00000b 	ldhu	fp,0(r11)
   2e28c:	0013883a 	mov	r9,zero
   2e290:	803ec30e 	bge	r16,zero,2dda0 <__alt_mem_sdram_controller_0+0xc002dda0>
   2e294:	d8802315 	stw	r2,140(sp)
   2e298:	0015883a 	mov	r10,zero
   2e29c:	e244b03a 	or	r2,fp,r9
   2e2a0:	103e371e 	bne	r2,zero,2db80 <__alt_mem_sdram_controller_0+0xc002db80>
   2e2a4:	00800044 	movi	r2,1
   2e2a8:	10803fcc 	andi	r2,r2,255
   2e2ac:	00c00044 	movi	r3,1
   2e2b0:	10c06126 	beq	r2,r3,2e438 <___svfiprintf_internal_r+0xffc>
   2e2b4:	00c00084 	movi	r3,2
   2e2b8:	10fd5526 	beq	r2,r3,2d810 <__alt_mem_sdram_controller_0+0xc002d810>
   2e2bc:	003ed806 	br	2de20 <__alt_mem_sdram_controller_0+0xc002de20>
   2e2c0:	d8802315 	stw	r2,140(sp)
   2e2c4:	98c00007 	ldb	r3,0(r19)
   2e2c8:	003cab06 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2e2cc:	d9801a04 	addi	r6,sp,104
   2e2d0:	b80b883a 	mov	r5,r23
   2e2d4:	a809883a 	mov	r4,r21
   2e2d8:	002d26c0 	call	2d26c <__ssprint_r>
   2e2dc:	103f651e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e2e0:	d8c01c17 	ldw	r3,112(sp)
   2e2e4:	003f4f06 	br	2e024 <__alt_mem_sdram_controller_0+0xc002e024>
   2e2e8:	008000f4 	movhi	r2,3
   2e2ec:	1098cc04 	addi	r2,r2,25392
   2e2f0:	d8802915 	stw	r2,164(sp)
   2e2f4:	003d4406 	br	2d808 <__alt_mem_sdram_controller_0+0xc002d808>
   2e2f8:	dac02317 	ldw	r11,140(sp)
   2e2fc:	58800017 	ldw	r2,0(r11)
   2e300:	dac02517 	ldw	r11,148(sp)
   2e304:	5807d7fa 	srai	r3,r11,31
   2e308:	dac02317 	ldw	r11,140(sp)
   2e30c:	10c00115 	stw	r3,4(r2)
   2e310:	5ac00104 	addi	r11,r11,4
   2e314:	dac02315 	stw	r11,140(sp)
   2e318:	dac02517 	ldw	r11,148(sp)
   2e31c:	12c00015 	stw	r11,0(r2)
   2e320:	003c6d06 	br	2d4d8 <__alt_mem_sdram_controller_0+0xc002d4d8>
   2e324:	9080100c 	andi	r2,r18,64
   2e328:	dac02317 	ldw	r11,140(sp)
   2e32c:	103e5326 	beq	r2,zero,2dc7c <__alt_mem_sdram_controller_0+0xc002dc7c>
   2e330:	5f00000f 	ldh	fp,0(r11)
   2e334:	5ac00104 	addi	r11,r11,4
   2e338:	dac02315 	stw	r11,140(sp)
   2e33c:	e013d7fa 	srai	r9,fp,31
   2e340:	4805883a 	mov	r2,r9
   2e344:	003e0706 	br	2db64 <__alt_mem_sdram_controller_0+0xc002db64>
   2e348:	00800c04 	movi	r2,48
   2e34c:	d8801d05 	stb	r2,116(sp)
   2e350:	d8c01d45 	stb	r3,117(sp)
   2e354:	d8001d85 	stb	zero,118(sp)
   2e358:	90800094 	ori	r2,r18,2
   2e35c:	80008f16 	blt	r16,zero,2e59c <___svfiprintf_internal_r+0x1160>
   2e360:	00bfdfc4 	movi	r2,-129
   2e364:	90a4703a 	and	r18,r18,r2
   2e368:	94800094 	ori	r18,r18,2
   2e36c:	0015883a 	mov	r10,zero
   2e370:	003d2906 	br	2d818 <__alt_mem_sdram_controller_0+0xc002d818>
   2e374:	98c00007 	ldb	r3,0(r19)
   2e378:	003c7f06 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2e37c:	dac02317 	ldw	r11,140(sp)
   2e380:	0013883a 	mov	r9,zero
   2e384:	5f000017 	ldw	fp,0(r11)
   2e388:	5ac00104 	addi	r11,r11,4
   2e38c:	dac02315 	stw	r11,140(sp)
   2e390:	003d1506 	br	2d7e8 <__alt_mem_sdram_controller_0+0xc002d7e8>
   2e394:	9080100c 	andi	r2,r18,64
   2e398:	d8001d85 	stb	zero,118(sp)
   2e39c:	dac02317 	ldw	r11,140(sp)
   2e3a0:	10003426 	beq	r2,zero,2e474 <___svfiprintf_internal_r+0x1038>
   2e3a4:	58800104 	addi	r2,r11,4
   2e3a8:	5f00000b 	ldhu	fp,0(r11)
   2e3ac:	0013883a 	mov	r9,zero
   2e3b0:	803e950e 	bge	r16,zero,2de08 <__alt_mem_sdram_controller_0+0xc002de08>
   2e3b4:	e246b03a 	or	r3,fp,r9
   2e3b8:	d8802315 	stw	r2,140(sp)
   2e3bc:	183d5a1e 	bne	r3,zero,2d928 <__alt_mem_sdram_controller_0+0xc002d928>
   2e3c0:	0015883a 	mov	r10,zero
   2e3c4:	0005883a 	mov	r2,zero
   2e3c8:	003fb706 	br	2e2a8 <__alt_mem_sdram_controller_0+0xc002e2a8>
   2e3cc:	98c00043 	ldbu	r3,1(r19)
   2e3d0:	94800814 	ori	r18,r18,32
   2e3d4:	9cc00044 	addi	r19,r19,1
   2e3d8:	18c03fcc 	andi	r3,r3,255
   2e3dc:	18c0201c 	xori	r3,r3,128
   2e3e0:	18ffe004 	addi	r3,r3,-128
   2e3e4:	003c6406 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2e3e8:	d8c02315 	stw	r3,140(sp)
   2e3ec:	0015883a 	mov	r10,zero
   2e3f0:	003faa06 	br	2e29c <__alt_mem_sdram_controller_0+0xc002e29c>
   2e3f4:	dac02317 	ldw	r11,140(sp)
   2e3f8:	58800017 	ldw	r2,0(r11)
   2e3fc:	5ac00104 	addi	r11,r11,4
   2e400:	dac02315 	stw	r11,140(sp)
   2e404:	dac02517 	ldw	r11,148(sp)
   2e408:	12c00015 	stw	r11,0(r2)
   2e40c:	003c3206 	br	2d4d8 <__alt_mem_sdram_controller_0+0xc002d4d8>
   2e410:	010000f4 	movhi	r4,3
   2e414:	2118cc04 	addi	r4,r4,25392
   2e418:	d9002915 	stw	r4,164(sp)
   2e41c:	d8c02315 	stw	r3,140(sp)
   2e420:	1025883a 	mov	r18,r2
   2e424:	e244b03a 	or	r2,fp,r9
   2e428:	103f871e 	bne	r2,zero,2e248 <__alt_mem_sdram_controller_0+0xc002e248>
   2e42c:	0015883a 	mov	r10,zero
   2e430:	00800084 	movi	r2,2
   2e434:	003f9c06 	br	2e2a8 <__alt_mem_sdram_controller_0+0xc002e2a8>
   2e438:	0039883a 	mov	fp,zero
   2e43c:	003e5f06 	br	2ddbc <__alt_mem_sdram_controller_0+0xc002ddbc>
   2e440:	d9801a04 	addi	r6,sp,104
   2e444:	b80b883a 	mov	r5,r23
   2e448:	a809883a 	mov	r4,r21
   2e44c:	002d26c0 	call	2d26c <__ssprint_r>
   2e450:	103f081e 	bne	r2,zero,2e074 <__alt_mem_sdram_controller_0+0xc002e074>
   2e454:	d8c01c17 	ldw	r3,112(sp)
   2e458:	d8801b17 	ldw	r2,108(sp)
   2e45c:	d811883a 	mov	r8,sp
   2e460:	003e9106 	br	2dea8 <__alt_mem_sdram_controller_0+0xc002dea8>
   2e464:	010000f4 	movhi	r4,3
   2e468:	21193404 	addi	r4,r4,25808
   2e46c:	d9002215 	stw	r4,136(sp)
   2e470:	003ead06 	br	2df28 <__alt_mem_sdram_controller_0+0xc002df28>
   2e474:	58800104 	addi	r2,r11,4
   2e478:	5f000017 	ldw	fp,0(r11)
   2e47c:	0013883a 	mov	r9,zero
   2e480:	803e610e 	bge	r16,zero,2de08 <__alt_mem_sdram_controller_0+0xc002de08>
   2e484:	003fcb06 	br	2e3b4 <__alt_mem_sdram_controller_0+0xc002e3b4>
   2e488:	58800104 	addi	r2,r11,4
   2e48c:	5f000017 	ldw	fp,0(r11)
   2e490:	0013883a 	mov	r9,zero
   2e494:	803e420e 	bge	r16,zero,2dda0 <__alt_mem_sdram_controller_0+0xc002dda0>
   2e498:	003f7e06 	br	2e294 <__alt_mem_sdram_controller_0+0xc002e294>
   2e49c:	5f000017 	ldw	fp,0(r11)
   2e4a0:	5ac00104 	addi	r11,r11,4
   2e4a4:	0013883a 	mov	r9,zero
   2e4a8:	dac02315 	stw	r11,140(sp)
   2e4ac:	003cce06 	br	2d7e8 <__alt_mem_sdram_controller_0+0xc002d7e8>
   2e4b0:	8809883a 	mov	r4,r17
   2e4b4:	da002c15 	stw	r8,176(sp)
   2e4b8:	0024d2c0 	call	24d2c <strlen>
   2e4bc:	d8802115 	stw	r2,132(sp)
   2e4c0:	da801d83 	ldbu	r10,118(sp)
   2e4c4:	df002315 	stw	fp,140(sp)
   2e4c8:	0021883a 	mov	r16,zero
   2e4cc:	da002c17 	ldw	r8,176(sp)
   2e4d0:	003cf606 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2e4d4:	00800184 	movi	r2,6
   2e4d8:	1400012e 	bgeu	r2,r16,2e4e0 <___svfiprintf_internal_r+0x10a4>
   2e4dc:	1021883a 	mov	r16,r2
   2e4e0:	dc002115 	stw	r16,132(sp)
   2e4e4:	8005883a 	mov	r2,r16
   2e4e8:	80003c16 	blt	r16,zero,2e5dc <___svfiprintf_internal_r+0x11a0>
   2e4ec:	044000f4 	movhi	r17,3
   2e4f0:	d8802015 	stw	r2,128(sp)
   2e4f4:	df002315 	stw	fp,140(sp)
   2e4f8:	8c58d104 	addi	r17,r17,25412
   2e4fc:	003d2e06 	br	2d9b8 <__alt_mem_sdram_controller_0+0xc002d9b8>
   2e500:	04001004 	movi	r16,64
   2e504:	800b883a 	mov	r5,r16
   2e508:	0023d980 	call	23d98 <_malloc_r>
   2e50c:	dac02717 	ldw	r11,156(sp)
   2e510:	58800015 	stw	r2,0(r11)
   2e514:	58800415 	stw	r2,16(r11)
   2e518:	10004826 	beq	r2,zero,2e63c <___svfiprintf_internal_r+0x1200>
   2e51c:	dac02717 	ldw	r11,156(sp)
   2e520:	5c000515 	stw	r16,20(r11)
   2e524:	003bd906 	br	2d48c <__alt_mem_sdram_controller_0+0xc002d48c>
   2e528:	9080004c 	andi	r2,r18,1
   2e52c:	0015883a 	mov	r10,zero
   2e530:	10000626 	beq	r2,zero,2e54c <___svfiprintf_internal_r+0x1110>
   2e534:	dac02b17 	ldw	r11,172(sp)
   2e538:	00800c04 	movi	r2,48
   2e53c:	d88019c5 	stb	r2,103(sp)
   2e540:	dac02115 	stw	r11,132(sp)
   2e544:	dc4019c4 	addi	r17,sp,103
   2e548:	003cd806 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2e54c:	d8002115 	stw	zero,132(sp)
   2e550:	dc401a04 	addi	r17,sp,104
   2e554:	003cd506 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2e558:	010000f4 	movhi	r4,3
   2e55c:	21193804 	addi	r4,r4,25824
   2e560:	d9002815 	stw	r4,160(sp)
   2e564:	003d4306 	br	2da74 <__alt_mem_sdram_controller_0+0xc002da74>
   2e568:	00bfffc4 	movi	r2,-1
   2e56c:	003ec606 	br	2e088 <__alt_mem_sdram_controller_0+0xc002e088>
   2e570:	00800044 	movi	r2,1
   2e574:	10803fcc 	andi	r2,r2,255
   2e578:	00c00044 	movi	r3,1
   2e57c:	10fd8026 	beq	r2,r3,2db80 <__alt_mem_sdram_controller_0+0xc002db80>
   2e580:	00c00084 	movi	r3,2
   2e584:	10fca426 	beq	r2,r3,2d818 <__alt_mem_sdram_controller_0+0xc002d818>
   2e588:	003ce806 	br	2d92c <__alt_mem_sdram_controller_0+0xc002d92c>
   2e58c:	010000f4 	movhi	r4,3
   2e590:	21193804 	addi	r4,r4,25824
   2e594:	d9002815 	stw	r4,160(sp)
   2e598:	003e9906 	br	2e000 <__alt_mem_sdram_controller_0+0xc002e000>
   2e59c:	1025883a 	mov	r18,r2
   2e5a0:	0015883a 	mov	r10,zero
   2e5a4:	00800084 	movi	r2,2
   2e5a8:	003ff206 	br	2e574 <__alt_mem_sdram_controller_0+0xc002e574>
   2e5ac:	014000f4 	movhi	r5,3
   2e5b0:	29593404 	addi	r5,r5,25808
   2e5b4:	d9402215 	stw	r5,136(sp)
   2e5b8:	003ee206 	br	2e144 <__alt_mem_sdram_controller_0+0xc002e144>
   2e5bc:	5827883a 	mov	r19,r11
   2e5c0:	0021883a 	mov	r16,zero
   2e5c4:	003bed06 	br	2d57c <__alt_mem_sdram_controller_0+0xc002d57c>
   2e5c8:	dc002115 	stw	r16,132(sp)
   2e5cc:	da801d83 	ldbu	r10,118(sp)
   2e5d0:	df002315 	stw	fp,140(sp)
   2e5d4:	0021883a 	mov	r16,zero
   2e5d8:	003cb406 	br	2d8ac <__alt_mem_sdram_controller_0+0xc002d8ac>
   2e5dc:	0005883a 	mov	r2,zero
   2e5e0:	003fc206 	br	2e4ec <__alt_mem_sdram_controller_0+0xc002e4ec>
   2e5e4:	d8802317 	ldw	r2,140(sp)
   2e5e8:	98c00043 	ldbu	r3,1(r19)
   2e5ec:	5827883a 	mov	r19,r11
   2e5f0:	14000017 	ldw	r16,0(r2)
   2e5f4:	10800104 	addi	r2,r2,4
   2e5f8:	d8802315 	stw	r2,140(sp)
   2e5fc:	803f760e 	bge	r16,zero,2e3d8 <__alt_mem_sdram_controller_0+0xc002e3d8>
   2e600:	18c03fcc 	andi	r3,r3,255
   2e604:	18c0201c 	xori	r3,r3,128
   2e608:	043fffc4 	movi	r16,-1
   2e60c:	18ffe004 	addi	r3,r3,-128
   2e610:	003bd906 	br	2d578 <__alt_mem_sdram_controller_0+0xc002d578>
   2e614:	d9c01d85 	stb	r7,118(sp)
   2e618:	003cb606 	br	2d8f4 <__alt_mem_sdram_controller_0+0xc002d8f4>
   2e61c:	d9c01d85 	stb	r7,118(sp)
   2e620:	003d2106 	br	2daa8 <__alt_mem_sdram_controller_0+0xc002daa8>
   2e624:	d9c01d85 	stb	r7,118(sp)
   2e628:	003d8e06 	br	2dc64 <__alt_mem_sdram_controller_0+0xc002dc64>
   2e62c:	d9c01d85 	stb	r7,118(sp)
   2e630:	003db306 	br	2dd00 <__alt_mem_sdram_controller_0+0xc002dd00>
   2e634:	d9c01d85 	stb	r7,118(sp)
   2e638:	003c8a06 	br	2d864 <__alt_mem_sdram_controller_0+0xc002d864>
   2e63c:	dac02a17 	ldw	r11,168(sp)
   2e640:	00800304 	movi	r2,12
   2e644:	58800015 	stw	r2,0(r11)
   2e648:	00bfffc4 	movi	r2,-1
   2e64c:	003e8e06 	br	2e088 <__alt_mem_sdram_controller_0+0xc002e088>
   2e650:	d9c01d85 	stb	r7,118(sp)
   2e654:	003dc706 	br	2dd74 <__alt_mem_sdram_controller_0+0xc002dd74>
   2e658:	d9c01d85 	stb	r7,118(sp)
   2e65c:	003ddf06 	br	2dddc <__alt_mem_sdram_controller_0+0xc002dddc>
   2e660:	d9c01d85 	stb	r7,118(sp)
   2e664:	003d3706 	br	2db44 <__alt_mem_sdram_controller_0+0xc002db44>
   2e668:	d9c01d85 	stb	r7,118(sp)
   2e66c:	003c5406 	br	2d7c0 <__alt_mem_sdram_controller_0+0xc002d7c0>
   2e670:	d9c01d85 	stb	r7,118(sp)
   2e674:	003d1d06 	br	2daec <__alt_mem_sdram_controller_0+0xc002daec>

0002e678 <__sprint_r.part.0>:
   2e678:	28801917 	ldw	r2,100(r5)
   2e67c:	defff604 	addi	sp,sp,-40
   2e680:	dd400515 	stw	r21,20(sp)
   2e684:	dfc00915 	stw	ra,36(sp)
   2e688:	df000815 	stw	fp,32(sp)
   2e68c:	ddc00715 	stw	r23,28(sp)
   2e690:	dd800615 	stw	r22,24(sp)
   2e694:	dd000415 	stw	r20,16(sp)
   2e698:	dcc00315 	stw	r19,12(sp)
   2e69c:	dc800215 	stw	r18,8(sp)
   2e6a0:	dc400115 	stw	r17,4(sp)
   2e6a4:	dc000015 	stw	r16,0(sp)
   2e6a8:	1088000c 	andi	r2,r2,8192
   2e6ac:	302b883a 	mov	r21,r6
   2e6b0:	10002e26 	beq	r2,zero,2e76c <__sprint_r.part.0+0xf4>
   2e6b4:	30800217 	ldw	r2,8(r6)
   2e6b8:	35800017 	ldw	r22,0(r6)
   2e6bc:	10002926 	beq	r2,zero,2e764 <__sprint_r.part.0+0xec>
   2e6c0:	2827883a 	mov	r19,r5
   2e6c4:	2029883a 	mov	r20,r4
   2e6c8:	b5c00104 	addi	r23,r22,4
   2e6cc:	04bfffc4 	movi	r18,-1
   2e6d0:	bc400017 	ldw	r17,0(r23)
   2e6d4:	b4000017 	ldw	r16,0(r22)
   2e6d8:	0039883a 	mov	fp,zero
   2e6dc:	8822d0ba 	srli	r17,r17,2
   2e6e0:	8800031e 	bne	r17,zero,2e6f0 <__sprint_r.part.0+0x78>
   2e6e4:	00001806 	br	2e748 <__sprint_r.part.0+0xd0>
   2e6e8:	84000104 	addi	r16,r16,4
   2e6ec:	8f001526 	beq	r17,fp,2e744 <__sprint_r.part.0+0xcc>
   2e6f0:	81400017 	ldw	r5,0(r16)
   2e6f4:	980d883a 	mov	r6,r19
   2e6f8:	a009883a 	mov	r4,r20
   2e6fc:	002fee80 	call	2fee8 <_fputwc_r>
   2e700:	e7000044 	addi	fp,fp,1
   2e704:	14bff81e 	bne	r2,r18,2e6e8 <__alt_mem_sdram_controller_0+0xc002e6e8>
   2e708:	9005883a 	mov	r2,r18
   2e70c:	a8000215 	stw	zero,8(r21)
   2e710:	a8000115 	stw	zero,4(r21)
   2e714:	dfc00917 	ldw	ra,36(sp)
   2e718:	df000817 	ldw	fp,32(sp)
   2e71c:	ddc00717 	ldw	r23,28(sp)
   2e720:	dd800617 	ldw	r22,24(sp)
   2e724:	dd400517 	ldw	r21,20(sp)
   2e728:	dd000417 	ldw	r20,16(sp)
   2e72c:	dcc00317 	ldw	r19,12(sp)
   2e730:	dc800217 	ldw	r18,8(sp)
   2e734:	dc400117 	ldw	r17,4(sp)
   2e738:	dc000017 	ldw	r16,0(sp)
   2e73c:	dec00a04 	addi	sp,sp,40
   2e740:	f800283a 	ret
   2e744:	a8800217 	ldw	r2,8(r21)
   2e748:	8c63883a 	add	r17,r17,r17
   2e74c:	8c63883a 	add	r17,r17,r17
   2e750:	1445c83a 	sub	r2,r2,r17
   2e754:	a8800215 	stw	r2,8(r21)
   2e758:	b5800204 	addi	r22,r22,8
   2e75c:	bdc00204 	addi	r23,r23,8
   2e760:	103fdb1e 	bne	r2,zero,2e6d0 <__alt_mem_sdram_controller_0+0xc002e6d0>
   2e764:	0005883a 	mov	r2,zero
   2e768:	003fe806 	br	2e70c <__alt_mem_sdram_controller_0+0xc002e70c>
   2e76c:	002ae280 	call	2ae28 <__sfvwrite_r>
   2e770:	003fe606 	br	2e70c <__alt_mem_sdram_controller_0+0xc002e70c>

0002e774 <__sprint_r>:
   2e774:	30c00217 	ldw	r3,8(r6)
   2e778:	18000126 	beq	r3,zero,2e780 <__sprint_r+0xc>
   2e77c:	002e6781 	jmpi	2e678 <__sprint_r.part.0>
   2e780:	30000115 	stw	zero,4(r6)
   2e784:	0005883a 	mov	r2,zero
   2e788:	f800283a 	ret

0002e78c <___vfiprintf_internal_r>:
   2e78c:	deffc904 	addi	sp,sp,-220
   2e790:	df003515 	stw	fp,212(sp)
   2e794:	dd003115 	stw	r20,196(sp)
   2e798:	dfc03615 	stw	ra,216(sp)
   2e79c:	ddc03415 	stw	r23,208(sp)
   2e7a0:	dd803315 	stw	r22,204(sp)
   2e7a4:	dd403215 	stw	r21,200(sp)
   2e7a8:	dcc03015 	stw	r19,192(sp)
   2e7ac:	dc802f15 	stw	r18,188(sp)
   2e7b0:	dc402e15 	stw	r17,184(sp)
   2e7b4:	dc002d15 	stw	r16,180(sp)
   2e7b8:	d9002015 	stw	r4,128(sp)
   2e7bc:	d9c02215 	stw	r7,136(sp)
   2e7c0:	2829883a 	mov	r20,r5
   2e7c4:	3039883a 	mov	fp,r6
   2e7c8:	20000226 	beq	r4,zero,2e7d4 <___vfiprintf_internal_r+0x48>
   2e7cc:	20800e17 	ldw	r2,56(r4)
   2e7d0:	1000cf26 	beq	r2,zero,2eb10 <___vfiprintf_internal_r+0x384>
   2e7d4:	a080030b 	ldhu	r2,12(r20)
   2e7d8:	10c8000c 	andi	r3,r2,8192
   2e7dc:	1800061e 	bne	r3,zero,2e7f8 <___vfiprintf_internal_r+0x6c>
   2e7e0:	a1001917 	ldw	r4,100(r20)
   2e7e4:	00f7ffc4 	movi	r3,-8193
   2e7e8:	10880014 	ori	r2,r2,8192
   2e7ec:	20c6703a 	and	r3,r4,r3
   2e7f0:	a080030d 	sth	r2,12(r20)
   2e7f4:	a0c01915 	stw	r3,100(r20)
   2e7f8:	10c0020c 	andi	r3,r2,8
   2e7fc:	1800a926 	beq	r3,zero,2eaa4 <___vfiprintf_internal_r+0x318>
   2e800:	a0c00417 	ldw	r3,16(r20)
   2e804:	1800a726 	beq	r3,zero,2eaa4 <___vfiprintf_internal_r+0x318>
   2e808:	1080068c 	andi	r2,r2,26
   2e80c:	00c00284 	movi	r3,10
   2e810:	10c0ac26 	beq	r2,r3,2eac4 <___vfiprintf_internal_r+0x338>
   2e814:	da801a04 	addi	r10,sp,104
   2e818:	da801e15 	stw	r10,120(sp)
   2e81c:	d8801e17 	ldw	r2,120(sp)
   2e820:	da8019c4 	addi	r10,sp,103
   2e824:	058000f4 	movhi	r22,3
   2e828:	05c000f4 	movhi	r23,3
   2e82c:	da801f15 	stw	r10,124(sp)
   2e830:	1295c83a 	sub	r10,r2,r10
   2e834:	b5994004 	addi	r22,r22,25856
   2e838:	bdd93c04 	addi	r23,r23,25840
   2e83c:	dec01a15 	stw	sp,104(sp)
   2e840:	d8001c15 	stw	zero,112(sp)
   2e844:	d8001b15 	stw	zero,108(sp)
   2e848:	d8002615 	stw	zero,152(sp)
   2e84c:	d8002315 	stw	zero,140(sp)
   2e850:	da802715 	stw	r10,156(sp)
   2e854:	d811883a 	mov	r8,sp
   2e858:	dd002115 	stw	r20,132(sp)
   2e85c:	e021883a 	mov	r16,fp
   2e860:	80800007 	ldb	r2,0(r16)
   2e864:	1003ea26 	beq	r2,zero,2f810 <___vfiprintf_internal_r+0x1084>
   2e868:	00c00944 	movi	r3,37
   2e86c:	8025883a 	mov	r18,r16
   2e870:	10c0021e 	bne	r2,r3,2e87c <___vfiprintf_internal_r+0xf0>
   2e874:	00001606 	br	2e8d0 <___vfiprintf_internal_r+0x144>
   2e878:	10c00326 	beq	r2,r3,2e888 <___vfiprintf_internal_r+0xfc>
   2e87c:	94800044 	addi	r18,r18,1
   2e880:	90800007 	ldb	r2,0(r18)
   2e884:	103ffc1e 	bne	r2,zero,2e878 <__alt_mem_sdram_controller_0+0xc002e878>
   2e888:	9423c83a 	sub	r17,r18,r16
   2e88c:	88001026 	beq	r17,zero,2e8d0 <___vfiprintf_internal_r+0x144>
   2e890:	d8c01c17 	ldw	r3,112(sp)
   2e894:	d8801b17 	ldw	r2,108(sp)
   2e898:	44000015 	stw	r16,0(r8)
   2e89c:	88c7883a 	add	r3,r17,r3
   2e8a0:	10800044 	addi	r2,r2,1
   2e8a4:	44400115 	stw	r17,4(r8)
   2e8a8:	d8c01c15 	stw	r3,112(sp)
   2e8ac:	d8801b15 	stw	r2,108(sp)
   2e8b0:	010001c4 	movi	r4,7
   2e8b4:	2080760e 	bge	r4,r2,2ea90 <___vfiprintf_internal_r+0x304>
   2e8b8:	1803821e 	bne	r3,zero,2f6c4 <___vfiprintf_internal_r+0xf38>
   2e8bc:	da802317 	ldw	r10,140(sp)
   2e8c0:	d8001b15 	stw	zero,108(sp)
   2e8c4:	d811883a 	mov	r8,sp
   2e8c8:	5455883a 	add	r10,r10,r17
   2e8cc:	da802315 	stw	r10,140(sp)
   2e8d0:	90800007 	ldb	r2,0(r18)
   2e8d4:	10044626 	beq	r2,zero,2f9f0 <___vfiprintf_internal_r+0x1264>
   2e8d8:	90c00047 	ldb	r3,1(r18)
   2e8dc:	94000044 	addi	r16,r18,1
   2e8e0:	d8001d85 	stb	zero,118(sp)
   2e8e4:	0009883a 	mov	r4,zero
   2e8e8:	000f883a 	mov	r7,zero
   2e8ec:	027fffc4 	movi	r9,-1
   2e8f0:	0023883a 	mov	r17,zero
   2e8f4:	0029883a 	mov	r20,zero
   2e8f8:	01401604 	movi	r5,88
   2e8fc:	01800244 	movi	r6,9
   2e900:	03400a84 	movi	r13,42
   2e904:	03001b04 	movi	r12,108
   2e908:	84000044 	addi	r16,r16,1
   2e90c:	18bff804 	addi	r2,r3,-32
   2e910:	28827336 	bltu	r5,r2,2f2e0 <___vfiprintf_internal_r+0xb54>
   2e914:	100490ba 	slli	r2,r2,2
   2e918:	028000f4 	movhi	r10,3
   2e91c:	52ba4b04 	addi	r10,r10,-5844
   2e920:	1285883a 	add	r2,r2,r10
   2e924:	10800017 	ldw	r2,0(r2)
   2e928:	1000683a 	jmp	r2
   2e92c:	0002f014 	movui	zero,3008
   2e930:	0002f2e0 	cmpeqi	zero,zero,3019
   2e934:	0002f2e0 	cmpeqi	zero,zero,3019
   2e938:	0002f034 	movhi	zero,3008
   2e93c:	0002f2e0 	cmpeqi	zero,zero,3019
   2e940:	0002f2e0 	cmpeqi	zero,zero,3019
   2e944:	0002f2e0 	cmpeqi	zero,zero,3019
   2e948:	0002f2e0 	cmpeqi	zero,zero,3019
   2e94c:	0002f2e0 	cmpeqi	zero,zero,3019
   2e950:	0002f2e0 	cmpeqi	zero,zero,3019
   2e954:	0002f21c 	xori	zero,zero,3016
   2e958:	0002f238 	rdprs	zero,zero,3016
   2e95c:	0002f2e0 	cmpeqi	zero,zero,3019
   2e960:	0002eb20 	cmpeqi	zero,zero,2988
   2e964:	0002f248 	cmpgei	zero,zero,3017
   2e968:	0002f2e0 	cmpeqi	zero,zero,3019
   2e96c:	0002f040 	call	2f04 <__alt_mem_onchip_memory2_0-0x1d0fc>
   2e970:	0002f04c 	andi	zero,zero,3009
   2e974:	0002f04c 	andi	zero,zero,3009
   2e978:	0002f04c 	andi	zero,zero,3009
   2e97c:	0002f04c 	andi	zero,zero,3009
   2e980:	0002f04c 	andi	zero,zero,3009
   2e984:	0002f04c 	andi	zero,zero,3009
   2e988:	0002f04c 	andi	zero,zero,3009
   2e98c:	0002f04c 	andi	zero,zero,3009
   2e990:	0002f04c 	andi	zero,zero,3009
   2e994:	0002f2e0 	cmpeqi	zero,zero,3019
   2e998:	0002f2e0 	cmpeqi	zero,zero,3019
   2e99c:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9a0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9a4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9a8:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9ac:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9b0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9b4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9b8:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9bc:	0002f078 	rdprs	zero,zero,3009
   2e9c0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9c4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9c8:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9cc:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9d0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9d4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9d8:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9dc:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9e0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9e4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9e8:	0002f0b0 	cmpltui	zero,zero,3010
   2e9ec:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9f0:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9f4:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9f8:	0002f2e0 	cmpeqi	zero,zero,3019
   2e9fc:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea00:	0002f108 	cmpgei	zero,zero,3012
   2ea04:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea08:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea0c:	0002f178 	rdprs	zero,zero,3013
   2ea10:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea14:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea18:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea1c:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea20:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea24:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea28:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea2c:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea30:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea34:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea38:	0002ef24 	muli	zero,zero,3004
   2ea3c:	0002ef50 	cmplti	zero,zero,3005
   2ea40:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea44:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea48:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea4c:	0002f288 	cmpgei	zero,zero,3018
   2ea50:	0002ef50 	cmplti	zero,zero,3005
   2ea54:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea58:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea5c:	0002ede4 	muli	zero,zero,2999
   2ea60:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea64:	0002edf4 	movhi	zero,2999
   2ea68:	0002ee30 	cmpltui	zero,zero,3000
   2ea6c:	0002eb2c 	andhi	zero,zero,2988
   2ea70:	0002edd8 	cmpnei	zero,zero,2999
   2ea74:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea78:	0002f1b4 	movhi	zero,3014
   2ea7c:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea80:	0002f20c 	andi	zero,zero,3016
   2ea84:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea88:	0002f2e0 	cmpeqi	zero,zero,3019
   2ea8c:	0002eed0 	cmplti	zero,zero,3003
   2ea90:	42000204 	addi	r8,r8,8
   2ea94:	da802317 	ldw	r10,140(sp)
   2ea98:	5455883a 	add	r10,r10,r17
   2ea9c:	da802315 	stw	r10,140(sp)
   2eaa0:	003f8b06 	br	2e8d0 <__alt_mem_sdram_controller_0+0xc002e8d0>
   2eaa4:	d9002017 	ldw	r4,128(sp)
   2eaa8:	a00b883a 	mov	r5,r20
   2eaac:	00293340 	call	29334 <__swsetup_r>
   2eab0:	1003b11e 	bne	r2,zero,2f978 <___vfiprintf_internal_r+0x11ec>
   2eab4:	a080030b 	ldhu	r2,12(r20)
   2eab8:	00c00284 	movi	r3,10
   2eabc:	1080068c 	andi	r2,r2,26
   2eac0:	10ff541e 	bne	r2,r3,2e814 <__alt_mem_sdram_controller_0+0xc002e814>
   2eac4:	a080038f 	ldh	r2,14(r20)
   2eac8:	103f5216 	blt	r2,zero,2e814 <__alt_mem_sdram_controller_0+0xc002e814>
   2eacc:	d9c02217 	ldw	r7,136(sp)
   2ead0:	d9002017 	ldw	r4,128(sp)
   2ead4:	e00d883a 	mov	r6,fp
   2ead8:	a00b883a 	mov	r5,r20
   2eadc:	002fc040 	call	2fc04 <__sbprintf>
   2eae0:	dfc03617 	ldw	ra,216(sp)
   2eae4:	df003517 	ldw	fp,212(sp)
   2eae8:	ddc03417 	ldw	r23,208(sp)
   2eaec:	dd803317 	ldw	r22,204(sp)
   2eaf0:	dd403217 	ldw	r21,200(sp)
   2eaf4:	dd003117 	ldw	r20,196(sp)
   2eaf8:	dcc03017 	ldw	r19,192(sp)
   2eafc:	dc802f17 	ldw	r18,188(sp)
   2eb00:	dc402e17 	ldw	r17,184(sp)
   2eb04:	dc002d17 	ldw	r16,180(sp)
   2eb08:	dec03704 	addi	sp,sp,220
   2eb0c:	f800283a 	ret
   2eb10:	0022e400 	call	22e40 <__sinit>
   2eb14:	003f2f06 	br	2e7d4 <__alt_mem_sdram_controller_0+0xc002e7d4>
   2eb18:	0463c83a 	sub	r17,zero,r17
   2eb1c:	d8802215 	stw	r2,136(sp)
   2eb20:	a5000114 	ori	r20,r20,4
   2eb24:	80c00007 	ldb	r3,0(r16)
   2eb28:	003f7706 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2eb2c:	00800c04 	movi	r2,48
   2eb30:	da802217 	ldw	r10,136(sp)
   2eb34:	d8801d05 	stb	r2,116(sp)
   2eb38:	00801e04 	movi	r2,120
   2eb3c:	d8801d45 	stb	r2,117(sp)
   2eb40:	d8001d85 	stb	zero,118(sp)
   2eb44:	50c00104 	addi	r3,r10,4
   2eb48:	54800017 	ldw	r18,0(r10)
   2eb4c:	0027883a 	mov	r19,zero
   2eb50:	a0800094 	ori	r2,r20,2
   2eb54:	48030b16 	blt	r9,zero,2f784 <___vfiprintf_internal_r+0xff8>
   2eb58:	00bfdfc4 	movi	r2,-129
   2eb5c:	a096703a 	and	r11,r20,r2
   2eb60:	d8c02215 	stw	r3,136(sp)
   2eb64:	5d000094 	ori	r20,r11,2
   2eb68:	90032b1e 	bne	r18,zero,2f818 <___vfiprintf_internal_r+0x108c>
   2eb6c:	008000f4 	movhi	r2,3
   2eb70:	1098cc04 	addi	r2,r2,25392
   2eb74:	d8802615 	stw	r2,152(sp)
   2eb78:	0039883a 	mov	fp,zero
   2eb7c:	48017b1e 	bne	r9,zero,2f16c <___vfiprintf_internal_r+0x9e0>
   2eb80:	0013883a 	mov	r9,zero
   2eb84:	0027883a 	mov	r19,zero
   2eb88:	dd401a04 	addi	r21,sp,104
   2eb8c:	4825883a 	mov	r18,r9
   2eb90:	4cc0010e 	bge	r9,r19,2eb98 <___vfiprintf_internal_r+0x40c>
   2eb94:	9825883a 	mov	r18,r19
   2eb98:	e7003fcc 	andi	fp,fp,255
   2eb9c:	e700201c 	xori	fp,fp,128
   2eba0:	e73fe004 	addi	fp,fp,-128
   2eba4:	e0000126 	beq	fp,zero,2ebac <___vfiprintf_internal_r+0x420>
   2eba8:	94800044 	addi	r18,r18,1
   2ebac:	a380008c 	andi	r14,r20,2
   2ebb0:	70000126 	beq	r14,zero,2ebb8 <___vfiprintf_internal_r+0x42c>
   2ebb4:	94800084 	addi	r18,r18,2
   2ebb8:	a700210c 	andi	fp,r20,132
   2ebbc:	e001df1e 	bne	fp,zero,2f33c <___vfiprintf_internal_r+0xbb0>
   2ebc0:	8c87c83a 	sub	r3,r17,r18
   2ebc4:	00c1dd0e 	bge	zero,r3,2f33c <___vfiprintf_internal_r+0xbb0>
   2ebc8:	01c00404 	movi	r7,16
   2ebcc:	d8801c17 	ldw	r2,112(sp)
   2ebd0:	38c3ad0e 	bge	r7,r3,2fa88 <___vfiprintf_internal_r+0x12fc>
   2ebd4:	028000f4 	movhi	r10,3
   2ebd8:	52994004 	addi	r10,r10,25856
   2ebdc:	dc002915 	stw	r16,164(sp)
   2ebe0:	d9801b17 	ldw	r6,108(sp)
   2ebe4:	da802415 	stw	r10,144(sp)
   2ebe8:	03c001c4 	movi	r15,7
   2ebec:	da402515 	stw	r9,148(sp)
   2ebf0:	db802815 	stw	r14,160(sp)
   2ebf4:	1821883a 	mov	r16,r3
   2ebf8:	00000506 	br	2ec10 <___vfiprintf_internal_r+0x484>
   2ebfc:	31400084 	addi	r5,r6,2
   2ec00:	42000204 	addi	r8,r8,8
   2ec04:	200d883a 	mov	r6,r4
   2ec08:	843ffc04 	addi	r16,r16,-16
   2ec0c:	3c000d0e 	bge	r7,r16,2ec44 <___vfiprintf_internal_r+0x4b8>
   2ec10:	10800404 	addi	r2,r2,16
   2ec14:	31000044 	addi	r4,r6,1
   2ec18:	45800015 	stw	r22,0(r8)
   2ec1c:	41c00115 	stw	r7,4(r8)
   2ec20:	d8801c15 	stw	r2,112(sp)
   2ec24:	d9001b15 	stw	r4,108(sp)
   2ec28:	793ff40e 	bge	r15,r4,2ebfc <__alt_mem_sdram_controller_0+0xc002ebfc>
   2ec2c:	1001b51e 	bne	r2,zero,2f304 <___vfiprintf_internal_r+0xb78>
   2ec30:	843ffc04 	addi	r16,r16,-16
   2ec34:	000d883a 	mov	r6,zero
   2ec38:	01400044 	movi	r5,1
   2ec3c:	d811883a 	mov	r8,sp
   2ec40:	3c3ff316 	blt	r7,r16,2ec10 <__alt_mem_sdram_controller_0+0xc002ec10>
   2ec44:	8007883a 	mov	r3,r16
   2ec48:	da402517 	ldw	r9,148(sp)
   2ec4c:	db802817 	ldw	r14,160(sp)
   2ec50:	dc002917 	ldw	r16,164(sp)
   2ec54:	da802417 	ldw	r10,144(sp)
   2ec58:	1885883a 	add	r2,r3,r2
   2ec5c:	40c00115 	stw	r3,4(r8)
   2ec60:	42800015 	stw	r10,0(r8)
   2ec64:	d8801c15 	stw	r2,112(sp)
   2ec68:	d9401b15 	stw	r5,108(sp)
   2ec6c:	00c001c4 	movi	r3,7
   2ec70:	19426016 	blt	r3,r5,2f5f4 <___vfiprintf_internal_r+0xe68>
   2ec74:	d8c01d87 	ldb	r3,118(sp)
   2ec78:	42000204 	addi	r8,r8,8
   2ec7c:	29000044 	addi	r4,r5,1
   2ec80:	1801b31e 	bne	r3,zero,2f350 <___vfiprintf_internal_r+0xbc4>
   2ec84:	7001c026 	beq	r14,zero,2f388 <___vfiprintf_internal_r+0xbfc>
   2ec88:	d8c01d04 	addi	r3,sp,116
   2ec8c:	10800084 	addi	r2,r2,2
   2ec90:	40c00015 	stw	r3,0(r8)
   2ec94:	00c00084 	movi	r3,2
   2ec98:	40c00115 	stw	r3,4(r8)
   2ec9c:	d8801c15 	stw	r2,112(sp)
   2eca0:	d9001b15 	stw	r4,108(sp)
   2eca4:	00c001c4 	movi	r3,7
   2eca8:	1902650e 	bge	r3,r4,2f640 <___vfiprintf_internal_r+0xeb4>
   2ecac:	10029a1e 	bne	r2,zero,2f718 <___vfiprintf_internal_r+0xf8c>
   2ecb0:	00c02004 	movi	r3,128
   2ecb4:	01000044 	movi	r4,1
   2ecb8:	000b883a 	mov	r5,zero
   2ecbc:	d811883a 	mov	r8,sp
   2ecc0:	e0c1b31e 	bne	fp,r3,2f390 <___vfiprintf_internal_r+0xc04>
   2ecc4:	8cb9c83a 	sub	fp,r17,r18
   2ecc8:	0701b10e 	bge	zero,fp,2f390 <___vfiprintf_internal_r+0xc04>
   2eccc:	01c00404 	movi	r7,16
   2ecd0:	3f03890e 	bge	r7,fp,2faf8 <___vfiprintf_internal_r+0x136c>
   2ecd4:	00c000f4 	movhi	r3,3
   2ecd8:	18d93c04 	addi	r3,r3,25840
   2ecdc:	d8c02415 	stw	r3,144(sp)
   2ece0:	8007883a 	mov	r3,r16
   2ece4:	034001c4 	movi	r13,7
   2ece8:	e021883a 	mov	r16,fp
   2ecec:	da402515 	stw	r9,148(sp)
   2ecf0:	1839883a 	mov	fp,r3
   2ecf4:	00000506 	br	2ed0c <___vfiprintf_internal_r+0x580>
   2ecf8:	29800084 	addi	r6,r5,2
   2ecfc:	42000204 	addi	r8,r8,8
   2ed00:	180b883a 	mov	r5,r3
   2ed04:	843ffc04 	addi	r16,r16,-16
   2ed08:	3c000d0e 	bge	r7,r16,2ed40 <___vfiprintf_internal_r+0x5b4>
   2ed0c:	10800404 	addi	r2,r2,16
   2ed10:	28c00044 	addi	r3,r5,1
   2ed14:	45c00015 	stw	r23,0(r8)
   2ed18:	41c00115 	stw	r7,4(r8)
   2ed1c:	d8801c15 	stw	r2,112(sp)
   2ed20:	d8c01b15 	stw	r3,108(sp)
   2ed24:	68fff40e 	bge	r13,r3,2ecf8 <__alt_mem_sdram_controller_0+0xc002ecf8>
   2ed28:	1002241e 	bne	r2,zero,2f5bc <___vfiprintf_internal_r+0xe30>
   2ed2c:	843ffc04 	addi	r16,r16,-16
   2ed30:	01800044 	movi	r6,1
   2ed34:	000b883a 	mov	r5,zero
   2ed38:	d811883a 	mov	r8,sp
   2ed3c:	3c3ff316 	blt	r7,r16,2ed0c <__alt_mem_sdram_controller_0+0xc002ed0c>
   2ed40:	da402517 	ldw	r9,148(sp)
   2ed44:	e007883a 	mov	r3,fp
   2ed48:	8039883a 	mov	fp,r16
   2ed4c:	1821883a 	mov	r16,r3
   2ed50:	d8c02417 	ldw	r3,144(sp)
   2ed54:	1705883a 	add	r2,r2,fp
   2ed58:	47000115 	stw	fp,4(r8)
   2ed5c:	40c00015 	stw	r3,0(r8)
   2ed60:	d8801c15 	stw	r2,112(sp)
   2ed64:	d9801b15 	stw	r6,108(sp)
   2ed68:	00c001c4 	movi	r3,7
   2ed6c:	19827616 	blt	r3,r6,2f748 <___vfiprintf_internal_r+0xfbc>
   2ed70:	4cf9c83a 	sub	fp,r9,r19
   2ed74:	42000204 	addi	r8,r8,8
   2ed78:	31000044 	addi	r4,r6,1
   2ed7c:	300b883a 	mov	r5,r6
   2ed80:	07018516 	blt	zero,fp,2f398 <___vfiprintf_internal_r+0xc0c>
   2ed84:	9885883a 	add	r2,r19,r2
   2ed88:	45400015 	stw	r21,0(r8)
   2ed8c:	44c00115 	stw	r19,4(r8)
   2ed90:	d8801c15 	stw	r2,112(sp)
   2ed94:	d9001b15 	stw	r4,108(sp)
   2ed98:	00c001c4 	movi	r3,7
   2ed9c:	1901dd0e 	bge	r3,r4,2f514 <___vfiprintf_internal_r+0xd88>
   2eda0:	1002401e 	bne	r2,zero,2f6a4 <___vfiprintf_internal_r+0xf18>
   2eda4:	d8001b15 	stw	zero,108(sp)
   2eda8:	a2c0010c 	andi	r11,r20,4
   2edac:	58000226 	beq	r11,zero,2edb8 <___vfiprintf_internal_r+0x62c>
   2edb0:	8ca7c83a 	sub	r19,r17,r18
   2edb4:	04c2f216 	blt	zero,r19,2f980 <___vfiprintf_internal_r+0x11f4>
   2edb8:	8c80010e 	bge	r17,r18,2edc0 <___vfiprintf_internal_r+0x634>
   2edbc:	9023883a 	mov	r17,r18
   2edc0:	da802317 	ldw	r10,140(sp)
   2edc4:	5455883a 	add	r10,r10,r17
   2edc8:	da802315 	stw	r10,140(sp)
   2edcc:	d8001b15 	stw	zero,108(sp)
   2edd0:	d811883a 	mov	r8,sp
   2edd4:	003ea206 	br	2e860 <__alt_mem_sdram_controller_0+0xc002e860>
   2edd8:	a5000814 	ori	r20,r20,32
   2eddc:	80c00007 	ldb	r3,0(r16)
   2ede0:	003ec906 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2ede4:	80c00007 	ldb	r3,0(r16)
   2ede8:	1b030926 	beq	r3,r12,2fa10 <___vfiprintf_internal_r+0x1284>
   2edec:	a5000414 	ori	r20,r20,16
   2edf0:	003ec506 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2edf4:	21003fcc 	andi	r4,r4,255
   2edf8:	20035e1e 	bne	r4,zero,2fb74 <___vfiprintf_internal_r+0x13e8>
   2edfc:	a080080c 	andi	r2,r20,32
   2ee00:	1002a526 	beq	r2,zero,2f898 <___vfiprintf_internal_r+0x110c>
   2ee04:	da802217 	ldw	r10,136(sp)
   2ee08:	50800017 	ldw	r2,0(r10)
   2ee0c:	da802317 	ldw	r10,140(sp)
   2ee10:	5007d7fa 	srai	r3,r10,31
   2ee14:	da802217 	ldw	r10,136(sp)
   2ee18:	10c00115 	stw	r3,4(r2)
   2ee1c:	52800104 	addi	r10,r10,4
   2ee20:	da802215 	stw	r10,136(sp)
   2ee24:	da802317 	ldw	r10,140(sp)
   2ee28:	12800015 	stw	r10,0(r2)
   2ee2c:	003e8c06 	br	2e860 <__alt_mem_sdram_controller_0+0xc002e860>
   2ee30:	21003fcc 	andi	r4,r4,255
   2ee34:	2003511e 	bne	r4,zero,2fb7c <___vfiprintf_internal_r+0x13f0>
   2ee38:	a080080c 	andi	r2,r20,32
   2ee3c:	1000a126 	beq	r2,zero,2f0c4 <___vfiprintf_internal_r+0x938>
   2ee40:	da802217 	ldw	r10,136(sp)
   2ee44:	d8001d85 	stb	zero,118(sp)
   2ee48:	50800204 	addi	r2,r10,8
   2ee4c:	54800017 	ldw	r18,0(r10)
   2ee50:	54c00117 	ldw	r19,4(r10)
   2ee54:	4802b416 	blt	r9,zero,2f928 <___vfiprintf_internal_r+0x119c>
   2ee58:	013fdfc4 	movi	r4,-129
   2ee5c:	94c6b03a 	or	r3,r18,r19
   2ee60:	d8802215 	stw	r2,136(sp)
   2ee64:	a128703a 	and	r20,r20,r4
   2ee68:	1800a226 	beq	r3,zero,2f0f4 <___vfiprintf_internal_r+0x968>
   2ee6c:	0039883a 	mov	fp,zero
   2ee70:	dd401a04 	addi	r21,sp,104
   2ee74:	9006d0fa 	srli	r3,r18,3
   2ee78:	9808977a 	slli	r4,r19,29
   2ee7c:	9826d0fa 	srli	r19,r19,3
   2ee80:	948001cc 	andi	r18,r18,7
   2ee84:	90800c04 	addi	r2,r18,48
   2ee88:	ad7fffc4 	addi	r21,r21,-1
   2ee8c:	20e4b03a 	or	r18,r4,r3
   2ee90:	a8800005 	stb	r2,0(r21)
   2ee94:	94c6b03a 	or	r3,r18,r19
   2ee98:	183ff61e 	bne	r3,zero,2ee74 <__alt_mem_sdram_controller_0+0xc002ee74>
   2ee9c:	a0c0004c 	andi	r3,r20,1
   2eea0:	18005926 	beq	r3,zero,2f008 <___vfiprintf_internal_r+0x87c>
   2eea4:	10803fcc 	andi	r2,r2,255
   2eea8:	1080201c 	xori	r2,r2,128
   2eeac:	10bfe004 	addi	r2,r2,-128
   2eeb0:	00c00c04 	movi	r3,48
   2eeb4:	10c05426 	beq	r2,r3,2f008 <___vfiprintf_internal_r+0x87c>
   2eeb8:	da801e17 	ldw	r10,120(sp)
   2eebc:	a8bfffc4 	addi	r2,r21,-1
   2eec0:	a8ffffc5 	stb	r3,-1(r21)
   2eec4:	50a7c83a 	sub	r19,r10,r2
   2eec8:	102b883a 	mov	r21,r2
   2eecc:	003f2f06 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2eed0:	21003fcc 	andi	r4,r4,255
   2eed4:	2003421e 	bne	r4,zero,2fbe0 <___vfiprintf_internal_r+0x1454>
   2eed8:	008000f4 	movhi	r2,3
   2eedc:	1098cc04 	addi	r2,r2,25392
   2eee0:	d8802615 	stw	r2,152(sp)
   2eee4:	a080080c 	andi	r2,r20,32
   2eee8:	1000aa26 	beq	r2,zero,2f194 <___vfiprintf_internal_r+0xa08>
   2eeec:	da802217 	ldw	r10,136(sp)
   2eef0:	54800017 	ldw	r18,0(r10)
   2eef4:	54c00117 	ldw	r19,4(r10)
   2eef8:	52800204 	addi	r10,r10,8
   2eefc:	da802215 	stw	r10,136(sp)
   2ef00:	a080004c 	andi	r2,r20,1
   2ef04:	1001d226 	beq	r2,zero,2f650 <___vfiprintf_internal_r+0xec4>
   2ef08:	94c4b03a 	or	r2,r18,r19
   2ef0c:	1002351e 	bne	r2,zero,2f7e4 <___vfiprintf_internal_r+0x1058>
   2ef10:	d8001d85 	stb	zero,118(sp)
   2ef14:	48022216 	blt	r9,zero,2f7a0 <___vfiprintf_internal_r+0x1014>
   2ef18:	00bfdfc4 	movi	r2,-129
   2ef1c:	a0a8703a 	and	r20,r20,r2
   2ef20:	003f1506 	br	2eb78 <__alt_mem_sdram_controller_0+0xc002eb78>
   2ef24:	da802217 	ldw	r10,136(sp)
   2ef28:	04800044 	movi	r18,1
   2ef2c:	d8001d85 	stb	zero,118(sp)
   2ef30:	50800017 	ldw	r2,0(r10)
   2ef34:	52800104 	addi	r10,r10,4
   2ef38:	da802215 	stw	r10,136(sp)
   2ef3c:	d8801005 	stb	r2,64(sp)
   2ef40:	9027883a 	mov	r19,r18
   2ef44:	dd401004 	addi	r21,sp,64
   2ef48:	0013883a 	mov	r9,zero
   2ef4c:	003f1706 	br	2ebac <__alt_mem_sdram_controller_0+0xc002ebac>
   2ef50:	21003fcc 	andi	r4,r4,255
   2ef54:	2003201e 	bne	r4,zero,2fbd8 <___vfiprintf_internal_r+0x144c>
   2ef58:	a080080c 	andi	r2,r20,32
   2ef5c:	10004b26 	beq	r2,zero,2f08c <___vfiprintf_internal_r+0x900>
   2ef60:	da802217 	ldw	r10,136(sp)
   2ef64:	50800117 	ldw	r2,4(r10)
   2ef68:	54800017 	ldw	r18,0(r10)
   2ef6c:	52800204 	addi	r10,r10,8
   2ef70:	da802215 	stw	r10,136(sp)
   2ef74:	1027883a 	mov	r19,r2
   2ef78:	10022c16 	blt	r2,zero,2f82c <___vfiprintf_internal_r+0x10a0>
   2ef7c:	df001d83 	ldbu	fp,118(sp)
   2ef80:	48007216 	blt	r9,zero,2f14c <___vfiprintf_internal_r+0x9c0>
   2ef84:	00ffdfc4 	movi	r3,-129
   2ef88:	94c4b03a 	or	r2,r18,r19
   2ef8c:	a0e8703a 	and	r20,r20,r3
   2ef90:	1000cc26 	beq	r2,zero,2f2c4 <___vfiprintf_internal_r+0xb38>
   2ef94:	98021026 	beq	r19,zero,2f7d8 <___vfiprintf_internal_r+0x104c>
   2ef98:	dc402415 	stw	r17,144(sp)
   2ef9c:	dc002515 	stw	r16,148(sp)
   2efa0:	9823883a 	mov	r17,r19
   2efa4:	9021883a 	mov	r16,r18
   2efa8:	dd401a04 	addi	r21,sp,104
   2efac:	4825883a 	mov	r18,r9
   2efb0:	4027883a 	mov	r19,r8
   2efb4:	8009883a 	mov	r4,r16
   2efb8:	880b883a 	mov	r5,r17
   2efbc:	01800284 	movi	r6,10
   2efc0:	000f883a 	mov	r7,zero
   2efc4:	00308a40 	call	308a4 <__umoddi3>
   2efc8:	10800c04 	addi	r2,r2,48
   2efcc:	ad7fffc4 	addi	r21,r21,-1
   2efd0:	8009883a 	mov	r4,r16
   2efd4:	880b883a 	mov	r5,r17
   2efd8:	a8800005 	stb	r2,0(r21)
   2efdc:	01800284 	movi	r6,10
   2efe0:	000f883a 	mov	r7,zero
   2efe4:	003032c0 	call	3032c <__udivdi3>
   2efe8:	1021883a 	mov	r16,r2
   2efec:	10c4b03a 	or	r2,r2,r3
   2eff0:	1823883a 	mov	r17,r3
   2eff4:	103fef1e 	bne	r2,zero,2efb4 <__alt_mem_sdram_controller_0+0xc002efb4>
   2eff8:	dc402417 	ldw	r17,144(sp)
   2effc:	dc002517 	ldw	r16,148(sp)
   2f000:	9013883a 	mov	r9,r18
   2f004:	9811883a 	mov	r8,r19
   2f008:	da801e17 	ldw	r10,120(sp)
   2f00c:	5567c83a 	sub	r19,r10,r21
   2f010:	003ede06 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2f014:	38803fcc 	andi	r2,r7,255
   2f018:	1080201c 	xori	r2,r2,128
   2f01c:	10bfe004 	addi	r2,r2,-128
   2f020:	1002371e 	bne	r2,zero,2f900 <___vfiprintf_internal_r+0x1174>
   2f024:	01000044 	movi	r4,1
   2f028:	01c00804 	movi	r7,32
   2f02c:	80c00007 	ldb	r3,0(r16)
   2f030:	003e3506 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f034:	a5000054 	ori	r20,r20,1
   2f038:	80c00007 	ldb	r3,0(r16)
   2f03c:	003e3206 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f040:	a5002014 	ori	r20,r20,128
   2f044:	80c00007 	ldb	r3,0(r16)
   2f048:	003e2f06 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f04c:	8015883a 	mov	r10,r16
   2f050:	0023883a 	mov	r17,zero
   2f054:	18bff404 	addi	r2,r3,-48
   2f058:	50c00007 	ldb	r3,0(r10)
   2f05c:	8c4002a4 	muli	r17,r17,10
   2f060:	84000044 	addi	r16,r16,1
   2f064:	8015883a 	mov	r10,r16
   2f068:	1463883a 	add	r17,r2,r17
   2f06c:	18bff404 	addi	r2,r3,-48
   2f070:	30bff92e 	bgeu	r6,r2,2f058 <__alt_mem_sdram_controller_0+0xc002f058>
   2f074:	003e2506 	br	2e90c <__alt_mem_sdram_controller_0+0xc002e90c>
   2f078:	21003fcc 	andi	r4,r4,255
   2f07c:	2002d41e 	bne	r4,zero,2fbd0 <___vfiprintf_internal_r+0x1444>
   2f080:	a5000414 	ori	r20,r20,16
   2f084:	a080080c 	andi	r2,r20,32
   2f088:	103fb51e 	bne	r2,zero,2ef60 <__alt_mem_sdram_controller_0+0xc002ef60>
   2f08c:	a080040c 	andi	r2,r20,16
   2f090:	1001f826 	beq	r2,zero,2f874 <___vfiprintf_internal_r+0x10e8>
   2f094:	da802217 	ldw	r10,136(sp)
   2f098:	54800017 	ldw	r18,0(r10)
   2f09c:	52800104 	addi	r10,r10,4
   2f0a0:	da802215 	stw	r10,136(sp)
   2f0a4:	9027d7fa 	srai	r19,r18,31
   2f0a8:	9805883a 	mov	r2,r19
   2f0ac:	003fb206 	br	2ef78 <__alt_mem_sdram_controller_0+0xc002ef78>
   2f0b0:	21003fcc 	andi	r4,r4,255
   2f0b4:	2002c41e 	bne	r4,zero,2fbc8 <___vfiprintf_internal_r+0x143c>
   2f0b8:	a5000414 	ori	r20,r20,16
   2f0bc:	a080080c 	andi	r2,r20,32
   2f0c0:	103f5f1e 	bne	r2,zero,2ee40 <__alt_mem_sdram_controller_0+0xc002ee40>
   2f0c4:	a080040c 	andi	r2,r20,16
   2f0c8:	10020f26 	beq	r2,zero,2f908 <___vfiprintf_internal_r+0x117c>
   2f0cc:	da802217 	ldw	r10,136(sp)
   2f0d0:	d8001d85 	stb	zero,118(sp)
   2f0d4:	0027883a 	mov	r19,zero
   2f0d8:	50800104 	addi	r2,r10,4
   2f0dc:	54800017 	ldw	r18,0(r10)
   2f0e0:	48021116 	blt	r9,zero,2f928 <___vfiprintf_internal_r+0x119c>
   2f0e4:	00ffdfc4 	movi	r3,-129
   2f0e8:	d8802215 	stw	r2,136(sp)
   2f0ec:	a0e8703a 	and	r20,r20,r3
   2f0f0:	903f5e1e 	bne	r18,zero,2ee6c <__alt_mem_sdram_controller_0+0xc002ee6c>
   2f0f4:	0039883a 	mov	fp,zero
   2f0f8:	4802a626 	beq	r9,zero,2fb94 <___vfiprintf_internal_r+0x1408>
   2f0fc:	0025883a 	mov	r18,zero
   2f100:	0027883a 	mov	r19,zero
   2f104:	003f5a06 	br	2ee70 <__alt_mem_sdram_controller_0+0xc002ee70>
   2f108:	21003fcc 	andi	r4,r4,255
   2f10c:	20029f1e 	bne	r4,zero,2fb8c <___vfiprintf_internal_r+0x1400>
   2f110:	a5000414 	ori	r20,r20,16
   2f114:	a080080c 	andi	r2,r20,32
   2f118:	10005e1e 	bne	r2,zero,2f294 <___vfiprintf_internal_r+0xb08>
   2f11c:	a080040c 	andi	r2,r20,16
   2f120:	1001a21e 	bne	r2,zero,2f7ac <___vfiprintf_internal_r+0x1020>
   2f124:	a080100c 	andi	r2,r20,64
   2f128:	d8001d85 	stb	zero,118(sp)
   2f12c:	da802217 	ldw	r10,136(sp)
   2f130:	1002231e 	bne	r2,zero,2f9c0 <___vfiprintf_internal_r+0x1234>
   2f134:	50800104 	addi	r2,r10,4
   2f138:	54800017 	ldw	r18,0(r10)
   2f13c:	0027883a 	mov	r19,zero
   2f140:	4801a00e 	bge	r9,zero,2f7c4 <___vfiprintf_internal_r+0x1038>
   2f144:	d8802215 	stw	r2,136(sp)
   2f148:	0039883a 	mov	fp,zero
   2f14c:	94c4b03a 	or	r2,r18,r19
   2f150:	103f901e 	bne	r2,zero,2ef94 <__alt_mem_sdram_controller_0+0xc002ef94>
   2f154:	00800044 	movi	r2,1
   2f158:	10803fcc 	andi	r2,r2,255
   2f15c:	00c00044 	movi	r3,1
   2f160:	10c05926 	beq	r2,r3,2f2c8 <___vfiprintf_internal_r+0xb3c>
   2f164:	00c00084 	movi	r3,2
   2f168:	10ffe41e 	bne	r2,r3,2f0fc <__alt_mem_sdram_controller_0+0xc002f0fc>
   2f16c:	0025883a 	mov	r18,zero
   2f170:	0027883a 	mov	r19,zero
   2f174:	00013d06 	br	2f66c <___vfiprintf_internal_r+0xee0>
   2f178:	21003fcc 	andi	r4,r4,255
   2f17c:	2002811e 	bne	r4,zero,2fb84 <___vfiprintf_internal_r+0x13f8>
   2f180:	008000f4 	movhi	r2,3
   2f184:	1098c704 	addi	r2,r2,25372
   2f188:	d8802615 	stw	r2,152(sp)
   2f18c:	a080080c 	andi	r2,r20,32
   2f190:	103f561e 	bne	r2,zero,2eeec <__alt_mem_sdram_controller_0+0xc002eeec>
   2f194:	a080040c 	andi	r2,r20,16
   2f198:	1001d126 	beq	r2,zero,2f8e0 <___vfiprintf_internal_r+0x1154>
   2f19c:	da802217 	ldw	r10,136(sp)
   2f1a0:	0027883a 	mov	r19,zero
   2f1a4:	54800017 	ldw	r18,0(r10)
   2f1a8:	52800104 	addi	r10,r10,4
   2f1ac:	da802215 	stw	r10,136(sp)
   2f1b0:	003f5306 	br	2ef00 <__alt_mem_sdram_controller_0+0xc002ef00>
   2f1b4:	da802217 	ldw	r10,136(sp)
   2f1b8:	d8001d85 	stb	zero,118(sp)
   2f1bc:	55400017 	ldw	r21,0(r10)
   2f1c0:	50c00104 	addi	r3,r10,4
   2f1c4:	a8024226 	beq	r21,zero,2fad0 <___vfiprintf_internal_r+0x1344>
   2f1c8:	48021816 	blt	r9,zero,2fa2c <___vfiprintf_internal_r+0x12a0>
   2f1cc:	480d883a 	mov	r6,r9
   2f1d0:	000b883a 	mov	r5,zero
   2f1d4:	a809883a 	mov	r4,r21
   2f1d8:	d8c02a15 	stw	r3,168(sp)
   2f1dc:	da002b15 	stw	r8,172(sp)
   2f1e0:	da402c15 	stw	r9,176(sp)
   2f1e4:	002b4d00 	call	2b4d0 <memchr>
   2f1e8:	d8c02a17 	ldw	r3,168(sp)
   2f1ec:	da002b17 	ldw	r8,172(sp)
   2f1f0:	da402c17 	ldw	r9,176(sp)
   2f1f4:	10024826 	beq	r2,zero,2fb18 <___vfiprintf_internal_r+0x138c>
   2f1f8:	1567c83a 	sub	r19,r2,r21
   2f1fc:	df001d83 	ldbu	fp,118(sp)
   2f200:	d8c02215 	stw	r3,136(sp)
   2f204:	0013883a 	mov	r9,zero
   2f208:	003e6006 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2f20c:	21003fcc 	andi	r4,r4,255
   2f210:	203fc026 	beq	r4,zero,2f114 <__alt_mem_sdram_controller_0+0xc002f114>
   2f214:	d9c01d85 	stb	r7,118(sp)
   2f218:	003fbe06 	br	2f114 <__alt_mem_sdram_controller_0+0xc002f114>
   2f21c:	da802217 	ldw	r10,136(sp)
   2f220:	54400017 	ldw	r17,0(r10)
   2f224:	50800104 	addi	r2,r10,4
   2f228:	883e3b16 	blt	r17,zero,2eb18 <__alt_mem_sdram_controller_0+0xc002eb18>
   2f22c:	d8802215 	stw	r2,136(sp)
   2f230:	80c00007 	ldb	r3,0(r16)
   2f234:	003db406 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f238:	01000044 	movi	r4,1
   2f23c:	01c00ac4 	movi	r7,43
   2f240:	80c00007 	ldb	r3,0(r16)
   2f244:	003db006 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f248:	80c00007 	ldb	r3,0(r16)
   2f24c:	82800044 	addi	r10,r16,1
   2f250:	1b423c26 	beq	r3,r13,2fb44 <___vfiprintf_internal_r+0x13b8>
   2f254:	18bff404 	addi	r2,r3,-48
   2f258:	0013883a 	mov	r9,zero
   2f25c:	30822b36 	bltu	r6,r2,2fb0c <___vfiprintf_internal_r+0x1380>
   2f260:	50c00007 	ldb	r3,0(r10)
   2f264:	4a4002a4 	muli	r9,r9,10
   2f268:	54000044 	addi	r16,r10,1
   2f26c:	8015883a 	mov	r10,r16
   2f270:	4893883a 	add	r9,r9,r2
   2f274:	18bff404 	addi	r2,r3,-48
   2f278:	30bff92e 	bgeu	r6,r2,2f260 <__alt_mem_sdram_controller_0+0xc002f260>
   2f27c:	483da30e 	bge	r9,zero,2e90c <__alt_mem_sdram_controller_0+0xc002e90c>
   2f280:	027fffc4 	movi	r9,-1
   2f284:	003da106 	br	2e90c <__alt_mem_sdram_controller_0+0xc002e90c>
   2f288:	a5001014 	ori	r20,r20,64
   2f28c:	80c00007 	ldb	r3,0(r16)
   2f290:	003d9d06 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f294:	da802217 	ldw	r10,136(sp)
   2f298:	d8001d85 	stb	zero,118(sp)
   2f29c:	50c00204 	addi	r3,r10,8
   2f2a0:	54800017 	ldw	r18,0(r10)
   2f2a4:	54c00117 	ldw	r19,4(r10)
   2f2a8:	4801ca16 	blt	r9,zero,2f9d4 <___vfiprintf_internal_r+0x1248>
   2f2ac:	013fdfc4 	movi	r4,-129
   2f2b0:	94c4b03a 	or	r2,r18,r19
   2f2b4:	d8c02215 	stw	r3,136(sp)
   2f2b8:	a128703a 	and	r20,r20,r4
   2f2bc:	0039883a 	mov	fp,zero
   2f2c0:	103f341e 	bne	r2,zero,2ef94 <__alt_mem_sdram_controller_0+0xc002ef94>
   2f2c4:	483e2e26 	beq	r9,zero,2eb80 <__alt_mem_sdram_controller_0+0xc002eb80>
   2f2c8:	0025883a 	mov	r18,zero
   2f2cc:	94800c04 	addi	r18,r18,48
   2f2d0:	dc8019c5 	stb	r18,103(sp)
   2f2d4:	dcc02717 	ldw	r19,156(sp)
   2f2d8:	dd4019c4 	addi	r21,sp,103
   2f2dc:	003e2b06 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2f2e0:	21003fcc 	andi	r4,r4,255
   2f2e4:	2002361e 	bne	r4,zero,2fbc0 <___vfiprintf_internal_r+0x1434>
   2f2e8:	1801c126 	beq	r3,zero,2f9f0 <___vfiprintf_internal_r+0x1264>
   2f2ec:	04800044 	movi	r18,1
   2f2f0:	d8c01005 	stb	r3,64(sp)
   2f2f4:	d8001d85 	stb	zero,118(sp)
   2f2f8:	9027883a 	mov	r19,r18
   2f2fc:	dd401004 	addi	r21,sp,64
   2f300:	003f1106 	br	2ef48 <__alt_mem_sdram_controller_0+0xc002ef48>
   2f304:	d9402117 	ldw	r5,132(sp)
   2f308:	d9002017 	ldw	r4,128(sp)
   2f30c:	d9801a04 	addi	r6,sp,104
   2f310:	d9c02b15 	stw	r7,172(sp)
   2f314:	dbc02a15 	stw	r15,168(sp)
   2f318:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f31c:	d9c02b17 	ldw	r7,172(sp)
   2f320:	dbc02a17 	ldw	r15,168(sp)
   2f324:	10006d1e 	bne	r2,zero,2f4dc <___vfiprintf_internal_r+0xd50>
   2f328:	d9801b17 	ldw	r6,108(sp)
   2f32c:	d8801c17 	ldw	r2,112(sp)
   2f330:	d811883a 	mov	r8,sp
   2f334:	31400044 	addi	r5,r6,1
   2f338:	003e3306 	br	2ec08 <__alt_mem_sdram_controller_0+0xc002ec08>
   2f33c:	d9401b17 	ldw	r5,108(sp)
   2f340:	d8801c17 	ldw	r2,112(sp)
   2f344:	29000044 	addi	r4,r5,1
   2f348:	d8c01d87 	ldb	r3,118(sp)
   2f34c:	183e4d26 	beq	r3,zero,2ec84 <__alt_mem_sdram_controller_0+0xc002ec84>
   2f350:	00c00044 	movi	r3,1
   2f354:	d9401d84 	addi	r5,sp,118
   2f358:	10c5883a 	add	r2,r2,r3
   2f35c:	41400015 	stw	r5,0(r8)
   2f360:	40c00115 	stw	r3,4(r8)
   2f364:	d8801c15 	stw	r2,112(sp)
   2f368:	d9001b15 	stw	r4,108(sp)
   2f36c:	014001c4 	movi	r5,7
   2f370:	2900a90e 	bge	r5,r4,2f618 <___vfiprintf_internal_r+0xe8c>
   2f374:	1000da1e 	bne	r2,zero,2f6e0 <___vfiprintf_internal_r+0xf54>
   2f378:	7000ab1e 	bne	r14,zero,2f628 <___vfiprintf_internal_r+0xe9c>
   2f37c:	000b883a 	mov	r5,zero
   2f380:	1809883a 	mov	r4,r3
   2f384:	d811883a 	mov	r8,sp
   2f388:	00c02004 	movi	r3,128
   2f38c:	e0fe4d26 	beq	fp,r3,2ecc4 <__alt_mem_sdram_controller_0+0xc002ecc4>
   2f390:	4cf9c83a 	sub	fp,r9,r19
   2f394:	073e7b0e 	bge	zero,fp,2ed84 <__alt_mem_sdram_controller_0+0xc002ed84>
   2f398:	01c00404 	movi	r7,16
   2f39c:	3f01900e 	bge	r7,fp,2f9e0 <___vfiprintf_internal_r+0x1254>
   2f3a0:	00c000f4 	movhi	r3,3
   2f3a4:	18d93c04 	addi	r3,r3,25840
   2f3a8:	d8c02415 	stw	r3,144(sp)
   2f3ac:	034001c4 	movi	r13,7
   2f3b0:	00000506 	br	2f3c8 <___vfiprintf_internal_r+0xc3c>
   2f3b4:	29000084 	addi	r4,r5,2
   2f3b8:	42000204 	addi	r8,r8,8
   2f3bc:	180b883a 	mov	r5,r3
   2f3c0:	e73ffc04 	addi	fp,fp,-16
   2f3c4:	3f000d0e 	bge	r7,fp,2f3fc <___vfiprintf_internal_r+0xc70>
   2f3c8:	10800404 	addi	r2,r2,16
   2f3cc:	28c00044 	addi	r3,r5,1
   2f3d0:	45c00015 	stw	r23,0(r8)
   2f3d4:	41c00115 	stw	r7,4(r8)
   2f3d8:	d8801c15 	stw	r2,112(sp)
   2f3dc:	d8c01b15 	stw	r3,108(sp)
   2f3e0:	68fff40e 	bge	r13,r3,2f3b4 <__alt_mem_sdram_controller_0+0xc002f3b4>
   2f3e4:	1000101e 	bne	r2,zero,2f428 <___vfiprintf_internal_r+0xc9c>
   2f3e8:	e73ffc04 	addi	fp,fp,-16
   2f3ec:	01000044 	movi	r4,1
   2f3f0:	000b883a 	mov	r5,zero
   2f3f4:	d811883a 	mov	r8,sp
   2f3f8:	3f3ff316 	blt	r7,fp,2f3c8 <__alt_mem_sdram_controller_0+0xc002f3c8>
   2f3fc:	da802417 	ldw	r10,144(sp)
   2f400:	1705883a 	add	r2,r2,fp
   2f404:	47000115 	stw	fp,4(r8)
   2f408:	42800015 	stw	r10,0(r8)
   2f40c:	d8801c15 	stw	r2,112(sp)
   2f410:	d9001b15 	stw	r4,108(sp)
   2f414:	00c001c4 	movi	r3,7
   2f418:	19003616 	blt	r3,r4,2f4f4 <___vfiprintf_internal_r+0xd68>
   2f41c:	42000204 	addi	r8,r8,8
   2f420:	21000044 	addi	r4,r4,1
   2f424:	003e5706 	br	2ed84 <__alt_mem_sdram_controller_0+0xc002ed84>
   2f428:	d9402117 	ldw	r5,132(sp)
   2f42c:	d9002017 	ldw	r4,128(sp)
   2f430:	d9801a04 	addi	r6,sp,104
   2f434:	d9c02b15 	stw	r7,172(sp)
   2f438:	db402a15 	stw	r13,168(sp)
   2f43c:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f440:	d9c02b17 	ldw	r7,172(sp)
   2f444:	db402a17 	ldw	r13,168(sp)
   2f448:	1000241e 	bne	r2,zero,2f4dc <___vfiprintf_internal_r+0xd50>
   2f44c:	d9401b17 	ldw	r5,108(sp)
   2f450:	d8801c17 	ldw	r2,112(sp)
   2f454:	d811883a 	mov	r8,sp
   2f458:	29000044 	addi	r4,r5,1
   2f45c:	003fd806 	br	2f3c0 <__alt_mem_sdram_controller_0+0xc002f3c0>
   2f460:	d9401b17 	ldw	r5,108(sp)
   2f464:	00c000f4 	movhi	r3,3
   2f468:	18d94004 	addi	r3,r3,25856
   2f46c:	d8c02415 	stw	r3,144(sp)
   2f470:	29400044 	addi	r5,r5,1
   2f474:	d8c02417 	ldw	r3,144(sp)
   2f478:	14c5883a 	add	r2,r2,r19
   2f47c:	44c00115 	stw	r19,4(r8)
   2f480:	40c00015 	stw	r3,0(r8)
   2f484:	d8801c15 	stw	r2,112(sp)
   2f488:	d9401b15 	stw	r5,108(sp)
   2f48c:	00c001c4 	movi	r3,7
   2f490:	1940070e 	bge	r3,r5,2f4b0 <___vfiprintf_internal_r+0xd24>
   2f494:	103e4826 	beq	r2,zero,2edb8 <__alt_mem_sdram_controller_0+0xc002edb8>
   2f498:	d9402117 	ldw	r5,132(sp)
   2f49c:	d9002017 	ldw	r4,128(sp)
   2f4a0:	d9801a04 	addi	r6,sp,104
   2f4a4:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f4a8:	10000c1e 	bne	r2,zero,2f4dc <___vfiprintf_internal_r+0xd50>
   2f4ac:	d8801c17 	ldw	r2,112(sp)
   2f4b0:	8c80010e 	bge	r17,r18,2f4b8 <___vfiprintf_internal_r+0xd2c>
   2f4b4:	9023883a 	mov	r17,r18
   2f4b8:	da802317 	ldw	r10,140(sp)
   2f4bc:	5455883a 	add	r10,r10,r17
   2f4c0:	da802315 	stw	r10,140(sp)
   2f4c4:	103e4126 	beq	r2,zero,2edcc <__alt_mem_sdram_controller_0+0xc002edcc>
   2f4c8:	d9402117 	ldw	r5,132(sp)
   2f4cc:	d9002017 	ldw	r4,128(sp)
   2f4d0:	d9801a04 	addi	r6,sp,104
   2f4d4:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f4d8:	103e3c26 	beq	r2,zero,2edcc <__alt_mem_sdram_controller_0+0xc002edcc>
   2f4dc:	dd002117 	ldw	r20,132(sp)
   2f4e0:	a080030b 	ldhu	r2,12(r20)
   2f4e4:	1080100c 	andi	r2,r2,64
   2f4e8:	1001231e 	bne	r2,zero,2f978 <___vfiprintf_internal_r+0x11ec>
   2f4ec:	d8802317 	ldw	r2,140(sp)
   2f4f0:	003d7b06 	br	2eae0 <__alt_mem_sdram_controller_0+0xc002eae0>
   2f4f4:	1000991e 	bne	r2,zero,2f75c <___vfiprintf_internal_r+0xfd0>
   2f4f8:	00c00044 	movi	r3,1
   2f4fc:	9805883a 	mov	r2,r19
   2f500:	dd400015 	stw	r21,0(sp)
   2f504:	dcc00115 	stw	r19,4(sp)
   2f508:	dcc01c15 	stw	r19,112(sp)
   2f50c:	d8c01b15 	stw	r3,108(sp)
   2f510:	d811883a 	mov	r8,sp
   2f514:	42000204 	addi	r8,r8,8
   2f518:	a2c0010c 	andi	r11,r20,4
   2f51c:	583fe426 	beq	r11,zero,2f4b0 <__alt_mem_sdram_controller_0+0xc002f4b0>
   2f520:	8ca7c83a 	sub	r19,r17,r18
   2f524:	04ffe20e 	bge	zero,r19,2f4b0 <__alt_mem_sdram_controller_0+0xc002f4b0>
   2f528:	01c00404 	movi	r7,16
   2f52c:	3cffcc0e 	bge	r7,r19,2f460 <__alt_mem_sdram_controller_0+0xc002f460>
   2f530:	028000f4 	movhi	r10,3
   2f534:	52994004 	addi	r10,r10,25856
   2f538:	d9001b17 	ldw	r4,108(sp)
   2f53c:	da802415 	stw	r10,144(sp)
   2f540:	382b883a 	mov	r21,r7
   2f544:	050001c4 	movi	r20,7
   2f548:	df002017 	ldw	fp,128(sp)
   2f54c:	00000506 	br	2f564 <___vfiprintf_internal_r+0xdd8>
   2f550:	21400084 	addi	r5,r4,2
   2f554:	42000204 	addi	r8,r8,8
   2f558:	1809883a 	mov	r4,r3
   2f55c:	9cfffc04 	addi	r19,r19,-16
   2f560:	acffc40e 	bge	r21,r19,2f474 <__alt_mem_sdram_controller_0+0xc002f474>
   2f564:	10800404 	addi	r2,r2,16
   2f568:	20c00044 	addi	r3,r4,1
   2f56c:	45800015 	stw	r22,0(r8)
   2f570:	45400115 	stw	r21,4(r8)
   2f574:	d8801c15 	stw	r2,112(sp)
   2f578:	d8c01b15 	stw	r3,108(sp)
   2f57c:	a0fff40e 	bge	r20,r3,2f550 <__alt_mem_sdram_controller_0+0xc002f550>
   2f580:	1000041e 	bne	r2,zero,2f594 <___vfiprintf_internal_r+0xe08>
   2f584:	01400044 	movi	r5,1
   2f588:	0009883a 	mov	r4,zero
   2f58c:	d811883a 	mov	r8,sp
   2f590:	003ff206 	br	2f55c <__alt_mem_sdram_controller_0+0xc002f55c>
   2f594:	d9402117 	ldw	r5,132(sp)
   2f598:	d9801a04 	addi	r6,sp,104
   2f59c:	e009883a 	mov	r4,fp
   2f5a0:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f5a4:	103fcd1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f5a8:	d9001b17 	ldw	r4,108(sp)
   2f5ac:	d8801c17 	ldw	r2,112(sp)
   2f5b0:	d811883a 	mov	r8,sp
   2f5b4:	21400044 	addi	r5,r4,1
   2f5b8:	003fe806 	br	2f55c <__alt_mem_sdram_controller_0+0xc002f55c>
   2f5bc:	d9402117 	ldw	r5,132(sp)
   2f5c0:	d9002017 	ldw	r4,128(sp)
   2f5c4:	d9801a04 	addi	r6,sp,104
   2f5c8:	d9c02b15 	stw	r7,172(sp)
   2f5cc:	db402a15 	stw	r13,168(sp)
   2f5d0:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f5d4:	d9c02b17 	ldw	r7,172(sp)
   2f5d8:	db402a17 	ldw	r13,168(sp)
   2f5dc:	103fbf1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f5e0:	d9401b17 	ldw	r5,108(sp)
   2f5e4:	d8801c17 	ldw	r2,112(sp)
   2f5e8:	d811883a 	mov	r8,sp
   2f5ec:	29800044 	addi	r6,r5,1
   2f5f0:	003dc406 	br	2ed04 <__alt_mem_sdram_controller_0+0xc002ed04>
   2f5f4:	1000d21e 	bne	r2,zero,2f940 <___vfiprintf_internal_r+0x11b4>
   2f5f8:	d8c01d87 	ldb	r3,118(sp)
   2f5fc:	18009526 	beq	r3,zero,2f854 <___vfiprintf_internal_r+0x10c8>
   2f600:	00800044 	movi	r2,1
   2f604:	d8c01d84 	addi	r3,sp,118
   2f608:	1009883a 	mov	r4,r2
   2f60c:	d8c00015 	stw	r3,0(sp)
   2f610:	d8800115 	stw	r2,4(sp)
   2f614:	d811883a 	mov	r8,sp
   2f618:	200b883a 	mov	r5,r4
   2f61c:	42000204 	addi	r8,r8,8
   2f620:	21000044 	addi	r4,r4,1
   2f624:	003d9706 	br	2ec84 <__alt_mem_sdram_controller_0+0xc002ec84>
   2f628:	d9001d04 	addi	r4,sp,116
   2f62c:	00800084 	movi	r2,2
   2f630:	d9000015 	stw	r4,0(sp)
   2f634:	d8800115 	stw	r2,4(sp)
   2f638:	1809883a 	mov	r4,r3
   2f63c:	d811883a 	mov	r8,sp
   2f640:	200b883a 	mov	r5,r4
   2f644:	42000204 	addi	r8,r8,8
   2f648:	21000044 	addi	r4,r4,1
   2f64c:	003f4e06 	br	2f388 <__alt_mem_sdram_controller_0+0xc002f388>
   2f650:	d8001d85 	stb	zero,118(sp)
   2f654:	48005016 	blt	r9,zero,2f798 <___vfiprintf_internal_r+0x100c>
   2f658:	00ffdfc4 	movi	r3,-129
   2f65c:	94c4b03a 	or	r2,r18,r19
   2f660:	a0e8703a 	and	r20,r20,r3
   2f664:	103d4426 	beq	r2,zero,2eb78 <__alt_mem_sdram_controller_0+0xc002eb78>
   2f668:	0039883a 	mov	fp,zero
   2f66c:	d9002617 	ldw	r4,152(sp)
   2f670:	dd401a04 	addi	r21,sp,104
   2f674:	908003cc 	andi	r2,r18,15
   2f678:	9806973a 	slli	r3,r19,28
   2f67c:	2085883a 	add	r2,r4,r2
   2f680:	9024d13a 	srli	r18,r18,4
   2f684:	10800003 	ldbu	r2,0(r2)
   2f688:	9826d13a 	srli	r19,r19,4
   2f68c:	ad7fffc4 	addi	r21,r21,-1
   2f690:	1ca4b03a 	or	r18,r3,r18
   2f694:	a8800005 	stb	r2,0(r21)
   2f698:	94c4b03a 	or	r2,r18,r19
   2f69c:	103ff51e 	bne	r2,zero,2f674 <__alt_mem_sdram_controller_0+0xc002f674>
   2f6a0:	003e5906 	br	2f008 <__alt_mem_sdram_controller_0+0xc002f008>
   2f6a4:	d9402117 	ldw	r5,132(sp)
   2f6a8:	d9002017 	ldw	r4,128(sp)
   2f6ac:	d9801a04 	addi	r6,sp,104
   2f6b0:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f6b4:	103f891e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f6b8:	d8801c17 	ldw	r2,112(sp)
   2f6bc:	d811883a 	mov	r8,sp
   2f6c0:	003f9506 	br	2f518 <__alt_mem_sdram_controller_0+0xc002f518>
   2f6c4:	d9402117 	ldw	r5,132(sp)
   2f6c8:	d9002017 	ldw	r4,128(sp)
   2f6cc:	d9801a04 	addi	r6,sp,104
   2f6d0:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f6d4:	103f811e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f6d8:	d811883a 	mov	r8,sp
   2f6dc:	003ced06 	br	2ea94 <__alt_mem_sdram_controller_0+0xc002ea94>
   2f6e0:	d9402117 	ldw	r5,132(sp)
   2f6e4:	d9002017 	ldw	r4,128(sp)
   2f6e8:	d9801a04 	addi	r6,sp,104
   2f6ec:	da402c15 	stw	r9,176(sp)
   2f6f0:	db802a15 	stw	r14,168(sp)
   2f6f4:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f6f8:	da402c17 	ldw	r9,176(sp)
   2f6fc:	db802a17 	ldw	r14,168(sp)
   2f700:	103f761e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f704:	d9401b17 	ldw	r5,108(sp)
   2f708:	d8801c17 	ldw	r2,112(sp)
   2f70c:	d811883a 	mov	r8,sp
   2f710:	29000044 	addi	r4,r5,1
   2f714:	003d5b06 	br	2ec84 <__alt_mem_sdram_controller_0+0xc002ec84>
   2f718:	d9402117 	ldw	r5,132(sp)
   2f71c:	d9002017 	ldw	r4,128(sp)
   2f720:	d9801a04 	addi	r6,sp,104
   2f724:	da402c15 	stw	r9,176(sp)
   2f728:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f72c:	da402c17 	ldw	r9,176(sp)
   2f730:	103f6a1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f734:	d9401b17 	ldw	r5,108(sp)
   2f738:	d8801c17 	ldw	r2,112(sp)
   2f73c:	d811883a 	mov	r8,sp
   2f740:	29000044 	addi	r4,r5,1
   2f744:	003f1006 	br	2f388 <__alt_mem_sdram_controller_0+0xc002f388>
   2f748:	1000c31e 	bne	r2,zero,2fa58 <___vfiprintf_internal_r+0x12cc>
   2f74c:	01000044 	movi	r4,1
   2f750:	000b883a 	mov	r5,zero
   2f754:	d811883a 	mov	r8,sp
   2f758:	003f0d06 	br	2f390 <__alt_mem_sdram_controller_0+0xc002f390>
   2f75c:	d9402117 	ldw	r5,132(sp)
   2f760:	d9002017 	ldw	r4,128(sp)
   2f764:	d9801a04 	addi	r6,sp,104
   2f768:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f76c:	103f5b1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f770:	d9001b17 	ldw	r4,108(sp)
   2f774:	d8801c17 	ldw	r2,112(sp)
   2f778:	d811883a 	mov	r8,sp
   2f77c:	21000044 	addi	r4,r4,1
   2f780:	003d8006 	br	2ed84 <__alt_mem_sdram_controller_0+0xc002ed84>
   2f784:	010000f4 	movhi	r4,3
   2f788:	2118cc04 	addi	r4,r4,25392
   2f78c:	d9002615 	stw	r4,152(sp)
   2f790:	d8c02215 	stw	r3,136(sp)
   2f794:	1029883a 	mov	r20,r2
   2f798:	94c4b03a 	or	r2,r18,r19
   2f79c:	103fb21e 	bne	r2,zero,2f668 <__alt_mem_sdram_controller_0+0xc002f668>
   2f7a0:	0039883a 	mov	fp,zero
   2f7a4:	00800084 	movi	r2,2
   2f7a8:	003e6b06 	br	2f158 <__alt_mem_sdram_controller_0+0xc002f158>
   2f7ac:	da802217 	ldw	r10,136(sp)
   2f7b0:	d8001d85 	stb	zero,118(sp)
   2f7b4:	0027883a 	mov	r19,zero
   2f7b8:	50800104 	addi	r2,r10,4
   2f7bc:	54800017 	ldw	r18,0(r10)
   2f7c0:	483e6016 	blt	r9,zero,2f144 <__alt_mem_sdram_controller_0+0xc002f144>
   2f7c4:	00ffdfc4 	movi	r3,-129
   2f7c8:	d8802215 	stw	r2,136(sp)
   2f7cc:	a0e8703a 	and	r20,r20,r3
   2f7d0:	0039883a 	mov	fp,zero
   2f7d4:	903ebb26 	beq	r18,zero,2f2c4 <__alt_mem_sdram_controller_0+0xc002f2c4>
   2f7d8:	00800244 	movi	r2,9
   2f7dc:	14bdee36 	bltu	r2,r18,2ef98 <__alt_mem_sdram_controller_0+0xc002ef98>
   2f7e0:	003eba06 	br	2f2cc <__alt_mem_sdram_controller_0+0xc002f2cc>
   2f7e4:	00800c04 	movi	r2,48
   2f7e8:	d8c01d45 	stb	r3,117(sp)
   2f7ec:	d8801d05 	stb	r2,116(sp)
   2f7f0:	d8001d85 	stb	zero,118(sp)
   2f7f4:	a0c00094 	ori	r3,r20,2
   2f7f8:	4800a916 	blt	r9,zero,2faa0 <___vfiprintf_internal_r+0x1314>
   2f7fc:	00bfdfc4 	movi	r2,-129
   2f800:	a096703a 	and	r11,r20,r2
   2f804:	5d000094 	ori	r20,r11,2
   2f808:	0039883a 	mov	fp,zero
   2f80c:	003f9706 	br	2f66c <__alt_mem_sdram_controller_0+0xc002f66c>
   2f810:	8025883a 	mov	r18,r16
   2f814:	003c2e06 	br	2e8d0 <__alt_mem_sdram_controller_0+0xc002e8d0>
   2f818:	008000f4 	movhi	r2,3
   2f81c:	1098cc04 	addi	r2,r2,25392
   2f820:	0039883a 	mov	fp,zero
   2f824:	d8802615 	stw	r2,152(sp)
   2f828:	003f9006 	br	2f66c <__alt_mem_sdram_controller_0+0xc002f66c>
   2f82c:	04a5c83a 	sub	r18,zero,r18
   2f830:	07000b44 	movi	fp,45
   2f834:	9004c03a 	cmpne	r2,r18,zero
   2f838:	04e7c83a 	sub	r19,zero,r19
   2f83c:	df001d85 	stb	fp,118(sp)
   2f840:	98a7c83a 	sub	r19,r19,r2
   2f844:	48009f16 	blt	r9,zero,2fac4 <___vfiprintf_internal_r+0x1338>
   2f848:	00bfdfc4 	movi	r2,-129
   2f84c:	a0a8703a 	and	r20,r20,r2
   2f850:	003dd006 	br	2ef94 <__alt_mem_sdram_controller_0+0xc002ef94>
   2f854:	70004c26 	beq	r14,zero,2f988 <___vfiprintf_internal_r+0x11fc>
   2f858:	00800084 	movi	r2,2
   2f85c:	d8c01d04 	addi	r3,sp,116
   2f860:	d8c00015 	stw	r3,0(sp)
   2f864:	d8800115 	stw	r2,4(sp)
   2f868:	01000044 	movi	r4,1
   2f86c:	d811883a 	mov	r8,sp
   2f870:	003f7306 	br	2f640 <__alt_mem_sdram_controller_0+0xc002f640>
   2f874:	a080100c 	andi	r2,r20,64
   2f878:	da802217 	ldw	r10,136(sp)
   2f87c:	103e0626 	beq	r2,zero,2f098 <__alt_mem_sdram_controller_0+0xc002f098>
   2f880:	5480000f 	ldh	r18,0(r10)
   2f884:	52800104 	addi	r10,r10,4
   2f888:	da802215 	stw	r10,136(sp)
   2f88c:	9027d7fa 	srai	r19,r18,31
   2f890:	9805883a 	mov	r2,r19
   2f894:	003db806 	br	2ef78 <__alt_mem_sdram_controller_0+0xc002ef78>
   2f898:	a080040c 	andi	r2,r20,16
   2f89c:	1000091e 	bne	r2,zero,2f8c4 <___vfiprintf_internal_r+0x1138>
   2f8a0:	a2c0100c 	andi	r11,r20,64
   2f8a4:	58000726 	beq	r11,zero,2f8c4 <___vfiprintf_internal_r+0x1138>
   2f8a8:	da802217 	ldw	r10,136(sp)
   2f8ac:	50800017 	ldw	r2,0(r10)
   2f8b0:	52800104 	addi	r10,r10,4
   2f8b4:	da802215 	stw	r10,136(sp)
   2f8b8:	da802317 	ldw	r10,140(sp)
   2f8bc:	1280000d 	sth	r10,0(r2)
   2f8c0:	003be706 	br	2e860 <__alt_mem_sdram_controller_0+0xc002e860>
   2f8c4:	da802217 	ldw	r10,136(sp)
   2f8c8:	50800017 	ldw	r2,0(r10)
   2f8cc:	52800104 	addi	r10,r10,4
   2f8d0:	da802215 	stw	r10,136(sp)
   2f8d4:	da802317 	ldw	r10,140(sp)
   2f8d8:	12800015 	stw	r10,0(r2)
   2f8dc:	003be006 	br	2e860 <__alt_mem_sdram_controller_0+0xc002e860>
   2f8e0:	a080100c 	andi	r2,r20,64
   2f8e4:	da802217 	ldw	r10,136(sp)
   2f8e8:	10003026 	beq	r2,zero,2f9ac <___vfiprintf_internal_r+0x1220>
   2f8ec:	5480000b 	ldhu	r18,0(r10)
   2f8f0:	52800104 	addi	r10,r10,4
   2f8f4:	0027883a 	mov	r19,zero
   2f8f8:	da802215 	stw	r10,136(sp)
   2f8fc:	003d8006 	br	2ef00 <__alt_mem_sdram_controller_0+0xc002ef00>
   2f900:	80c00007 	ldb	r3,0(r16)
   2f904:	003c0006 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2f908:	a080100c 	andi	r2,r20,64
   2f90c:	d8001d85 	stb	zero,118(sp)
   2f910:	da802217 	ldw	r10,136(sp)
   2f914:	1000201e 	bne	r2,zero,2f998 <___vfiprintf_internal_r+0x120c>
   2f918:	50800104 	addi	r2,r10,4
   2f91c:	54800017 	ldw	r18,0(r10)
   2f920:	0027883a 	mov	r19,zero
   2f924:	483def0e 	bge	r9,zero,2f0e4 <__alt_mem_sdram_controller_0+0xc002f0e4>
   2f928:	94c6b03a 	or	r3,r18,r19
   2f92c:	d8802215 	stw	r2,136(sp)
   2f930:	183d4e1e 	bne	r3,zero,2ee6c <__alt_mem_sdram_controller_0+0xc002ee6c>
   2f934:	0039883a 	mov	fp,zero
   2f938:	0005883a 	mov	r2,zero
   2f93c:	003e0606 	br	2f158 <__alt_mem_sdram_controller_0+0xc002f158>
   2f940:	d9402117 	ldw	r5,132(sp)
   2f944:	d9002017 	ldw	r4,128(sp)
   2f948:	d9801a04 	addi	r6,sp,104
   2f94c:	da402c15 	stw	r9,176(sp)
   2f950:	db802a15 	stw	r14,168(sp)
   2f954:	002e6780 	call	2e678 <__sprint_r.part.0>
   2f958:	da402c17 	ldw	r9,176(sp)
   2f95c:	db802a17 	ldw	r14,168(sp)
   2f960:	103ede1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2f964:	d9401b17 	ldw	r5,108(sp)
   2f968:	d8801c17 	ldw	r2,112(sp)
   2f96c:	d811883a 	mov	r8,sp
   2f970:	29000044 	addi	r4,r5,1
   2f974:	003e7406 	br	2f348 <__alt_mem_sdram_controller_0+0xc002f348>
   2f978:	00bfffc4 	movi	r2,-1
   2f97c:	003c5806 	br	2eae0 <__alt_mem_sdram_controller_0+0xc002eae0>
   2f980:	d811883a 	mov	r8,sp
   2f984:	003ee806 	br	2f528 <__alt_mem_sdram_controller_0+0xc002f528>
   2f988:	000b883a 	mov	r5,zero
   2f98c:	01000044 	movi	r4,1
   2f990:	d811883a 	mov	r8,sp
   2f994:	003e7c06 	br	2f388 <__alt_mem_sdram_controller_0+0xc002f388>
   2f998:	50800104 	addi	r2,r10,4
   2f99c:	5480000b 	ldhu	r18,0(r10)
   2f9a0:	0027883a 	mov	r19,zero
   2f9a4:	483dcf0e 	bge	r9,zero,2f0e4 <__alt_mem_sdram_controller_0+0xc002f0e4>
   2f9a8:	003fdf06 	br	2f928 <__alt_mem_sdram_controller_0+0xc002f928>
   2f9ac:	54800017 	ldw	r18,0(r10)
   2f9b0:	52800104 	addi	r10,r10,4
   2f9b4:	0027883a 	mov	r19,zero
   2f9b8:	da802215 	stw	r10,136(sp)
   2f9bc:	003d5006 	br	2ef00 <__alt_mem_sdram_controller_0+0xc002ef00>
   2f9c0:	50800104 	addi	r2,r10,4
   2f9c4:	5480000b 	ldhu	r18,0(r10)
   2f9c8:	0027883a 	mov	r19,zero
   2f9cc:	483f7d0e 	bge	r9,zero,2f7c4 <__alt_mem_sdram_controller_0+0xc002f7c4>
   2f9d0:	003ddc06 	br	2f144 <__alt_mem_sdram_controller_0+0xc002f144>
   2f9d4:	d8c02215 	stw	r3,136(sp)
   2f9d8:	0039883a 	mov	fp,zero
   2f9dc:	003ddb06 	br	2f14c <__alt_mem_sdram_controller_0+0xc002f14c>
   2f9e0:	028000f4 	movhi	r10,3
   2f9e4:	52993c04 	addi	r10,r10,25840
   2f9e8:	da802415 	stw	r10,144(sp)
   2f9ec:	003e8306 	br	2f3fc <__alt_mem_sdram_controller_0+0xc002f3fc>
   2f9f0:	d8801c17 	ldw	r2,112(sp)
   2f9f4:	dd002117 	ldw	r20,132(sp)
   2f9f8:	103eb926 	beq	r2,zero,2f4e0 <__alt_mem_sdram_controller_0+0xc002f4e0>
   2f9fc:	d9002017 	ldw	r4,128(sp)
   2fa00:	d9801a04 	addi	r6,sp,104
   2fa04:	a00b883a 	mov	r5,r20
   2fa08:	002e6780 	call	2e678 <__sprint_r.part.0>
   2fa0c:	003eb406 	br	2f4e0 <__alt_mem_sdram_controller_0+0xc002f4e0>
   2fa10:	80c00043 	ldbu	r3,1(r16)
   2fa14:	a5000814 	ori	r20,r20,32
   2fa18:	84000044 	addi	r16,r16,1
   2fa1c:	18c03fcc 	andi	r3,r3,255
   2fa20:	18c0201c 	xori	r3,r3,128
   2fa24:	18ffe004 	addi	r3,r3,-128
   2fa28:	003bb706 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2fa2c:	a809883a 	mov	r4,r21
   2fa30:	d8c02a15 	stw	r3,168(sp)
   2fa34:	da002b15 	stw	r8,172(sp)
   2fa38:	0024d2c0 	call	24d2c <strlen>
   2fa3c:	d8c02a17 	ldw	r3,168(sp)
   2fa40:	1027883a 	mov	r19,r2
   2fa44:	df001d83 	ldbu	fp,118(sp)
   2fa48:	d8c02215 	stw	r3,136(sp)
   2fa4c:	0013883a 	mov	r9,zero
   2fa50:	da002b17 	ldw	r8,172(sp)
   2fa54:	003c4d06 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2fa58:	d9402117 	ldw	r5,132(sp)
   2fa5c:	d9002017 	ldw	r4,128(sp)
   2fa60:	d9801a04 	addi	r6,sp,104
   2fa64:	da402c15 	stw	r9,176(sp)
   2fa68:	002e6780 	call	2e678 <__sprint_r.part.0>
   2fa6c:	da402c17 	ldw	r9,176(sp)
   2fa70:	103e9a1e 	bne	r2,zero,2f4dc <__alt_mem_sdram_controller_0+0xc002f4dc>
   2fa74:	d9401b17 	ldw	r5,108(sp)
   2fa78:	d8801c17 	ldw	r2,112(sp)
   2fa7c:	d811883a 	mov	r8,sp
   2fa80:	29000044 	addi	r4,r5,1
   2fa84:	003e4206 	br	2f390 <__alt_mem_sdram_controller_0+0xc002f390>
   2fa88:	d9401b17 	ldw	r5,108(sp)
   2fa8c:	010000f4 	movhi	r4,3
   2fa90:	21194004 	addi	r4,r4,25856
   2fa94:	d9002415 	stw	r4,144(sp)
   2fa98:	29400044 	addi	r5,r5,1
   2fa9c:	003c6d06 	br	2ec54 <__alt_mem_sdram_controller_0+0xc002ec54>
   2faa0:	0039883a 	mov	fp,zero
   2faa4:	00800084 	movi	r2,2
   2faa8:	10803fcc 	andi	r2,r2,255
   2faac:	01000044 	movi	r4,1
   2fab0:	11001e26 	beq	r2,r4,2fb2c <___vfiprintf_internal_r+0x13a0>
   2fab4:	01000084 	movi	r4,2
   2fab8:	11001e1e 	bne	r2,r4,2fb34 <___vfiprintf_internal_r+0x13a8>
   2fabc:	1829883a 	mov	r20,r3
   2fac0:	003eea06 	br	2f66c <__alt_mem_sdram_controller_0+0xc002f66c>
   2fac4:	a007883a 	mov	r3,r20
   2fac8:	00800044 	movi	r2,1
   2facc:	003ff606 	br	2faa8 <__alt_mem_sdram_controller_0+0xc002faa8>
   2fad0:	00800184 	movi	r2,6
   2fad4:	1240012e 	bgeu	r2,r9,2fadc <___vfiprintf_internal_r+0x1350>
   2fad8:	1013883a 	mov	r9,r2
   2fadc:	4827883a 	mov	r19,r9
   2fae0:	4825883a 	mov	r18,r9
   2fae4:	48001516 	blt	r9,zero,2fb3c <___vfiprintf_internal_r+0x13b0>
   2fae8:	054000f4 	movhi	r21,3
   2faec:	d8c02215 	stw	r3,136(sp)
   2faf0:	ad58d104 	addi	r21,r21,25412
   2faf4:	003d1406 	br	2ef48 <__alt_mem_sdram_controller_0+0xc002ef48>
   2faf8:	028000f4 	movhi	r10,3
   2fafc:	52993c04 	addi	r10,r10,25840
   2fb00:	da802415 	stw	r10,144(sp)
   2fb04:	200d883a 	mov	r6,r4
   2fb08:	003c9106 	br	2ed50 <__alt_mem_sdram_controller_0+0xc002ed50>
   2fb0c:	5021883a 	mov	r16,r10
   2fb10:	0013883a 	mov	r9,zero
   2fb14:	003b7d06 	br	2e90c <__alt_mem_sdram_controller_0+0xc002e90c>
   2fb18:	4827883a 	mov	r19,r9
   2fb1c:	df001d83 	ldbu	fp,118(sp)
   2fb20:	d8c02215 	stw	r3,136(sp)
   2fb24:	0013883a 	mov	r9,zero
   2fb28:	003c1806 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2fb2c:	1829883a 	mov	r20,r3
   2fb30:	003d1806 	br	2ef94 <__alt_mem_sdram_controller_0+0xc002ef94>
   2fb34:	1829883a 	mov	r20,r3
   2fb38:	003ccd06 	br	2ee70 <__alt_mem_sdram_controller_0+0xc002ee70>
   2fb3c:	0025883a 	mov	r18,zero
   2fb40:	003fe906 	br	2fae8 <__alt_mem_sdram_controller_0+0xc002fae8>
   2fb44:	d8802217 	ldw	r2,136(sp)
   2fb48:	80c00043 	ldbu	r3,1(r16)
   2fb4c:	5021883a 	mov	r16,r10
   2fb50:	12400017 	ldw	r9,0(r2)
   2fb54:	10800104 	addi	r2,r2,4
   2fb58:	d8802215 	stw	r2,136(sp)
   2fb5c:	483faf0e 	bge	r9,zero,2fa1c <__alt_mem_sdram_controller_0+0xc002fa1c>
   2fb60:	18c03fcc 	andi	r3,r3,255
   2fb64:	18c0201c 	xori	r3,r3,128
   2fb68:	027fffc4 	movi	r9,-1
   2fb6c:	18ffe004 	addi	r3,r3,-128
   2fb70:	003b6506 	br	2e908 <__alt_mem_sdram_controller_0+0xc002e908>
   2fb74:	d9c01d85 	stb	r7,118(sp)
   2fb78:	003ca006 	br	2edfc <__alt_mem_sdram_controller_0+0xc002edfc>
   2fb7c:	d9c01d85 	stb	r7,118(sp)
   2fb80:	003cad06 	br	2ee38 <__alt_mem_sdram_controller_0+0xc002ee38>
   2fb84:	d9c01d85 	stb	r7,118(sp)
   2fb88:	003d7d06 	br	2f180 <__alt_mem_sdram_controller_0+0xc002f180>
   2fb8c:	d9c01d85 	stb	r7,118(sp)
   2fb90:	003d5f06 	br	2f110 <__alt_mem_sdram_controller_0+0xc002f110>
   2fb94:	a080004c 	andi	r2,r20,1
   2fb98:	0039883a 	mov	fp,zero
   2fb9c:	10000526 	beq	r2,zero,2fbb4 <___vfiprintf_internal_r+0x1428>
   2fba0:	00800c04 	movi	r2,48
   2fba4:	d88019c5 	stb	r2,103(sp)
   2fba8:	dcc02717 	ldw	r19,156(sp)
   2fbac:	dd4019c4 	addi	r21,sp,103
   2fbb0:	003bf606 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2fbb4:	0027883a 	mov	r19,zero
   2fbb8:	dd401a04 	addi	r21,sp,104
   2fbbc:	003bf306 	br	2eb8c <__alt_mem_sdram_controller_0+0xc002eb8c>
   2fbc0:	d9c01d85 	stb	r7,118(sp)
   2fbc4:	003dc806 	br	2f2e8 <__alt_mem_sdram_controller_0+0xc002f2e8>
   2fbc8:	d9c01d85 	stb	r7,118(sp)
   2fbcc:	003d3a06 	br	2f0b8 <__alt_mem_sdram_controller_0+0xc002f0b8>
   2fbd0:	d9c01d85 	stb	r7,118(sp)
   2fbd4:	003d2a06 	br	2f080 <__alt_mem_sdram_controller_0+0xc002f080>
   2fbd8:	d9c01d85 	stb	r7,118(sp)
   2fbdc:	003cde06 	br	2ef58 <__alt_mem_sdram_controller_0+0xc002ef58>
   2fbe0:	d9c01d85 	stb	r7,118(sp)
   2fbe4:	003cbc06 	br	2eed8 <__alt_mem_sdram_controller_0+0xc002eed8>

0002fbe8 <__vfiprintf_internal>:
   2fbe8:	00800134 	movhi	r2,4
   2fbec:	10a03d04 	addi	r2,r2,-32524
   2fbf0:	300f883a 	mov	r7,r6
   2fbf4:	280d883a 	mov	r6,r5
   2fbf8:	200b883a 	mov	r5,r4
   2fbfc:	11000017 	ldw	r4,0(r2)
   2fc00:	002e78c1 	jmpi	2e78c <___vfiprintf_internal_r>

0002fc04 <__sbprintf>:
   2fc04:	2880030b 	ldhu	r2,12(r5)
   2fc08:	2ac01917 	ldw	r11,100(r5)
   2fc0c:	2a80038b 	ldhu	r10,14(r5)
   2fc10:	2a400717 	ldw	r9,28(r5)
   2fc14:	2a000917 	ldw	r8,36(r5)
   2fc18:	defee204 	addi	sp,sp,-1144
   2fc1c:	00c10004 	movi	r3,1024
   2fc20:	dc011a15 	stw	r16,1128(sp)
   2fc24:	10bfff4c 	andi	r2,r2,65533
   2fc28:	2821883a 	mov	r16,r5
   2fc2c:	d8cb883a 	add	r5,sp,r3
   2fc30:	dc811c15 	stw	r18,1136(sp)
   2fc34:	dc411b15 	stw	r17,1132(sp)
   2fc38:	dfc11d15 	stw	ra,1140(sp)
   2fc3c:	2025883a 	mov	r18,r4
   2fc40:	d881030d 	sth	r2,1036(sp)
   2fc44:	dac11915 	stw	r11,1124(sp)
   2fc48:	da81038d 	sth	r10,1038(sp)
   2fc4c:	da410715 	stw	r9,1052(sp)
   2fc50:	da010915 	stw	r8,1060(sp)
   2fc54:	dec10015 	stw	sp,1024(sp)
   2fc58:	dec10415 	stw	sp,1040(sp)
   2fc5c:	d8c10215 	stw	r3,1032(sp)
   2fc60:	d8c10515 	stw	r3,1044(sp)
   2fc64:	d8010615 	stw	zero,1048(sp)
   2fc68:	002e78c0 	call	2e78c <___vfiprintf_internal_r>
   2fc6c:	1023883a 	mov	r17,r2
   2fc70:	10000416 	blt	r2,zero,2fc84 <__sbprintf+0x80>
   2fc74:	d9410004 	addi	r5,sp,1024
   2fc78:	9009883a 	mov	r4,r18
   2fc7c:	0022a640 	call	22a64 <_fflush_r>
   2fc80:	10000d1e 	bne	r2,zero,2fcb8 <__sbprintf+0xb4>
   2fc84:	d881030b 	ldhu	r2,1036(sp)
   2fc88:	1080100c 	andi	r2,r2,64
   2fc8c:	10000326 	beq	r2,zero,2fc9c <__sbprintf+0x98>
   2fc90:	8080030b 	ldhu	r2,12(r16)
   2fc94:	10801014 	ori	r2,r2,64
   2fc98:	8080030d 	sth	r2,12(r16)
   2fc9c:	8805883a 	mov	r2,r17
   2fca0:	dfc11d17 	ldw	ra,1140(sp)
   2fca4:	dc811c17 	ldw	r18,1136(sp)
   2fca8:	dc411b17 	ldw	r17,1132(sp)
   2fcac:	dc011a17 	ldw	r16,1128(sp)
   2fcb0:	dec11e04 	addi	sp,sp,1144
   2fcb4:	f800283a 	ret
   2fcb8:	047fffc4 	movi	r17,-1
   2fcbc:	003ff106 	br	2fc84 <__alt_mem_sdram_controller_0+0xc002fc84>

0002fcc0 <_calloc_r>:
   2fcc0:	298b383a 	mul	r5,r5,r6
   2fcc4:	defffe04 	addi	sp,sp,-8
   2fcc8:	dfc00115 	stw	ra,4(sp)
   2fccc:	dc000015 	stw	r16,0(sp)
   2fcd0:	0023d980 	call	23d98 <_malloc_r>
   2fcd4:	10002926 	beq	r2,zero,2fd7c <_calloc_r+0xbc>
   2fcd8:	11bfff17 	ldw	r6,-4(r2)
   2fcdc:	1021883a 	mov	r16,r2
   2fce0:	00bfff04 	movi	r2,-4
   2fce4:	308c703a 	and	r6,r6,r2
   2fce8:	00c00904 	movi	r3,36
   2fcec:	308d883a 	add	r6,r6,r2
   2fcf0:	19801636 	bltu	r3,r6,2fd4c <_calloc_r+0x8c>
   2fcf4:	008004c4 	movi	r2,19
   2fcf8:	11800b2e 	bgeu	r2,r6,2fd28 <_calloc_r+0x68>
   2fcfc:	80000015 	stw	zero,0(r16)
   2fd00:	80000115 	stw	zero,4(r16)
   2fd04:	008006c4 	movi	r2,27
   2fd08:	11801a2e 	bgeu	r2,r6,2fd74 <_calloc_r+0xb4>
   2fd0c:	80000215 	stw	zero,8(r16)
   2fd10:	80000315 	stw	zero,12(r16)
   2fd14:	30c0151e 	bne	r6,r3,2fd6c <_calloc_r+0xac>
   2fd18:	80000415 	stw	zero,16(r16)
   2fd1c:	80800604 	addi	r2,r16,24
   2fd20:	80000515 	stw	zero,20(r16)
   2fd24:	00000106 	br	2fd2c <_calloc_r+0x6c>
   2fd28:	8005883a 	mov	r2,r16
   2fd2c:	10000015 	stw	zero,0(r2)
   2fd30:	10000115 	stw	zero,4(r2)
   2fd34:	10000215 	stw	zero,8(r2)
   2fd38:	8005883a 	mov	r2,r16
   2fd3c:	dfc00117 	ldw	ra,4(sp)
   2fd40:	dc000017 	ldw	r16,0(sp)
   2fd44:	dec00204 	addi	sp,sp,8
   2fd48:	f800283a 	ret
   2fd4c:	000b883a 	mov	r5,zero
   2fd50:	8009883a 	mov	r4,r16
   2fd54:	00245a40 	call	245a4 <memset>
   2fd58:	8005883a 	mov	r2,r16
   2fd5c:	dfc00117 	ldw	ra,4(sp)
   2fd60:	dc000017 	ldw	r16,0(sp)
   2fd64:	dec00204 	addi	sp,sp,8
   2fd68:	f800283a 	ret
   2fd6c:	80800404 	addi	r2,r16,16
   2fd70:	003fee06 	br	2fd2c <__alt_mem_sdram_controller_0+0xc002fd2c>
   2fd74:	80800204 	addi	r2,r16,8
   2fd78:	003fec06 	br	2fd2c <__alt_mem_sdram_controller_0+0xc002fd2c>
   2fd7c:	0005883a 	mov	r2,zero
   2fd80:	003fee06 	br	2fd3c <__alt_mem_sdram_controller_0+0xc002fd3c>

0002fd84 <__fputwc>:
   2fd84:	defff804 	addi	sp,sp,-32
   2fd88:	dcc00415 	stw	r19,16(sp)
   2fd8c:	dc800315 	stw	r18,12(sp)
   2fd90:	dc000115 	stw	r16,4(sp)
   2fd94:	dfc00715 	stw	ra,28(sp)
   2fd98:	dd400615 	stw	r21,24(sp)
   2fd9c:	dd000515 	stw	r20,20(sp)
   2fda0:	dc400215 	stw	r17,8(sp)
   2fda4:	2027883a 	mov	r19,r4
   2fda8:	2825883a 	mov	r18,r5
   2fdac:	3021883a 	mov	r16,r6
   2fdb0:	002b41c0 	call	2b41c <__locale_mb_cur_max>
   2fdb4:	00c00044 	movi	r3,1
   2fdb8:	10c03e26 	beq	r2,r3,2feb4 <__fputwc+0x130>
   2fdbc:	81c01704 	addi	r7,r16,92
   2fdc0:	900d883a 	mov	r6,r18
   2fdc4:	d80b883a 	mov	r5,sp
   2fdc8:	9809883a 	mov	r4,r19
   2fdcc:	00300e40 	call	300e4 <_wcrtomb_r>
   2fdd0:	1029883a 	mov	r20,r2
   2fdd4:	00bfffc4 	movi	r2,-1
   2fdd8:	a0802026 	beq	r20,r2,2fe5c <__fputwc+0xd8>
   2fddc:	d9400003 	ldbu	r5,0(sp)
   2fde0:	a0001c26 	beq	r20,zero,2fe54 <__fputwc+0xd0>
   2fde4:	0023883a 	mov	r17,zero
   2fde8:	05400284 	movi	r21,10
   2fdec:	00000906 	br	2fe14 <__fputwc+0x90>
   2fdf0:	80800017 	ldw	r2,0(r16)
   2fdf4:	11400005 	stb	r5,0(r2)
   2fdf8:	80c00017 	ldw	r3,0(r16)
   2fdfc:	18c00044 	addi	r3,r3,1
   2fe00:	80c00015 	stw	r3,0(r16)
   2fe04:	8c400044 	addi	r17,r17,1
   2fe08:	dc45883a 	add	r2,sp,r17
   2fe0c:	8d00112e 	bgeu	r17,r20,2fe54 <__fputwc+0xd0>
   2fe10:	11400003 	ldbu	r5,0(r2)
   2fe14:	80c00217 	ldw	r3,8(r16)
   2fe18:	18ffffc4 	addi	r3,r3,-1
   2fe1c:	80c00215 	stw	r3,8(r16)
   2fe20:	183ff30e 	bge	r3,zero,2fdf0 <__alt_mem_sdram_controller_0+0xc002fdf0>
   2fe24:	80800617 	ldw	r2,24(r16)
   2fe28:	18801916 	blt	r3,r2,2fe90 <__fputwc+0x10c>
   2fe2c:	80800017 	ldw	r2,0(r16)
   2fe30:	11400005 	stb	r5,0(r2)
   2fe34:	80800017 	ldw	r2,0(r16)
   2fe38:	10c00003 	ldbu	r3,0(r2)
   2fe3c:	10800044 	addi	r2,r2,1
   2fe40:	1d402326 	beq	r3,r21,2fed0 <__fputwc+0x14c>
   2fe44:	80800015 	stw	r2,0(r16)
   2fe48:	8c400044 	addi	r17,r17,1
   2fe4c:	dc45883a 	add	r2,sp,r17
   2fe50:	8d3fef36 	bltu	r17,r20,2fe10 <__alt_mem_sdram_controller_0+0xc002fe10>
   2fe54:	9005883a 	mov	r2,r18
   2fe58:	00000406 	br	2fe6c <__fputwc+0xe8>
   2fe5c:	80c0030b 	ldhu	r3,12(r16)
   2fe60:	a005883a 	mov	r2,r20
   2fe64:	18c01014 	ori	r3,r3,64
   2fe68:	80c0030d 	sth	r3,12(r16)
   2fe6c:	dfc00717 	ldw	ra,28(sp)
   2fe70:	dd400617 	ldw	r21,24(sp)
   2fe74:	dd000517 	ldw	r20,20(sp)
   2fe78:	dcc00417 	ldw	r19,16(sp)
   2fe7c:	dc800317 	ldw	r18,12(sp)
   2fe80:	dc400217 	ldw	r17,8(sp)
   2fe84:	dc000117 	ldw	r16,4(sp)
   2fe88:	dec00804 	addi	sp,sp,32
   2fe8c:	f800283a 	ret
   2fe90:	800d883a 	mov	r6,r16
   2fe94:	29403fcc 	andi	r5,r5,255
   2fe98:	9809883a 	mov	r4,r19
   2fe9c:	002ff8c0 	call	2ff8c <__swbuf_r>
   2fea0:	10bfffe0 	cmpeqi	r2,r2,-1
   2fea4:	10803fcc 	andi	r2,r2,255
   2fea8:	103fd626 	beq	r2,zero,2fe04 <__alt_mem_sdram_controller_0+0xc002fe04>
   2feac:	00bfffc4 	movi	r2,-1
   2feb0:	003fee06 	br	2fe6c <__alt_mem_sdram_controller_0+0xc002fe6c>
   2feb4:	90ffffc4 	addi	r3,r18,-1
   2feb8:	01003f84 	movi	r4,254
   2febc:	20ffbf36 	bltu	r4,r3,2fdbc <__alt_mem_sdram_controller_0+0xc002fdbc>
   2fec0:	900b883a 	mov	r5,r18
   2fec4:	dc800005 	stb	r18,0(sp)
   2fec8:	1029883a 	mov	r20,r2
   2fecc:	003fc506 	br	2fde4 <__alt_mem_sdram_controller_0+0xc002fde4>
   2fed0:	800d883a 	mov	r6,r16
   2fed4:	a80b883a 	mov	r5,r21
   2fed8:	9809883a 	mov	r4,r19
   2fedc:	002ff8c0 	call	2ff8c <__swbuf_r>
   2fee0:	10bfffe0 	cmpeqi	r2,r2,-1
   2fee4:	003fef06 	br	2fea4 <__alt_mem_sdram_controller_0+0xc002fea4>

0002fee8 <_fputwc_r>:
   2fee8:	3080030b 	ldhu	r2,12(r6)
   2feec:	10c8000c 	andi	r3,r2,8192
   2fef0:	1800051e 	bne	r3,zero,2ff08 <_fputwc_r+0x20>
   2fef4:	30c01917 	ldw	r3,100(r6)
   2fef8:	10880014 	ori	r2,r2,8192
   2fefc:	3080030d 	sth	r2,12(r6)
   2ff00:	18880014 	ori	r2,r3,8192
   2ff04:	30801915 	stw	r2,100(r6)
   2ff08:	002fd841 	jmpi	2fd84 <__fputwc>

0002ff0c <fputwc>:
   2ff0c:	00800134 	movhi	r2,4
   2ff10:	defffc04 	addi	sp,sp,-16
   2ff14:	10a03d04 	addi	r2,r2,-32524
   2ff18:	dc000115 	stw	r16,4(sp)
   2ff1c:	14000017 	ldw	r16,0(r2)
   2ff20:	dc400215 	stw	r17,8(sp)
   2ff24:	dfc00315 	stw	ra,12(sp)
   2ff28:	2023883a 	mov	r17,r4
   2ff2c:	80000226 	beq	r16,zero,2ff38 <fputwc+0x2c>
   2ff30:	80800e17 	ldw	r2,56(r16)
   2ff34:	10001026 	beq	r2,zero,2ff78 <fputwc+0x6c>
   2ff38:	2880030b 	ldhu	r2,12(r5)
   2ff3c:	10c8000c 	andi	r3,r2,8192
   2ff40:	1800051e 	bne	r3,zero,2ff58 <fputwc+0x4c>
   2ff44:	28c01917 	ldw	r3,100(r5)
   2ff48:	10880014 	ori	r2,r2,8192
   2ff4c:	2880030d 	sth	r2,12(r5)
   2ff50:	18880014 	ori	r2,r3,8192
   2ff54:	28801915 	stw	r2,100(r5)
   2ff58:	280d883a 	mov	r6,r5
   2ff5c:	8009883a 	mov	r4,r16
   2ff60:	880b883a 	mov	r5,r17
   2ff64:	dfc00317 	ldw	ra,12(sp)
   2ff68:	dc400217 	ldw	r17,8(sp)
   2ff6c:	dc000117 	ldw	r16,4(sp)
   2ff70:	dec00404 	addi	sp,sp,16
   2ff74:	002fd841 	jmpi	2fd84 <__fputwc>
   2ff78:	8009883a 	mov	r4,r16
   2ff7c:	d9400015 	stw	r5,0(sp)
   2ff80:	0022e400 	call	22e40 <__sinit>
   2ff84:	d9400017 	ldw	r5,0(sp)
   2ff88:	003feb06 	br	2ff38 <__alt_mem_sdram_controller_0+0xc002ff38>

0002ff8c <__swbuf_r>:
   2ff8c:	defffb04 	addi	sp,sp,-20
   2ff90:	dcc00315 	stw	r19,12(sp)
   2ff94:	dc800215 	stw	r18,8(sp)
   2ff98:	dc000015 	stw	r16,0(sp)
   2ff9c:	dfc00415 	stw	ra,16(sp)
   2ffa0:	dc400115 	stw	r17,4(sp)
   2ffa4:	2025883a 	mov	r18,r4
   2ffa8:	2827883a 	mov	r19,r5
   2ffac:	3021883a 	mov	r16,r6
   2ffb0:	20000226 	beq	r4,zero,2ffbc <__swbuf_r+0x30>
   2ffb4:	20800e17 	ldw	r2,56(r4)
   2ffb8:	10004226 	beq	r2,zero,300c4 <__swbuf_r+0x138>
   2ffbc:	80800617 	ldw	r2,24(r16)
   2ffc0:	8100030b 	ldhu	r4,12(r16)
   2ffc4:	80800215 	stw	r2,8(r16)
   2ffc8:	2080020c 	andi	r2,r4,8
   2ffcc:	10003626 	beq	r2,zero,300a8 <__swbuf_r+0x11c>
   2ffd0:	80c00417 	ldw	r3,16(r16)
   2ffd4:	18003426 	beq	r3,zero,300a8 <__swbuf_r+0x11c>
   2ffd8:	2088000c 	andi	r2,r4,8192
   2ffdc:	9c403fcc 	andi	r17,r19,255
   2ffe0:	10001a26 	beq	r2,zero,3004c <__swbuf_r+0xc0>
   2ffe4:	80800017 	ldw	r2,0(r16)
   2ffe8:	81000517 	ldw	r4,20(r16)
   2ffec:	10c7c83a 	sub	r3,r2,r3
   2fff0:	1900200e 	bge	r3,r4,30074 <__swbuf_r+0xe8>
   2fff4:	18c00044 	addi	r3,r3,1
   2fff8:	81000217 	ldw	r4,8(r16)
   2fffc:	11400044 	addi	r5,r2,1
   30000:	81400015 	stw	r5,0(r16)
   30004:	213fffc4 	addi	r4,r4,-1
   30008:	81000215 	stw	r4,8(r16)
   3000c:	14c00005 	stb	r19,0(r2)
   30010:	80800517 	ldw	r2,20(r16)
   30014:	10c01e26 	beq	r2,r3,30090 <__swbuf_r+0x104>
   30018:	8080030b 	ldhu	r2,12(r16)
   3001c:	1080004c 	andi	r2,r2,1
   30020:	10000226 	beq	r2,zero,3002c <__swbuf_r+0xa0>
   30024:	00800284 	movi	r2,10
   30028:	88801926 	beq	r17,r2,30090 <__swbuf_r+0x104>
   3002c:	8805883a 	mov	r2,r17
   30030:	dfc00417 	ldw	ra,16(sp)
   30034:	dcc00317 	ldw	r19,12(sp)
   30038:	dc800217 	ldw	r18,8(sp)
   3003c:	dc400117 	ldw	r17,4(sp)
   30040:	dc000017 	ldw	r16,0(sp)
   30044:	dec00504 	addi	sp,sp,20
   30048:	f800283a 	ret
   3004c:	81401917 	ldw	r5,100(r16)
   30050:	00b7ffc4 	movi	r2,-8193
   30054:	21080014 	ori	r4,r4,8192
   30058:	2884703a 	and	r2,r5,r2
   3005c:	80801915 	stw	r2,100(r16)
   30060:	80800017 	ldw	r2,0(r16)
   30064:	8100030d 	sth	r4,12(r16)
   30068:	81000517 	ldw	r4,20(r16)
   3006c:	10c7c83a 	sub	r3,r2,r3
   30070:	193fe016 	blt	r3,r4,2fff4 <__alt_mem_sdram_controller_0+0xc002fff4>
   30074:	800b883a 	mov	r5,r16
   30078:	9009883a 	mov	r4,r18
   3007c:	0022a640 	call	22a64 <_fflush_r>
   30080:	1000071e 	bne	r2,zero,300a0 <__swbuf_r+0x114>
   30084:	80800017 	ldw	r2,0(r16)
   30088:	00c00044 	movi	r3,1
   3008c:	003fda06 	br	2fff8 <__alt_mem_sdram_controller_0+0xc002fff8>
   30090:	800b883a 	mov	r5,r16
   30094:	9009883a 	mov	r4,r18
   30098:	0022a640 	call	22a64 <_fflush_r>
   3009c:	103fe326 	beq	r2,zero,3002c <__alt_mem_sdram_controller_0+0xc003002c>
   300a0:	00bfffc4 	movi	r2,-1
   300a4:	003fe206 	br	30030 <__alt_mem_sdram_controller_0+0xc0030030>
   300a8:	800b883a 	mov	r5,r16
   300ac:	9009883a 	mov	r4,r18
   300b0:	00293340 	call	29334 <__swsetup_r>
   300b4:	103ffa1e 	bne	r2,zero,300a0 <__alt_mem_sdram_controller_0+0xc00300a0>
   300b8:	8100030b 	ldhu	r4,12(r16)
   300bc:	80c00417 	ldw	r3,16(r16)
   300c0:	003fc506 	br	2ffd8 <__alt_mem_sdram_controller_0+0xc002ffd8>
   300c4:	0022e400 	call	22e40 <__sinit>
   300c8:	003fbc06 	br	2ffbc <__alt_mem_sdram_controller_0+0xc002ffbc>

000300cc <__swbuf>:
   300cc:	00800134 	movhi	r2,4
   300d0:	10a03d04 	addi	r2,r2,-32524
   300d4:	280d883a 	mov	r6,r5
   300d8:	200b883a 	mov	r5,r4
   300dc:	11000017 	ldw	r4,0(r2)
   300e0:	002ff8c1 	jmpi	2ff8c <__swbuf_r>

000300e4 <_wcrtomb_r>:
   300e4:	defff604 	addi	sp,sp,-40
   300e8:	00800134 	movhi	r2,4
   300ec:	dc800815 	stw	r18,32(sp)
   300f0:	dc400715 	stw	r17,28(sp)
   300f4:	dc000615 	stw	r16,24(sp)
   300f8:	10a04104 	addi	r2,r2,-32508
   300fc:	dfc00915 	stw	ra,36(sp)
   30100:	2021883a 	mov	r16,r4
   30104:	3823883a 	mov	r17,r7
   30108:	14800017 	ldw	r18,0(r2)
   3010c:	28001426 	beq	r5,zero,30160 <_wcrtomb_r+0x7c>
   30110:	d9400415 	stw	r5,16(sp)
   30114:	d9800515 	stw	r6,20(sp)
   30118:	002b4100 	call	2b410 <__locale_charset>
   3011c:	d9800517 	ldw	r6,20(sp)
   30120:	d9400417 	ldw	r5,16(sp)
   30124:	100f883a 	mov	r7,r2
   30128:	dc400015 	stw	r17,0(sp)
   3012c:	8009883a 	mov	r4,r16
   30130:	903ee83a 	callr	r18
   30134:	00ffffc4 	movi	r3,-1
   30138:	10c0031e 	bne	r2,r3,30148 <_wcrtomb_r+0x64>
   3013c:	88000015 	stw	zero,0(r17)
   30140:	00c02284 	movi	r3,138
   30144:	80c00015 	stw	r3,0(r16)
   30148:	dfc00917 	ldw	ra,36(sp)
   3014c:	dc800817 	ldw	r18,32(sp)
   30150:	dc400717 	ldw	r17,28(sp)
   30154:	dc000617 	ldw	r16,24(sp)
   30158:	dec00a04 	addi	sp,sp,40
   3015c:	f800283a 	ret
   30160:	002b4100 	call	2b410 <__locale_charset>
   30164:	100f883a 	mov	r7,r2
   30168:	dc400015 	stw	r17,0(sp)
   3016c:	000d883a 	mov	r6,zero
   30170:	d9400104 	addi	r5,sp,4
   30174:	8009883a 	mov	r4,r16
   30178:	903ee83a 	callr	r18
   3017c:	003fed06 	br	30134 <__alt_mem_sdram_controller_0+0xc0030134>

00030180 <wcrtomb>:
   30180:	defff604 	addi	sp,sp,-40
   30184:	00800134 	movhi	r2,4
   30188:	dc800615 	stw	r18,24(sp)
   3018c:	dc400515 	stw	r17,20(sp)
   30190:	10a03d04 	addi	r2,r2,-32524
   30194:	dfc00915 	stw	ra,36(sp)
   30198:	dd000815 	stw	r20,32(sp)
   3019c:	dcc00715 	stw	r19,28(sp)
   301a0:	dc000415 	stw	r16,16(sp)
   301a4:	3025883a 	mov	r18,r6
   301a8:	14400017 	ldw	r17,0(r2)
   301ac:	20001926 	beq	r4,zero,30214 <wcrtomb+0x94>
   301b0:	00800134 	movhi	r2,4
   301b4:	10a04104 	addi	r2,r2,-32508
   301b8:	15000017 	ldw	r20,0(r2)
   301bc:	2021883a 	mov	r16,r4
   301c0:	2827883a 	mov	r19,r5
   301c4:	002b4100 	call	2b410 <__locale_charset>
   301c8:	100f883a 	mov	r7,r2
   301cc:	dc800015 	stw	r18,0(sp)
   301d0:	980d883a 	mov	r6,r19
   301d4:	800b883a 	mov	r5,r16
   301d8:	8809883a 	mov	r4,r17
   301dc:	a03ee83a 	callr	r20
   301e0:	00ffffc4 	movi	r3,-1
   301e4:	10c0031e 	bne	r2,r3,301f4 <wcrtomb+0x74>
   301e8:	90000015 	stw	zero,0(r18)
   301ec:	00c02284 	movi	r3,138
   301f0:	88c00015 	stw	r3,0(r17)
   301f4:	dfc00917 	ldw	ra,36(sp)
   301f8:	dd000817 	ldw	r20,32(sp)
   301fc:	dcc00717 	ldw	r19,28(sp)
   30200:	dc800617 	ldw	r18,24(sp)
   30204:	dc400517 	ldw	r17,20(sp)
   30208:	dc000417 	ldw	r16,16(sp)
   3020c:	dec00a04 	addi	sp,sp,40
   30210:	f800283a 	ret
   30214:	00800134 	movhi	r2,4
   30218:	10a04104 	addi	r2,r2,-32508
   3021c:	14000017 	ldw	r16,0(r2)
   30220:	002b4100 	call	2b410 <__locale_charset>
   30224:	100f883a 	mov	r7,r2
   30228:	dc800015 	stw	r18,0(sp)
   3022c:	000d883a 	mov	r6,zero
   30230:	d9400104 	addi	r5,sp,4
   30234:	8809883a 	mov	r4,r17
   30238:	803ee83a 	callr	r16
   3023c:	003fe806 	br	301e0 <__alt_mem_sdram_controller_0+0xc00301e0>

00030240 <__ascii_wctomb>:
   30240:	28000526 	beq	r5,zero,30258 <__ascii_wctomb+0x18>
   30244:	00803fc4 	movi	r2,255
   30248:	11800536 	bltu	r2,r6,30260 <__ascii_wctomb+0x20>
   3024c:	29800005 	stb	r6,0(r5)
   30250:	00800044 	movi	r2,1
   30254:	f800283a 	ret
   30258:	0005883a 	mov	r2,zero
   3025c:	f800283a 	ret
   30260:	00802284 	movi	r2,138
   30264:	20800015 	stw	r2,0(r4)
   30268:	00bfffc4 	movi	r2,-1
   3026c:	f800283a 	ret

00030270 <_wctomb_r>:
   30270:	00800134 	movhi	r2,4
   30274:	defff904 	addi	sp,sp,-28
   30278:	10a04104 	addi	r2,r2,-32508
   3027c:	dfc00615 	stw	ra,24(sp)
   30280:	dc400515 	stw	r17,20(sp)
   30284:	dc000415 	stw	r16,16(sp)
   30288:	3823883a 	mov	r17,r7
   3028c:	14000017 	ldw	r16,0(r2)
   30290:	d9000115 	stw	r4,4(sp)
   30294:	d9400215 	stw	r5,8(sp)
   30298:	d9800315 	stw	r6,12(sp)
   3029c:	002b4100 	call	2b410 <__locale_charset>
   302a0:	d9800317 	ldw	r6,12(sp)
   302a4:	d9400217 	ldw	r5,8(sp)
   302a8:	d9000117 	ldw	r4,4(sp)
   302ac:	100f883a 	mov	r7,r2
   302b0:	dc400015 	stw	r17,0(sp)
   302b4:	803ee83a 	callr	r16
   302b8:	dfc00617 	ldw	ra,24(sp)
   302bc:	dc400517 	ldw	r17,20(sp)
   302c0:	dc000417 	ldw	r16,16(sp)
   302c4:	dec00704 	addi	sp,sp,28
   302c8:	f800283a 	ret

000302cc <__muldi3>:
   302cc:	223fffcc 	andi	r8,r4,65535
   302d0:	2006d43a 	srli	r3,r4,16
   302d4:	32bfffcc 	andi	r10,r6,65535
   302d8:	3012d43a 	srli	r9,r6,16
   302dc:	4297383a 	mul	r11,r8,r10
   302e0:	1a95383a 	mul	r10,r3,r10
   302e4:	4251383a 	mul	r8,r8,r9
   302e8:	5804d43a 	srli	r2,r11,16
   302ec:	4291883a 	add	r8,r8,r10
   302f0:	1205883a 	add	r2,r2,r8
   302f4:	1a51383a 	mul	r8,r3,r9
   302f8:	1280022e 	bgeu	r2,r10,30304 <__muldi3+0x38>
   302fc:	00c00074 	movhi	r3,1
   30300:	40d1883a 	add	r8,r8,r3
   30304:	1006d43a 	srli	r3,r2,16
   30308:	21cf383a 	mul	r7,r4,r7
   3030c:	314b383a 	mul	r5,r6,r5
   30310:	1004943a 	slli	r2,r2,16
   30314:	1a11883a 	add	r8,r3,r8
   30318:	5affffcc 	andi	r11,r11,65535
   3031c:	3947883a 	add	r3,r7,r5
   30320:	12c5883a 	add	r2,r2,r11
   30324:	1a07883a 	add	r3,r3,r8
   30328:	f800283a 	ret

0003032c <__udivdi3>:
   3032c:	defff504 	addi	sp,sp,-44
   30330:	dcc00415 	stw	r19,16(sp)
   30334:	dc000115 	stw	r16,4(sp)
   30338:	dfc00a15 	stw	ra,40(sp)
   3033c:	df000915 	stw	fp,36(sp)
   30340:	ddc00815 	stw	r23,32(sp)
   30344:	dd800715 	stw	r22,28(sp)
   30348:	dd400615 	stw	r21,24(sp)
   3034c:	dd000515 	stw	r20,20(sp)
   30350:	dc800315 	stw	r18,12(sp)
   30354:	dc400215 	stw	r17,8(sp)
   30358:	2027883a 	mov	r19,r4
   3035c:	2821883a 	mov	r16,r5
   30360:	3800411e 	bne	r7,zero,30468 <__udivdi3+0x13c>
   30364:	3023883a 	mov	r17,r6
   30368:	2025883a 	mov	r18,r4
   3036c:	2980522e 	bgeu	r5,r6,304b8 <__udivdi3+0x18c>
   30370:	00bfffd4 	movui	r2,65535
   30374:	282d883a 	mov	r22,r5
   30378:	1180a836 	bltu	r2,r6,3061c <__udivdi3+0x2f0>
   3037c:	00803fc4 	movi	r2,255
   30380:	1185803a 	cmpltu	r2,r2,r6
   30384:	100490fa 	slli	r2,r2,3
   30388:	3086d83a 	srl	r3,r6,r2
   3038c:	010000f4 	movhi	r4,3
   30390:	21194404 	addi	r4,r4,25872
   30394:	20c7883a 	add	r3,r4,r3
   30398:	18c00003 	ldbu	r3,0(r3)
   3039c:	1885883a 	add	r2,r3,r2
   303a0:	00c00804 	movi	r3,32
   303a4:	1887c83a 	sub	r3,r3,r2
   303a8:	18000526 	beq	r3,zero,303c0 <__udivdi3+0x94>
   303ac:	80e0983a 	sll	r16,r16,r3
   303b0:	9884d83a 	srl	r2,r19,r2
   303b4:	30e2983a 	sll	r17,r6,r3
   303b8:	98e4983a 	sll	r18,r19,r3
   303bc:	142cb03a 	or	r22,r2,r16
   303c0:	882ad43a 	srli	r21,r17,16
   303c4:	b009883a 	mov	r4,r22
   303c8:	8d3fffcc 	andi	r20,r17,65535
   303cc:	a80b883a 	mov	r5,r21
   303d0:	00226700 	call	22670 <__umodsi3>
   303d4:	b009883a 	mov	r4,r22
   303d8:	a80b883a 	mov	r5,r21
   303dc:	1027883a 	mov	r19,r2
   303e0:	002260c0 	call	2260c <__udivsi3>
   303e4:	102d883a 	mov	r22,r2
   303e8:	9826943a 	slli	r19,r19,16
   303ec:	9004d43a 	srli	r2,r18,16
   303f0:	a5a1383a 	mul	r16,r20,r22
   303f4:	14c4b03a 	or	r2,r2,r19
   303f8:	1400052e 	bgeu	r2,r16,30410 <__udivdi3+0xe4>
   303fc:	1445883a 	add	r2,r2,r17
   30400:	b0ffffc4 	addi	r3,r22,-1
   30404:	14400136 	bltu	r2,r17,3040c <__udivdi3+0xe0>
   30408:	14012336 	bltu	r2,r16,30898 <__udivdi3+0x56c>
   3040c:	182d883a 	mov	r22,r3
   30410:	1421c83a 	sub	r16,r2,r16
   30414:	a80b883a 	mov	r5,r21
   30418:	8009883a 	mov	r4,r16
   3041c:	00226700 	call	22670 <__umodsi3>
   30420:	1027883a 	mov	r19,r2
   30424:	a80b883a 	mov	r5,r21
   30428:	8009883a 	mov	r4,r16
   3042c:	002260c0 	call	2260c <__udivsi3>
   30430:	9826943a 	slli	r19,r19,16
   30434:	a0a9383a 	mul	r20,r20,r2
   30438:	94bfffcc 	andi	r18,r18,65535
   3043c:	94e4b03a 	or	r18,r18,r19
   30440:	9500052e 	bgeu	r18,r20,30458 <__udivdi3+0x12c>
   30444:	8ca5883a 	add	r18,r17,r18
   30448:	10ffffc4 	addi	r3,r2,-1
   3044c:	9440f136 	bltu	r18,r17,30814 <__udivdi3+0x4e8>
   30450:	9500f02e 	bgeu	r18,r20,30814 <__udivdi3+0x4e8>
   30454:	10bfff84 	addi	r2,r2,-2
   30458:	b00c943a 	slli	r6,r22,16
   3045c:	0007883a 	mov	r3,zero
   30460:	3084b03a 	or	r2,r6,r2
   30464:	00005906 	br	305cc <__udivdi3+0x2a0>
   30468:	29c05636 	bltu	r5,r7,305c4 <__udivdi3+0x298>
   3046c:	00bfffd4 	movui	r2,65535
   30470:	11c0622e 	bgeu	r2,r7,305fc <__udivdi3+0x2d0>
   30474:	00804034 	movhi	r2,256
   30478:	10bfffc4 	addi	r2,r2,-1
   3047c:	11c0ee36 	bltu	r2,r7,30838 <__udivdi3+0x50c>
   30480:	00800404 	movi	r2,16
   30484:	3886d83a 	srl	r3,r7,r2
   30488:	010000f4 	movhi	r4,3
   3048c:	21194404 	addi	r4,r4,25872
   30490:	20c7883a 	add	r3,r4,r3
   30494:	18c00003 	ldbu	r3,0(r3)
   30498:	05400804 	movi	r21,32
   3049c:	1885883a 	add	r2,r3,r2
   304a0:	a8abc83a 	sub	r21,r21,r2
   304a4:	a800621e 	bne	r21,zero,30630 <__udivdi3+0x304>
   304a8:	3c00e936 	bltu	r7,r16,30850 <__udivdi3+0x524>
   304ac:	9985403a 	cmpgeu	r2,r19,r6
   304b0:	0007883a 	mov	r3,zero
   304b4:	00004506 	br	305cc <__udivdi3+0x2a0>
   304b8:	3000041e 	bne	r6,zero,304cc <__udivdi3+0x1a0>
   304bc:	000b883a 	mov	r5,zero
   304c0:	01000044 	movi	r4,1
   304c4:	002260c0 	call	2260c <__udivsi3>
   304c8:	1023883a 	mov	r17,r2
   304cc:	00bfffd4 	movui	r2,65535
   304d0:	14404e2e 	bgeu	r2,r17,3060c <__udivdi3+0x2e0>
   304d4:	00804034 	movhi	r2,256
   304d8:	10bfffc4 	addi	r2,r2,-1
   304dc:	1440d836 	bltu	r2,r17,30840 <__udivdi3+0x514>
   304e0:	00800404 	movi	r2,16
   304e4:	8886d83a 	srl	r3,r17,r2
   304e8:	010000f4 	movhi	r4,3
   304ec:	21194404 	addi	r4,r4,25872
   304f0:	20c7883a 	add	r3,r4,r3
   304f4:	18c00003 	ldbu	r3,0(r3)
   304f8:	1885883a 	add	r2,r3,r2
   304fc:	00c00804 	movi	r3,32
   30500:	1887c83a 	sub	r3,r3,r2
   30504:	18008f1e 	bne	r3,zero,30744 <__udivdi3+0x418>
   30508:	882ad43a 	srli	r21,r17,16
   3050c:	8461c83a 	sub	r16,r16,r17
   30510:	8d3fffcc 	andi	r20,r17,65535
   30514:	00c00044 	movi	r3,1
   30518:	8009883a 	mov	r4,r16
   3051c:	a80b883a 	mov	r5,r21
   30520:	d8c00015 	stw	r3,0(sp)
   30524:	00226700 	call	22670 <__umodsi3>
   30528:	8009883a 	mov	r4,r16
   3052c:	a80b883a 	mov	r5,r21
   30530:	1027883a 	mov	r19,r2
   30534:	002260c0 	call	2260c <__udivsi3>
   30538:	9826943a 	slli	r19,r19,16
   3053c:	9008d43a 	srli	r4,r18,16
   30540:	1521383a 	mul	r16,r2,r20
   30544:	102d883a 	mov	r22,r2
   30548:	24c8b03a 	or	r4,r4,r19
   3054c:	d8c00017 	ldw	r3,0(sp)
   30550:	2400052e 	bgeu	r4,r16,30568 <__udivdi3+0x23c>
   30554:	2449883a 	add	r4,r4,r17
   30558:	b0bfffc4 	addi	r2,r22,-1
   3055c:	24400136 	bltu	r4,r17,30564 <__udivdi3+0x238>
   30560:	2400ca36 	bltu	r4,r16,3088c <__udivdi3+0x560>
   30564:	102d883a 	mov	r22,r2
   30568:	2421c83a 	sub	r16,r4,r16
   3056c:	a80b883a 	mov	r5,r21
   30570:	8009883a 	mov	r4,r16
   30574:	d8c00015 	stw	r3,0(sp)
   30578:	00226700 	call	22670 <__umodsi3>
   3057c:	1027883a 	mov	r19,r2
   30580:	a80b883a 	mov	r5,r21
   30584:	8009883a 	mov	r4,r16
   30588:	002260c0 	call	2260c <__udivsi3>
   3058c:	9826943a 	slli	r19,r19,16
   30590:	1529383a 	mul	r20,r2,r20
   30594:	94bfffcc 	andi	r18,r18,65535
   30598:	94e4b03a 	or	r18,r18,r19
   3059c:	d8c00017 	ldw	r3,0(sp)
   305a0:	9500052e 	bgeu	r18,r20,305b8 <__udivdi3+0x28c>
   305a4:	8ca5883a 	add	r18,r17,r18
   305a8:	113fffc4 	addi	r4,r2,-1
   305ac:	94409736 	bltu	r18,r17,3080c <__udivdi3+0x4e0>
   305b0:	9500962e 	bgeu	r18,r20,3080c <__udivdi3+0x4e0>
   305b4:	10bfff84 	addi	r2,r2,-2
   305b8:	b00c943a 	slli	r6,r22,16
   305bc:	3084b03a 	or	r2,r6,r2
   305c0:	00000206 	br	305cc <__udivdi3+0x2a0>
   305c4:	0007883a 	mov	r3,zero
   305c8:	0005883a 	mov	r2,zero
   305cc:	dfc00a17 	ldw	ra,40(sp)
   305d0:	df000917 	ldw	fp,36(sp)
   305d4:	ddc00817 	ldw	r23,32(sp)
   305d8:	dd800717 	ldw	r22,28(sp)
   305dc:	dd400617 	ldw	r21,24(sp)
   305e0:	dd000517 	ldw	r20,20(sp)
   305e4:	dcc00417 	ldw	r19,16(sp)
   305e8:	dc800317 	ldw	r18,12(sp)
   305ec:	dc400217 	ldw	r17,8(sp)
   305f0:	dc000117 	ldw	r16,4(sp)
   305f4:	dec00b04 	addi	sp,sp,44
   305f8:	f800283a 	ret
   305fc:	00803fc4 	movi	r2,255
   30600:	11c5803a 	cmpltu	r2,r2,r7
   30604:	100490fa 	slli	r2,r2,3
   30608:	003f9e06 	br	30484 <__alt_mem_sdram_controller_0+0xc0030484>
   3060c:	00803fc4 	movi	r2,255
   30610:	1445803a 	cmpltu	r2,r2,r17
   30614:	100490fa 	slli	r2,r2,3
   30618:	003fb206 	br	304e4 <__alt_mem_sdram_controller_0+0xc00304e4>
   3061c:	00804034 	movhi	r2,256
   30620:	10bfffc4 	addi	r2,r2,-1
   30624:	11808836 	bltu	r2,r6,30848 <__udivdi3+0x51c>
   30628:	00800404 	movi	r2,16
   3062c:	003f5606 	br	30388 <__alt_mem_sdram_controller_0+0xc0030388>
   30630:	30aed83a 	srl	r23,r6,r2
   30634:	3d4e983a 	sll	r7,r7,r21
   30638:	80acd83a 	srl	r22,r16,r2
   3063c:	9884d83a 	srl	r2,r19,r2
   30640:	3deeb03a 	or	r23,r7,r23
   30644:	b824d43a 	srli	r18,r23,16
   30648:	8560983a 	sll	r16,r16,r21
   3064c:	b009883a 	mov	r4,r22
   30650:	900b883a 	mov	r5,r18
   30654:	3568983a 	sll	r20,r6,r21
   30658:	1420b03a 	or	r16,r2,r16
   3065c:	00226700 	call	22670 <__umodsi3>
   30660:	b009883a 	mov	r4,r22
   30664:	900b883a 	mov	r5,r18
   30668:	1023883a 	mov	r17,r2
   3066c:	002260c0 	call	2260c <__udivsi3>
   30670:	8808943a 	slli	r4,r17,16
   30674:	bf3fffcc 	andi	fp,r23,65535
   30678:	8006d43a 	srli	r3,r16,16
   3067c:	e0a3383a 	mul	r17,fp,r2
   30680:	100d883a 	mov	r6,r2
   30684:	1906b03a 	or	r3,r3,r4
   30688:	1c40042e 	bgeu	r3,r17,3069c <__udivdi3+0x370>
   3068c:	1dc7883a 	add	r3,r3,r23
   30690:	10bfffc4 	addi	r2,r2,-1
   30694:	1dc0752e 	bgeu	r3,r23,3086c <__udivdi3+0x540>
   30698:	100d883a 	mov	r6,r2
   3069c:	1c63c83a 	sub	r17,r3,r17
   306a0:	900b883a 	mov	r5,r18
   306a4:	8809883a 	mov	r4,r17
   306a8:	d9800015 	stw	r6,0(sp)
   306ac:	00226700 	call	22670 <__umodsi3>
   306b0:	102d883a 	mov	r22,r2
   306b4:	8809883a 	mov	r4,r17
   306b8:	900b883a 	mov	r5,r18
   306bc:	002260c0 	call	2260c <__udivsi3>
   306c0:	b02c943a 	slli	r22,r22,16
   306c4:	e089383a 	mul	r4,fp,r2
   306c8:	843fffcc 	andi	r16,r16,65535
   306cc:	85a0b03a 	or	r16,r16,r22
   306d0:	d9800017 	ldw	r6,0(sp)
   306d4:	8100042e 	bgeu	r16,r4,306e8 <__udivdi3+0x3bc>
   306d8:	85e1883a 	add	r16,r16,r23
   306dc:	10ffffc4 	addi	r3,r2,-1
   306e0:	85c05e2e 	bgeu	r16,r23,3085c <__udivdi3+0x530>
   306e4:	1805883a 	mov	r2,r3
   306e8:	300c943a 	slli	r6,r6,16
   306ec:	a17fffcc 	andi	r5,r20,65535
   306f0:	a028d43a 	srli	r20,r20,16
   306f4:	3084b03a 	or	r2,r6,r2
   306f8:	10ffffcc 	andi	r3,r2,65535
   306fc:	100cd43a 	srli	r6,r2,16
   30700:	194f383a 	mul	r7,r3,r5
   30704:	1d07383a 	mul	r3,r3,r20
   30708:	314b383a 	mul	r5,r6,r5
   3070c:	3810d43a 	srli	r8,r7,16
   30710:	8121c83a 	sub	r16,r16,r4
   30714:	1947883a 	add	r3,r3,r5
   30718:	40c7883a 	add	r3,r8,r3
   3071c:	350d383a 	mul	r6,r6,r20
   30720:	1940022e 	bgeu	r3,r5,3072c <__udivdi3+0x400>
   30724:	01000074 	movhi	r4,1
   30728:	310d883a 	add	r6,r6,r4
   3072c:	1828d43a 	srli	r20,r3,16
   30730:	a18d883a 	add	r6,r20,r6
   30734:	81803e36 	bltu	r16,r6,30830 <__udivdi3+0x504>
   30738:	81803826 	beq	r16,r6,3081c <__udivdi3+0x4f0>
   3073c:	0007883a 	mov	r3,zero
   30740:	003fa206 	br	305cc <__alt_mem_sdram_controller_0+0xc00305cc>
   30744:	88e2983a 	sll	r17,r17,r3
   30748:	80a8d83a 	srl	r20,r16,r2
   3074c:	80e0983a 	sll	r16,r16,r3
   30750:	882ad43a 	srli	r21,r17,16
   30754:	9884d83a 	srl	r2,r19,r2
   30758:	a009883a 	mov	r4,r20
   3075c:	a80b883a 	mov	r5,r21
   30760:	142eb03a 	or	r23,r2,r16
   30764:	98e4983a 	sll	r18,r19,r3
   30768:	00226700 	call	22670 <__umodsi3>
   3076c:	a009883a 	mov	r4,r20
   30770:	a80b883a 	mov	r5,r21
   30774:	1021883a 	mov	r16,r2
   30778:	002260c0 	call	2260c <__udivsi3>
   3077c:	1039883a 	mov	fp,r2
   30780:	8d3fffcc 	andi	r20,r17,65535
   30784:	8020943a 	slli	r16,r16,16
   30788:	b804d43a 	srli	r2,r23,16
   3078c:	a72d383a 	mul	r22,r20,fp
   30790:	1404b03a 	or	r2,r2,r16
   30794:	1580062e 	bgeu	r2,r22,307b0 <__udivdi3+0x484>
   30798:	1445883a 	add	r2,r2,r17
   3079c:	e0ffffc4 	addi	r3,fp,-1
   307a0:	14403836 	bltu	r2,r17,30884 <__udivdi3+0x558>
   307a4:	1580372e 	bgeu	r2,r22,30884 <__udivdi3+0x558>
   307a8:	e73fff84 	addi	fp,fp,-2
   307ac:	1445883a 	add	r2,r2,r17
   307b0:	15adc83a 	sub	r22,r2,r22
   307b4:	a80b883a 	mov	r5,r21
   307b8:	b009883a 	mov	r4,r22
   307bc:	00226700 	call	22670 <__umodsi3>
   307c0:	1027883a 	mov	r19,r2
   307c4:	b009883a 	mov	r4,r22
   307c8:	a80b883a 	mov	r5,r21
   307cc:	002260c0 	call	2260c <__udivsi3>
   307d0:	9826943a 	slli	r19,r19,16
   307d4:	a0a1383a 	mul	r16,r20,r2
   307d8:	b93fffcc 	andi	r4,r23,65535
   307dc:	24c8b03a 	or	r4,r4,r19
   307e0:	2400062e 	bgeu	r4,r16,307fc <__udivdi3+0x4d0>
   307e4:	2449883a 	add	r4,r4,r17
   307e8:	10ffffc4 	addi	r3,r2,-1
   307ec:	24402336 	bltu	r4,r17,3087c <__udivdi3+0x550>
   307f0:	2400222e 	bgeu	r4,r16,3087c <__udivdi3+0x550>
   307f4:	10bfff84 	addi	r2,r2,-2
   307f8:	2449883a 	add	r4,r4,r17
   307fc:	e038943a 	slli	fp,fp,16
   30800:	2421c83a 	sub	r16,r4,r16
   30804:	e086b03a 	or	r3,fp,r2
   30808:	003f4306 	br	30518 <__alt_mem_sdram_controller_0+0xc0030518>
   3080c:	2005883a 	mov	r2,r4
   30810:	003f6906 	br	305b8 <__alt_mem_sdram_controller_0+0xc00305b8>
   30814:	1805883a 	mov	r2,r3
   30818:	003f0f06 	br	30458 <__alt_mem_sdram_controller_0+0xc0030458>
   3081c:	1806943a 	slli	r3,r3,16
   30820:	9d66983a 	sll	r19,r19,r21
   30824:	39ffffcc 	andi	r7,r7,65535
   30828:	19c7883a 	add	r3,r3,r7
   3082c:	98ffc32e 	bgeu	r19,r3,3073c <__alt_mem_sdram_controller_0+0xc003073c>
   30830:	10bfffc4 	addi	r2,r2,-1
   30834:	003fc106 	br	3073c <__alt_mem_sdram_controller_0+0xc003073c>
   30838:	00800604 	movi	r2,24
   3083c:	003f1106 	br	30484 <__alt_mem_sdram_controller_0+0xc0030484>
   30840:	00800604 	movi	r2,24
   30844:	003f2706 	br	304e4 <__alt_mem_sdram_controller_0+0xc00304e4>
   30848:	00800604 	movi	r2,24
   3084c:	003ece06 	br	30388 <__alt_mem_sdram_controller_0+0xc0030388>
   30850:	0007883a 	mov	r3,zero
   30854:	00800044 	movi	r2,1
   30858:	003f5c06 	br	305cc <__alt_mem_sdram_controller_0+0xc00305cc>
   3085c:	813fa12e 	bgeu	r16,r4,306e4 <__alt_mem_sdram_controller_0+0xc00306e4>
   30860:	10bfff84 	addi	r2,r2,-2
   30864:	85e1883a 	add	r16,r16,r23
   30868:	003f9f06 	br	306e8 <__alt_mem_sdram_controller_0+0xc00306e8>
   3086c:	1c7f8a2e 	bgeu	r3,r17,30698 <__alt_mem_sdram_controller_0+0xc0030698>
   30870:	31bfff84 	addi	r6,r6,-2
   30874:	1dc7883a 	add	r3,r3,r23
   30878:	003f8806 	br	3069c <__alt_mem_sdram_controller_0+0xc003069c>
   3087c:	1805883a 	mov	r2,r3
   30880:	003fde06 	br	307fc <__alt_mem_sdram_controller_0+0xc00307fc>
   30884:	1839883a 	mov	fp,r3
   30888:	003fc906 	br	307b0 <__alt_mem_sdram_controller_0+0xc00307b0>
   3088c:	b5bfff84 	addi	r22,r22,-2
   30890:	2449883a 	add	r4,r4,r17
   30894:	003f3406 	br	30568 <__alt_mem_sdram_controller_0+0xc0030568>
   30898:	b5bfff84 	addi	r22,r22,-2
   3089c:	1445883a 	add	r2,r2,r17
   308a0:	003edb06 	br	30410 <__alt_mem_sdram_controller_0+0xc0030410>

000308a4 <__umoddi3>:
   308a4:	defff404 	addi	sp,sp,-48
   308a8:	df000a15 	stw	fp,40(sp)
   308ac:	dc400315 	stw	r17,12(sp)
   308b0:	dc000215 	stw	r16,8(sp)
   308b4:	dfc00b15 	stw	ra,44(sp)
   308b8:	ddc00915 	stw	r23,36(sp)
   308bc:	dd800815 	stw	r22,32(sp)
   308c0:	dd400715 	stw	r21,28(sp)
   308c4:	dd000615 	stw	r20,24(sp)
   308c8:	dcc00515 	stw	r19,20(sp)
   308cc:	dc800415 	stw	r18,16(sp)
   308d0:	2021883a 	mov	r16,r4
   308d4:	2823883a 	mov	r17,r5
   308d8:	2839883a 	mov	fp,r5
   308dc:	38003c1e 	bne	r7,zero,309d0 <__umoddi3+0x12c>
   308e0:	3027883a 	mov	r19,r6
   308e4:	2029883a 	mov	r20,r4
   308e8:	2980512e 	bgeu	r5,r6,30a30 <__umoddi3+0x18c>
   308ec:	00bfffd4 	movui	r2,65535
   308f0:	11809a36 	bltu	r2,r6,30b5c <__umoddi3+0x2b8>
   308f4:	01003fc4 	movi	r4,255
   308f8:	2189803a 	cmpltu	r4,r4,r6
   308fc:	200890fa 	slli	r4,r4,3
   30900:	3104d83a 	srl	r2,r6,r4
   30904:	00c000f4 	movhi	r3,3
   30908:	18d94404 	addi	r3,r3,25872
   3090c:	1885883a 	add	r2,r3,r2
   30910:	10c00003 	ldbu	r3,0(r2)
   30914:	00800804 	movi	r2,32
   30918:	1909883a 	add	r4,r3,r4
   3091c:	1125c83a 	sub	r18,r2,r4
   30920:	90000526 	beq	r18,zero,30938 <__umoddi3+0x94>
   30924:	8ca2983a 	sll	r17,r17,r18
   30928:	8108d83a 	srl	r4,r16,r4
   3092c:	34a6983a 	sll	r19,r6,r18
   30930:	84a8983a 	sll	r20,r16,r18
   30934:	2478b03a 	or	fp,r4,r17
   30938:	982ed43a 	srli	r23,r19,16
   3093c:	e009883a 	mov	r4,fp
   30940:	9dbfffcc 	andi	r22,r19,65535
   30944:	b80b883a 	mov	r5,r23
   30948:	00226700 	call	22670 <__umodsi3>
   3094c:	e009883a 	mov	r4,fp
   30950:	b80b883a 	mov	r5,r23
   30954:	102b883a 	mov	r21,r2
   30958:	002260c0 	call	2260c <__udivsi3>
   3095c:	a806943a 	slli	r3,r21,16
   30960:	a008d43a 	srli	r4,r20,16
   30964:	b085383a 	mul	r2,r22,r2
   30968:	20c8b03a 	or	r4,r4,r3
   3096c:	2080032e 	bgeu	r4,r2,3097c <__umoddi3+0xd8>
   30970:	24c9883a 	add	r4,r4,r19
   30974:	24c00136 	bltu	r4,r19,3097c <__umoddi3+0xd8>
   30978:	20811036 	bltu	r4,r2,30dbc <__umoddi3+0x518>
   3097c:	20abc83a 	sub	r21,r4,r2
   30980:	b80b883a 	mov	r5,r23
   30984:	a809883a 	mov	r4,r21
   30988:	00226700 	call	22670 <__umodsi3>
   3098c:	1023883a 	mov	r17,r2
   30990:	b80b883a 	mov	r5,r23
   30994:	a809883a 	mov	r4,r21
   30998:	002260c0 	call	2260c <__udivsi3>
   3099c:	8822943a 	slli	r17,r17,16
   309a0:	b085383a 	mul	r2,r22,r2
   309a4:	a0ffffcc 	andi	r3,r20,65535
   309a8:	1c46b03a 	or	r3,r3,r17
   309ac:	1880042e 	bgeu	r3,r2,309c0 <__umoddi3+0x11c>
   309b0:	1cc7883a 	add	r3,r3,r19
   309b4:	1cc00236 	bltu	r3,r19,309c0 <__umoddi3+0x11c>
   309b8:	1880012e 	bgeu	r3,r2,309c0 <__umoddi3+0x11c>
   309bc:	1cc7883a 	add	r3,r3,r19
   309c0:	1885c83a 	sub	r2,r3,r2
   309c4:	1484d83a 	srl	r2,r2,r18
   309c8:	0007883a 	mov	r3,zero
   309cc:	00004f06 	br	30b0c <__umoddi3+0x268>
   309d0:	29c04c36 	bltu	r5,r7,30b04 <__umoddi3+0x260>
   309d4:	00bfffd4 	movui	r2,65535
   309d8:	11c0582e 	bgeu	r2,r7,30b3c <__umoddi3+0x298>
   309dc:	00804034 	movhi	r2,256
   309e0:	10bfffc4 	addi	r2,r2,-1
   309e4:	11c0e736 	bltu	r2,r7,30d84 <__umoddi3+0x4e0>
   309e8:	01000404 	movi	r4,16
   309ec:	3904d83a 	srl	r2,r7,r4
   309f0:	00c000f4 	movhi	r3,3
   309f4:	18d94404 	addi	r3,r3,25872
   309f8:	1885883a 	add	r2,r3,r2
   309fc:	14c00003 	ldbu	r19,0(r2)
   30a00:	00c00804 	movi	r3,32
   30a04:	9927883a 	add	r19,r19,r4
   30a08:	1ce9c83a 	sub	r20,r3,r19
   30a0c:	a000581e 	bne	r20,zero,30b70 <__umoddi3+0x2cc>
   30a10:	3c400136 	bltu	r7,r17,30a18 <__umoddi3+0x174>
   30a14:	8180eb36 	bltu	r16,r6,30dc4 <__umoddi3+0x520>
   30a18:	8185c83a 	sub	r2,r16,r6
   30a1c:	89e3c83a 	sub	r17,r17,r7
   30a20:	8089803a 	cmpltu	r4,r16,r2
   30a24:	8939c83a 	sub	fp,r17,r4
   30a28:	e007883a 	mov	r3,fp
   30a2c:	00003706 	br	30b0c <__umoddi3+0x268>
   30a30:	3000041e 	bne	r6,zero,30a44 <__umoddi3+0x1a0>
   30a34:	000b883a 	mov	r5,zero
   30a38:	01000044 	movi	r4,1
   30a3c:	002260c0 	call	2260c <__udivsi3>
   30a40:	1027883a 	mov	r19,r2
   30a44:	00bfffd4 	movui	r2,65535
   30a48:	14c0402e 	bgeu	r2,r19,30b4c <__umoddi3+0x2a8>
   30a4c:	00804034 	movhi	r2,256
   30a50:	10bfffc4 	addi	r2,r2,-1
   30a54:	14c0cd36 	bltu	r2,r19,30d8c <__umoddi3+0x4e8>
   30a58:	00800404 	movi	r2,16
   30a5c:	9886d83a 	srl	r3,r19,r2
   30a60:	010000f4 	movhi	r4,3
   30a64:	21194404 	addi	r4,r4,25872
   30a68:	20c7883a 	add	r3,r4,r3
   30a6c:	18c00003 	ldbu	r3,0(r3)
   30a70:	1887883a 	add	r3,r3,r2
   30a74:	00800804 	movi	r2,32
   30a78:	10e5c83a 	sub	r18,r2,r3
   30a7c:	9000901e 	bne	r18,zero,30cc0 <__umoddi3+0x41c>
   30a80:	982cd43a 	srli	r22,r19,16
   30a84:	8ce3c83a 	sub	r17,r17,r19
   30a88:	9d7fffcc 	andi	r21,r19,65535
   30a8c:	b00b883a 	mov	r5,r22
   30a90:	8809883a 	mov	r4,r17
   30a94:	00226700 	call	22670 <__umodsi3>
   30a98:	8809883a 	mov	r4,r17
   30a9c:	b00b883a 	mov	r5,r22
   30aa0:	1021883a 	mov	r16,r2
   30aa4:	002260c0 	call	2260c <__udivsi3>
   30aa8:	8006943a 	slli	r3,r16,16
   30aac:	a008d43a 	srli	r4,r20,16
   30ab0:	1545383a 	mul	r2,r2,r21
   30ab4:	20c8b03a 	or	r4,r4,r3
   30ab8:	2080042e 	bgeu	r4,r2,30acc <__umoddi3+0x228>
   30abc:	24c9883a 	add	r4,r4,r19
   30ac0:	24c00236 	bltu	r4,r19,30acc <__umoddi3+0x228>
   30ac4:	2080012e 	bgeu	r4,r2,30acc <__umoddi3+0x228>
   30ac8:	24c9883a 	add	r4,r4,r19
   30acc:	20a1c83a 	sub	r16,r4,r2
   30ad0:	b00b883a 	mov	r5,r22
   30ad4:	8009883a 	mov	r4,r16
   30ad8:	00226700 	call	22670 <__umodsi3>
   30adc:	1023883a 	mov	r17,r2
   30ae0:	b00b883a 	mov	r5,r22
   30ae4:	8009883a 	mov	r4,r16
   30ae8:	002260c0 	call	2260c <__udivsi3>
   30aec:	8822943a 	slli	r17,r17,16
   30af0:	1545383a 	mul	r2,r2,r21
   30af4:	a53fffcc 	andi	r20,r20,65535
   30af8:	a446b03a 	or	r3,r20,r17
   30afc:	18bfb02e 	bgeu	r3,r2,309c0 <__alt_mem_sdram_controller_0+0xc00309c0>
   30b00:	003fab06 	br	309b0 <__alt_mem_sdram_controller_0+0xc00309b0>
   30b04:	2005883a 	mov	r2,r4
   30b08:	2807883a 	mov	r3,r5
   30b0c:	dfc00b17 	ldw	ra,44(sp)
   30b10:	df000a17 	ldw	fp,40(sp)
   30b14:	ddc00917 	ldw	r23,36(sp)
   30b18:	dd800817 	ldw	r22,32(sp)
   30b1c:	dd400717 	ldw	r21,28(sp)
   30b20:	dd000617 	ldw	r20,24(sp)
   30b24:	dcc00517 	ldw	r19,20(sp)
   30b28:	dc800417 	ldw	r18,16(sp)
   30b2c:	dc400317 	ldw	r17,12(sp)
   30b30:	dc000217 	ldw	r16,8(sp)
   30b34:	dec00c04 	addi	sp,sp,48
   30b38:	f800283a 	ret
   30b3c:	04c03fc4 	movi	r19,255
   30b40:	99c9803a 	cmpltu	r4,r19,r7
   30b44:	200890fa 	slli	r4,r4,3
   30b48:	003fa806 	br	309ec <__alt_mem_sdram_controller_0+0xc00309ec>
   30b4c:	00803fc4 	movi	r2,255
   30b50:	14c5803a 	cmpltu	r2,r2,r19
   30b54:	100490fa 	slli	r2,r2,3
   30b58:	003fc006 	br	30a5c <__alt_mem_sdram_controller_0+0xc0030a5c>
   30b5c:	00804034 	movhi	r2,256
   30b60:	10bfffc4 	addi	r2,r2,-1
   30b64:	11808b36 	bltu	r2,r6,30d94 <__umoddi3+0x4f0>
   30b68:	01000404 	movi	r4,16
   30b6c:	003f6406 	br	30900 <__alt_mem_sdram_controller_0+0xc0030900>
   30b70:	34c4d83a 	srl	r2,r6,r19
   30b74:	3d0e983a 	sll	r7,r7,r20
   30b78:	8cf8d83a 	srl	fp,r17,r19
   30b7c:	8d10983a 	sll	r8,r17,r20
   30b80:	38aab03a 	or	r21,r7,r2
   30b84:	a82cd43a 	srli	r22,r21,16
   30b88:	84e2d83a 	srl	r17,r16,r19
   30b8c:	e009883a 	mov	r4,fp
   30b90:	b00b883a 	mov	r5,r22
   30b94:	8a22b03a 	or	r17,r17,r8
   30b98:	3524983a 	sll	r18,r6,r20
   30b9c:	00226700 	call	22670 <__umodsi3>
   30ba0:	e009883a 	mov	r4,fp
   30ba4:	b00b883a 	mov	r5,r22
   30ba8:	102f883a 	mov	r23,r2
   30bac:	002260c0 	call	2260c <__udivsi3>
   30bb0:	100d883a 	mov	r6,r2
   30bb4:	b808943a 	slli	r4,r23,16
   30bb8:	aa3fffcc 	andi	r8,r21,65535
   30bbc:	8804d43a 	srli	r2,r17,16
   30bc0:	41af383a 	mul	r23,r8,r6
   30bc4:	8520983a 	sll	r16,r16,r20
   30bc8:	1104b03a 	or	r2,r2,r4
   30bcc:	15c0042e 	bgeu	r2,r23,30be0 <__umoddi3+0x33c>
   30bd0:	1545883a 	add	r2,r2,r21
   30bd4:	30ffffc4 	addi	r3,r6,-1
   30bd8:	1540742e 	bgeu	r2,r21,30dac <__umoddi3+0x508>
   30bdc:	180d883a 	mov	r6,r3
   30be0:	15efc83a 	sub	r23,r2,r23
   30be4:	b00b883a 	mov	r5,r22
   30be8:	b809883a 	mov	r4,r23
   30bec:	d9800115 	stw	r6,4(sp)
   30bf0:	da000015 	stw	r8,0(sp)
   30bf4:	00226700 	call	22670 <__umodsi3>
   30bf8:	b00b883a 	mov	r5,r22
   30bfc:	b809883a 	mov	r4,r23
   30c00:	1039883a 	mov	fp,r2
   30c04:	002260c0 	call	2260c <__udivsi3>
   30c08:	da000017 	ldw	r8,0(sp)
   30c0c:	e038943a 	slli	fp,fp,16
   30c10:	100b883a 	mov	r5,r2
   30c14:	4089383a 	mul	r4,r8,r2
   30c18:	8a3fffcc 	andi	r8,r17,65535
   30c1c:	4710b03a 	or	r8,r8,fp
   30c20:	d9800117 	ldw	r6,4(sp)
   30c24:	4100042e 	bgeu	r8,r4,30c38 <__umoddi3+0x394>
   30c28:	4551883a 	add	r8,r8,r21
   30c2c:	10bfffc4 	addi	r2,r2,-1
   30c30:	45405a2e 	bgeu	r8,r21,30d9c <__umoddi3+0x4f8>
   30c34:	100b883a 	mov	r5,r2
   30c38:	300c943a 	slli	r6,r6,16
   30c3c:	91ffffcc 	andi	r7,r18,65535
   30c40:	9004d43a 	srli	r2,r18,16
   30c44:	314cb03a 	or	r6,r6,r5
   30c48:	317fffcc 	andi	r5,r6,65535
   30c4c:	300cd43a 	srli	r6,r6,16
   30c50:	29d3383a 	mul	r9,r5,r7
   30c54:	288b383a 	mul	r5,r5,r2
   30c58:	31cf383a 	mul	r7,r6,r7
   30c5c:	4806d43a 	srli	r3,r9,16
   30c60:	4111c83a 	sub	r8,r8,r4
   30c64:	29cb883a 	add	r5,r5,r7
   30c68:	194b883a 	add	r5,r3,r5
   30c6c:	3085383a 	mul	r2,r6,r2
   30c70:	29c0022e 	bgeu	r5,r7,30c7c <__umoddi3+0x3d8>
   30c74:	00c00074 	movhi	r3,1
   30c78:	10c5883a 	add	r2,r2,r3
   30c7c:	2808d43a 	srli	r4,r5,16
   30c80:	280a943a 	slli	r5,r5,16
   30c84:	4a7fffcc 	andi	r9,r9,65535
   30c88:	2085883a 	add	r2,r4,r2
   30c8c:	2a4b883a 	add	r5,r5,r9
   30c90:	40803636 	bltu	r8,r2,30d6c <__umoddi3+0x4c8>
   30c94:	40804d26 	beq	r8,r2,30dcc <__umoddi3+0x528>
   30c98:	4089c83a 	sub	r4,r8,r2
   30c9c:	280f883a 	mov	r7,r5
   30ca0:	81cfc83a 	sub	r7,r16,r7
   30ca4:	81c7803a 	cmpltu	r3,r16,r7
   30ca8:	20c7c83a 	sub	r3,r4,r3
   30cac:	1cc4983a 	sll	r2,r3,r19
   30cb0:	3d0ed83a 	srl	r7,r7,r20
   30cb4:	1d06d83a 	srl	r3,r3,r20
   30cb8:	11c4b03a 	or	r2,r2,r7
   30cbc:	003f9306 	br	30b0c <__alt_mem_sdram_controller_0+0xc0030b0c>
   30cc0:	9ca6983a 	sll	r19,r19,r18
   30cc4:	88e8d83a 	srl	r20,r17,r3
   30cc8:	80c4d83a 	srl	r2,r16,r3
   30ccc:	982cd43a 	srli	r22,r19,16
   30cd0:	8ca2983a 	sll	r17,r17,r18
   30cd4:	a009883a 	mov	r4,r20
   30cd8:	b00b883a 	mov	r5,r22
   30cdc:	1478b03a 	or	fp,r2,r17
   30ce0:	00226700 	call	22670 <__umodsi3>
   30ce4:	a009883a 	mov	r4,r20
   30ce8:	b00b883a 	mov	r5,r22
   30cec:	1023883a 	mov	r17,r2
   30cf0:	002260c0 	call	2260c <__udivsi3>
   30cf4:	9d7fffcc 	andi	r21,r19,65535
   30cf8:	880a943a 	slli	r5,r17,16
   30cfc:	e008d43a 	srli	r4,fp,16
   30d00:	a885383a 	mul	r2,r21,r2
   30d04:	84a8983a 	sll	r20,r16,r18
   30d08:	2148b03a 	or	r4,r4,r5
   30d0c:	2080042e 	bgeu	r4,r2,30d20 <__umoddi3+0x47c>
   30d10:	24c9883a 	add	r4,r4,r19
   30d14:	24c00236 	bltu	r4,r19,30d20 <__umoddi3+0x47c>
   30d18:	2080012e 	bgeu	r4,r2,30d20 <__umoddi3+0x47c>
   30d1c:	24c9883a 	add	r4,r4,r19
   30d20:	20a3c83a 	sub	r17,r4,r2
   30d24:	b00b883a 	mov	r5,r22
   30d28:	8809883a 	mov	r4,r17
   30d2c:	00226700 	call	22670 <__umodsi3>
   30d30:	102f883a 	mov	r23,r2
   30d34:	8809883a 	mov	r4,r17
   30d38:	b00b883a 	mov	r5,r22
   30d3c:	002260c0 	call	2260c <__udivsi3>
   30d40:	b82e943a 	slli	r23,r23,16
   30d44:	a885383a 	mul	r2,r21,r2
   30d48:	e13fffcc 	andi	r4,fp,65535
   30d4c:	25c8b03a 	or	r4,r4,r23
   30d50:	2080042e 	bgeu	r4,r2,30d64 <__umoddi3+0x4c0>
   30d54:	24c9883a 	add	r4,r4,r19
   30d58:	24c00236 	bltu	r4,r19,30d64 <__umoddi3+0x4c0>
   30d5c:	2080012e 	bgeu	r4,r2,30d64 <__umoddi3+0x4c0>
   30d60:	24c9883a 	add	r4,r4,r19
   30d64:	20a3c83a 	sub	r17,r4,r2
   30d68:	003f4806 	br	30a8c <__alt_mem_sdram_controller_0+0xc0030a8c>
   30d6c:	2c8fc83a 	sub	r7,r5,r18
   30d70:	1545c83a 	sub	r2,r2,r21
   30d74:	29cb803a 	cmpltu	r5,r5,r7
   30d78:	1145c83a 	sub	r2,r2,r5
   30d7c:	4089c83a 	sub	r4,r8,r2
   30d80:	003fc706 	br	30ca0 <__alt_mem_sdram_controller_0+0xc0030ca0>
   30d84:	01000604 	movi	r4,24
   30d88:	003f1806 	br	309ec <__alt_mem_sdram_controller_0+0xc00309ec>
   30d8c:	00800604 	movi	r2,24
   30d90:	003f3206 	br	30a5c <__alt_mem_sdram_controller_0+0xc0030a5c>
   30d94:	01000604 	movi	r4,24
   30d98:	003ed906 	br	30900 <__alt_mem_sdram_controller_0+0xc0030900>
   30d9c:	413fa52e 	bgeu	r8,r4,30c34 <__alt_mem_sdram_controller_0+0xc0030c34>
   30da0:	297fff84 	addi	r5,r5,-2
   30da4:	4551883a 	add	r8,r8,r21
   30da8:	003fa306 	br	30c38 <__alt_mem_sdram_controller_0+0xc0030c38>
   30dac:	15ff8b2e 	bgeu	r2,r23,30bdc <__alt_mem_sdram_controller_0+0xc0030bdc>
   30db0:	31bfff84 	addi	r6,r6,-2
   30db4:	1545883a 	add	r2,r2,r21
   30db8:	003f8906 	br	30be0 <__alt_mem_sdram_controller_0+0xc0030be0>
   30dbc:	24c9883a 	add	r4,r4,r19
   30dc0:	003eee06 	br	3097c <__alt_mem_sdram_controller_0+0xc003097c>
   30dc4:	8005883a 	mov	r2,r16
   30dc8:	003f1706 	br	30a28 <__alt_mem_sdram_controller_0+0xc0030a28>
   30dcc:	817fe736 	bltu	r16,r5,30d6c <__alt_mem_sdram_controller_0+0xc0030d6c>
   30dd0:	280f883a 	mov	r7,r5
   30dd4:	0009883a 	mov	r4,zero
   30dd8:	003fb106 	br	30ca0 <__alt_mem_sdram_controller_0+0xc0030ca0>

00030ddc <__adddf3>:
   30ddc:	02c00434 	movhi	r11,16
   30de0:	5affffc4 	addi	r11,r11,-1
   30de4:	2806d7fa 	srli	r3,r5,31
   30de8:	2ad4703a 	and	r10,r5,r11
   30dec:	3ad2703a 	and	r9,r7,r11
   30df0:	3804d53a 	srli	r2,r7,20
   30df4:	3018d77a 	srli	r12,r6,29
   30df8:	280ad53a 	srli	r5,r5,20
   30dfc:	501490fa 	slli	r10,r10,3
   30e00:	2010d77a 	srli	r8,r4,29
   30e04:	481290fa 	slli	r9,r9,3
   30e08:	380ed7fa 	srli	r7,r7,31
   30e0c:	defffb04 	addi	sp,sp,-20
   30e10:	dc800215 	stw	r18,8(sp)
   30e14:	dc400115 	stw	r17,4(sp)
   30e18:	dc000015 	stw	r16,0(sp)
   30e1c:	dfc00415 	stw	ra,16(sp)
   30e20:	dcc00315 	stw	r19,12(sp)
   30e24:	1c803fcc 	andi	r18,r3,255
   30e28:	2c01ffcc 	andi	r16,r5,2047
   30e2c:	5210b03a 	or	r8,r10,r8
   30e30:	202290fa 	slli	r17,r4,3
   30e34:	1081ffcc 	andi	r2,r2,2047
   30e38:	4b12b03a 	or	r9,r9,r12
   30e3c:	300c90fa 	slli	r6,r6,3
   30e40:	91c07526 	beq	r18,r7,31018 <__adddf3+0x23c>
   30e44:	8087c83a 	sub	r3,r16,r2
   30e48:	00c0ab0e 	bge	zero,r3,310f8 <__adddf3+0x31c>
   30e4c:	10002a1e 	bne	r2,zero,30ef8 <__adddf3+0x11c>
   30e50:	4984b03a 	or	r2,r9,r6
   30e54:	1000961e 	bne	r2,zero,310b0 <__adddf3+0x2d4>
   30e58:	888001cc 	andi	r2,r17,7
   30e5c:	10000726 	beq	r2,zero,30e7c <__adddf3+0xa0>
   30e60:	888003cc 	andi	r2,r17,15
   30e64:	00c00104 	movi	r3,4
   30e68:	10c00426 	beq	r2,r3,30e7c <__adddf3+0xa0>
   30e6c:	88c7883a 	add	r3,r17,r3
   30e70:	1c63803a 	cmpltu	r17,r3,r17
   30e74:	4451883a 	add	r8,r8,r17
   30e78:	1823883a 	mov	r17,r3
   30e7c:	4080202c 	andhi	r2,r8,128
   30e80:	10005926 	beq	r2,zero,30fe8 <__adddf3+0x20c>
   30e84:	84000044 	addi	r16,r16,1
   30e88:	0081ffc4 	movi	r2,2047
   30e8c:	8080ba26 	beq	r16,r2,31178 <__adddf3+0x39c>
   30e90:	00bfe034 	movhi	r2,65408
   30e94:	10bfffc4 	addi	r2,r2,-1
   30e98:	4090703a 	and	r8,r8,r2
   30e9c:	4004977a 	slli	r2,r8,29
   30ea0:	4010927a 	slli	r8,r8,9
   30ea4:	8822d0fa 	srli	r17,r17,3
   30ea8:	8401ffcc 	andi	r16,r16,2047
   30eac:	4010d33a 	srli	r8,r8,12
   30eb0:	9007883a 	mov	r3,r18
   30eb4:	1444b03a 	or	r2,r2,r17
   30eb8:	8401ffcc 	andi	r16,r16,2047
   30ebc:	8020953a 	slli	r16,r16,20
   30ec0:	18c03fcc 	andi	r3,r3,255
   30ec4:	01000434 	movhi	r4,16
   30ec8:	213fffc4 	addi	r4,r4,-1
   30ecc:	180697fa 	slli	r3,r3,31
   30ed0:	4110703a 	and	r8,r8,r4
   30ed4:	4410b03a 	or	r8,r8,r16
   30ed8:	40c6b03a 	or	r3,r8,r3
   30edc:	dfc00417 	ldw	ra,16(sp)
   30ee0:	dcc00317 	ldw	r19,12(sp)
   30ee4:	dc800217 	ldw	r18,8(sp)
   30ee8:	dc400117 	ldw	r17,4(sp)
   30eec:	dc000017 	ldw	r16,0(sp)
   30ef0:	dec00504 	addi	sp,sp,20
   30ef4:	f800283a 	ret
   30ef8:	0081ffc4 	movi	r2,2047
   30efc:	80bfd626 	beq	r16,r2,30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   30f00:	4a402034 	orhi	r9,r9,128
   30f04:	00800e04 	movi	r2,56
   30f08:	10c09f16 	blt	r2,r3,31188 <__adddf3+0x3ac>
   30f0c:	008007c4 	movi	r2,31
   30f10:	10c0c216 	blt	r2,r3,3121c <__adddf3+0x440>
   30f14:	00800804 	movi	r2,32
   30f18:	10c5c83a 	sub	r2,r2,r3
   30f1c:	488a983a 	sll	r5,r9,r2
   30f20:	30c8d83a 	srl	r4,r6,r3
   30f24:	3084983a 	sll	r2,r6,r2
   30f28:	48c6d83a 	srl	r3,r9,r3
   30f2c:	290cb03a 	or	r6,r5,r4
   30f30:	1004c03a 	cmpne	r2,r2,zero
   30f34:	308cb03a 	or	r6,r6,r2
   30f38:	898dc83a 	sub	r6,r17,r6
   30f3c:	89a3803a 	cmpltu	r17,r17,r6
   30f40:	40d1c83a 	sub	r8,r8,r3
   30f44:	4451c83a 	sub	r8,r8,r17
   30f48:	3023883a 	mov	r17,r6
   30f4c:	4080202c 	andhi	r2,r8,128
   30f50:	10002326 	beq	r2,zero,30fe0 <__adddf3+0x204>
   30f54:	04c02034 	movhi	r19,128
   30f58:	9cffffc4 	addi	r19,r19,-1
   30f5c:	44e6703a 	and	r19,r8,r19
   30f60:	98007626 	beq	r19,zero,3113c <__adddf3+0x360>
   30f64:	9809883a 	mov	r4,r19
   30f68:	00333e00 	call	333e0 <__clzsi2>
   30f6c:	10fffe04 	addi	r3,r2,-8
   30f70:	010007c4 	movi	r4,31
   30f74:	20c07716 	blt	r4,r3,31154 <__adddf3+0x378>
   30f78:	00800804 	movi	r2,32
   30f7c:	10c5c83a 	sub	r2,r2,r3
   30f80:	8884d83a 	srl	r2,r17,r2
   30f84:	98d0983a 	sll	r8,r19,r3
   30f88:	88e2983a 	sll	r17,r17,r3
   30f8c:	1204b03a 	or	r2,r2,r8
   30f90:	1c007416 	blt	r3,r16,31164 <__adddf3+0x388>
   30f94:	1c21c83a 	sub	r16,r3,r16
   30f98:	82000044 	addi	r8,r16,1
   30f9c:	00c007c4 	movi	r3,31
   30fa0:	1a009116 	blt	r3,r8,311e8 <__adddf3+0x40c>
   30fa4:	00c00804 	movi	r3,32
   30fa8:	1a07c83a 	sub	r3,r3,r8
   30fac:	8a08d83a 	srl	r4,r17,r8
   30fb0:	88e2983a 	sll	r17,r17,r3
   30fb4:	10c6983a 	sll	r3,r2,r3
   30fb8:	1210d83a 	srl	r8,r2,r8
   30fbc:	8804c03a 	cmpne	r2,r17,zero
   30fc0:	1906b03a 	or	r3,r3,r4
   30fc4:	18a2b03a 	or	r17,r3,r2
   30fc8:	0021883a 	mov	r16,zero
   30fcc:	003fa206 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   30fd0:	1890b03a 	or	r8,r3,r2
   30fd4:	40017d26 	beq	r8,zero,315cc <__adddf3+0x7f0>
   30fd8:	1011883a 	mov	r8,r2
   30fdc:	1823883a 	mov	r17,r3
   30fe0:	888001cc 	andi	r2,r17,7
   30fe4:	103f9e1e 	bne	r2,zero,30e60 <__alt_mem_sdram_controller_0+0xc0030e60>
   30fe8:	4004977a 	slli	r2,r8,29
   30fec:	8822d0fa 	srli	r17,r17,3
   30ff0:	4010d0fa 	srli	r8,r8,3
   30ff4:	9007883a 	mov	r3,r18
   30ff8:	1444b03a 	or	r2,r2,r17
   30ffc:	0101ffc4 	movi	r4,2047
   31000:	81002426 	beq	r16,r4,31094 <__adddf3+0x2b8>
   31004:	8120703a 	and	r16,r16,r4
   31008:	01000434 	movhi	r4,16
   3100c:	213fffc4 	addi	r4,r4,-1
   31010:	4110703a 	and	r8,r8,r4
   31014:	003fa806 	br	30eb8 <__alt_mem_sdram_controller_0+0xc0030eb8>
   31018:	8089c83a 	sub	r4,r16,r2
   3101c:	01005e0e 	bge	zero,r4,31198 <__adddf3+0x3bc>
   31020:	10002b26 	beq	r2,zero,310d0 <__adddf3+0x2f4>
   31024:	0081ffc4 	movi	r2,2047
   31028:	80bf8b26 	beq	r16,r2,30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3102c:	4a402034 	orhi	r9,r9,128
   31030:	00800e04 	movi	r2,56
   31034:	1100a40e 	bge	r2,r4,312c8 <__adddf3+0x4ec>
   31038:	498cb03a 	or	r6,r9,r6
   3103c:	300ac03a 	cmpne	r5,r6,zero
   31040:	0013883a 	mov	r9,zero
   31044:	2c4b883a 	add	r5,r5,r17
   31048:	2c63803a 	cmpltu	r17,r5,r17
   3104c:	4a11883a 	add	r8,r9,r8
   31050:	8a11883a 	add	r8,r17,r8
   31054:	2823883a 	mov	r17,r5
   31058:	4080202c 	andhi	r2,r8,128
   3105c:	103fe026 	beq	r2,zero,30fe0 <__alt_mem_sdram_controller_0+0xc0030fe0>
   31060:	84000044 	addi	r16,r16,1
   31064:	0081ffc4 	movi	r2,2047
   31068:	8080d226 	beq	r16,r2,313b4 <__adddf3+0x5d8>
   3106c:	00bfe034 	movhi	r2,65408
   31070:	10bfffc4 	addi	r2,r2,-1
   31074:	4090703a 	and	r8,r8,r2
   31078:	880ad07a 	srli	r5,r17,1
   3107c:	400897fa 	slli	r4,r8,31
   31080:	88c0004c 	andi	r3,r17,1
   31084:	28e2b03a 	or	r17,r5,r3
   31088:	4010d07a 	srli	r8,r8,1
   3108c:	2462b03a 	or	r17,r4,r17
   31090:	003f7106 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31094:	4088b03a 	or	r4,r8,r2
   31098:	20014526 	beq	r4,zero,315b0 <__adddf3+0x7d4>
   3109c:	01000434 	movhi	r4,16
   310a0:	42000234 	orhi	r8,r8,8
   310a4:	213fffc4 	addi	r4,r4,-1
   310a8:	4110703a 	and	r8,r8,r4
   310ac:	003f8206 	br	30eb8 <__alt_mem_sdram_controller_0+0xc0030eb8>
   310b0:	18ffffc4 	addi	r3,r3,-1
   310b4:	1800491e 	bne	r3,zero,311dc <__adddf3+0x400>
   310b8:	898bc83a 	sub	r5,r17,r6
   310bc:	8963803a 	cmpltu	r17,r17,r5
   310c0:	4251c83a 	sub	r8,r8,r9
   310c4:	4451c83a 	sub	r8,r8,r17
   310c8:	2823883a 	mov	r17,r5
   310cc:	003f9f06 	br	30f4c <__alt_mem_sdram_controller_0+0xc0030f4c>
   310d0:	4984b03a 	or	r2,r9,r6
   310d4:	103f6026 	beq	r2,zero,30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   310d8:	213fffc4 	addi	r4,r4,-1
   310dc:	2000931e 	bne	r4,zero,3132c <__adddf3+0x550>
   310e0:	898d883a 	add	r6,r17,r6
   310e4:	3463803a 	cmpltu	r17,r6,r17
   310e8:	4251883a 	add	r8,r8,r9
   310ec:	8a11883a 	add	r8,r17,r8
   310f0:	3023883a 	mov	r17,r6
   310f4:	003fd806 	br	31058 <__alt_mem_sdram_controller_0+0xc0031058>
   310f8:	1800541e 	bne	r3,zero,3124c <__adddf3+0x470>
   310fc:	80800044 	addi	r2,r16,1
   31100:	1081ffcc 	andi	r2,r2,2047
   31104:	00c00044 	movi	r3,1
   31108:	1880a00e 	bge	r3,r2,3138c <__adddf3+0x5b0>
   3110c:	8989c83a 	sub	r4,r17,r6
   31110:	8905803a 	cmpltu	r2,r17,r4
   31114:	4267c83a 	sub	r19,r8,r9
   31118:	98a7c83a 	sub	r19,r19,r2
   3111c:	9880202c 	andhi	r2,r19,128
   31120:	10006326 	beq	r2,zero,312b0 <__adddf3+0x4d4>
   31124:	3463c83a 	sub	r17,r6,r17
   31128:	4a07c83a 	sub	r3,r9,r8
   3112c:	344d803a 	cmpltu	r6,r6,r17
   31130:	19a7c83a 	sub	r19,r3,r6
   31134:	3825883a 	mov	r18,r7
   31138:	983f8a1e 	bne	r19,zero,30f64 <__alt_mem_sdram_controller_0+0xc0030f64>
   3113c:	8809883a 	mov	r4,r17
   31140:	00333e00 	call	333e0 <__clzsi2>
   31144:	10800804 	addi	r2,r2,32
   31148:	10fffe04 	addi	r3,r2,-8
   3114c:	010007c4 	movi	r4,31
   31150:	20ff890e 	bge	r4,r3,30f78 <__alt_mem_sdram_controller_0+0xc0030f78>
   31154:	10bff604 	addi	r2,r2,-40
   31158:	8884983a 	sll	r2,r17,r2
   3115c:	0023883a 	mov	r17,zero
   31160:	1c3f8c0e 	bge	r3,r16,30f94 <__alt_mem_sdram_controller_0+0xc0030f94>
   31164:	023fe034 	movhi	r8,65408
   31168:	423fffc4 	addi	r8,r8,-1
   3116c:	80e1c83a 	sub	r16,r16,r3
   31170:	1210703a 	and	r8,r2,r8
   31174:	003f3806 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31178:	9007883a 	mov	r3,r18
   3117c:	0011883a 	mov	r8,zero
   31180:	0005883a 	mov	r2,zero
   31184:	003f4c06 	br	30eb8 <__alt_mem_sdram_controller_0+0xc0030eb8>
   31188:	498cb03a 	or	r6,r9,r6
   3118c:	300cc03a 	cmpne	r6,r6,zero
   31190:	0007883a 	mov	r3,zero
   31194:	003f6806 	br	30f38 <__alt_mem_sdram_controller_0+0xc0030f38>
   31198:	20009c1e 	bne	r4,zero,3140c <__adddf3+0x630>
   3119c:	80800044 	addi	r2,r16,1
   311a0:	1141ffcc 	andi	r5,r2,2047
   311a4:	01000044 	movi	r4,1
   311a8:	2140670e 	bge	r4,r5,31348 <__adddf3+0x56c>
   311ac:	0101ffc4 	movi	r4,2047
   311b0:	11007f26 	beq	r2,r4,313b0 <__adddf3+0x5d4>
   311b4:	898d883a 	add	r6,r17,r6
   311b8:	4247883a 	add	r3,r8,r9
   311bc:	3451803a 	cmpltu	r8,r6,r17
   311c0:	40d1883a 	add	r8,r8,r3
   311c4:	402297fa 	slli	r17,r8,31
   311c8:	300cd07a 	srli	r6,r6,1
   311cc:	4010d07a 	srli	r8,r8,1
   311d0:	1021883a 	mov	r16,r2
   311d4:	89a2b03a 	or	r17,r17,r6
   311d8:	003f1f06 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   311dc:	0081ffc4 	movi	r2,2047
   311e0:	80bf481e 	bne	r16,r2,30f04 <__alt_mem_sdram_controller_0+0xc0030f04>
   311e4:	003f1c06 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   311e8:	843ff844 	addi	r16,r16,-31
   311ec:	01000804 	movi	r4,32
   311f0:	1406d83a 	srl	r3,r2,r16
   311f4:	41005026 	beq	r8,r4,31338 <__adddf3+0x55c>
   311f8:	01001004 	movi	r4,64
   311fc:	2211c83a 	sub	r8,r4,r8
   31200:	1204983a 	sll	r2,r2,r8
   31204:	88a2b03a 	or	r17,r17,r2
   31208:	8822c03a 	cmpne	r17,r17,zero
   3120c:	1c62b03a 	or	r17,r3,r17
   31210:	0011883a 	mov	r8,zero
   31214:	0021883a 	mov	r16,zero
   31218:	003f7106 	br	30fe0 <__alt_mem_sdram_controller_0+0xc0030fe0>
   3121c:	193ff804 	addi	r4,r3,-32
   31220:	00800804 	movi	r2,32
   31224:	4908d83a 	srl	r4,r9,r4
   31228:	18804526 	beq	r3,r2,31340 <__adddf3+0x564>
   3122c:	00801004 	movi	r2,64
   31230:	10c5c83a 	sub	r2,r2,r3
   31234:	4886983a 	sll	r3,r9,r2
   31238:	198cb03a 	or	r6,r3,r6
   3123c:	300cc03a 	cmpne	r6,r6,zero
   31240:	218cb03a 	or	r6,r4,r6
   31244:	0007883a 	mov	r3,zero
   31248:	003f3b06 	br	30f38 <__alt_mem_sdram_controller_0+0xc0030f38>
   3124c:	80002a26 	beq	r16,zero,312f8 <__adddf3+0x51c>
   31250:	0101ffc4 	movi	r4,2047
   31254:	11006826 	beq	r2,r4,313f8 <__adddf3+0x61c>
   31258:	00c7c83a 	sub	r3,zero,r3
   3125c:	42002034 	orhi	r8,r8,128
   31260:	01000e04 	movi	r4,56
   31264:	20c07c16 	blt	r4,r3,31458 <__adddf3+0x67c>
   31268:	010007c4 	movi	r4,31
   3126c:	20c0da16 	blt	r4,r3,315d8 <__adddf3+0x7fc>
   31270:	01000804 	movi	r4,32
   31274:	20c9c83a 	sub	r4,r4,r3
   31278:	4114983a 	sll	r10,r8,r4
   3127c:	88cad83a 	srl	r5,r17,r3
   31280:	8908983a 	sll	r4,r17,r4
   31284:	40c6d83a 	srl	r3,r8,r3
   31288:	5162b03a 	or	r17,r10,r5
   3128c:	2008c03a 	cmpne	r4,r4,zero
   31290:	8922b03a 	or	r17,r17,r4
   31294:	3463c83a 	sub	r17,r6,r17
   31298:	48c7c83a 	sub	r3,r9,r3
   3129c:	344d803a 	cmpltu	r6,r6,r17
   312a0:	1991c83a 	sub	r8,r3,r6
   312a4:	1021883a 	mov	r16,r2
   312a8:	3825883a 	mov	r18,r7
   312ac:	003f2706 	br	30f4c <__alt_mem_sdram_controller_0+0xc0030f4c>
   312b0:	24d0b03a 	or	r8,r4,r19
   312b4:	40001b1e 	bne	r8,zero,31324 <__adddf3+0x548>
   312b8:	0005883a 	mov	r2,zero
   312bc:	0007883a 	mov	r3,zero
   312c0:	0021883a 	mov	r16,zero
   312c4:	003f4d06 	br	30ffc <__alt_mem_sdram_controller_0+0xc0030ffc>
   312c8:	008007c4 	movi	r2,31
   312cc:	11003c16 	blt	r2,r4,313c0 <__adddf3+0x5e4>
   312d0:	00800804 	movi	r2,32
   312d4:	1105c83a 	sub	r2,r2,r4
   312d8:	488e983a 	sll	r7,r9,r2
   312dc:	310ad83a 	srl	r5,r6,r4
   312e0:	3084983a 	sll	r2,r6,r2
   312e4:	4912d83a 	srl	r9,r9,r4
   312e8:	394ab03a 	or	r5,r7,r5
   312ec:	1004c03a 	cmpne	r2,r2,zero
   312f0:	288ab03a 	or	r5,r5,r2
   312f4:	003f5306 	br	31044 <__alt_mem_sdram_controller_0+0xc0031044>
   312f8:	4448b03a 	or	r4,r8,r17
   312fc:	20003e26 	beq	r4,zero,313f8 <__adddf3+0x61c>
   31300:	00c6303a 	nor	r3,zero,r3
   31304:	18003a1e 	bne	r3,zero,313f0 <__adddf3+0x614>
   31308:	3463c83a 	sub	r17,r6,r17
   3130c:	4a07c83a 	sub	r3,r9,r8
   31310:	344d803a 	cmpltu	r6,r6,r17
   31314:	1991c83a 	sub	r8,r3,r6
   31318:	1021883a 	mov	r16,r2
   3131c:	3825883a 	mov	r18,r7
   31320:	003f0a06 	br	30f4c <__alt_mem_sdram_controller_0+0xc0030f4c>
   31324:	2023883a 	mov	r17,r4
   31328:	003f0d06 	br	30f60 <__alt_mem_sdram_controller_0+0xc0030f60>
   3132c:	0081ffc4 	movi	r2,2047
   31330:	80bf3f1e 	bne	r16,r2,31030 <__alt_mem_sdram_controller_0+0xc0031030>
   31334:	003ec806 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31338:	0005883a 	mov	r2,zero
   3133c:	003fb106 	br	31204 <__alt_mem_sdram_controller_0+0xc0031204>
   31340:	0007883a 	mov	r3,zero
   31344:	003fbc06 	br	31238 <__alt_mem_sdram_controller_0+0xc0031238>
   31348:	4444b03a 	or	r2,r8,r17
   3134c:	8000871e 	bne	r16,zero,3156c <__adddf3+0x790>
   31350:	1000ba26 	beq	r2,zero,3163c <__adddf3+0x860>
   31354:	4984b03a 	or	r2,r9,r6
   31358:	103ebf26 	beq	r2,zero,30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3135c:	8985883a 	add	r2,r17,r6
   31360:	4247883a 	add	r3,r8,r9
   31364:	1451803a 	cmpltu	r8,r2,r17
   31368:	40d1883a 	add	r8,r8,r3
   3136c:	40c0202c 	andhi	r3,r8,128
   31370:	1023883a 	mov	r17,r2
   31374:	183f1a26 	beq	r3,zero,30fe0 <__alt_mem_sdram_controller_0+0xc0030fe0>
   31378:	00bfe034 	movhi	r2,65408
   3137c:	10bfffc4 	addi	r2,r2,-1
   31380:	2021883a 	mov	r16,r4
   31384:	4090703a 	and	r8,r8,r2
   31388:	003eb306 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3138c:	4444b03a 	or	r2,r8,r17
   31390:	8000291e 	bne	r16,zero,31438 <__adddf3+0x65c>
   31394:	10004b1e 	bne	r2,zero,314c4 <__adddf3+0x6e8>
   31398:	4990b03a 	or	r8,r9,r6
   3139c:	40008b26 	beq	r8,zero,315cc <__adddf3+0x7f0>
   313a0:	4811883a 	mov	r8,r9
   313a4:	3023883a 	mov	r17,r6
   313a8:	3825883a 	mov	r18,r7
   313ac:	003eaa06 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   313b0:	1021883a 	mov	r16,r2
   313b4:	0011883a 	mov	r8,zero
   313b8:	0005883a 	mov	r2,zero
   313bc:	003f0f06 	br	30ffc <__alt_mem_sdram_controller_0+0xc0030ffc>
   313c0:	217ff804 	addi	r5,r4,-32
   313c4:	00800804 	movi	r2,32
   313c8:	494ad83a 	srl	r5,r9,r5
   313cc:	20807d26 	beq	r4,r2,315c4 <__adddf3+0x7e8>
   313d0:	00801004 	movi	r2,64
   313d4:	1109c83a 	sub	r4,r2,r4
   313d8:	4912983a 	sll	r9,r9,r4
   313dc:	498cb03a 	or	r6,r9,r6
   313e0:	300cc03a 	cmpne	r6,r6,zero
   313e4:	298ab03a 	or	r5,r5,r6
   313e8:	0013883a 	mov	r9,zero
   313ec:	003f1506 	br	31044 <__alt_mem_sdram_controller_0+0xc0031044>
   313f0:	0101ffc4 	movi	r4,2047
   313f4:	113f9a1e 	bne	r2,r4,31260 <__alt_mem_sdram_controller_0+0xc0031260>
   313f8:	4811883a 	mov	r8,r9
   313fc:	3023883a 	mov	r17,r6
   31400:	1021883a 	mov	r16,r2
   31404:	3825883a 	mov	r18,r7
   31408:	003e9306 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3140c:	8000161e 	bne	r16,zero,31468 <__adddf3+0x68c>
   31410:	444ab03a 	or	r5,r8,r17
   31414:	28005126 	beq	r5,zero,3155c <__adddf3+0x780>
   31418:	0108303a 	nor	r4,zero,r4
   3141c:	20004d1e 	bne	r4,zero,31554 <__adddf3+0x778>
   31420:	89a3883a 	add	r17,r17,r6
   31424:	4253883a 	add	r9,r8,r9
   31428:	898d803a 	cmpltu	r6,r17,r6
   3142c:	3251883a 	add	r8,r6,r9
   31430:	1021883a 	mov	r16,r2
   31434:	003f0806 	br	31058 <__alt_mem_sdram_controller_0+0xc0031058>
   31438:	1000301e 	bne	r2,zero,314fc <__adddf3+0x720>
   3143c:	4984b03a 	or	r2,r9,r6
   31440:	10007126 	beq	r2,zero,31608 <__adddf3+0x82c>
   31444:	4811883a 	mov	r8,r9
   31448:	3023883a 	mov	r17,r6
   3144c:	3825883a 	mov	r18,r7
   31450:	0401ffc4 	movi	r16,2047
   31454:	003e8006 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31458:	4462b03a 	or	r17,r8,r17
   3145c:	8822c03a 	cmpne	r17,r17,zero
   31460:	0007883a 	mov	r3,zero
   31464:	003f8b06 	br	31294 <__alt_mem_sdram_controller_0+0xc0031294>
   31468:	0141ffc4 	movi	r5,2047
   3146c:	11403b26 	beq	r2,r5,3155c <__adddf3+0x780>
   31470:	0109c83a 	sub	r4,zero,r4
   31474:	42002034 	orhi	r8,r8,128
   31478:	01400e04 	movi	r5,56
   3147c:	29006716 	blt	r5,r4,3161c <__adddf3+0x840>
   31480:	014007c4 	movi	r5,31
   31484:	29007016 	blt	r5,r4,31648 <__adddf3+0x86c>
   31488:	01400804 	movi	r5,32
   3148c:	290bc83a 	sub	r5,r5,r4
   31490:	4154983a 	sll	r10,r8,r5
   31494:	890ed83a 	srl	r7,r17,r4
   31498:	894a983a 	sll	r5,r17,r5
   3149c:	4108d83a 	srl	r4,r8,r4
   314a0:	51e2b03a 	or	r17,r10,r7
   314a4:	280ac03a 	cmpne	r5,r5,zero
   314a8:	8962b03a 	or	r17,r17,r5
   314ac:	89a3883a 	add	r17,r17,r6
   314b0:	2253883a 	add	r9,r4,r9
   314b4:	898d803a 	cmpltu	r6,r17,r6
   314b8:	3251883a 	add	r8,r6,r9
   314bc:	1021883a 	mov	r16,r2
   314c0:	003ee506 	br	31058 <__alt_mem_sdram_controller_0+0xc0031058>
   314c4:	4984b03a 	or	r2,r9,r6
   314c8:	103e6326 	beq	r2,zero,30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   314cc:	8987c83a 	sub	r3,r17,r6
   314d0:	88c9803a 	cmpltu	r4,r17,r3
   314d4:	4245c83a 	sub	r2,r8,r9
   314d8:	1105c83a 	sub	r2,r2,r4
   314dc:	1100202c 	andhi	r4,r2,128
   314e0:	203ebb26 	beq	r4,zero,30fd0 <__alt_mem_sdram_controller_0+0xc0030fd0>
   314e4:	3463c83a 	sub	r17,r6,r17
   314e8:	4a07c83a 	sub	r3,r9,r8
   314ec:	344d803a 	cmpltu	r6,r6,r17
   314f0:	1991c83a 	sub	r8,r3,r6
   314f4:	3825883a 	mov	r18,r7
   314f8:	003e5706 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   314fc:	4984b03a 	or	r2,r9,r6
   31500:	10002e26 	beq	r2,zero,315bc <__adddf3+0x7e0>
   31504:	4004d0fa 	srli	r2,r8,3
   31508:	8822d0fa 	srli	r17,r17,3
   3150c:	4010977a 	slli	r8,r8,29
   31510:	10c0022c 	andhi	r3,r2,8
   31514:	4462b03a 	or	r17,r8,r17
   31518:	18000826 	beq	r3,zero,3153c <__adddf3+0x760>
   3151c:	4808d0fa 	srli	r4,r9,3
   31520:	20c0022c 	andhi	r3,r4,8
   31524:	1800051e 	bne	r3,zero,3153c <__adddf3+0x760>
   31528:	300cd0fa 	srli	r6,r6,3
   3152c:	4806977a 	slli	r3,r9,29
   31530:	2005883a 	mov	r2,r4
   31534:	3825883a 	mov	r18,r7
   31538:	19a2b03a 	or	r17,r3,r6
   3153c:	8810d77a 	srli	r8,r17,29
   31540:	100490fa 	slli	r2,r2,3
   31544:	882290fa 	slli	r17,r17,3
   31548:	0401ffc4 	movi	r16,2047
   3154c:	4090b03a 	or	r8,r8,r2
   31550:	003e4106 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31554:	0141ffc4 	movi	r5,2047
   31558:	117fc71e 	bne	r2,r5,31478 <__alt_mem_sdram_controller_0+0xc0031478>
   3155c:	4811883a 	mov	r8,r9
   31560:	3023883a 	mov	r17,r6
   31564:	1021883a 	mov	r16,r2
   31568:	003e3b06 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3156c:	10002f26 	beq	r2,zero,3162c <__adddf3+0x850>
   31570:	4984b03a 	or	r2,r9,r6
   31574:	10001126 	beq	r2,zero,315bc <__adddf3+0x7e0>
   31578:	4004d0fa 	srli	r2,r8,3
   3157c:	8822d0fa 	srli	r17,r17,3
   31580:	4010977a 	slli	r8,r8,29
   31584:	10c0022c 	andhi	r3,r2,8
   31588:	4462b03a 	or	r17,r8,r17
   3158c:	183feb26 	beq	r3,zero,3153c <__alt_mem_sdram_controller_0+0xc003153c>
   31590:	4808d0fa 	srli	r4,r9,3
   31594:	20c0022c 	andhi	r3,r4,8
   31598:	183fe81e 	bne	r3,zero,3153c <__alt_mem_sdram_controller_0+0xc003153c>
   3159c:	300cd0fa 	srli	r6,r6,3
   315a0:	4806977a 	slli	r3,r9,29
   315a4:	2005883a 	mov	r2,r4
   315a8:	19a2b03a 	or	r17,r3,r6
   315ac:	003fe306 	br	3153c <__alt_mem_sdram_controller_0+0xc003153c>
   315b0:	0011883a 	mov	r8,zero
   315b4:	0005883a 	mov	r2,zero
   315b8:	003e3f06 	br	30eb8 <__alt_mem_sdram_controller_0+0xc0030eb8>
   315bc:	0401ffc4 	movi	r16,2047
   315c0:	003e2506 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   315c4:	0013883a 	mov	r9,zero
   315c8:	003f8406 	br	313dc <__alt_mem_sdram_controller_0+0xc00313dc>
   315cc:	0005883a 	mov	r2,zero
   315d0:	0007883a 	mov	r3,zero
   315d4:	003e8906 	br	30ffc <__alt_mem_sdram_controller_0+0xc0030ffc>
   315d8:	197ff804 	addi	r5,r3,-32
   315dc:	01000804 	movi	r4,32
   315e0:	414ad83a 	srl	r5,r8,r5
   315e4:	19002426 	beq	r3,r4,31678 <__adddf3+0x89c>
   315e8:	01001004 	movi	r4,64
   315ec:	20c7c83a 	sub	r3,r4,r3
   315f0:	40c6983a 	sll	r3,r8,r3
   315f4:	1c46b03a 	or	r3,r3,r17
   315f8:	1806c03a 	cmpne	r3,r3,zero
   315fc:	28e2b03a 	or	r17,r5,r3
   31600:	0007883a 	mov	r3,zero
   31604:	003f2306 	br	31294 <__alt_mem_sdram_controller_0+0xc0031294>
   31608:	0007883a 	mov	r3,zero
   3160c:	5811883a 	mov	r8,r11
   31610:	00bfffc4 	movi	r2,-1
   31614:	0401ffc4 	movi	r16,2047
   31618:	003e7806 	br	30ffc <__alt_mem_sdram_controller_0+0xc0030ffc>
   3161c:	4462b03a 	or	r17,r8,r17
   31620:	8822c03a 	cmpne	r17,r17,zero
   31624:	0009883a 	mov	r4,zero
   31628:	003fa006 	br	314ac <__alt_mem_sdram_controller_0+0xc00314ac>
   3162c:	4811883a 	mov	r8,r9
   31630:	3023883a 	mov	r17,r6
   31634:	0401ffc4 	movi	r16,2047
   31638:	003e0706 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   3163c:	4811883a 	mov	r8,r9
   31640:	3023883a 	mov	r17,r6
   31644:	003e0406 	br	30e58 <__alt_mem_sdram_controller_0+0xc0030e58>
   31648:	21fff804 	addi	r7,r4,-32
   3164c:	01400804 	movi	r5,32
   31650:	41ced83a 	srl	r7,r8,r7
   31654:	21400a26 	beq	r4,r5,31680 <__adddf3+0x8a4>
   31658:	01401004 	movi	r5,64
   3165c:	2909c83a 	sub	r4,r5,r4
   31660:	4108983a 	sll	r4,r8,r4
   31664:	2448b03a 	or	r4,r4,r17
   31668:	2008c03a 	cmpne	r4,r4,zero
   3166c:	3922b03a 	or	r17,r7,r4
   31670:	0009883a 	mov	r4,zero
   31674:	003f8d06 	br	314ac <__alt_mem_sdram_controller_0+0xc00314ac>
   31678:	0007883a 	mov	r3,zero
   3167c:	003fdd06 	br	315f4 <__alt_mem_sdram_controller_0+0xc00315f4>
   31680:	0009883a 	mov	r4,zero
   31684:	003ff706 	br	31664 <__alt_mem_sdram_controller_0+0xc0031664>

00031688 <__divdf3>:
   31688:	defff204 	addi	sp,sp,-56
   3168c:	dd400915 	stw	r21,36(sp)
   31690:	282ad53a 	srli	r21,r5,20
   31694:	dd000815 	stw	r20,32(sp)
   31698:	2828d7fa 	srli	r20,r5,31
   3169c:	dc000415 	stw	r16,16(sp)
   316a0:	04000434 	movhi	r16,16
   316a4:	df000c15 	stw	fp,48(sp)
   316a8:	843fffc4 	addi	r16,r16,-1
   316ac:	dfc00d15 	stw	ra,52(sp)
   316b0:	ddc00b15 	stw	r23,44(sp)
   316b4:	dd800a15 	stw	r22,40(sp)
   316b8:	dcc00715 	stw	r19,28(sp)
   316bc:	dc800615 	stw	r18,24(sp)
   316c0:	dc400515 	stw	r17,20(sp)
   316c4:	ad41ffcc 	andi	r21,r21,2047
   316c8:	2c20703a 	and	r16,r5,r16
   316cc:	a7003fcc 	andi	fp,r20,255
   316d0:	a8006126 	beq	r21,zero,31858 <__divdf3+0x1d0>
   316d4:	0081ffc4 	movi	r2,2047
   316d8:	2025883a 	mov	r18,r4
   316dc:	a8803726 	beq	r21,r2,317bc <__divdf3+0x134>
   316e0:	80800434 	orhi	r2,r16,16
   316e4:	100490fa 	slli	r2,r2,3
   316e8:	2020d77a 	srli	r16,r4,29
   316ec:	202490fa 	slli	r18,r4,3
   316f0:	ad7f0044 	addi	r21,r21,-1023
   316f4:	80a0b03a 	or	r16,r16,r2
   316f8:	0027883a 	mov	r19,zero
   316fc:	0013883a 	mov	r9,zero
   31700:	3804d53a 	srli	r2,r7,20
   31704:	382cd7fa 	srli	r22,r7,31
   31708:	04400434 	movhi	r17,16
   3170c:	8c7fffc4 	addi	r17,r17,-1
   31710:	1081ffcc 	andi	r2,r2,2047
   31714:	3011883a 	mov	r8,r6
   31718:	3c62703a 	and	r17,r7,r17
   3171c:	b5c03fcc 	andi	r23,r22,255
   31720:	10006c26 	beq	r2,zero,318d4 <__divdf3+0x24c>
   31724:	00c1ffc4 	movi	r3,2047
   31728:	10c06426 	beq	r2,r3,318bc <__divdf3+0x234>
   3172c:	88c00434 	orhi	r3,r17,16
   31730:	180690fa 	slli	r3,r3,3
   31734:	3022d77a 	srli	r17,r6,29
   31738:	301090fa 	slli	r8,r6,3
   3173c:	10bf0044 	addi	r2,r2,-1023
   31740:	88e2b03a 	or	r17,r17,r3
   31744:	000f883a 	mov	r7,zero
   31748:	a58cf03a 	xor	r6,r20,r22
   3174c:	3cc8b03a 	or	r4,r7,r19
   31750:	a8abc83a 	sub	r21,r21,r2
   31754:	008003c4 	movi	r2,15
   31758:	3007883a 	mov	r3,r6
   3175c:	34c03fcc 	andi	r19,r6,255
   31760:	11009036 	bltu	r2,r4,319a4 <__divdf3+0x31c>
   31764:	200890ba 	slli	r4,r4,2
   31768:	008000f4 	movhi	r2,3
   3176c:	1085df04 	addi	r2,r2,6012
   31770:	2089883a 	add	r4,r4,r2
   31774:	20800017 	ldw	r2,0(r4)
   31778:	1000683a 	jmp	r2
   3177c:	000319a4 	muli	zero,zero,3174
   31780:	000317f4 	movhi	zero,3167
   31784:	00031994 	movui	zero,3174
   31788:	000317e8 	cmpgeui	zero,zero,3167
   3178c:	00031994 	movui	zero,3174
   31790:	00031968 	cmpgeui	zero,zero,3173
   31794:	00031994 	movui	zero,3174
   31798:	000317e8 	cmpgeui	zero,zero,3167
   3179c:	000317f4 	movhi	zero,3167
   317a0:	000317f4 	movhi	zero,3167
   317a4:	00031968 	cmpgeui	zero,zero,3173
   317a8:	000317e8 	cmpgeui	zero,zero,3167
   317ac:	000317d8 	cmpnei	zero,zero,3167
   317b0:	000317d8 	cmpnei	zero,zero,3167
   317b4:	000317d8 	cmpnei	zero,zero,3167
   317b8:	00031c88 	cmpgei	zero,zero,3186
   317bc:	2404b03a 	or	r2,r4,r16
   317c0:	1000661e 	bne	r2,zero,3195c <__divdf3+0x2d4>
   317c4:	04c00204 	movi	r19,8
   317c8:	0021883a 	mov	r16,zero
   317cc:	0025883a 	mov	r18,zero
   317d0:	02400084 	movi	r9,2
   317d4:	003fca06 	br	31700 <__alt_mem_sdram_controller_0+0xc0031700>
   317d8:	8023883a 	mov	r17,r16
   317dc:	9011883a 	mov	r8,r18
   317e0:	e02f883a 	mov	r23,fp
   317e4:	480f883a 	mov	r7,r9
   317e8:	00800084 	movi	r2,2
   317ec:	3881311e 	bne	r7,r2,31cb4 <__divdf3+0x62c>
   317f0:	b827883a 	mov	r19,r23
   317f4:	98c0004c 	andi	r3,r19,1
   317f8:	0081ffc4 	movi	r2,2047
   317fc:	000b883a 	mov	r5,zero
   31800:	0025883a 	mov	r18,zero
   31804:	1004953a 	slli	r2,r2,20
   31808:	18c03fcc 	andi	r3,r3,255
   3180c:	04400434 	movhi	r17,16
   31810:	8c7fffc4 	addi	r17,r17,-1
   31814:	180697fa 	slli	r3,r3,31
   31818:	2c4a703a 	and	r5,r5,r17
   3181c:	288ab03a 	or	r5,r5,r2
   31820:	28c6b03a 	or	r3,r5,r3
   31824:	9005883a 	mov	r2,r18
   31828:	dfc00d17 	ldw	ra,52(sp)
   3182c:	df000c17 	ldw	fp,48(sp)
   31830:	ddc00b17 	ldw	r23,44(sp)
   31834:	dd800a17 	ldw	r22,40(sp)
   31838:	dd400917 	ldw	r21,36(sp)
   3183c:	dd000817 	ldw	r20,32(sp)
   31840:	dcc00717 	ldw	r19,28(sp)
   31844:	dc800617 	ldw	r18,24(sp)
   31848:	dc400517 	ldw	r17,20(sp)
   3184c:	dc000417 	ldw	r16,16(sp)
   31850:	dec00e04 	addi	sp,sp,56
   31854:	f800283a 	ret
   31858:	2404b03a 	or	r2,r4,r16
   3185c:	2027883a 	mov	r19,r4
   31860:	10003926 	beq	r2,zero,31948 <__divdf3+0x2c0>
   31864:	80012e26 	beq	r16,zero,31d20 <__divdf3+0x698>
   31868:	8009883a 	mov	r4,r16
   3186c:	d9800315 	stw	r6,12(sp)
   31870:	d9c00215 	stw	r7,8(sp)
   31874:	00333e00 	call	333e0 <__clzsi2>
   31878:	d9800317 	ldw	r6,12(sp)
   3187c:	d9c00217 	ldw	r7,8(sp)
   31880:	113ffd44 	addi	r4,r2,-11
   31884:	00c00704 	movi	r3,28
   31888:	19012116 	blt	r3,r4,31d10 <__divdf3+0x688>
   3188c:	00c00744 	movi	r3,29
   31890:	147ffe04 	addi	r17,r2,-8
   31894:	1907c83a 	sub	r3,r3,r4
   31898:	8460983a 	sll	r16,r16,r17
   3189c:	98c6d83a 	srl	r3,r19,r3
   318a0:	9c64983a 	sll	r18,r19,r17
   318a4:	1c20b03a 	or	r16,r3,r16
   318a8:	1080fcc4 	addi	r2,r2,1011
   318ac:	00abc83a 	sub	r21,zero,r2
   318b0:	0027883a 	mov	r19,zero
   318b4:	0013883a 	mov	r9,zero
   318b8:	003f9106 	br	31700 <__alt_mem_sdram_controller_0+0xc0031700>
   318bc:	3446b03a 	or	r3,r6,r17
   318c0:	18001f1e 	bne	r3,zero,31940 <__divdf3+0x2b8>
   318c4:	0023883a 	mov	r17,zero
   318c8:	0011883a 	mov	r8,zero
   318cc:	01c00084 	movi	r7,2
   318d0:	003f9d06 	br	31748 <__alt_mem_sdram_controller_0+0xc0031748>
   318d4:	3446b03a 	or	r3,r6,r17
   318d8:	18001526 	beq	r3,zero,31930 <__divdf3+0x2a8>
   318dc:	88011b26 	beq	r17,zero,31d4c <__divdf3+0x6c4>
   318e0:	8809883a 	mov	r4,r17
   318e4:	d9800315 	stw	r6,12(sp)
   318e8:	da400115 	stw	r9,4(sp)
   318ec:	00333e00 	call	333e0 <__clzsi2>
   318f0:	d9800317 	ldw	r6,12(sp)
   318f4:	da400117 	ldw	r9,4(sp)
   318f8:	113ffd44 	addi	r4,r2,-11
   318fc:	00c00704 	movi	r3,28
   31900:	19010e16 	blt	r3,r4,31d3c <__divdf3+0x6b4>
   31904:	00c00744 	movi	r3,29
   31908:	123ffe04 	addi	r8,r2,-8
   3190c:	1907c83a 	sub	r3,r3,r4
   31910:	8a22983a 	sll	r17,r17,r8
   31914:	30c6d83a 	srl	r3,r6,r3
   31918:	3210983a 	sll	r8,r6,r8
   3191c:	1c62b03a 	or	r17,r3,r17
   31920:	1080fcc4 	addi	r2,r2,1011
   31924:	0085c83a 	sub	r2,zero,r2
   31928:	000f883a 	mov	r7,zero
   3192c:	003f8606 	br	31748 <__alt_mem_sdram_controller_0+0xc0031748>
   31930:	0023883a 	mov	r17,zero
   31934:	0011883a 	mov	r8,zero
   31938:	01c00044 	movi	r7,1
   3193c:	003f8206 	br	31748 <__alt_mem_sdram_controller_0+0xc0031748>
   31940:	01c000c4 	movi	r7,3
   31944:	003f8006 	br	31748 <__alt_mem_sdram_controller_0+0xc0031748>
   31948:	04c00104 	movi	r19,4
   3194c:	0021883a 	mov	r16,zero
   31950:	0025883a 	mov	r18,zero
   31954:	02400044 	movi	r9,1
   31958:	003f6906 	br	31700 <__alt_mem_sdram_controller_0+0xc0031700>
   3195c:	04c00304 	movi	r19,12
   31960:	024000c4 	movi	r9,3
   31964:	003f6606 	br	31700 <__alt_mem_sdram_controller_0+0xc0031700>
   31968:	01400434 	movhi	r5,16
   3196c:	0007883a 	mov	r3,zero
   31970:	297fffc4 	addi	r5,r5,-1
   31974:	04bfffc4 	movi	r18,-1
   31978:	0081ffc4 	movi	r2,2047
   3197c:	003fa106 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   31980:	00c00044 	movi	r3,1
   31984:	1887c83a 	sub	r3,r3,r2
   31988:	01000e04 	movi	r4,56
   3198c:	20c1210e 	bge	r4,r3,31e14 <__divdf3+0x78c>
   31990:	98c0004c 	andi	r3,r19,1
   31994:	0005883a 	mov	r2,zero
   31998:	000b883a 	mov	r5,zero
   3199c:	0025883a 	mov	r18,zero
   319a0:	003f9806 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   319a4:	8c00fd36 	bltu	r17,r16,31d9c <__divdf3+0x714>
   319a8:	8440fb26 	beq	r16,r17,31d98 <__divdf3+0x710>
   319ac:	8007883a 	mov	r3,r16
   319b0:	ad7fffc4 	addi	r21,r21,-1
   319b4:	0021883a 	mov	r16,zero
   319b8:	4004d63a 	srli	r2,r8,24
   319bc:	8822923a 	slli	r17,r17,8
   319c0:	1809883a 	mov	r4,r3
   319c4:	402c923a 	slli	r22,r8,8
   319c8:	88b8b03a 	or	fp,r17,r2
   319cc:	e028d43a 	srli	r20,fp,16
   319d0:	d8c00015 	stw	r3,0(sp)
   319d4:	e5ffffcc 	andi	r23,fp,65535
   319d8:	a00b883a 	mov	r5,r20
   319dc:	002260c0 	call	2260c <__udivsi3>
   319e0:	d8c00017 	ldw	r3,0(sp)
   319e4:	a00b883a 	mov	r5,r20
   319e8:	d8800315 	stw	r2,12(sp)
   319ec:	1809883a 	mov	r4,r3
   319f0:	00226700 	call	22670 <__umodsi3>
   319f4:	d9800317 	ldw	r6,12(sp)
   319f8:	1006943a 	slli	r3,r2,16
   319fc:	9004d43a 	srli	r2,r18,16
   31a00:	b9a3383a 	mul	r17,r23,r6
   31a04:	10c4b03a 	or	r2,r2,r3
   31a08:	1440062e 	bgeu	r2,r17,31a24 <__divdf3+0x39c>
   31a0c:	1705883a 	add	r2,r2,fp
   31a10:	30ffffc4 	addi	r3,r6,-1
   31a14:	1700ee36 	bltu	r2,fp,31dd0 <__divdf3+0x748>
   31a18:	1440ed2e 	bgeu	r2,r17,31dd0 <__divdf3+0x748>
   31a1c:	31bfff84 	addi	r6,r6,-2
   31a20:	1705883a 	add	r2,r2,fp
   31a24:	1463c83a 	sub	r17,r2,r17
   31a28:	a00b883a 	mov	r5,r20
   31a2c:	8809883a 	mov	r4,r17
   31a30:	d9800315 	stw	r6,12(sp)
   31a34:	002260c0 	call	2260c <__udivsi3>
   31a38:	a00b883a 	mov	r5,r20
   31a3c:	8809883a 	mov	r4,r17
   31a40:	d8800215 	stw	r2,8(sp)
   31a44:	00226700 	call	22670 <__umodsi3>
   31a48:	d9c00217 	ldw	r7,8(sp)
   31a4c:	1004943a 	slli	r2,r2,16
   31a50:	94bfffcc 	andi	r18,r18,65535
   31a54:	b9d1383a 	mul	r8,r23,r7
   31a58:	90a4b03a 	or	r18,r18,r2
   31a5c:	d9800317 	ldw	r6,12(sp)
   31a60:	9200062e 	bgeu	r18,r8,31a7c <__divdf3+0x3f4>
   31a64:	9725883a 	add	r18,r18,fp
   31a68:	38bfffc4 	addi	r2,r7,-1
   31a6c:	9700d636 	bltu	r18,fp,31dc8 <__divdf3+0x740>
   31a70:	9200d52e 	bgeu	r18,r8,31dc8 <__divdf3+0x740>
   31a74:	39ffff84 	addi	r7,r7,-2
   31a78:	9725883a 	add	r18,r18,fp
   31a7c:	3004943a 	slli	r2,r6,16
   31a80:	b012d43a 	srli	r9,r22,16
   31a84:	b1bfffcc 	andi	r6,r22,65535
   31a88:	11e2b03a 	or	r17,r2,r7
   31a8c:	8806d43a 	srli	r3,r17,16
   31a90:	893fffcc 	andi	r4,r17,65535
   31a94:	218b383a 	mul	r5,r4,r6
   31a98:	30c5383a 	mul	r2,r6,r3
   31a9c:	2249383a 	mul	r4,r4,r9
   31aa0:	280ed43a 	srli	r7,r5,16
   31aa4:	9225c83a 	sub	r18,r18,r8
   31aa8:	2089883a 	add	r4,r4,r2
   31aac:	3909883a 	add	r4,r7,r4
   31ab0:	1a47383a 	mul	r3,r3,r9
   31ab4:	2080022e 	bgeu	r4,r2,31ac0 <__divdf3+0x438>
   31ab8:	00800074 	movhi	r2,1
   31abc:	1887883a 	add	r3,r3,r2
   31ac0:	2004d43a 	srli	r2,r4,16
   31ac4:	2008943a 	slli	r4,r4,16
   31ac8:	297fffcc 	andi	r5,r5,65535
   31acc:	10c7883a 	add	r3,r2,r3
   31ad0:	2149883a 	add	r4,r4,r5
   31ad4:	90c0a536 	bltu	r18,r3,31d6c <__divdf3+0x6e4>
   31ad8:	90c0bf26 	beq	r18,r3,31dd8 <__divdf3+0x750>
   31adc:	90c7c83a 	sub	r3,r18,r3
   31ae0:	810fc83a 	sub	r7,r16,r4
   31ae4:	81e5803a 	cmpltu	r18,r16,r7
   31ae8:	1ca5c83a 	sub	r18,r3,r18
   31aec:	e480c126 	beq	fp,r18,31df4 <__divdf3+0x76c>
   31af0:	a00b883a 	mov	r5,r20
   31af4:	9009883a 	mov	r4,r18
   31af8:	d9800315 	stw	r6,12(sp)
   31afc:	d9c00215 	stw	r7,8(sp)
   31b00:	da400115 	stw	r9,4(sp)
   31b04:	002260c0 	call	2260c <__udivsi3>
   31b08:	a00b883a 	mov	r5,r20
   31b0c:	9009883a 	mov	r4,r18
   31b10:	d8800015 	stw	r2,0(sp)
   31b14:	00226700 	call	22670 <__umodsi3>
   31b18:	d9c00217 	ldw	r7,8(sp)
   31b1c:	da000017 	ldw	r8,0(sp)
   31b20:	1006943a 	slli	r3,r2,16
   31b24:	3804d43a 	srli	r2,r7,16
   31b28:	ba21383a 	mul	r16,r23,r8
   31b2c:	d9800317 	ldw	r6,12(sp)
   31b30:	10c4b03a 	or	r2,r2,r3
   31b34:	da400117 	ldw	r9,4(sp)
   31b38:	1400062e 	bgeu	r2,r16,31b54 <__divdf3+0x4cc>
   31b3c:	1705883a 	add	r2,r2,fp
   31b40:	40ffffc4 	addi	r3,r8,-1
   31b44:	1700ad36 	bltu	r2,fp,31dfc <__divdf3+0x774>
   31b48:	1400ac2e 	bgeu	r2,r16,31dfc <__divdf3+0x774>
   31b4c:	423fff84 	addi	r8,r8,-2
   31b50:	1705883a 	add	r2,r2,fp
   31b54:	1421c83a 	sub	r16,r2,r16
   31b58:	a00b883a 	mov	r5,r20
   31b5c:	8009883a 	mov	r4,r16
   31b60:	d9800315 	stw	r6,12(sp)
   31b64:	d9c00215 	stw	r7,8(sp)
   31b68:	da000015 	stw	r8,0(sp)
   31b6c:	da400115 	stw	r9,4(sp)
   31b70:	002260c0 	call	2260c <__udivsi3>
   31b74:	8009883a 	mov	r4,r16
   31b78:	a00b883a 	mov	r5,r20
   31b7c:	1025883a 	mov	r18,r2
   31b80:	00226700 	call	22670 <__umodsi3>
   31b84:	d9c00217 	ldw	r7,8(sp)
   31b88:	1004943a 	slli	r2,r2,16
   31b8c:	bcaf383a 	mul	r23,r23,r18
   31b90:	393fffcc 	andi	r4,r7,65535
   31b94:	2088b03a 	or	r4,r4,r2
   31b98:	d9800317 	ldw	r6,12(sp)
   31b9c:	da000017 	ldw	r8,0(sp)
   31ba0:	da400117 	ldw	r9,4(sp)
   31ba4:	25c0062e 	bgeu	r4,r23,31bc0 <__divdf3+0x538>
   31ba8:	2709883a 	add	r4,r4,fp
   31bac:	90bfffc4 	addi	r2,r18,-1
   31bb0:	27009436 	bltu	r4,fp,31e04 <__divdf3+0x77c>
   31bb4:	25c0932e 	bgeu	r4,r23,31e04 <__divdf3+0x77c>
   31bb8:	94bfff84 	addi	r18,r18,-2
   31bbc:	2709883a 	add	r4,r4,fp
   31bc0:	4004943a 	slli	r2,r8,16
   31bc4:	25efc83a 	sub	r23,r4,r23
   31bc8:	1490b03a 	or	r8,r2,r18
   31bcc:	4008d43a 	srli	r4,r8,16
   31bd0:	40ffffcc 	andi	r3,r8,65535
   31bd4:	30c5383a 	mul	r2,r6,r3
   31bd8:	1a47383a 	mul	r3,r3,r9
   31bdc:	310d383a 	mul	r6,r6,r4
   31be0:	100ad43a 	srli	r5,r2,16
   31be4:	4913383a 	mul	r9,r9,r4
   31be8:	1987883a 	add	r3,r3,r6
   31bec:	28c7883a 	add	r3,r5,r3
   31bf0:	1980022e 	bgeu	r3,r6,31bfc <__divdf3+0x574>
   31bf4:	01000074 	movhi	r4,1
   31bf8:	4913883a 	add	r9,r9,r4
   31bfc:	1808d43a 	srli	r4,r3,16
   31c00:	1806943a 	slli	r3,r3,16
   31c04:	10bfffcc 	andi	r2,r2,65535
   31c08:	2253883a 	add	r9,r4,r9
   31c0c:	1887883a 	add	r3,r3,r2
   31c10:	ba403836 	bltu	r23,r9,31cf4 <__divdf3+0x66c>
   31c14:	ba403626 	beq	r23,r9,31cf0 <__divdf3+0x668>
   31c18:	42000054 	ori	r8,r8,1
   31c1c:	a880ffc4 	addi	r2,r21,1023
   31c20:	00bf570e 	bge	zero,r2,31980 <__alt_mem_sdram_controller_0+0xc0031980>
   31c24:	40c001cc 	andi	r3,r8,7
   31c28:	18000726 	beq	r3,zero,31c48 <__divdf3+0x5c0>
   31c2c:	40c003cc 	andi	r3,r8,15
   31c30:	01000104 	movi	r4,4
   31c34:	19000426 	beq	r3,r4,31c48 <__divdf3+0x5c0>
   31c38:	4107883a 	add	r3,r8,r4
   31c3c:	1a11803a 	cmpltu	r8,r3,r8
   31c40:	8a23883a 	add	r17,r17,r8
   31c44:	1811883a 	mov	r8,r3
   31c48:	88c0402c 	andhi	r3,r17,256
   31c4c:	18000426 	beq	r3,zero,31c60 <__divdf3+0x5d8>
   31c50:	00ffc034 	movhi	r3,65280
   31c54:	18ffffc4 	addi	r3,r3,-1
   31c58:	a8810004 	addi	r2,r21,1024
   31c5c:	88e2703a 	and	r17,r17,r3
   31c60:	00c1ff84 	movi	r3,2046
   31c64:	18bee316 	blt	r3,r2,317f4 <__alt_mem_sdram_controller_0+0xc00317f4>
   31c68:	8824977a 	slli	r18,r17,29
   31c6c:	4010d0fa 	srli	r8,r8,3
   31c70:	8822927a 	slli	r17,r17,9
   31c74:	1081ffcc 	andi	r2,r2,2047
   31c78:	9224b03a 	or	r18,r18,r8
   31c7c:	880ad33a 	srli	r5,r17,12
   31c80:	98c0004c 	andi	r3,r19,1
   31c84:	003edf06 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   31c88:	8080022c 	andhi	r2,r16,8
   31c8c:	10001226 	beq	r2,zero,31cd8 <__divdf3+0x650>
   31c90:	8880022c 	andhi	r2,r17,8
   31c94:	1000101e 	bne	r2,zero,31cd8 <__divdf3+0x650>
   31c98:	00800434 	movhi	r2,16
   31c9c:	89400234 	orhi	r5,r17,8
   31ca0:	10bfffc4 	addi	r2,r2,-1
   31ca4:	b007883a 	mov	r3,r22
   31ca8:	288a703a 	and	r5,r5,r2
   31cac:	4025883a 	mov	r18,r8
   31cb0:	003f3106 	br	31978 <__alt_mem_sdram_controller_0+0xc0031978>
   31cb4:	008000c4 	movi	r2,3
   31cb8:	3880a626 	beq	r7,r2,31f54 <__divdf3+0x8cc>
   31cbc:	00800044 	movi	r2,1
   31cc0:	3880521e 	bne	r7,r2,31e0c <__divdf3+0x784>
   31cc4:	b807883a 	mov	r3,r23
   31cc8:	0005883a 	mov	r2,zero
   31ccc:	000b883a 	mov	r5,zero
   31cd0:	0025883a 	mov	r18,zero
   31cd4:	003ecb06 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   31cd8:	00800434 	movhi	r2,16
   31cdc:	81400234 	orhi	r5,r16,8
   31ce0:	10bfffc4 	addi	r2,r2,-1
   31ce4:	a007883a 	mov	r3,r20
   31ce8:	288a703a 	and	r5,r5,r2
   31cec:	003f2206 	br	31978 <__alt_mem_sdram_controller_0+0xc0031978>
   31cf0:	183fca26 	beq	r3,zero,31c1c <__alt_mem_sdram_controller_0+0xc0031c1c>
   31cf4:	e5ef883a 	add	r23,fp,r23
   31cf8:	40bfffc4 	addi	r2,r8,-1
   31cfc:	bf00392e 	bgeu	r23,fp,31de4 <__divdf3+0x75c>
   31d00:	1011883a 	mov	r8,r2
   31d04:	ba7fc41e 	bne	r23,r9,31c18 <__alt_mem_sdram_controller_0+0xc0031c18>
   31d08:	b0ffc31e 	bne	r22,r3,31c18 <__alt_mem_sdram_controller_0+0xc0031c18>
   31d0c:	003fc306 	br	31c1c <__alt_mem_sdram_controller_0+0xc0031c1c>
   31d10:	143ff604 	addi	r16,r2,-40
   31d14:	9c20983a 	sll	r16,r19,r16
   31d18:	0025883a 	mov	r18,zero
   31d1c:	003ee206 	br	318a8 <__alt_mem_sdram_controller_0+0xc00318a8>
   31d20:	d9800315 	stw	r6,12(sp)
   31d24:	d9c00215 	stw	r7,8(sp)
   31d28:	00333e00 	call	333e0 <__clzsi2>
   31d2c:	10800804 	addi	r2,r2,32
   31d30:	d9c00217 	ldw	r7,8(sp)
   31d34:	d9800317 	ldw	r6,12(sp)
   31d38:	003ed106 	br	31880 <__alt_mem_sdram_controller_0+0xc0031880>
   31d3c:	147ff604 	addi	r17,r2,-40
   31d40:	3462983a 	sll	r17,r6,r17
   31d44:	0011883a 	mov	r8,zero
   31d48:	003ef506 	br	31920 <__alt_mem_sdram_controller_0+0xc0031920>
   31d4c:	3009883a 	mov	r4,r6
   31d50:	d9800315 	stw	r6,12(sp)
   31d54:	da400115 	stw	r9,4(sp)
   31d58:	00333e00 	call	333e0 <__clzsi2>
   31d5c:	10800804 	addi	r2,r2,32
   31d60:	da400117 	ldw	r9,4(sp)
   31d64:	d9800317 	ldw	r6,12(sp)
   31d68:	003ee306 	br	318f8 <__alt_mem_sdram_controller_0+0xc00318f8>
   31d6c:	85a1883a 	add	r16,r16,r22
   31d70:	8585803a 	cmpltu	r2,r16,r22
   31d74:	1705883a 	add	r2,r2,fp
   31d78:	14a5883a 	add	r18,r2,r18
   31d7c:	88bfffc4 	addi	r2,r17,-1
   31d80:	e4800c2e 	bgeu	fp,r18,31db4 <__divdf3+0x72c>
   31d84:	90c03e36 	bltu	r18,r3,31e80 <__divdf3+0x7f8>
   31d88:	1c806926 	beq	r3,r18,31f30 <__divdf3+0x8a8>
   31d8c:	90c7c83a 	sub	r3,r18,r3
   31d90:	1023883a 	mov	r17,r2
   31d94:	003f5206 	br	31ae0 <__alt_mem_sdram_controller_0+0xc0031ae0>
   31d98:	923f0436 	bltu	r18,r8,319ac <__alt_mem_sdram_controller_0+0xc00319ac>
   31d9c:	800897fa 	slli	r4,r16,31
   31da0:	9004d07a 	srli	r2,r18,1
   31da4:	8006d07a 	srli	r3,r16,1
   31da8:	902097fa 	slli	r16,r18,31
   31dac:	20a4b03a 	or	r18,r4,r2
   31db0:	003f0106 	br	319b8 <__alt_mem_sdram_controller_0+0xc00319b8>
   31db4:	e4bff51e 	bne	fp,r18,31d8c <__alt_mem_sdram_controller_0+0xc0031d8c>
   31db8:	85bff22e 	bgeu	r16,r22,31d84 <__alt_mem_sdram_controller_0+0xc0031d84>
   31dbc:	e0c7c83a 	sub	r3,fp,r3
   31dc0:	1023883a 	mov	r17,r2
   31dc4:	003f4606 	br	31ae0 <__alt_mem_sdram_controller_0+0xc0031ae0>
   31dc8:	100f883a 	mov	r7,r2
   31dcc:	003f2b06 	br	31a7c <__alt_mem_sdram_controller_0+0xc0031a7c>
   31dd0:	180d883a 	mov	r6,r3
   31dd4:	003f1306 	br	31a24 <__alt_mem_sdram_controller_0+0xc0031a24>
   31dd8:	813fe436 	bltu	r16,r4,31d6c <__alt_mem_sdram_controller_0+0xc0031d6c>
   31ddc:	0007883a 	mov	r3,zero
   31de0:	003f3f06 	br	31ae0 <__alt_mem_sdram_controller_0+0xc0031ae0>
   31de4:	ba402c36 	bltu	r23,r9,31e98 <__divdf3+0x810>
   31de8:	4dc05426 	beq	r9,r23,31f3c <__divdf3+0x8b4>
   31dec:	1011883a 	mov	r8,r2
   31df0:	003f8906 	br	31c18 <__alt_mem_sdram_controller_0+0xc0031c18>
   31df4:	023fffc4 	movi	r8,-1
   31df8:	003f8806 	br	31c1c <__alt_mem_sdram_controller_0+0xc0031c1c>
   31dfc:	1811883a 	mov	r8,r3
   31e00:	003f5406 	br	31b54 <__alt_mem_sdram_controller_0+0xc0031b54>
   31e04:	1025883a 	mov	r18,r2
   31e08:	003f6d06 	br	31bc0 <__alt_mem_sdram_controller_0+0xc0031bc0>
   31e0c:	b827883a 	mov	r19,r23
   31e10:	003f8206 	br	31c1c <__alt_mem_sdram_controller_0+0xc0031c1c>
   31e14:	010007c4 	movi	r4,31
   31e18:	20c02616 	blt	r4,r3,31eb4 <__divdf3+0x82c>
   31e1c:	00800804 	movi	r2,32
   31e20:	10c5c83a 	sub	r2,r2,r3
   31e24:	888a983a 	sll	r5,r17,r2
   31e28:	40c8d83a 	srl	r4,r8,r3
   31e2c:	4084983a 	sll	r2,r8,r2
   31e30:	88e2d83a 	srl	r17,r17,r3
   31e34:	2906b03a 	or	r3,r5,r4
   31e38:	1004c03a 	cmpne	r2,r2,zero
   31e3c:	1886b03a 	or	r3,r3,r2
   31e40:	188001cc 	andi	r2,r3,7
   31e44:	10000726 	beq	r2,zero,31e64 <__divdf3+0x7dc>
   31e48:	188003cc 	andi	r2,r3,15
   31e4c:	01000104 	movi	r4,4
   31e50:	11000426 	beq	r2,r4,31e64 <__divdf3+0x7dc>
   31e54:	1805883a 	mov	r2,r3
   31e58:	10c00104 	addi	r3,r2,4
   31e5c:	1885803a 	cmpltu	r2,r3,r2
   31e60:	88a3883a 	add	r17,r17,r2
   31e64:	8880202c 	andhi	r2,r17,128
   31e68:	10002726 	beq	r2,zero,31f08 <__divdf3+0x880>
   31e6c:	98c0004c 	andi	r3,r19,1
   31e70:	00800044 	movi	r2,1
   31e74:	000b883a 	mov	r5,zero
   31e78:	0025883a 	mov	r18,zero
   31e7c:	003e6106 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   31e80:	85a1883a 	add	r16,r16,r22
   31e84:	8585803a 	cmpltu	r2,r16,r22
   31e88:	1705883a 	add	r2,r2,fp
   31e8c:	14a5883a 	add	r18,r2,r18
   31e90:	8c7fff84 	addi	r17,r17,-2
   31e94:	003f1106 	br	31adc <__alt_mem_sdram_controller_0+0xc0031adc>
   31e98:	b589883a 	add	r4,r22,r22
   31e9c:	25ad803a 	cmpltu	r22,r4,r22
   31ea0:	b739883a 	add	fp,r22,fp
   31ea4:	40bfff84 	addi	r2,r8,-2
   31ea8:	bf2f883a 	add	r23,r23,fp
   31eac:	202d883a 	mov	r22,r4
   31eb0:	003f9306 	br	31d00 <__alt_mem_sdram_controller_0+0xc0031d00>
   31eb4:	013ff844 	movi	r4,-31
   31eb8:	2085c83a 	sub	r2,r4,r2
   31ebc:	8888d83a 	srl	r4,r17,r2
   31ec0:	00800804 	movi	r2,32
   31ec4:	18802126 	beq	r3,r2,31f4c <__divdf3+0x8c4>
   31ec8:	00801004 	movi	r2,64
   31ecc:	10c5c83a 	sub	r2,r2,r3
   31ed0:	8884983a 	sll	r2,r17,r2
   31ed4:	1204b03a 	or	r2,r2,r8
   31ed8:	1004c03a 	cmpne	r2,r2,zero
   31edc:	2084b03a 	or	r2,r4,r2
   31ee0:	144001cc 	andi	r17,r2,7
   31ee4:	88000d1e 	bne	r17,zero,31f1c <__divdf3+0x894>
   31ee8:	000b883a 	mov	r5,zero
   31eec:	1024d0fa 	srli	r18,r2,3
   31ef0:	98c0004c 	andi	r3,r19,1
   31ef4:	0005883a 	mov	r2,zero
   31ef8:	9464b03a 	or	r18,r18,r17
   31efc:	003e4106 	br	31804 <__alt_mem_sdram_controller_0+0xc0031804>
   31f00:	1007883a 	mov	r3,r2
   31f04:	0023883a 	mov	r17,zero
   31f08:	880a927a 	slli	r5,r17,9
   31f0c:	1805883a 	mov	r2,r3
   31f10:	8822977a 	slli	r17,r17,29
   31f14:	280ad33a 	srli	r5,r5,12
   31f18:	003ff406 	br	31eec <__alt_mem_sdram_controller_0+0xc0031eec>
   31f1c:	10c003cc 	andi	r3,r2,15
   31f20:	01000104 	movi	r4,4
   31f24:	193ff626 	beq	r3,r4,31f00 <__alt_mem_sdram_controller_0+0xc0031f00>
   31f28:	0023883a 	mov	r17,zero
   31f2c:	003fca06 	br	31e58 <__alt_mem_sdram_controller_0+0xc0031e58>
   31f30:	813fd336 	bltu	r16,r4,31e80 <__alt_mem_sdram_controller_0+0xc0031e80>
   31f34:	1023883a 	mov	r17,r2
   31f38:	003fa806 	br	31ddc <__alt_mem_sdram_controller_0+0xc0031ddc>
   31f3c:	b0ffd636 	bltu	r22,r3,31e98 <__alt_mem_sdram_controller_0+0xc0031e98>
   31f40:	1011883a 	mov	r8,r2
   31f44:	b0ff341e 	bne	r22,r3,31c18 <__alt_mem_sdram_controller_0+0xc0031c18>
   31f48:	003f3406 	br	31c1c <__alt_mem_sdram_controller_0+0xc0031c1c>
   31f4c:	0005883a 	mov	r2,zero
   31f50:	003fe006 	br	31ed4 <__alt_mem_sdram_controller_0+0xc0031ed4>
   31f54:	00800434 	movhi	r2,16
   31f58:	89400234 	orhi	r5,r17,8
   31f5c:	10bfffc4 	addi	r2,r2,-1
   31f60:	b807883a 	mov	r3,r23
   31f64:	288a703a 	and	r5,r5,r2
   31f68:	4025883a 	mov	r18,r8
   31f6c:	003e8206 	br	31978 <__alt_mem_sdram_controller_0+0xc0031978>

00031f70 <__eqdf2>:
   31f70:	2804d53a 	srli	r2,r5,20
   31f74:	3806d53a 	srli	r3,r7,20
   31f78:	02000434 	movhi	r8,16
   31f7c:	423fffc4 	addi	r8,r8,-1
   31f80:	1081ffcc 	andi	r2,r2,2047
   31f84:	0281ffc4 	movi	r10,2047
   31f88:	2a12703a 	and	r9,r5,r8
   31f8c:	18c1ffcc 	andi	r3,r3,2047
   31f90:	3a10703a 	and	r8,r7,r8
   31f94:	280ad7fa 	srli	r5,r5,31
   31f98:	380ed7fa 	srli	r7,r7,31
   31f9c:	12801026 	beq	r2,r10,31fe0 <__eqdf2+0x70>
   31fa0:	0281ffc4 	movi	r10,2047
   31fa4:	1a800a26 	beq	r3,r10,31fd0 <__eqdf2+0x60>
   31fa8:	10c00226 	beq	r2,r3,31fb4 <__eqdf2+0x44>
   31fac:	00800044 	movi	r2,1
   31fb0:	f800283a 	ret
   31fb4:	4a3ffd1e 	bne	r9,r8,31fac <__alt_mem_sdram_controller_0+0xc0031fac>
   31fb8:	21bffc1e 	bne	r4,r6,31fac <__alt_mem_sdram_controller_0+0xc0031fac>
   31fbc:	29c00c26 	beq	r5,r7,31ff0 <__eqdf2+0x80>
   31fc0:	103ffa1e 	bne	r2,zero,31fac <__alt_mem_sdram_controller_0+0xc0031fac>
   31fc4:	2244b03a 	or	r2,r4,r9
   31fc8:	1004c03a 	cmpne	r2,r2,zero
   31fcc:	f800283a 	ret
   31fd0:	3214b03a 	or	r10,r6,r8
   31fd4:	503ff426 	beq	r10,zero,31fa8 <__alt_mem_sdram_controller_0+0xc0031fa8>
   31fd8:	00800044 	movi	r2,1
   31fdc:	f800283a 	ret
   31fe0:	2254b03a 	or	r10,r4,r9
   31fe4:	503fee26 	beq	r10,zero,31fa0 <__alt_mem_sdram_controller_0+0xc0031fa0>
   31fe8:	00800044 	movi	r2,1
   31fec:	f800283a 	ret
   31ff0:	0005883a 	mov	r2,zero
   31ff4:	f800283a 	ret

00031ff8 <__gedf2>:
   31ff8:	2804d53a 	srli	r2,r5,20
   31ffc:	3806d53a 	srli	r3,r7,20
   32000:	02000434 	movhi	r8,16
   32004:	423fffc4 	addi	r8,r8,-1
   32008:	1081ffcc 	andi	r2,r2,2047
   3200c:	0241ffc4 	movi	r9,2047
   32010:	2a14703a 	and	r10,r5,r8
   32014:	18c1ffcc 	andi	r3,r3,2047
   32018:	3a10703a 	and	r8,r7,r8
   3201c:	280ad7fa 	srli	r5,r5,31
   32020:	380ed7fa 	srli	r7,r7,31
   32024:	12401d26 	beq	r2,r9,3209c <__gedf2+0xa4>
   32028:	0241ffc4 	movi	r9,2047
   3202c:	1a401226 	beq	r3,r9,32078 <__gedf2+0x80>
   32030:	1000081e 	bne	r2,zero,32054 <__gedf2+0x5c>
   32034:	2296b03a 	or	r11,r4,r10
   32038:	5813003a 	cmpeq	r9,r11,zero
   3203c:	1800091e 	bne	r3,zero,32064 <__gedf2+0x6c>
   32040:	3218b03a 	or	r12,r6,r8
   32044:	6000071e 	bne	r12,zero,32064 <__gedf2+0x6c>
   32048:	0005883a 	mov	r2,zero
   3204c:	5800101e 	bne	r11,zero,32090 <__gedf2+0x98>
   32050:	f800283a 	ret
   32054:	18000c1e 	bne	r3,zero,32088 <__gedf2+0x90>
   32058:	3212b03a 	or	r9,r6,r8
   3205c:	48000c26 	beq	r9,zero,32090 <__gedf2+0x98>
   32060:	0013883a 	mov	r9,zero
   32064:	39c03fcc 	andi	r7,r7,255
   32068:	48000826 	beq	r9,zero,3208c <__gedf2+0x94>
   3206c:	38000926 	beq	r7,zero,32094 <__gedf2+0x9c>
   32070:	00800044 	movi	r2,1
   32074:	f800283a 	ret
   32078:	3212b03a 	or	r9,r6,r8
   3207c:	483fec26 	beq	r9,zero,32030 <__alt_mem_sdram_controller_0+0xc0032030>
   32080:	00bfff84 	movi	r2,-2
   32084:	f800283a 	ret
   32088:	39c03fcc 	andi	r7,r7,255
   3208c:	29c00626 	beq	r5,r7,320a8 <__gedf2+0xb0>
   32090:	283ff726 	beq	r5,zero,32070 <__alt_mem_sdram_controller_0+0xc0032070>
   32094:	00bfffc4 	movi	r2,-1
   32098:	f800283a 	ret
   3209c:	2292b03a 	or	r9,r4,r10
   320a0:	483fe126 	beq	r9,zero,32028 <__alt_mem_sdram_controller_0+0xc0032028>
   320a4:	003ff606 	br	32080 <__alt_mem_sdram_controller_0+0xc0032080>
   320a8:	18bff916 	blt	r3,r2,32090 <__alt_mem_sdram_controller_0+0xc0032090>
   320ac:	10c00316 	blt	r2,r3,320bc <__gedf2+0xc4>
   320b0:	42bff736 	bltu	r8,r10,32090 <__alt_mem_sdram_controller_0+0xc0032090>
   320b4:	52000326 	beq	r10,r8,320c4 <__gedf2+0xcc>
   320b8:	5200042e 	bgeu	r10,r8,320cc <__gedf2+0xd4>
   320bc:	283fec1e 	bne	r5,zero,32070 <__alt_mem_sdram_controller_0+0xc0032070>
   320c0:	003ff406 	br	32094 <__alt_mem_sdram_controller_0+0xc0032094>
   320c4:	313ff236 	bltu	r6,r4,32090 <__alt_mem_sdram_controller_0+0xc0032090>
   320c8:	21bffc36 	bltu	r4,r6,320bc <__alt_mem_sdram_controller_0+0xc00320bc>
   320cc:	0005883a 	mov	r2,zero
   320d0:	f800283a 	ret

000320d4 <__ledf2>:
   320d4:	2804d53a 	srli	r2,r5,20
   320d8:	3810d53a 	srli	r8,r7,20
   320dc:	00c00434 	movhi	r3,16
   320e0:	18ffffc4 	addi	r3,r3,-1
   320e4:	1081ffcc 	andi	r2,r2,2047
   320e8:	0241ffc4 	movi	r9,2047
   320ec:	28d4703a 	and	r10,r5,r3
   320f0:	4201ffcc 	andi	r8,r8,2047
   320f4:	38c6703a 	and	r3,r7,r3
   320f8:	280ad7fa 	srli	r5,r5,31
   320fc:	380ed7fa 	srli	r7,r7,31
   32100:	12401f26 	beq	r2,r9,32180 <__ledf2+0xac>
   32104:	0241ffc4 	movi	r9,2047
   32108:	42401426 	beq	r8,r9,3215c <__ledf2+0x88>
   3210c:	1000091e 	bne	r2,zero,32134 <__ledf2+0x60>
   32110:	2296b03a 	or	r11,r4,r10
   32114:	5813003a 	cmpeq	r9,r11,zero
   32118:	29403fcc 	andi	r5,r5,255
   3211c:	40000a1e 	bne	r8,zero,32148 <__ledf2+0x74>
   32120:	30d8b03a 	or	r12,r6,r3
   32124:	6000081e 	bne	r12,zero,32148 <__ledf2+0x74>
   32128:	0005883a 	mov	r2,zero
   3212c:	5800111e 	bne	r11,zero,32174 <__ledf2+0xa0>
   32130:	f800283a 	ret
   32134:	29403fcc 	andi	r5,r5,255
   32138:	40000c1e 	bne	r8,zero,3216c <__ledf2+0x98>
   3213c:	30d2b03a 	or	r9,r6,r3
   32140:	48000c26 	beq	r9,zero,32174 <__ledf2+0xa0>
   32144:	0013883a 	mov	r9,zero
   32148:	39c03fcc 	andi	r7,r7,255
   3214c:	48000826 	beq	r9,zero,32170 <__ledf2+0x9c>
   32150:	38001126 	beq	r7,zero,32198 <__ledf2+0xc4>
   32154:	00800044 	movi	r2,1
   32158:	f800283a 	ret
   3215c:	30d2b03a 	or	r9,r6,r3
   32160:	483fea26 	beq	r9,zero,3210c <__alt_mem_sdram_controller_0+0xc003210c>
   32164:	00800084 	movi	r2,2
   32168:	f800283a 	ret
   3216c:	39c03fcc 	andi	r7,r7,255
   32170:	39400726 	beq	r7,r5,32190 <__ledf2+0xbc>
   32174:	2800081e 	bne	r5,zero,32198 <__ledf2+0xc4>
   32178:	00800044 	movi	r2,1
   3217c:	f800283a 	ret
   32180:	2292b03a 	or	r9,r4,r10
   32184:	483fdf26 	beq	r9,zero,32104 <__alt_mem_sdram_controller_0+0xc0032104>
   32188:	00800084 	movi	r2,2
   3218c:	f800283a 	ret
   32190:	4080030e 	bge	r8,r2,321a0 <__ledf2+0xcc>
   32194:	383fef26 	beq	r7,zero,32154 <__alt_mem_sdram_controller_0+0xc0032154>
   32198:	00bfffc4 	movi	r2,-1
   3219c:	f800283a 	ret
   321a0:	123feb16 	blt	r2,r8,32150 <__alt_mem_sdram_controller_0+0xc0032150>
   321a4:	1abff336 	bltu	r3,r10,32174 <__alt_mem_sdram_controller_0+0xc0032174>
   321a8:	50c00326 	beq	r10,r3,321b8 <__ledf2+0xe4>
   321ac:	50c0042e 	bgeu	r10,r3,321c0 <__ledf2+0xec>
   321b0:	283fe81e 	bne	r5,zero,32154 <__alt_mem_sdram_controller_0+0xc0032154>
   321b4:	003ff806 	br	32198 <__alt_mem_sdram_controller_0+0xc0032198>
   321b8:	313fee36 	bltu	r6,r4,32174 <__alt_mem_sdram_controller_0+0xc0032174>
   321bc:	21bffc36 	bltu	r4,r6,321b0 <__alt_mem_sdram_controller_0+0xc00321b0>
   321c0:	0005883a 	mov	r2,zero
   321c4:	f800283a 	ret

000321c8 <__muldf3>:
   321c8:	defff304 	addi	sp,sp,-52
   321cc:	2804d53a 	srli	r2,r5,20
   321d0:	dd800915 	stw	r22,36(sp)
   321d4:	282cd7fa 	srli	r22,r5,31
   321d8:	dc000315 	stw	r16,12(sp)
   321dc:	04000434 	movhi	r16,16
   321e0:	dd400815 	stw	r21,32(sp)
   321e4:	dc800515 	stw	r18,20(sp)
   321e8:	843fffc4 	addi	r16,r16,-1
   321ec:	dfc00c15 	stw	ra,48(sp)
   321f0:	df000b15 	stw	fp,44(sp)
   321f4:	ddc00a15 	stw	r23,40(sp)
   321f8:	dd000715 	stw	r20,28(sp)
   321fc:	dcc00615 	stw	r19,24(sp)
   32200:	dc400415 	stw	r17,16(sp)
   32204:	1481ffcc 	andi	r18,r2,2047
   32208:	2c20703a 	and	r16,r5,r16
   3220c:	b02b883a 	mov	r21,r22
   32210:	b2403fcc 	andi	r9,r22,255
   32214:	90006026 	beq	r18,zero,32398 <__muldf3+0x1d0>
   32218:	0081ffc4 	movi	r2,2047
   3221c:	2029883a 	mov	r20,r4
   32220:	90803626 	beq	r18,r2,322fc <__muldf3+0x134>
   32224:	80800434 	orhi	r2,r16,16
   32228:	100490fa 	slli	r2,r2,3
   3222c:	2020d77a 	srli	r16,r4,29
   32230:	202890fa 	slli	r20,r4,3
   32234:	94bf0044 	addi	r18,r18,-1023
   32238:	80a0b03a 	or	r16,r16,r2
   3223c:	0027883a 	mov	r19,zero
   32240:	0039883a 	mov	fp,zero
   32244:	3804d53a 	srli	r2,r7,20
   32248:	382ed7fa 	srli	r23,r7,31
   3224c:	04400434 	movhi	r17,16
   32250:	8c7fffc4 	addi	r17,r17,-1
   32254:	1081ffcc 	andi	r2,r2,2047
   32258:	3011883a 	mov	r8,r6
   3225c:	3c62703a 	and	r17,r7,r17
   32260:	ba803fcc 	andi	r10,r23,255
   32264:	10006d26 	beq	r2,zero,3241c <__muldf3+0x254>
   32268:	00c1ffc4 	movi	r3,2047
   3226c:	10c06526 	beq	r2,r3,32404 <__muldf3+0x23c>
   32270:	88c00434 	orhi	r3,r17,16
   32274:	180690fa 	slli	r3,r3,3
   32278:	3022d77a 	srli	r17,r6,29
   3227c:	301090fa 	slli	r8,r6,3
   32280:	10bf0044 	addi	r2,r2,-1023
   32284:	88e2b03a 	or	r17,r17,r3
   32288:	000b883a 	mov	r5,zero
   3228c:	9085883a 	add	r2,r18,r2
   32290:	2cc8b03a 	or	r4,r5,r19
   32294:	00c003c4 	movi	r3,15
   32298:	bdacf03a 	xor	r22,r23,r22
   3229c:	12c00044 	addi	r11,r2,1
   322a0:	19009936 	bltu	r3,r4,32508 <__muldf3+0x340>
   322a4:	200890ba 	slli	r4,r4,2
   322a8:	00c000f4 	movhi	r3,3
   322ac:	18c8af04 	addi	r3,r3,8892
   322b0:	20c9883a 	add	r4,r4,r3
   322b4:	20c00017 	ldw	r3,0(r4)
   322b8:	1800683a 	jmp	r3
   322bc:	00032508 	cmpgei	zero,zero,3220
   322c0:	0003231c 	xori	zero,zero,3212
   322c4:	0003231c 	xori	zero,zero,3212
   322c8:	00032318 	cmpnei	zero,zero,3212
   322cc:	000324e4 	muli	zero,zero,3219
   322d0:	000324e4 	muli	zero,zero,3219
   322d4:	000324cc 	andi	zero,zero,3219
   322d8:	00032318 	cmpnei	zero,zero,3212
   322dc:	000324e4 	muli	zero,zero,3219
   322e0:	000324cc 	andi	zero,zero,3219
   322e4:	000324e4 	muli	zero,zero,3219
   322e8:	00032318 	cmpnei	zero,zero,3212
   322ec:	000324f4 	movhi	zero,3219
   322f0:	000324f4 	movhi	zero,3219
   322f4:	000324f4 	movhi	zero,3219
   322f8:	00032710 	cmplti	zero,zero,3228
   322fc:	2404b03a 	or	r2,r4,r16
   32300:	10006f1e 	bne	r2,zero,324c0 <__muldf3+0x2f8>
   32304:	04c00204 	movi	r19,8
   32308:	0021883a 	mov	r16,zero
   3230c:	0029883a 	mov	r20,zero
   32310:	07000084 	movi	fp,2
   32314:	003fcb06 	br	32244 <__alt_mem_sdram_controller_0+0xc0032244>
   32318:	502d883a 	mov	r22,r10
   3231c:	00800084 	movi	r2,2
   32320:	28805726 	beq	r5,r2,32480 <__muldf3+0x2b8>
   32324:	008000c4 	movi	r2,3
   32328:	28816626 	beq	r5,r2,328c4 <__muldf3+0x6fc>
   3232c:	00800044 	movi	r2,1
   32330:	2881411e 	bne	r5,r2,32838 <__muldf3+0x670>
   32334:	b02b883a 	mov	r21,r22
   32338:	0005883a 	mov	r2,zero
   3233c:	000b883a 	mov	r5,zero
   32340:	0029883a 	mov	r20,zero
   32344:	1004953a 	slli	r2,r2,20
   32348:	a8c03fcc 	andi	r3,r21,255
   3234c:	04400434 	movhi	r17,16
   32350:	8c7fffc4 	addi	r17,r17,-1
   32354:	180697fa 	slli	r3,r3,31
   32358:	2c4a703a 	and	r5,r5,r17
   3235c:	288ab03a 	or	r5,r5,r2
   32360:	28c6b03a 	or	r3,r5,r3
   32364:	a005883a 	mov	r2,r20
   32368:	dfc00c17 	ldw	ra,48(sp)
   3236c:	df000b17 	ldw	fp,44(sp)
   32370:	ddc00a17 	ldw	r23,40(sp)
   32374:	dd800917 	ldw	r22,36(sp)
   32378:	dd400817 	ldw	r21,32(sp)
   3237c:	dd000717 	ldw	r20,28(sp)
   32380:	dcc00617 	ldw	r19,24(sp)
   32384:	dc800517 	ldw	r18,20(sp)
   32388:	dc400417 	ldw	r17,16(sp)
   3238c:	dc000317 	ldw	r16,12(sp)
   32390:	dec00d04 	addi	sp,sp,52
   32394:	f800283a 	ret
   32398:	2404b03a 	or	r2,r4,r16
   3239c:	2027883a 	mov	r19,r4
   323a0:	10004226 	beq	r2,zero,324ac <__muldf3+0x2e4>
   323a4:	8000fc26 	beq	r16,zero,32798 <__muldf3+0x5d0>
   323a8:	8009883a 	mov	r4,r16
   323ac:	d9800215 	stw	r6,8(sp)
   323b0:	d9c00015 	stw	r7,0(sp)
   323b4:	da400115 	stw	r9,4(sp)
   323b8:	00333e00 	call	333e0 <__clzsi2>
   323bc:	d9800217 	ldw	r6,8(sp)
   323c0:	d9c00017 	ldw	r7,0(sp)
   323c4:	da400117 	ldw	r9,4(sp)
   323c8:	113ffd44 	addi	r4,r2,-11
   323cc:	00c00704 	movi	r3,28
   323d0:	1900ed16 	blt	r3,r4,32788 <__muldf3+0x5c0>
   323d4:	00c00744 	movi	r3,29
   323d8:	147ffe04 	addi	r17,r2,-8
   323dc:	1907c83a 	sub	r3,r3,r4
   323e0:	8460983a 	sll	r16,r16,r17
   323e4:	98c6d83a 	srl	r3,r19,r3
   323e8:	9c68983a 	sll	r20,r19,r17
   323ec:	1c20b03a 	or	r16,r3,r16
   323f0:	1080fcc4 	addi	r2,r2,1011
   323f4:	00a5c83a 	sub	r18,zero,r2
   323f8:	0027883a 	mov	r19,zero
   323fc:	0039883a 	mov	fp,zero
   32400:	003f9006 	br	32244 <__alt_mem_sdram_controller_0+0xc0032244>
   32404:	3446b03a 	or	r3,r6,r17
   32408:	1800261e 	bne	r3,zero,324a4 <__muldf3+0x2dc>
   3240c:	0023883a 	mov	r17,zero
   32410:	0011883a 	mov	r8,zero
   32414:	01400084 	movi	r5,2
   32418:	003f9c06 	br	3228c <__alt_mem_sdram_controller_0+0xc003228c>
   3241c:	3446b03a 	or	r3,r6,r17
   32420:	18001c26 	beq	r3,zero,32494 <__muldf3+0x2cc>
   32424:	8800ce26 	beq	r17,zero,32760 <__muldf3+0x598>
   32428:	8809883a 	mov	r4,r17
   3242c:	d9800215 	stw	r6,8(sp)
   32430:	da400115 	stw	r9,4(sp)
   32434:	da800015 	stw	r10,0(sp)
   32438:	00333e00 	call	333e0 <__clzsi2>
   3243c:	d9800217 	ldw	r6,8(sp)
   32440:	da400117 	ldw	r9,4(sp)
   32444:	da800017 	ldw	r10,0(sp)
   32448:	113ffd44 	addi	r4,r2,-11
   3244c:	00c00704 	movi	r3,28
   32450:	1900bf16 	blt	r3,r4,32750 <__muldf3+0x588>
   32454:	00c00744 	movi	r3,29
   32458:	123ffe04 	addi	r8,r2,-8
   3245c:	1907c83a 	sub	r3,r3,r4
   32460:	8a22983a 	sll	r17,r17,r8
   32464:	30c6d83a 	srl	r3,r6,r3
   32468:	3210983a 	sll	r8,r6,r8
   3246c:	1c62b03a 	or	r17,r3,r17
   32470:	1080fcc4 	addi	r2,r2,1011
   32474:	0085c83a 	sub	r2,zero,r2
   32478:	000b883a 	mov	r5,zero
   3247c:	003f8306 	br	3228c <__alt_mem_sdram_controller_0+0xc003228c>
   32480:	b02b883a 	mov	r21,r22
   32484:	0081ffc4 	movi	r2,2047
   32488:	000b883a 	mov	r5,zero
   3248c:	0029883a 	mov	r20,zero
   32490:	003fac06 	br	32344 <__alt_mem_sdram_controller_0+0xc0032344>
   32494:	0023883a 	mov	r17,zero
   32498:	0011883a 	mov	r8,zero
   3249c:	01400044 	movi	r5,1
   324a0:	003f7a06 	br	3228c <__alt_mem_sdram_controller_0+0xc003228c>
   324a4:	014000c4 	movi	r5,3
   324a8:	003f7806 	br	3228c <__alt_mem_sdram_controller_0+0xc003228c>
   324ac:	04c00104 	movi	r19,4
   324b0:	0021883a 	mov	r16,zero
   324b4:	0029883a 	mov	r20,zero
   324b8:	07000044 	movi	fp,1
   324bc:	003f6106 	br	32244 <__alt_mem_sdram_controller_0+0xc0032244>
   324c0:	04c00304 	movi	r19,12
   324c4:	070000c4 	movi	fp,3
   324c8:	003f5e06 	br	32244 <__alt_mem_sdram_controller_0+0xc0032244>
   324cc:	01400434 	movhi	r5,16
   324d0:	002b883a 	mov	r21,zero
   324d4:	297fffc4 	addi	r5,r5,-1
   324d8:	053fffc4 	movi	r20,-1
   324dc:	0081ffc4 	movi	r2,2047
   324e0:	003f9806 	br	32344 <__alt_mem_sdram_controller_0+0xc0032344>
   324e4:	8023883a 	mov	r17,r16
   324e8:	a011883a 	mov	r8,r20
   324ec:	e00b883a 	mov	r5,fp
   324f0:	003f8a06 	br	3231c <__alt_mem_sdram_controller_0+0xc003231c>
   324f4:	8023883a 	mov	r17,r16
   324f8:	a011883a 	mov	r8,r20
   324fc:	482d883a 	mov	r22,r9
   32500:	e00b883a 	mov	r5,fp
   32504:	003f8506 	br	3231c <__alt_mem_sdram_controller_0+0xc003231c>
   32508:	a00ad43a 	srli	r5,r20,16
   3250c:	401ad43a 	srli	r13,r8,16
   32510:	a53fffcc 	andi	r20,r20,65535
   32514:	423fffcc 	andi	r8,r8,65535
   32518:	4519383a 	mul	r12,r8,r20
   3251c:	4147383a 	mul	r3,r8,r5
   32520:	6d09383a 	mul	r4,r13,r20
   32524:	600cd43a 	srli	r6,r12,16
   32528:	2b5d383a 	mul	r14,r5,r13
   3252c:	20c9883a 	add	r4,r4,r3
   32530:	310d883a 	add	r6,r6,r4
   32534:	30c0022e 	bgeu	r6,r3,32540 <__muldf3+0x378>
   32538:	00c00074 	movhi	r3,1
   3253c:	70dd883a 	add	r14,r14,r3
   32540:	8826d43a 	srli	r19,r17,16
   32544:	8bffffcc 	andi	r15,r17,65535
   32548:	7d23383a 	mul	r17,r15,r20
   3254c:	7949383a 	mul	r4,r15,r5
   32550:	9d29383a 	mul	r20,r19,r20
   32554:	8814d43a 	srli	r10,r17,16
   32558:	3012943a 	slli	r9,r6,16
   3255c:	a129883a 	add	r20,r20,r4
   32560:	633fffcc 	andi	r12,r12,65535
   32564:	5515883a 	add	r10,r10,r20
   32568:	3006d43a 	srli	r3,r6,16
   3256c:	4b13883a 	add	r9,r9,r12
   32570:	2ccb383a 	mul	r5,r5,r19
   32574:	5100022e 	bgeu	r10,r4,32580 <__muldf3+0x3b8>
   32578:	01000074 	movhi	r4,1
   3257c:	290b883a 	add	r5,r5,r4
   32580:	802ad43a 	srli	r21,r16,16
   32584:	843fffcc 	andi	r16,r16,65535
   32588:	440d383a 	mul	r6,r8,r16
   3258c:	4565383a 	mul	r18,r8,r21
   32590:	8349383a 	mul	r4,r16,r13
   32594:	500e943a 	slli	r7,r10,16
   32598:	3010d43a 	srli	r8,r6,16
   3259c:	5028d43a 	srli	r20,r10,16
   325a0:	2489883a 	add	r4,r4,r18
   325a4:	8abfffcc 	andi	r10,r17,65535
   325a8:	3a95883a 	add	r10,r7,r10
   325ac:	4119883a 	add	r12,r8,r4
   325b0:	a169883a 	add	r20,r20,r5
   325b4:	1a87883a 	add	r3,r3,r10
   325b8:	6d5b383a 	mul	r13,r13,r21
   325bc:	6480022e 	bgeu	r12,r18,325c8 <__muldf3+0x400>
   325c0:	01000074 	movhi	r4,1
   325c4:	691b883a 	add	r13,r13,r4
   325c8:	7c25383a 	mul	r18,r15,r16
   325cc:	7d4b383a 	mul	r5,r15,r21
   325d0:	84cf383a 	mul	r7,r16,r19
   325d4:	901ed43a 	srli	r15,r18,16
   325d8:	6008d43a 	srli	r4,r12,16
   325dc:	6010943a 	slli	r8,r12,16
   325e0:	394f883a 	add	r7,r7,r5
   325e4:	333fffcc 	andi	r12,r6,65535
   325e8:	79df883a 	add	r15,r15,r7
   325ec:	235b883a 	add	r13,r4,r13
   325f0:	9d63383a 	mul	r17,r19,r21
   325f4:	4309883a 	add	r4,r8,r12
   325f8:	7940022e 	bgeu	r15,r5,32604 <__muldf3+0x43c>
   325fc:	01400074 	movhi	r5,1
   32600:	8963883a 	add	r17,r17,r5
   32604:	780a943a 	slli	r5,r15,16
   32608:	91bfffcc 	andi	r6,r18,65535
   3260c:	70c7883a 	add	r3,r14,r3
   32610:	298d883a 	add	r6,r5,r6
   32614:	1a8f803a 	cmpltu	r7,r3,r10
   32618:	350b883a 	add	r5,r6,r20
   3261c:	20c7883a 	add	r3,r4,r3
   32620:	3955883a 	add	r10,r7,r5
   32624:	1909803a 	cmpltu	r4,r3,r4
   32628:	6a91883a 	add	r8,r13,r10
   3262c:	780cd43a 	srli	r6,r15,16
   32630:	2219883a 	add	r12,r4,r8
   32634:	2d0b803a 	cmpltu	r5,r5,r20
   32638:	51cf803a 	cmpltu	r7,r10,r7
   3263c:	29ceb03a 	or	r7,r5,r7
   32640:	4351803a 	cmpltu	r8,r8,r13
   32644:	610b803a 	cmpltu	r5,r12,r4
   32648:	4148b03a 	or	r4,r8,r5
   3264c:	398f883a 	add	r7,r7,r6
   32650:	3909883a 	add	r4,r7,r4
   32654:	1810927a 	slli	r8,r3,9
   32658:	2449883a 	add	r4,r4,r17
   3265c:	2008927a 	slli	r4,r4,9
   32660:	6022d5fa 	srli	r17,r12,23
   32664:	1806d5fa 	srli	r3,r3,23
   32668:	4252b03a 	or	r9,r8,r9
   3266c:	600a927a 	slli	r5,r12,9
   32670:	4810c03a 	cmpne	r8,r9,zero
   32674:	2462b03a 	or	r17,r4,r17
   32678:	40c6b03a 	or	r3,r8,r3
   3267c:	8900402c 	andhi	r4,r17,256
   32680:	1950b03a 	or	r8,r3,r5
   32684:	20000726 	beq	r4,zero,326a4 <__muldf3+0x4dc>
   32688:	4006d07a 	srli	r3,r8,1
   3268c:	880497fa 	slli	r2,r17,31
   32690:	4200004c 	andi	r8,r8,1
   32694:	8822d07a 	srli	r17,r17,1
   32698:	1a10b03a 	or	r8,r3,r8
   3269c:	1210b03a 	or	r8,r2,r8
   326a0:	5805883a 	mov	r2,r11
   326a4:	1140ffc4 	addi	r5,r2,1023
   326a8:	0140440e 	bge	zero,r5,327bc <__muldf3+0x5f4>
   326ac:	40c001cc 	andi	r3,r8,7
   326b0:	18000726 	beq	r3,zero,326d0 <__muldf3+0x508>
   326b4:	40c003cc 	andi	r3,r8,15
   326b8:	01000104 	movi	r4,4
   326bc:	19000426 	beq	r3,r4,326d0 <__muldf3+0x508>
   326c0:	4107883a 	add	r3,r8,r4
   326c4:	1a11803a 	cmpltu	r8,r3,r8
   326c8:	8a23883a 	add	r17,r17,r8
   326cc:	1811883a 	mov	r8,r3
   326d0:	88c0402c 	andhi	r3,r17,256
   326d4:	18000426 	beq	r3,zero,326e8 <__muldf3+0x520>
   326d8:	11410004 	addi	r5,r2,1024
   326dc:	00bfc034 	movhi	r2,65280
   326e0:	10bfffc4 	addi	r2,r2,-1
   326e4:	88a2703a 	and	r17,r17,r2
   326e8:	0081ff84 	movi	r2,2046
   326ec:	117f6416 	blt	r2,r5,32480 <__alt_mem_sdram_controller_0+0xc0032480>
   326f0:	8828977a 	slli	r20,r17,29
   326f4:	4010d0fa 	srli	r8,r8,3
   326f8:	8822927a 	slli	r17,r17,9
   326fc:	2881ffcc 	andi	r2,r5,2047
   32700:	a228b03a 	or	r20,r20,r8
   32704:	880ad33a 	srli	r5,r17,12
   32708:	b02b883a 	mov	r21,r22
   3270c:	003f0d06 	br	32344 <__alt_mem_sdram_controller_0+0xc0032344>
   32710:	8080022c 	andhi	r2,r16,8
   32714:	10000926 	beq	r2,zero,3273c <__muldf3+0x574>
   32718:	8880022c 	andhi	r2,r17,8
   3271c:	1000071e 	bne	r2,zero,3273c <__muldf3+0x574>
   32720:	00800434 	movhi	r2,16
   32724:	89400234 	orhi	r5,r17,8
   32728:	10bfffc4 	addi	r2,r2,-1
   3272c:	b82b883a 	mov	r21,r23
   32730:	288a703a 	and	r5,r5,r2
   32734:	4029883a 	mov	r20,r8
   32738:	003f6806 	br	324dc <__alt_mem_sdram_controller_0+0xc00324dc>
   3273c:	00800434 	movhi	r2,16
   32740:	81400234 	orhi	r5,r16,8
   32744:	10bfffc4 	addi	r2,r2,-1
   32748:	288a703a 	and	r5,r5,r2
   3274c:	003f6306 	br	324dc <__alt_mem_sdram_controller_0+0xc00324dc>
   32750:	147ff604 	addi	r17,r2,-40
   32754:	3462983a 	sll	r17,r6,r17
   32758:	0011883a 	mov	r8,zero
   3275c:	003f4406 	br	32470 <__alt_mem_sdram_controller_0+0xc0032470>
   32760:	3009883a 	mov	r4,r6
   32764:	d9800215 	stw	r6,8(sp)
   32768:	da400115 	stw	r9,4(sp)
   3276c:	da800015 	stw	r10,0(sp)
   32770:	00333e00 	call	333e0 <__clzsi2>
   32774:	10800804 	addi	r2,r2,32
   32778:	da800017 	ldw	r10,0(sp)
   3277c:	da400117 	ldw	r9,4(sp)
   32780:	d9800217 	ldw	r6,8(sp)
   32784:	003f3006 	br	32448 <__alt_mem_sdram_controller_0+0xc0032448>
   32788:	143ff604 	addi	r16,r2,-40
   3278c:	9c20983a 	sll	r16,r19,r16
   32790:	0029883a 	mov	r20,zero
   32794:	003f1606 	br	323f0 <__alt_mem_sdram_controller_0+0xc00323f0>
   32798:	d9800215 	stw	r6,8(sp)
   3279c:	d9c00015 	stw	r7,0(sp)
   327a0:	da400115 	stw	r9,4(sp)
   327a4:	00333e00 	call	333e0 <__clzsi2>
   327a8:	10800804 	addi	r2,r2,32
   327ac:	da400117 	ldw	r9,4(sp)
   327b0:	d9c00017 	ldw	r7,0(sp)
   327b4:	d9800217 	ldw	r6,8(sp)
   327b8:	003f0306 	br	323c8 <__alt_mem_sdram_controller_0+0xc00323c8>
   327bc:	00c00044 	movi	r3,1
   327c0:	1947c83a 	sub	r3,r3,r5
   327c4:	00800e04 	movi	r2,56
   327c8:	10feda16 	blt	r2,r3,32334 <__alt_mem_sdram_controller_0+0xc0032334>
   327cc:	008007c4 	movi	r2,31
   327d0:	10c01b16 	blt	r2,r3,32840 <__muldf3+0x678>
   327d4:	00800804 	movi	r2,32
   327d8:	10c5c83a 	sub	r2,r2,r3
   327dc:	888a983a 	sll	r5,r17,r2
   327e0:	40c8d83a 	srl	r4,r8,r3
   327e4:	4084983a 	sll	r2,r8,r2
   327e8:	88e2d83a 	srl	r17,r17,r3
   327ec:	2906b03a 	or	r3,r5,r4
   327f0:	1004c03a 	cmpne	r2,r2,zero
   327f4:	1886b03a 	or	r3,r3,r2
   327f8:	188001cc 	andi	r2,r3,7
   327fc:	10000726 	beq	r2,zero,3281c <__muldf3+0x654>
   32800:	188003cc 	andi	r2,r3,15
   32804:	01000104 	movi	r4,4
   32808:	11000426 	beq	r2,r4,3281c <__muldf3+0x654>
   3280c:	1805883a 	mov	r2,r3
   32810:	10c00104 	addi	r3,r2,4
   32814:	1885803a 	cmpltu	r2,r3,r2
   32818:	88a3883a 	add	r17,r17,r2
   3281c:	8880202c 	andhi	r2,r17,128
   32820:	10001c26 	beq	r2,zero,32894 <__muldf3+0x6cc>
   32824:	b02b883a 	mov	r21,r22
   32828:	00800044 	movi	r2,1
   3282c:	000b883a 	mov	r5,zero
   32830:	0029883a 	mov	r20,zero
   32834:	003ec306 	br	32344 <__alt_mem_sdram_controller_0+0xc0032344>
   32838:	5805883a 	mov	r2,r11
   3283c:	003f9906 	br	326a4 <__alt_mem_sdram_controller_0+0xc00326a4>
   32840:	00bff844 	movi	r2,-31
   32844:	1145c83a 	sub	r2,r2,r5
   32848:	8888d83a 	srl	r4,r17,r2
   3284c:	00800804 	movi	r2,32
   32850:	18801a26 	beq	r3,r2,328bc <__muldf3+0x6f4>
   32854:	00801004 	movi	r2,64
   32858:	10c5c83a 	sub	r2,r2,r3
   3285c:	8884983a 	sll	r2,r17,r2
   32860:	1204b03a 	or	r2,r2,r8
   32864:	1004c03a 	cmpne	r2,r2,zero
   32868:	2084b03a 	or	r2,r4,r2
   3286c:	144001cc 	andi	r17,r2,7
   32870:	88000d1e 	bne	r17,zero,328a8 <__muldf3+0x6e0>
   32874:	000b883a 	mov	r5,zero
   32878:	1028d0fa 	srli	r20,r2,3
   3287c:	b02b883a 	mov	r21,r22
   32880:	0005883a 	mov	r2,zero
   32884:	a468b03a 	or	r20,r20,r17
   32888:	003eae06 	br	32344 <__alt_mem_sdram_controller_0+0xc0032344>
   3288c:	1007883a 	mov	r3,r2
   32890:	0023883a 	mov	r17,zero
   32894:	880a927a 	slli	r5,r17,9
   32898:	1805883a 	mov	r2,r3
   3289c:	8822977a 	slli	r17,r17,29
   328a0:	280ad33a 	srli	r5,r5,12
   328a4:	003ff406 	br	32878 <__alt_mem_sdram_controller_0+0xc0032878>
   328a8:	10c003cc 	andi	r3,r2,15
   328ac:	01000104 	movi	r4,4
   328b0:	193ff626 	beq	r3,r4,3288c <__alt_mem_sdram_controller_0+0xc003288c>
   328b4:	0023883a 	mov	r17,zero
   328b8:	003fd506 	br	32810 <__alt_mem_sdram_controller_0+0xc0032810>
   328bc:	0005883a 	mov	r2,zero
   328c0:	003fe706 	br	32860 <__alt_mem_sdram_controller_0+0xc0032860>
   328c4:	00800434 	movhi	r2,16
   328c8:	89400234 	orhi	r5,r17,8
   328cc:	10bfffc4 	addi	r2,r2,-1
   328d0:	b02b883a 	mov	r21,r22
   328d4:	288a703a 	and	r5,r5,r2
   328d8:	4029883a 	mov	r20,r8
   328dc:	003eff06 	br	324dc <__alt_mem_sdram_controller_0+0xc00324dc>

000328e0 <__subdf3>:
   328e0:	02000434 	movhi	r8,16
   328e4:	423fffc4 	addi	r8,r8,-1
   328e8:	defffb04 	addi	sp,sp,-20
   328ec:	2a14703a 	and	r10,r5,r8
   328f0:	3812d53a 	srli	r9,r7,20
   328f4:	3a10703a 	and	r8,r7,r8
   328f8:	2006d77a 	srli	r3,r4,29
   328fc:	3004d77a 	srli	r2,r6,29
   32900:	dc000015 	stw	r16,0(sp)
   32904:	501490fa 	slli	r10,r10,3
   32908:	2820d53a 	srli	r16,r5,20
   3290c:	401090fa 	slli	r8,r8,3
   32910:	dc800215 	stw	r18,8(sp)
   32914:	dc400115 	stw	r17,4(sp)
   32918:	dfc00415 	stw	ra,16(sp)
   3291c:	202290fa 	slli	r17,r4,3
   32920:	dcc00315 	stw	r19,12(sp)
   32924:	4a41ffcc 	andi	r9,r9,2047
   32928:	0101ffc4 	movi	r4,2047
   3292c:	2824d7fa 	srli	r18,r5,31
   32930:	8401ffcc 	andi	r16,r16,2047
   32934:	50c6b03a 	or	r3,r10,r3
   32938:	380ed7fa 	srli	r7,r7,31
   3293c:	408ab03a 	or	r5,r8,r2
   32940:	300c90fa 	slli	r6,r6,3
   32944:	49009626 	beq	r9,r4,32ba0 <__subdf3+0x2c0>
   32948:	39c0005c 	xori	r7,r7,1
   3294c:	8245c83a 	sub	r2,r16,r9
   32950:	3c807426 	beq	r7,r18,32b24 <__subdf3+0x244>
   32954:	0080af0e 	bge	zero,r2,32c14 <__subdf3+0x334>
   32958:	48002a1e 	bne	r9,zero,32a04 <__subdf3+0x124>
   3295c:	2988b03a 	or	r4,r5,r6
   32960:	20009a1e 	bne	r4,zero,32bcc <__subdf3+0x2ec>
   32964:	888001cc 	andi	r2,r17,7
   32968:	10000726 	beq	r2,zero,32988 <__subdf3+0xa8>
   3296c:	888003cc 	andi	r2,r17,15
   32970:	01000104 	movi	r4,4
   32974:	11000426 	beq	r2,r4,32988 <__subdf3+0xa8>
   32978:	890b883a 	add	r5,r17,r4
   3297c:	2c63803a 	cmpltu	r17,r5,r17
   32980:	1c47883a 	add	r3,r3,r17
   32984:	2823883a 	mov	r17,r5
   32988:	1880202c 	andhi	r2,r3,128
   3298c:	10005926 	beq	r2,zero,32af4 <__subdf3+0x214>
   32990:	84000044 	addi	r16,r16,1
   32994:	0081ffc4 	movi	r2,2047
   32998:	8080be26 	beq	r16,r2,32c94 <__subdf3+0x3b4>
   3299c:	017fe034 	movhi	r5,65408
   329a0:	297fffc4 	addi	r5,r5,-1
   329a4:	1946703a 	and	r3,r3,r5
   329a8:	1804977a 	slli	r2,r3,29
   329ac:	1806927a 	slli	r3,r3,9
   329b0:	8822d0fa 	srli	r17,r17,3
   329b4:	8401ffcc 	andi	r16,r16,2047
   329b8:	180ad33a 	srli	r5,r3,12
   329bc:	9100004c 	andi	r4,r18,1
   329c0:	1444b03a 	or	r2,r2,r17
   329c4:	80c1ffcc 	andi	r3,r16,2047
   329c8:	1820953a 	slli	r16,r3,20
   329cc:	20c03fcc 	andi	r3,r4,255
   329d0:	180897fa 	slli	r4,r3,31
   329d4:	00c00434 	movhi	r3,16
   329d8:	18ffffc4 	addi	r3,r3,-1
   329dc:	28c6703a 	and	r3,r5,r3
   329e0:	1c06b03a 	or	r3,r3,r16
   329e4:	1906b03a 	or	r3,r3,r4
   329e8:	dfc00417 	ldw	ra,16(sp)
   329ec:	dcc00317 	ldw	r19,12(sp)
   329f0:	dc800217 	ldw	r18,8(sp)
   329f4:	dc400117 	ldw	r17,4(sp)
   329f8:	dc000017 	ldw	r16,0(sp)
   329fc:	dec00504 	addi	sp,sp,20
   32a00:	f800283a 	ret
   32a04:	0101ffc4 	movi	r4,2047
   32a08:	813fd626 	beq	r16,r4,32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32a0c:	29402034 	orhi	r5,r5,128
   32a10:	01000e04 	movi	r4,56
   32a14:	2080a316 	blt	r4,r2,32ca4 <__subdf3+0x3c4>
   32a18:	010007c4 	movi	r4,31
   32a1c:	2080c616 	blt	r4,r2,32d38 <__subdf3+0x458>
   32a20:	01000804 	movi	r4,32
   32a24:	2089c83a 	sub	r4,r4,r2
   32a28:	2910983a 	sll	r8,r5,r4
   32a2c:	308ed83a 	srl	r7,r6,r2
   32a30:	3108983a 	sll	r4,r6,r4
   32a34:	2884d83a 	srl	r2,r5,r2
   32a38:	41ccb03a 	or	r6,r8,r7
   32a3c:	2008c03a 	cmpne	r4,r4,zero
   32a40:	310cb03a 	or	r6,r6,r4
   32a44:	898dc83a 	sub	r6,r17,r6
   32a48:	89a3803a 	cmpltu	r17,r17,r6
   32a4c:	1887c83a 	sub	r3,r3,r2
   32a50:	1c47c83a 	sub	r3,r3,r17
   32a54:	3023883a 	mov	r17,r6
   32a58:	1880202c 	andhi	r2,r3,128
   32a5c:	10002326 	beq	r2,zero,32aec <__subdf3+0x20c>
   32a60:	04c02034 	movhi	r19,128
   32a64:	9cffffc4 	addi	r19,r19,-1
   32a68:	1ce6703a 	and	r19,r3,r19
   32a6c:	98007a26 	beq	r19,zero,32c58 <__subdf3+0x378>
   32a70:	9809883a 	mov	r4,r19
   32a74:	00333e00 	call	333e0 <__clzsi2>
   32a78:	113ffe04 	addi	r4,r2,-8
   32a7c:	00c007c4 	movi	r3,31
   32a80:	19007b16 	blt	r3,r4,32c70 <__subdf3+0x390>
   32a84:	00800804 	movi	r2,32
   32a88:	1105c83a 	sub	r2,r2,r4
   32a8c:	8884d83a 	srl	r2,r17,r2
   32a90:	9906983a 	sll	r3,r19,r4
   32a94:	8922983a 	sll	r17,r17,r4
   32a98:	10c4b03a 	or	r2,r2,r3
   32a9c:	24007816 	blt	r4,r16,32c80 <__subdf3+0x3a0>
   32aa0:	2421c83a 	sub	r16,r4,r16
   32aa4:	80c00044 	addi	r3,r16,1
   32aa8:	010007c4 	movi	r4,31
   32aac:	20c09516 	blt	r4,r3,32d04 <__subdf3+0x424>
   32ab0:	01400804 	movi	r5,32
   32ab4:	28cbc83a 	sub	r5,r5,r3
   32ab8:	88c8d83a 	srl	r4,r17,r3
   32abc:	8962983a 	sll	r17,r17,r5
   32ac0:	114a983a 	sll	r5,r2,r5
   32ac4:	10c6d83a 	srl	r3,r2,r3
   32ac8:	8804c03a 	cmpne	r2,r17,zero
   32acc:	290ab03a 	or	r5,r5,r4
   32ad0:	28a2b03a 	or	r17,r5,r2
   32ad4:	0021883a 	mov	r16,zero
   32ad8:	003fa206 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32adc:	2090b03a 	or	r8,r4,r2
   32ae0:	40018e26 	beq	r8,zero,3311c <__subdf3+0x83c>
   32ae4:	1007883a 	mov	r3,r2
   32ae8:	2023883a 	mov	r17,r4
   32aec:	888001cc 	andi	r2,r17,7
   32af0:	103f9e1e 	bne	r2,zero,3296c <__alt_mem_sdram_controller_0+0xc003296c>
   32af4:	1804977a 	slli	r2,r3,29
   32af8:	8822d0fa 	srli	r17,r17,3
   32afc:	1810d0fa 	srli	r8,r3,3
   32b00:	9100004c 	andi	r4,r18,1
   32b04:	1444b03a 	or	r2,r2,r17
   32b08:	00c1ffc4 	movi	r3,2047
   32b0c:	80c02826 	beq	r16,r3,32bb0 <__subdf3+0x2d0>
   32b10:	01400434 	movhi	r5,16
   32b14:	297fffc4 	addi	r5,r5,-1
   32b18:	80e0703a 	and	r16,r16,r3
   32b1c:	414a703a 	and	r5,r8,r5
   32b20:	003fa806 	br	329c4 <__alt_mem_sdram_controller_0+0xc00329c4>
   32b24:	0080630e 	bge	zero,r2,32cb4 <__subdf3+0x3d4>
   32b28:	48003026 	beq	r9,zero,32bec <__subdf3+0x30c>
   32b2c:	0101ffc4 	movi	r4,2047
   32b30:	813f8c26 	beq	r16,r4,32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32b34:	29402034 	orhi	r5,r5,128
   32b38:	01000e04 	movi	r4,56
   32b3c:	2080a90e 	bge	r4,r2,32de4 <__subdf3+0x504>
   32b40:	298cb03a 	or	r6,r5,r6
   32b44:	3012c03a 	cmpne	r9,r6,zero
   32b48:	0005883a 	mov	r2,zero
   32b4c:	4c53883a 	add	r9,r9,r17
   32b50:	4c63803a 	cmpltu	r17,r9,r17
   32b54:	10c7883a 	add	r3,r2,r3
   32b58:	88c7883a 	add	r3,r17,r3
   32b5c:	4823883a 	mov	r17,r9
   32b60:	1880202c 	andhi	r2,r3,128
   32b64:	1000d026 	beq	r2,zero,32ea8 <__subdf3+0x5c8>
   32b68:	84000044 	addi	r16,r16,1
   32b6c:	0081ffc4 	movi	r2,2047
   32b70:	8080fe26 	beq	r16,r2,32f6c <__subdf3+0x68c>
   32b74:	00bfe034 	movhi	r2,65408
   32b78:	10bfffc4 	addi	r2,r2,-1
   32b7c:	1886703a 	and	r3,r3,r2
   32b80:	880ad07a 	srli	r5,r17,1
   32b84:	180497fa 	slli	r2,r3,31
   32b88:	8900004c 	andi	r4,r17,1
   32b8c:	2922b03a 	or	r17,r5,r4
   32b90:	1806d07a 	srli	r3,r3,1
   32b94:	1462b03a 	or	r17,r2,r17
   32b98:	3825883a 	mov	r18,r7
   32b9c:	003f7106 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32ba0:	2984b03a 	or	r2,r5,r6
   32ba4:	103f6826 	beq	r2,zero,32948 <__alt_mem_sdram_controller_0+0xc0032948>
   32ba8:	39c03fcc 	andi	r7,r7,255
   32bac:	003f6706 	br	3294c <__alt_mem_sdram_controller_0+0xc003294c>
   32bb0:	4086b03a 	or	r3,r8,r2
   32bb4:	18015226 	beq	r3,zero,33100 <__subdf3+0x820>
   32bb8:	00c00434 	movhi	r3,16
   32bbc:	41400234 	orhi	r5,r8,8
   32bc0:	18ffffc4 	addi	r3,r3,-1
   32bc4:	28ca703a 	and	r5,r5,r3
   32bc8:	003f7e06 	br	329c4 <__alt_mem_sdram_controller_0+0xc00329c4>
   32bcc:	10bfffc4 	addi	r2,r2,-1
   32bd0:	1000491e 	bne	r2,zero,32cf8 <__subdf3+0x418>
   32bd4:	898fc83a 	sub	r7,r17,r6
   32bd8:	89e3803a 	cmpltu	r17,r17,r7
   32bdc:	1947c83a 	sub	r3,r3,r5
   32be0:	1c47c83a 	sub	r3,r3,r17
   32be4:	3823883a 	mov	r17,r7
   32be8:	003f9b06 	br	32a58 <__alt_mem_sdram_controller_0+0xc0032a58>
   32bec:	2988b03a 	or	r4,r5,r6
   32bf0:	203f5c26 	beq	r4,zero,32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32bf4:	10bfffc4 	addi	r2,r2,-1
   32bf8:	1000931e 	bne	r2,zero,32e48 <__subdf3+0x568>
   32bfc:	898d883a 	add	r6,r17,r6
   32c00:	3463803a 	cmpltu	r17,r6,r17
   32c04:	1947883a 	add	r3,r3,r5
   32c08:	88c7883a 	add	r3,r17,r3
   32c0c:	3023883a 	mov	r17,r6
   32c10:	003fd306 	br	32b60 <__alt_mem_sdram_controller_0+0xc0032b60>
   32c14:	1000541e 	bne	r2,zero,32d68 <__subdf3+0x488>
   32c18:	80800044 	addi	r2,r16,1
   32c1c:	1081ffcc 	andi	r2,r2,2047
   32c20:	01000044 	movi	r4,1
   32c24:	2080a20e 	bge	r4,r2,32eb0 <__subdf3+0x5d0>
   32c28:	8989c83a 	sub	r4,r17,r6
   32c2c:	8905803a 	cmpltu	r2,r17,r4
   32c30:	1967c83a 	sub	r19,r3,r5
   32c34:	98a7c83a 	sub	r19,r19,r2
   32c38:	9880202c 	andhi	r2,r19,128
   32c3c:	10006326 	beq	r2,zero,32dcc <__subdf3+0x4ec>
   32c40:	3463c83a 	sub	r17,r6,r17
   32c44:	28c7c83a 	sub	r3,r5,r3
   32c48:	344d803a 	cmpltu	r6,r6,r17
   32c4c:	19a7c83a 	sub	r19,r3,r6
   32c50:	3825883a 	mov	r18,r7
   32c54:	983f861e 	bne	r19,zero,32a70 <__alt_mem_sdram_controller_0+0xc0032a70>
   32c58:	8809883a 	mov	r4,r17
   32c5c:	00333e00 	call	333e0 <__clzsi2>
   32c60:	10800804 	addi	r2,r2,32
   32c64:	113ffe04 	addi	r4,r2,-8
   32c68:	00c007c4 	movi	r3,31
   32c6c:	193f850e 	bge	r3,r4,32a84 <__alt_mem_sdram_controller_0+0xc0032a84>
   32c70:	10bff604 	addi	r2,r2,-40
   32c74:	8884983a 	sll	r2,r17,r2
   32c78:	0023883a 	mov	r17,zero
   32c7c:	243f880e 	bge	r4,r16,32aa0 <__alt_mem_sdram_controller_0+0xc0032aa0>
   32c80:	00ffe034 	movhi	r3,65408
   32c84:	18ffffc4 	addi	r3,r3,-1
   32c88:	8121c83a 	sub	r16,r16,r4
   32c8c:	10c6703a 	and	r3,r2,r3
   32c90:	003f3406 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32c94:	9100004c 	andi	r4,r18,1
   32c98:	000b883a 	mov	r5,zero
   32c9c:	0005883a 	mov	r2,zero
   32ca0:	003f4806 	br	329c4 <__alt_mem_sdram_controller_0+0xc00329c4>
   32ca4:	298cb03a 	or	r6,r5,r6
   32ca8:	300cc03a 	cmpne	r6,r6,zero
   32cac:	0005883a 	mov	r2,zero
   32cb0:	003f6406 	br	32a44 <__alt_mem_sdram_controller_0+0xc0032a44>
   32cb4:	10009a1e 	bne	r2,zero,32f20 <__subdf3+0x640>
   32cb8:	82400044 	addi	r9,r16,1
   32cbc:	4881ffcc 	andi	r2,r9,2047
   32cc0:	02800044 	movi	r10,1
   32cc4:	5080670e 	bge	r10,r2,32e64 <__subdf3+0x584>
   32cc8:	0081ffc4 	movi	r2,2047
   32ccc:	4880af26 	beq	r9,r2,32f8c <__subdf3+0x6ac>
   32cd0:	898d883a 	add	r6,r17,r6
   32cd4:	1945883a 	add	r2,r3,r5
   32cd8:	3447803a 	cmpltu	r3,r6,r17
   32cdc:	1887883a 	add	r3,r3,r2
   32ce0:	182297fa 	slli	r17,r3,31
   32ce4:	300cd07a 	srli	r6,r6,1
   32ce8:	1806d07a 	srli	r3,r3,1
   32cec:	4821883a 	mov	r16,r9
   32cf0:	89a2b03a 	or	r17,r17,r6
   32cf4:	003f1b06 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32cf8:	0101ffc4 	movi	r4,2047
   32cfc:	813f441e 	bne	r16,r4,32a10 <__alt_mem_sdram_controller_0+0xc0032a10>
   32d00:	003f1806 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32d04:	843ff844 	addi	r16,r16,-31
   32d08:	01400804 	movi	r5,32
   32d0c:	1408d83a 	srl	r4,r2,r16
   32d10:	19405026 	beq	r3,r5,32e54 <__subdf3+0x574>
   32d14:	01401004 	movi	r5,64
   32d18:	28c7c83a 	sub	r3,r5,r3
   32d1c:	10c4983a 	sll	r2,r2,r3
   32d20:	88a2b03a 	or	r17,r17,r2
   32d24:	8822c03a 	cmpne	r17,r17,zero
   32d28:	2462b03a 	or	r17,r4,r17
   32d2c:	0007883a 	mov	r3,zero
   32d30:	0021883a 	mov	r16,zero
   32d34:	003f6d06 	br	32aec <__alt_mem_sdram_controller_0+0xc0032aec>
   32d38:	11fff804 	addi	r7,r2,-32
   32d3c:	01000804 	movi	r4,32
   32d40:	29ced83a 	srl	r7,r5,r7
   32d44:	11004526 	beq	r2,r4,32e5c <__subdf3+0x57c>
   32d48:	01001004 	movi	r4,64
   32d4c:	2089c83a 	sub	r4,r4,r2
   32d50:	2904983a 	sll	r2,r5,r4
   32d54:	118cb03a 	or	r6,r2,r6
   32d58:	300cc03a 	cmpne	r6,r6,zero
   32d5c:	398cb03a 	or	r6,r7,r6
   32d60:	0005883a 	mov	r2,zero
   32d64:	003f3706 	br	32a44 <__alt_mem_sdram_controller_0+0xc0032a44>
   32d68:	80002a26 	beq	r16,zero,32e14 <__subdf3+0x534>
   32d6c:	0101ffc4 	movi	r4,2047
   32d70:	49006626 	beq	r9,r4,32f0c <__subdf3+0x62c>
   32d74:	0085c83a 	sub	r2,zero,r2
   32d78:	18c02034 	orhi	r3,r3,128
   32d7c:	01000e04 	movi	r4,56
   32d80:	20807e16 	blt	r4,r2,32f7c <__subdf3+0x69c>
   32d84:	010007c4 	movi	r4,31
   32d88:	2080e716 	blt	r4,r2,33128 <__subdf3+0x848>
   32d8c:	01000804 	movi	r4,32
   32d90:	2089c83a 	sub	r4,r4,r2
   32d94:	1914983a 	sll	r10,r3,r4
   32d98:	8890d83a 	srl	r8,r17,r2
   32d9c:	8908983a 	sll	r4,r17,r4
   32da0:	1884d83a 	srl	r2,r3,r2
   32da4:	5222b03a 	or	r17,r10,r8
   32da8:	2006c03a 	cmpne	r3,r4,zero
   32dac:	88e2b03a 	or	r17,r17,r3
   32db0:	3463c83a 	sub	r17,r6,r17
   32db4:	2885c83a 	sub	r2,r5,r2
   32db8:	344d803a 	cmpltu	r6,r6,r17
   32dbc:	1187c83a 	sub	r3,r2,r6
   32dc0:	4821883a 	mov	r16,r9
   32dc4:	3825883a 	mov	r18,r7
   32dc8:	003f2306 	br	32a58 <__alt_mem_sdram_controller_0+0xc0032a58>
   32dcc:	24d0b03a 	or	r8,r4,r19
   32dd0:	40001b1e 	bne	r8,zero,32e40 <__subdf3+0x560>
   32dd4:	0005883a 	mov	r2,zero
   32dd8:	0009883a 	mov	r4,zero
   32ddc:	0021883a 	mov	r16,zero
   32de0:	003f4906 	br	32b08 <__alt_mem_sdram_controller_0+0xc0032b08>
   32de4:	010007c4 	movi	r4,31
   32de8:	20803a16 	blt	r4,r2,32ed4 <__subdf3+0x5f4>
   32dec:	01000804 	movi	r4,32
   32df0:	2089c83a 	sub	r4,r4,r2
   32df4:	2912983a 	sll	r9,r5,r4
   32df8:	3090d83a 	srl	r8,r6,r2
   32dfc:	3108983a 	sll	r4,r6,r4
   32e00:	2884d83a 	srl	r2,r5,r2
   32e04:	4a12b03a 	or	r9,r9,r8
   32e08:	2008c03a 	cmpne	r4,r4,zero
   32e0c:	4912b03a 	or	r9,r9,r4
   32e10:	003f4e06 	br	32b4c <__alt_mem_sdram_controller_0+0xc0032b4c>
   32e14:	1c48b03a 	or	r4,r3,r17
   32e18:	20003c26 	beq	r4,zero,32f0c <__subdf3+0x62c>
   32e1c:	0084303a 	nor	r2,zero,r2
   32e20:	1000381e 	bne	r2,zero,32f04 <__subdf3+0x624>
   32e24:	3463c83a 	sub	r17,r6,r17
   32e28:	28c5c83a 	sub	r2,r5,r3
   32e2c:	344d803a 	cmpltu	r6,r6,r17
   32e30:	1187c83a 	sub	r3,r2,r6
   32e34:	4821883a 	mov	r16,r9
   32e38:	3825883a 	mov	r18,r7
   32e3c:	003f0606 	br	32a58 <__alt_mem_sdram_controller_0+0xc0032a58>
   32e40:	2023883a 	mov	r17,r4
   32e44:	003f0906 	br	32a6c <__alt_mem_sdram_controller_0+0xc0032a6c>
   32e48:	0101ffc4 	movi	r4,2047
   32e4c:	813f3a1e 	bne	r16,r4,32b38 <__alt_mem_sdram_controller_0+0xc0032b38>
   32e50:	003ec406 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32e54:	0005883a 	mov	r2,zero
   32e58:	003fb106 	br	32d20 <__alt_mem_sdram_controller_0+0xc0032d20>
   32e5c:	0005883a 	mov	r2,zero
   32e60:	003fbc06 	br	32d54 <__alt_mem_sdram_controller_0+0xc0032d54>
   32e64:	1c44b03a 	or	r2,r3,r17
   32e68:	80008e1e 	bne	r16,zero,330a4 <__subdf3+0x7c4>
   32e6c:	1000c826 	beq	r2,zero,33190 <__subdf3+0x8b0>
   32e70:	2984b03a 	or	r2,r5,r6
   32e74:	103ebb26 	beq	r2,zero,32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32e78:	8989883a 	add	r4,r17,r6
   32e7c:	1945883a 	add	r2,r3,r5
   32e80:	2447803a 	cmpltu	r3,r4,r17
   32e84:	1887883a 	add	r3,r3,r2
   32e88:	1880202c 	andhi	r2,r3,128
   32e8c:	2023883a 	mov	r17,r4
   32e90:	103f1626 	beq	r2,zero,32aec <__alt_mem_sdram_controller_0+0xc0032aec>
   32e94:	00bfe034 	movhi	r2,65408
   32e98:	10bfffc4 	addi	r2,r2,-1
   32e9c:	5021883a 	mov	r16,r10
   32ea0:	1886703a 	and	r3,r3,r2
   32ea4:	003eaf06 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32ea8:	3825883a 	mov	r18,r7
   32eac:	003f0f06 	br	32aec <__alt_mem_sdram_controller_0+0xc0032aec>
   32eb0:	1c44b03a 	or	r2,r3,r17
   32eb4:	8000251e 	bne	r16,zero,32f4c <__subdf3+0x66c>
   32eb8:	1000661e 	bne	r2,zero,33054 <__subdf3+0x774>
   32ebc:	2990b03a 	or	r8,r5,r6
   32ec0:	40009626 	beq	r8,zero,3311c <__subdf3+0x83c>
   32ec4:	2807883a 	mov	r3,r5
   32ec8:	3023883a 	mov	r17,r6
   32ecc:	3825883a 	mov	r18,r7
   32ed0:	003ea406 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32ed4:	127ff804 	addi	r9,r2,-32
   32ed8:	01000804 	movi	r4,32
   32edc:	2a52d83a 	srl	r9,r5,r9
   32ee0:	11008c26 	beq	r2,r4,33114 <__subdf3+0x834>
   32ee4:	01001004 	movi	r4,64
   32ee8:	2085c83a 	sub	r2,r4,r2
   32eec:	2884983a 	sll	r2,r5,r2
   32ef0:	118cb03a 	or	r6,r2,r6
   32ef4:	300cc03a 	cmpne	r6,r6,zero
   32ef8:	4992b03a 	or	r9,r9,r6
   32efc:	0005883a 	mov	r2,zero
   32f00:	003f1206 	br	32b4c <__alt_mem_sdram_controller_0+0xc0032b4c>
   32f04:	0101ffc4 	movi	r4,2047
   32f08:	493f9c1e 	bne	r9,r4,32d7c <__alt_mem_sdram_controller_0+0xc0032d7c>
   32f0c:	2807883a 	mov	r3,r5
   32f10:	3023883a 	mov	r17,r6
   32f14:	4821883a 	mov	r16,r9
   32f18:	3825883a 	mov	r18,r7
   32f1c:	003e9106 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32f20:	80001f1e 	bne	r16,zero,32fa0 <__subdf3+0x6c0>
   32f24:	1c48b03a 	or	r4,r3,r17
   32f28:	20005a26 	beq	r4,zero,33094 <__subdf3+0x7b4>
   32f2c:	0084303a 	nor	r2,zero,r2
   32f30:	1000561e 	bne	r2,zero,3308c <__subdf3+0x7ac>
   32f34:	89a3883a 	add	r17,r17,r6
   32f38:	1945883a 	add	r2,r3,r5
   32f3c:	898d803a 	cmpltu	r6,r17,r6
   32f40:	3087883a 	add	r3,r6,r2
   32f44:	4821883a 	mov	r16,r9
   32f48:	003f0506 	br	32b60 <__alt_mem_sdram_controller_0+0xc0032b60>
   32f4c:	10002b1e 	bne	r2,zero,32ffc <__subdf3+0x71c>
   32f50:	2984b03a 	or	r2,r5,r6
   32f54:	10008026 	beq	r2,zero,33158 <__subdf3+0x878>
   32f58:	2807883a 	mov	r3,r5
   32f5c:	3023883a 	mov	r17,r6
   32f60:	3825883a 	mov	r18,r7
   32f64:	0401ffc4 	movi	r16,2047
   32f68:	003e7e06 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   32f6c:	3809883a 	mov	r4,r7
   32f70:	0011883a 	mov	r8,zero
   32f74:	0005883a 	mov	r2,zero
   32f78:	003ee306 	br	32b08 <__alt_mem_sdram_controller_0+0xc0032b08>
   32f7c:	1c62b03a 	or	r17,r3,r17
   32f80:	8822c03a 	cmpne	r17,r17,zero
   32f84:	0005883a 	mov	r2,zero
   32f88:	003f8906 	br	32db0 <__alt_mem_sdram_controller_0+0xc0032db0>
   32f8c:	3809883a 	mov	r4,r7
   32f90:	4821883a 	mov	r16,r9
   32f94:	0011883a 	mov	r8,zero
   32f98:	0005883a 	mov	r2,zero
   32f9c:	003eda06 	br	32b08 <__alt_mem_sdram_controller_0+0xc0032b08>
   32fa0:	0101ffc4 	movi	r4,2047
   32fa4:	49003b26 	beq	r9,r4,33094 <__subdf3+0x7b4>
   32fa8:	0085c83a 	sub	r2,zero,r2
   32fac:	18c02034 	orhi	r3,r3,128
   32fb0:	01000e04 	movi	r4,56
   32fb4:	20806e16 	blt	r4,r2,33170 <__subdf3+0x890>
   32fb8:	010007c4 	movi	r4,31
   32fbc:	20807716 	blt	r4,r2,3319c <__subdf3+0x8bc>
   32fc0:	01000804 	movi	r4,32
   32fc4:	2089c83a 	sub	r4,r4,r2
   32fc8:	1914983a 	sll	r10,r3,r4
   32fcc:	8890d83a 	srl	r8,r17,r2
   32fd0:	8908983a 	sll	r4,r17,r4
   32fd4:	1884d83a 	srl	r2,r3,r2
   32fd8:	5222b03a 	or	r17,r10,r8
   32fdc:	2006c03a 	cmpne	r3,r4,zero
   32fe0:	88e2b03a 	or	r17,r17,r3
   32fe4:	89a3883a 	add	r17,r17,r6
   32fe8:	1145883a 	add	r2,r2,r5
   32fec:	898d803a 	cmpltu	r6,r17,r6
   32ff0:	3087883a 	add	r3,r6,r2
   32ff4:	4821883a 	mov	r16,r9
   32ff8:	003ed906 	br	32b60 <__alt_mem_sdram_controller_0+0xc0032b60>
   32ffc:	2984b03a 	or	r2,r5,r6
   33000:	10004226 	beq	r2,zero,3310c <__subdf3+0x82c>
   33004:	1808d0fa 	srli	r4,r3,3
   33008:	8822d0fa 	srli	r17,r17,3
   3300c:	1806977a 	slli	r3,r3,29
   33010:	2080022c 	andhi	r2,r4,8
   33014:	1c62b03a 	or	r17,r3,r17
   33018:	10000826 	beq	r2,zero,3303c <__subdf3+0x75c>
   3301c:	2812d0fa 	srli	r9,r5,3
   33020:	4880022c 	andhi	r2,r9,8
   33024:	1000051e 	bne	r2,zero,3303c <__subdf3+0x75c>
   33028:	300cd0fa 	srli	r6,r6,3
   3302c:	2804977a 	slli	r2,r5,29
   33030:	4809883a 	mov	r4,r9
   33034:	3825883a 	mov	r18,r7
   33038:	11a2b03a 	or	r17,r2,r6
   3303c:	8806d77a 	srli	r3,r17,29
   33040:	200890fa 	slli	r4,r4,3
   33044:	882290fa 	slli	r17,r17,3
   33048:	0401ffc4 	movi	r16,2047
   3304c:	1906b03a 	or	r3,r3,r4
   33050:	003e4406 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   33054:	2984b03a 	or	r2,r5,r6
   33058:	103e4226 	beq	r2,zero,32964 <__alt_mem_sdram_controller_0+0xc0032964>
   3305c:	8989c83a 	sub	r4,r17,r6
   33060:	8911803a 	cmpltu	r8,r17,r4
   33064:	1945c83a 	sub	r2,r3,r5
   33068:	1205c83a 	sub	r2,r2,r8
   3306c:	1200202c 	andhi	r8,r2,128
   33070:	403e9a26 	beq	r8,zero,32adc <__alt_mem_sdram_controller_0+0xc0032adc>
   33074:	3463c83a 	sub	r17,r6,r17
   33078:	28c5c83a 	sub	r2,r5,r3
   3307c:	344d803a 	cmpltu	r6,r6,r17
   33080:	1187c83a 	sub	r3,r2,r6
   33084:	3825883a 	mov	r18,r7
   33088:	003e3606 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   3308c:	0101ffc4 	movi	r4,2047
   33090:	493fc71e 	bne	r9,r4,32fb0 <__alt_mem_sdram_controller_0+0xc0032fb0>
   33094:	2807883a 	mov	r3,r5
   33098:	3023883a 	mov	r17,r6
   3309c:	4821883a 	mov	r16,r9
   330a0:	003e3006 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   330a4:	10003626 	beq	r2,zero,33180 <__subdf3+0x8a0>
   330a8:	2984b03a 	or	r2,r5,r6
   330ac:	10001726 	beq	r2,zero,3310c <__subdf3+0x82c>
   330b0:	1808d0fa 	srli	r4,r3,3
   330b4:	8822d0fa 	srli	r17,r17,3
   330b8:	1806977a 	slli	r3,r3,29
   330bc:	2080022c 	andhi	r2,r4,8
   330c0:	1c62b03a 	or	r17,r3,r17
   330c4:	10000726 	beq	r2,zero,330e4 <__subdf3+0x804>
   330c8:	2812d0fa 	srli	r9,r5,3
   330cc:	4880022c 	andhi	r2,r9,8
   330d0:	1000041e 	bne	r2,zero,330e4 <__subdf3+0x804>
   330d4:	300cd0fa 	srli	r6,r6,3
   330d8:	2804977a 	slli	r2,r5,29
   330dc:	4809883a 	mov	r4,r9
   330e0:	11a2b03a 	or	r17,r2,r6
   330e4:	8806d77a 	srli	r3,r17,29
   330e8:	200890fa 	slli	r4,r4,3
   330ec:	882290fa 	slli	r17,r17,3
   330f0:	3825883a 	mov	r18,r7
   330f4:	1906b03a 	or	r3,r3,r4
   330f8:	0401ffc4 	movi	r16,2047
   330fc:	003e1906 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   33100:	000b883a 	mov	r5,zero
   33104:	0005883a 	mov	r2,zero
   33108:	003e2e06 	br	329c4 <__alt_mem_sdram_controller_0+0xc00329c4>
   3310c:	0401ffc4 	movi	r16,2047
   33110:	003e1406 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   33114:	0005883a 	mov	r2,zero
   33118:	003f7506 	br	32ef0 <__alt_mem_sdram_controller_0+0xc0032ef0>
   3311c:	0005883a 	mov	r2,zero
   33120:	0009883a 	mov	r4,zero
   33124:	003e7806 	br	32b08 <__alt_mem_sdram_controller_0+0xc0032b08>
   33128:	123ff804 	addi	r8,r2,-32
   3312c:	01000804 	movi	r4,32
   33130:	1a10d83a 	srl	r8,r3,r8
   33134:	11002526 	beq	r2,r4,331cc <__subdf3+0x8ec>
   33138:	01001004 	movi	r4,64
   3313c:	2085c83a 	sub	r2,r4,r2
   33140:	1884983a 	sll	r2,r3,r2
   33144:	1444b03a 	or	r2,r2,r17
   33148:	1004c03a 	cmpne	r2,r2,zero
   3314c:	40a2b03a 	or	r17,r8,r2
   33150:	0005883a 	mov	r2,zero
   33154:	003f1606 	br	32db0 <__alt_mem_sdram_controller_0+0xc0032db0>
   33158:	02000434 	movhi	r8,16
   3315c:	0009883a 	mov	r4,zero
   33160:	423fffc4 	addi	r8,r8,-1
   33164:	00bfffc4 	movi	r2,-1
   33168:	0401ffc4 	movi	r16,2047
   3316c:	003e6606 	br	32b08 <__alt_mem_sdram_controller_0+0xc0032b08>
   33170:	1c62b03a 	or	r17,r3,r17
   33174:	8822c03a 	cmpne	r17,r17,zero
   33178:	0005883a 	mov	r2,zero
   3317c:	003f9906 	br	32fe4 <__alt_mem_sdram_controller_0+0xc0032fe4>
   33180:	2807883a 	mov	r3,r5
   33184:	3023883a 	mov	r17,r6
   33188:	0401ffc4 	movi	r16,2047
   3318c:	003df506 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   33190:	2807883a 	mov	r3,r5
   33194:	3023883a 	mov	r17,r6
   33198:	003df206 	br	32964 <__alt_mem_sdram_controller_0+0xc0032964>
   3319c:	123ff804 	addi	r8,r2,-32
   331a0:	01000804 	movi	r4,32
   331a4:	1a10d83a 	srl	r8,r3,r8
   331a8:	11000a26 	beq	r2,r4,331d4 <__subdf3+0x8f4>
   331ac:	01001004 	movi	r4,64
   331b0:	2085c83a 	sub	r2,r4,r2
   331b4:	1884983a 	sll	r2,r3,r2
   331b8:	1444b03a 	or	r2,r2,r17
   331bc:	1004c03a 	cmpne	r2,r2,zero
   331c0:	40a2b03a 	or	r17,r8,r2
   331c4:	0005883a 	mov	r2,zero
   331c8:	003f8606 	br	32fe4 <__alt_mem_sdram_controller_0+0xc0032fe4>
   331cc:	0005883a 	mov	r2,zero
   331d0:	003fdc06 	br	33144 <__alt_mem_sdram_controller_0+0xc0033144>
   331d4:	0005883a 	mov	r2,zero
   331d8:	003ff706 	br	331b8 <__alt_mem_sdram_controller_0+0xc00331b8>

000331dc <__fixdfsi>:
   331dc:	280cd53a 	srli	r6,r5,20
   331e0:	00c00434 	movhi	r3,16
   331e4:	18ffffc4 	addi	r3,r3,-1
   331e8:	3181ffcc 	andi	r6,r6,2047
   331ec:	01c0ff84 	movi	r7,1022
   331f0:	28c6703a 	and	r3,r5,r3
   331f4:	280ad7fa 	srli	r5,r5,31
   331f8:	3980120e 	bge	r7,r6,33244 <__fixdfsi+0x68>
   331fc:	00810744 	movi	r2,1053
   33200:	11800c16 	blt	r2,r6,33234 <__fixdfsi+0x58>
   33204:	00810cc4 	movi	r2,1075
   33208:	1185c83a 	sub	r2,r2,r6
   3320c:	01c007c4 	movi	r7,31
   33210:	18c00434 	orhi	r3,r3,16
   33214:	38800d16 	blt	r7,r2,3324c <__fixdfsi+0x70>
   33218:	31befb44 	addi	r6,r6,-1043
   3321c:	2084d83a 	srl	r2,r4,r2
   33220:	1986983a 	sll	r3,r3,r6
   33224:	1884b03a 	or	r2,r3,r2
   33228:	28000726 	beq	r5,zero,33248 <__fixdfsi+0x6c>
   3322c:	0085c83a 	sub	r2,zero,r2
   33230:	f800283a 	ret
   33234:	00a00034 	movhi	r2,32768
   33238:	10bfffc4 	addi	r2,r2,-1
   3323c:	2885883a 	add	r2,r5,r2
   33240:	f800283a 	ret
   33244:	0005883a 	mov	r2,zero
   33248:	f800283a 	ret
   3324c:	008104c4 	movi	r2,1043
   33250:	1185c83a 	sub	r2,r2,r6
   33254:	1884d83a 	srl	r2,r3,r2
   33258:	003ff306 	br	33228 <__alt_mem_sdram_controller_0+0xc0033228>

0003325c <__floatsidf>:
   3325c:	defffd04 	addi	sp,sp,-12
   33260:	dfc00215 	stw	ra,8(sp)
   33264:	dc400115 	stw	r17,4(sp)
   33268:	dc000015 	stw	r16,0(sp)
   3326c:	20002b26 	beq	r4,zero,3331c <__floatsidf+0xc0>
   33270:	2023883a 	mov	r17,r4
   33274:	2020d7fa 	srli	r16,r4,31
   33278:	20002d16 	blt	r4,zero,33330 <__floatsidf+0xd4>
   3327c:	8809883a 	mov	r4,r17
   33280:	00333e00 	call	333e0 <__clzsi2>
   33284:	01410784 	movi	r5,1054
   33288:	288bc83a 	sub	r5,r5,r2
   3328c:	01010cc4 	movi	r4,1075
   33290:	2149c83a 	sub	r4,r4,r5
   33294:	00c007c4 	movi	r3,31
   33298:	1900160e 	bge	r3,r4,332f4 <__floatsidf+0x98>
   3329c:	00c104c4 	movi	r3,1043
   332a0:	1947c83a 	sub	r3,r3,r5
   332a4:	88c6983a 	sll	r3,r17,r3
   332a8:	00800434 	movhi	r2,16
   332ac:	10bfffc4 	addi	r2,r2,-1
   332b0:	1886703a 	and	r3,r3,r2
   332b4:	2941ffcc 	andi	r5,r5,2047
   332b8:	800d883a 	mov	r6,r16
   332bc:	0005883a 	mov	r2,zero
   332c0:	280a953a 	slli	r5,r5,20
   332c4:	31803fcc 	andi	r6,r6,255
   332c8:	01000434 	movhi	r4,16
   332cc:	300c97fa 	slli	r6,r6,31
   332d0:	213fffc4 	addi	r4,r4,-1
   332d4:	1906703a 	and	r3,r3,r4
   332d8:	1946b03a 	or	r3,r3,r5
   332dc:	1986b03a 	or	r3,r3,r6
   332e0:	dfc00217 	ldw	ra,8(sp)
   332e4:	dc400117 	ldw	r17,4(sp)
   332e8:	dc000017 	ldw	r16,0(sp)
   332ec:	dec00304 	addi	sp,sp,12
   332f0:	f800283a 	ret
   332f4:	00c002c4 	movi	r3,11
   332f8:	1887c83a 	sub	r3,r3,r2
   332fc:	88c6d83a 	srl	r3,r17,r3
   33300:	8904983a 	sll	r2,r17,r4
   33304:	01000434 	movhi	r4,16
   33308:	213fffc4 	addi	r4,r4,-1
   3330c:	2941ffcc 	andi	r5,r5,2047
   33310:	1906703a 	and	r3,r3,r4
   33314:	800d883a 	mov	r6,r16
   33318:	003fe906 	br	332c0 <__alt_mem_sdram_controller_0+0xc00332c0>
   3331c:	000d883a 	mov	r6,zero
   33320:	000b883a 	mov	r5,zero
   33324:	0007883a 	mov	r3,zero
   33328:	0005883a 	mov	r2,zero
   3332c:	003fe406 	br	332c0 <__alt_mem_sdram_controller_0+0xc00332c0>
   33330:	0123c83a 	sub	r17,zero,r4
   33334:	003fd106 	br	3327c <__alt_mem_sdram_controller_0+0xc003327c>

00033338 <__floatunsidf>:
   33338:	defffe04 	addi	sp,sp,-8
   3333c:	dc000015 	stw	r16,0(sp)
   33340:	dfc00115 	stw	ra,4(sp)
   33344:	2021883a 	mov	r16,r4
   33348:	20002226 	beq	r4,zero,333d4 <__floatunsidf+0x9c>
   3334c:	00333e00 	call	333e0 <__clzsi2>
   33350:	01010784 	movi	r4,1054
   33354:	2089c83a 	sub	r4,r4,r2
   33358:	01810cc4 	movi	r6,1075
   3335c:	310dc83a 	sub	r6,r6,r4
   33360:	00c007c4 	movi	r3,31
   33364:	1980120e 	bge	r3,r6,333b0 <__floatunsidf+0x78>
   33368:	00c104c4 	movi	r3,1043
   3336c:	1907c83a 	sub	r3,r3,r4
   33370:	80ca983a 	sll	r5,r16,r3
   33374:	00800434 	movhi	r2,16
   33378:	10bfffc4 	addi	r2,r2,-1
   3337c:	2101ffcc 	andi	r4,r4,2047
   33380:	0021883a 	mov	r16,zero
   33384:	288a703a 	and	r5,r5,r2
   33388:	2008953a 	slli	r4,r4,20
   3338c:	00c00434 	movhi	r3,16
   33390:	18ffffc4 	addi	r3,r3,-1
   33394:	28c6703a 	and	r3,r5,r3
   33398:	8005883a 	mov	r2,r16
   3339c:	1906b03a 	or	r3,r3,r4
   333a0:	dfc00117 	ldw	ra,4(sp)
   333a4:	dc000017 	ldw	r16,0(sp)
   333a8:	dec00204 	addi	sp,sp,8
   333ac:	f800283a 	ret
   333b0:	00c002c4 	movi	r3,11
   333b4:	188bc83a 	sub	r5,r3,r2
   333b8:	814ad83a 	srl	r5,r16,r5
   333bc:	00c00434 	movhi	r3,16
   333c0:	18ffffc4 	addi	r3,r3,-1
   333c4:	81a0983a 	sll	r16,r16,r6
   333c8:	2101ffcc 	andi	r4,r4,2047
   333cc:	28ca703a 	and	r5,r5,r3
   333d0:	003fed06 	br	33388 <__alt_mem_sdram_controller_0+0xc0033388>
   333d4:	0009883a 	mov	r4,zero
   333d8:	000b883a 	mov	r5,zero
   333dc:	003fea06 	br	33388 <__alt_mem_sdram_controller_0+0xc0033388>

000333e0 <__clzsi2>:
   333e0:	00bfffd4 	movui	r2,65535
   333e4:	11000536 	bltu	r2,r4,333fc <__clzsi2+0x1c>
   333e8:	00803fc4 	movi	r2,255
   333ec:	11000f36 	bltu	r2,r4,3342c <__clzsi2+0x4c>
   333f0:	00800804 	movi	r2,32
   333f4:	0007883a 	mov	r3,zero
   333f8:	00000506 	br	33410 <__clzsi2+0x30>
   333fc:	00804034 	movhi	r2,256
   33400:	10bfffc4 	addi	r2,r2,-1
   33404:	11000c2e 	bgeu	r2,r4,33438 <__clzsi2+0x58>
   33408:	00800204 	movi	r2,8
   3340c:	00c00604 	movi	r3,24
   33410:	20c8d83a 	srl	r4,r4,r3
   33414:	00c000f4 	movhi	r3,3
   33418:	18d94404 	addi	r3,r3,25872
   3341c:	1909883a 	add	r4,r3,r4
   33420:	20c00003 	ldbu	r3,0(r4)
   33424:	10c5c83a 	sub	r2,r2,r3
   33428:	f800283a 	ret
   3342c:	00800604 	movi	r2,24
   33430:	00c00204 	movi	r3,8
   33434:	003ff606 	br	33410 <__alt_mem_sdram_controller_0+0xc0033410>
   33438:	00800404 	movi	r2,16
   3343c:	1007883a 	mov	r3,r2
   33440:	003ff306 	br	33410 <__alt_mem_sdram_controller_0+0xc0033410>

00033444 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   33444:	defffe04 	addi	sp,sp,-8
   33448:	dfc00115 	stw	ra,4(sp)
   3344c:	df000015 	stw	fp,0(sp)
   33450:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   33454:	d0a00b17 	ldw	r2,-32724(gp)
   33458:	10000326 	beq	r2,zero,33468 <alt_get_errno+0x24>
   3345c:	d0a00b17 	ldw	r2,-32724(gp)
   33460:	103ee83a 	callr	r2
   33464:	00000106 	br	3346c <alt_get_errno+0x28>
   33468:	d0a6cc04 	addi	r2,gp,-25808
}
   3346c:	e037883a 	mov	sp,fp
   33470:	dfc00117 	ldw	ra,4(sp)
   33474:	df000017 	ldw	fp,0(sp)
   33478:	dec00204 	addi	sp,sp,8
   3347c:	f800283a 	ret

00033480 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   33480:	defffb04 	addi	sp,sp,-20
   33484:	dfc00415 	stw	ra,16(sp)
   33488:	df000315 	stw	fp,12(sp)
   3348c:	df000304 	addi	fp,sp,12
   33490:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   33494:	e0bfff17 	ldw	r2,-4(fp)
   33498:	10000616 	blt	r2,zero,334b4 <close+0x34>
   3349c:	e0bfff17 	ldw	r2,-4(fp)
   334a0:	10c00324 	muli	r3,r2,12
   334a4:	008000f4 	movhi	r2,3
   334a8:	109bc404 	addi	r2,r2,28432
   334ac:	1885883a 	add	r2,r3,r2
   334b0:	00000106 	br	334b8 <close+0x38>
   334b4:	0005883a 	mov	r2,zero
   334b8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   334bc:	e0bffd17 	ldw	r2,-12(fp)
   334c0:	10001926 	beq	r2,zero,33528 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   334c4:	e0bffd17 	ldw	r2,-12(fp)
   334c8:	10800017 	ldw	r2,0(r2)
   334cc:	10800417 	ldw	r2,16(r2)
   334d0:	10000626 	beq	r2,zero,334ec <close+0x6c>
   334d4:	e0bffd17 	ldw	r2,-12(fp)
   334d8:	10800017 	ldw	r2,0(r2)
   334dc:	10800417 	ldw	r2,16(r2)
   334e0:	e13ffd17 	ldw	r4,-12(fp)
   334e4:	103ee83a 	callr	r2
   334e8:	00000106 	br	334f0 <close+0x70>
   334ec:	0005883a 	mov	r2,zero
   334f0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   334f4:	e13fff17 	ldw	r4,-4(fp)
   334f8:	00341480 	call	34148 <alt_release_fd>
    if (rval < 0)
   334fc:	e0bffe17 	ldw	r2,-8(fp)
   33500:	1000070e 	bge	r2,zero,33520 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   33504:	00334440 	call	33444 <alt_get_errno>
   33508:	1007883a 	mov	r3,r2
   3350c:	e0bffe17 	ldw	r2,-8(fp)
   33510:	0085c83a 	sub	r2,zero,r2
   33514:	18800015 	stw	r2,0(r3)
      return -1;
   33518:	00bfffc4 	movi	r2,-1
   3351c:	00000706 	br	3353c <close+0xbc>
    }
    return 0;
   33520:	0005883a 	mov	r2,zero
   33524:	00000506 	br	3353c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   33528:	00334440 	call	33444 <alt_get_errno>
   3352c:	1007883a 	mov	r3,r2
   33530:	00801444 	movi	r2,81
   33534:	18800015 	stw	r2,0(r3)
    return -1;
   33538:	00bfffc4 	movi	r2,-1
  }
}
   3353c:	e037883a 	mov	sp,fp
   33540:	dfc00117 	ldw	ra,4(sp)
   33544:	df000017 	ldw	fp,0(sp)
   33548:	dec00204 	addi	sp,sp,8
   3354c:	f800283a 	ret

00033550 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   33550:	defffc04 	addi	sp,sp,-16
   33554:	df000315 	stw	fp,12(sp)
   33558:	df000304 	addi	fp,sp,12
   3355c:	e13ffd15 	stw	r4,-12(fp)
   33560:	e17ffe15 	stw	r5,-8(fp)
   33564:	e1bfff15 	stw	r6,-4(fp)
  return len;
   33568:	e0bfff17 	ldw	r2,-4(fp)
}
   3356c:	e037883a 	mov	sp,fp
   33570:	df000017 	ldw	fp,0(sp)
   33574:	dec00104 	addi	sp,sp,4
   33578:	f800283a 	ret

0003357c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   3357c:	defffd04 	addi	sp,sp,-12
   33580:	df000215 	stw	fp,8(sp)
   33584:	df000204 	addi	fp,sp,8
   33588:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   3358c:	0001883a 	nop
   33590:	e0bfff17 	ldw	r2,-4(fp)
   33594:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   33598:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   3359c:	10000226 	beq	r2,zero,335a8 <_exit+0x2c>
    ALT_SIM_FAIL();
   335a0:	002af070 	cmpltui	zero,zero,43969
   335a4:	00000106 	br	335ac <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   335a8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   335ac:	003fff06 	br	335ac <__alt_mem_sdram_controller_0+0xc00335ac>

000335b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   335b0:	defffe04 	addi	sp,sp,-8
   335b4:	dfc00115 	stw	ra,4(sp)
   335b8:	df000015 	stw	fp,0(sp)
   335bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   335c0:	d0a00b17 	ldw	r2,-32724(gp)
   335c4:	10000326 	beq	r2,zero,335d4 <alt_get_errno+0x24>
   335c8:	d0a00b17 	ldw	r2,-32724(gp)
   335cc:	103ee83a 	callr	r2
   335d0:	00000106 	br	335d8 <alt_get_errno+0x28>
   335d4:	d0a6cc04 	addi	r2,gp,-25808
}
   335d8:	e037883a 	mov	sp,fp
   335dc:	dfc00117 	ldw	ra,4(sp)
   335e0:	df000017 	ldw	fp,0(sp)
   335e4:	dec00204 	addi	sp,sp,8
   335e8:	f800283a 	ret

000335ec <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   335ec:	defffb04 	addi	sp,sp,-20
   335f0:	dfc00415 	stw	ra,16(sp)
   335f4:	df000315 	stw	fp,12(sp)
   335f8:	df000304 	addi	fp,sp,12
   335fc:	e13ffe15 	stw	r4,-8(fp)
   33600:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   33604:	e0bffe17 	ldw	r2,-8(fp)
   33608:	10000616 	blt	r2,zero,33624 <fstat+0x38>
   3360c:	e0bffe17 	ldw	r2,-8(fp)
   33610:	10c00324 	muli	r3,r2,12
   33614:	008000f4 	movhi	r2,3
   33618:	109bc404 	addi	r2,r2,28432
   3361c:	1885883a 	add	r2,r3,r2
   33620:	00000106 	br	33628 <fstat+0x3c>
   33624:	0005883a 	mov	r2,zero
   33628:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   3362c:	e0bffd17 	ldw	r2,-12(fp)
   33630:	10001026 	beq	r2,zero,33674 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   33634:	e0bffd17 	ldw	r2,-12(fp)
   33638:	10800017 	ldw	r2,0(r2)
   3363c:	10800817 	ldw	r2,32(r2)
   33640:	10000726 	beq	r2,zero,33660 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   33644:	e0bffd17 	ldw	r2,-12(fp)
   33648:	10800017 	ldw	r2,0(r2)
   3364c:	10800817 	ldw	r2,32(r2)
   33650:	e17fff17 	ldw	r5,-4(fp)
   33654:	e13ffd17 	ldw	r4,-12(fp)
   33658:	103ee83a 	callr	r2
   3365c:	00000a06 	br	33688 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   33660:	e0bfff17 	ldw	r2,-4(fp)
   33664:	00c80004 	movi	r3,8192
   33668:	10c00115 	stw	r3,4(r2)
      return 0;
   3366c:	0005883a 	mov	r2,zero
   33670:	00000506 	br	33688 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   33674:	00335b00 	call	335b0 <alt_get_errno>
   33678:	1007883a 	mov	r3,r2
   3367c:	00801444 	movi	r2,81
   33680:	18800015 	stw	r2,0(r3)
    return -1;
   33684:	00bfffc4 	movi	r2,-1
  }
}
   33688:	e037883a 	mov	sp,fp
   3368c:	dfc00117 	ldw	ra,4(sp)
   33690:	df000017 	ldw	fp,0(sp)
   33694:	dec00204 	addi	sp,sp,8
   33698:	f800283a 	ret

0003369c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   3369c:	deffff04 	addi	sp,sp,-4
   336a0:	df000015 	stw	fp,0(sp)
   336a4:	d839883a 	mov	fp,sp
  return 0;
   336a8:	0005883a 	mov	r2,zero
}
   336ac:	e037883a 	mov	sp,fp
   336b0:	df000017 	ldw	fp,0(sp)
   336b4:	dec00104 	addi	sp,sp,4
   336b8:	f800283a 	ret

000336bc <gettimeofday>:
 */
 

#if defined (__GNUC__) && (__GNUC__ >= 4)
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, void *ptimezone_vptr)
{
   336bc:	defff404 	addi	sp,sp,-48
   336c0:	dfc00b15 	stw	ra,44(sp)
   336c4:	df000a15 	stw	fp,40(sp)
   336c8:	dd000915 	stw	r20,36(sp)
   336cc:	dcc00815 	stw	r19,32(sp)
   336d0:	dc800715 	stw	r18,28(sp)
   336d4:	dc400615 	stw	r17,24(sp)
   336d8:	dc000515 	stw	r16,20(sp)
   336dc:	df000a04 	addi	fp,sp,40
   336e0:	e13ff915 	stw	r4,-28(fp)
   336e4:	e17ffa15 	stw	r5,-24(fp)
  struct timezone *ptimezone = (struct timezone*)ptimezone_vptr;
   336e8:	e0bffa17 	ldw	r2,-24(fp)
   336ec:	e0bff615 	stw	r2,-40(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   336f0:	d0a6db17 	ldw	r2,-25748(gp)
#else
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, struct timezone *ptimezone)
{
#endif
  
  alt_u32 nticks = alt_nticks (); 
   336f4:	e0bff715 	stw	r2,-36(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   336f8:	d0a6da17 	ldw	r2,-25752(gp)
  alt_u32 tick_rate = alt_ticks_per_second ();
   336fc:	e0bff815 	stw	r2,-32(fp)
   * non-zero system clock rate. If the system clock is not running, an error
   * is generated and the contents of "ptimeval" and "ptimezone" are not
   * updated.
   */

  if (tick_rate)
   33700:	e0bff817 	ldw	r2,-32(fp)
   33704:	10005f26 	beq	r2,zero,33884 <gettimeofday+0x1c8>
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
   33708:	d0a6d517 	ldw	r2,-25772(gp)
   3370c:	1029883a 	mov	r20,r2
   33710:	e17ff817 	ldw	r5,-32(fp)
   33714:	e13ff717 	ldw	r4,-36(fp)
   33718:	002260c0 	call	2260c <__udivsi3>
   3371c:	a085883a 	add	r2,r20,r2
   33720:	1007883a 	mov	r3,r2
   33724:	e0bff917 	ldw	r2,-28(fp)
   33728:	10c00015 	stw	r3,0(r2)
    ptimeval->tv_usec = alt_resettime.tv_usec +
   3372c:	d0a6d617 	ldw	r2,-25768(gp)
   33730:	1029883a 	mov	r20,r2
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
   33734:	e0bff717 	ldw	r2,-36(fp)
   33738:	1021883a 	mov	r16,r2
   3373c:	0023883a 	mov	r17,zero
   33740:	e17ff817 	ldw	r5,-32(fp)
   33744:	010003f4 	movhi	r4,15
   33748:	21109004 	addi	r4,r4,16960
   3374c:	002260c0 	call	2260c <__udivsi3>
   33750:	1025883a 	mov	r18,r2
   33754:	0027883a 	mov	r19,zero
   33758:	900d883a 	mov	r6,r18
   3375c:	980f883a 	mov	r7,r19
   33760:	8009883a 	mov	r4,r16
   33764:	880b883a 	mov	r5,r17
   33768:	00302cc0 	call	302cc <__muldi3>
   3376c:	1009883a 	mov	r4,r2
   33770:	180b883a 	mov	r5,r3
   33774:	2005883a 	mov	r2,r4
   33778:	2807883a 	mov	r3,r5
   3377c:	018003f4 	movhi	r6,15
   33780:	31909004 	addi	r6,r6,16960
   33784:	000f883a 	mov	r7,zero
   33788:	1009883a 	mov	r4,r2
   3378c:	180b883a 	mov	r5,r3
   33790:	00308a40 	call	308a4 <__umoddi3>
   33794:	1009883a 	mov	r4,r2
   33798:	180b883a 	mov	r5,r3
   3379c:	2005883a 	mov	r2,r4
   337a0:	2807883a 	mov	r3,r5
   */

  if (tick_rate)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
   337a4:	a085883a 	add	r2,r20,r2
   337a8:	1007883a 	mov	r3,r2
   337ac:	e0bff917 	ldw	r2,-28(fp)
   337b0:	10c00115 	stw	r3,4(r2)
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
   337b4:	00001406 	br	33808 <gettimeofday+0x14c>
      if (ptimeval->tv_sec <= 0)
   337b8:	e0bff917 	ldw	r2,-28(fp)
   337bc:	10800017 	ldw	r2,0(r2)
   337c0:	00800516 	blt	zero,r2,337d8 <gettimeofday+0x11c>
      {
          ptimeval->tv_sec = 0;
   337c4:	e0bff917 	ldw	r2,-28(fp)
   337c8:	10000015 	stw	zero,0(r2)
          ptimeval->tv_usec = 0;
   337cc:	e0bff917 	ldw	r2,-28(fp)
   337d0:	10000115 	stw	zero,4(r2)
          break;
   337d4:	00000f06 	br	33814 <gettimeofday+0x158>
      }
      else
      {
          ptimeval->tv_sec--;
   337d8:	e0bff917 	ldw	r2,-28(fp)
   337dc:	10800017 	ldw	r2,0(r2)
   337e0:	10ffffc4 	addi	r3,r2,-1
   337e4:	e0bff917 	ldw	r2,-28(fp)
   337e8:	10c00015 	stw	r3,0(r2)
          ptimeval->tv_usec += ALT_US;
   337ec:	e0bff917 	ldw	r2,-28(fp)
   337f0:	10c00117 	ldw	r3,4(r2)
   337f4:	008003f4 	movhi	r2,15
   337f8:	10909004 	addi	r2,r2,16960
   337fc:	1887883a 	add	r3,r3,r2
   33800:	e0bff917 	ldw	r2,-28(fp)
   33804:	10c00115 	stw	r3,4(r2)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
   33808:	e0bff917 	ldw	r2,-28(fp)
   3380c:	10800117 	ldw	r2,4(r2)
   33810:	103fe916 	blt	r2,zero,337b8 <__alt_mem_sdram_controller_0+0xc00337b8>
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
   33814:	00000c06 	br	33848 <gettimeofday+0x18c>
      ptimeval->tv_sec++;
   33818:	e0bff917 	ldw	r2,-28(fp)
   3381c:	10800017 	ldw	r2,0(r2)
   33820:	10c00044 	addi	r3,r2,1
   33824:	e0bff917 	ldw	r2,-28(fp)
   33828:	10c00015 	stw	r3,0(r2)
      ptimeval->tv_usec -= ALT_US;
   3382c:	e0bff917 	ldw	r2,-28(fp)
   33830:	10c00117 	ldw	r3,4(r2)
   33834:	00bffc74 	movhi	r2,65521
   33838:	10af7004 	addi	r2,r2,-16960
   3383c:	1887883a 	add	r3,r3,r2
   33840:	e0bff917 	ldw	r2,-28(fp)
   33844:	10c00115 	stw	r3,4(r2)
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
   33848:	e0bff917 	ldw	r2,-28(fp)
   3384c:	10c00117 	ldw	r3,4(r2)
   33850:	008003f4 	movhi	r2,15
   33854:	10908fc4 	addi	r2,r2,16959
   33858:	10ffef16 	blt	r2,r3,33818 <__alt_mem_sdram_controller_0+0xc0033818>
      ptimeval->tv_sec++;
      ptimeval->tv_usec -= ALT_US;
    }
      
    if (ptimezone)
   3385c:	e0bff617 	ldw	r2,-40(fp)
   33860:	10000626 	beq	r2,zero,3387c <gettimeofday+0x1c0>
    { 
      ptimezone->tz_minuteswest = alt_timezone.tz_minuteswest;
   33864:	d0e6d317 	ldw	r3,-25780(gp)
   33868:	e0bff617 	ldw	r2,-40(fp)
   3386c:	10c00015 	stw	r3,0(r2)
      ptimezone->tz_dsttime     = alt_timezone.tz_dsttime;
   33870:	d0e6d417 	ldw	r3,-25776(gp)
   33874:	e0bff617 	ldw	r2,-40(fp)
   33878:	10c00115 	stw	r3,4(r2)
    }

    return 0;
   3387c:	0005883a 	mov	r2,zero
   33880:	00000106 	br	33888 <gettimeofday+0x1cc>
  }

  return -ENOTSUP;
   33884:	00bfde84 	movi	r2,-134
}
   33888:	e6fffb04 	addi	sp,fp,-20
   3388c:	dfc00617 	ldw	ra,24(sp)
   33890:	df000517 	ldw	fp,20(sp)
   33894:	dd000417 	ldw	r20,16(sp)
   33898:	dcc00317 	ldw	r19,12(sp)
   3389c:	dc800217 	ldw	r18,8(sp)
   338a0:	dc400117 	ldw	r17,4(sp)
   338a4:	dc000017 	ldw	r16,0(sp)
   338a8:	dec00704 	addi	sp,sp,28
   338ac:	f800283a 	ret

000338b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   338b0:	defffe04 	addi	sp,sp,-8
   338b4:	dfc00115 	stw	ra,4(sp)
   338b8:	df000015 	stw	fp,0(sp)
   338bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   338c0:	d0a00b17 	ldw	r2,-32724(gp)
   338c4:	10000326 	beq	r2,zero,338d4 <alt_get_errno+0x24>
   338c8:	d0a00b17 	ldw	r2,-32724(gp)
   338cc:	103ee83a 	callr	r2
   338d0:	00000106 	br	338d8 <alt_get_errno+0x28>
   338d4:	d0a6cc04 	addi	r2,gp,-25808
}
   338d8:	e037883a 	mov	sp,fp
   338dc:	dfc00117 	ldw	ra,4(sp)
   338e0:	df000017 	ldw	fp,0(sp)
   338e4:	dec00204 	addi	sp,sp,8
   338e8:	f800283a 	ret

000338ec <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   338ec:	deffed04 	addi	sp,sp,-76
   338f0:	dfc01215 	stw	ra,72(sp)
   338f4:	df001115 	stw	fp,68(sp)
   338f8:	df001104 	addi	fp,sp,68
   338fc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   33900:	e0bfff17 	ldw	r2,-4(fp)
   33904:	10000616 	blt	r2,zero,33920 <isatty+0x34>
   33908:	e0bfff17 	ldw	r2,-4(fp)
   3390c:	10c00324 	muli	r3,r2,12
   33910:	008000f4 	movhi	r2,3
   33914:	109bc404 	addi	r2,r2,28432
   33918:	1885883a 	add	r2,r3,r2
   3391c:	00000106 	br	33924 <isatty+0x38>
   33920:	0005883a 	mov	r2,zero
   33924:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   33928:	e0bfef17 	ldw	r2,-68(fp)
   3392c:	10000e26 	beq	r2,zero,33968 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   33930:	e0bfef17 	ldw	r2,-68(fp)
   33934:	10800017 	ldw	r2,0(r2)
   33938:	10800817 	ldw	r2,32(r2)
   3393c:	1000021e 	bne	r2,zero,33948 <isatty+0x5c>
    {
      return 1;
   33940:	00800044 	movi	r2,1
   33944:	00000d06 	br	3397c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   33948:	e0bff004 	addi	r2,fp,-64
   3394c:	100b883a 	mov	r5,r2
   33950:	e13fff17 	ldw	r4,-4(fp)
   33954:	00335ec0 	call	335ec <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   33958:	e0bff117 	ldw	r2,-60(fp)
   3395c:	10880020 	cmpeqi	r2,r2,8192
   33960:	10803fcc 	andi	r2,r2,255
   33964:	00000506 	br	3397c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   33968:	00338b00 	call	338b0 <alt_get_errno>
   3396c:	1007883a 	mov	r3,r2
   33970:	00801444 	movi	r2,81
   33974:	18800015 	stw	r2,0(r3)
    return 0;
   33978:	0005883a 	mov	r2,zero
  }
}
   3397c:	e037883a 	mov	sp,fp
   33980:	dfc00117 	ldw	ra,4(sp)
   33984:	df000017 	ldw	fp,0(sp)
   33988:	dec00204 	addi	sp,sp,8
   3398c:	f800283a 	ret

00033990 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   33990:	defffe04 	addi	sp,sp,-8
   33994:	dfc00115 	stw	ra,4(sp)
   33998:	df000015 	stw	fp,0(sp)
   3399c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   339a0:	d0a00b17 	ldw	r2,-32724(gp)
   339a4:	10000326 	beq	r2,zero,339b4 <alt_get_errno+0x24>
   339a8:	d0a00b17 	ldw	r2,-32724(gp)
   339ac:	103ee83a 	callr	r2
   339b0:	00000106 	br	339b8 <alt_get_errno+0x28>
   339b4:	d0a6cc04 	addi	r2,gp,-25808
}
   339b8:	e037883a 	mov	sp,fp
   339bc:	dfc00117 	ldw	ra,4(sp)
   339c0:	df000017 	ldw	fp,0(sp)
   339c4:	dec00204 	addi	sp,sp,8
   339c8:	f800283a 	ret

000339cc <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   339cc:	defffb04 	addi	sp,sp,-20
   339d0:	dfc00415 	stw	ra,16(sp)
   339d4:	df000315 	stw	fp,12(sp)
   339d8:	df000304 	addi	fp,sp,12
   339dc:	e13ffe15 	stw	r4,-8(fp)
   339e0:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
   339e4:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
   339e8:	e0bffe17 	ldw	r2,-8(fp)
   339ec:	00802f16 	blt	zero,r2,33aac <kill+0xe0>
  {
    switch (sig)
   339f0:	e0bfff17 	ldw	r2,-4(fp)
   339f4:	10800828 	cmpgeui	r2,r2,32
   339f8:	1000291e 	bne	r2,zero,33aa0 <kill+0xd4>
   339fc:	e0bfff17 	ldw	r2,-4(fp)
   33a00:	100690ba 	slli	r3,r2,2
   33a04:	008000f4 	movhi	r2,3
   33a08:	108e8604 	addi	r2,r2,14872
   33a0c:	1885883a 	add	r2,r3,r2
   33a10:	10800017 	ldw	r2,0(r2)
   33a14:	1000683a 	jmp	r2
   33a18:	00033ac0 	call	33ac <__alt_mem_onchip_memory2_0-0x1cc54>
   33a1c:	00033aa0 	cmpeqi	zero,zero,3306
   33a20:	00033aa0 	cmpeqi	zero,zero,3306
   33a24:	00033a98 	cmpnei	zero,zero,3306
   33a28:	00033a98 	cmpnei	zero,zero,3306
   33a2c:	00033a98 	cmpnei	zero,zero,3306
   33a30:	00033a98 	cmpnei	zero,zero,3306
   33a34:	00033aa0 	cmpeqi	zero,zero,3306
   33a38:	00033a98 	cmpnei	zero,zero,3306
   33a3c:	00033a98 	cmpnei	zero,zero,3306
   33a40:	00033a98 	cmpnei	zero,zero,3306
   33a44:	00033a98 	cmpnei	zero,zero,3306
   33a48:	00033a98 	cmpnei	zero,zero,3306
   33a4c:	00033a98 	cmpnei	zero,zero,3306
   33a50:	00033a98 	cmpnei	zero,zero,3306
   33a54:	00033a98 	cmpnei	zero,zero,3306
   33a58:	00033ac0 	call	33ac <__alt_mem_onchip_memory2_0-0x1cc54>
   33a5c:	00033aa0 	cmpeqi	zero,zero,3306
   33a60:	00033aa0 	cmpeqi	zero,zero,3306
   33a64:	00033aa0 	cmpeqi	zero,zero,3306
   33a68:	00033ac0 	call	33ac <__alt_mem_onchip_memory2_0-0x1cc54>
   33a6c:	00033aa0 	cmpeqi	zero,zero,3306
   33a70:	00033aa0 	cmpeqi	zero,zero,3306
   33a74:	00033a98 	cmpnei	zero,zero,3306
   33a78:	00033a98 	cmpnei	zero,zero,3306
   33a7c:	00033a98 	cmpnei	zero,zero,3306
   33a80:	00033a98 	cmpnei	zero,zero,3306
   33a84:	00033a98 	cmpnei	zero,zero,3306
   33a88:	00033aa0 	cmpeqi	zero,zero,3306
   33a8c:	00033aa0 	cmpeqi	zero,zero,3306
   33a90:	00033a98 	cmpnei	zero,zero,3306
   33a94:	00033a98 	cmpnei	zero,zero,3306
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   33a98:	0009883a 	mov	r4,zero
   33a9c:	003357c0 	call	3357c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   33aa0:	00800584 	movi	r2,22
   33aa4:	e0bffd15 	stw	r2,-12(fp)
   33aa8:	00000606 	br	33ac4 <kill+0xf8>
    }
  }

  else if (pid > 0)
   33aac:	e0bffe17 	ldw	r2,-8(fp)
   33ab0:	0080040e 	bge	zero,r2,33ac4 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   33ab4:	008000c4 	movi	r2,3
   33ab8:	e0bffd15 	stw	r2,-12(fp)
   33abc:	00000106 	br	33ac4 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
   33ac0:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
   33ac4:	e0bffd17 	ldw	r2,-12(fp)
   33ac8:	10000626 	beq	r2,zero,33ae4 <kill+0x118>
  {
    ALT_ERRNO = status;
   33acc:	00339900 	call	33990 <alt_get_errno>
   33ad0:	1007883a 	mov	r3,r2
   33ad4:	e0bffd17 	ldw	r2,-12(fp)
   33ad8:	18800015 	stw	r2,0(r3)
    return -1;
   33adc:	00bfffc4 	movi	r2,-1
   33ae0:	00000106 	br	33ae8 <kill+0x11c>
  }

  return 0;
   33ae4:	0005883a 	mov	r2,zero
}
   33ae8:	e037883a 	mov	sp,fp
   33aec:	dfc00117 	ldw	ra,4(sp)
   33af0:	df000017 	ldw	fp,0(sp)
   33af4:	dec00204 	addi	sp,sp,8
   33af8:	f800283a 	ret

00033afc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   33afc:	defffc04 	addi	sp,sp,-16
   33b00:	df000315 	stw	fp,12(sp)
   33b04:	df000304 	addi	fp,sp,12
   33b08:	e13ffd15 	stw	r4,-12(fp)
   33b0c:	e17ffe15 	stw	r5,-8(fp)
   33b10:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   33b14:	e0fffe17 	ldw	r3,-8(fp)
   33b18:	e0bffd17 	ldw	r2,-12(fp)
   33b1c:	18800c26 	beq	r3,r2,33b50 <alt_load_section+0x54>
  {
    while( to != end )
   33b20:	00000806 	br	33b44 <alt_load_section+0x48>
    {
      *to++ = *from++;
   33b24:	e0bffe17 	ldw	r2,-8(fp)
   33b28:	10c00104 	addi	r3,r2,4
   33b2c:	e0fffe15 	stw	r3,-8(fp)
   33b30:	e0fffd17 	ldw	r3,-12(fp)
   33b34:	19000104 	addi	r4,r3,4
   33b38:	e13ffd15 	stw	r4,-12(fp)
   33b3c:	18c00017 	ldw	r3,0(r3)
   33b40:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   33b44:	e0fffe17 	ldw	r3,-8(fp)
   33b48:	e0bfff17 	ldw	r2,-4(fp)
   33b4c:	18bff51e 	bne	r3,r2,33b24 <__alt_mem_sdram_controller_0+0xc0033b24>
    {
      *to++ = *from++;
    }
  }
}
   33b50:	0001883a 	nop
   33b54:	e037883a 	mov	sp,fp
   33b58:	df000017 	ldw	fp,0(sp)
   33b5c:	dec00104 	addi	sp,sp,4
   33b60:	f800283a 	ret

00033b64 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   33b64:	defffe04 	addi	sp,sp,-8
   33b68:	dfc00115 	stw	ra,4(sp)
   33b6c:	df000015 	stw	fp,0(sp)
   33b70:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   33b74:	01800134 	movhi	r6,4
   33b78:	31a04c04 	addi	r6,r6,-32464
   33b7c:	014000f4 	movhi	r5,3
   33b80:	29599104 	addi	r5,r5,26180
   33b84:	01000134 	movhi	r4,4
   33b88:	21204c04 	addi	r4,r4,-32464
   33b8c:	0033afc0 	call	33afc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   33b90:	018000b4 	movhi	r6,2
   33b94:	31809104 	addi	r6,r6,580
   33b98:	014000b4 	movhi	r5,2
   33b9c:	29400804 	addi	r5,r5,32
   33ba0:	010000b4 	movhi	r4,2
   33ba4:	21000804 	addi	r4,r4,32
   33ba8:	0033afc0 	call	33afc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   33bac:	018000f4 	movhi	r6,3
   33bb0:	31999104 	addi	r6,r6,26180
   33bb4:	014000f4 	movhi	r5,3
   33bb8:	2957fc04 	addi	r5,r5,24560
   33bbc:	010000f4 	movhi	r4,3
   33bc0:	2117fc04 	addi	r4,r4,24560
   33bc4:	0033afc0 	call	33afc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   33bc8:	00353080 	call	35308 <alt_dcache_flush_all>
  alt_icache_flush_all();
   33bcc:	003572c0 	call	3572c <alt_icache_flush_all>
}
   33bd0:	0001883a 	nop
   33bd4:	e037883a 	mov	sp,fp
   33bd8:	dfc00117 	ldw	ra,4(sp)
   33bdc:	df000017 	ldw	fp,0(sp)
   33be0:	dec00204 	addi	sp,sp,8
   33be4:	f800283a 	ret

00033be8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   33be8:	defffe04 	addi	sp,sp,-8
   33bec:	dfc00115 	stw	ra,4(sp)
   33bf0:	df000015 	stw	fp,0(sp)
   33bf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   33bf8:	d0a00b17 	ldw	r2,-32724(gp)
   33bfc:	10000326 	beq	r2,zero,33c0c <alt_get_errno+0x24>
   33c00:	d0a00b17 	ldw	r2,-32724(gp)
   33c04:	103ee83a 	callr	r2
   33c08:	00000106 	br	33c10 <alt_get_errno+0x28>
   33c0c:	d0a6cc04 	addi	r2,gp,-25808
}
   33c10:	e037883a 	mov	sp,fp
   33c14:	dfc00117 	ldw	ra,4(sp)
   33c18:	df000017 	ldw	fp,0(sp)
   33c1c:	dec00204 	addi	sp,sp,8
   33c20:	f800283a 	ret

00033c24 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   33c24:	defff904 	addi	sp,sp,-28
   33c28:	dfc00615 	stw	ra,24(sp)
   33c2c:	df000515 	stw	fp,20(sp)
   33c30:	df000504 	addi	fp,sp,20
   33c34:	e13ffd15 	stw	r4,-12(fp)
   33c38:	e17ffe15 	stw	r5,-8(fp)
   33c3c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   33c40:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   33c44:	e0bffd17 	ldw	r2,-12(fp)
   33c48:	10000616 	blt	r2,zero,33c64 <lseek+0x40>
   33c4c:	e0bffd17 	ldw	r2,-12(fp)
   33c50:	10c00324 	muli	r3,r2,12
   33c54:	008000f4 	movhi	r2,3
   33c58:	109bc404 	addi	r2,r2,28432
   33c5c:	1885883a 	add	r2,r3,r2
   33c60:	00000106 	br	33c68 <lseek+0x44>
   33c64:	0005883a 	mov	r2,zero
   33c68:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   33c6c:	e0bffc17 	ldw	r2,-16(fp)
   33c70:	10001026 	beq	r2,zero,33cb4 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   33c74:	e0bffc17 	ldw	r2,-16(fp)
   33c78:	10800017 	ldw	r2,0(r2)
   33c7c:	10800717 	ldw	r2,28(r2)
   33c80:	10000926 	beq	r2,zero,33ca8 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   33c84:	e0bffc17 	ldw	r2,-16(fp)
   33c88:	10800017 	ldw	r2,0(r2)
   33c8c:	10800717 	ldw	r2,28(r2)
   33c90:	e1bfff17 	ldw	r6,-4(fp)
   33c94:	e17ffe17 	ldw	r5,-8(fp)
   33c98:	e13ffc17 	ldw	r4,-16(fp)
   33c9c:	103ee83a 	callr	r2
   33ca0:	e0bffb15 	stw	r2,-20(fp)
   33ca4:	00000506 	br	33cbc <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   33ca8:	00bfde84 	movi	r2,-134
   33cac:	e0bffb15 	stw	r2,-20(fp)
   33cb0:	00000206 	br	33cbc <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   33cb4:	00bfebc4 	movi	r2,-81
   33cb8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   33cbc:	e0bffb17 	ldw	r2,-20(fp)
   33cc0:	1000070e 	bge	r2,zero,33ce0 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   33cc4:	0033be80 	call	33be8 <alt_get_errno>
   33cc8:	1007883a 	mov	r3,r2
   33ccc:	e0bffb17 	ldw	r2,-20(fp)
   33cd0:	0085c83a 	sub	r2,zero,r2
   33cd4:	18800015 	stw	r2,0(r3)
    rc = -1;
   33cd8:	00bfffc4 	movi	r2,-1
   33cdc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   33ce0:	e0bffb17 	ldw	r2,-20(fp)
}
   33ce4:	e037883a 	mov	sp,fp
   33ce8:	dfc00117 	ldw	ra,4(sp)
   33cec:	df000017 	ldw	fp,0(sp)
   33cf0:	dec00204 	addi	sp,sp,8
   33cf4:	f800283a 	ret

00033cf8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   33cf8:	defffd04 	addi	sp,sp,-12
   33cfc:	dfc00215 	stw	ra,8(sp)
   33d00:	df000115 	stw	fp,4(sp)
   33d04:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   33d08:	0009883a 	mov	r4,zero
   33d0c:	00345980 	call	34598 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   33d10:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   33d14:	00345d00 	call	345d0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   33d18:	018000f4 	movhi	r6,3
   33d1c:	31998704 	addi	r6,r6,26140
   33d20:	014000f4 	movhi	r5,3
   33d24:	29598704 	addi	r5,r5,26140
   33d28:	010000f4 	movhi	r4,3
   33d2c:	21198704 	addi	r4,r4,26140
   33d30:	0035ac40 	call	35ac4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   33d34:	00354300 	call	35430 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   33d38:	010000f4 	movhi	r4,3
   33d3c:	21152404 	addi	r4,r4,21648
   33d40:	0035c900 	call	35c90 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   33d44:	d0a6d717 	ldw	r2,-25764(gp)
   33d48:	d0e6d817 	ldw	r3,-25760(gp)
   33d4c:	d126d917 	ldw	r4,-25756(gp)
   33d50:	200d883a 	mov	r6,r4
   33d54:	180b883a 	mov	r5,r3
   33d58:	1009883a 	mov	r4,r2
   33d5c:	00224c40 	call	224c4 <main>
   33d60:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   33d64:	01000044 	movi	r4,1
   33d68:	00334800 	call	33480 <close>
  exit (result);
   33d6c:	e13fff17 	ldw	r4,-4(fp)
   33d70:	0035ca40 	call	35ca4 <exit>

00033d74 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   33d74:	defffe04 	addi	sp,sp,-8
   33d78:	df000115 	stw	fp,4(sp)
   33d7c:	df000104 	addi	fp,sp,4
   33d80:	e13fff15 	stw	r4,-4(fp)
}
   33d84:	0001883a 	nop
   33d88:	e037883a 	mov	sp,fp
   33d8c:	df000017 	ldw	fp,0(sp)
   33d90:	dec00104 	addi	sp,sp,4
   33d94:	f800283a 	ret

00033d98 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   33d98:	defffe04 	addi	sp,sp,-8
   33d9c:	df000115 	stw	fp,4(sp)
   33da0:	df000104 	addi	fp,sp,4
   33da4:	e13fff15 	stw	r4,-4(fp)
}
   33da8:	0001883a 	nop
   33dac:	e037883a 	mov	sp,fp
   33db0:	df000017 	ldw	fp,0(sp)
   33db4:	dec00104 	addi	sp,sp,4
   33db8:	f800283a 	ret

00033dbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   33dbc:	defffe04 	addi	sp,sp,-8
   33dc0:	dfc00115 	stw	ra,4(sp)
   33dc4:	df000015 	stw	fp,0(sp)
   33dc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   33dcc:	d0a00b17 	ldw	r2,-32724(gp)
   33dd0:	10000326 	beq	r2,zero,33de0 <alt_get_errno+0x24>
   33dd4:	d0a00b17 	ldw	r2,-32724(gp)
   33dd8:	103ee83a 	callr	r2
   33ddc:	00000106 	br	33de4 <alt_get_errno+0x28>
   33de0:	d0a6cc04 	addi	r2,gp,-25808
}
   33de4:	e037883a 	mov	sp,fp
   33de8:	dfc00117 	ldw	ra,4(sp)
   33dec:	df000017 	ldw	fp,0(sp)
   33df0:	dec00204 	addi	sp,sp,8
   33df4:	f800283a 	ret

00033df8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   33df8:	defffd04 	addi	sp,sp,-12
   33dfc:	df000215 	stw	fp,8(sp)
   33e00:	df000204 	addi	fp,sp,8
   33e04:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   33e08:	e0bfff17 	ldw	r2,-4(fp)
   33e0c:	10800217 	ldw	r2,8(r2)
   33e10:	10d00034 	orhi	r3,r2,16384
   33e14:	e0bfff17 	ldw	r2,-4(fp)
   33e18:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   33e1c:	e03ffe15 	stw	zero,-8(fp)
   33e20:	00001d06 	br	33e98 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   33e24:	008000f4 	movhi	r2,3
   33e28:	109bc404 	addi	r2,r2,28432
   33e2c:	e0fffe17 	ldw	r3,-8(fp)
   33e30:	18c00324 	muli	r3,r3,12
   33e34:	10c5883a 	add	r2,r2,r3
   33e38:	10c00017 	ldw	r3,0(r2)
   33e3c:	e0bfff17 	ldw	r2,-4(fp)
   33e40:	10800017 	ldw	r2,0(r2)
   33e44:	1880111e 	bne	r3,r2,33e8c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   33e48:	008000f4 	movhi	r2,3
   33e4c:	109bc404 	addi	r2,r2,28432
   33e50:	e0fffe17 	ldw	r3,-8(fp)
   33e54:	18c00324 	muli	r3,r3,12
   33e58:	10c5883a 	add	r2,r2,r3
   33e5c:	10800204 	addi	r2,r2,8
   33e60:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   33e64:	1000090e 	bge	r2,zero,33e8c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   33e68:	e0bffe17 	ldw	r2,-8(fp)
   33e6c:	10c00324 	muli	r3,r2,12
   33e70:	008000f4 	movhi	r2,3
   33e74:	109bc404 	addi	r2,r2,28432
   33e78:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   33e7c:	e0bfff17 	ldw	r2,-4(fp)
   33e80:	18800226 	beq	r3,r2,33e8c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   33e84:	00bffcc4 	movi	r2,-13
   33e88:	00000806 	br	33eac <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   33e8c:	e0bffe17 	ldw	r2,-8(fp)
   33e90:	10800044 	addi	r2,r2,1
   33e94:	e0bffe15 	stw	r2,-8(fp)
   33e98:	d0a00a17 	ldw	r2,-32728(gp)
   33e9c:	1007883a 	mov	r3,r2
   33ea0:	e0bffe17 	ldw	r2,-8(fp)
   33ea4:	18bfdf2e 	bgeu	r3,r2,33e24 <__alt_mem_sdram_controller_0+0xc0033e24>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   33ea8:	0005883a 	mov	r2,zero
}
   33eac:	e037883a 	mov	sp,fp
   33eb0:	df000017 	ldw	fp,0(sp)
   33eb4:	dec00104 	addi	sp,sp,4
   33eb8:	f800283a 	ret

00033ebc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   33ebc:	defff604 	addi	sp,sp,-40
   33ec0:	dfc00915 	stw	ra,36(sp)
   33ec4:	df000815 	stw	fp,32(sp)
   33ec8:	df000804 	addi	fp,sp,32
   33ecc:	e13ffd15 	stw	r4,-12(fp)
   33ed0:	e17ffe15 	stw	r5,-8(fp)
   33ed4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   33ed8:	00bfffc4 	movi	r2,-1
   33edc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   33ee0:	00bffb44 	movi	r2,-19
   33ee4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   33ee8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   33eec:	d1600804 	addi	r5,gp,-32736
   33ef0:	e13ffd17 	ldw	r4,-12(fp)
   33ef4:	00354f00 	call	354f0 <alt_find_dev>
   33ef8:	e0bff815 	stw	r2,-32(fp)
   33efc:	e0bff817 	ldw	r2,-32(fp)
   33f00:	1000051e 	bne	r2,zero,33f18 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   33f04:	e13ffd17 	ldw	r4,-12(fp)
   33f08:	00355800 	call	35580 <alt_find_file>
   33f0c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   33f10:	00800044 	movi	r2,1
   33f14:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   33f18:	e0bff817 	ldw	r2,-32(fp)
   33f1c:	10002926 	beq	r2,zero,33fc4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   33f20:	e13ff817 	ldw	r4,-32(fp)
   33f24:	00356880 	call	35688 <alt_get_fd>
   33f28:	e0bff915 	stw	r2,-28(fp)
   33f2c:	e0bff917 	ldw	r2,-28(fp)
   33f30:	1000030e 	bge	r2,zero,33f40 <open+0x84>
    {
      status = index;
   33f34:	e0bff917 	ldw	r2,-28(fp)
   33f38:	e0bffa15 	stw	r2,-24(fp)
   33f3c:	00002306 	br	33fcc <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   33f40:	e0bff917 	ldw	r2,-28(fp)
   33f44:	10c00324 	muli	r3,r2,12
   33f48:	008000f4 	movhi	r2,3
   33f4c:	109bc404 	addi	r2,r2,28432
   33f50:	1885883a 	add	r2,r3,r2
   33f54:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   33f58:	e0fffe17 	ldw	r3,-8(fp)
   33f5c:	00900034 	movhi	r2,16384
   33f60:	10bfffc4 	addi	r2,r2,-1
   33f64:	1886703a 	and	r3,r3,r2
   33f68:	e0bffc17 	ldw	r2,-16(fp)
   33f6c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   33f70:	e0bffb17 	ldw	r2,-20(fp)
   33f74:	1000051e 	bne	r2,zero,33f8c <open+0xd0>
   33f78:	e13ffc17 	ldw	r4,-16(fp)
   33f7c:	0033df80 	call	33df8 <alt_file_locked>
   33f80:	e0bffa15 	stw	r2,-24(fp)
   33f84:	e0bffa17 	ldw	r2,-24(fp)
   33f88:	10001016 	blt	r2,zero,33fcc <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   33f8c:	e0bff817 	ldw	r2,-32(fp)
   33f90:	10800317 	ldw	r2,12(r2)
   33f94:	10000826 	beq	r2,zero,33fb8 <open+0xfc>
   33f98:	e0bff817 	ldw	r2,-32(fp)
   33f9c:	10800317 	ldw	r2,12(r2)
   33fa0:	e1ffff17 	ldw	r7,-4(fp)
   33fa4:	e1bffe17 	ldw	r6,-8(fp)
   33fa8:	e17ffd17 	ldw	r5,-12(fp)
   33fac:	e13ffc17 	ldw	r4,-16(fp)
   33fb0:	103ee83a 	callr	r2
   33fb4:	00000106 	br	33fbc <open+0x100>
   33fb8:	0005883a 	mov	r2,zero
   33fbc:	e0bffa15 	stw	r2,-24(fp)
   33fc0:	00000206 	br	33fcc <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   33fc4:	00bffb44 	movi	r2,-19
   33fc8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   33fcc:	e0bffa17 	ldw	r2,-24(fp)
   33fd0:	1000090e 	bge	r2,zero,33ff8 <open+0x13c>
  {
    alt_release_fd (index);  
   33fd4:	e13ff917 	ldw	r4,-28(fp)
   33fd8:	00341480 	call	34148 <alt_release_fd>
    ALT_ERRNO = -status;
   33fdc:	0033dbc0 	call	33dbc <alt_get_errno>
   33fe0:	1007883a 	mov	r3,r2
   33fe4:	e0bffa17 	ldw	r2,-24(fp)
   33fe8:	0085c83a 	sub	r2,zero,r2
   33fec:	18800015 	stw	r2,0(r3)
    return -1;
   33ff0:	00bfffc4 	movi	r2,-1
   33ff4:	00000106 	br	33ffc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   33ff8:	e0bff917 	ldw	r2,-28(fp)
}
   33ffc:	e037883a 	mov	sp,fp
   34000:	dfc00117 	ldw	ra,4(sp)
   34004:	df000017 	ldw	fp,0(sp)
   34008:	dec00204 	addi	sp,sp,8
   3400c:	f800283a 	ret

00034010 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   34010:	defffe04 	addi	sp,sp,-8
   34014:	dfc00115 	stw	ra,4(sp)
   34018:	df000015 	stw	fp,0(sp)
   3401c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   34020:	d0a00b17 	ldw	r2,-32724(gp)
   34024:	10000326 	beq	r2,zero,34034 <alt_get_errno+0x24>
   34028:	d0a00b17 	ldw	r2,-32724(gp)
   3402c:	103ee83a 	callr	r2
   34030:	00000106 	br	34038 <alt_get_errno+0x28>
   34034:	d0a6cc04 	addi	r2,gp,-25808
}
   34038:	e037883a 	mov	sp,fp
   3403c:	dfc00117 	ldw	ra,4(sp)
   34040:	df000017 	ldw	fp,0(sp)
   34044:	dec00204 	addi	sp,sp,8
   34048:	f800283a 	ret

0003404c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   3404c:	defff904 	addi	sp,sp,-28
   34050:	dfc00615 	stw	ra,24(sp)
   34054:	df000515 	stw	fp,20(sp)
   34058:	df000504 	addi	fp,sp,20
   3405c:	e13ffd15 	stw	r4,-12(fp)
   34060:	e17ffe15 	stw	r5,-8(fp)
   34064:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   34068:	e0bffd17 	ldw	r2,-12(fp)
   3406c:	10000616 	blt	r2,zero,34088 <read+0x3c>
   34070:	e0bffd17 	ldw	r2,-12(fp)
   34074:	10c00324 	muli	r3,r2,12
   34078:	008000f4 	movhi	r2,3
   3407c:	109bc404 	addi	r2,r2,28432
   34080:	1885883a 	add	r2,r3,r2
   34084:	00000106 	br	3408c <read+0x40>
   34088:	0005883a 	mov	r2,zero
   3408c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   34090:	e0bffb17 	ldw	r2,-20(fp)
   34094:	10002226 	beq	r2,zero,34120 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   34098:	e0bffb17 	ldw	r2,-20(fp)
   3409c:	10800217 	ldw	r2,8(r2)
   340a0:	108000cc 	andi	r2,r2,3
   340a4:	10800060 	cmpeqi	r2,r2,1
   340a8:	1000181e 	bne	r2,zero,3410c <read+0xc0>
        (fd->dev->read))
   340ac:	e0bffb17 	ldw	r2,-20(fp)
   340b0:	10800017 	ldw	r2,0(r2)
   340b4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   340b8:	10001426 	beq	r2,zero,3410c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   340bc:	e0bffb17 	ldw	r2,-20(fp)
   340c0:	10800017 	ldw	r2,0(r2)
   340c4:	10800517 	ldw	r2,20(r2)
   340c8:	e0ffff17 	ldw	r3,-4(fp)
   340cc:	180d883a 	mov	r6,r3
   340d0:	e17ffe17 	ldw	r5,-8(fp)
   340d4:	e13ffb17 	ldw	r4,-20(fp)
   340d8:	103ee83a 	callr	r2
   340dc:	e0bffc15 	stw	r2,-16(fp)
   340e0:	e0bffc17 	ldw	r2,-16(fp)
   340e4:	1000070e 	bge	r2,zero,34104 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   340e8:	00340100 	call	34010 <alt_get_errno>
   340ec:	1007883a 	mov	r3,r2
   340f0:	e0bffc17 	ldw	r2,-16(fp)
   340f4:	0085c83a 	sub	r2,zero,r2
   340f8:	18800015 	stw	r2,0(r3)
          return -1;
   340fc:	00bfffc4 	movi	r2,-1
   34100:	00000c06 	br	34134 <read+0xe8>
        }
        return rval;
   34104:	e0bffc17 	ldw	r2,-16(fp)
   34108:	00000a06 	br	34134 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   3410c:	00340100 	call	34010 <alt_get_errno>
   34110:	1007883a 	mov	r3,r2
   34114:	00800344 	movi	r2,13
   34118:	18800015 	stw	r2,0(r3)
   3411c:	00000406 	br	34130 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   34120:	00340100 	call	34010 <alt_get_errno>
   34124:	1007883a 	mov	r3,r2
   34128:	00801444 	movi	r2,81
   3412c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   34130:	00bfffc4 	movi	r2,-1
}
   34134:	e037883a 	mov	sp,fp
   34138:	dfc00117 	ldw	ra,4(sp)
   3413c:	df000017 	ldw	fp,0(sp)
   34140:	dec00204 	addi	sp,sp,8
   34144:	f800283a 	ret

00034148 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   34148:	defffe04 	addi	sp,sp,-8
   3414c:	df000115 	stw	fp,4(sp)
   34150:	df000104 	addi	fp,sp,4
   34154:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   34158:	e0bfff17 	ldw	r2,-4(fp)
   3415c:	108000d0 	cmplti	r2,r2,3
   34160:	10000d1e 	bne	r2,zero,34198 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   34164:	008000f4 	movhi	r2,3
   34168:	109bc404 	addi	r2,r2,28432
   3416c:	e0ffff17 	ldw	r3,-4(fp)
   34170:	18c00324 	muli	r3,r3,12
   34174:	10c5883a 	add	r2,r2,r3
   34178:	10800204 	addi	r2,r2,8
   3417c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   34180:	008000f4 	movhi	r2,3
   34184:	109bc404 	addi	r2,r2,28432
   34188:	e0ffff17 	ldw	r3,-4(fp)
   3418c:	18c00324 	muli	r3,r3,12
   34190:	10c5883a 	add	r2,r2,r3
   34194:	10000015 	stw	zero,0(r2)
  }
}
   34198:	0001883a 	nop
   3419c:	e037883a 	mov	sp,fp
   341a0:	df000017 	ldw	fp,0(sp)
   341a4:	dec00104 	addi	sp,sp,4
   341a8:	f800283a 	ret

000341ac <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   341ac:	defff904 	addi	sp,sp,-28
   341b0:	df000615 	stw	fp,24(sp)
   341b4:	df000604 	addi	fp,sp,24
   341b8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   341bc:	0005303a 	rdctl	r2,status
   341c0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   341c4:	e0fffe17 	ldw	r3,-8(fp)
   341c8:	00bfff84 	movi	r2,-2
   341cc:	1884703a 	and	r2,r3,r2
   341d0:	1001703a 	wrctl	status,r2
  
  return context;
   341d4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   341d8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   341dc:	d0a00c17 	ldw	r2,-32720(gp)
   341e0:	10c000c4 	addi	r3,r2,3
   341e4:	00bfff04 	movi	r2,-4
   341e8:	1884703a 	and	r2,r3,r2
   341ec:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   341f0:	d0e00c17 	ldw	r3,-32720(gp)
   341f4:	e0bfff17 	ldw	r2,-4(fp)
   341f8:	1887883a 	add	r3,r3,r2
   341fc:	00800134 	movhi	r2,4
   34200:	10800004 	addi	r2,r2,0
   34204:	10c0062e 	bgeu	r2,r3,34220 <sbrk+0x74>
   34208:	e0bffb17 	ldw	r2,-20(fp)
   3420c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   34210:	e0bffa17 	ldw	r2,-24(fp)
   34214:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   34218:	00bfffc4 	movi	r2,-1
   3421c:	00000b06 	br	3424c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   34220:	d0a00c17 	ldw	r2,-32720(gp)
   34224:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   34228:	d0e00c17 	ldw	r3,-32720(gp)
   3422c:	e0bfff17 	ldw	r2,-4(fp)
   34230:	1885883a 	add	r2,r3,r2
   34234:	d0a00c15 	stw	r2,-32720(gp)
   34238:	e0bffb17 	ldw	r2,-20(fp)
   3423c:	e0bffc15 	stw	r2,-16(fp)
   34240:	e0bffc17 	ldw	r2,-16(fp)
   34244:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   34248:	e0bffd17 	ldw	r2,-12(fp)
} 
   3424c:	e037883a 	mov	sp,fp
   34250:	df000017 	ldw	fp,0(sp)
   34254:	dec00104 	addi	sp,sp,4
   34258:	f800283a 	ret

0003425c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   3425c:	defffa04 	addi	sp,sp,-24
   34260:	df000515 	stw	fp,20(sp)
   34264:	df000504 	addi	fp,sp,20
   34268:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3426c:	0005303a 	rdctl	r2,status
   34270:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   34274:	e0fffc17 	ldw	r3,-16(fp)
   34278:	00bfff84 	movi	r2,-2
   3427c:	1884703a 	and	r2,r3,r2
   34280:	1001703a 	wrctl	status,r2
  
  return context;
   34284:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   34288:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   3428c:	e0bfff17 	ldw	r2,-4(fp)
   34290:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   34294:	e0bffd17 	ldw	r2,-12(fp)
   34298:	10800017 	ldw	r2,0(r2)
   3429c:	e0fffd17 	ldw	r3,-12(fp)
   342a0:	18c00117 	ldw	r3,4(r3)
   342a4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   342a8:	e0bffd17 	ldw	r2,-12(fp)
   342ac:	10800117 	ldw	r2,4(r2)
   342b0:	e0fffd17 	ldw	r3,-12(fp)
   342b4:	18c00017 	ldw	r3,0(r3)
   342b8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   342bc:	e0bffd17 	ldw	r2,-12(fp)
   342c0:	e0fffd17 	ldw	r3,-12(fp)
   342c4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   342c8:	e0bffd17 	ldw	r2,-12(fp)
   342cc:	e0fffd17 	ldw	r3,-12(fp)
   342d0:	10c00015 	stw	r3,0(r2)
   342d4:	e0bffb17 	ldw	r2,-20(fp)
   342d8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   342dc:	e0bffe17 	ldw	r2,-8(fp)
   342e0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   342e4:	0001883a 	nop
   342e8:	e037883a 	mov	sp,fp
   342ec:	df000017 	ldw	fp,0(sp)
   342f0:	dec00104 	addi	sp,sp,4
   342f4:	f800283a 	ret

000342f8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   342f8:	defffb04 	addi	sp,sp,-20
   342fc:	dfc00415 	stw	ra,16(sp)
   34300:	df000315 	stw	fp,12(sp)
   34304:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   34308:	d0a00d17 	ldw	r2,-32716(gp)
   3430c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   34310:	d0a6db17 	ldw	r2,-25748(gp)
   34314:	10800044 	addi	r2,r2,1
   34318:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   3431c:	00002e06 	br	343d8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   34320:	e0bffd17 	ldw	r2,-12(fp)
   34324:	10800017 	ldw	r2,0(r2)
   34328:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   3432c:	e0bffd17 	ldw	r2,-12(fp)
   34330:	10800403 	ldbu	r2,16(r2)
   34334:	10803fcc 	andi	r2,r2,255
   34338:	10000426 	beq	r2,zero,3434c <alt_tick+0x54>
   3433c:	d0a6db17 	ldw	r2,-25748(gp)
   34340:	1000021e 	bne	r2,zero,3434c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   34344:	e0bffd17 	ldw	r2,-12(fp)
   34348:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   3434c:	e0bffd17 	ldw	r2,-12(fp)
   34350:	10800217 	ldw	r2,8(r2)
   34354:	d0e6db17 	ldw	r3,-25748(gp)
   34358:	18801d36 	bltu	r3,r2,343d0 <alt_tick+0xd8>
   3435c:	e0bffd17 	ldw	r2,-12(fp)
   34360:	10800403 	ldbu	r2,16(r2)
   34364:	10803fcc 	andi	r2,r2,255
   34368:	1000191e 	bne	r2,zero,343d0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   3436c:	e0bffd17 	ldw	r2,-12(fp)
   34370:	10800317 	ldw	r2,12(r2)
   34374:	e0fffd17 	ldw	r3,-12(fp)
   34378:	18c00517 	ldw	r3,20(r3)
   3437c:	1809883a 	mov	r4,r3
   34380:	103ee83a 	callr	r2
   34384:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   34388:	e0bfff17 	ldw	r2,-4(fp)
   3438c:	1000031e 	bne	r2,zero,3439c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   34390:	e13ffd17 	ldw	r4,-12(fp)
   34394:	003425c0 	call	3425c <alt_alarm_stop>
   34398:	00000d06 	br	343d0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   3439c:	e0bffd17 	ldw	r2,-12(fp)
   343a0:	10c00217 	ldw	r3,8(r2)
   343a4:	e0bfff17 	ldw	r2,-4(fp)
   343a8:	1887883a 	add	r3,r3,r2
   343ac:	e0bffd17 	ldw	r2,-12(fp)
   343b0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   343b4:	e0bffd17 	ldw	r2,-12(fp)
   343b8:	10c00217 	ldw	r3,8(r2)
   343bc:	d0a6db17 	ldw	r2,-25748(gp)
   343c0:	1880032e 	bgeu	r3,r2,343d0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   343c4:	e0bffd17 	ldw	r2,-12(fp)
   343c8:	00c00044 	movi	r3,1
   343cc:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   343d0:	e0bffe17 	ldw	r2,-8(fp)
   343d4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   343d8:	e0fffd17 	ldw	r3,-12(fp)
   343dc:	d0a00d04 	addi	r2,gp,-32716
   343e0:	18bfcf1e 	bne	r3,r2,34320 <__alt_mem_sdram_controller_0+0xc0034320>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   343e4:	0001883a 	nop
}
   343e8:	0001883a 	nop
   343ec:	e037883a 	mov	sp,fp
   343f0:	dfc00117 	ldw	ra,4(sp)
   343f4:	df000017 	ldw	fp,0(sp)
   343f8:	dec00204 	addi	sp,sp,8
   343fc:	f800283a 	ret

00034400 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   34400:	defffd04 	addi	sp,sp,-12
   34404:	dfc00215 	stw	ra,8(sp)
   34408:	df000115 	stw	fp,4(sp)
   3440c:	df000104 	addi	fp,sp,4
   34410:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   34414:	e13fff17 	ldw	r4,-4(fp)
   34418:	00351b00 	call	351b0 <alt_busy_sleep>
}
   3441c:	e037883a 	mov	sp,fp
   34420:	dfc00117 	ldw	ra,4(sp)
   34424:	df000017 	ldw	fp,0(sp)
   34428:	dec00204 	addi	sp,sp,8
   3442c:	f800283a 	ret

00034430 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   34430:	defffe04 	addi	sp,sp,-8
   34434:	dfc00115 	stw	ra,4(sp)
   34438:	df000015 	stw	fp,0(sp)
   3443c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   34440:	d0a00b17 	ldw	r2,-32724(gp)
   34444:	10000326 	beq	r2,zero,34454 <alt_get_errno+0x24>
   34448:	d0a00b17 	ldw	r2,-32724(gp)
   3444c:	103ee83a 	callr	r2
   34450:	00000106 	br	34458 <alt_get_errno+0x28>
   34454:	d0a6cc04 	addi	r2,gp,-25808
}
   34458:	e037883a 	mov	sp,fp
   3445c:	dfc00117 	ldw	ra,4(sp)
   34460:	df000017 	ldw	fp,0(sp)
   34464:	dec00204 	addi	sp,sp,8
   34468:	f800283a 	ret

0003446c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   3446c:	defff904 	addi	sp,sp,-28
   34470:	dfc00615 	stw	ra,24(sp)
   34474:	df000515 	stw	fp,20(sp)
   34478:	df000504 	addi	fp,sp,20
   3447c:	e13ffd15 	stw	r4,-12(fp)
   34480:	e17ffe15 	stw	r5,-8(fp)
   34484:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   34488:	e0bffd17 	ldw	r2,-12(fp)
   3448c:	10000616 	blt	r2,zero,344a8 <write+0x3c>
   34490:	e0bffd17 	ldw	r2,-12(fp)
   34494:	10c00324 	muli	r3,r2,12
   34498:	008000f4 	movhi	r2,3
   3449c:	109bc404 	addi	r2,r2,28432
   344a0:	1885883a 	add	r2,r3,r2
   344a4:	00000106 	br	344ac <write+0x40>
   344a8:	0005883a 	mov	r2,zero
   344ac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   344b0:	e0bffb17 	ldw	r2,-20(fp)
   344b4:	10002126 	beq	r2,zero,3453c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   344b8:	e0bffb17 	ldw	r2,-20(fp)
   344bc:	10800217 	ldw	r2,8(r2)
   344c0:	108000cc 	andi	r2,r2,3
   344c4:	10001826 	beq	r2,zero,34528 <write+0xbc>
   344c8:	e0bffb17 	ldw	r2,-20(fp)
   344cc:	10800017 	ldw	r2,0(r2)
   344d0:	10800617 	ldw	r2,24(r2)
   344d4:	10001426 	beq	r2,zero,34528 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   344d8:	e0bffb17 	ldw	r2,-20(fp)
   344dc:	10800017 	ldw	r2,0(r2)
   344e0:	10800617 	ldw	r2,24(r2)
   344e4:	e0ffff17 	ldw	r3,-4(fp)
   344e8:	180d883a 	mov	r6,r3
   344ec:	e17ffe17 	ldw	r5,-8(fp)
   344f0:	e13ffb17 	ldw	r4,-20(fp)
   344f4:	103ee83a 	callr	r2
   344f8:	e0bffc15 	stw	r2,-16(fp)
   344fc:	e0bffc17 	ldw	r2,-16(fp)
   34500:	1000070e 	bge	r2,zero,34520 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   34504:	00344300 	call	34430 <alt_get_errno>
   34508:	1007883a 	mov	r3,r2
   3450c:	e0bffc17 	ldw	r2,-16(fp)
   34510:	0085c83a 	sub	r2,zero,r2
   34514:	18800015 	stw	r2,0(r3)
        return -1;
   34518:	00bfffc4 	movi	r2,-1
   3451c:	00000c06 	br	34550 <write+0xe4>
      }
      return rval;
   34520:	e0bffc17 	ldw	r2,-16(fp)
   34524:	00000a06 	br	34550 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   34528:	00344300 	call	34430 <alt_get_errno>
   3452c:	1007883a 	mov	r3,r2
   34530:	00800344 	movi	r2,13
   34534:	18800015 	stw	r2,0(r3)
   34538:	00000406 	br	3454c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   3453c:	00344300 	call	34430 <alt_get_errno>
   34540:	1007883a 	mov	r3,r2
   34544:	00801444 	movi	r2,81
   34548:	18800015 	stw	r2,0(r3)
  }
  return -1;
   3454c:	00bfffc4 	movi	r2,-1
}
   34550:	e037883a 	mov	sp,fp
   34554:	dfc00117 	ldw	ra,4(sp)
   34558:	df000017 	ldw	fp,0(sp)
   3455c:	dec00204 	addi	sp,sp,8
   34560:	f800283a 	ret

00034564 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   34564:	defffd04 	addi	sp,sp,-12
   34568:	dfc00215 	stw	ra,8(sp)
   3456c:	df000115 	stw	fp,4(sp)
   34570:	df000104 	addi	fp,sp,4
   34574:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   34578:	d1600804 	addi	r5,gp,-32736
   3457c:	e13fff17 	ldw	r4,-4(fp)
   34580:	003538c0 	call	3538c <alt_dev_llist_insert>
}
   34584:	e037883a 	mov	sp,fp
   34588:	dfc00117 	ldw	ra,4(sp)
   3458c:	df000017 	ldw	fp,0(sp)
   34590:	dec00204 	addi	sp,sp,8
   34594:	f800283a 	ret

00034598 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   34598:	defffd04 	addi	sp,sp,-12
   3459c:	dfc00215 	stw	ra,8(sp)
   345a0:	df000115 	stw	fp,4(sp)
   345a4:	df000104 	addi	fp,sp,4
   345a8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   345ac:	0035b400 	call	35b40 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   345b0:	00800044 	movi	r2,1
   345b4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   345b8:	0001883a 	nop
   345bc:	e037883a 	mov	sp,fp
   345c0:	dfc00117 	ldw	ra,4(sp)
   345c4:	df000017 	ldw	fp,0(sp)
   345c8:	dec00204 	addi	sp,sp,8
   345cc:	f800283a 	ret

000345d0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   345d0:	defffe04 	addi	sp,sp,-8
   345d4:	dfc00115 	stw	ra,4(sp)
   345d8:	df000015 	stw	fp,0(sp)
   345dc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   345e0:	000d883a 	mov	r6,zero
   345e4:	000b883a 	mov	r5,zero
   345e8:	010000f4 	movhi	r4,3
   345ec:	211c2e04 	addi	r4,r4,28856
   345f0:	00347800 	call	34780 <altera_avalon_jtag_uart_init>
   345f4:	010000f4 	movhi	r4,3
   345f8:	211c2404 	addi	r4,r4,28816
   345fc:	00345640 	call	34564 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
   34600:	0001883a 	nop
}
   34604:	0001883a 	nop
   34608:	e037883a 	mov	sp,fp
   3460c:	dfc00117 	ldw	ra,4(sp)
   34610:	df000017 	ldw	fp,0(sp)
   34614:	dec00204 	addi	sp,sp,8
   34618:	f800283a 	ret

0003461c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   3461c:	defffa04 	addi	sp,sp,-24
   34620:	dfc00515 	stw	ra,20(sp)
   34624:	df000415 	stw	fp,16(sp)
   34628:	df000404 	addi	fp,sp,16
   3462c:	e13ffd15 	stw	r4,-12(fp)
   34630:	e17ffe15 	stw	r5,-8(fp)
   34634:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   34638:	e0bffd17 	ldw	r2,-12(fp)
   3463c:	10800017 	ldw	r2,0(r2)
   34640:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   34644:	e0bffc17 	ldw	r2,-16(fp)
   34648:	10c00a04 	addi	r3,r2,40
   3464c:	e0bffd17 	ldw	r2,-12(fp)
   34650:	10800217 	ldw	r2,8(r2)
   34654:	100f883a 	mov	r7,r2
   34658:	e1bfff17 	ldw	r6,-4(fp)
   3465c:	e17ffe17 	ldw	r5,-8(fp)
   34660:	1809883a 	mov	r4,r3
   34664:	0034c440 	call	34c44 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   34668:	e037883a 	mov	sp,fp
   3466c:	dfc00117 	ldw	ra,4(sp)
   34670:	df000017 	ldw	fp,0(sp)
   34674:	dec00204 	addi	sp,sp,8
   34678:	f800283a 	ret

0003467c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   3467c:	defffa04 	addi	sp,sp,-24
   34680:	dfc00515 	stw	ra,20(sp)
   34684:	df000415 	stw	fp,16(sp)
   34688:	df000404 	addi	fp,sp,16
   3468c:	e13ffd15 	stw	r4,-12(fp)
   34690:	e17ffe15 	stw	r5,-8(fp)
   34694:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   34698:	e0bffd17 	ldw	r2,-12(fp)
   3469c:	10800017 	ldw	r2,0(r2)
   346a0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   346a4:	e0bffc17 	ldw	r2,-16(fp)
   346a8:	10c00a04 	addi	r3,r2,40
   346ac:	e0bffd17 	ldw	r2,-12(fp)
   346b0:	10800217 	ldw	r2,8(r2)
   346b4:	100f883a 	mov	r7,r2
   346b8:	e1bfff17 	ldw	r6,-4(fp)
   346bc:	e17ffe17 	ldw	r5,-8(fp)
   346c0:	1809883a 	mov	r4,r3
   346c4:	0034e600 	call	34e60 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   346c8:	e037883a 	mov	sp,fp
   346cc:	dfc00117 	ldw	ra,4(sp)
   346d0:	df000017 	ldw	fp,0(sp)
   346d4:	dec00204 	addi	sp,sp,8
   346d8:	f800283a 	ret

000346dc <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   346dc:	defffc04 	addi	sp,sp,-16
   346e0:	dfc00315 	stw	ra,12(sp)
   346e4:	df000215 	stw	fp,8(sp)
   346e8:	df000204 	addi	fp,sp,8
   346ec:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   346f0:	e0bfff17 	ldw	r2,-4(fp)
   346f4:	10800017 	ldw	r2,0(r2)
   346f8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   346fc:	e0bffe17 	ldw	r2,-8(fp)
   34700:	10c00a04 	addi	r3,r2,40
   34704:	e0bfff17 	ldw	r2,-4(fp)
   34708:	10800217 	ldw	r2,8(r2)
   3470c:	100b883a 	mov	r5,r2
   34710:	1809883a 	mov	r4,r3
   34714:	0034aec0 	call	34aec <altera_avalon_jtag_uart_close>
}
   34718:	e037883a 	mov	sp,fp
   3471c:	dfc00117 	ldw	ra,4(sp)
   34720:	df000017 	ldw	fp,0(sp)
   34724:	dec00204 	addi	sp,sp,8
   34728:	f800283a 	ret

0003472c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   3472c:	defffa04 	addi	sp,sp,-24
   34730:	dfc00515 	stw	ra,20(sp)
   34734:	df000415 	stw	fp,16(sp)
   34738:	df000404 	addi	fp,sp,16
   3473c:	e13ffd15 	stw	r4,-12(fp)
   34740:	e17ffe15 	stw	r5,-8(fp)
   34744:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   34748:	e0bffd17 	ldw	r2,-12(fp)
   3474c:	10800017 	ldw	r2,0(r2)
   34750:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   34754:	e0bffc17 	ldw	r2,-16(fp)
   34758:	10800a04 	addi	r2,r2,40
   3475c:	e1bfff17 	ldw	r6,-4(fp)
   34760:	e17ffe17 	ldw	r5,-8(fp)
   34764:	1009883a 	mov	r4,r2
   34768:	0034b540 	call	34b54 <altera_avalon_jtag_uart_ioctl>
}
   3476c:	e037883a 	mov	sp,fp
   34770:	dfc00117 	ldw	ra,4(sp)
   34774:	df000017 	ldw	fp,0(sp)
   34778:	dec00204 	addi	sp,sp,8
   3477c:	f800283a 	ret

00034780 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   34780:	defffa04 	addi	sp,sp,-24
   34784:	dfc00515 	stw	ra,20(sp)
   34788:	df000415 	stw	fp,16(sp)
   3478c:	df000404 	addi	fp,sp,16
   34790:	e13ffd15 	stw	r4,-12(fp)
   34794:	e17ffe15 	stw	r5,-8(fp)
   34798:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   3479c:	e0bffd17 	ldw	r2,-12(fp)
   347a0:	00c00044 	movi	r3,1
   347a4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   347a8:	e0bffd17 	ldw	r2,-12(fp)
   347ac:	10800017 	ldw	r2,0(r2)
   347b0:	10800104 	addi	r2,r2,4
   347b4:	1007883a 	mov	r3,r2
   347b8:	e0bffd17 	ldw	r2,-12(fp)
   347bc:	10800817 	ldw	r2,32(r2)
   347c0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   347c4:	e0bffe17 	ldw	r2,-8(fp)
   347c8:	e0ffff17 	ldw	r3,-4(fp)
   347cc:	d8000015 	stw	zero,0(sp)
   347d0:	e1fffd17 	ldw	r7,-12(fp)
   347d4:	018000f4 	movhi	r6,3
   347d8:	31921004 	addi	r6,r6,18496
   347dc:	180b883a 	mov	r5,r3
   347e0:	1009883a 	mov	r4,r2
   347e4:	00357600 	call	35760 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   347e8:	e0bffd17 	ldw	r2,-12(fp)
   347ec:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   347f0:	e0bffd17 	ldw	r2,-12(fp)
   347f4:	10800204 	addi	r2,r2,8
   347f8:	d0e6da17 	ldw	r3,-25752(gp)
   347fc:	e1fffd17 	ldw	r7,-12(fp)
   34800:	018000f4 	movhi	r6,3
   34804:	31929304 	addi	r6,r6,19020
   34808:	180b883a 	mov	r5,r3
   3480c:	1009883a 	mov	r4,r2
   34810:	00350840 	call	35084 <alt_alarm_start>
   34814:	1000040e 	bge	r2,zero,34828 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   34818:	e0fffd17 	ldw	r3,-12(fp)
   3481c:	00a00034 	movhi	r2,32768
   34820:	10bfffc4 	addi	r2,r2,-1
   34824:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   34828:	0001883a 	nop
   3482c:	e037883a 	mov	sp,fp
   34830:	dfc00117 	ldw	ra,4(sp)
   34834:	df000017 	ldw	fp,0(sp)
   34838:	dec00204 	addi	sp,sp,8
   3483c:	f800283a 	ret

00034840 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   34840:	defff804 	addi	sp,sp,-32
   34844:	df000715 	stw	fp,28(sp)
   34848:	df000704 	addi	fp,sp,28
   3484c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   34850:	e0bfff17 	ldw	r2,-4(fp)
   34854:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   34858:	e0bffb17 	ldw	r2,-20(fp)
   3485c:	10800017 	ldw	r2,0(r2)
   34860:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   34864:	e0bffc17 	ldw	r2,-16(fp)
   34868:	10800104 	addi	r2,r2,4
   3486c:	10800037 	ldwio	r2,0(r2)
   34870:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   34874:	e0bffd17 	ldw	r2,-12(fp)
   34878:	1080c00c 	andi	r2,r2,768
   3487c:	10006d26 	beq	r2,zero,34a34 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   34880:	e0bffd17 	ldw	r2,-12(fp)
   34884:	1080400c 	andi	r2,r2,256
   34888:	10003526 	beq	r2,zero,34960 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   3488c:	00800074 	movhi	r2,1
   34890:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   34894:	e0bffb17 	ldw	r2,-20(fp)
   34898:	10800a17 	ldw	r2,40(r2)
   3489c:	10800044 	addi	r2,r2,1
   348a0:	1081ffcc 	andi	r2,r2,2047
   348a4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   348a8:	e0bffb17 	ldw	r2,-20(fp)
   348ac:	10c00b17 	ldw	r3,44(r2)
   348b0:	e0bffe17 	ldw	r2,-8(fp)
   348b4:	18801526 	beq	r3,r2,3490c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   348b8:	e0bffc17 	ldw	r2,-16(fp)
   348bc:	10800037 	ldwio	r2,0(r2)
   348c0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   348c4:	e0bff917 	ldw	r2,-28(fp)
   348c8:	10a0000c 	andi	r2,r2,32768
   348cc:	10001126 	beq	r2,zero,34914 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   348d0:	e0bffb17 	ldw	r2,-20(fp)
   348d4:	10800a17 	ldw	r2,40(r2)
   348d8:	e0fff917 	ldw	r3,-28(fp)
   348dc:	1809883a 	mov	r4,r3
   348e0:	e0fffb17 	ldw	r3,-20(fp)
   348e4:	1885883a 	add	r2,r3,r2
   348e8:	10800e04 	addi	r2,r2,56
   348ec:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   348f0:	e0bffb17 	ldw	r2,-20(fp)
   348f4:	10800a17 	ldw	r2,40(r2)
   348f8:	10800044 	addi	r2,r2,1
   348fc:	10c1ffcc 	andi	r3,r2,2047
   34900:	e0bffb17 	ldw	r2,-20(fp)
   34904:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   34908:	003fe206 	br	34894 <__alt_mem_sdram_controller_0+0xc0034894>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   3490c:	0001883a 	nop
   34910:	00000106 	br	34918 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   34914:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   34918:	e0bff917 	ldw	r2,-28(fp)
   3491c:	10bfffec 	andhi	r2,r2,65535
   34920:	10000f26 	beq	r2,zero,34960 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   34924:	e0bffb17 	ldw	r2,-20(fp)
   34928:	10c00817 	ldw	r3,32(r2)
   3492c:	00bfff84 	movi	r2,-2
   34930:	1886703a 	and	r3,r3,r2
   34934:	e0bffb17 	ldw	r2,-20(fp)
   34938:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   3493c:	e0bffc17 	ldw	r2,-16(fp)
   34940:	10800104 	addi	r2,r2,4
   34944:	1007883a 	mov	r3,r2
   34948:	e0bffb17 	ldw	r2,-20(fp)
   3494c:	10800817 	ldw	r2,32(r2)
   34950:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   34954:	e0bffc17 	ldw	r2,-16(fp)
   34958:	10800104 	addi	r2,r2,4
   3495c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   34960:	e0bffd17 	ldw	r2,-12(fp)
   34964:	1080800c 	andi	r2,r2,512
   34968:	103fbe26 	beq	r2,zero,34864 <__alt_mem_sdram_controller_0+0xc0034864>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   3496c:	e0bffd17 	ldw	r2,-12(fp)
   34970:	1004d43a 	srli	r2,r2,16
   34974:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   34978:	00001406 	br	349cc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   3497c:	e0bffc17 	ldw	r2,-16(fp)
   34980:	e0fffb17 	ldw	r3,-20(fp)
   34984:	18c00d17 	ldw	r3,52(r3)
   34988:	e13ffb17 	ldw	r4,-20(fp)
   3498c:	20c7883a 	add	r3,r4,r3
   34990:	18c20e04 	addi	r3,r3,2104
   34994:	18c00003 	ldbu	r3,0(r3)
   34998:	18c03fcc 	andi	r3,r3,255
   3499c:	18c0201c 	xori	r3,r3,128
   349a0:	18ffe004 	addi	r3,r3,-128
   349a4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   349a8:	e0bffb17 	ldw	r2,-20(fp)
   349ac:	10800d17 	ldw	r2,52(r2)
   349b0:	10800044 	addi	r2,r2,1
   349b4:	10c1ffcc 	andi	r3,r2,2047
   349b8:	e0bffb17 	ldw	r2,-20(fp)
   349bc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   349c0:	e0bffa17 	ldw	r2,-24(fp)
   349c4:	10bfffc4 	addi	r2,r2,-1
   349c8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   349cc:	e0bffa17 	ldw	r2,-24(fp)
   349d0:	10000526 	beq	r2,zero,349e8 <altera_avalon_jtag_uart_irq+0x1a8>
   349d4:	e0bffb17 	ldw	r2,-20(fp)
   349d8:	10c00d17 	ldw	r3,52(r2)
   349dc:	e0bffb17 	ldw	r2,-20(fp)
   349e0:	10800c17 	ldw	r2,48(r2)
   349e4:	18bfe51e 	bne	r3,r2,3497c <__alt_mem_sdram_controller_0+0xc003497c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   349e8:	e0bffa17 	ldw	r2,-24(fp)
   349ec:	103f9d26 	beq	r2,zero,34864 <__alt_mem_sdram_controller_0+0xc0034864>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   349f0:	e0bffb17 	ldw	r2,-20(fp)
   349f4:	10c00817 	ldw	r3,32(r2)
   349f8:	00bfff44 	movi	r2,-3
   349fc:	1886703a 	and	r3,r3,r2
   34a00:	e0bffb17 	ldw	r2,-20(fp)
   34a04:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   34a08:	e0bffb17 	ldw	r2,-20(fp)
   34a0c:	10800017 	ldw	r2,0(r2)
   34a10:	10800104 	addi	r2,r2,4
   34a14:	1007883a 	mov	r3,r2
   34a18:	e0bffb17 	ldw	r2,-20(fp)
   34a1c:	10800817 	ldw	r2,32(r2)
   34a20:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   34a24:	e0bffc17 	ldw	r2,-16(fp)
   34a28:	10800104 	addi	r2,r2,4
   34a2c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   34a30:	003f8c06 	br	34864 <__alt_mem_sdram_controller_0+0xc0034864>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   34a34:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   34a38:	0001883a 	nop
   34a3c:	e037883a 	mov	sp,fp
   34a40:	df000017 	ldw	fp,0(sp)
   34a44:	dec00104 	addi	sp,sp,4
   34a48:	f800283a 	ret

00034a4c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   34a4c:	defff804 	addi	sp,sp,-32
   34a50:	df000715 	stw	fp,28(sp)
   34a54:	df000704 	addi	fp,sp,28
   34a58:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   34a5c:	e0bffb17 	ldw	r2,-20(fp)
   34a60:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   34a64:	e0bff917 	ldw	r2,-28(fp)
   34a68:	10800017 	ldw	r2,0(r2)
   34a6c:	10800104 	addi	r2,r2,4
   34a70:	10800037 	ldwio	r2,0(r2)
   34a74:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   34a78:	e0bffa17 	ldw	r2,-24(fp)
   34a7c:	1081000c 	andi	r2,r2,1024
   34a80:	10000b26 	beq	r2,zero,34ab0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   34a84:	e0bff917 	ldw	r2,-28(fp)
   34a88:	10800017 	ldw	r2,0(r2)
   34a8c:	10800104 	addi	r2,r2,4
   34a90:	1007883a 	mov	r3,r2
   34a94:	e0bff917 	ldw	r2,-28(fp)
   34a98:	10800817 	ldw	r2,32(r2)
   34a9c:	10810014 	ori	r2,r2,1024
   34aa0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   34aa4:	e0bff917 	ldw	r2,-28(fp)
   34aa8:	10000915 	stw	zero,36(r2)
   34aac:	00000a06 	br	34ad8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   34ab0:	e0bff917 	ldw	r2,-28(fp)
   34ab4:	10c00917 	ldw	r3,36(r2)
   34ab8:	00a00034 	movhi	r2,32768
   34abc:	10bfff04 	addi	r2,r2,-4
   34ac0:	10c00536 	bltu	r2,r3,34ad8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   34ac4:	e0bff917 	ldw	r2,-28(fp)
   34ac8:	10800917 	ldw	r2,36(r2)
   34acc:	10c00044 	addi	r3,r2,1
   34ad0:	e0bff917 	ldw	r2,-28(fp)
   34ad4:	10c00915 	stw	r3,36(r2)
   34ad8:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   34adc:	e037883a 	mov	sp,fp
   34ae0:	df000017 	ldw	fp,0(sp)
   34ae4:	dec00104 	addi	sp,sp,4
   34ae8:	f800283a 	ret

00034aec <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   34aec:	defffd04 	addi	sp,sp,-12
   34af0:	df000215 	stw	fp,8(sp)
   34af4:	df000204 	addi	fp,sp,8
   34af8:	e13ffe15 	stw	r4,-8(fp)
   34afc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   34b00:	00000506 	br	34b18 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   34b04:	e0bfff17 	ldw	r2,-4(fp)
   34b08:	1090000c 	andi	r2,r2,16384
   34b0c:	10000226 	beq	r2,zero,34b18 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   34b10:	00bffd44 	movi	r2,-11
   34b14:	00000b06 	br	34b44 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   34b18:	e0bffe17 	ldw	r2,-8(fp)
   34b1c:	10c00d17 	ldw	r3,52(r2)
   34b20:	e0bffe17 	ldw	r2,-8(fp)
   34b24:	10800c17 	ldw	r2,48(r2)
   34b28:	18800526 	beq	r3,r2,34b40 <altera_avalon_jtag_uart_close+0x54>
   34b2c:	e0bffe17 	ldw	r2,-8(fp)
   34b30:	10c00917 	ldw	r3,36(r2)
   34b34:	e0bffe17 	ldw	r2,-8(fp)
   34b38:	10800117 	ldw	r2,4(r2)
   34b3c:	18bff136 	bltu	r3,r2,34b04 <__alt_mem_sdram_controller_0+0xc0034b04>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   34b40:	0005883a 	mov	r2,zero
}
   34b44:	e037883a 	mov	sp,fp
   34b48:	df000017 	ldw	fp,0(sp)
   34b4c:	dec00104 	addi	sp,sp,4
   34b50:	f800283a 	ret

00034b54 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   34b54:	defffa04 	addi	sp,sp,-24
   34b58:	df000515 	stw	fp,20(sp)
   34b5c:	df000504 	addi	fp,sp,20
   34b60:	e13ffd15 	stw	r4,-12(fp)
   34b64:	e17ffe15 	stw	r5,-8(fp)
   34b68:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   34b6c:	00bff9c4 	movi	r2,-25
   34b70:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   34b74:	e0bffe17 	ldw	r2,-8(fp)
   34b78:	10da8060 	cmpeqi	r3,r2,27137
   34b7c:	1800031e 	bne	r3,zero,34b8c <altera_avalon_jtag_uart_ioctl+0x38>
   34b80:	109a80a0 	cmpeqi	r2,r2,27138
   34b84:	1000181e 	bne	r2,zero,34be8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   34b88:	00002906 	br	34c30 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   34b8c:	e0bffd17 	ldw	r2,-12(fp)
   34b90:	10c00117 	ldw	r3,4(r2)
   34b94:	00a00034 	movhi	r2,32768
   34b98:	10bfffc4 	addi	r2,r2,-1
   34b9c:	18802126 	beq	r3,r2,34c24 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   34ba0:	e0bfff17 	ldw	r2,-4(fp)
   34ba4:	10800017 	ldw	r2,0(r2)
   34ba8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   34bac:	e0bffc17 	ldw	r2,-16(fp)
   34bb0:	10800090 	cmplti	r2,r2,2
   34bb4:	1000061e 	bne	r2,zero,34bd0 <altera_avalon_jtag_uart_ioctl+0x7c>
   34bb8:	e0fffc17 	ldw	r3,-16(fp)
   34bbc:	00a00034 	movhi	r2,32768
   34bc0:	10bfffc4 	addi	r2,r2,-1
   34bc4:	18800226 	beq	r3,r2,34bd0 <altera_avalon_jtag_uart_ioctl+0x7c>
   34bc8:	e0bffc17 	ldw	r2,-16(fp)
   34bcc:	00000206 	br	34bd8 <altera_avalon_jtag_uart_ioctl+0x84>
   34bd0:	00a00034 	movhi	r2,32768
   34bd4:	10bfff84 	addi	r2,r2,-2
   34bd8:	e0fffd17 	ldw	r3,-12(fp)
   34bdc:	18800115 	stw	r2,4(r3)
      rc = 0;
   34be0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   34be4:	00000f06 	br	34c24 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   34be8:	e0bffd17 	ldw	r2,-12(fp)
   34bec:	10c00117 	ldw	r3,4(r2)
   34bf0:	00a00034 	movhi	r2,32768
   34bf4:	10bfffc4 	addi	r2,r2,-1
   34bf8:	18800c26 	beq	r3,r2,34c2c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   34bfc:	e0bffd17 	ldw	r2,-12(fp)
   34c00:	10c00917 	ldw	r3,36(r2)
   34c04:	e0bffd17 	ldw	r2,-12(fp)
   34c08:	10800117 	ldw	r2,4(r2)
   34c0c:	1885803a 	cmpltu	r2,r3,r2
   34c10:	10c03fcc 	andi	r3,r2,255
   34c14:	e0bfff17 	ldw	r2,-4(fp)
   34c18:	10c00015 	stw	r3,0(r2)
      rc = 0;
   34c1c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   34c20:	00000206 	br	34c2c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   34c24:	0001883a 	nop
   34c28:	00000106 	br	34c30 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   34c2c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   34c30:	e0bffb17 	ldw	r2,-20(fp)
}
   34c34:	e037883a 	mov	sp,fp
   34c38:	df000017 	ldw	fp,0(sp)
   34c3c:	dec00104 	addi	sp,sp,4
   34c40:	f800283a 	ret

00034c44 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   34c44:	defff304 	addi	sp,sp,-52
   34c48:	dfc00c15 	stw	ra,48(sp)
   34c4c:	df000b15 	stw	fp,44(sp)
   34c50:	df000b04 	addi	fp,sp,44
   34c54:	e13ffc15 	stw	r4,-16(fp)
   34c58:	e17ffd15 	stw	r5,-12(fp)
   34c5c:	e1bffe15 	stw	r6,-8(fp)
   34c60:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   34c64:	e0bffd17 	ldw	r2,-12(fp)
   34c68:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   34c6c:	00004706 	br	34d8c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   34c70:	e0bffc17 	ldw	r2,-16(fp)
   34c74:	10800a17 	ldw	r2,40(r2)
   34c78:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   34c7c:	e0bffc17 	ldw	r2,-16(fp)
   34c80:	10800b17 	ldw	r2,44(r2)
   34c84:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   34c88:	e0fff717 	ldw	r3,-36(fp)
   34c8c:	e0bff817 	ldw	r2,-32(fp)
   34c90:	18800536 	bltu	r3,r2,34ca8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   34c94:	e0fff717 	ldw	r3,-36(fp)
   34c98:	e0bff817 	ldw	r2,-32(fp)
   34c9c:	1885c83a 	sub	r2,r3,r2
   34ca0:	e0bff615 	stw	r2,-40(fp)
   34ca4:	00000406 	br	34cb8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   34ca8:	00c20004 	movi	r3,2048
   34cac:	e0bff817 	ldw	r2,-32(fp)
   34cb0:	1885c83a 	sub	r2,r3,r2
   34cb4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   34cb8:	e0bff617 	ldw	r2,-40(fp)
   34cbc:	10001e26 	beq	r2,zero,34d38 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   34cc0:	e0fffe17 	ldw	r3,-8(fp)
   34cc4:	e0bff617 	ldw	r2,-40(fp)
   34cc8:	1880022e 	bgeu	r3,r2,34cd4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   34ccc:	e0bffe17 	ldw	r2,-8(fp)
   34cd0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   34cd4:	e0bffc17 	ldw	r2,-16(fp)
   34cd8:	10c00e04 	addi	r3,r2,56
   34cdc:	e0bff817 	ldw	r2,-32(fp)
   34ce0:	1885883a 	add	r2,r3,r2
   34ce4:	e1bff617 	ldw	r6,-40(fp)
   34ce8:	100b883a 	mov	r5,r2
   34cec:	e13ff517 	ldw	r4,-44(fp)
   34cf0:	002b5b40 	call	2b5b4 <memcpy>
      ptr   += n;
   34cf4:	e0fff517 	ldw	r3,-44(fp)
   34cf8:	e0bff617 	ldw	r2,-40(fp)
   34cfc:	1885883a 	add	r2,r3,r2
   34d00:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   34d04:	e0fffe17 	ldw	r3,-8(fp)
   34d08:	e0bff617 	ldw	r2,-40(fp)
   34d0c:	1885c83a 	sub	r2,r3,r2
   34d10:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   34d14:	e0fff817 	ldw	r3,-32(fp)
   34d18:	e0bff617 	ldw	r2,-40(fp)
   34d1c:	1885883a 	add	r2,r3,r2
   34d20:	10c1ffcc 	andi	r3,r2,2047
   34d24:	e0bffc17 	ldw	r2,-16(fp)
   34d28:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   34d2c:	e0bffe17 	ldw	r2,-8(fp)
   34d30:	00bfcf16 	blt	zero,r2,34c70 <__alt_mem_sdram_controller_0+0xc0034c70>
   34d34:	00000106 	br	34d3c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   34d38:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   34d3c:	e0fff517 	ldw	r3,-44(fp)
   34d40:	e0bffd17 	ldw	r2,-12(fp)
   34d44:	1880141e 	bne	r3,r2,34d98 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   34d48:	e0bfff17 	ldw	r2,-4(fp)
   34d4c:	1090000c 	andi	r2,r2,16384
   34d50:	1000131e 	bne	r2,zero,34da0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   34d54:	0001883a 	nop
   34d58:	e0bffc17 	ldw	r2,-16(fp)
   34d5c:	10c00a17 	ldw	r3,40(r2)
   34d60:	e0bff717 	ldw	r2,-36(fp)
   34d64:	1880051e 	bne	r3,r2,34d7c <altera_avalon_jtag_uart_read+0x138>
   34d68:	e0bffc17 	ldw	r2,-16(fp)
   34d6c:	10c00917 	ldw	r3,36(r2)
   34d70:	e0bffc17 	ldw	r2,-16(fp)
   34d74:	10800117 	ldw	r2,4(r2)
   34d78:	18bff736 	bltu	r3,r2,34d58 <__alt_mem_sdram_controller_0+0xc0034d58>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   34d7c:	e0bffc17 	ldw	r2,-16(fp)
   34d80:	10c00a17 	ldw	r3,40(r2)
   34d84:	e0bff717 	ldw	r2,-36(fp)
   34d88:	18800726 	beq	r3,r2,34da8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   34d8c:	e0bffe17 	ldw	r2,-8(fp)
   34d90:	00bfb716 	blt	zero,r2,34c70 <__alt_mem_sdram_controller_0+0xc0034c70>
   34d94:	00000506 	br	34dac <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   34d98:	0001883a 	nop
   34d9c:	00000306 	br	34dac <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   34da0:	0001883a 	nop
   34da4:	00000106 	br	34dac <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   34da8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   34dac:	e0fff517 	ldw	r3,-44(fp)
   34db0:	e0bffd17 	ldw	r2,-12(fp)
   34db4:	18801826 	beq	r3,r2,34e18 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   34db8:	0005303a 	rdctl	r2,status
   34dbc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   34dc0:	e0fffb17 	ldw	r3,-20(fp)
   34dc4:	00bfff84 	movi	r2,-2
   34dc8:	1884703a 	and	r2,r3,r2
   34dcc:	1001703a 	wrctl	status,r2
  
  return context;
   34dd0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   34dd4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   34dd8:	e0bffc17 	ldw	r2,-16(fp)
   34ddc:	10800817 	ldw	r2,32(r2)
   34de0:	10c00054 	ori	r3,r2,1
   34de4:	e0bffc17 	ldw	r2,-16(fp)
   34de8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   34dec:	e0bffc17 	ldw	r2,-16(fp)
   34df0:	10800017 	ldw	r2,0(r2)
   34df4:	10800104 	addi	r2,r2,4
   34df8:	1007883a 	mov	r3,r2
   34dfc:	e0bffc17 	ldw	r2,-16(fp)
   34e00:	10800817 	ldw	r2,32(r2)
   34e04:	18800035 	stwio	r2,0(r3)
   34e08:	e0bffa17 	ldw	r2,-24(fp)
   34e0c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   34e10:	e0bff917 	ldw	r2,-28(fp)
   34e14:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   34e18:	e0fff517 	ldw	r3,-44(fp)
   34e1c:	e0bffd17 	ldw	r2,-12(fp)
   34e20:	18800426 	beq	r3,r2,34e34 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   34e24:	e0fff517 	ldw	r3,-44(fp)
   34e28:	e0bffd17 	ldw	r2,-12(fp)
   34e2c:	1885c83a 	sub	r2,r3,r2
   34e30:	00000606 	br	34e4c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   34e34:	e0bfff17 	ldw	r2,-4(fp)
   34e38:	1090000c 	andi	r2,r2,16384
   34e3c:	10000226 	beq	r2,zero,34e48 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   34e40:	00bffd44 	movi	r2,-11
   34e44:	00000106 	br	34e4c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   34e48:	00bffec4 	movi	r2,-5
}
   34e4c:	e037883a 	mov	sp,fp
   34e50:	dfc00117 	ldw	ra,4(sp)
   34e54:	df000017 	ldw	fp,0(sp)
   34e58:	dec00204 	addi	sp,sp,8
   34e5c:	f800283a 	ret

00034e60 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   34e60:	defff304 	addi	sp,sp,-52
   34e64:	dfc00c15 	stw	ra,48(sp)
   34e68:	df000b15 	stw	fp,44(sp)
   34e6c:	df000b04 	addi	fp,sp,44
   34e70:	e13ffc15 	stw	r4,-16(fp)
   34e74:	e17ffd15 	stw	r5,-12(fp)
   34e78:	e1bffe15 	stw	r6,-8(fp)
   34e7c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   34e80:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   34e84:	e0bffd17 	ldw	r2,-12(fp)
   34e88:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   34e8c:	00003706 	br	34f6c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   34e90:	e0bffc17 	ldw	r2,-16(fp)
   34e94:	10800c17 	ldw	r2,48(r2)
   34e98:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   34e9c:	e0bffc17 	ldw	r2,-16(fp)
   34ea0:	10800d17 	ldw	r2,52(r2)
   34ea4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   34ea8:	e0fff917 	ldw	r3,-28(fp)
   34eac:	e0bff517 	ldw	r2,-44(fp)
   34eb0:	1880062e 	bgeu	r3,r2,34ecc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   34eb4:	e0fff517 	ldw	r3,-44(fp)
   34eb8:	e0bff917 	ldw	r2,-28(fp)
   34ebc:	1885c83a 	sub	r2,r3,r2
   34ec0:	10bfffc4 	addi	r2,r2,-1
   34ec4:	e0bff615 	stw	r2,-40(fp)
   34ec8:	00000b06 	br	34ef8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   34ecc:	e0bff517 	ldw	r2,-44(fp)
   34ed0:	10000526 	beq	r2,zero,34ee8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   34ed4:	00c20004 	movi	r3,2048
   34ed8:	e0bff917 	ldw	r2,-28(fp)
   34edc:	1885c83a 	sub	r2,r3,r2
   34ee0:	e0bff615 	stw	r2,-40(fp)
   34ee4:	00000406 	br	34ef8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   34ee8:	00c1ffc4 	movi	r3,2047
   34eec:	e0bff917 	ldw	r2,-28(fp)
   34ef0:	1885c83a 	sub	r2,r3,r2
   34ef4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   34ef8:	e0bff617 	ldw	r2,-40(fp)
   34efc:	10001e26 	beq	r2,zero,34f78 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   34f00:	e0fffe17 	ldw	r3,-8(fp)
   34f04:	e0bff617 	ldw	r2,-40(fp)
   34f08:	1880022e 	bgeu	r3,r2,34f14 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   34f0c:	e0bffe17 	ldw	r2,-8(fp)
   34f10:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   34f14:	e0bffc17 	ldw	r2,-16(fp)
   34f18:	10c20e04 	addi	r3,r2,2104
   34f1c:	e0bff917 	ldw	r2,-28(fp)
   34f20:	1885883a 	add	r2,r3,r2
   34f24:	e1bff617 	ldw	r6,-40(fp)
   34f28:	e17ffd17 	ldw	r5,-12(fp)
   34f2c:	1009883a 	mov	r4,r2
   34f30:	002b5b40 	call	2b5b4 <memcpy>
      ptr   += n;
   34f34:	e0fffd17 	ldw	r3,-12(fp)
   34f38:	e0bff617 	ldw	r2,-40(fp)
   34f3c:	1885883a 	add	r2,r3,r2
   34f40:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   34f44:	e0fffe17 	ldw	r3,-8(fp)
   34f48:	e0bff617 	ldw	r2,-40(fp)
   34f4c:	1885c83a 	sub	r2,r3,r2
   34f50:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   34f54:	e0fff917 	ldw	r3,-28(fp)
   34f58:	e0bff617 	ldw	r2,-40(fp)
   34f5c:	1885883a 	add	r2,r3,r2
   34f60:	10c1ffcc 	andi	r3,r2,2047
   34f64:	e0bffc17 	ldw	r2,-16(fp)
   34f68:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   34f6c:	e0bffe17 	ldw	r2,-8(fp)
   34f70:	00bfc716 	blt	zero,r2,34e90 <__alt_mem_sdram_controller_0+0xc0034e90>
   34f74:	00000106 	br	34f7c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   34f78:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   34f7c:	0005303a 	rdctl	r2,status
   34f80:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   34f84:	e0fffb17 	ldw	r3,-20(fp)
   34f88:	00bfff84 	movi	r2,-2
   34f8c:	1884703a 	and	r2,r3,r2
   34f90:	1001703a 	wrctl	status,r2
  
  return context;
   34f94:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   34f98:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   34f9c:	e0bffc17 	ldw	r2,-16(fp)
   34fa0:	10800817 	ldw	r2,32(r2)
   34fa4:	10c00094 	ori	r3,r2,2
   34fa8:	e0bffc17 	ldw	r2,-16(fp)
   34fac:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   34fb0:	e0bffc17 	ldw	r2,-16(fp)
   34fb4:	10800017 	ldw	r2,0(r2)
   34fb8:	10800104 	addi	r2,r2,4
   34fbc:	1007883a 	mov	r3,r2
   34fc0:	e0bffc17 	ldw	r2,-16(fp)
   34fc4:	10800817 	ldw	r2,32(r2)
   34fc8:	18800035 	stwio	r2,0(r3)
   34fcc:	e0bffa17 	ldw	r2,-24(fp)
   34fd0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   34fd4:	e0bff817 	ldw	r2,-32(fp)
   34fd8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   34fdc:	e0bffe17 	ldw	r2,-8(fp)
   34fe0:	0080100e 	bge	zero,r2,35024 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   34fe4:	e0bfff17 	ldw	r2,-4(fp)
   34fe8:	1090000c 	andi	r2,r2,16384
   34fec:	1000101e 	bne	r2,zero,35030 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   34ff0:	0001883a 	nop
   34ff4:	e0bffc17 	ldw	r2,-16(fp)
   34ff8:	10c00d17 	ldw	r3,52(r2)
   34ffc:	e0bff517 	ldw	r2,-44(fp)
   35000:	1880051e 	bne	r3,r2,35018 <altera_avalon_jtag_uart_write+0x1b8>
   35004:	e0bffc17 	ldw	r2,-16(fp)
   35008:	10c00917 	ldw	r3,36(r2)
   3500c:	e0bffc17 	ldw	r2,-16(fp)
   35010:	10800117 	ldw	r2,4(r2)
   35014:	18bff736 	bltu	r3,r2,34ff4 <__alt_mem_sdram_controller_0+0xc0034ff4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   35018:	e0bffc17 	ldw	r2,-16(fp)
   3501c:	10800917 	ldw	r2,36(r2)
   35020:	1000051e 	bne	r2,zero,35038 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   35024:	e0bffe17 	ldw	r2,-8(fp)
   35028:	00bfd016 	blt	zero,r2,34f6c <__alt_mem_sdram_controller_0+0xc0034f6c>
   3502c:	00000306 	br	3503c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   35030:	0001883a 	nop
   35034:	00000106 	br	3503c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   35038:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   3503c:	e0fffd17 	ldw	r3,-12(fp)
   35040:	e0bff717 	ldw	r2,-36(fp)
   35044:	18800426 	beq	r3,r2,35058 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   35048:	e0fffd17 	ldw	r3,-12(fp)
   3504c:	e0bff717 	ldw	r2,-36(fp)
   35050:	1885c83a 	sub	r2,r3,r2
   35054:	00000606 	br	35070 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   35058:	e0bfff17 	ldw	r2,-4(fp)
   3505c:	1090000c 	andi	r2,r2,16384
   35060:	10000226 	beq	r2,zero,3506c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   35064:	00bffd44 	movi	r2,-11
   35068:	00000106 	br	35070 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   3506c:	00bffec4 	movi	r2,-5
}
   35070:	e037883a 	mov	sp,fp
   35074:	dfc00117 	ldw	ra,4(sp)
   35078:	df000017 	ldw	fp,0(sp)
   3507c:	dec00204 	addi	sp,sp,8
   35080:	f800283a 	ret

00035084 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   35084:	defff504 	addi	sp,sp,-44
   35088:	df000a15 	stw	fp,40(sp)
   3508c:	df000a04 	addi	fp,sp,40
   35090:	e13ffc15 	stw	r4,-16(fp)
   35094:	e17ffd15 	stw	r5,-12(fp)
   35098:	e1bffe15 	stw	r6,-8(fp)
   3509c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   350a0:	e03ff615 	stw	zero,-40(fp)
   350a4:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
   350a8:	10003c26 	beq	r2,zero,3519c <alt_alarm_start+0x118>
  {
    if (alarm)
   350ac:	e0bffc17 	ldw	r2,-16(fp)
   350b0:	10003826 	beq	r2,zero,35194 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   350b4:	e0bffc17 	ldw	r2,-16(fp)
   350b8:	e0fffe17 	ldw	r3,-8(fp)
   350bc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   350c0:	e0bffc17 	ldw	r2,-16(fp)
   350c4:	e0ffff17 	ldw	r3,-4(fp)
   350c8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   350cc:	0005303a 	rdctl	r2,status
   350d0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   350d4:	e0fff917 	ldw	r3,-28(fp)
   350d8:	00bfff84 	movi	r2,-2
   350dc:	1884703a 	and	r2,r3,r2
   350e0:	1001703a 	wrctl	status,r2
  
  return context;
   350e4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   350e8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   350ec:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
   350f0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   350f4:	e0fffd17 	ldw	r3,-12(fp)
   350f8:	e0bff617 	ldw	r2,-40(fp)
   350fc:	1885883a 	add	r2,r3,r2
   35100:	10c00044 	addi	r3,r2,1
   35104:	e0bffc17 	ldw	r2,-16(fp)
   35108:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   3510c:	e0bffc17 	ldw	r2,-16(fp)
   35110:	10c00217 	ldw	r3,8(r2)
   35114:	e0bff617 	ldw	r2,-40(fp)
   35118:	1880042e 	bgeu	r3,r2,3512c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   3511c:	e0bffc17 	ldw	r2,-16(fp)
   35120:	00c00044 	movi	r3,1
   35124:	10c00405 	stb	r3,16(r2)
   35128:	00000206 	br	35134 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   3512c:	e0bffc17 	ldw	r2,-16(fp)
   35130:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   35134:	e0bffc17 	ldw	r2,-16(fp)
   35138:	d0e00d04 	addi	r3,gp,-32716
   3513c:	e0fffa15 	stw	r3,-24(fp)
   35140:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   35144:	e0bffb17 	ldw	r2,-20(fp)
   35148:	e0fffa17 	ldw	r3,-24(fp)
   3514c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   35150:	e0bffa17 	ldw	r2,-24(fp)
   35154:	10c00017 	ldw	r3,0(r2)
   35158:	e0bffb17 	ldw	r2,-20(fp)
   3515c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   35160:	e0bffa17 	ldw	r2,-24(fp)
   35164:	10800017 	ldw	r2,0(r2)
   35168:	e0fffb17 	ldw	r3,-20(fp)
   3516c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   35170:	e0bffa17 	ldw	r2,-24(fp)
   35174:	e0fffb17 	ldw	r3,-20(fp)
   35178:	10c00015 	stw	r3,0(r2)
   3517c:	e0bff817 	ldw	r2,-32(fp)
   35180:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   35184:	e0bff717 	ldw	r2,-36(fp)
   35188:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   3518c:	0005883a 	mov	r2,zero
   35190:	00000306 	br	351a0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   35194:	00bffa84 	movi	r2,-22
   35198:	00000106 	br	351a0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   3519c:	00bfde84 	movi	r2,-134
  }
}
   351a0:	e037883a 	mov	sp,fp
   351a4:	df000017 	ldw	fp,0(sp)
   351a8:	dec00104 	addi	sp,sp,4
   351ac:	f800283a 	ret

000351b0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   351b0:	defffa04 	addi	sp,sp,-24
   351b4:	dfc00515 	stw	ra,20(sp)
   351b8:	df000415 	stw	fp,16(sp)
   351bc:	df000404 	addi	fp,sp,16
   351c0:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   351c4:	008000c4 	movi	r2,3
   351c8:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   351cc:	e0fffd17 	ldw	r3,-12(fp)
   351d0:	008003f4 	movhi	r2,15
   351d4:	10909004 	addi	r2,r2,16960
   351d8:	1885383a 	mul	r2,r3,r2
   351dc:	100b883a 	mov	r5,r2
   351e0:	0100bef4 	movhi	r4,763
   351e4:	213c2004 	addi	r4,r4,-3968
   351e8:	002260c0 	call	2260c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   351ec:	100b883a 	mov	r5,r2
   351f0:	01200034 	movhi	r4,32768
   351f4:	213fffc4 	addi	r4,r4,-1
   351f8:	002260c0 	call	2260c <__udivsi3>
   351fc:	100b883a 	mov	r5,r2
   35200:	e13fff17 	ldw	r4,-4(fp)
   35204:	002260c0 	call	2260c <__udivsi3>
   35208:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   3520c:	e0bffe17 	ldw	r2,-8(fp)
   35210:	10002a26 	beq	r2,zero,352bc <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   35214:	e03ffc15 	stw	zero,-16(fp)
   35218:	00001706 	br	35278 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   3521c:	00a00034 	movhi	r2,32768
   35220:	10bfffc4 	addi	r2,r2,-1
   35224:	10bfffc4 	addi	r2,r2,-1
   35228:	103ffe1e 	bne	r2,zero,35224 <__alt_mem_sdram_controller_0+0xc0035224>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   3522c:	e0fffd17 	ldw	r3,-12(fp)
   35230:	008003f4 	movhi	r2,15
   35234:	10909004 	addi	r2,r2,16960
   35238:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   3523c:	100b883a 	mov	r5,r2
   35240:	0100bef4 	movhi	r4,763
   35244:	213c2004 	addi	r4,r4,-3968
   35248:	002260c0 	call	2260c <__udivsi3>
   3524c:	100b883a 	mov	r5,r2
   35250:	01200034 	movhi	r4,32768
   35254:	213fffc4 	addi	r4,r4,-1
   35258:	002260c0 	call	2260c <__udivsi3>
   3525c:	1007883a 	mov	r3,r2
   35260:	e0bfff17 	ldw	r2,-4(fp)
   35264:	10c5c83a 	sub	r2,r2,r3
   35268:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   3526c:	e0bffc17 	ldw	r2,-16(fp)
   35270:	10800044 	addi	r2,r2,1
   35274:	e0bffc15 	stw	r2,-16(fp)
   35278:	e0fffc17 	ldw	r3,-16(fp)
   3527c:	e0bffe17 	ldw	r2,-8(fp)
   35280:	18bfe616 	blt	r3,r2,3521c <__alt_mem_sdram_controller_0+0xc003521c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   35284:	e0fffd17 	ldw	r3,-12(fp)
   35288:	008003f4 	movhi	r2,15
   3528c:	10909004 	addi	r2,r2,16960
   35290:	1885383a 	mul	r2,r3,r2
   35294:	100b883a 	mov	r5,r2
   35298:	0100bef4 	movhi	r4,763
   3529c:	213c2004 	addi	r4,r4,-3968
   352a0:	002260c0 	call	2260c <__udivsi3>
   352a4:	1007883a 	mov	r3,r2
   352a8:	e0bfff17 	ldw	r2,-4(fp)
   352ac:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   352b0:	10bfffc4 	addi	r2,r2,-1
   352b4:	103ffe1e 	bne	r2,zero,352b0 <__alt_mem_sdram_controller_0+0xc00352b0>
   352b8:	00000d06 	br	352f0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   352bc:	e0fffd17 	ldw	r3,-12(fp)
   352c0:	008003f4 	movhi	r2,15
   352c4:	10909004 	addi	r2,r2,16960
   352c8:	1885383a 	mul	r2,r3,r2
   352cc:	100b883a 	mov	r5,r2
   352d0:	0100bef4 	movhi	r4,763
   352d4:	213c2004 	addi	r4,r4,-3968
   352d8:	002260c0 	call	2260c <__udivsi3>
   352dc:	1007883a 	mov	r3,r2
   352e0:	e0bfff17 	ldw	r2,-4(fp)
   352e4:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   352e8:	10bfffc4 	addi	r2,r2,-1
   352ec:	00bffe16 	blt	zero,r2,352e8 <__alt_mem_sdram_controller_0+0xc00352e8>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   352f0:	0005883a 	mov	r2,zero
}
   352f4:	e037883a 	mov	sp,fp
   352f8:	dfc00117 	ldw	ra,4(sp)
   352fc:	df000017 	ldw	fp,0(sp)
   35300:	dec00204 	addi	sp,sp,8
   35304:	f800283a 	ret

00035308 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   35308:	defffe04 	addi	sp,sp,-8
   3530c:	df000115 	stw	fp,4(sp)
   35310:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   35314:	e03fff15 	stw	zero,-4(fp)
   35318:	00000506 	br	35330 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   3531c:	e0bfff17 	ldw	r2,-4(fp)
   35320:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   35324:	e0bfff17 	ldw	r2,-4(fp)
   35328:	10800804 	addi	r2,r2,32
   3532c:	e0bfff15 	stw	r2,-4(fp)
   35330:	e0bfff17 	ldw	r2,-4(fp)
   35334:	10820030 	cmpltui	r2,r2,2048
   35338:	103ff81e 	bne	r2,zero,3531c <__alt_mem_sdram_controller_0+0xc003531c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   3533c:	0001883a 	nop
   35340:	e037883a 	mov	sp,fp
   35344:	df000017 	ldw	fp,0(sp)
   35348:	dec00104 	addi	sp,sp,4
   3534c:	f800283a 	ret

00035350 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   35350:	defffe04 	addi	sp,sp,-8
   35354:	dfc00115 	stw	ra,4(sp)
   35358:	df000015 	stw	fp,0(sp)
   3535c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   35360:	d0a00b17 	ldw	r2,-32724(gp)
   35364:	10000326 	beq	r2,zero,35374 <alt_get_errno+0x24>
   35368:	d0a00b17 	ldw	r2,-32724(gp)
   3536c:	103ee83a 	callr	r2
   35370:	00000106 	br	35378 <alt_get_errno+0x28>
   35374:	d0a6cc04 	addi	r2,gp,-25808
}
   35378:	e037883a 	mov	sp,fp
   3537c:	dfc00117 	ldw	ra,4(sp)
   35380:	df000017 	ldw	fp,0(sp)
   35384:	dec00204 	addi	sp,sp,8
   35388:	f800283a 	ret

0003538c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   3538c:	defffa04 	addi	sp,sp,-24
   35390:	dfc00515 	stw	ra,20(sp)
   35394:	df000415 	stw	fp,16(sp)
   35398:	df000404 	addi	fp,sp,16
   3539c:	e13ffe15 	stw	r4,-8(fp)
   353a0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   353a4:	e0bffe17 	ldw	r2,-8(fp)
   353a8:	10000326 	beq	r2,zero,353b8 <alt_dev_llist_insert+0x2c>
   353ac:	e0bffe17 	ldw	r2,-8(fp)
   353b0:	10800217 	ldw	r2,8(r2)
   353b4:	1000061e 	bne	r2,zero,353d0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   353b8:	00353500 	call	35350 <alt_get_errno>
   353bc:	1007883a 	mov	r3,r2
   353c0:	00800584 	movi	r2,22
   353c4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   353c8:	00bffa84 	movi	r2,-22
   353cc:	00001306 	br	3541c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   353d0:	e0bffe17 	ldw	r2,-8(fp)
   353d4:	e0ffff17 	ldw	r3,-4(fp)
   353d8:	e0fffc15 	stw	r3,-16(fp)
   353dc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   353e0:	e0bffd17 	ldw	r2,-12(fp)
   353e4:	e0fffc17 	ldw	r3,-16(fp)
   353e8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   353ec:	e0bffc17 	ldw	r2,-16(fp)
   353f0:	10c00017 	ldw	r3,0(r2)
   353f4:	e0bffd17 	ldw	r2,-12(fp)
   353f8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   353fc:	e0bffc17 	ldw	r2,-16(fp)
   35400:	10800017 	ldw	r2,0(r2)
   35404:	e0fffd17 	ldw	r3,-12(fp)
   35408:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   3540c:	e0bffc17 	ldw	r2,-16(fp)
   35410:	e0fffd17 	ldw	r3,-12(fp)
   35414:	10c00015 	stw	r3,0(r2)

  return 0;  
   35418:	0005883a 	mov	r2,zero
}
   3541c:	e037883a 	mov	sp,fp
   35420:	dfc00117 	ldw	ra,4(sp)
   35424:	df000017 	ldw	fp,0(sp)
   35428:	dec00204 	addi	sp,sp,8
   3542c:	f800283a 	ret

00035430 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   35430:	defffd04 	addi	sp,sp,-12
   35434:	dfc00215 	stw	ra,8(sp)
   35438:	df000115 	stw	fp,4(sp)
   3543c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   35440:	008000f4 	movhi	r2,3
   35444:	1097fb04 	addi	r2,r2,24556
   35448:	e0bfff15 	stw	r2,-4(fp)
   3544c:	00000606 	br	35468 <_do_ctors+0x38>
        (*ctor) (); 
   35450:	e0bfff17 	ldw	r2,-4(fp)
   35454:	10800017 	ldw	r2,0(r2)
   35458:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   3545c:	e0bfff17 	ldw	r2,-4(fp)
   35460:	10bfff04 	addi	r2,r2,-4
   35464:	e0bfff15 	stw	r2,-4(fp)
   35468:	e0ffff17 	ldw	r3,-4(fp)
   3546c:	008000f4 	movhi	r2,3
   35470:	1097fc04 	addi	r2,r2,24560
   35474:	18bff62e 	bgeu	r3,r2,35450 <__alt_mem_sdram_controller_0+0xc0035450>
        (*ctor) (); 
}
   35478:	0001883a 	nop
   3547c:	e037883a 	mov	sp,fp
   35480:	dfc00117 	ldw	ra,4(sp)
   35484:	df000017 	ldw	fp,0(sp)
   35488:	dec00204 	addi	sp,sp,8
   3548c:	f800283a 	ret

00035490 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   35490:	defffd04 	addi	sp,sp,-12
   35494:	dfc00215 	stw	ra,8(sp)
   35498:	df000115 	stw	fp,4(sp)
   3549c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   354a0:	008000f4 	movhi	r2,3
   354a4:	1097fb04 	addi	r2,r2,24556
   354a8:	e0bfff15 	stw	r2,-4(fp)
   354ac:	00000606 	br	354c8 <_do_dtors+0x38>
        (*dtor) (); 
   354b0:	e0bfff17 	ldw	r2,-4(fp)
   354b4:	10800017 	ldw	r2,0(r2)
   354b8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   354bc:	e0bfff17 	ldw	r2,-4(fp)
   354c0:	10bfff04 	addi	r2,r2,-4
   354c4:	e0bfff15 	stw	r2,-4(fp)
   354c8:	e0ffff17 	ldw	r3,-4(fp)
   354cc:	008000f4 	movhi	r2,3
   354d0:	1097fc04 	addi	r2,r2,24560
   354d4:	18bff62e 	bgeu	r3,r2,354b0 <__alt_mem_sdram_controller_0+0xc00354b0>
        (*dtor) (); 
}
   354d8:	0001883a 	nop
   354dc:	e037883a 	mov	sp,fp
   354e0:	dfc00117 	ldw	ra,4(sp)
   354e4:	df000017 	ldw	fp,0(sp)
   354e8:	dec00204 	addi	sp,sp,8
   354ec:	f800283a 	ret

000354f0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   354f0:	defffa04 	addi	sp,sp,-24
   354f4:	dfc00515 	stw	ra,20(sp)
   354f8:	df000415 	stw	fp,16(sp)
   354fc:	df000404 	addi	fp,sp,16
   35500:	e13ffe15 	stw	r4,-8(fp)
   35504:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   35508:	e0bfff17 	ldw	r2,-4(fp)
   3550c:	10800017 	ldw	r2,0(r2)
   35510:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   35514:	e13ffe17 	ldw	r4,-8(fp)
   35518:	0024d2c0 	call	24d2c <strlen>
   3551c:	10800044 	addi	r2,r2,1
   35520:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   35524:	00000d06 	br	3555c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   35528:	e0bffc17 	ldw	r2,-16(fp)
   3552c:	10800217 	ldw	r2,8(r2)
   35530:	e0fffd17 	ldw	r3,-12(fp)
   35534:	180d883a 	mov	r6,r3
   35538:	e17ffe17 	ldw	r5,-8(fp)
   3553c:	1009883a 	mov	r4,r2
   35540:	0035cdc0 	call	35cdc <memcmp>
   35544:	1000021e 	bne	r2,zero,35550 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   35548:	e0bffc17 	ldw	r2,-16(fp)
   3554c:	00000706 	br	3556c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   35550:	e0bffc17 	ldw	r2,-16(fp)
   35554:	10800017 	ldw	r2,0(r2)
   35558:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   3555c:	e0fffc17 	ldw	r3,-16(fp)
   35560:	e0bfff17 	ldw	r2,-4(fp)
   35564:	18bff01e 	bne	r3,r2,35528 <__alt_mem_sdram_controller_0+0xc0035528>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   35568:	0005883a 	mov	r2,zero
}
   3556c:	e037883a 	mov	sp,fp
   35570:	dfc00117 	ldw	ra,4(sp)
   35574:	df000017 	ldw	fp,0(sp)
   35578:	dec00204 	addi	sp,sp,8
   3557c:	f800283a 	ret

00035580 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   35580:	defffb04 	addi	sp,sp,-20
   35584:	dfc00415 	stw	ra,16(sp)
   35588:	df000315 	stw	fp,12(sp)
   3558c:	df000304 	addi	fp,sp,12
   35590:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   35594:	d0a00617 	ldw	r2,-32744(gp)
   35598:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   3559c:	00003106 	br	35664 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   355a0:	e0bffd17 	ldw	r2,-12(fp)
   355a4:	10800217 	ldw	r2,8(r2)
   355a8:	1009883a 	mov	r4,r2
   355ac:	0024d2c0 	call	24d2c <strlen>
   355b0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   355b4:	e0bffd17 	ldw	r2,-12(fp)
   355b8:	10c00217 	ldw	r3,8(r2)
   355bc:	e0bffe17 	ldw	r2,-8(fp)
   355c0:	10bfffc4 	addi	r2,r2,-1
   355c4:	1885883a 	add	r2,r3,r2
   355c8:	10800003 	ldbu	r2,0(r2)
   355cc:	10803fcc 	andi	r2,r2,255
   355d0:	1080201c 	xori	r2,r2,128
   355d4:	10bfe004 	addi	r2,r2,-128
   355d8:	10800bd8 	cmpnei	r2,r2,47
   355dc:	1000031e 	bne	r2,zero,355ec <alt_find_file+0x6c>
    {
      len -= 1;
   355e0:	e0bffe17 	ldw	r2,-8(fp)
   355e4:	10bfffc4 	addi	r2,r2,-1
   355e8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   355ec:	e0bffe17 	ldw	r2,-8(fp)
   355f0:	e0ffff17 	ldw	r3,-4(fp)
   355f4:	1885883a 	add	r2,r3,r2
   355f8:	10800003 	ldbu	r2,0(r2)
   355fc:	10803fcc 	andi	r2,r2,255
   35600:	1080201c 	xori	r2,r2,128
   35604:	10bfe004 	addi	r2,r2,-128
   35608:	10800be0 	cmpeqi	r2,r2,47
   3560c:	1000081e 	bne	r2,zero,35630 <alt_find_file+0xb0>
   35610:	e0bffe17 	ldw	r2,-8(fp)
   35614:	e0ffff17 	ldw	r3,-4(fp)
   35618:	1885883a 	add	r2,r3,r2
   3561c:	10800003 	ldbu	r2,0(r2)
   35620:	10803fcc 	andi	r2,r2,255
   35624:	1080201c 	xori	r2,r2,128
   35628:	10bfe004 	addi	r2,r2,-128
   3562c:	10000a1e 	bne	r2,zero,35658 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   35630:	e0bffd17 	ldw	r2,-12(fp)
   35634:	10800217 	ldw	r2,8(r2)
   35638:	e0fffe17 	ldw	r3,-8(fp)
   3563c:	180d883a 	mov	r6,r3
   35640:	e17fff17 	ldw	r5,-4(fp)
   35644:	1009883a 	mov	r4,r2
   35648:	0035cdc0 	call	35cdc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   3564c:	1000021e 	bne	r2,zero,35658 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   35650:	e0bffd17 	ldw	r2,-12(fp)
   35654:	00000706 	br	35674 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   35658:	e0bffd17 	ldw	r2,-12(fp)
   3565c:	10800017 	ldw	r2,0(r2)
   35660:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   35664:	e0fffd17 	ldw	r3,-12(fp)
   35668:	d0a00604 	addi	r2,gp,-32744
   3566c:	18bfcc1e 	bne	r3,r2,355a0 <__alt_mem_sdram_controller_0+0xc00355a0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   35670:	0005883a 	mov	r2,zero
}
   35674:	e037883a 	mov	sp,fp
   35678:	dfc00117 	ldw	ra,4(sp)
   3567c:	df000017 	ldw	fp,0(sp)
   35680:	dec00204 	addi	sp,sp,8
   35684:	f800283a 	ret

00035688 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   35688:	defffc04 	addi	sp,sp,-16
   3568c:	df000315 	stw	fp,12(sp)
   35690:	df000304 	addi	fp,sp,12
   35694:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   35698:	00bffa04 	movi	r2,-24
   3569c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   356a0:	e03ffd15 	stw	zero,-12(fp)
   356a4:	00001906 	br	3570c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   356a8:	008000f4 	movhi	r2,3
   356ac:	109bc404 	addi	r2,r2,28432
   356b0:	e0fffd17 	ldw	r3,-12(fp)
   356b4:	18c00324 	muli	r3,r3,12
   356b8:	10c5883a 	add	r2,r2,r3
   356bc:	10800017 	ldw	r2,0(r2)
   356c0:	10000f1e 	bne	r2,zero,35700 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   356c4:	008000f4 	movhi	r2,3
   356c8:	109bc404 	addi	r2,r2,28432
   356cc:	e0fffd17 	ldw	r3,-12(fp)
   356d0:	18c00324 	muli	r3,r3,12
   356d4:	10c5883a 	add	r2,r2,r3
   356d8:	e0ffff17 	ldw	r3,-4(fp)
   356dc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   356e0:	d0e00a17 	ldw	r3,-32728(gp)
   356e4:	e0bffd17 	ldw	r2,-12(fp)
   356e8:	1880020e 	bge	r3,r2,356f4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   356ec:	e0bffd17 	ldw	r2,-12(fp)
   356f0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   356f4:	e0bffd17 	ldw	r2,-12(fp)
   356f8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   356fc:	00000606 	br	35718 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   35700:	e0bffd17 	ldw	r2,-12(fp)
   35704:	10800044 	addi	r2,r2,1
   35708:	e0bffd15 	stw	r2,-12(fp)
   3570c:	e0bffd17 	ldw	r2,-12(fp)
   35710:	10800810 	cmplti	r2,r2,32
   35714:	103fe41e 	bne	r2,zero,356a8 <__alt_mem_sdram_controller_0+0xc00356a8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   35718:	e0bffe17 	ldw	r2,-8(fp)
}
   3571c:	e037883a 	mov	sp,fp
   35720:	df000017 	ldw	fp,0(sp)
   35724:	dec00104 	addi	sp,sp,4
   35728:	f800283a 	ret

0003572c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   3572c:	defffe04 	addi	sp,sp,-8
   35730:	dfc00115 	stw	ra,4(sp)
   35734:	df000015 	stw	fp,0(sp)
   35738:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   3573c:	01440004 	movi	r5,4096
   35740:	0009883a 	mov	r4,zero
   35744:	0035b640 	call	35b64 <alt_icache_flush>
#endif
}
   35748:	0001883a 	nop
   3574c:	e037883a 	mov	sp,fp
   35750:	dfc00117 	ldw	ra,4(sp)
   35754:	df000017 	ldw	fp,0(sp)
   35758:	dec00204 	addi	sp,sp,8
   3575c:	f800283a 	ret

00035760 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   35760:	defff904 	addi	sp,sp,-28
   35764:	dfc00615 	stw	ra,24(sp)
   35768:	df000515 	stw	fp,20(sp)
   3576c:	df000504 	addi	fp,sp,20
   35770:	e13ffc15 	stw	r4,-16(fp)
   35774:	e17ffd15 	stw	r5,-12(fp)
   35778:	e1bffe15 	stw	r6,-8(fp)
   3577c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   35780:	e0800217 	ldw	r2,8(fp)
   35784:	d8800015 	stw	r2,0(sp)
   35788:	e1ffff17 	ldw	r7,-4(fp)
   3578c:	e1bffe17 	ldw	r6,-8(fp)
   35790:	e17ffd17 	ldw	r5,-12(fp)
   35794:	e13ffc17 	ldw	r4,-16(fp)
   35798:	00359100 	call	35910 <alt_iic_isr_register>
}  
   3579c:	e037883a 	mov	sp,fp
   357a0:	dfc00117 	ldw	ra,4(sp)
   357a4:	df000017 	ldw	fp,0(sp)
   357a8:	dec00204 	addi	sp,sp,8
   357ac:	f800283a 	ret

000357b0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   357b0:	defff904 	addi	sp,sp,-28
   357b4:	df000615 	stw	fp,24(sp)
   357b8:	df000604 	addi	fp,sp,24
   357bc:	e13ffe15 	stw	r4,-8(fp)
   357c0:	e17fff15 	stw	r5,-4(fp)
   357c4:	e0bfff17 	ldw	r2,-4(fp)
   357c8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   357cc:	0005303a 	rdctl	r2,status
   357d0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   357d4:	e0fffb17 	ldw	r3,-20(fp)
   357d8:	00bfff84 	movi	r2,-2
   357dc:	1884703a 	and	r2,r3,r2
   357e0:	1001703a 	wrctl	status,r2
  
  return context;
   357e4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   357e8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   357ec:	00c00044 	movi	r3,1
   357f0:	e0bffa17 	ldw	r2,-24(fp)
   357f4:	1884983a 	sll	r2,r3,r2
   357f8:	1007883a 	mov	r3,r2
   357fc:	d0a6dc17 	ldw	r2,-25744(gp)
   35800:	1884b03a 	or	r2,r3,r2
   35804:	d0a6dc15 	stw	r2,-25744(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   35808:	d0a6dc17 	ldw	r2,-25744(gp)
   3580c:	100170fa 	wrctl	ienable,r2
   35810:	e0bffc17 	ldw	r2,-16(fp)
   35814:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   35818:	e0bffd17 	ldw	r2,-12(fp)
   3581c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   35820:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   35824:	0001883a 	nop
}
   35828:	e037883a 	mov	sp,fp
   3582c:	df000017 	ldw	fp,0(sp)
   35830:	dec00104 	addi	sp,sp,4
   35834:	f800283a 	ret

00035838 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   35838:	defff904 	addi	sp,sp,-28
   3583c:	df000615 	stw	fp,24(sp)
   35840:	df000604 	addi	fp,sp,24
   35844:	e13ffe15 	stw	r4,-8(fp)
   35848:	e17fff15 	stw	r5,-4(fp)
   3584c:	e0bfff17 	ldw	r2,-4(fp)
   35850:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   35854:	0005303a 	rdctl	r2,status
   35858:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3585c:	e0fffb17 	ldw	r3,-20(fp)
   35860:	00bfff84 	movi	r2,-2
   35864:	1884703a 	and	r2,r3,r2
   35868:	1001703a 	wrctl	status,r2
  
  return context;
   3586c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   35870:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   35874:	00c00044 	movi	r3,1
   35878:	e0bffa17 	ldw	r2,-24(fp)
   3587c:	1884983a 	sll	r2,r3,r2
   35880:	0084303a 	nor	r2,zero,r2
   35884:	1007883a 	mov	r3,r2
   35888:	d0a6dc17 	ldw	r2,-25744(gp)
   3588c:	1884703a 	and	r2,r3,r2
   35890:	d0a6dc15 	stw	r2,-25744(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   35894:	d0a6dc17 	ldw	r2,-25744(gp)
   35898:	100170fa 	wrctl	ienable,r2
   3589c:	e0bffc17 	ldw	r2,-16(fp)
   358a0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   358a4:	e0bffd17 	ldw	r2,-12(fp)
   358a8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   358ac:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   358b0:	0001883a 	nop
}
   358b4:	e037883a 	mov	sp,fp
   358b8:	df000017 	ldw	fp,0(sp)
   358bc:	dec00104 	addi	sp,sp,4
   358c0:	f800283a 	ret

000358c4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   358c4:	defffc04 	addi	sp,sp,-16
   358c8:	df000315 	stw	fp,12(sp)
   358cc:	df000304 	addi	fp,sp,12
   358d0:	e13ffe15 	stw	r4,-8(fp)
   358d4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   358d8:	000530fa 	rdctl	r2,ienable
   358dc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   358e0:	00c00044 	movi	r3,1
   358e4:	e0bfff17 	ldw	r2,-4(fp)
   358e8:	1884983a 	sll	r2,r3,r2
   358ec:	1007883a 	mov	r3,r2
   358f0:	e0bffd17 	ldw	r2,-12(fp)
   358f4:	1884703a 	and	r2,r3,r2
   358f8:	1004c03a 	cmpne	r2,r2,zero
   358fc:	10803fcc 	andi	r2,r2,255
}
   35900:	e037883a 	mov	sp,fp
   35904:	df000017 	ldw	fp,0(sp)
   35908:	dec00104 	addi	sp,sp,4
   3590c:	f800283a 	ret

00035910 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   35910:	defff504 	addi	sp,sp,-44
   35914:	dfc00a15 	stw	ra,40(sp)
   35918:	df000915 	stw	fp,36(sp)
   3591c:	df000904 	addi	fp,sp,36
   35920:	e13ffc15 	stw	r4,-16(fp)
   35924:	e17ffd15 	stw	r5,-12(fp)
   35928:	e1bffe15 	stw	r6,-8(fp)
   3592c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   35930:	00bffa84 	movi	r2,-22
   35934:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   35938:	e0bffd17 	ldw	r2,-12(fp)
   3593c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   35940:	e0bff817 	ldw	r2,-32(fp)
   35944:	10800808 	cmpgei	r2,r2,32
   35948:	1000271e 	bne	r2,zero,359e8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3594c:	0005303a 	rdctl	r2,status
   35950:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   35954:	e0fffb17 	ldw	r3,-20(fp)
   35958:	00bfff84 	movi	r2,-2
   3595c:	1884703a 	and	r2,r3,r2
   35960:	1001703a 	wrctl	status,r2
  
  return context;
   35964:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   35968:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   3596c:	00800134 	movhi	r2,4
   35970:	10a72804 	addi	r2,r2,-25440
   35974:	e0fff817 	ldw	r3,-32(fp)
   35978:	180690fa 	slli	r3,r3,3
   3597c:	10c5883a 	add	r2,r2,r3
   35980:	e0fffe17 	ldw	r3,-8(fp)
   35984:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   35988:	00800134 	movhi	r2,4
   3598c:	10a72804 	addi	r2,r2,-25440
   35990:	e0fff817 	ldw	r3,-32(fp)
   35994:	180690fa 	slli	r3,r3,3
   35998:	10c5883a 	add	r2,r2,r3
   3599c:	10800104 	addi	r2,r2,4
   359a0:	e0ffff17 	ldw	r3,-4(fp)
   359a4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   359a8:	e0bffe17 	ldw	r2,-8(fp)
   359ac:	10000526 	beq	r2,zero,359c4 <alt_iic_isr_register+0xb4>
   359b0:	e0bff817 	ldw	r2,-32(fp)
   359b4:	100b883a 	mov	r5,r2
   359b8:	e13ffc17 	ldw	r4,-16(fp)
   359bc:	00357b00 	call	357b0 <alt_ic_irq_enable>
   359c0:	00000406 	br	359d4 <alt_iic_isr_register+0xc4>
   359c4:	e0bff817 	ldw	r2,-32(fp)
   359c8:	100b883a 	mov	r5,r2
   359cc:	e13ffc17 	ldw	r4,-16(fp)
   359d0:	00358380 	call	35838 <alt_ic_irq_disable>
   359d4:	e0bff715 	stw	r2,-36(fp)
   359d8:	e0bffa17 	ldw	r2,-24(fp)
   359dc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   359e0:	e0bff917 	ldw	r2,-28(fp)
   359e4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   359e8:	e0bff717 	ldw	r2,-36(fp)
}
   359ec:	e037883a 	mov	sp,fp
   359f0:	dfc00117 	ldw	ra,4(sp)
   359f4:	df000017 	ldw	fp,0(sp)
   359f8:	dec00204 	addi	sp,sp,8
   359fc:	f800283a 	ret

00035a00 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   35a00:	defff904 	addi	sp,sp,-28
   35a04:	dfc00615 	stw	ra,24(sp)
   35a08:	df000515 	stw	fp,20(sp)
   35a0c:	df000504 	addi	fp,sp,20
   35a10:	e13ffc15 	stw	r4,-16(fp)
   35a14:	e17ffd15 	stw	r5,-12(fp)
   35a18:	e1bffe15 	stw	r6,-8(fp)
   35a1c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   35a20:	e1bfff17 	ldw	r6,-4(fp)
   35a24:	e17ffe17 	ldw	r5,-8(fp)
   35a28:	e13ffd17 	ldw	r4,-12(fp)
   35a2c:	0033ebc0 	call	33ebc <open>
   35a30:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   35a34:	e0bffb17 	ldw	r2,-20(fp)
   35a38:	10001c16 	blt	r2,zero,35aac <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   35a3c:	008000f4 	movhi	r2,3
   35a40:	109bc404 	addi	r2,r2,28432
   35a44:	e0fffb17 	ldw	r3,-20(fp)
   35a48:	18c00324 	muli	r3,r3,12
   35a4c:	10c5883a 	add	r2,r2,r3
   35a50:	10c00017 	ldw	r3,0(r2)
   35a54:	e0bffc17 	ldw	r2,-16(fp)
   35a58:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   35a5c:	008000f4 	movhi	r2,3
   35a60:	109bc404 	addi	r2,r2,28432
   35a64:	e0fffb17 	ldw	r3,-20(fp)
   35a68:	18c00324 	muli	r3,r3,12
   35a6c:	10c5883a 	add	r2,r2,r3
   35a70:	10800104 	addi	r2,r2,4
   35a74:	10c00017 	ldw	r3,0(r2)
   35a78:	e0bffc17 	ldw	r2,-16(fp)
   35a7c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   35a80:	008000f4 	movhi	r2,3
   35a84:	109bc404 	addi	r2,r2,28432
   35a88:	e0fffb17 	ldw	r3,-20(fp)
   35a8c:	18c00324 	muli	r3,r3,12
   35a90:	10c5883a 	add	r2,r2,r3
   35a94:	10800204 	addi	r2,r2,8
   35a98:	10c00017 	ldw	r3,0(r2)
   35a9c:	e0bffc17 	ldw	r2,-16(fp)
   35aa0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   35aa4:	e13ffb17 	ldw	r4,-20(fp)
   35aa8:	00341480 	call	34148 <alt_release_fd>
  }
} 
   35aac:	0001883a 	nop
   35ab0:	e037883a 	mov	sp,fp
   35ab4:	dfc00117 	ldw	ra,4(sp)
   35ab8:	df000017 	ldw	fp,0(sp)
   35abc:	dec00204 	addi	sp,sp,8
   35ac0:	f800283a 	ret

00035ac4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   35ac4:	defffb04 	addi	sp,sp,-20
   35ac8:	dfc00415 	stw	ra,16(sp)
   35acc:	df000315 	stw	fp,12(sp)
   35ad0:	df000304 	addi	fp,sp,12
   35ad4:	e13ffd15 	stw	r4,-12(fp)
   35ad8:	e17ffe15 	stw	r5,-8(fp)
   35adc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   35ae0:	01c07fc4 	movi	r7,511
   35ae4:	01800044 	movi	r6,1
   35ae8:	e17ffd17 	ldw	r5,-12(fp)
   35aec:	010000f4 	movhi	r4,3
   35af0:	211bc704 	addi	r4,r4,28444
   35af4:	0035a000 	call	35a00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   35af8:	01c07fc4 	movi	r7,511
   35afc:	000d883a 	mov	r6,zero
   35b00:	e17ffe17 	ldw	r5,-8(fp)
   35b04:	010000f4 	movhi	r4,3
   35b08:	211bc404 	addi	r4,r4,28432
   35b0c:	0035a000 	call	35a00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   35b10:	01c07fc4 	movi	r7,511
   35b14:	01800044 	movi	r6,1
   35b18:	e17fff17 	ldw	r5,-4(fp)
   35b1c:	010000f4 	movhi	r4,3
   35b20:	211bca04 	addi	r4,r4,28456
   35b24:	0035a000 	call	35a00 <alt_open_fd>
}  
   35b28:	0001883a 	nop
   35b2c:	e037883a 	mov	sp,fp
   35b30:	dfc00117 	ldw	ra,4(sp)
   35b34:	df000017 	ldw	fp,0(sp)
   35b38:	dec00204 	addi	sp,sp,8
   35b3c:	f800283a 	ret

00035b40 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   35b40:	deffff04 	addi	sp,sp,-4
   35b44:	df000015 	stw	fp,0(sp)
   35b48:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   35b4c:	000170fa 	wrctl	ienable,zero
}
   35b50:	0001883a 	nop
   35b54:	e037883a 	mov	sp,fp
   35b58:	df000017 	ldw	fp,0(sp)
   35b5c:	dec00104 	addi	sp,sp,4
   35b60:	f800283a 	ret

00035b64 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   35b64:	defffb04 	addi	sp,sp,-20
   35b68:	df000415 	stw	fp,16(sp)
   35b6c:	df000404 	addi	fp,sp,16
   35b70:	e13ffe15 	stw	r4,-8(fp)
   35b74:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   35b78:	e0bfff17 	ldw	r2,-4(fp)
   35b7c:	10840070 	cmpltui	r2,r2,4097
   35b80:	1000021e 	bne	r2,zero,35b8c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   35b84:	00840004 	movi	r2,4096
   35b88:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   35b8c:	e0fffe17 	ldw	r3,-8(fp)
   35b90:	e0bfff17 	ldw	r2,-4(fp)
   35b94:	1885883a 	add	r2,r3,r2
   35b98:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   35b9c:	e0bffe17 	ldw	r2,-8(fp)
   35ba0:	e0bffc15 	stw	r2,-16(fp)
   35ba4:	00000506 	br	35bbc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   35ba8:	e0bffc17 	ldw	r2,-16(fp)
   35bac:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   35bb0:	e0bffc17 	ldw	r2,-16(fp)
   35bb4:	10800804 	addi	r2,r2,32
   35bb8:	e0bffc15 	stw	r2,-16(fp)
   35bbc:	e0fffc17 	ldw	r3,-16(fp)
   35bc0:	e0bffd17 	ldw	r2,-12(fp)
   35bc4:	18bff836 	bltu	r3,r2,35ba8 <__alt_mem_sdram_controller_0+0xc0035ba8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   35bc8:	e0bffe17 	ldw	r2,-8(fp)
   35bcc:	108007cc 	andi	r2,r2,31
   35bd0:	10000226 	beq	r2,zero,35bdc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   35bd4:	e0bffc17 	ldw	r2,-16(fp)
   35bd8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   35bdc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   35be0:	0001883a 	nop
   35be4:	e037883a 	mov	sp,fp
   35be8:	df000017 	ldw	fp,0(sp)
   35bec:	dec00104 	addi	sp,sp,4
   35bf0:	f800283a 	ret

00035bf4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   35bf4:	defffe04 	addi	sp,sp,-8
   35bf8:	df000115 	stw	fp,4(sp)
   35bfc:	df000104 	addi	fp,sp,4
   35c00:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   35c04:	e0bfff17 	ldw	r2,-4(fp)
   35c08:	10bffe84 	addi	r2,r2,-6
   35c0c:	10c00428 	cmpgeui	r3,r2,16
   35c10:	18001a1e 	bne	r3,zero,35c7c <alt_exception_cause_generated_bad_addr+0x88>
   35c14:	100690ba 	slli	r3,r2,2
   35c18:	008000f4 	movhi	r2,3
   35c1c:	10970b04 	addi	r2,r2,23596
   35c20:	1885883a 	add	r2,r3,r2
   35c24:	10800017 	ldw	r2,0(r2)
   35c28:	1000683a 	jmp	r2
   35c2c:	00035c6c 	andhi	zero,zero,3441
   35c30:	00035c6c 	andhi	zero,zero,3441
   35c34:	00035c7c 	xorhi	zero,zero,3441
   35c38:	00035c7c 	xorhi	zero,zero,3441
   35c3c:	00035c7c 	xorhi	zero,zero,3441
   35c40:	00035c6c 	andhi	zero,zero,3441
   35c44:	00035c74 	movhi	zero,3441
   35c48:	00035c7c 	xorhi	zero,zero,3441
   35c4c:	00035c6c 	andhi	zero,zero,3441
   35c50:	00035c6c 	andhi	zero,zero,3441
   35c54:	00035c7c 	xorhi	zero,zero,3441
   35c58:	00035c6c 	andhi	zero,zero,3441
   35c5c:	00035c74 	movhi	zero,3441
   35c60:	00035c7c 	xorhi	zero,zero,3441
   35c64:	00035c7c 	xorhi	zero,zero,3441
   35c68:	00035c6c 	andhi	zero,zero,3441
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   35c6c:	00800044 	movi	r2,1
   35c70:	00000306 	br	35c80 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   35c74:	0005883a 	mov	r2,zero
   35c78:	00000106 	br	35c80 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   35c7c:	0005883a 	mov	r2,zero
  }
}
   35c80:	e037883a 	mov	sp,fp
   35c84:	df000017 	ldw	fp,0(sp)
   35c88:	dec00104 	addi	sp,sp,4
   35c8c:	f800283a 	ret

00035c90 <atexit>:
   35c90:	200b883a 	mov	r5,r4
   35c94:	000f883a 	mov	r7,zero
   35c98:	000d883a 	mov	r6,zero
   35c9c:	0009883a 	mov	r4,zero
   35ca0:	0035d581 	jmpi	35d58 <__register_exitproc>

00035ca4 <exit>:
   35ca4:	defffe04 	addi	sp,sp,-8
   35ca8:	000b883a 	mov	r5,zero
   35cac:	dc000015 	stw	r16,0(sp)
   35cb0:	dfc00115 	stw	ra,4(sp)
   35cb4:	2021883a 	mov	r16,r4
   35cb8:	0035e700 	call	35e70 <__call_exitprocs>
   35cbc:	00800134 	movhi	r2,4
   35cc0:	10a03c04 	addi	r2,r2,-32528
   35cc4:	11000017 	ldw	r4,0(r2)
   35cc8:	20800f17 	ldw	r2,60(r4)
   35ccc:	10000126 	beq	r2,zero,35cd4 <exit+0x30>
   35cd0:	103ee83a 	callr	r2
   35cd4:	8009883a 	mov	r4,r16
   35cd8:	003357c0 	call	3357c <_exit>

00035cdc <memcmp>:
   35cdc:	01c000c4 	movi	r7,3
   35ce0:	3980192e 	bgeu	r7,r6,35d48 <memcmp+0x6c>
   35ce4:	2144b03a 	or	r2,r4,r5
   35ce8:	11c4703a 	and	r2,r2,r7
   35cec:	10000f26 	beq	r2,zero,35d2c <memcmp+0x50>
   35cf0:	20800003 	ldbu	r2,0(r4)
   35cf4:	28c00003 	ldbu	r3,0(r5)
   35cf8:	10c0151e 	bne	r2,r3,35d50 <memcmp+0x74>
   35cfc:	31bfff84 	addi	r6,r6,-2
   35d00:	01ffffc4 	movi	r7,-1
   35d04:	00000406 	br	35d18 <memcmp+0x3c>
   35d08:	20800003 	ldbu	r2,0(r4)
   35d0c:	28c00003 	ldbu	r3,0(r5)
   35d10:	31bfffc4 	addi	r6,r6,-1
   35d14:	10c00e1e 	bne	r2,r3,35d50 <memcmp+0x74>
   35d18:	21000044 	addi	r4,r4,1
   35d1c:	29400044 	addi	r5,r5,1
   35d20:	31fff91e 	bne	r6,r7,35d08 <__alt_mem_sdram_controller_0+0xc0035d08>
   35d24:	0005883a 	mov	r2,zero
   35d28:	f800283a 	ret
   35d2c:	20c00017 	ldw	r3,0(r4)
   35d30:	28800017 	ldw	r2,0(r5)
   35d34:	18bfee1e 	bne	r3,r2,35cf0 <__alt_mem_sdram_controller_0+0xc0035cf0>
   35d38:	31bfff04 	addi	r6,r6,-4
   35d3c:	21000104 	addi	r4,r4,4
   35d40:	29400104 	addi	r5,r5,4
   35d44:	39bff936 	bltu	r7,r6,35d2c <__alt_mem_sdram_controller_0+0xc0035d2c>
   35d48:	303fe91e 	bne	r6,zero,35cf0 <__alt_mem_sdram_controller_0+0xc0035cf0>
   35d4c:	003ff506 	br	35d24 <__alt_mem_sdram_controller_0+0xc0035d24>
   35d50:	10c5c83a 	sub	r2,r2,r3
   35d54:	f800283a 	ret

00035d58 <__register_exitproc>:
   35d58:	defffa04 	addi	sp,sp,-24
   35d5c:	dc000315 	stw	r16,12(sp)
   35d60:	04000134 	movhi	r16,4
   35d64:	84203c04 	addi	r16,r16,-32528
   35d68:	80c00017 	ldw	r3,0(r16)
   35d6c:	dc400415 	stw	r17,16(sp)
   35d70:	dfc00515 	stw	ra,20(sp)
   35d74:	18805217 	ldw	r2,328(r3)
   35d78:	2023883a 	mov	r17,r4
   35d7c:	10003726 	beq	r2,zero,35e5c <__register_exitproc+0x104>
   35d80:	10c00117 	ldw	r3,4(r2)
   35d84:	010007c4 	movi	r4,31
   35d88:	20c00e16 	blt	r4,r3,35dc4 <__register_exitproc+0x6c>
   35d8c:	1a000044 	addi	r8,r3,1
   35d90:	8800221e 	bne	r17,zero,35e1c <__register_exitproc+0xc4>
   35d94:	18c00084 	addi	r3,r3,2
   35d98:	18c7883a 	add	r3,r3,r3
   35d9c:	18c7883a 	add	r3,r3,r3
   35da0:	12000115 	stw	r8,4(r2)
   35da4:	10c7883a 	add	r3,r2,r3
   35da8:	19400015 	stw	r5,0(r3)
   35dac:	0005883a 	mov	r2,zero
   35db0:	dfc00517 	ldw	ra,20(sp)
   35db4:	dc400417 	ldw	r17,16(sp)
   35db8:	dc000317 	ldw	r16,12(sp)
   35dbc:	dec00604 	addi	sp,sp,24
   35dc0:	f800283a 	ret
   35dc4:	00800034 	movhi	r2,0
   35dc8:	10800004 	addi	r2,r2,0
   35dcc:	10002626 	beq	r2,zero,35e68 <__register_exitproc+0x110>
   35dd0:	01006404 	movi	r4,400
   35dd4:	d9400015 	stw	r5,0(sp)
   35dd8:	d9800115 	stw	r6,4(sp)
   35ddc:	d9c00215 	stw	r7,8(sp)
   35de0:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   35de4:	d9400017 	ldw	r5,0(sp)
   35de8:	d9800117 	ldw	r6,4(sp)
   35dec:	d9c00217 	ldw	r7,8(sp)
   35df0:	10001d26 	beq	r2,zero,35e68 <__register_exitproc+0x110>
   35df4:	81000017 	ldw	r4,0(r16)
   35df8:	10000115 	stw	zero,4(r2)
   35dfc:	02000044 	movi	r8,1
   35e00:	22405217 	ldw	r9,328(r4)
   35e04:	0007883a 	mov	r3,zero
   35e08:	12400015 	stw	r9,0(r2)
   35e0c:	20805215 	stw	r2,328(r4)
   35e10:	10006215 	stw	zero,392(r2)
   35e14:	10006315 	stw	zero,396(r2)
   35e18:	883fde26 	beq	r17,zero,35d94 <__alt_mem_sdram_controller_0+0xc0035d94>
   35e1c:	18c9883a 	add	r4,r3,r3
   35e20:	2109883a 	add	r4,r4,r4
   35e24:	1109883a 	add	r4,r2,r4
   35e28:	21802215 	stw	r6,136(r4)
   35e2c:	01800044 	movi	r6,1
   35e30:	12406217 	ldw	r9,392(r2)
   35e34:	30cc983a 	sll	r6,r6,r3
   35e38:	4992b03a 	or	r9,r9,r6
   35e3c:	12406215 	stw	r9,392(r2)
   35e40:	21c04215 	stw	r7,264(r4)
   35e44:	01000084 	movi	r4,2
   35e48:	893fd21e 	bne	r17,r4,35d94 <__alt_mem_sdram_controller_0+0xc0035d94>
   35e4c:	11006317 	ldw	r4,396(r2)
   35e50:	218cb03a 	or	r6,r4,r6
   35e54:	11806315 	stw	r6,396(r2)
   35e58:	003fce06 	br	35d94 <__alt_mem_sdram_controller_0+0xc0035d94>
   35e5c:	18805304 	addi	r2,r3,332
   35e60:	18805215 	stw	r2,328(r3)
   35e64:	003fc606 	br	35d80 <__alt_mem_sdram_controller_0+0xc0035d80>
   35e68:	00bfffc4 	movi	r2,-1
   35e6c:	003fd006 	br	35db0 <__alt_mem_sdram_controller_0+0xc0035db0>

00035e70 <__call_exitprocs>:
   35e70:	defff504 	addi	sp,sp,-44
   35e74:	df000915 	stw	fp,36(sp)
   35e78:	dd400615 	stw	r21,24(sp)
   35e7c:	dc800315 	stw	r18,12(sp)
   35e80:	dfc00a15 	stw	ra,40(sp)
   35e84:	ddc00815 	stw	r23,32(sp)
   35e88:	dd800715 	stw	r22,28(sp)
   35e8c:	dd000515 	stw	r20,20(sp)
   35e90:	dcc00415 	stw	r19,16(sp)
   35e94:	dc400215 	stw	r17,8(sp)
   35e98:	dc000115 	stw	r16,4(sp)
   35e9c:	d9000015 	stw	r4,0(sp)
   35ea0:	2839883a 	mov	fp,r5
   35ea4:	04800044 	movi	r18,1
   35ea8:	057fffc4 	movi	r21,-1
   35eac:	00800134 	movhi	r2,4
   35eb0:	10a03c04 	addi	r2,r2,-32528
   35eb4:	12000017 	ldw	r8,0(r2)
   35eb8:	45005217 	ldw	r20,328(r8)
   35ebc:	44c05204 	addi	r19,r8,328
   35ec0:	a0001c26 	beq	r20,zero,35f34 <__call_exitprocs+0xc4>
   35ec4:	a0800117 	ldw	r2,4(r20)
   35ec8:	15ffffc4 	addi	r23,r2,-1
   35ecc:	b8000d16 	blt	r23,zero,35f04 <__call_exitprocs+0x94>
   35ed0:	14000044 	addi	r16,r2,1
   35ed4:	8421883a 	add	r16,r16,r16
   35ed8:	8421883a 	add	r16,r16,r16
   35edc:	84402004 	addi	r17,r16,128
   35ee0:	a463883a 	add	r17,r20,r17
   35ee4:	a421883a 	add	r16,r20,r16
   35ee8:	e0001e26 	beq	fp,zero,35f64 <__call_exitprocs+0xf4>
   35eec:	80804017 	ldw	r2,256(r16)
   35ef0:	e0801c26 	beq	fp,r2,35f64 <__call_exitprocs+0xf4>
   35ef4:	bdffffc4 	addi	r23,r23,-1
   35ef8:	843fff04 	addi	r16,r16,-4
   35efc:	8c7fff04 	addi	r17,r17,-4
   35f00:	bd7ff91e 	bne	r23,r21,35ee8 <__alt_mem_sdram_controller_0+0xc0035ee8>
   35f04:	00800034 	movhi	r2,0
   35f08:	10800004 	addi	r2,r2,0
   35f0c:	10000926 	beq	r2,zero,35f34 <__call_exitprocs+0xc4>
   35f10:	a0800117 	ldw	r2,4(r20)
   35f14:	1000301e 	bne	r2,zero,35fd8 <__call_exitprocs+0x168>
   35f18:	a0800017 	ldw	r2,0(r20)
   35f1c:	10003226 	beq	r2,zero,35fe8 <__call_exitprocs+0x178>
   35f20:	a009883a 	mov	r4,r20
   35f24:	98800015 	stw	r2,0(r19)
   35f28:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   35f2c:	9d000017 	ldw	r20,0(r19)
   35f30:	a03fe41e 	bne	r20,zero,35ec4 <__alt_mem_sdram_controller_0+0xc0035ec4>
   35f34:	dfc00a17 	ldw	ra,40(sp)
   35f38:	df000917 	ldw	fp,36(sp)
   35f3c:	ddc00817 	ldw	r23,32(sp)
   35f40:	dd800717 	ldw	r22,28(sp)
   35f44:	dd400617 	ldw	r21,24(sp)
   35f48:	dd000517 	ldw	r20,20(sp)
   35f4c:	dcc00417 	ldw	r19,16(sp)
   35f50:	dc800317 	ldw	r18,12(sp)
   35f54:	dc400217 	ldw	r17,8(sp)
   35f58:	dc000117 	ldw	r16,4(sp)
   35f5c:	dec00b04 	addi	sp,sp,44
   35f60:	f800283a 	ret
   35f64:	a0800117 	ldw	r2,4(r20)
   35f68:	80c00017 	ldw	r3,0(r16)
   35f6c:	10bfffc4 	addi	r2,r2,-1
   35f70:	15c01426 	beq	r2,r23,35fc4 <__call_exitprocs+0x154>
   35f74:	80000015 	stw	zero,0(r16)
   35f78:	183fde26 	beq	r3,zero,35ef4 <__alt_mem_sdram_controller_0+0xc0035ef4>
   35f7c:	95c8983a 	sll	r4,r18,r23
   35f80:	a0806217 	ldw	r2,392(r20)
   35f84:	a5800117 	ldw	r22,4(r20)
   35f88:	2084703a 	and	r2,r4,r2
   35f8c:	10000b26 	beq	r2,zero,35fbc <__call_exitprocs+0x14c>
   35f90:	a0806317 	ldw	r2,396(r20)
   35f94:	2088703a 	and	r4,r4,r2
   35f98:	20000c1e 	bne	r4,zero,35fcc <__call_exitprocs+0x15c>
   35f9c:	89400017 	ldw	r5,0(r17)
   35fa0:	d9000017 	ldw	r4,0(sp)
   35fa4:	183ee83a 	callr	r3
   35fa8:	a0800117 	ldw	r2,4(r20)
   35fac:	15bfbf1e 	bne	r2,r22,35eac <__alt_mem_sdram_controller_0+0xc0035eac>
   35fb0:	98800017 	ldw	r2,0(r19)
   35fb4:	153fcf26 	beq	r2,r20,35ef4 <__alt_mem_sdram_controller_0+0xc0035ef4>
   35fb8:	003fbc06 	br	35eac <__alt_mem_sdram_controller_0+0xc0035eac>
   35fbc:	183ee83a 	callr	r3
   35fc0:	003ff906 	br	35fa8 <__alt_mem_sdram_controller_0+0xc0035fa8>
   35fc4:	a5c00115 	stw	r23,4(r20)
   35fc8:	003feb06 	br	35f78 <__alt_mem_sdram_controller_0+0xc0035f78>
   35fcc:	89000017 	ldw	r4,0(r17)
   35fd0:	183ee83a 	callr	r3
   35fd4:	003ff406 	br	35fa8 <__alt_mem_sdram_controller_0+0xc0035fa8>
   35fd8:	a0800017 	ldw	r2,0(r20)
   35fdc:	a027883a 	mov	r19,r20
   35fe0:	1029883a 	mov	r20,r2
   35fe4:	003fb606 	br	35ec0 <__alt_mem_sdram_controller_0+0xc0035ec0>
   35fe8:	0005883a 	mov	r2,zero
   35fec:	003ffb06 	br	35fdc <__alt_mem_sdram_controller_0+0xc0035fdc>
