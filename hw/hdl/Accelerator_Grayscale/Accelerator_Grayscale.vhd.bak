-- Accelerator_Grayscale.vhd
--
-- Authors : Guilhem Azzano and Pierre Fourcade


-- Description:
-- This file corresponds to the VHDL file of the DMA unit.

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- ENTITY ----------------------------------------------------------------------------

entity DMA_Mirror_Swap is
	GENERIC(	REG_DELAY : natural := 0);
	PORT   (	Clk    : in std_logic;
				nReset : in std_logic;
				-- Slave interface - Avalon Bus
				avs_Address    : in  std_logic_vector(2  downto 0);
				avs_ChipSelect : in  std_logic;
				avs_Read       : in  std_logic;
				avs_Write      : in  std_logic;
				avs_WriteData  : in  std_logic_vector(31 downto 0);
				avs_ReadData   : out std_logic_vector(31 downto 0);
				-- Master interface - Avalon Bus
				avm_WaitRequest   : in  std_logic;
				avm_ReadData      : in  std_logic_vector(31 downto 0);
				avm_WriteData     : out std_logic_vector(31 downto 0);
				avm_Read          : out std_logic;
				avm_Write         : out std_logic;
				avm_Address       : out std_logic_vector(31 downto 0);
				avm_ByteEnable    : out std_logic_vector(3  downto 0));
end entity DMA_Mirror_Swap;

--------------------------------------------------------------------------------------

-- ARCHITECTURE ----------------------------------------------------------------------

architecture Behavioral of DMA_Mirror_Swap is
	
	-- Wire declarations
	signal Enable_Wire         : std_logic;
	signal Done_Wire           : std_logic;
	signal Capture_Read_Wire   : std_logic;
	signal Capture_Write_Wire  : std_logic;
	signal Data_Read_Wire      : std_logic_vector(31 downto 0);
	signal Data_Write_Wire     : std_logic_vector(31 downto 0);
	signal Address_Wire        : std_logic_vector(31 downto 0);
	signal Length_Address_Wire : std_logic_vector(31 downto 0);
	
	BEGIN
	
		-------------------------------------------------------------------
		
		Slave : entity work.Slave_DMA_Mirror_Swap(Behavioral)
			PORT MAP(	Clk    => Clk,
							nReset => nReset,
							-- Slave interface - Avalon Bus
							avs_Address    => avs_Address,
							avs_ChipSelect => avs_ChipSelect,
							avs_Read       => avs_Read,
							avs_Write      => avs_Write,
							avs_WriteData  => avs_WriteData,
							avs_ReadData   => avs_ReadData,
							-- Slave interface - Master interface
							Done           => Done_Wire,
							Capture_Read   => Capture_Read_Wire,
							Capture_Write  => Capture_Write_Wire,
							Data_Read      => Data_Read_Wire,
							Data_Write     => Data_Write_Wire,
							Enable         => Enable_Wire,
							Address        => Address_Wire,
							Length_Address => Length_Address_Wire);
		
		-------------------------------------------------------------------
		
		Master : entity work.Master_DMA_Mirror_Swap(Behavioral)
			GENERIC MAP(	REG_DELAY => REG_DELAY)
			PORT MAP   (	Clk    => Clk,
								nReset => nReset,
								-- Master interface - Avalon Bus
								avm_WaitRequest   => avm_WaitRequest,
								avm_ReadData      => avm_ReadData,
								avm_WriteData     => avm_WriteData,
								avm_Read          => avm_Read,
								avm_Write         => avm_Write,
								avm_Address       => avm_Address,
								avm_ByteEnable    => avm_ByteEnable,
								-- Master interface - Slave interface
								Enable         => Enable_Wire,
								Address        => Address_Wire,
								Length_Address => Length_Address_Wire,
								Done           => Done_Wire,
								Capture_Read   => Capture_Read_Wire,
								Capture_Write  => Capture_Write_Wire,
								Data_Read      => Data_Read_Wire,
								Data_Write     => Data_Write_Wire);
		
		-------------------------------------------------------------------
				
end architecture Behavioral;